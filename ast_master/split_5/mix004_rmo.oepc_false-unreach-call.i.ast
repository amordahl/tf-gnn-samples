TranslationUnitDecl 0x56259716be18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56259716c6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56259716c3b0 '__int128'
|-TypedefDecl 0x56259716c748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56259716c3d0 'unsigned __int128'
|-TypedefDecl 0x56259716ca50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56259716c820 'struct __NSConstantString_tag'
|   `-Record 0x56259716c7a0 '__NSConstantString_tag'
|-TypedefDecl 0x56259716caf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56259716cab0 'char *'
|   `-BuiltinType 0x56259716beb0 'char'
|-TypedefDecl 0x5625971ab650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56259716cd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56259716cbd0 'struct __va_list_tag'
|     `-Record 0x56259716cb50 '__va_list_tag'
|-FunctionDecl 0x5625971ab790 <./split_5/mix004_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5625971ab6c0 <col:31> col:34 'int'
|-FunctionDecl 0x5625971ab958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5625971aba80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5625971abbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5625971abb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5625971abdf8 <col:40, col:99>
|   |-IfStmt 0x5625971abdc8 <col:42, col:88>
|   | |-UnaryOperator 0x5625971abca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5625971abc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5625971abc70 <col:47> 'int' lvalue ParmVar 0x5625971abb38 'expression' 'int'
|   | `-CompoundStmt 0x5625971abdb0 <col:59, col:88>
|   |   `-LabelStmt 0x5625971abd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5625971abd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5625971abd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5625971abcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5625971aba80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5625971abde0 <col:89>
|   `-ReturnStmt 0x5625971abde8 <col:91>
|-FunctionDecl 0x5625971abe40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5625971abf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5625971ac280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5625971abfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5625971ac038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5625971ac0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5625971ac138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5625971ac340 <line:10:22>
|-FunctionDecl 0x5625971d2390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5625971ac3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5625971ac430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5625971ac4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5625971ac530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5625971d2450 <line:13:22>
|-FunctionDecl 0x5625971d2700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5625971d24c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5625971d2540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5625971d25c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5625971d27b8 <line:15:22>
|-TypedefDecl 0x5625971d2828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56259716bf70 'unsigned char'
|-TypedefDecl 0x5625971d2898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56259716bf90 'unsigned short'
|-TypedefDecl 0x5625971d2908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56259716bfb0 'unsigned int'
|-TypedefDecl 0x5625971d2978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d29e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56259716bed0 'signed char'
|-TypedefDecl 0x5625971d2a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56259716bf70 'unsigned char'
|-TypedefDecl 0x5625971d2ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56259716bef0 'short'
|-TypedefDecl 0x5625971d2b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56259716bf90 'unsigned short'
|-TypedefDecl 0x5625971d2ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56259716bf10 'int'
|-TypedefDecl 0x5625971d2c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56259716bfb0 'unsigned int'
|-TypedefDecl 0x5625971d2c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d2cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d2d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d2dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d2e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d2eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56259716bfb0 'unsigned int'
|-TypedefDecl 0x5625971d2f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56259716bfb0 'unsigned int'
|-TypedefDecl 0x5625971d2f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d3008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d3078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56259716bfb0 'unsigned int'
|-TypedefDecl 0x5625971d30e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d3158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d31c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d3238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56259716bf10 'int'
|-RecordDecl 0x5625971d3290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5625971d3408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5625971d34c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5625971d3460 'struct __fsid_t' sugar
|   `-RecordType 0x5625971d3310 '__fsid_t'
|     `-Record 0x5625971d3290 ''
|-TypedefDecl 0x5625971d3548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d35b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d3628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d3698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56259716bfb0 'unsigned int'
|-TypedefDecl 0x5625971d3708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d3778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56259716bfb0 'unsigned int'
|-TypedefDecl 0x5625971d37e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d3858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56259716bf10 'int'
|-TypedefDecl 0x5625971d38c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56259716bf10 'int'
|-TypedefDecl 0x5625971d3938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56259716bf10 'int'
|-TypedefDecl 0x5625971d39a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56259716c630 'void *'
|   `-BuiltinType 0x56259716be70 'void'
|-TypedefDecl 0x5625971d3a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d3a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d3af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d3b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d3bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d3c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d3cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d3d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d3d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d3e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d3e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d3f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5625971d3ed0 '__off64_t' sugar
|   |-Typedef 0x5625971d31c8 '__off64_t'
|   `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d4000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5625971d3fc0 '__quad_t *'
|   `-TypedefType 0x5625971d3f60 '__quad_t' sugar
|     |-Typedef 0x5625971d2d68 '__quad_t'
|     `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d4070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56259716cab0 'char *'
|   `-BuiltinType 0x56259716beb0 'char'
|-TypedefDecl 0x5625971d40e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d4150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56259716bfb0 'unsigned int'
|-FunctionDecl 0x5625971d4298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5625971d41c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5625971d55e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5625971d55d8 <line:72:3, col:34>
|     `-CallExpr 0x5625971d5598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5625971d5580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5625971d5510 <col:10> '<builtin fn type>' Function 0x5625971d5380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5625971d55c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5625971d5530 <col:29> 'unsigned int' lvalue ParmVar 0x5625971d41c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5625971d5380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5625971d5420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5625971d5490 <col:10> Implicit
| `-ConstAttr 0x5625971d54e8 <col:10> Implicit
|-FunctionDecl 0x5625971d5740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5625971d5638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5625971d5a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5625971d5a48 <line:77:3, col:34>
|     `-CallExpr 0x5625971d5a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5625971d59f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5625971d5978 <col:10> '<builtin fn type>' Function 0x5625971d57e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5625971d5a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5625971d5998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5625971d5638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5625971d57e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5625971d5888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5625971d58f8 <col:10> Implicit
| `-ConstAttr 0x5625971d5950 <col:10> Implicit
|-TypedefDecl 0x5625971d5a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-TypedefDecl 0x5625971d5b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5625971d5ae0 '__time_t' sugar
|   |-Typedef 0x5625971d3708 '__time_t'
|   `-BuiltinType 0x56259716bf30 'long'
|-RecordDecl 0x5625971d5b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5625971d5c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5625971d5cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5625971d5d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5625971d5d10 '__pid_t' sugar
|   |-Typedef 0x5625971d3238 '__pid_t'
|   `-BuiltinType 0x56259716bf10 'int'
|-RecordDecl 0x5625971d5da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5625971d5e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5625971d5eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5625971d5f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5625971d5fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-RecordDecl 0x5625971d6030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5625971d62c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5625971d73a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5625971d6310 'struct cpu_set_t' sugar
|   `-RecordType 0x5625971d60b0 'cpu_set_t'
|     `-Record 0x5625971d6030 ''
|-FunctionDecl 0x5625971d7678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5625971d7448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5625971d7550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5625971d7728 <line:107:19>
|-FunctionDecl 0x5625971d7900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5625971d7790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5625971d79a8 <col:69>
|-FunctionDecl 0x5625971d7b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5625971d7a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5625971d7bc8 <col:64>
|-FunctionDecl 0x5625971d7e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5625971d7c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5625971d7d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5625971d7f38 <line:113:22>
|-FunctionDecl 0x5625971d81b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5625971d7fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5625971d8098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5625971d8268 <col:88>
|-FunctionDecl 0x5625971d8588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5625971d82d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5625971d83b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5625971d8440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5625971d8640 <col:62>
|-FunctionDecl 0x5625971d87b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5625971d86a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5625971d8860 <col:63>
|-FunctionDecl 0x5625971d8988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5625971d8a28 <col:47>
|-FunctionDecl 0x5625971d8b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5625971d8a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5625971d8bd8 <col:69>
|-FunctionDecl 0x5625971d8ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5625971d8c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5625971d8d88 <col:69>
|-FunctionDecl 0x5625971d9048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5625971d8df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5625971d8f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5625971d90f8 <col:88>
|-TypedefDecl 0x5625971d9188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5625971d9150 '__clock_t' sugar
|   |-Typedef 0x5625971d3548 '__clock_t'
|   `-BuiltinType 0x56259716bf30 'long'
|-TypedefDecl 0x5625971d9218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5625971d91e0 '__clockid_t' sugar
|   |-Typedef 0x5625971d3938 '__clockid_t'
|   `-BuiltinType 0x56259716bf10 'int'
|-TypedefDecl 0x5625971d92a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5625971d9270 '__timer_t' sugar
|   |-Typedef 0x5625971d39a8 '__timer_t'
|   `-PointerType 0x56259716c630 'void *'
|     `-BuiltinType 0x56259716be70 'void'
|-RecordDecl 0x5625971d9300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5625971d93d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5625971d9440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5625971d94a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5625971d9510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5625971d9578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5625971d95e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5625971d9648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5625971d96b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5625971d9718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5625971d9780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5625971d97e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5625971d9838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5625971d9908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5625971d9978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5625971d9a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5625971d9bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5625971d9c90 <col:45>
|-FunctionDecl 0x5625971d9e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5625971d9d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5625971d9f18 <col:54>
|-FunctionDecl 0x5625971da118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5625971d9f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5625971d9ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5625971da1c8 <line:157:22>
| `-ConstAttr 0x5625971da220 <col:63>
|-FunctionDecl 0x5625971db050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5625971da318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5625971db0f8 <col:56>
|-FunctionDecl 0x5625971db4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5625971db168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5625971db1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5625971db260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5625971db358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5625971db560 <col:54>
|-RecordDecl 0x5625971db5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5625971db668 parent 0x56259716be18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5625971db8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5625971db968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5625971db9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5625971dba38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5625971dbb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5625971dbc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5625971dbbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5625971dbb80 'struct __locale_struct' sugar
|     `-RecordType 0x5625971db640 'struct __locale_struct'
|       `-Record 0x5625971db5b8 '__locale_struct'
|-TypedefDecl 0x5625971dbcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5625971dbcc0 '__locale_t' sugar
|   |-Typedef 0x5625971dbc48 '__locale_t'
|   `-PointerType 0x5625971dbbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5625971dbb80 'struct __locale_struct' sugar
|       `-RecordType 0x5625971db640 'struct __locale_struct'
|         `-Record 0x5625971db5b8 '__locale_struct'
|-FunctionDecl 0x5625971dd110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5625971dbd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5625971dbde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5625971dbe60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5625971dbef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5625971dbf68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5625971dd1d8 <col:40>
|-FunctionDecl 0x5625971dd3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5625971dd2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5625971dd470 <col:66>
|-FunctionDecl 0x5625971dd580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5625971dd4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5625971dd628 <col:69>
|-FunctionDecl 0x5625971dd858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5625971dd690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5625971dd720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5625971dd908 <col:52>
|-FunctionDecl 0x5625971ddab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5625971dd970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5625971dda00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5625971ddb60 <col:55>
|-FunctionDecl 0x5625971ddcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5625971ddbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5625971ddda0 <col:62>
|-FunctionDecl 0x5625971ddf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5625971dde08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5625971ddfc0 <col:60>
|-FunctionDecl 0x5625971de2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5625971de118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5625971de198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5625971de368 <col:44>
|-FunctionDecl 0x5625971de578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5625971de3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5625971de450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5625971de628 <col:49>
|-VarDecl 0x5625971de728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5625971de7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5625971de828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5625971de8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5625971dea20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5625971deac0 <col:42>
|-VarDecl 0x5625971deb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5625971debb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5625971ded38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5625971dec28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5625971dede0 <col:57>
|-FunctionDecl 0x5625971deef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5625971dee60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5625971def98 <col:56>
|-FunctionDecl 0x5625971df0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5625971df018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5625971df178 <col:59>
|-FunctionDecl 0x5625971df280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5625971df1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5625971df328 <col:48>
| `-ConstAttr 0x5625971df380 <col:89>
|-FunctionDecl 0x5625971df5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5625971df438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5625971df4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5625971df848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5625971df6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5625971df768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5625971df8f8 <col:88>
|-FunctionDecl 0x5625971dfa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5625971df960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5625971df9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5625971dfb40 <col:88>
|-FunctionDecl 0x5625971dfd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5625971dfba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5625971dfc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5625971dfe08 <line:208:22>
|-FunctionDecl 0x5625971e0178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5625971dfe70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5625971dfef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5625971dff80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5625971e0010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5625971e0478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5625971e0278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5625971e0350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5625971e0528 <col:85>
|-FunctionDecl 0x5625971e0918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5625971e0590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5625971e06c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5625971e07d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5625971e09d0 <col:52>
|-FunctionDecl 0x5625971e0b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5625971e0a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5625971e0bf0 <col:61>
|-FunctionDecl 0x5625971e10f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5625971e0c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5625971e0cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5625971e0e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5625971e0ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5625971e11b0 <col:62>
|-FunctionDecl 0x5625971e13c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5625971e1218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5625971e12a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5625971e1478 <line:221:22>
|-FunctionDecl 0x5625971e1578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5625971e14e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5625971e1620 <col:65>
|-TypedefDecl 0x5625971e1690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56259716bfd0 'unsigned long'
|-RecordDecl 0x5625971e16e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5625971e1830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5625971e1898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5625971e1948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5625971e18f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5625971e1770 'union pthread_attr_t'
|     `-Record 0x5625971e16e8 'pthread_attr_t'
|-RecordDecl 0x5625971e19a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5625971e1b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5625971e1b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5625971e1c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5625971e1be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5625971e1a20 'struct __pthread_internal_list'
|     `-Record 0x5625971e19a0 '__pthread_internal_list'
|-RecordDecl 0x5625971e1cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5625971e1d58 parent 0x56259716be18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5625971e1e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5625971e1e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5625971e1f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5625971e1f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5625971e1fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5625971e2038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5625971e6110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5625971e61c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5625971e62b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5625971e6318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5625971e64a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5625971e6440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5625971e1d30 'pthread_mutex_t'
|     `-Record 0x5625971e1cb0 ''
|-RecordDecl 0x5625971e6510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5625971e6650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5625971e66b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5625971e6770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5625971e6710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5625971e6590 'pthread_mutexattr_t'
|     `-Record 0x5625971e6510 ''
|-RecordDecl 0x5625971e67e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5625971e6888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5625971e6950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5625971e69b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5625971e6a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5625971e6a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5625971e6af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5625971e6b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5625971e6bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5625971e6c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5625971e6ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_5/mix004_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_5/mix004_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5625971e6dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5625971e6e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5625971e6f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5625971e6f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5625971e6860 'pthread_cond_t'
|     `-Record 0x5625971e67e0 ''
|-RecordDecl 0x5625971e6fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5625971e8130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5625971e8198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5625971e8250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5625971e81f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5625971e7060 'pthread_condattr_t'
|     `-Record 0x5625971e6fe0 ''
|-TypedefDecl 0x5625971e82d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56259716bfb0 'unsigned int'
|-TypedefDecl 0x5625971e8348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56259716bf10 'int'
|-RecordDecl 0x5625971e83a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5625971e8448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5625971e8510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5625971e8578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5625971e85e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5625971e8648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5625971e86b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5625971e8718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5625971e8780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5625971e87e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5625971e8850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5625971e88b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5625971e8920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5625971e89d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_5/mix004_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_5/mix004_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5625971e8a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5625971e8ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5625971e8c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5625971e8bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5625971e8420 'pthread_rwlock_t'
|     `-Record 0x5625971e83a0 ''
|-RecordDecl 0x5625971e8ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5625971e8de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5625971e8e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5625971e8f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5625971e8ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5625971e8d20 'pthread_rwlockattr_t'
|     `-Record 0x5625971e8ca0 ''
|-TypedefDecl 0x5625971e8f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56259716bf14 'volatile int' volatile
|   `-BuiltinType 0x56259716bf10 'int'
|-RecordDecl 0x5625971e8fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5625971ea140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5625971ea1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5625971ea260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5625971ea200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5625971e9060 'pthread_barrier_t'
|     `-Record 0x5625971e8fe0 ''
|-RecordDecl 0x5625971ea2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5625971ea3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5625971ea438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5625971ea4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5625971ea490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5625971ea350 'pthread_barrierattr_t'
|     `-Record 0x5625971ea2d0 ''
|-TypedefDecl 0x5625971ea608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5625971ea5a0 'long [8]' 8 
|   `-BuiltinType 0x56259716bf30 'long'
|-EnumDecl 0x5625971ea660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5625971ea728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5625971ea778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5625971ea7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5625971ea898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5625971ea8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5625971ea938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5625971ea988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5625971eaa10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5625971ea9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5625971ea9d8 <col:26> 'int' EnumConstant 0x5625971ea898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5625971eaa98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5625971eaa80 <col:29> 'int'
| |   `-DeclRefExpr 0x5625971eaa60 <col:29> 'int' EnumConstant 0x5625971ea8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5625971eab20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5625971eab08 <col:30> 'int'
| |   `-DeclRefExpr 0x5625971eaae8 <col:30> 'int' EnumConstant 0x5625971ea938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5625971eaba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5625971eab90 <col:27> 'int'
|     `-DeclRefExpr 0x5625971eab70 <col:27> 'int' EnumConstant 0x5625971eaa10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5625971eabf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5625971eacc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5625971ead50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5625971ead38 <col:30> 'int'
| |   `-DeclRefExpr 0x5625971ead18 <col:30> 'int' EnumConstant 0x5625971eacc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5625971eada0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5625971eae28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5625971eae10 <col:29> 'int'
|     `-DeclRefExpr 0x5625971eadf0 <col:29> 'int' EnumConstant 0x5625971eada0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5625971eae78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5625971eaf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5625971eaf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5625971eafe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5625971eb038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5625971eb150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5625971eb1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5625971eb1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5625971eb278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5625971eb260 <col:31> 'int'
|     `-DeclRefExpr 0x5625971eb240 <col:31> 'int' EnumConstant 0x5625971eb150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5625971eb2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5625971eb398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5625971eb3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5625971eb438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5625971eb508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5625971eb558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5625971eb5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5625971eb678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5625971eb6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5625971eb718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5625971eb958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5625971eb9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5625971eba28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5625971ebb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5625971ebb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5625971ebc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5625971ebcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5625971ebd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5625971ebdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5625971ebe28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5625971ec488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5625971ebf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5625971ec030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625971ec270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5625971ec2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5625971ec548 <col:47>
| |-NonNullAttr 0x5625971ec5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5625971ec5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5625971ec700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5625971ec630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5625971ec958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5625971ec7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5625971ec838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5625971ecb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5625971eca18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5625971ecbd0 <col:60>
|-FunctionDecl 0x5625971ecd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5625971ecdc0 <col:54>
| `-ConstAttr 0x5625971ece18 <col:95>
|-FunctionDecl 0x5625971ecfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5625971ece50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5625971ecec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5625971ed098 <line:394:19>
| `-ConstAttr 0x5625971ed0f0 <col:60>
|-FunctionDecl 0x5625971eeb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5625971ee9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5625971eebb0 <col:71>
| `-NonNullAttr 0x5625971eec08 <col:112, col:126> 1
|-FunctionDecl 0x5625971eed10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5625971eec58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5625971eedb8 <line:397:22>
| `-NonNullAttr 0x5625971eee10 <col:63, col:77> 1
|-FunctionDecl 0x5625971ef038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5625971eee58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5625971eeed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5625971ef0e8 <line:400:22>
| `-NonNullAttr 0x5625971ef140 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971ef348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5625971ef188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625971ef208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5625971ef3f8 <line:403:22>
| `-NonNullAttr 0x5625971ef450 <col:63, col:77> 1
|-FunctionDecl 0x5625971ef6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5625971ef498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5625971ef540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5625971ef758 <line:406:22>
| `-NonNullAttr 0x5625971ef7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971f09e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5625971ef7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625971ef870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5625971f0a98 <line:409:22>
| `-NonNullAttr 0x5625971f0af0 <col:63, col:77> 1
|-FunctionDecl 0x5625971f0d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5625971f0b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625971f0bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5625971f0dd8 <line:412:22>
| `-NonNullAttr 0x5625971f0e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971f1068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5625971f0e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625971f0f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5625971f1118 <col:37>
| `-NonNullAttr 0x5625971f1170 <col:78, col:95> 1 2
|-FunctionDecl 0x5625971f1358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625971f11b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625971f1238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5625971f1408 <line:418:22>
| `-NonNullAttr 0x5625971f1460 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971f15e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5625971f14a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625971f1528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5625971f1698 <line:420:22>
| `-NonNullAttr 0x5625971f16f0 <col:63, col:77> 1
|-FunctionDecl 0x5625971f1898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625971f1738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625971f17b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5625971f1948 <line:423:22>
| `-NonNullAttr 0x5625971f19c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971f1b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5625971f1a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625971f1a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5625971f1bf8 <line:426:22>
| `-NonNullAttr 0x5625971f1c50 <col:63, col:77> 1
|-FunctionDecl 0x5625971f1df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625971f1c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625971f1d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5625971f1ea8 <line:429:22>
| `-NonNullAttr 0x5625971f1f00 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971f2088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5625971f1f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625971f1fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5625971f2138 <line:431:22>
| `-NonNullAttr 0x5625971f2190 <col:63, col:77> 1
|-FunctionDecl 0x5625971f23b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5625971f21d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625971f2258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5625971f2468 <line:434:22>
| |-NonNullAttr 0x5625971f24c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5625971f24f8 <col:100> "" ""
|-FunctionDecl 0x5625971f2708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5625971f2548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625971f25c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5625971f27b8 <line:437:22>
| |-NonNullAttr 0x5625971f2810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5625971f2848 <col:97> "" ""
|-FunctionDecl 0x5625971f2a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5625971f2898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625971f2910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5625971f2af8 <line:440:22>
| `-NonNullAttr 0x5625971f2b50 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971f2cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5625971f2b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625971f2c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5625971f2d80 <line:443:22>
| `-NonNullAttr 0x5625971f2dd8 <col:63, col:77> 1
|-FunctionDecl 0x5625971f30c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5625971f2e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625971f2ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5625971f2f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5625971f3180 <line:447:22>
| `-NonNullAttr 0x5625971f31d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5625971f3488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5625971f3230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625971f32b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5625971f3328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5625971f3540 <col:43>
| `-NonNullAttr 0x5625971f3598 <col:84, col:98> 1
|-FunctionDecl 0x5625971f3858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5625971f35e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5625971f3668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5625971f36f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5625971f3910 <line:452:22>
| `-NonNullAttr 0x5625971f3968 <col:63, col:77> 3
|-FunctionDecl 0x5625971f3c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5625971f39e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5625971f3a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5625971f3af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5625971f3d30 <line:456:22>
| `-NonNullAttr 0x5625971f3d88 <col:63, col:80> 2 3
|-FunctionDecl 0x5625971f3f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5625971f3dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5625971f3e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5625971f4028 <line:458:22>
|-FunctionDecl 0x5625971f43f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5625971f40f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5625971f4290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5625971f44a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5625971f4650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5625971f4530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5625971f45b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5625971f4838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5625971f4718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5625971f4798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5625971f49f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5625971f48f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5625971f4b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5625971f4bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5625971f4c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5625971f4d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5625971f4dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5625971f4fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_5/mix004_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5625971f5098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5625971f5150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5625971f50f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5625971f4c50 '__pthread_unwind_buf_t'
| |   `-Record 0x5625971f4bd0 ''
| `-AlignedAttr 0x5625971f51a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5625971f5220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5625971f5380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5625971f53e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5625971f5450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5625971f54b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5625971f56c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5625971f55b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5625971f5808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5625971f5778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5625971f5a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5625971f58c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5625971f5aa8 <line:487:22>
|-RecordDecl 0x5625971f5b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5625971f5e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5625971f5c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5625971f5cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5625971f5ec8 <col:86>
| `-ReturnsTwiceAttr 0x5625971f5f20 <col:12> Implicit
|-FunctionDecl 0x5625971f6248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5625971f5ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5625971f6100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5625971f62f8 <line:493:22>
| `-NonNullAttr 0x5625971f6350 <col:63, col:77> 1
|-FunctionDecl 0x5625971f64c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5625971f6398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5625971f6570 <line:495:22>
| `-NonNullAttr 0x5625971f65c8 <col:63, col:77> 1
|-FunctionDecl 0x5625971f66d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5625971f6618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5625971f6778 <line:497:22>
| `-NonNullAttr 0x5625971f67d0 <col:52, col:66> 1
|-FunctionDecl 0x5625971f68d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5625971f6818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5625971f6978 <line:499:22>
| `-NonNullAttr 0x5625971f69d0 <col:52, col:66> 1
|-FunctionDecl 0x5625971f7c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5625971f7a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5625971f7ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5625971f7cd8 <col:36>
| `-NonNullAttr 0x5625971f7d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5625971f7e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5625971f7d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5625971f7ed8 <line:504:22>
| `-NonNullAttr 0x5625971f7f30 <col:52, col:66> 1
|-FunctionDecl 0x5625971f81c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625971f7fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5625971f8060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5625971f8278 <line:508:22>
| `-NonNullAttr 0x5625971f82d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971f8598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5625971f8318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5625971f8398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5625971f8418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5625971f8650 <line:512:22>
| `-NonNullAttr 0x5625971f86a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5625971f87b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5625971f86f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5625971f8858 <line:514:22>
| `-NonNullAttr 0x5625971f88b0 <col:63, col:77> 1
|-FunctionDecl 0x5625971f8ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5625971f8960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5625971f8b80 <line:516:22>
| `-NonNullAttr 0x5625971f8bd8 <col:63, col:77> 1
|-FunctionDecl 0x5625971f8ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5625971f8c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5625971f8d88 <line:518:22>
| `-NonNullAttr 0x5625971f8de0 <col:63, col:77> 1
|-FunctionDecl 0x5625971f9008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625971f8e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5625971f8ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5625971f90b8 <line:522:22>
| `-NonNullAttr 0x5625971f9110 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971f9318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5625971f9158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625971f91d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5625971f93c8 <line:525:22>
| `-NonNullAttr 0x5625971f9420 <col:63, col:77> 1
|-FunctionDecl 0x5625971f95c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625971f9468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5625971f94e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5625971f9678 <line:528:22>
| `-NonNullAttr 0x5625971f96d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971f9858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5625971f9718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625971f9798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5625971f9908 <line:530:22>
| `-NonNullAttr 0x5625971f9960 <col:63, col:77> 1
|-FunctionDecl 0x5625971f9b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625971f99a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5625971f9a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5625971f9bd0 <line:534:22>
| `-NonNullAttr 0x5625971f9c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971f9db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5625971f9c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625971f9cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5625971f9e68 <line:537:22>
| `-NonNullAttr 0x5625971f9ec0 <col:63, col:77> 1
|-FunctionDecl 0x5625971fa068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625971f9f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5625971f9f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5625971fa118 <line:541:22>
| `-NonNullAttr 0x5625971fa170 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971fa2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5625971fa1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625971fa238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5625971fa3a8 <line:544:22>
| `-NonNullAttr 0x5625971fa400 <col:63, col:77> 1
|-FunctionDecl 0x5625971fa5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5625971fa448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625971fa4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5625971fa698 <line:547:22>
| `-NonNullAttr 0x5625971fa6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971fa878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5625971fa738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625971fa7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5625971fa928 <line:550:22>
| `-NonNullAttr 0x5625971fa980 <col:63, col:77> 1
|-FunctionDecl 0x5625971fbcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5625971fbaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5625971fbbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5625971fbda8 <col:29>
| `-NonNullAttr 0x5625971fbe00 <col:70, col:84> 1
|-FunctionDecl 0x5625971fbf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625971fbe48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625971fc020 <line:555:22>
| `-NonNullAttr 0x5625971fc078 <col:63, col:77> 1
|-FunctionDecl 0x5625971fc180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625971fc0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625971fc228 <line:557:22>
| `-NonNullAttr 0x5625971fc280 <col:52, col:66> 1
|-FunctionDecl 0x5625971fc380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625971fc2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625971fc428 <line:559:19>
| `-NonNullAttr 0x5625971fc480 <col:49, col:63> 1
|-FunctionDecl 0x5625971fc6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5625971fc4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5625971fc558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5625971fc768 <col:39>
| `-NonNullAttr 0x5625971fc7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5625971fc8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625971fc808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625971fc968 <line:564:22>
| `-NonNullAttr 0x5625971fc9c0 <col:52, col:66> 1
|-FunctionDecl 0x5625971fcb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625971fca70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625971fcbd0 <line:566:22>
| `-NonNullAttr 0x5625971fcc28 <col:52, col:66> 1
|-FunctionDecl 0x5625971fcde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5625971fcc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5625971fcd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5625971fce98 <col:39>
| `-NonNullAttr 0x5625971fcef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5625971fcff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625971fcf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625971fd098 <line:571:22>
| `-NonNullAttr 0x5625971fd0f0 <col:52, col:66> 1
|-FunctionDecl 0x5625971fd2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5625971fd1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5625971fd380 <line:573:22>
| `-NonNullAttr 0x5625971fd3d8 <col:63, col:77> 1
|-FunctionDecl 0x5625971fd4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5625971fd428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5625971fd588 <line:575:22>
| `-NonNullAttr 0x5625971fd5e0 <col:63, col:77> 1
|-FunctionDecl 0x5625971fd808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625971fd628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5625971fd6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5625971fd8b8 <line:579:22>
| `-NonNullAttr 0x5625971fd910 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971fdb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5625971fd958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5625971fd9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5625971fdbe8 <line:582:22>
| `-NonNullAttr 0x5625971fdc40 <col:63, col:77> 1
|-FunctionDecl 0x5625971fdde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625971fdc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5625971fdd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5625971fde98 <line:586:22>
| `-NonNullAttr 0x5625971fdef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971fe078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5625971fdf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5625971fdfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5625971fe128 <col:36>
| `-NonNullAttr 0x5625971fe180 <col:77, col:91> 1
|-FunctionDecl 0x5625971fe4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5625971fe260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5625971fe370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5625971fe568 <line:591:22>
| `-NonNullAttr 0x5625971fe5c0 <col:63, col:77> 1
|-FunctionDecl 0x5625971fe738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5625971fe608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5625971fe7e0 <line:593:22>
| `-NonNullAttr 0x5625971fe838 <col:63, col:77> 1
|-FunctionDecl 0x5625971fe940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5625971fe888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5625971fe9e8 <line:595:22>
| `-NonNullAttr 0x5625971fea40 <col:52, col:66> 1
|-FunctionDecl 0x5625971feb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5625971feaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5625971fec00 <line:597:22>
| `-NonNullAttr 0x5625971fec58 <col:52, col:66> 1
|-FunctionDecl 0x5625971fee88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5625971feca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5625971fed20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5625971fef38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5625971ff268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5625971fefb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5625971ff030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5625971ff0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5625971ff320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5625971ff538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5625971ff400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5625971ff5e0 <line:606:22>
| `-NonNullAttr 0x5625971ff638 <col:63, col:77> 1
|-FunctionDecl 0x5625971ff740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5625971ff688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5625971ff7e8 <line:608:22>
| `-NonNullAttr 0x5625971ff840 <col:63, col:77> 1
|-FunctionDecl 0x5625971ffaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625971ff888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5625971ff908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5625971ffb50 <line:612:22>
| `-NonNullAttr 0x5625971ffba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5625971ffdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5625971ffbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5625971ffc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5625971ffe68 <col:37>
| `-NonNullAttr 0x5625971ffec0 <col:78, col:92> 1
|-FunctionDecl 0x5625972000d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5625971fff08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5625971fffb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562597200188 <line:618:22>
| `-NonNullAttr 0x5625972001e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625972003a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562597200228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5625972002a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562597200458 <line:621:22>
| `-NonNullAttr 0x5625972004b0 <col:63, col:77> 1
|-FunctionDecl 0x562597200758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562597200590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562597200610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562597200808 <line:623:22>
| `-NonNullAttr 0x562597200860 <col:63, col:77> 1
|-FunctionDecl 0x5625972009d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5625972008a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562597200ab0 <line:625:22>
| `-NonNullAttr 0x562597200b08 <col:63, col:77> 1
|-FunctionDecl 0x562597200c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562597200b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562597200cb8 <line:627:22>
| `-NonNullAttr 0x562597200d10 <col:52, col:66> 1
|-FunctionDecl 0x562597200e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562597200d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562597200eb8 <line:629:22>
| `-NonNullAttr 0x562597200f10 <col:52, col:66> 1
|-FunctionDecl 0x562597201010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562597200f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5625972010b8 <line:631:22>
| `-NonNullAttr 0x562597201110 <col:52, col:66> 1
|-FunctionDecl 0x5625972014e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5625972011f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562597201300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562597201380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5625972015a0 <line:635:22>
| `-NonNullAttr 0x5625972015f8 <col:63, col:77> 1
|-FunctionDecl 0x562597201778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562597201648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562597201820 <line:637:22>
| `-NonNullAttr 0x562597201878 <col:63, col:77> 1
|-FunctionDecl 0x562597201980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5625972018c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562597201a28 <line:639:22>
| `-NonNullAttr 0x562597201a80 <col:52, col:66> 1
|-FunctionDecl 0x562597202c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562597202b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562597202d30 <line:641:22>
| `-NonNullAttr 0x562597202d88 <col:63, col:77> 1
|-FunctionDecl 0x562597202e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562597202dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562597202f38 <line:643:22>
| `-NonNullAttr 0x562597202f90 <col:63, col:77> 1
|-FunctionDecl 0x5625972031b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562597202fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562597203058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562597203268 <line:647:22>
| `-NonNullAttr 0x5625972032c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625972034c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562597203308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562597203388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562597203578 <line:650:22>
| `-NonNullAttr 0x5625972035d0 <col:63, col:77> 1
|-FunctionDecl 0x562597203918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5625972036b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5625972037d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5625972039c8 <line:653:22>
| `-NonNullAttr 0x562597203a20 <col:63, col:77> 1
|-FunctionDecl 0x562597203b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562597203a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562597203c30 <col:69>
|-FunctionDecl 0x562597203da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562597203c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562597203e50 <col:72>
|-FunctionDecl 0x562597204088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562597203eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562597203f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562597204138 <col:44>
|-FunctionDecl 0x562597204358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5625972041a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562597204218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562597204408 <line:660:22>
| `-NonNullAttr 0x562597204460 <col:63, col:77> 2
|-FunctionDecl 0x5625972048a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562597204540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562597204650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562597204760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562597204960 <col:47>
|-FunctionDecl 0x562597204af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5625972049d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562597204c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562597204bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562597204da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x562597204d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562597204ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x562597204e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562597204fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562597205080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562597205140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5625972051f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562597205278 prev 0x5625972051f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5625972052e0 <col:24> 'int' 0
|-VarDecl 0x562597205318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x562597205398 prev 0x562597205318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x562597205400 <col:27> 'int' 0
|-VarDecl 0x562597205438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5625972054b8 prev 0x562597205438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x562597205520 <col:27> 'int' 0
|-VarDecl 0x562597205558 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5625972055d8 prev 0x562597205558 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x562597205640 <col:27> 'int' 0
|-VarDecl 0x562597205678 <line:680:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5625972056f8 prev 0x562597205678 <line:681:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x562597205760 <col:27> 'int' 0
|-VarDecl 0x562597205798 <line:682:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x562597205818 prev 0x562597205798 <line:683:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x562597205880 <col:27> 'int' 0
|-VarDecl 0x5625972058b8 <line:684:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x562597205938 prev 0x5625972058b8 <line:685:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5625972059a0 <col:27> 'int' 0
|-VarDecl 0x5625972059d8 <line:686:1, col:5> col:5 used a 'int'
|-VarDecl 0x562597205a58 prev 0x5625972059d8 <line:687:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x562597205ac0 <col:9> 'int' 0
|-VarDecl 0x562597205b00 <line:688:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x562597205b80 <line:689:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x562597205bf8 <line:690:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x562597205c70 <line:691:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x562597205ce8 <line:692:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x562597205d60 <line:693:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x562597205dd8 <line:694:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x562597205e50 <line:695:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x562597205ec8 <line:696:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x562597205f40 <line:697:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x562597205fb8 <line:698:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x562597206030 <line:699:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x5625972060a8 <line:700:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x562597206128 <line:701:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x5625972061a8 <line:702:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x562597206220 <line:703:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x5625972062a0 <line:704:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x562597206318 <line:705:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x562597206390 <line:706:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562597206408 <line:707:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562597206488 <line:708:1, col:5> col:5 used x 'int'
|-VarDecl 0x562597206508 prev 0x562597206488 <line:709:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562597206570 <col:9> 'int' 0
|-VarDecl 0x5625972065a8 <line:710:1, col:5> col:5 used y 'int'
|-VarDecl 0x562597206628 prev 0x5625972065a8 <line:711:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562597206690 <col:9> 'int' 0
|-VarDecl 0x5625972066c8 <line:712:1, col:5> col:5 used z 'int'
|-VarDecl 0x562597206748 prev 0x5625972066c8 <line:713:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5625972067b0 <col:9> 'int' 0
|-VarDecl 0x5625972067e0 <line:714:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562597206858 <line:715:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562597206970 prev 0x562597204af0 <line:716:1, line:745:1> line:716:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5625972068d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562597208228 <line:717:1, line:745:1>
|   |-CallExpr 0x562597206a88 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562597206a70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597206a18 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562597206b10 <line:719:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562597206aa8 <col:3> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562597206ae8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562597206ac8 <col:15> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x562597206b70 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562597206b30 <col:3> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x562597206b50 <col:15> 'int' 1
|   |-BinaryOperator 0x562597206be8 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562597206b90 <col:3> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562597206bd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562597206bb0 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562597206c80 <line:722:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562597206c08 <col:3> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562597206c58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562597206c28 <col:27> 'int' 1
|   |-CallExpr 0x562597206e08 <line:723:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562597206df0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562597206ca0 <col:3> 'void (int)' Function 0x5625971abbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562597206da0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562597206d80 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562597206d60 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562597206d18 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562597206d00 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562597206cc0 <col:23> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562597206d48 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562597206d30 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562597206ce0 <col:41> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562597206e88 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562597206e30 <col:3> '_Bool' lvalue Var 0x562597205e50 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562597206e70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562597206e50 <col:20> '_Bool' lvalue Var 0x562597205bf8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562597206f00 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562597206ea8 <col:3> '_Bool' lvalue Var 0x562597205ec8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562597206ee8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562597206ec8 <col:20> '_Bool' lvalue Var 0x562597205c70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562597206f78 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562597206f20 <col:3> '_Bool' lvalue Var 0x562597205f40 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562597206f60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562597206f40 <col:20> '_Bool' lvalue Var 0x562597205ce8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562597206ff0 <line:727:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562597206f98 <col:3> '_Bool' lvalue Var 0x562597205fb8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562597206fd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562597206fb8 <col:20> '_Bool' lvalue Var 0x562597205d60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562597207068 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562597207010 <col:3> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562597207050 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562597207030 <col:20> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562597207100 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562597207088 <col:3> '_Bool' lvalue Var 0x562597205c70 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5625972070d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5625972070a8 <col:27> 'int' 1
|   |-CallExpr 0x562597207158 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562597207140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597207120 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625972071b0 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562597207198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597207178 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562597207228 <line:732:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5625972071d0 <col:3> 'int' lvalue Var 0x562597205398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x562597207210 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625972071f0 <col:25> 'int' lvalue Var 0x562597206508 'x' 'int'
|   |-CallExpr 0x562597207280 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562597207268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597207248 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625972072d8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625972072c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625972072a0 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625972075c0 <line:735:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5625972072f8 <col:3> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   | `-ConditionalOperator 0x562597207590 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5625972073b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562597207370 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562597207358 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562597207318 <col:7> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5625972073a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562597207388 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562597207338 <col:25> '_Bool' lvalue Var 0x562597205c70 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x562597207578 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625972073d8 <col:42> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562597207558 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562597207528 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562597207498 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562597207450 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562597207438 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5625972073f8 <col:55> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562597207480 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562597207468 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562597207418 <col:73> '_Bool' lvalue Var 0x562597205ec8 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5625972074f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5625972074b8 <col:90> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562597207510 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625972074d8 <col:102> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   |-BinaryOperator 0x5625972077c8 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5625972075e0 <col:3> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5625972077b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562597207780 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5625972076a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562597207658 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562597207640 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562597207600 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562597207688 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562597207670 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562597207620 <col:38> '_Bool' lvalue Var 0x562597205c70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562597207738 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625972076f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625972076c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562597207768 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562597207750 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562597207718 <col:66> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562597207ab0 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5625972077e8 <col:3> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562597207a98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562597207a68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562597207988 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5625972078a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562597207860 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562597207848 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562597207808 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562597207890 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562597207878 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562597207828 <col:38> '_Bool' lvalue Var 0x562597205c70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562597207968 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562597207920 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562597207908 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5625972078c8 <col:56> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562597207950 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562597207938 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5625972078e8 <col:74> '_Bool' lvalue Var 0x562597205ec8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562597207a20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625972079d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625972079a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562597207a50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562597207a38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562597207a00 <col:102> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562597207cc8 <line:738:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562597207ad0 <col:3> '_Bool' lvalue Var 0x562597205c70 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562597207cb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562597207c80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562597207ba0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562597207b58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562597207b40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562597207af0 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562597207b88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562597207b70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562597207b20 <col:38> '_Bool' lvalue Var 0x562597205c70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562597207c38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562597207bf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562597207bc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562597207c68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562597207c50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562597207c18 <col:66> '_Bool' lvalue Var 0x562597205c70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562597207fb0 <line:739:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562597207ce8 <col:3> '_Bool' lvalue Var 0x562597205ec8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562597207f98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562597207f68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562597207e88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562597207da8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562597207d60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562597207d48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562597207d08 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562597207d90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562597207d78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562597207d28 <col:38> '_Bool' lvalue Var 0x562597205c70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562597207e68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562597207e20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562597207e08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562597207dc8 <col:56> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562597207e50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562597207e38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562597207de8 <col:74> '_Bool' lvalue Var 0x562597205ec8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562597207f20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562597207ed8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562597207ea8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562597207f50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562597207f38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562597207f00 <col:102> '_Bool' lvalue Var 0x562597205ec8 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x562597208008 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562597207ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597207fd0 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562597208060 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562597208048 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597208028 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562597208118 <line:742:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562597208080 <col:3> 'int' lvalue Var 0x562597205278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5625972080f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5625972080e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625972080a0 <col:22> 'int' lvalue Var 0x562597205278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5625972080c0 <col:41> 'int' 1
|   |-CallExpr 0x562597208170 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562597208158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597208138 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562597208218 <line:744:3, col:36>
|     `-CallExpr 0x5625972081f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5625972081e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562597208190 <col:10> 'void *(void)' Function 0x5625971ab958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5625972083c0 prev 0x562597204c48 <line:746:1, line:765:1> line:746:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562597208328 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562597209600 <line:747:1, line:765:1>
|   |-CallExpr 0x5625972084a0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562597208488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597208468 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562597208500 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5625972084c0 <col:3> 'int' lvalue Var 0x562597206508 'x' 'int'
|   | `-IntegerLiteral 0x5625972084e0 <col:7> 'int' 1
|   |-CallExpr 0x562597208558 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562597208540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597208520 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625972085b0 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562597208598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597208578 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562597208628 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5625972085d0 <col:3> 'int' lvalue Var 0x5625972054b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562597208610 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625972085f0 <col:25> 'int' lvalue Var 0x562597206628 'y' 'int'
|   |-CallExpr 0x562597208680 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562597208668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597208648 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625972086d8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625972086c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625972086a0 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625972089c0 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5625972086f8 <col:3> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   | `-ConditionalOperator 0x562597208990 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5625972087b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562597208770 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562597208758 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562597208718 <col:7> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5625972087a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562597208788 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562597208738 <col:25> '_Bool' lvalue Var 0x562597205ce8 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562597208978 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625972087d8 <col:42> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562597208958 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562597208928 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562597208898 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562597208850 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562597208838 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5625972087f8 <col:55> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562597208880 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562597208868 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562597208818 <col:73> '_Bool' lvalue Var 0x562597205f40 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5625972088f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5625972088b8 <col:90> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562597208910 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625972088d8 <col:102> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   |-BinaryOperator 0x562597208be0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5625972089e0 <col:3> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562597208bc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562597208b98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562597208aa0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562597208a58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562597208a40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562597208a00 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562597208a88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562597208a70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562597208a20 <col:38> '_Bool' lvalue Var 0x562597205ce8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562597208b50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562597208af0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562597208ac0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562597208b80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562597208b68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562597208b30 <col:66> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562597208ec8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562597208c00 <col:3> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562597208eb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562597208e80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562597208da0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562597208cc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562597208c78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562597208c60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562597208c20 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562597208ca8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562597208c90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562597208c40 <col:38> '_Bool' lvalue Var 0x562597205ce8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562597208d80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562597208d38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562597208d20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562597208ce0 <col:56> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562597208d68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562597208d50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562597208d00 <col:74> '_Bool' lvalue Var 0x562597205f40 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562597208e38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562597208df0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562597208dc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562597208e68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562597208e50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562597208e18 <col:102> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5625972090d0 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562597208ee8 <col:3> '_Bool' lvalue Var 0x562597205ce8 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5625972090b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562597209088 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562597208fa8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562597208f60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562597208f48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562597208f08 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562597208f90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562597208f78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562597208f28 <col:38> '_Bool' lvalue Var 0x562597205ce8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562597209040 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562597208ff8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562597208fc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562597209070 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562597209058 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562597209020 <col:66> '_Bool' lvalue Var 0x562597205ce8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5625972093b8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5625972090f0 <col:3> '_Bool' lvalue Var 0x562597205f40 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5625972093a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562597209370 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562597209290 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5625972091b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562597209168 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562597209150 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562597209110 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562597209198 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562597209180 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562597209130 <col:38> '_Bool' lvalue Var 0x562597205ce8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562597209270 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562597209228 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562597209210 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5625972091d0 <col:56> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562597209258 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562597209240 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5625972091f0 <col:74> '_Bool' lvalue Var 0x562597205f40 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562597209328 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625972092e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625972092b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562597209358 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562597209340 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562597209308 <col:102> '_Bool' lvalue Var 0x562597205f40 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x562597209410 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625972093f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625972093d8 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562597209468 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562597209450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597209430 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562597209520 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562597209488 <col:3> 'int' lvalue Var 0x562597205278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562597209500 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5625972094e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625972094a8 <col:22> 'int' lvalue Var 0x562597205278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5625972094c8 <col:41> 'int' 1
|   |-CallExpr 0x562597209578 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562597209560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597209540 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5625972095f0 <line:764:3, col:36>
|     `-CallExpr 0x5625972095d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5625972095b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562597209598 <col:10> 'void *(void)' Function 0x5625971ab958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562597209748 prev 0x562597204da0 <line:766:1, line:788:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5625972096b0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56259720ab50 <line:767:1, line:788:1>
|   |-CallExpr 0x562597209828 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562597209810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625972097f0 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562597209888 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562597209848 <col:3> 'int' lvalue Var 0x562597206628 'y' 'int'
|   | `-IntegerLiteral 0x562597209868 <col:7> 'int' 1
|   |-CallExpr 0x5625972098e0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625972098c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625972098a8 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562597209938 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562597209920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597209900 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625972099b0 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562597209958 <col:3> 'int' lvalue Var 0x5625972055d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x562597209998 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562597209978 <col:25> 'int' lvalue Var 0x562597206628 'y' 'int'
|   |-CallExpr 0x562597209a08 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625972099f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625972099d0 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562597209a60 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562597209a48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597209a28 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562597209ad8 <line:775:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562597209a80 <col:3> 'int' lvalue Var 0x5625972056f8 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x562597209ac0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562597209aa0 <col:25> 'int' lvalue Var 0x562597206748 'z' 'int'
|   |-CallExpr 0x562597209b40 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562597209b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597209af8 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562597209b98 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562597209b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562597209b60 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562597209e80 <line:778:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562597209bb8 <col:3> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   | `-ConditionalOperator 0x562597209e50 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562597209c78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562597209c30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562597209c18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562597209bd8 <col:7> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562597209c60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562597209c48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562597209bf8 <col:25> '_Bool' lvalue Var 0x562597205d60 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562597209e38 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562597209c98 <col:42> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562597209e18 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562597209de8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562597209d58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562597209d10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562597209cf8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562597209cb8 <col:55> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562597209d40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562597209d28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562597209cd8 <col:73> '_Bool' lvalue Var 0x562597205fb8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562597209db8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562597209d78 <col:90> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562597209dd0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562597209d98 <col:102> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   |-BinaryOperator 0x56259720a088 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562597209ea0 <col:3> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56259720a070 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720a040 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562597209f60 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562597209f18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562597209f00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562597209ec0 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562597209f48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562597209f30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562597209ee0 <col:38> '_Bool' lvalue Var 0x562597205d60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562597209ff8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562597209fb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562597209f80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56259720a028 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56259720a010 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562597209fd8 <col:66> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56259720a370 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56259720a0a8 <col:3> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56259720a358 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720a328 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56259720a248 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56259720a168 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56259720a120 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56259720a108 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56259720a0c8 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56259720a150 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56259720a138 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56259720a0e8 <col:38> '_Bool' lvalue Var 0x562597205d60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56259720a228 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56259720a1e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56259720a1c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56259720a188 <col:56> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56259720a210 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56259720a1f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56259720a1a8 <col:74> '_Bool' lvalue Var 0x562597205fb8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56259720a2e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56259720a298 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56259720a268 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56259720a310 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56259720a2f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56259720a2c0 <col:102> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56259720a578 <line:781:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56259720a390 <col:3> '_Bool' lvalue Var 0x562597205d60 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56259720a560 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720a530 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56259720a450 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56259720a408 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56259720a3f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56259720a3b0 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56259720a438 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56259720a420 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56259720a3d0 <col:38> '_Bool' lvalue Var 0x562597205d60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56259720a4e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56259720a4a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56259720a470 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56259720a518 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56259720a500 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56259720a4c8 <col:66> '_Bool' lvalue Var 0x562597205d60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56259720a860 <line:782:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56259720a598 <col:3> '_Bool' lvalue Var 0x562597205fb8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56259720a848 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720a818 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56259720a738 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56259720a658 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56259720a610 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56259720a5f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56259720a5b8 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56259720a640 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56259720a628 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56259720a5d8 <col:38> '_Bool' lvalue Var 0x562597205d60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56259720a718 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56259720a6d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56259720a6b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56259720a678 <col:56> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56259720a700 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56259720a6e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56259720a698 <col:74> '_Bool' lvalue Var 0x562597205fb8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56259720a7d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56259720a788 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56259720a758 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56259720a800 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56259720a7e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56259720a7b0 <col:102> '_Bool' lvalue Var 0x562597205fb8 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56259720a8b8 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56259720a8a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720a880 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56259720a910 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56259720a8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720a8d8 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56259720a9c8 <line:785:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56259720a930 <col:3> 'int' lvalue Var 0x562597205278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56259720a9a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56259720a990 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56259720a950 <col:22> 'int' lvalue Var 0x562597205278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56259720a970 <col:41> 'int' 1
|   |-CallExpr 0x56259720aa20 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56259720aa08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720a9e8 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56259720aa98 <line:787:3, col:36>
|     `-CallExpr 0x56259720aa78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56259720aa60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56259720aa40 <col:10> 'void *(void)' Function 0x5625971ab958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56259720acb0 prev 0x562597204ef8 <line:789:1, line:824:1> line:789:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x56259720ac18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56259720e9c8 <line:790:1, line:824:1>
|   |-CallExpr 0x56259720ad90 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56259720ad78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720ad58 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56259720adf0 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56259720adb0 <col:3> 'int' lvalue Var 0x562597206748 'z' 'int'
|   | `-IntegerLiteral 0x56259720add0 <col:7> 'int' 1
|   |-CallExpr 0x56259720ae48 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56259720ae30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720ae10 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56259720aea0 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56259720ae88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720ae68 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56259720af18 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56259720aec0 <col:3> 'int' lvalue Var 0x562597205818 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x56259720af00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56259720aee0 <col:25> 'int' lvalue Var 0x562597206748 'z' 'int'
|   |-CallExpr 0x56259720af70 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56259720af58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720af38 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56259720afc8 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56259720afb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720af90 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56259720b078 <line:798:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56259720afe8 <col:3> '_Bool' lvalue Var 0x5625972067e0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56259720b060 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56259720b040 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56259720b028 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56259720b008 <col:19> 'void *(void)' Function 0x5625971ab958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56259720b128 <line:799:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56259720b098 <col:3> '_Bool' lvalue Var 0x562597206858 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56259720b110 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56259720b0f0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56259720b0d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56259720b0b8 <col:19> 'void *(void)' Function 0x5625971ab958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56259720b1a0 <line:800:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56259720b148 <col:3> '_Bool' lvalue Var 0x562597205b00 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56259720b188 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56259720b168 <col:21> '_Bool' lvalue Var 0x562597206858 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56259720b218 <line:801:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56259720b1c0 <col:3> 'int' lvalue Var 0x562597205b80 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56259720b200 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56259720b1e0 <col:15> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   |-BinaryOperator 0x56259720b650 <line:802:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56259720b238 <col:3> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   | `-ConditionalOperator 0x56259720b620 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56259720b448 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56259720b368 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56259720b290 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56259720b278 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56259720b258 <col:8> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56259720b348 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56259720b2e0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56259720b2c8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56259720b2a8 <col:27> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x56259720b330 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56259720b318 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56259720b2f8 <col:46> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56259720b428 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56259720b3c0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56259720b3a8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56259720b388 <col:65> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x56259720b410 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56259720b3f8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56259720b3d8 <col:84> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56259720b608 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56259720b468 <col:101> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   |   `-ParenExpr 0x56259720b5e8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56259720b5b8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56259720b528 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56259720b4e0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56259720b4c8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56259720b488 <col:106> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56259720b510 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56259720b4f8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56259720b4a8 <col:124> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56259720b588 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56259720b548 <col:141> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56259720b5a0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56259720b568 <col:153> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x56259720bb90 <line:803:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56259720b670 <col:3> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x56259720bb60 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56259720bb00 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56259720bae8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56259720b690 <col:15> '_Bool' lvalue Var 0x562597206858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56259720bb18 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56259720b6b0 <col:31> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56259720bac8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56259720ba98 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56259720b8c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56259720b7e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56259720b708 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56259720b6f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56259720b6d0 <col:45> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56259720b7c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56259720b758 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56259720b740 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56259720b720 <col:64> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56259720b7a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56259720b790 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56259720b770 <col:83> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56259720b8a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56259720b838 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56259720b820 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56259720b800 <col:102> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56259720b888 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56259720b870 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56259720b850 <col:121> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56259720ba80 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56259720b8e0 <col:138> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x56259720ba60 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56259720ba30 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56259720b9a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56259720b958 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56259720b940 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56259720b900 <col:151> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56259720b988 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56259720b970 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56259720b920 <col:169> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56259720ba00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56259720b9c0 <col:186> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56259720ba18 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56259720b9e0 <col:198> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x56259720c0a0 <line:804:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56259720bbb0 <col:3> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x56259720c070 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56259720c040 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56259720c028 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56259720bbd0 <col:15> '_Bool' lvalue Var 0x562597206858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56259720c058 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56259720bbf0 <col:31> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x56259720c008 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56259720bfd8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56259720be00 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56259720bd20 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56259720bc48 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56259720bc30 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56259720bc10 <col:45> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56259720bd00 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56259720bc98 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56259720bc80 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56259720bc60 <col:64> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56259720bce8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56259720bcd0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56259720bcb0 <col:83> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56259720bde0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56259720bd78 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56259720bd60 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56259720bd40 <col:102> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56259720bdc8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56259720bdb0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56259720bd90 <col:121> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56259720bfc0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56259720be20 <col:138> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x56259720bfa0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56259720bf70 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56259720bee0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56259720be98 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56259720be80 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56259720be40 <col:151> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56259720bec8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56259720beb0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56259720be60 <col:169> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56259720bf40 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56259720bf00 <col:186> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56259720bf58 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56259720bf20 <col:198> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x56259720c648 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56259720c0c0 <col:3> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56259720c630 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720c600 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56259720c5b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56259720c5a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56259720c0e0 <col:20> '_Bool' lvalue Var 0x562597206858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56259720c5e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56259720c5d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56259720c100 <col:36> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56259720c580 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56259720c550 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56259720c310 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56259720c230 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56259720c158 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56259720c140 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56259720c120 <col:55> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56259720c210 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56259720c1a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56259720c190 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56259720c170 <col:74> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56259720c1f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56259720c1e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56259720c1c0 <col:93> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56259720c2f0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56259720c288 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56259720c270 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56259720c250 <col:112> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56259720c2d8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56259720c2c0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56259720c2a0 <col:131> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56259720c538 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56259720c520 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56259720c330 <col:148> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56259720c500 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56259720c4d0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56259720c3f0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56259720c3a8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56259720c390 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56259720c350 <col:166> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56259720c3d8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56259720c3c0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56259720c370 <col:184> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56259720c488 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56259720c440 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56259720c410 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56259720c4b8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56259720c4a0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56259720c468 <col:212> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56259720cc38 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56259720c668 <col:3> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56259720cc20 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720cbf0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56259720cba8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56259720cb90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56259720c688 <col:20> '_Bool' lvalue Var 0x562597206858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56259720cbd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56259720cbc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56259720c6a8 <col:36> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56259720cb70 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56259720cb18 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56259720c8b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56259720c7d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56259720c700 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56259720c6e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56259720c6c8 <col:55> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56259720c7b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56259720c750 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56259720c738 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56259720c718 <col:74> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56259720c7a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56259720c788 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56259720c768 <col:93> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56259720c898 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56259720c830 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56259720c818 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56259720c7f8 <col:112> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56259720c880 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56259720c868 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56259720c848 <col:131> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56259720cb00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56259720cae8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56259720c8d8 <col:148> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56259720cac8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56259720ca98 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56259720c998 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56259720c950 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56259720c938 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56259720c8f8 <col:166> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56259720c980 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56259720c968 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56259720c918 <col:184> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56259720ca68 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56259720c9e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56259720c9b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56259720ca80 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56259720ca40 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56259720ca10 <col:219> 'int' 0
|   |-BinaryOperator 0x56259720d1e0 <line:807:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56259720cc58 <col:3> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56259720d1c8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720d198 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56259720d150 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56259720d138 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56259720cc78 <col:20> '_Bool' lvalue Var 0x562597206858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56259720d180 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56259720d168 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56259720cc98 <col:36> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x56259720d118 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56259720d0e8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56259720cea8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56259720cdc8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56259720ccf0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56259720ccd8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56259720ccb8 <col:55> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56259720cda8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56259720cd40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56259720cd28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56259720cd08 <col:74> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56259720cd90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56259720cd78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56259720cd58 <col:93> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56259720ce88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56259720ce20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56259720ce08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56259720cde8 <col:112> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56259720ce70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56259720ce58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56259720ce38 <col:131> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56259720d0d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56259720d0b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56259720cec8 <col:148> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x56259720d098 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56259720d068 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56259720cf88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56259720cf40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56259720cf28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56259720cee8 <col:166> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56259720cf70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56259720cf58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56259720cf08 <col:184> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56259720d020 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56259720cfd8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56259720cfa8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56259720d050 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56259720d038 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56259720d000 <col:212> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56259720d7a8 <line:808:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56259720d200 <col:3> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56259720d790 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720d760 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56259720d718 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56259720d700 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56259720d220 <col:20> '_Bool' lvalue Var 0x562597206858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56259720d748 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56259720d730 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56259720d240 <col:36> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x56259720d6e0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56259720d6b0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56259720d450 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56259720d370 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56259720d298 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56259720d280 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56259720d260 <col:55> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56259720d350 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56259720d2e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56259720d2d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56259720d2b0 <col:74> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56259720d338 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56259720d320 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56259720d300 <col:93> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56259720d430 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56259720d3c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56259720d3b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56259720d390 <col:112> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56259720d418 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56259720d400 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56259720d3e0 <col:131> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56259720d698 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56259720d680 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56259720d470 <col:148> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x56259720d660 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56259720d630 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56259720d530 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56259720d4e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56259720d4d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56259720d490 <col:166> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56259720d518 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56259720d500 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56259720d4b0 <col:184> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56259720d600 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56259720d580 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56259720d550 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56259720d618 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56259720d5d8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56259720d5a8 <col:219> 'int' 0
|   |-BinaryOperator 0x56259720d820 <line:809:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56259720d7c8 <col:3> 'int' lvalue Var 0x562597205938 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x56259720d808 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56259720d7e8 <col:25> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   |-BinaryOperator 0x56259720d950 <line:810:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56259720d840 <col:3> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   | `-ConditionalOperator 0x56259720d920 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56259720d8d8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56259720d8c0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56259720d860 <col:7> '_Bool' lvalue Var 0x562597205b00 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56259720d8f0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56259720d880 <col:25> 'int' lvalue Var 0x562597205b80 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56259720d908 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56259720d8a0 <col:37> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   |-BinaryOperator 0x56259720d9e8 <line:811:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56259720d970 <col:3> '_Bool' lvalue Var 0x562597205b00 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56259720d9c0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56259720d990 <col:28> 'int' 0
|   |-CallExpr 0x56259720da40 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56259720da28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720da08 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56259720da98 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56259720da80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720da60 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56259720dda0 <line:814:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56259720dab8 <col:3> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   | `-ConditionalOperator 0x56259720dd70 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56259720db98 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56259720db30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56259720db18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56259720dad8 <col:7> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56259720db80 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56259720db48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56259720daf8 <col:25> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56259720dd58 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56259720dbb8 <col:42> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56259720dd38 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56259720dd08 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56259720dc78 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56259720dc30 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56259720dc18 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56259720dbd8 <col:55> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56259720dc60 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56259720dc48 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56259720dbf8 <col:73> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56259720dcd8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56259720dc98 <col:90> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56259720dcf0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56259720dcb8 <col:102> 'int' lvalue Var 0x562597205a58 'a' 'int'
|   |-BinaryOperator 0x56259720dfa8 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56259720ddc0 <col:3> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56259720df90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720df60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56259720de80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56259720de38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56259720de20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56259720dde0 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56259720de68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56259720de50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56259720de00 <col:38> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56259720df18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56259720ded0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56259720dea0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56259720df48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56259720df30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56259720def8 <col:66> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56259720e290 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56259720dfc8 <col:3> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56259720e278 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720e248 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56259720e168 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56259720e088 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56259720e040 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56259720e028 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56259720dfe8 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56259720e070 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56259720e058 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56259720e008 <col:38> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56259720e148 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56259720e100 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56259720e0e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56259720e0a8 <col:56> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56259720e130 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56259720e118 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56259720e0c8 <col:74> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56259720e200 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56259720e1b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56259720e188 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56259720e230 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56259720e218 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56259720e1e0 <col:102> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56259720e498 <line:817:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56259720e2b0 <col:3> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56259720e480 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720e450 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56259720e370 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56259720e328 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56259720e310 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56259720e2d0 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56259720e358 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56259720e340 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56259720e2f0 <col:38> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56259720e408 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56259720e3c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56259720e390 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56259720e438 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56259720e420 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56259720e3e8 <col:66> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56259720e780 <line:818:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56259720e4b8 <col:3> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56259720e768 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56259720e738 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56259720e658 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56259720e578 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56259720e530 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56259720e518 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56259720e4d8 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56259720e560 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56259720e548 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56259720e4f8 <col:38> '_Bool' lvalue Var 0x562597205dd8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56259720e638 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56259720e5f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56259720e5d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56259720e598 <col:56> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56259720e620 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56259720e608 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56259720e5b8 <col:74> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56259720e6f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56259720e6a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56259720e678 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56259720e720 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56259720e708 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56259720e6d0 <col:102> '_Bool' lvalue Var 0x562597206030 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x56259720e7d8 <line:819:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56259720e7c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720e7a0 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56259720e830 <line:820:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56259720e818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720e7f8 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56259720e8e8 <line:821:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56259720e850 <col:3> 'int' lvalue Var 0x562597205278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56259720e8c8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56259720e8b0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56259720e870 <col:22> 'int' lvalue Var 0x562597205278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56259720e890 <col:41> 'int' 1
|   |-CallExpr 0x56259720e940 <line:822:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56259720e928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56259720e908 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56259720e9b8 <line:823:3, col:36>
|     `-CallExpr 0x56259720e998 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56259720e980 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56259720e960 <col:10> 'void *(void)' Function 0x5625971ab958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56259720eb90 prev 0x562597204fc0 <line:825:1, line:827:1> line:825:6 fence 'void ()'
| `-CompoundStmt 0x56259720ec30 <line:826:1, line:827:1>
|-FunctionDecl 0x56259720ec60 prev 0x562597205080 <line:828:1, line:830:1> line:828:6 isync 'void ()'
| `-CompoundStmt 0x56259720ed00 <line:829:1, line:830:1>
|-FunctionDecl 0x56259720ed30 prev 0x562597205140 <line:831:1, line:833:1> line:831:6 lwfence 'void ()'
| `-CompoundStmt 0x56259720edd0 <line:832:1, line:833:1>
`-FunctionDecl 0x56259720ee38 <line:834:1, line:860:1> line:834:5 main 'int ()'
  `-CompoundStmt 0x562597210ee0 <line:835:1, line:860:1>
    |-DeclStmt 0x56259720ef50 <line:836:3, col:17>
    | `-VarDecl 0x56259720eee8 <col:3, col:13> col:13 used t107 'pthread_t':'unsigned long'
    |-CallExpr 0x56259720f158 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56259720f140 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56259720ef68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5625971ec488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56259720efa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56259720ef88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56259720eee8 't107' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56259720f198 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56259720f020 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56259720eff8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56259720efc0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56259720f1b0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56259720f040 <col:38> 'void *(void *)' Function 0x562597206970 'P0' 'void *(void *)'
    | `-ParenExpr 0x56259720f0c0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56259720f098 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56259720f060 <col:51> 'int' 0
    |-DeclStmt 0x56259720f240 <line:838:3, col:17>
    | `-VarDecl 0x56259720f1d8 <col:3, col:13> col:13 used t108 'pthread_t':'unsigned long'
    |-CallExpr 0x56259720f3e8 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56259720f3d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56259720f258 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5625971ec488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56259720f298 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56259720f278 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56259720f1d8 't108' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56259720f428 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56259720f310 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56259720f2e8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56259720f2b0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56259720f440 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56259720f330 <col:38> 'void *(void *)' Function 0x5625972083c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x56259720f3b0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56259720f388 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56259720f350 <col:51> 'int' 0
    |-DeclStmt 0x56259720f4d0 <line:840:3, col:17>
    | `-VarDecl 0x56259720f468 <col:3, col:13> col:13 used t109 'pthread_t':'unsigned long'
    |-CallExpr 0x56259720f678 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56259720f660 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56259720f4e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5625971ec488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56259720f528 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56259720f508 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56259720f468 't109' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56259720f6b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56259720f5a0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56259720f578 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56259720f540 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56259720f6d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56259720f5c0 <col:38> 'void *(void *)' Function 0x562597209748 'P2' 'void *(void *)'
    | `-ParenExpr 0x56259720f640 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56259720f618 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56259720f5e0 <col:51> 'int' 0
    |-DeclStmt 0x56259720f760 <line:842:3, col:17>
    | `-VarDecl 0x56259720f6f8 <col:3, col:13> col:13 used t110 'pthread_t':'unsigned long'
    |-CallExpr 0x56259720f908 <line:843:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56259720f8f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56259720f778 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5625971ec488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56259720f7b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56259720f798 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56259720f6f8 't110' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56259720f948 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56259720f830 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56259720f808 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56259720f7d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56259720f960 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56259720f850 <col:38> 'void *(void *)' Function 0x56259720acb0 'P3' 'void *(void *)'
    | `-ParenExpr 0x56259720f8d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56259720f8a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56259720f870 <col:51> 'int' 0
    |-CallExpr 0x56259720f9b0 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56259720f998 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56259720f978 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56259720fa80 <line:845:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56259720f9d0 <col:3> '_Bool' lvalue Var 0x562597206390 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56259720fa68 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56259720fa48 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56259720fa30 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56259720f9f0 <col:21> 'int' lvalue Var 0x562597205278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56259720fa10 <col:41> 'int' 4
    |-CallExpr 0x56259720fad8 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56259720fac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56259720faa0 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56259720fb50 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56259720fb38 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56259720faf8 <col:3> 'void (int)' Function 0x5625971ab790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56259720fba0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56259720fb78 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56259720fb18 <col:21> '_Bool' lvalue Var 0x562597206390 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56259720fbf0 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56259720fbd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56259720fbb8 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56259720fed8 <line:849:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56259720fc10 <col:3> 'int' lvalue Var 0x562597205a58 'a' 'int'
    | `-ConditionalOperator 0x56259720fea8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56259720fcd0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56259720fc88 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56259720fc70 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56259720fc30 <col:7> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56259720fcb8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56259720fca0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56259720fc50 <col:25> '_Bool' lvalue Var 0x562597205bf8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56259720fe90 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56259720fcf0 <col:42> 'int' lvalue Var 0x5625972061a8 'a$w_buff0' 'int'
    |   `-ParenExpr 0x56259720fe70 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56259720fe40 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56259720fdb0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56259720fd68 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56259720fd50 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56259720fd10 <col:55> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56259720fd98 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56259720fd80 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56259720fd30 <col:73> '_Bool' lvalue Var 0x562597205e50 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56259720fe10 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56259720fdd0 <col:90> 'int' lvalue Var 0x5625972062a0 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56259720fe28 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56259720fdf0 <col:102> 'int' lvalue Var 0x562597205a58 'a' 'int'
    |-BinaryOperator 0x5625972100e0 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56259720fef8 <col:3> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5625972100c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562597210098 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56259720ffb8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56259720ff70 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56259720ff58 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56259720ff18 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56259720ffa0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56259720ff88 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56259720ff38 <col:38> '_Bool' lvalue Var 0x562597205bf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562597210050 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562597210008 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56259720ffd8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562597210080 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562597210068 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562597210030 <col:66> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5625972103c8 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562597210100 <col:3> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5625972103b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562597210380 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5625972102a0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5625972101c0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562597210178 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562597210160 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562597210120 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5625972101a8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562597210190 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562597210140 <col:38> '_Bool' lvalue Var 0x562597205bf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562597210280 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562597210238 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562597210220 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5625972101e0 <col:56> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562597210268 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562597210250 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562597210200 <col:74> '_Bool' lvalue Var 0x562597205e50 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562597210338 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5625972102f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5625972102c0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562597210368 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562597210350 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562597210318 <col:102> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5625972105d0 <line:852:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5625972103e8 <col:3> '_Bool' lvalue Var 0x562597205bf8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5625972105b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562597210588 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5625972104a8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562597210460 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562597210448 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562597210408 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562597210490 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562597210478 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562597210428 <col:38> '_Bool' lvalue Var 0x562597205bf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562597210540 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5625972104f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5625972104c8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562597210570 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562597210558 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562597210520 <col:66> '_Bool' lvalue Var 0x562597205bf8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5625972108b8 <line:853:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5625972105f0 <col:3> '_Bool' lvalue Var 0x562597205e50 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5625972108a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562597210870 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562597210790 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5625972106b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562597210668 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562597210650 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562597210610 <col:20> '_Bool' lvalue Var 0x562597206220 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562597210698 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562597210680 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562597210630 <col:38> '_Bool' lvalue Var 0x562597205bf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562597210770 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562597210728 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562597210710 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5625972106d0 <col:56> '_Bool' lvalue Var 0x562597206318 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562597210758 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562597210740 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5625972106f0 <col:74> '_Bool' lvalue Var 0x562597205e50 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562597210828 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5625972107e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5625972107b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562597210858 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562597210840 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562597210808 <col:102> '_Bool' lvalue Var 0x562597205e50 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562597210910 <line:854:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5625972108f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5625972108d8 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562597210968 <line:855:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562597210950 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562597210930 <col:3> 'void ()' Function 0x5625971abe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562597210d88 <line:856:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x562597210988 <col:3> '_Bool' lvalue Var 0x562597206408 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562597210d70 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562597210d58 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562597210d38 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x562597210d18 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x562597210c80 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x562597210be8 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x562597210b30 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x562597210a98 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x562597210a00 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x5625972109e8 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x5625972109a8 <col:23> 'int' lvalue Var 0x562597205398 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x5625972109c8 <col:46> 'int' 0
    |         | | | | `-BinaryOperator 0x562597210a78 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x562597210a60 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x562597210a20 <col:51> 'int' lvalue Var 0x5625972054b8 '__unbuffered_p1_EAX' 'int'
    |         | | | |   `-IntegerLiteral 0x562597210a40 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x562597210b10 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x562597210af8 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x562597210ab8 <col:79> 'int' lvalue Var 0x5625972055d8 '__unbuffered_p2_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x562597210ad8 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x562597210bc8 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x562597210bb0 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x562597210b50 <col:107> 'int' lvalue Var 0x5625972056f8 '__unbuffered_p2_EBX' 'int'
    |         | |   `-IntegerLiteral 0x562597210b70 <col:130> 'int' 0
    |         | `-BinaryOperator 0x562597210c60 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562597210c48 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562597210c08 <col:135> 'int' lvalue Var 0x562597205818 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x562597210c28 <col:158> 'int' 1
    |         `-BinaryOperator 0x562597210cf8 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x562597210ce0 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562597210ca0 <col:163> 'int' lvalue Var 0x562597205938 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x562597210cc0 <col:186> 'int' 0
    |-CallExpr 0x562597210de0 <line:857:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562597210dc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562597210da8 <col:3> 'void ()' Function 0x5625971abf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562597210e58 <line:858:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562597210e40 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562597210e00 <col:3> 'void (int)' Function 0x5625971abbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562597210e98 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562597210e80 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562597210e20 <col:21> '_Bool' lvalue Var 0x562597206408 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562597210ed0 <line:859:3, col:10>
      `-IntegerLiteral 0x562597210eb0 <col:10> 'int' 0
