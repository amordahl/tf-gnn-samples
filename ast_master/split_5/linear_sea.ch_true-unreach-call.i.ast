TranslationUnitDecl 0x55f0c130ee18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55f0c130f6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55f0c130f3b0 '__int128'
|-TypedefDecl 0x55f0c130f748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55f0c130f3d0 'unsigned __int128'
|-TypedefDecl 0x55f0c130fa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55f0c130f820 'struct __NSConstantString_tag'
|   `-Record 0x55f0c130f7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55f0c130faf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55f0c130fab0 'char *'
|   `-BuiltinType 0x55f0c130eeb0 'char'
|-TypedefDecl 0x55f0c134e8a0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55f0c130fd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55f0c130fbd0 'struct __va_list_tag'
|     `-Record 0x55f0c130fb50 '__va_list_tag'
|-FunctionDecl 0x55f0c134e980 <./split_5/linear_sea.ch_true-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55f0c134eb50 <line:3:1, line:8:1> line:3:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55f0c134ea80 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x55f0c134eda0 <col:34, line:8:1>
|   |-IfStmt 0x55f0c134ed78 <line:4:3, line:6:3>
|   | |-UnaryOperator 0x55f0c134ec50 <line:4:7, col:13> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55f0c134ec38 <col:8, col:13> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x55f0c134ec18 <col:8, col:13> 'int' lvalue
|   | |     `-DeclRefExpr 0x55f0c134ebf8 <col:9> 'int' lvalue ParmVar 0x55f0c134ea80 'cond' 'int'
|   | `-CompoundStmt 0x55f0c134ed60 <col:16, line:6:3>
|   |   `-LabelStmt 0x55f0c134ed48 <line:5:5, col:29> 'ERROR'
|   |     `-CallExpr 0x55f0c134ecd8 <col:12, col:29> 'void'
|   |       `-ImplicitCastExpr 0x55f0c134ecc0 <col:12> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55f0c134ec68 <col:12> 'void () __attribute__((noreturn))' Function 0x55f0c134e980 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x55f0c134ed90 <line:7:3>
|-FunctionDecl 0x55f0c134ee18 <line:9:1, col:37> col:14 used __VERIFIER_nondet_uint 'unsigned int ()'
|-VarDecl 0x55f0c134eed0 <line:10:1, col:14> col:14 used SIZE 'unsigned int'
|-FunctionDecl 0x55f0c134f178 <line:11:1, line:18:1> line:11:5 used linear_search 'int (int *, int, int)'
| |-ParmVarDecl 0x55f0c134ef88 <col:19, col:24> col:24 used a 'int *'
| |-ParmVarDecl 0x55f0c134f008 <col:27, col:31> col:31 used n 'int'
| |-ParmVarDecl 0x55f0c134f088 <col:34, col:38> col:38 used q 'int'
| `-CompoundStmt 0x55f0c134f650 <col:41, line:18:1>
|   |-DeclStmt 0x55f0c134f2e8 <line:12:3, col:19>
|   | `-VarDecl 0x55f0c134f248 <col:3, col:18> col:16 used j 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x55f0c134f2d0 <col:18> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x55f0c134f2b0 <col:18> 'int' 0
|   |-WhileStmt 0x55f0c134f518 <line:13:3, line:15:3>
|   | |-BinaryOperator 0x55f0c134f4a8 <line:13:10, col:23> 'int' '&&'
|   | | |-BinaryOperator 0x55f0c134f388 <col:10, col:12> 'int' '<'
|   | | | |-ImplicitCastExpr 0x55f0c134f340 <col:10> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x55f0c134f300 <col:10> 'unsigned int' lvalue Var 0x55f0c134f248 'j' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x55f0c134f370 <col:12> 'unsigned int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x55f0c134f358 <col:12> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x55f0c134f320 <col:12> 'int' lvalue ParmVar 0x55f0c134f008 'n' 'int'
|   | | `-BinaryOperator 0x55f0c134f488 <col:17, col:23> 'int' '!='
|   | |   |-ImplicitCastExpr 0x55f0c134f458 <col:17, col:20> 'int' <LValueToRValue>
|   | |   | `-ArraySubscriptExpr 0x55f0c134f418 <col:17, col:20> 'int' lvalue
|   | |   |   |-ImplicitCastExpr 0x55f0c134f3e8 <col:17> 'int *' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x55f0c134f3a8 <col:17> 'int *' lvalue ParmVar 0x55f0c134ef88 'a' 'int *'
|   | |   |   `-ImplicitCastExpr 0x55f0c134f400 <col:19> 'unsigned int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x55f0c134f3c8 <col:19> 'unsigned int' lvalue Var 0x55f0c134f248 'j' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x55f0c134f470 <col:23> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x55f0c134f438 <col:23> 'int' lvalue ParmVar 0x55f0c134f088 'q' 'int'
|   | `-CompoundStmt 0x55f0c134f500 <col:26, line:15:3>
|   |   `-UnaryOperator 0x55f0c134f4e8 <line:14:3, col:4> 'unsigned int' postfix '++'
|   |     `-DeclRefExpr 0x55f0c134f4c8 <col:3> 'unsigned int' lvalue Var 0x55f0c134f248 'j' 'unsigned int'
|   `-IfStmt 0x55f0c134f628 <line:16:3, line:17:15> has_else
|     |-BinaryOperator 0x55f0c134f5a8 <line:16:7, col:9> 'int' '<'
|     | |-ImplicitCastExpr 0x55f0c134f578 <col:7> 'unsigned int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55f0c134f538 <col:7> 'unsigned int' lvalue Var 0x55f0c134f248 'j' 'unsigned int'
|     | `-ImplicitCastExpr 0x55f0c134f590 <col:9> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f0c134f558 <col:9> 'unsigned int' lvalue Var 0x55f0c134eed0 'SIZE' 'unsigned int'
|     |-ReturnStmt 0x55f0c134f5e8 <col:15, col:22>
|     | `-IntegerLiteral 0x55f0c134f5c8 <col:22> 'int' 1
|     `-ReturnStmt 0x55f0c134f618 <line:17:8, col:15>
|       `-IntegerLiteral 0x55f0c134f5f8 <col:15> 'int' 0
`-FunctionDecl 0x55f0c134f6d8 <line:19:1, line:24:1> line:19:5 main 'int ()'
  `-CompoundStmt 0x55f0c1373d90 <col:12, line:24:1>
    |-BinaryOperator 0x55f0c1373928 <line:20:3, col:37> 'unsigned int' '='
    | |-DeclRefExpr 0x55f0c134f778 <col:3> 'unsigned int' lvalue Var 0x55f0c134eed0 'SIZE' 'unsigned int'
    | `-BinaryOperator 0x55f0c1373908 <col:8, col:37> 'unsigned int' '+'
    |   |-ParenExpr 0x55f0c134f880 <col:8, col:35> 'unsigned int'
    |   | `-BinaryOperator 0x55f0c134f860 <col:9, col:34> 'unsigned int' '/'
    |   |   |-CallExpr 0x55f0c134f808 <col:9, col:32> 'unsigned int'
    |   |   | `-ImplicitCastExpr 0x55f0c134f7f0 <col:9> 'unsigned int (*)()' <FunctionToPointerDecay>
    |   |   |   `-DeclRefExpr 0x55f0c134f798 <col:9> 'unsigned int ()' Function 0x55f0c134ee18 '__VERIFIER_nondet_uint' 'unsigned int ()'
    |   |   `-ImplicitCastExpr 0x55f0c134f848 <col:34> 'unsigned int' <IntegralCast>
    |   |     `-IntegerLiteral 0x55f0c134f828 <col:34> 'int' 8
    |   `-ImplicitCastExpr 0x55f0c13738f0 <col:37> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x55f0c13738d0 <col:37> 'int' 1
    |-DeclStmt 0x55f0c1373a70 <line:21:3, col:14>
    | `-VarDecl 0x55f0c1373a08 <col:3, col:13> col:7 used a 'int [SIZE]'
    |-BinaryOperator 0x55f0c1373b90 <line:22:3, col:13> 'int' '='
    | |-ArraySubscriptExpr 0x55f0c1373b50 <col:3, col:11> 'int' lvalue
    | | |-ImplicitCastExpr 0x55f0c1373b38 <col:3> 'int *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x55f0c1373a88 <col:3> 'int [SIZE]' lvalue Var 0x55f0c1373a08 'a' 'int [SIZE]'
    | | `-BinaryOperator 0x55f0c1373b18 <col:5, col:10> 'unsigned int' '/'
    | |   |-ImplicitCastExpr 0x55f0c1373ae8 <col:5> 'unsigned int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x55f0c1373aa8 <col:5> 'unsigned int' lvalue Var 0x55f0c134eed0 'SIZE' 'unsigned int'
    | |   `-ImplicitCastExpr 0x55f0c1373b00 <col:10> 'unsigned int' <IntegralCast>
    | |     `-IntegerLiteral 0x55f0c1373ac8 <col:10> 'int' 2
    | `-IntegerLiteral 0x55f0c1373b70 <col:13> 'int' 3
    `-CallExpr 0x55f0c1373d68 <line:23:3, col:44> 'void'
      |-ImplicitCastExpr 0x55f0c1373d50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
      | `-DeclRefExpr 0x55f0c1373bb0 <col:3> 'void (int)' Function 0x55f0c134eb50 '__VERIFIER_assert' 'void (int)'
      `-CallExpr 0x55f0c1373c98 <col:21, col:43> 'int'
        |-ImplicitCastExpr 0x55f0c1373c80 <col:21> 'int (*)(int *, int, int)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x55f0c1373bd0 <col:21> 'int (int *, int, int)' Function 0x55f0c134f178 'linear_search' 'int (int *, int, int)'
        |-ImplicitCastExpr 0x55f0c1373cd0 <col:35> 'int *' <ArrayToPointerDecay>
        | `-DeclRefExpr 0x55f0c1373bf0 <col:35> 'int [SIZE]' lvalue Var 0x55f0c1373a08 'a' 'int [SIZE]'
        |-ImplicitCastExpr 0x55f0c1373d00 <col:37> 'int' <IntegralCast>
        | `-ImplicitCastExpr 0x55f0c1373ce8 <col:37> 'unsigned int' <LValueToRValue>
        |   `-DeclRefExpr 0x55f0c1373c10 <col:37> 'unsigned int' lvalue Var 0x55f0c134eed0 'SIZE' 'unsigned int'
        `-IntegerLiteral 0x55f0c1373c30 <col:42> 'int' 3
