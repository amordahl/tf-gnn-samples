TranslationUnitDecl 0x5585e951de18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5585e951e6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5585e951e3b0 '__int128'
|-TypedefDecl 0x5585e951e748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5585e951e3d0 'unsigned __int128'
|-TypedefDecl 0x5585e951ea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5585e951e820 'struct __NSConstantString_tag'
|   `-Record 0x5585e951e7a0 '__NSConstantString_tag'
|-TypedefDecl 0x5585e951eaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5585e951eab0 'char *'
|   `-BuiltinType 0x5585e951deb0 'char'
|-TypedefDecl 0x5585e955d650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5585e951ed90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5585e951ebd0 'struct __va_list_tag'
|     `-Record 0x5585e951eb50 '__va_list_tag'
|-FunctionDecl 0x5585e955d790 <./split_5/mix023_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5585e955d6c0 <col:31> col:34 'int'
|-FunctionDecl 0x5585e955d958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5585e955da80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5585e955dbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5585e955db38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5585e955ddf8 <col:40, col:99>
|   |-IfStmt 0x5585e955ddc8 <col:42, col:88>
|   | |-UnaryOperator 0x5585e955dca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5585e955dc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5585e955dc70 <col:47> 'int' lvalue ParmVar 0x5585e955db38 'expression' 'int'
|   | `-CompoundStmt 0x5585e955ddb0 <col:59, col:88>
|   |   `-LabelStmt 0x5585e955dd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5585e955dd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5585e955dd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5585e955dcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5585e955da80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5585e955dde0 <col:89>
|   `-ReturnStmt 0x5585e955dde8 <col:91>
|-FunctionDecl 0x5585e955de40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5585e955df00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5585e955e280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5585e955dfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5585e955e038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5585e955e0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5585e955e138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5585e955e340 <line:10:22>
|-FunctionDecl 0x5585e9584390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5585e955e3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5585e955e430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5585e955e4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5585e955e530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5585e9584450 <line:13:22>
|-FunctionDecl 0x5585e9584700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5585e95844c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5585e9584540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5585e95845c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5585e95847b8 <line:15:22>
|-TypedefDecl 0x5585e9584828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5585e951df70 'unsigned char'
|-TypedefDecl 0x5585e9584898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5585e951df90 'unsigned short'
|-TypedefDecl 0x5585e9584908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5585e951dfb0 'unsigned int'
|-TypedefDecl 0x5585e9584978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e95849e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5585e951ded0 'signed char'
|-TypedefDecl 0x5585e9584a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5585e951df70 'unsigned char'
|-TypedefDecl 0x5585e9584ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5585e951def0 'short'
|-TypedefDecl 0x5585e9584b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5585e951df90 'unsigned short'
|-TypedefDecl 0x5585e9584ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5585e951df10 'int'
|-TypedefDecl 0x5585e9584c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5585e951dfb0 'unsigned int'
|-TypedefDecl 0x5585e9584c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9584cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9584d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9584dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9584e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9584eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5585e951dfb0 'unsigned int'
|-TypedefDecl 0x5585e9584f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5585e951dfb0 'unsigned int'
|-TypedefDecl 0x5585e9584f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9585008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9585078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5585e951dfb0 'unsigned int'
|-TypedefDecl 0x5585e95850e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9585158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e95851c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9585238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5585e951df10 'int'
|-RecordDecl 0x5585e9585290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5585e9585408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5585e95854c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5585e9585460 'struct __fsid_t' sugar
|   `-RecordType 0x5585e9585310 '__fsid_t'
|     `-Record 0x5585e9585290 ''
|-TypedefDecl 0x5585e9585548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e95855b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9585628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9585698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5585e951dfb0 'unsigned int'
|-TypedefDecl 0x5585e9585708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9585778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5585e951dfb0 'unsigned int'
|-TypedefDecl 0x5585e95857e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9585858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5585e951df10 'int'
|-TypedefDecl 0x5585e95858c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5585e951df10 'int'
|-TypedefDecl 0x5585e9585938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5585e951df10 'int'
|-TypedefDecl 0x5585e95859a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5585e951e630 'void *'
|   `-BuiltinType 0x5585e951de70 'void'
|-TypedefDecl 0x5585e9585a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9585a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9585af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9585b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9585bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9585c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9585cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9585d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9585d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9585e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9585e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9585f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5585e9585ed0 '__off64_t' sugar
|   |-Typedef 0x5585e95851c8 '__off64_t'
|   `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9586000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5585e9585fc0 '__quad_t *'
|   `-TypedefType 0x5585e9585f60 '__quad_t' sugar
|     |-Typedef 0x5585e9584d68 '__quad_t'
|     `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9586070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5585e951eab0 'char *'
|   `-BuiltinType 0x5585e951deb0 'char'
|-TypedefDecl 0x5585e95860e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e9586150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5585e951dfb0 'unsigned int'
|-FunctionDecl 0x5585e9586298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5585e95861c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5585e95875e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5585e95875d8 <line:72:3, col:34>
|     `-CallExpr 0x5585e9587598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5585e9587580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5585e9587510 <col:10> '<builtin fn type>' Function 0x5585e9587380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5585e95875c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5585e9587530 <col:29> 'unsigned int' lvalue ParmVar 0x5585e95861c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5585e9587380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5585e9587420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5585e9587490 <col:10> Implicit
| `-ConstAttr 0x5585e95874e8 <col:10> Implicit
|-FunctionDecl 0x5585e9587740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5585e9587638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5585e9587a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5585e9587a48 <line:77:3, col:34>
|     `-CallExpr 0x5585e9587a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5585e95879f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5585e9587978 <col:10> '<builtin fn type>' Function 0x5585e95877e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5585e9587a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5585e9587998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5585e9587638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5585e95877e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5585e9587888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5585e95878f8 <col:10> Implicit
| `-ConstAttr 0x5585e9587950 <col:10> Implicit
|-TypedefDecl 0x5585e9587a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-TypedefDecl 0x5585e9587b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5585e9587ae0 '__time_t' sugar
|   |-Typedef 0x5585e9585708 '__time_t'
|   `-BuiltinType 0x5585e951df30 'long'
|-RecordDecl 0x5585e9587b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5585e9587c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5585e9587cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5585e9587d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5585e9587d10 '__pid_t' sugar
|   |-Typedef 0x5585e9585238 '__pid_t'
|   `-BuiltinType 0x5585e951df10 'int'
|-RecordDecl 0x5585e9587da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5585e9587e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5585e9587eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5585e9587f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5585e9587fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-RecordDecl 0x5585e9588030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5585e95882c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5585e95893a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5585e9588310 'struct cpu_set_t' sugar
|   `-RecordType 0x5585e95880b0 'cpu_set_t'
|     `-Record 0x5585e9588030 ''
|-FunctionDecl 0x5585e9589678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5585e9589448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5585e9589550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5585e9589728 <line:107:19>
|-FunctionDecl 0x5585e9589900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5585e9589790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5585e95899a8 <col:69>
|-FunctionDecl 0x5585e9589b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5585e9589a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5585e9589bc8 <col:64>
|-FunctionDecl 0x5585e9589e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5585e9589c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5585e9589d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5585e9589f38 <line:113:22>
|-FunctionDecl 0x5585e958a1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5585e9589fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5585e958a098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5585e958a268 <col:88>
|-FunctionDecl 0x5585e958a588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5585e958a2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5585e958a3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5585e958a440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5585e958a640 <col:62>
|-FunctionDecl 0x5585e958a7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5585e958a6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5585e958a860 <col:63>
|-FunctionDecl 0x5585e958a988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5585e958aa28 <col:47>
|-FunctionDecl 0x5585e958ab30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5585e958aa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5585e958abd8 <col:69>
|-FunctionDecl 0x5585e958ace0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5585e958ac48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5585e958ad88 <col:69>
|-FunctionDecl 0x5585e958b048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5585e958adf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5585e958af28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5585e958b0f8 <col:88>
|-TypedefDecl 0x5585e958b188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5585e958b150 '__clock_t' sugar
|   |-Typedef 0x5585e9585548 '__clock_t'
|   `-BuiltinType 0x5585e951df30 'long'
|-TypedefDecl 0x5585e958b218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5585e958b1e0 '__clockid_t' sugar
|   |-Typedef 0x5585e9585938 '__clockid_t'
|   `-BuiltinType 0x5585e951df10 'int'
|-TypedefDecl 0x5585e958b2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5585e958b270 '__timer_t' sugar
|   |-Typedef 0x5585e95859a8 '__timer_t'
|   `-PointerType 0x5585e951e630 'void *'
|     `-BuiltinType 0x5585e951de70 'void'
|-RecordDecl 0x5585e958b300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5585e958b3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5585e958b440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5585e958b4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5585e958b510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5585e958b578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5585e958b5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5585e958b648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5585e958b6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5585e958b718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5585e958b780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5585e958b7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5585e958b838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5585e958b908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5585e958b978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5585e958ba20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5585e958bbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5585e958bc90 <col:45>
|-FunctionDecl 0x5585e958be70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5585e958bd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5585e958bf18 <col:54>
|-FunctionDecl 0x5585e958c118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5585e958bf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5585e958bff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5585e958c1c8 <line:157:22>
| `-ConstAttr 0x5585e958c220 <col:63>
|-FunctionDecl 0x5585e958d050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5585e958c318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5585e958d0f8 <col:56>
|-FunctionDecl 0x5585e958d4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5585e958d168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5585e958d1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5585e958d260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5585e958d358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5585e958d560 <col:54>
|-RecordDecl 0x5585e958d5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5585e958d668 parent 0x5585e951de18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5585e958d8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5585e958d968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5585e958d9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5585e958da38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5585e958db28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5585e958dc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5585e958dbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5585e958db80 'struct __locale_struct' sugar
|     `-RecordType 0x5585e958d640 'struct __locale_struct'
|       `-Record 0x5585e958d5b8 '__locale_struct'
|-TypedefDecl 0x5585e958dcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5585e958dcc0 '__locale_t' sugar
|   |-Typedef 0x5585e958dc48 '__locale_t'
|   `-PointerType 0x5585e958dbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5585e958db80 'struct __locale_struct' sugar
|       `-RecordType 0x5585e958d640 'struct __locale_struct'
|         `-Record 0x5585e958d5b8 '__locale_struct'
|-FunctionDecl 0x5585e958f110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5585e958dd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5585e958dde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5585e958de60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5585e958def0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5585e958df68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5585e958f1d8 <col:40>
|-FunctionDecl 0x5585e958f3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5585e958f2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5585e958f470 <col:66>
|-FunctionDecl 0x5585e958f580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5585e958f4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5585e958f628 <col:69>
|-FunctionDecl 0x5585e958f858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5585e958f690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5585e958f720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5585e958f908 <col:52>
|-FunctionDecl 0x5585e958fab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5585e958f970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5585e958fa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5585e958fb60 <col:55>
|-FunctionDecl 0x5585e958fcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5585e958fbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5585e958fda0 <col:62>
|-FunctionDecl 0x5585e958ff18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5585e958fe08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5585e958ffc0 <col:60>
|-FunctionDecl 0x5585e95902b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5585e9590118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5585e9590198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5585e9590368 <col:44>
|-FunctionDecl 0x5585e9590578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5585e95903d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5585e9590450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5585e9590628 <col:49>
|-VarDecl 0x5585e9590728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5585e95907a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5585e9590828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5585e95908f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5585e9590a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5585e9590ac0 <col:42>
|-VarDecl 0x5585e9590b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5585e9590bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5585e9590d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5585e9590c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5585e9590de0 <col:57>
|-FunctionDecl 0x5585e9590ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5585e9590e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5585e9590f98 <col:56>
|-FunctionDecl 0x5585e95910d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5585e9591018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5585e9591178 <col:59>
|-FunctionDecl 0x5585e9591280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5585e95911e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5585e9591328 <col:48>
| `-ConstAttr 0x5585e9591380 <col:89>
|-FunctionDecl 0x5585e95915e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5585e9591438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5585e95914c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5585e9591848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5585e95916d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5585e9591768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5585e95918f8 <col:88>
|-FunctionDecl 0x5585e9591a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5585e9591960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5585e95919f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5585e9591b40 <col:88>
|-FunctionDecl 0x5585e9591d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5585e9591ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5585e9591c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5585e9591e08 <line:208:22>
|-FunctionDecl 0x5585e9592178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5585e9591e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5585e9591ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5585e9591f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5585e9592010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5585e9592478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5585e9592278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5585e9592350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5585e9592528 <col:85>
|-FunctionDecl 0x5585e9592918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5585e9592590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5585e95926c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5585e95927d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5585e95929d0 <col:52>
|-FunctionDecl 0x5585e9592b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5585e9592a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5585e9592bf0 <col:61>
|-FunctionDecl 0x5585e95930f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5585e9592c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5585e9592cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5585e9592e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5585e9592ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5585e95931b0 <col:62>
|-FunctionDecl 0x5585e95933c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5585e9593218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5585e95932a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5585e9593478 <line:221:22>
|-FunctionDecl 0x5585e9593578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5585e95934e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5585e9593620 <col:65>
|-TypedefDecl 0x5585e9593690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5585e951dfd0 'unsigned long'
|-RecordDecl 0x5585e95936e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5585e9593830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5585e9593898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5585e9593948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5585e95938f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5585e9593770 'union pthread_attr_t'
|     `-Record 0x5585e95936e8 'pthread_attr_t'
|-RecordDecl 0x5585e95939a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5585e9593b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5585e9593b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5585e9593c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5585e9593be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5585e9593a20 'struct __pthread_internal_list'
|     `-Record 0x5585e95939a0 '__pthread_internal_list'
|-RecordDecl 0x5585e9593cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5585e9593d58 parent 0x5585e951de18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5585e9593e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5585e9593e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5585e9593f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5585e9593f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5585e9593fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5585e9594038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5585e9598110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5585e95981c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5585e95982b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5585e9598318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5585e95984a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5585e9598440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5585e9593d30 'pthread_mutex_t'
|     `-Record 0x5585e9593cb0 ''
|-RecordDecl 0x5585e9598510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5585e9598650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5585e95986b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5585e9598770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5585e9598710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5585e9598590 'pthread_mutexattr_t'
|     `-Record 0x5585e9598510 ''
|-RecordDecl 0x5585e95987e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5585e9598888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5585e9598950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5585e95989b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5585e9598a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5585e9598a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5585e9598af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5585e9598b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5585e9598bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5585e9598c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5585e9598ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_5/mix023_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_5/mix023_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5585e9598dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5585e9598e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5585e9598f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5585e9598f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5585e9598860 'pthread_cond_t'
|     `-Record 0x5585e95987e0 ''
|-RecordDecl 0x5585e9598fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5585e959a130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5585e959a198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5585e959a250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5585e959a1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5585e9599060 'pthread_condattr_t'
|     `-Record 0x5585e9598fe0 ''
|-TypedefDecl 0x5585e959a2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5585e951dfb0 'unsigned int'
|-TypedefDecl 0x5585e959a348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5585e951df10 'int'
|-RecordDecl 0x5585e959a3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5585e959a448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5585e959a510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5585e959a578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5585e959a5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5585e959a648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5585e959a6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5585e959a718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5585e959a780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5585e959a7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5585e959a850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5585e959a8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5585e959a920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5585e959a9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_5/mix023_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_5/mix023_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5585e959aa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5585e959aae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5585e959ac30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5585e959abd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5585e959a420 'pthread_rwlock_t'
|     `-Record 0x5585e959a3a0 ''
|-RecordDecl 0x5585e959aca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5585e959ade0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5585e959ae48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5585e959af00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5585e959aea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5585e959ad20 'pthread_rwlockattr_t'
|     `-Record 0x5585e959aca0 ''
|-TypedefDecl 0x5585e959af88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5585e951df14 'volatile int' volatile
|   `-BuiltinType 0x5585e951df10 'int'
|-RecordDecl 0x5585e959afe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5585e959c140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5585e959c1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5585e959c260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5585e959c200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5585e959b060 'pthread_barrier_t'
|     `-Record 0x5585e959afe0 ''
|-RecordDecl 0x5585e959c2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5585e959c3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5585e959c438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5585e959c4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5585e959c490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5585e959c350 'pthread_barrierattr_t'
|     `-Record 0x5585e959c2d0 ''
|-TypedefDecl 0x5585e959c608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5585e959c5a0 'long [8]' 8 
|   `-BuiltinType 0x5585e951df30 'long'
|-EnumDecl 0x5585e959c660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5585e959c728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5585e959c778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5585e959c7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5585e959c898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5585e959c8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5585e959c938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5585e959c988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5585e959ca10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5585e959c9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5585e959c9d8 <col:26> 'int' EnumConstant 0x5585e959c898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5585e959ca98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5585e959ca80 <col:29> 'int'
| |   `-DeclRefExpr 0x5585e959ca60 <col:29> 'int' EnumConstant 0x5585e959c8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5585e959cb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5585e959cb08 <col:30> 'int'
| |   `-DeclRefExpr 0x5585e959cae8 <col:30> 'int' EnumConstant 0x5585e959c938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5585e959cba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5585e959cb90 <col:27> 'int'
|     `-DeclRefExpr 0x5585e959cb70 <col:27> 'int' EnumConstant 0x5585e959ca10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5585e959cbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5585e959ccc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5585e959cd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5585e959cd38 <col:30> 'int'
| |   `-DeclRefExpr 0x5585e959cd18 <col:30> 'int' EnumConstant 0x5585e959ccc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5585e959cda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5585e959ce28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5585e959ce10 <col:29> 'int'
|     `-DeclRefExpr 0x5585e959cdf0 <col:29> 'int' EnumConstant 0x5585e959cda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5585e959ce78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5585e959cf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5585e959cf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5585e959cfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5585e959d038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5585e959d150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5585e959d1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5585e959d1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5585e959d278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5585e959d260 <col:31> 'int'
|     `-DeclRefExpr 0x5585e959d240 <col:31> 'int' EnumConstant 0x5585e959d150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5585e959d2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5585e959d398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5585e959d3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5585e959d438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5585e959d508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5585e959d558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5585e959d5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5585e959d678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5585e959d6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5585e959d718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5585e959d958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5585e959d9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5585e959da28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5585e959db48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5585e959db98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5585e959dc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5585e959dcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5585e959dd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5585e959ddd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5585e959de28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5585e959e488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5585e959df20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5585e959e030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585e959e270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5585e959e2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5585e959e548 <col:47>
| |-NonNullAttr 0x5585e959e5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5585e959e5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5585e959e700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5585e959e630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5585e959e958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5585e959e7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5585e959e838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5585e959eb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5585e959ea18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5585e959ebd0 <col:60>
|-FunctionDecl 0x5585e959ed20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5585e959edc0 <col:54>
| `-ConstAttr 0x5585e959ee18 <col:95>
|-FunctionDecl 0x5585e959efe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5585e959ee50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5585e959eec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5585e959f098 <line:394:19>
| `-ConstAttr 0x5585e959f0f0 <col:60>
|-FunctionDecl 0x5585e95a0b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5585e95a09d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5585e95a0bb0 <col:71>
| `-NonNullAttr 0x5585e95a0c08 <col:112, col:126> 1
|-FunctionDecl 0x5585e95a0d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5585e95a0c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5585e95a0db8 <line:397:22>
| `-NonNullAttr 0x5585e95a0e10 <col:63, col:77> 1
|-FunctionDecl 0x5585e95a1038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5585e95a0e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5585e95a0ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5585e95a10e8 <line:400:22>
| `-NonNullAttr 0x5585e95a1140 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95a1348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5585e95a1188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585e95a1208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5585e95a13f8 <line:403:22>
| `-NonNullAttr 0x5585e95a1450 <col:63, col:77> 1
|-FunctionDecl 0x5585e95a16a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5585e95a1498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5585e95a1540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5585e95a1758 <line:406:22>
| `-NonNullAttr 0x5585e95a17b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95a29e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5585e95a17f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585e95a1870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5585e95a2a98 <line:409:22>
| `-NonNullAttr 0x5585e95a2af0 <col:63, col:77> 1
|-FunctionDecl 0x5585e95a2d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5585e95a2b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585e95a2bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5585e95a2dd8 <line:412:22>
| `-NonNullAttr 0x5585e95a2e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95a3068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5585e95a2e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585e95a2f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5585e95a3118 <col:37>
| `-NonNullAttr 0x5585e95a3170 <col:78, col:95> 1 2
|-FunctionDecl 0x5585e95a3358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95a31b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585e95a3238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5585e95a3408 <line:418:22>
| `-NonNullAttr 0x5585e95a3460 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95a35e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5585e95a34a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585e95a3528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5585e95a3698 <line:420:22>
| `-NonNullAttr 0x5585e95a36f0 <col:63, col:77> 1
|-FunctionDecl 0x5585e95a3898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95a3738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585e95a37b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5585e95a3948 <line:423:22>
| `-NonNullAttr 0x5585e95a39c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95a3b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5585e95a3a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585e95a3a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5585e95a3bf8 <line:426:22>
| `-NonNullAttr 0x5585e95a3c50 <col:63, col:77> 1
|-FunctionDecl 0x5585e95a3df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95a3c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585e95a3d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5585e95a3ea8 <line:429:22>
| `-NonNullAttr 0x5585e95a3f00 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95a4088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5585e95a3f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585e95a3fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5585e95a4138 <line:431:22>
| `-NonNullAttr 0x5585e95a4190 <col:63, col:77> 1
|-FunctionDecl 0x5585e95a43b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5585e95a41d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585e95a4258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5585e95a4468 <line:434:22>
| |-NonNullAttr 0x5585e95a44c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5585e95a44f8 <col:100> "" ""
|-FunctionDecl 0x5585e95a4708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5585e95a4548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585e95a45c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5585e95a47b8 <line:437:22>
| |-NonNullAttr 0x5585e95a4810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5585e95a4848 <col:97> "" ""
|-FunctionDecl 0x5585e95a4a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5585e95a4898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585e95a4910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5585e95a4af8 <line:440:22>
| `-NonNullAttr 0x5585e95a4b50 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95a4cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5585e95a4b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585e95a4c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5585e95a4d80 <line:443:22>
| `-NonNullAttr 0x5585e95a4dd8 <col:63, col:77> 1
|-FunctionDecl 0x5585e95a50c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5585e95a4e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5585e95a4ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5585e95a4f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5585e95a5180 <line:447:22>
| `-NonNullAttr 0x5585e95a51d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5585e95a5488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5585e95a5230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5585e95a52b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5585e95a5328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5585e95a5540 <col:43>
| `-NonNullAttr 0x5585e95a5598 <col:84, col:98> 1
|-FunctionDecl 0x5585e95a5858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5585e95a55e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5585e95a5668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5585e95a56f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5585e95a5910 <line:452:22>
| `-NonNullAttr 0x5585e95a5968 <col:63, col:77> 3
|-FunctionDecl 0x5585e95a5c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5585e95a59e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5585e95a5a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5585e95a5af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5585e95a5d30 <line:456:22>
| `-NonNullAttr 0x5585e95a5d88 <col:63, col:80> 2 3
|-FunctionDecl 0x5585e95a5f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5585e95a5dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5585e95a5e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5585e95a6028 <line:458:22>
|-FunctionDecl 0x5585e95a63f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5585e95a60f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5585e95a6290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5585e95a64a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5585e95a6650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5585e95a6530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5585e95a65b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5585e95a6838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5585e95a6718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5585e95a6798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5585e95a69f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5585e95a68f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5585e95a6b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5585e95a6bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5585e95a6c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5585e95a6d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5585e95a6dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5585e95a6fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_5/mix023_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5585e95a7098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5585e95a7150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5585e95a70f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5585e95a6c50 '__pthread_unwind_buf_t'
| |   `-Record 0x5585e95a6bd0 ''
| `-AlignedAttr 0x5585e95a71a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5585e95a7220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5585e95a7380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5585e95a73e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5585e95a7450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5585e95a74b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5585e95a76c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5585e95a75b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5585e95a7808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5585e95a7778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5585e95a7a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5585e95a78c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5585e95a7aa8 <line:487:22>
|-RecordDecl 0x5585e95a7b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5585e95a7e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5585e95a7c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5585e95a7cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5585e95a7ec8 <col:86>
| `-ReturnsTwiceAttr 0x5585e95a7f20 <col:12> Implicit
|-FunctionDecl 0x5585e95a8248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5585e95a7ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5585e95a8100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5585e95a82f8 <line:493:22>
| `-NonNullAttr 0x5585e95a8350 <col:63, col:77> 1
|-FunctionDecl 0x5585e95a84c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5585e95a8398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5585e95a8570 <line:495:22>
| `-NonNullAttr 0x5585e95a85c8 <col:63, col:77> 1
|-FunctionDecl 0x5585e95a86d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5585e95a8618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5585e95a8778 <line:497:22>
| `-NonNullAttr 0x5585e95a87d0 <col:52, col:66> 1
|-FunctionDecl 0x5585e95a88d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5585e95a8818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5585e95a8978 <line:499:22>
| `-NonNullAttr 0x5585e95a89d0 <col:52, col:66> 1
|-FunctionDecl 0x5585e95a9c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5585e95a9a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5585e95a9ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5585e95a9cd8 <col:36>
| `-NonNullAttr 0x5585e95a9d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5585e95a9e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5585e95a9d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5585e95a9ed8 <line:504:22>
| `-NonNullAttr 0x5585e95a9f30 <col:52, col:66> 1
|-FunctionDecl 0x5585e95aa1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95a9fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5585e95aa060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5585e95aa278 <line:508:22>
| `-NonNullAttr 0x5585e95aa2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95aa598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5585e95aa318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5585e95aa398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5585e95aa418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5585e95aa650 <line:512:22>
| `-NonNullAttr 0x5585e95aa6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5585e95aa7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5585e95aa6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5585e95aa858 <line:514:22>
| `-NonNullAttr 0x5585e95aa8b0 <col:63, col:77> 1
|-FunctionDecl 0x5585e95aaad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5585e95aa960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5585e95aab80 <line:516:22>
| `-NonNullAttr 0x5585e95aabd8 <col:63, col:77> 1
|-FunctionDecl 0x5585e95aace0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5585e95aac28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5585e95aad88 <line:518:22>
| `-NonNullAttr 0x5585e95aade0 <col:63, col:77> 1
|-FunctionDecl 0x5585e95ab008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95aae28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5585e95aaea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5585e95ab0b8 <line:522:22>
| `-NonNullAttr 0x5585e95ab110 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95ab318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5585e95ab158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585e95ab1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5585e95ab3c8 <line:525:22>
| `-NonNullAttr 0x5585e95ab420 <col:63, col:77> 1
|-FunctionDecl 0x5585e95ab5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95ab468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5585e95ab4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5585e95ab678 <line:528:22>
| `-NonNullAttr 0x5585e95ab6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95ab858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5585e95ab718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585e95ab798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5585e95ab908 <line:530:22>
| `-NonNullAttr 0x5585e95ab960 <col:63, col:77> 1
|-FunctionDecl 0x5585e95abb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95ab9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5585e95aba40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5585e95abbd0 <line:534:22>
| `-NonNullAttr 0x5585e95abc28 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95abdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5585e95abc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585e95abcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5585e95abe68 <line:537:22>
| `-NonNullAttr 0x5585e95abec0 <col:63, col:77> 1
|-FunctionDecl 0x5585e95ac068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95abf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5585e95abf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5585e95ac118 <line:541:22>
| `-NonNullAttr 0x5585e95ac170 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95ac2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5585e95ac1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585e95ac238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5585e95ac3a8 <line:544:22>
| `-NonNullAttr 0x5585e95ac400 <col:63, col:77> 1
|-FunctionDecl 0x5585e95ac5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5585e95ac448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585e95ac4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5585e95ac698 <line:547:22>
| `-NonNullAttr 0x5585e95ac6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95ac878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5585e95ac738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5585e95ac7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5585e95ac928 <line:550:22>
| `-NonNullAttr 0x5585e95ac980 <col:63, col:77> 1
|-FunctionDecl 0x5585e95adcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5585e95adaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5585e95adbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5585e95adda8 <col:29>
| `-NonNullAttr 0x5585e95ade00 <col:70, col:84> 1
|-FunctionDecl 0x5585e95adf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585e95ade48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585e95ae020 <line:555:22>
| `-NonNullAttr 0x5585e95ae078 <col:63, col:77> 1
|-FunctionDecl 0x5585e95ae180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585e95ae0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585e95ae228 <line:557:22>
| `-NonNullAttr 0x5585e95ae280 <col:52, col:66> 1
|-FunctionDecl 0x5585e95ae380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585e95ae2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585e95ae428 <line:559:19>
| `-NonNullAttr 0x5585e95ae480 <col:49, col:63> 1
|-FunctionDecl 0x5585e95ae6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5585e95ae4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5585e95ae558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5585e95ae768 <col:39>
| `-NonNullAttr 0x5585e95ae7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5585e95ae8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585e95ae808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585e95ae968 <line:564:22>
| `-NonNullAttr 0x5585e95ae9c0 <col:52, col:66> 1
|-FunctionDecl 0x5585e95aeb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585e95aea70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585e95aebd0 <line:566:22>
| `-NonNullAttr 0x5585e95aec28 <col:52, col:66> 1
|-FunctionDecl 0x5585e95aede8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5585e95aec78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5585e95aed08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5585e95aee98 <col:39>
| `-NonNullAttr 0x5585e95aeef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5585e95aeff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5585e95aef38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5585e95af098 <line:571:22>
| `-NonNullAttr 0x5585e95af0f0 <col:52, col:66> 1
|-FunctionDecl 0x5585e95af2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5585e95af1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5585e95af380 <line:573:22>
| `-NonNullAttr 0x5585e95af3d8 <col:63, col:77> 1
|-FunctionDecl 0x5585e95af4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5585e95af428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5585e95af588 <line:575:22>
| `-NonNullAttr 0x5585e95af5e0 <col:63, col:77> 1
|-FunctionDecl 0x5585e95af808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95af628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5585e95af6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5585e95af8b8 <line:579:22>
| `-NonNullAttr 0x5585e95af910 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95afb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5585e95af958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5585e95af9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5585e95afbe8 <line:582:22>
| `-NonNullAttr 0x5585e95afc40 <col:63, col:77> 1
|-FunctionDecl 0x5585e95afde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95afc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5585e95afd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5585e95afe98 <line:586:22>
| `-NonNullAttr 0x5585e95afef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95b0078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5585e95aff38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5585e95affb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5585e95b0128 <col:36>
| `-NonNullAttr 0x5585e95b0180 <col:77, col:91> 1
|-FunctionDecl 0x5585e95b04b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5585e95b0260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5585e95b0370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5585e95b0568 <line:591:22>
| `-NonNullAttr 0x5585e95b05c0 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b0738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5585e95b0608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5585e95b07e0 <line:593:22>
| `-NonNullAttr 0x5585e95b0838 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b0940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5585e95b0888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5585e95b09e8 <line:595:22>
| `-NonNullAttr 0x5585e95b0a40 <col:52, col:66> 1
|-FunctionDecl 0x5585e95b0b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5585e95b0aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5585e95b0c00 <line:597:22>
| `-NonNullAttr 0x5585e95b0c58 <col:52, col:66> 1
|-FunctionDecl 0x5585e95b0e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5585e95b0ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5585e95b0d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5585e95b0f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5585e95b1268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5585e95b0fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5585e95b1030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5585e95b10c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5585e95b1320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5585e95b1538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5585e95b1400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5585e95b15e0 <line:606:22>
| `-NonNullAttr 0x5585e95b1638 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b1740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5585e95b1688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5585e95b17e8 <line:608:22>
| `-NonNullAttr 0x5585e95b1840 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b1aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95b1888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5585e95b1908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5585e95b1b50 <line:612:22>
| `-NonNullAttr 0x5585e95b1ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95b1db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5585e95b1bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5585e95b1c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5585e95b1e68 <col:37>
| `-NonNullAttr 0x5585e95b1ec0 <col:78, col:92> 1
|-FunctionDecl 0x5585e95b20d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5585e95b1f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5585e95b1fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5585e95b2188 <line:618:22>
| `-NonNullAttr 0x5585e95b21e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95b23a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5585e95b2228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5585e95b22a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5585e95b2458 <line:621:22>
| `-NonNullAttr 0x5585e95b24b0 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b2758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5585e95b2590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5585e95b2610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5585e95b2808 <line:623:22>
| `-NonNullAttr 0x5585e95b2860 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b29d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5585e95b28a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5585e95b2ab0 <line:625:22>
| `-NonNullAttr 0x5585e95b2b08 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b2c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5585e95b2b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5585e95b2cb8 <line:627:22>
| `-NonNullAttr 0x5585e95b2d10 <col:52, col:66> 1
|-FunctionDecl 0x5585e95b2e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5585e95b2d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5585e95b2eb8 <line:629:22>
| `-NonNullAttr 0x5585e95b2f10 <col:52, col:66> 1
|-FunctionDecl 0x5585e95b3010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5585e95b2f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5585e95b30b8 <line:631:22>
| `-NonNullAttr 0x5585e95b3110 <col:52, col:66> 1
|-FunctionDecl 0x5585e95b34e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5585e95b31f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5585e95b3300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5585e95b3380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5585e95b35a0 <line:635:22>
| `-NonNullAttr 0x5585e95b35f8 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b3778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5585e95b3648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5585e95b3820 <line:637:22>
| `-NonNullAttr 0x5585e95b3878 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b3980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5585e95b38c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5585e95b3a28 <line:639:22>
| `-NonNullAttr 0x5585e95b3a80 <col:52, col:66> 1
|-FunctionDecl 0x5585e95b4c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5585e95b4b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5585e95b4d30 <line:641:22>
| `-NonNullAttr 0x5585e95b4d88 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b4e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5585e95b4dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5585e95b4f38 <line:643:22>
| `-NonNullAttr 0x5585e95b4f90 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b51b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5585e95b4fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5585e95b5058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5585e95b5268 <line:647:22>
| `-NonNullAttr 0x5585e95b52c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5585e95b54c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5585e95b5308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5585e95b5388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5585e95b5578 <line:650:22>
| `-NonNullAttr 0x5585e95b55d0 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b5918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5585e95b56b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5585e95b57d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5585e95b59c8 <line:653:22>
| `-NonNullAttr 0x5585e95b5a20 <col:63, col:77> 1
|-FunctionDecl 0x5585e95b5b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5585e95b5a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5585e95b5c30 <col:69>
|-FunctionDecl 0x5585e95b5da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5585e95b5c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5585e95b5e50 <col:72>
|-FunctionDecl 0x5585e95b6088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5585e95b5eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5585e95b5f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5585e95b6138 <col:44>
|-FunctionDecl 0x5585e95b6358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5585e95b61a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5585e95b6218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5585e95b6408 <line:660:22>
| `-NonNullAttr 0x5585e95b6460 <col:63, col:77> 2
|-FunctionDecl 0x5585e95b68a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5585e95b6540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5585e95b6650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5585e95b6760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5585e95b6960 <col:47>
|-FunctionDecl 0x5585e95b6af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5585e95b69d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5585e95b6c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5585e95b6bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5585e95b6da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5585e95b6d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5585e95b6ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5585e95b6e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5585e95b6fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5585e95b7080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5585e95b7140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5585e95b71f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5585e95b7278 prev 0x5585e95b71f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5585e95b72e0 <col:24> 'int' 0
|-VarDecl 0x5585e95b7318 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5585e95b7398 prev 0x5585e95b7318 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5585e95b7400 <col:27> 'int' 0
|-VarDecl 0x5585e95b7438 <line:676:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5585e95b74b8 prev 0x5585e95b7438 <line:677:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5585e95b7520 <col:27> 'int' 0
|-VarDecl 0x5585e95b7558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5585e95b75d8 prev 0x5585e95b7558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5585e95b7640 <col:27> 'int' 0
|-VarDecl 0x5585e95b7678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5585e95b76f8 prev 0x5585e95b7678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5585e95b7760 <col:27> 'int' 0
|-VarDecl 0x5585e95b7798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x5585e95b7818 prev 0x5585e95b7798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5585e95b7880 <col:9> 'int' 0
|-VarDecl 0x5585e95b78b0 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x5585e95b7930 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x5585e95b79a8 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x5585e95b7a20 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x5585e95b7b00 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x5585e95b7b78 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x5585e95b7bf0 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x5585e95b7c68 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x5585e95b7ce0 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x5585e95b7d58 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x5585e95b7dd0 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x5585e95b7e48 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x5585e95b7ec0 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x5585e95b7f40 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x5585e95b7fc0 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x5585e95b8038 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x5585e95b80b8 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x5585e95b8130 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x5585e95b81a8 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5585e95b8220 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5585e95b82a0 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x5585e95b8320 prev 0x5585e95b82a0 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5585e95b8388 <col:9> 'int' 0
|-VarDecl 0x5585e95b83c0 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x5585e95b8440 prev 0x5585e95b83c0 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5585e95b84a8 <col:9> 'int' 0
|-VarDecl 0x5585e95b84e0 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x5585e95b8560 prev 0x5585e95b84e0 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5585e95b85c8 <col:9> 'int' 0
|-VarDecl 0x5585e95b85f8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5585e95b8670 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5585e95b8788 prev 0x5585e95b6af0 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5585e95b86f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5585e95ba028 <line:713:1, line:741:1>
|   |-CallExpr 0x5585e95b8898 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95b8880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95b8830 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95b8910 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5585e95b88b8 <col:3> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5585e95b88f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95b88d8 <col:15> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x5585e95b8970 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5585e95b8930 <col:3> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x5585e95b8950 <col:15> 'int' 1
|   |-BinaryOperator 0x5585e95b89e8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b8990 <col:3> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95b89d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95b89b0 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5585e95b8a80 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b8a08 <col:3> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5585e95b8a58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5585e95b8a28 <col:27> 'int' 1
|   |-CallExpr 0x5585e95b8c18 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5585e95b8c00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5585e95b8aa0 <col:3> 'void (int)' Function 0x5585e955dbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5585e95b8bb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5585e95b8b90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5585e95b8b70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5585e95b8b28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5585e95b8b10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5585e95b8ac0 <col:23> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5585e95b8b58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5585e95b8b40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5585e95b8ae0 <col:41> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5585e95b8c98 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b8c40 <col:3> '_Bool' lvalue Var 0x5585e95b7c68 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95b8c80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95b8c60 <col:20> '_Bool' lvalue Var 0x5585e95b79a8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5585e95b8d10 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b8cb8 <col:3> '_Bool' lvalue Var 0x5585e95b7ce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95b8cf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95b8cd8 <col:20> '_Bool' lvalue Var 0x5585e95b7a20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5585e95b8d88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b8d30 <col:3> '_Bool' lvalue Var 0x5585e95b7d58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95b8d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95b8d50 <col:20> '_Bool' lvalue Var 0x5585e95b7b00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5585e95b8e00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b8da8 <col:3> '_Bool' lvalue Var 0x5585e95b7dd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95b8de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95b8dc8 <col:20> '_Bool' lvalue Var 0x5585e95b7b78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5585e95b8e78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b8e20 <col:3> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95b8e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95b8e40 <col:20> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5585e95b8f10 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b8e98 <col:3> '_Bool' lvalue Var 0x5585e95b7a20 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5585e95b8ee8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5585e95b8eb8 <col:27> 'int' 1
|   |-CallExpr 0x5585e95b8f68 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95b8f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95b8f30 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95b8fc0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95b8fa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95b8f88 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95b9020 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5585e95b8fe0 <col:3> 'int' lvalue Var 0x5585e95b8320 'x' 'int'
|   | `-IntegerLiteral 0x5585e95b9000 <col:7> 'int' 1
|   |-CallExpr 0x5585e95b9078 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95b9060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95b9040 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95b90d0 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95b90b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95b9098 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95b93b8 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5585e95b90f0 <col:3> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   | `-ConditionalOperator 0x5585e95b9388 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5585e95b91b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5585e95b9168 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5585e95b9150 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5585e95b9110 <col:7> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5585e95b9198 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5585e95b9180 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5585e95b9130 <col:25> '_Bool' lvalue Var 0x5585e95b7a20 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5585e95b9370 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95b91d0 <col:42> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5585e95b9350 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5585e95b9320 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5585e95b9290 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5585e95b9248 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5585e95b9230 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5585e95b91f0 <col:55> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5585e95b9278 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5585e95b9260 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5585e95b9210 <col:73> '_Bool' lvalue Var 0x5585e95b7ce0 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5585e95b92f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585e95b92b0 <col:90> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5585e95b9308 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95b92d0 <col:102> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   |-BinaryOperator 0x5585e95b95c0 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b93d8 <col:3> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95b95a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95b9578 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585e95b9498 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585e95b9450 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585e95b9438 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585e95b93f8 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585e95b9480 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585e95b9468 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585e95b9418 <col:38> '_Bool' lvalue Var 0x5585e95b7a20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95b9530 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95b94e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95b94b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95b9560 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95b9548 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95b9510 <col:66> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5585e95b98a8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b95e0 <col:3> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95b9890 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95b9860 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585e95b9780 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585e95b96a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585e95b9658 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585e95b9640 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585e95b9600 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585e95b9688 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585e95b9670 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585e95b9620 <col:38> '_Bool' lvalue Var 0x5585e95b7a20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5585e95b9760 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585e95b9718 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585e95b9700 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585e95b96c0 <col:56> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585e95b9748 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585e95b9730 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585e95b96e0 <col:74> '_Bool' lvalue Var 0x5585e95b7ce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95b9818 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95b97d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95b97a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95b9848 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95b9830 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95b97f8 <col:102> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5585e95b9ab0 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b98c8 <col:3> '_Bool' lvalue Var 0x5585e95b7a20 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95b9a98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95b9a68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585e95b9988 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585e95b9940 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585e95b9928 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585e95b98e8 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585e95b9970 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585e95b9958 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585e95b9908 <col:38> '_Bool' lvalue Var 0x5585e95b7a20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95b9a20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95b99d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95b99a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95b9a50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95b9a38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95b9a00 <col:66> '_Bool' lvalue Var 0x5585e95b7a20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5585e95b9da8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95b9ad0 <col:3> '_Bool' lvalue Var 0x5585e95b7ce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95b9d90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95b9d60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585e95b9c80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585e95b9ba0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585e95b9b58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585e95b9b40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585e95b9af0 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585e95b9b88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585e95b9b70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585e95b9b20 <col:38> '_Bool' lvalue Var 0x5585e95b7a20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5585e95b9c60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585e95b9c18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585e95b9c00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585e95b9bc0 <col:56> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585e95b9c48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585e95b9c30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585e95b9be0 <col:74> '_Bool' lvalue Var 0x5585e95b7ce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95b9d18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95b9cd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95b9ca0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95b9d48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95b9d30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95b9cf8 <col:102> '_Bool' lvalue Var 0x5585e95b7ce0 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5585e95b9e00 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95b9de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95b9dc8 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95b9e58 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95b9e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95b9e20 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95b9f10 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5585e95b9e78 <col:3> 'int' lvalue Var 0x5585e95b7278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5585e95b9ef0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5585e95b9ed8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95b9e98 <col:22> 'int' lvalue Var 0x5585e95b7278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5585e95b9eb8 <col:41> 'int' 1
|   |-CallExpr 0x5585e95b9f68 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95b9f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95b9f30 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5585e95ba018 <line:740:3, col:36>
|     `-CallExpr 0x5585e95b9ff8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5585e95b9fe0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5585e95b9f88 <col:10> 'void *(void)' Function 0x5585e955d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5585e95ba1c0 prev 0x5585e95b6c48 <line:742:1, line:764:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5585e95ba128 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5585e95bb530 <line:743:1, line:764:1>
|   |-CallExpr 0x5585e95ba2a0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95ba288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95ba268 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95ba300 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5585e95ba2c0 <col:3> 'int' lvalue Var 0x5585e95b8320 'x' 'int'
|   | `-IntegerLiteral 0x5585e95ba2e0 <col:7> 'int' 2
|   |-CallExpr 0x5585e95ba358 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95ba340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95ba320 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95ba3b0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95ba398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95ba378 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95ba428 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5585e95ba3d0 <col:3> 'int' lvalue Var 0x5585e95b7398 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5585e95ba410 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95ba3f0 <col:25> 'int' lvalue Var 0x5585e95b8320 'x' 'int'
|   |-CallExpr 0x5585e95ba480 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95ba468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95ba448 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95ba4d8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95ba4c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95ba4a0 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95ba550 <line:751:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5585e95ba4f8 <col:3> 'int' lvalue Var 0x5585e95b74b8 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5585e95ba538 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95ba518 <col:25> 'int' lvalue Var 0x5585e95b8440 'y' 'int'
|   |-CallExpr 0x5585e95ba5a8 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95ba590 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95ba570 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95ba600 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95ba5e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95ba5c8 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95ba8e8 <line:754:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5585e95ba620 <col:3> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   | `-ConditionalOperator 0x5585e95ba8b8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5585e95ba6e0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5585e95ba698 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5585e95ba680 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5585e95ba640 <col:7> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5585e95ba6c8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5585e95ba6b0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5585e95ba660 <col:25> '_Bool' lvalue Var 0x5585e95b7b00 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5585e95ba8a0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95ba700 <col:42> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5585e95ba880 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5585e95ba850 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5585e95ba7c0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5585e95ba778 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5585e95ba760 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5585e95ba720 <col:55> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5585e95ba7a8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5585e95ba790 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5585e95ba740 <col:73> '_Bool' lvalue Var 0x5585e95b7d58 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5585e95ba820 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585e95ba7e0 <col:90> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5585e95ba838 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95ba800 <col:102> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   |-BinaryOperator 0x5585e95baaf0 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95ba908 <col:3> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95baad8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95baaa8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585e95ba9c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585e95ba980 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585e95ba968 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585e95ba928 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585e95ba9b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585e95ba998 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585e95ba948 <col:38> '_Bool' lvalue Var 0x5585e95b7b00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95baa60 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95baa18 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95ba9e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95baa90 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95baa78 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95baa40 <col:66> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5585e95badf8 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bab30 <col:3> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bade0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95badb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585e95bacd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585e95babf0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585e95baba8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585e95bab90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585e95bab50 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585e95babd8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585e95babc0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585e95bab70 <col:38> '_Bool' lvalue Var 0x5585e95b7b00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5585e95bacb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585e95bac68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585e95bac50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585e95bac10 <col:56> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585e95bac98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585e95bac80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585e95bac30 <col:74> '_Bool' lvalue Var 0x5585e95b7d58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95bad68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95bad20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95bacf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95bad98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95bad80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95bad48 <col:102> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5585e95bb000 <line:757:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bae18 <col:3> '_Bool' lvalue Var 0x5585e95b7b00 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bafe8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95bafb8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585e95baed8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585e95bae90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585e95bae78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585e95bae38 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585e95baec0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585e95baea8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585e95bae58 <col:38> '_Bool' lvalue Var 0x5585e95b7b00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95baf70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95baf28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95baef8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95bafa0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95baf88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95baf50 <col:66> '_Bool' lvalue Var 0x5585e95b7b00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5585e95bb2e8 <line:758:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bb020 <col:3> '_Bool' lvalue Var 0x5585e95b7d58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bb2d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95bb2a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585e95bb1c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585e95bb0e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585e95bb098 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585e95bb080 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585e95bb040 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585e95bb0c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585e95bb0b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585e95bb060 <col:38> '_Bool' lvalue Var 0x5585e95b7b00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5585e95bb1a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585e95bb158 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585e95bb140 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585e95bb100 <col:56> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585e95bb188 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585e95bb170 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585e95bb120 <col:74> '_Bool' lvalue Var 0x5585e95b7d58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95bb258 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95bb210 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95bb1e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95bb288 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95bb270 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95bb238 <col:102> '_Bool' lvalue Var 0x5585e95b7d58 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5585e95bb340 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95bb328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bb308 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95bb398 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95bb380 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bb360 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95bb450 <line:761:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5585e95bb3b8 <col:3> 'int' lvalue Var 0x5585e95b7278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5585e95bb430 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5585e95bb418 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95bb3d8 <col:22> 'int' lvalue Var 0x5585e95b7278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5585e95bb3f8 <col:41> 'int' 1
|   |-CallExpr 0x5585e95bb4a8 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95bb490 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bb470 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5585e95bb520 <line:763:3, col:36>
|     `-CallExpr 0x5585e95bb500 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5585e95bb4e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5585e95bb4c8 <col:10> 'void *(void)' Function 0x5585e955d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5585e95bb690 prev 0x5585e95b6da0 <line:765:1, line:784:1> line:765:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5585e95bb5f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5585e95bc8c0 <line:766:1, line:784:1>
|   |-CallExpr 0x5585e95bb770 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95bb758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bb738 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95bb7d0 <line:768:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5585e95bb790 <col:3> 'int' lvalue Var 0x5585e95b8440 'y' 'int'
|   | `-IntegerLiteral 0x5585e95bb7b0 <col:7> 'int' 1
|   |-CallExpr 0x5585e95bb828 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95bb810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bb7f0 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95bb880 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95bb868 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bb848 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95bb8e0 <line:771:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5585e95bb8a0 <col:3> 'int' lvalue Var 0x5585e95b8560 'z' 'int'
|   | `-IntegerLiteral 0x5585e95bb8c0 <col:7> 'int' 1
|   |-CallExpr 0x5585e95bb938 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95bb920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bb900 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95bb990 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95bb978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bb958 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95bbc98 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5585e95bb9b0 <col:3> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   | `-ConditionalOperator 0x5585e95bbc68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5585e95bba70 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5585e95bba28 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5585e95bba10 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5585e95bb9d0 <col:7> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5585e95bba58 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5585e95bba40 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5585e95bb9f0 <col:25> '_Bool' lvalue Var 0x5585e95b7b78 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5585e95bbc50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95bba90 <col:42> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5585e95bbc30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5585e95bbc00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5585e95bbb70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5585e95bbb08 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5585e95bbaf0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5585e95bbab0 <col:55> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5585e95bbb58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5585e95bbb40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5585e95bbad0 <col:73> '_Bool' lvalue Var 0x5585e95b7dd0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5585e95bbbd0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585e95bbb90 <col:90> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5585e95bbbe8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95bbbb0 <col:102> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   |-BinaryOperator 0x5585e95bbea0 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bbcb8 <col:3> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bbe88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95bbe58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585e95bbd78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585e95bbd30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585e95bbd18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585e95bbcd8 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585e95bbd60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585e95bbd48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585e95bbcf8 <col:38> '_Bool' lvalue Var 0x5585e95b7b78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95bbe10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95bbdc8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95bbd98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95bbe40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95bbe28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95bbdf0 <col:66> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5585e95bc188 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bbec0 <col:3> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bc170 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95bc140 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585e95bc060 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585e95bbf80 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585e95bbf38 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585e95bbf20 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585e95bbee0 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585e95bbf68 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585e95bbf50 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585e95bbf00 <col:38> '_Bool' lvalue Var 0x5585e95b7b78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5585e95bc040 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585e95bbff8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585e95bbfe0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585e95bbfa0 <col:56> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585e95bc028 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585e95bc010 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585e95bbfc0 <col:74> '_Bool' lvalue Var 0x5585e95b7dd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95bc0f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95bc0b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95bc080 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95bc128 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95bc110 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95bc0d8 <col:102> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5585e95bc390 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bc1a8 <col:3> '_Bool' lvalue Var 0x5585e95b7b78 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bc378 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95bc348 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585e95bc268 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585e95bc220 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585e95bc208 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585e95bc1c8 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585e95bc250 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585e95bc238 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585e95bc1e8 <col:38> '_Bool' lvalue Var 0x5585e95b7b78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95bc300 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95bc2b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95bc288 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95bc330 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95bc318 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95bc2e0 <col:66> '_Bool' lvalue Var 0x5585e95b7b78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5585e95bc678 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bc3b0 <col:3> '_Bool' lvalue Var 0x5585e95b7dd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bc660 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95bc630 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585e95bc550 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585e95bc470 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585e95bc428 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585e95bc410 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585e95bc3d0 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585e95bc458 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585e95bc440 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585e95bc3f0 <col:38> '_Bool' lvalue Var 0x5585e95b7b78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5585e95bc530 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585e95bc4e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585e95bc4d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585e95bc490 <col:56> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585e95bc518 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585e95bc500 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585e95bc4b0 <col:74> '_Bool' lvalue Var 0x5585e95b7dd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95bc5e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95bc5a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95bc570 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95bc618 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95bc600 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95bc5c8 <col:102> '_Bool' lvalue Var 0x5585e95b7dd0 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5585e95bc6d0 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95bc6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bc698 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95bc728 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95bc710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bc6f0 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95bc7e0 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5585e95bc748 <col:3> 'int' lvalue Var 0x5585e95b7278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5585e95bc7c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5585e95bc7a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95bc768 <col:22> 'int' lvalue Var 0x5585e95b7278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5585e95bc788 <col:41> 'int' 1
|   |-CallExpr 0x5585e95bc838 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95bc820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bc800 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5585e95bc8b0 <line:783:3, col:36>
|     `-CallExpr 0x5585e95bc890 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5585e95bc878 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5585e95bc858 <col:10> 'void *(void)' Function 0x5585e955d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5585e95bca08 prev 0x5585e95b6ef8 <line:785:1, line:820:1> line:785:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5585e95bc970 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5585e95c0710 <line:786:1, line:820:1>
|   |-CallExpr 0x5585e95bcae8 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95bcad0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bcab0 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95bcb70 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5585e95bcb08 <col:3> 'int' lvalue Var 0x5585e95b8560 'z' 'int'
|   | `-IntegerLiteral 0x5585e95bcb50 <col:7> 'int' 2
|   |-CallExpr 0x5585e95bcbc8 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95bcbb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bcb90 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95bcc20 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95bcc08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bcbe8 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95bcc98 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5585e95bcc40 <col:3> 'int' lvalue Var 0x5585e95b75d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5585e95bcc80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95bcc60 <col:25> 'int' lvalue Var 0x5585e95b8560 'z' 'int'
|   |-CallExpr 0x5585e95bccf0 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95bccd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bccb8 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95bcd48 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95bcd30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bcd10 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95bcdf8 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bcd68 <col:3> '_Bool' lvalue Var 0x5585e95b85f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bcde0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5585e95bcdc0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5585e95bcda8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5585e95bcd88 <col:19> 'void *(void)' Function 0x5585e955d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5585e95bcea8 <line:795:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bce18 <col:3> '_Bool' lvalue Var 0x5585e95b8670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bce90 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5585e95bce70 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5585e95bce58 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5585e95bce38 <col:19> 'void *(void)' Function 0x5585e955d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5585e95bcf20 <line:796:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bcec8 <col:3> '_Bool' lvalue Var 0x5585e95b78b0 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bcf08 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95bcee8 <col:21> '_Bool' lvalue Var 0x5585e95b8670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5585e95bcf98 <line:797:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5585e95bcf40 <col:3> 'int' lvalue Var 0x5585e95b7930 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5585e95bcf80 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95bcf60 <col:15> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   |-BinaryOperator 0x5585e95bd3d0 <line:798:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5585e95bcfb8 <col:3> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   | `-ConditionalOperator 0x5585e95bd3a0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5585e95bd1c8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5585e95bd0e8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5585e95bd010 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5585e95bcff8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5585e95bcfd8 <col:8> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5585e95bd0c8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5585e95bd060 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5585e95bd048 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5585e95bd028 <col:27> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x5585e95bd0b0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5585e95bd098 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5585e95bd078 <col:46> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5585e95bd1a8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5585e95bd140 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5585e95bd128 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5585e95bd108 <col:65> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x5585e95bd190 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5585e95bd178 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5585e95bd158 <col:84> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5585e95bd388 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95bd1e8 <col:101> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   |   `-ParenExpr 0x5585e95bd368 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5585e95bd338 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5585e95bd2a8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5585e95bd260 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5585e95bd248 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5585e95bd208 <col:106> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5585e95bd290 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5585e95bd278 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5585e95bd228 <col:124> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5585e95bd308 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585e95bd2c8 <col:141> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5585e95bd320 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95bd2e8 <col:153> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x5585e95bd8e0 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5585e95bd3f0 <col:3> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x5585e95bd8b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5585e95bd880 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5585e95bd868 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5585e95bd410 <col:15> '_Bool' lvalue Var 0x5585e95b8670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5585e95bd898 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95bd430 <col:31> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5585e95bd848 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5585e95bd818 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5585e95bd640 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5585e95bd560 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5585e95bd488 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5585e95bd470 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5585e95bd450 <col:45> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5585e95bd540 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5585e95bd4d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5585e95bd4c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5585e95bd4a0 <col:64> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5585e95bd528 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5585e95bd510 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5585e95bd4f0 <col:83> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5585e95bd620 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5585e95bd5b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5585e95bd5a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5585e95bd580 <col:102> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5585e95bd608 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5585e95bd5f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5585e95bd5d0 <col:121> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5585e95bd800 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585e95bd660 <col:138> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x5585e95bd7e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5585e95bd7b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5585e95bd720 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5585e95bd6d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5585e95bd6c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5585e95bd680 <col:151> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5585e95bd708 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5585e95bd6f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5585e95bd6a0 <col:169> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5585e95bd780 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5585e95bd740 <col:186> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5585e95bd798 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5585e95bd760 <col:198> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x5585e95bde00 <line:800:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5585e95bd900 <col:3> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x5585e95bddd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5585e95bdda0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5585e95bdd88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5585e95bd920 <col:15> '_Bool' lvalue Var 0x5585e95b8670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5585e95bddb8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95bd940 <col:31> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x5585e95bdd68 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5585e95bdd38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5585e95bdb60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5585e95bda70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5585e95bd998 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5585e95bd980 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5585e95bd960 <col:45> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5585e95bda50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5585e95bd9e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5585e95bd9d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5585e95bd9b0 <col:64> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5585e95bda38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5585e95bda20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5585e95bda00 <col:83> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5585e95bdb30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5585e95bdac8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5585e95bdab0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5585e95bda90 <col:102> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5585e95bdb18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5585e95bdb00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5585e95bdae0 <col:121> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5585e95bdd20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585e95bdb80 <col:138> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x5585e95bdd00 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5585e95bdcd0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5585e95bdc40 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5585e95bdbf8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5585e95bdbe0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5585e95bdba0 <col:151> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5585e95bdc28 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5585e95bdc10 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5585e95bdbc0 <col:169> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5585e95bdca0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5585e95bdc60 <col:186> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5585e95bdcb8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5585e95bdc80 <col:198> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x5585e95be3a8 <line:801:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bde20 <col:3> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95be390 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95be360 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5585e95be318 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585e95be300 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585e95bde40 <col:20> '_Bool' lvalue Var 0x5585e95b8670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95be348 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585e95be330 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585e95bde60 <col:36> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5585e95be2e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5585e95be2b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5585e95be070 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585e95bdf90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585e95bdeb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585e95bdea0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585e95bde80 <col:55> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585e95bdf70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585e95bdf08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585e95bdef0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585e95bded0 <col:74> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5585e95bdf58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585e95bdf40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585e95bdf20 <col:93> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585e95be050 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585e95bdfe8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585e95bdfd0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585e95bdfb0 <col:112> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5585e95be038 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585e95be020 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585e95be000 <col:131> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5585e95be298 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585e95be280 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585e95be090 <col:148> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5585e95be260 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5585e95be230 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5585e95be150 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585e95be108 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585e95be0f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585e95be0b0 <col:166> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585e95be138 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585e95be120 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585e95be0d0 <col:184> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5585e95be1e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585e95be1a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585e95be170 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585e95be218 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5585e95be200 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5585e95be1c8 <col:212> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5585e95be970 <line:802:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95be3c8 <col:3> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95be958 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95be928 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5585e95be8e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585e95be8c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585e95be3e8 <col:20> '_Bool' lvalue Var 0x5585e95b8670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95be910 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585e95be8f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585e95be408 <col:36> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5585e95be8a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5585e95be878 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5585e95be618 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585e95be538 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585e95be460 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585e95be448 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585e95be428 <col:55> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585e95be518 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585e95be4b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585e95be498 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585e95be478 <col:74> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5585e95be500 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585e95be4e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585e95be4c8 <col:93> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585e95be5f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585e95be590 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585e95be578 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585e95be558 <col:112> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5585e95be5e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585e95be5c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585e95be5a8 <col:131> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5585e95be860 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585e95be848 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585e95be638 <col:148> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5585e95be828 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5585e95be7f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5585e95be6f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585e95be6b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585e95be698 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585e95be658 <col:166> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585e95be6e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585e95be6c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585e95be678 <col:184> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5585e95be7c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585e95be748 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585e95be718 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585e95be7e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5585e95be7a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5585e95be770 <col:219> 'int' 0
|   |-BinaryOperator 0x5585e95bef30 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95be990 <col:3> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bef18 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95beee8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5585e95beea0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585e95bee88 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585e95be9b0 <col:20> '_Bool' lvalue Var 0x5585e95b8670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95beed0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585e95beeb8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585e95be9d0 <col:36> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x5585e95bee68 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5585e95bee38 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5585e95bebf8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585e95beb00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585e95bea28 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585e95bea10 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585e95be9f0 <col:55> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585e95beae0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585e95bea78 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585e95bea60 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585e95bea40 <col:74> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5585e95beac8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585e95beab0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585e95bea90 <col:93> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585e95bebd8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585e95beb70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585e95beb40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585e95beb20 <col:112> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5585e95bebc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585e95beba8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585e95beb88 <col:131> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5585e95bee20 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585e95bee08 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585e95bec18 <col:148> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x5585e95bede8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5585e95bedb8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5585e95becd8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585e95bec90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585e95bec78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585e95bec38 <col:166> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585e95becc0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585e95beca8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585e95bec58 <col:184> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5585e95bed70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585e95bed28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585e95becf8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585e95beda0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5585e95bed88 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5585e95bed50 <col:212> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5585e95bf4f8 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bef50 <col:3> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bf4e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95bf4b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5585e95bf468 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585e95bf450 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585e95bef70 <col:20> '_Bool' lvalue Var 0x5585e95b8670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95bf498 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5585e95bf480 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5585e95bef90 <col:36> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x5585e95bf430 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5585e95bf400 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5585e95bf1a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5585e95bf0c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5585e95befe8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5585e95befd0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5585e95befb0 <col:55> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5585e95bf0a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5585e95bf038 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5585e95bf020 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5585e95bf000 <col:74> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5585e95bf088 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5585e95bf070 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5585e95bf050 <col:93> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5585e95bf180 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5585e95bf118 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5585e95bf100 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5585e95bf0e0 <col:112> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5585e95bf168 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5585e95bf150 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5585e95bf130 <col:131> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5585e95bf3e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5585e95bf3d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5585e95bf1c0 <col:148> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x5585e95bf3b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5585e95bf380 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5585e95bf280 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5585e95bf238 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5585e95bf220 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5585e95bf1e0 <col:166> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5585e95bf268 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5585e95bf250 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5585e95bf200 <col:184> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5585e95bf350 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5585e95bf2d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5585e95bf2a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5585e95bf368 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5585e95bf328 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5585e95bf2f8 <col:219> 'int' 0
|   |-BinaryOperator 0x5585e95bf570 <line:805:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5585e95bf518 <col:3> 'int' lvalue Var 0x5585e95b76f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5585e95bf558 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5585e95bf538 <col:25> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   |-BinaryOperator 0x5585e95bf6a0 <line:806:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5585e95bf590 <col:3> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   | `-ConditionalOperator 0x5585e95bf670 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5585e95bf628 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5585e95bf610 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5585e95bf5b0 <col:7> '_Bool' lvalue Var 0x5585e95b78b0 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5585e95bf640 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95bf5d0 <col:25> 'int' lvalue Var 0x5585e95b7930 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5585e95bf658 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5585e95bf5f0 <col:37> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   |-BinaryOperator 0x5585e95bf738 <line:807:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bf6c0 <col:3> '_Bool' lvalue Var 0x5585e95b78b0 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5585e95bf710 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5585e95bf6e0 <col:28> 'int' 0
|   |-CallExpr 0x5585e95bf790 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95bf778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bf758 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95bf7e8 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95bf7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95bf7b0 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95bfad0 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5585e95bf808 <col:3> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   | `-ConditionalOperator 0x5585e95bfaa0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5585e95bf8c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5585e95bf880 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5585e95bf868 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5585e95bf828 <col:7> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5585e95bf8b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5585e95bf898 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5585e95bf848 <col:25> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5585e95bfa88 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95bf8e8 <col:42> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5585e95bfa68 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5585e95bfa38 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5585e95bf9a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5585e95bf960 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5585e95bf948 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5585e95bf908 <col:55> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5585e95bf990 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5585e95bf978 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5585e95bf928 <col:73> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5585e95bfa08 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5585e95bf9c8 <col:90> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5585e95bfa20 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95bf9e8 <col:102> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
|   |-BinaryOperator 0x5585e95bfcf0 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bfaf0 <col:3> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bfcd8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95bfca8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585e95bfbc8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585e95bfb80 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585e95bfb50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585e95bfb10 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585e95bfbb0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585e95bfb98 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585e95bfb30 <col:38> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95bfc60 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95bfc18 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95bfbe8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95bfc90 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95bfc78 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95bfc40 <col:66> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5585e95bffd8 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bfd10 <col:3> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95bffc0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95bff90 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585e95bfeb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585e95bfdd0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585e95bfd88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585e95bfd70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585e95bfd30 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585e95bfdb8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585e95bfda0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585e95bfd50 <col:38> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5585e95bfe90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585e95bfe48 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585e95bfe30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585e95bfdf0 <col:56> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585e95bfe78 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585e95bfe60 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585e95bfe10 <col:74> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95bff48 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95bff00 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95bfed0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95bff78 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95bff60 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95bff28 <col:102> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5585e95c01e0 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95bfff8 <col:3> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95c01c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95c0198 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5585e95c00b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5585e95c0070 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5585e95c0058 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5585e95c0018 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5585e95c00a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5585e95c0088 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5585e95c0038 <col:38> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95c0150 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95c0108 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95c00d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95c0180 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95c0168 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95c0130 <col:66> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5585e95c04c8 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5585e95c0200 <col:3> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5585e95c04b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5585e95c0480 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5585e95c03a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5585e95c02c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5585e95c0278 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5585e95c0260 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5585e95c0220 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5585e95c02a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5585e95c0290 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5585e95c0240 <col:38> '_Bool' lvalue Var 0x5585e95b7bf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5585e95c0380 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5585e95c0338 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5585e95c0320 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5585e95c02e0 <col:56> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5585e95c0368 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5585e95c0350 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5585e95c0300 <col:74> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5585e95c0438 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5585e95c03f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5585e95c03c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5585e95c0468 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5585e95c0450 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5585e95c0418 <col:102> '_Bool' lvalue Var 0x5585e95b7e48 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5585e95c0520 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95c0508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95c04e8 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5585e95c0578 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5585e95c0560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95c0540 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5585e95c0630 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5585e95c0598 <col:3> 'int' lvalue Var 0x5585e95b7278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5585e95c0610 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5585e95c05f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5585e95c05b8 <col:22> 'int' lvalue Var 0x5585e95b7278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5585e95c05d8 <col:41> 'int' 1
|   |-CallExpr 0x5585e95c0688 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5585e95c0670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5585e95c0650 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5585e95c0700 <line:819:3, col:36>
|     `-CallExpr 0x5585e95c06e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5585e95c06c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5585e95c06a8 <col:10> 'void *(void)' Function 0x5585e955d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5585e95c0848 prev 0x5585e95b6fc0 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x5585e95c08e8 <line:822:1, line:823:1>
|-FunctionDecl 0x5585e95c0918 prev 0x5585e95b7080 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x5585e95c09b8 <line:825:1, line:826:1>
|-FunctionDecl 0x5585e95c09e8 prev 0x5585e95b7140 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x5585e95c0a88 <line:828:1, line:829:1>
`-FunctionDecl 0x5585e95c0b90 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x5585e95c2c38 <line:831:1, line:856:1>
    |-DeclStmt 0x5585e95c0ca8 <line:832:3, col:17>
    | `-VarDecl 0x5585e95c0c40 <col:3, col:13> col:13 used t619 'pthread_t':'unsigned long'
    |-CallExpr 0x5585e95c0eb8 <line:833:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5585e95c0ea0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585e95c0cc0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5585e959e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5585e95c0d00 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5585e95c0ce0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5585e95c0c40 't619' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5585e95c0ef8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5585e95c0d78 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5585e95c0d50 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5585e95c0d18 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5585e95c0f10 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585e95c0d98 <col:38> 'void *(void *)' Function 0x5585e95b8788 'P0' 'void *(void *)'
    | `-ParenExpr 0x5585e95c0e18 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5585e95c0df0 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5585e95c0db8 <col:51> 'int' 0
    |-DeclStmt 0x5585e95c0fa0 <line:834:3, col:17>
    | `-VarDecl 0x5585e95c0f38 <col:3, col:13> col:13 used t620 'pthread_t':'unsigned long'
    |-CallExpr 0x5585e95c1148 <line:835:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5585e95c1130 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585e95c0fb8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5585e959e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5585e95c0ff8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5585e95c0fd8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5585e95c0f38 't620' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5585e95c1188 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5585e95c1070 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5585e95c1048 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5585e95c1010 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5585e95c11a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585e95c1090 <col:38> 'void *(void *)' Function 0x5585e95ba1c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5585e95c1110 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5585e95c10e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5585e95c10b0 <col:51> 'int' 0
    |-DeclStmt 0x5585e95c1230 <line:836:3, col:17>
    | `-VarDecl 0x5585e95c11c8 <col:3, col:13> col:13 used t621 'pthread_t':'unsigned long'
    |-CallExpr 0x5585e95c13d8 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5585e95c13c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585e95c1248 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5585e959e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5585e95c1288 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5585e95c1268 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5585e95c11c8 't621' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5585e95c1418 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5585e95c1300 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5585e95c12d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5585e95c12a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5585e95c1430 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585e95c1320 <col:38> 'void *(void *)' Function 0x5585e95bb690 'P2' 'void *(void *)'
    | `-ParenExpr 0x5585e95c13a0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5585e95c1378 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5585e95c1340 <col:51> 'int' 0
    |-DeclStmt 0x5585e95c14c0 <line:838:3, col:17>
    | `-VarDecl 0x5585e95c1458 <col:3, col:13> col:13 used t622 'pthread_t':'unsigned long'
    |-CallExpr 0x5585e95c1668 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5585e95c1650 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585e95c14d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5585e959e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5585e95c1518 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5585e95c14f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5585e95c1458 't622' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5585e95c16a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5585e95c1590 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5585e95c1568 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5585e95c1530 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5585e95c16c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585e95c15b0 <col:38> 'void *(void *)' Function 0x5585e95bca08 'P3' 'void *(void *)'
    | `-ParenExpr 0x5585e95c1630 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5585e95c1608 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5585e95c15d0 <col:51> 'int' 0
    |-CallExpr 0x5585e95c1710 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5585e95c16f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585e95c16d8 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5585e95c17e0 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5585e95c1730 <col:3> '_Bool' lvalue Var 0x5585e95b81a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5585e95c17c8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5585e95c17a8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5585e95c1790 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5585e95c1750 <col:21> 'int' lvalue Var 0x5585e95b7278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5585e95c1770 <col:41> 'int' 4
    |-CallExpr 0x5585e95c1838 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5585e95c1820 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585e95c1800 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5585e95c18b0 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5585e95c1898 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585e95c1858 <col:3> 'void (int)' Function 0x5585e955d790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5585e95c18f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5585e95c18d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5585e95c1878 <col:21> '_Bool' lvalue Var 0x5585e95b81a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5585e95c1940 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5585e95c1928 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585e95c1908 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5585e95c1c38 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5585e95c1960 <col:3> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
    | `-ConditionalOperator 0x5585e95c1c08 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5585e95c1a20 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5585e95c19d8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5585e95c19c0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5585e95c1980 <col:7> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5585e95c1a08 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5585e95c19f0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5585e95c19a0 <col:25> '_Bool' lvalue Var 0x5585e95b79a8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5585e95c1bf0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5585e95c1a40 <col:42> 'int' lvalue Var 0x5585e95b7fc0 'a$w_buff0' 'int'
    |   `-ParenExpr 0x5585e95c1bd0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5585e95c1ba0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5585e95c1b00 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5585e95c1ab8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5585e95c1aa0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5585e95c1a60 <col:55> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5585e95c1ae8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5585e95c1ad0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5585e95c1a80 <col:73> '_Bool' lvalue Var 0x5585e95b7c68 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5585e95c1b60 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5585e95c1b20 <col:90> 'int' lvalue Var 0x5585e95b80b8 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5585e95c1b78 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5585e95c1b40 <col:102> 'int' lvalue Var 0x5585e95b7818 'a' 'int'
    |-BinaryOperator 0x5585e95c1e40 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5585e95c1c58 <col:3> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5585e95c1e28 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5585e95c1df8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5585e95c1d18 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5585e95c1cd0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5585e95c1cb8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5585e95c1c78 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5585e95c1d00 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5585e95c1ce8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5585e95c1c98 <col:38> '_Bool' lvalue Var 0x5585e95b79a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5585e95c1db0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5585e95c1d68 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5585e95c1d38 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5585e95c1de0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5585e95c1dc8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5585e95c1d90 <col:66> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5585e95c2128 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5585e95c1e60 <col:3> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5585e95c2110 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5585e95c20e0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5585e95c2000 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5585e95c1f20 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5585e95c1ed8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5585e95c1ec0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5585e95c1e80 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5585e95c1f08 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5585e95c1ef0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5585e95c1ea0 <col:38> '_Bool' lvalue Var 0x5585e95b79a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5585e95c1fe0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5585e95c1f98 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5585e95c1f80 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5585e95c1f40 <col:56> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5585e95c1fc8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5585e95c1fb0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5585e95c1f60 <col:74> '_Bool' lvalue Var 0x5585e95b7c68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5585e95c2098 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5585e95c2050 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5585e95c2020 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5585e95c20c8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5585e95c20b0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5585e95c2078 <col:102> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5585e95c2330 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5585e95c2148 <col:3> '_Bool' lvalue Var 0x5585e95b79a8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5585e95c2318 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5585e95c22e8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5585e95c2208 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5585e95c21c0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5585e95c21a8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5585e95c2168 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5585e95c21f0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5585e95c21d8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5585e95c2188 <col:38> '_Bool' lvalue Var 0x5585e95b79a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5585e95c22a0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5585e95c2258 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5585e95c2228 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5585e95c22d0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5585e95c22b8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5585e95c2280 <col:66> '_Bool' lvalue Var 0x5585e95b79a8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5585e95c2618 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5585e95c2350 <col:3> '_Bool' lvalue Var 0x5585e95b7c68 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5585e95c2600 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5585e95c25d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5585e95c24f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5585e95c2410 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5585e95c23c8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5585e95c23b0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5585e95c2370 <col:20> '_Bool' lvalue Var 0x5585e95b8038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5585e95c23f8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5585e95c23e0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5585e95c2390 <col:38> '_Bool' lvalue Var 0x5585e95b79a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5585e95c24d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5585e95c2488 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5585e95c2470 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5585e95c2430 <col:56> '_Bool' lvalue Var 0x5585e95b8130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5585e95c24b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5585e95c24a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5585e95c2450 <col:74> '_Bool' lvalue Var 0x5585e95b7c68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5585e95c2588 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5585e95c2540 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5585e95c2510 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5585e95c25b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5585e95c25a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5585e95c2568 <col:102> '_Bool' lvalue Var 0x5585e95b7c68 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5585e95c2670 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5585e95c2658 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585e95c2638 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5585e95c26c8 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5585e95c26b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585e95c2690 <col:3> 'void ()' Function 0x5585e955de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5585e95c2ac8 <line:852:3, col:151> '_Bool' '='
    | |-DeclRefExpr 0x5585e95c26e8 <col:3> '_Bool' lvalue Var 0x5585e95b8220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5585e95c2ab0 <col:21, col:151> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5585e95c2a98 <col:21, col:151> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5585e95c2a78 <col:22, col:151> 'int'
    |       `-BinaryOperator 0x5585e95c2a58 <col:23, col:150> 'int' '&&'
    |         |-BinaryOperator 0x5585e95c29c0 <col:23, col:122> 'int' '&&'
    |         | |-BinaryOperator 0x5585e95c2928 <col:23, col:94> 'int' '&&'
    |         | | |-BinaryOperator 0x5585e95c2890 <col:23, col:66> 'int' '&&'
    |         | | | |-BinaryOperator 0x5585e95c27f8 <col:23, col:38> 'int' '&&'
    |         | | | | |-BinaryOperator 0x5585e95c2760 <col:23, col:28> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x5585e95c2748 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x5585e95c2708 <col:23> 'int' lvalue Var 0x5585e95b8320 'x' 'int'
    |         | | | | | `-IntegerLiteral 0x5585e95c2728 <col:28> 'int' 2
    |         | | | | `-BinaryOperator 0x5585e95c27d8 <col:33, col:38> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x5585e95c27c0 <col:33> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x5585e95c2780 <col:33> 'int' lvalue Var 0x5585e95b8560 'z' 'int'
    |         | | | |   `-IntegerLiteral 0x5585e95c27a0 <col:38> 'int' 2
    |         | | | `-BinaryOperator 0x5585e95c2870 <col:43, col:66> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5585e95c2858 <col:43> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5585e95c2818 <col:43> 'int' lvalue Var 0x5585e95b7398 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5585e95c2838 <col:66> 'int' 2
    |         | | `-BinaryOperator 0x5585e95c2908 <col:71, col:94> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5585e95c28f0 <col:71> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5585e95c28b0 <col:71> 'int' lvalue Var 0x5585e95b74b8 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5585e95c28d0 <col:94> 'int' 0
    |         | `-BinaryOperator 0x5585e95c29a0 <col:99, col:122> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5585e95c2988 <col:99> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5585e95c2948 <col:99> 'int' lvalue Var 0x5585e95b75d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5585e95c2968 <col:122> 'int' 2
    |         `-BinaryOperator 0x5585e95c2a38 <col:127, col:150> 'int' '=='
    |           |-ImplicitCastExpr 0x5585e95c2a20 <col:127> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5585e95c29e0 <col:127> 'int' lvalue Var 0x5585e95b76f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5585e95c2a00 <col:150> 'int' 0
    |-CallExpr 0x5585e95c2b20 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5585e95c2b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5585e95c2ae8 <col:3> 'void ()' Function 0x5585e955df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5585e95c2bb0 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5585e95c2b80 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5585e95c2b40 <col:3> 'void (int)' Function 0x5585e955dbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5585e95c2bf0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5585e95c2bd8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5585e95c2b60 <col:21> '_Bool' lvalue Var 0x5585e95b8220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5585e95c2c28 <line:855:3, col:10>
      `-IntegerLiteral 0x5585e95c2c08 <col:10> 'int' 0
