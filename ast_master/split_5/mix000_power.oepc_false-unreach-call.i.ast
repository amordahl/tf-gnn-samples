TranslationUnitDecl 0x555a3be15e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x555a3be166d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x555a3be163b0 '__int128'
|-TypedefDecl 0x555a3be16748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x555a3be163d0 'unsigned __int128'
|-TypedefDecl 0x555a3be16a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x555a3be16820 'struct __NSConstantString_tag'
|   `-Record 0x555a3be167a0 '__NSConstantString_tag'
|-TypedefDecl 0x555a3be16af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x555a3be16ab0 'char *'
|   `-BuiltinType 0x555a3be15eb0 'char'
|-TypedefDecl 0x555a3be55650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x555a3be16d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x555a3be16bd0 'struct __va_list_tag'
|     `-Record 0x555a3be16b50 '__va_list_tag'
|-FunctionDecl 0x555a3be55770 <./split_5/mix000_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x555a3be55940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x555a3be55870 <col:31> col:34 'int'
|-FunctionDecl 0x555a3be55ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x555a3be55be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x555a3be55d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x555a3be55c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x555a3be55f58 <col:40, col:99>
|   |-IfStmt 0x555a3be55f28 <col:42, col:88>
|   | |-UnaryOperator 0x555a3be55e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x555a3be55df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x555a3be55dd0 <col:47> 'int' lvalue ParmVar 0x555a3be55c98 'expression' 'int'
|   | `-CompoundStmt 0x555a3be55f10 <col:59, col:88>
|   |   `-LabelStmt 0x555a3be55ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x555a3be55e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x555a3be55e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x555a3be55e20 <col:68> 'void () __attribute__((noreturn))' Function 0x555a3be55be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x555a3be55f40 <col:89>
|   `-ReturnStmt 0x555a3be55f48 <col:91>
|-FunctionDecl 0x555a3be55fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x555a3be56060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x555a3be563e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555a3be56118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x555a3be56198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x555a3be56218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555a3be56298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555a3be564a0 <line:11:22>
|-FunctionDecl 0x555a3be7c520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555a3be56510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x555a3be56590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x555a3be7c350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555a3be7c3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555a3be7c5e0 <line:14:22>
|-FunctionDecl 0x555a3be7c890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555a3be7c650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x555a3be7c6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x555a3be7c750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x555a3be7c948 <line:16:22>
|-TypedefDecl 0x555a3be7c9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x555a3be15f70 'unsigned char'
|-TypedefDecl 0x555a3be7ca28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x555a3be15f90 'unsigned short'
|-TypedefDecl 0x555a3be7ca98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x555a3be15fb0 'unsigned int'
|-TypedefDecl 0x555a3be7cb08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7cb78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x555a3be15ed0 'signed char'
|-TypedefDecl 0x555a3be7cbe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x555a3be15f70 'unsigned char'
|-TypedefDecl 0x555a3be7cc58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x555a3be15ef0 'short'
|-TypedefDecl 0x555a3be7ccc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x555a3be15f90 'unsigned short'
|-TypedefDecl 0x555a3be7cd38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x555a3be15f10 'int'
|-TypedefDecl 0x555a3be7cda8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x555a3be15fb0 'unsigned int'
|-TypedefDecl 0x555a3be7ce18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7ce88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7cef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7cf68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7cfd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7d048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x555a3be15fb0 'unsigned int'
|-TypedefDecl 0x555a3be7d0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x555a3be15fb0 'unsigned int'
|-TypedefDecl 0x555a3be7d128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7d198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7d208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x555a3be15fb0 'unsigned int'
|-TypedefDecl 0x555a3be7d278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7d2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7d378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7d3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x555a3be15f10 'int'
|-RecordDecl 0x555a3be7d440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x555a3be7d588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x555a3be7d640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x555a3be7d5e0 'struct __fsid_t' sugar
|   `-RecordType 0x555a3be7d4c0 '__fsid_t'
|     `-Record 0x555a3be7d440 ''
|-TypedefDecl 0x555a3be7d6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7d738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7d7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7d818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x555a3be15fb0 'unsigned int'
|-TypedefDecl 0x555a3be7d888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7d8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x555a3be15fb0 'unsigned int'
|-TypedefDecl 0x555a3be7d968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7d9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x555a3be15f10 'int'
|-TypedefDecl 0x555a3be7da48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x555a3be15f10 'int'
|-TypedefDecl 0x555a3be7dab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x555a3be15f10 'int'
|-TypedefDecl 0x555a3be7db28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x555a3be16630 'void *'
|   `-BuiltinType 0x555a3be15e70 'void'
|-TypedefDecl 0x555a3be7db98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7dc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7dc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7dce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7dd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7ddc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7de38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7dea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7df18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7df88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7dff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7e088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x555a3be7e050 '__off64_t' sugar
|   |-Typedef 0x555a3be7d378 '__off64_t'
|   `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7e180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x555a3be7e140 '__quad_t *'
|   `-TypedefType 0x555a3be7e0e0 '__quad_t' sugar
|     |-Typedef 0x555a3be7cef8 '__quad_t'
|     `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7e1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x555a3be16ab0 'char *'
|   `-BuiltinType 0x555a3be15eb0 'char'
|-TypedefDecl 0x555a3be7e260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be7e2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x555a3be15fb0 'unsigned int'
|-FunctionDecl 0x555a3be7f458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x555a3be7f380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x555a3be7f768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x555a3be7f758 <line:73:3, col:34>
|     `-CallExpr 0x555a3be7f718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x555a3be7f700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555a3be7f690 <col:10> '<builtin fn type>' Function 0x555a3be7f500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x555a3be7f740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x555a3be7f6b0 <col:29> 'unsigned int' lvalue ParmVar 0x555a3be7f380 '__bsx' 'unsigned int'
|-FunctionDecl 0x555a3be7f500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x555a3be7f5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x555a3be7f610 <col:10> Implicit
| `-ConstAttr 0x555a3be7f668 <col:10> Implicit
|-FunctionDecl 0x555a3be7f8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x555a3be7f7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x555a3be7fbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x555a3be7fbc8 <line:78:3, col:34>
|     `-CallExpr 0x555a3be7fb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x555a3be7fb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555a3be7faf8 <col:10> '<builtin fn type>' Function 0x555a3be7f968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x555a3be7fbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x555a3be7fb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x555a3be7f7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x555a3be7f968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x555a3be7fa08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x555a3be7fa78 <col:10> Implicit
| `-ConstAttr 0x555a3be7fad0 <col:10> Implicit
|-TypedefDecl 0x555a3be7fc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-TypedefDecl 0x555a3be7fc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x555a3be7fc60 '__time_t' sugar
|   |-Typedef 0x555a3be7d888 '__time_t'
|   `-BuiltinType 0x555a3be15f30 'long'
|-RecordDecl 0x555a3be7fcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x555a3be7fda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x555a3be7fe38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x555a3be7fec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x555a3be7fe90 '__pid_t' sugar
|   |-Typedef 0x555a3be7d3e8 '__pid_t'
|   `-BuiltinType 0x555a3be15f10 'int'
|-RecordDecl 0x555a3be7ff20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x555a3be7ffe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x555a3be80030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x555a3be800f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x555a3be80158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-RecordDecl 0x555a3be801b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x555a3be81480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x555a3be81530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x555a3be814d0 'struct cpu_set_t' sugar
|   `-RecordType 0x555a3be80230 'cpu_set_t'
|     `-Record 0x555a3be801b0 ''
|-FunctionDecl 0x555a3be81808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x555a3be815d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555a3be816e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x555a3be818b8 <line:108:19>
|-FunctionDecl 0x555a3be81a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x555a3be81920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x555a3be81b38 <col:69>
|-FunctionDecl 0x555a3be81cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x555a3be81ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x555a3be81d58 <col:64>
|-FunctionDecl 0x555a3be82018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x555a3be81dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555a3be81ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555a3be820c8 <line:114:22>
|-FunctionDecl 0x555a3be823b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x555a3be82130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555a3be82228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x555a3be82460 <col:88>
|-FunctionDecl 0x555a3be82718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555a3be824c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555a3be82548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x555a3be825d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555a3be827d0 <col:62>
|-FunctionDecl 0x555a3be82948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x555a3be82838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x555a3be829f0 <col:63>
|-FunctionDecl 0x555a3be82b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x555a3be82bb8 <col:47>
|-FunctionDecl 0x555a3be82cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x555a3be82c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555a3be82d68 <col:69>
|-FunctionDecl 0x555a3be82e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x555a3be82dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555a3be82f18 <col:69>
|-FunctionDecl 0x555a3be831d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555a3be82f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555a3be830b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x555a3be83288 <col:88>
|-TypedefDecl 0x555a3be83318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x555a3be832e0 '__clock_t' sugar
|   |-Typedef 0x555a3be7d6c8 '__clock_t'
|   `-BuiltinType 0x555a3be15f30 'long'
|-TypedefDecl 0x555a3be833c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x555a3be83370 '__clockid_t' sugar
|   |-Typedef 0x555a3be7dab8 '__clockid_t'
|   `-BuiltinType 0x555a3be15f10 'int'
|-TypedefDecl 0x555a3be83458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x555a3be83420 '__timer_t' sugar
|   |-Typedef 0x555a3be7db28 '__timer_t'
|   `-PointerType 0x555a3be16630 'void *'
|     `-BuiltinType 0x555a3be15e70 'void'
|-RecordDecl 0x555a3be834b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x555a3be83570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x555a3be835d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x555a3be83640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x555a3be836a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x555a3be83710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x555a3be83778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x555a3be837e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x555a3be83848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x555a3be838b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x555a3be83918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x555a3be83980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x555a3be839d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x555a3be83a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x555a3be83b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x555a3be83bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x555a3be83d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x555a3be83e20 <col:45>
|-FunctionDecl 0x555a3be84000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x555a3be83ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x555a3be840a8 <col:54>
|-FunctionDecl 0x555a3be842a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x555a3be84110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x555a3be84188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x555a3be84358 <line:158:22>
| `-ConstAttr 0x555a3be84ff0 <col:63>
|-FunctionDecl 0x555a3be851f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555a3be850e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555a3be85298 <col:56>
|-FunctionDecl 0x555a3be85640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x555a3be85308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x555a3be85380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555a3be85400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x555a3be854f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x555a3be85700 <col:54>
|-RecordDecl 0x555a3be85758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x555a3be85808 parent 0x555a3be15e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x555a3be85a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x555a3be85b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x555a3be85b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x555a3be85bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x555a3be85cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x555a3be85de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x555a3be85d90 'struct __locale_struct *'
|   `-ElaboratedType 0x555a3be85d20 'struct __locale_struct' sugar
|     `-RecordType 0x555a3be857e0 'struct __locale_struct'
|       `-Record 0x555a3be85758 '__locale_struct'
|-TypedefDecl 0x555a3be85e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x555a3be85e60 '__locale_t' sugar
|   |-Typedef 0x555a3be85de8 '__locale_t'
|   `-PointerType 0x555a3be85d90 'struct __locale_struct *'
|     `-ElaboratedType 0x555a3be85d20 'struct __locale_struct' sugar
|       `-RecordType 0x555a3be857e0 'struct __locale_struct'
|         `-Record 0x555a3be85758 '__locale_struct'
|-FunctionDecl 0x555a3be872a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x555a3be85f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x555a3be85f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555a3be87028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x555a3be870b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555a3be87130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x555a3be87368 <col:40>
|-FunctionDecl 0x555a3be87558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555a3be87430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x555a3be87600 <col:66>
|-FunctionDecl 0x555a3be87710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555a3be87668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x555a3be877b8 <col:69>
|-FunctionDecl 0x555a3be879e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555a3be87820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555a3be878b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555a3be87a98 <col:52>
|-FunctionDecl 0x555a3be87c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555a3be87b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555a3be87b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555a3be87cf0 <col:55>
|-FunctionDecl 0x555a3be87e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x555a3be87d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x555a3be87f30 <col:62>
|-FunctionDecl 0x555a3be88168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x555a3be87f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x555a3be88210 <col:60>
|-FunctionDecl 0x555a3be88438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555a3be88290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555a3be88310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x555a3be884e8 <col:44>
|-FunctionDecl 0x555a3be886f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555a3be88550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555a3be885d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x555a3be887a8 <col:49>
|-VarDecl 0x555a3be888a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x555a3be88928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x555a3be889a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x555a3be88a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x555a3be88ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x555a3be88c40 <col:42>
|-VarDecl 0x555a3be88cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x555a3be88d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x555a3be88eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x555a3be88da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x555a3be88f60 <col:57>
|-FunctionDecl 0x555a3be890d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555a3be88fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555a3be89178 <col:56>
|-FunctionDecl 0x555a3be89288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555a3be891f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x555a3be89330 <col:59>
|-FunctionDecl 0x555a3be89438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x555a3be893a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x555a3be894e0 <col:48>
| `-ConstAttr 0x555a3be89538 <col:89>
|-FunctionDecl 0x555a3be89798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555a3be895e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x555a3be89678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x555a3be899f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555a3be89888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555a3be89918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x555a3be89aa8 <col:88>
|-FunctionDecl 0x555a3be89c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555a3be89b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555a3be89ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x555a3be89cf0 <col:88>
|-FunctionDecl 0x555a3be89f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x555a3be89d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555a3be89de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x555a3be89fb8 <line:209:22>
|-FunctionDecl 0x555a3be8a358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555a3be8a020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555a3be8a0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x555a3be8a170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x555a3be8a200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x555a3be8a658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x555a3be8a458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x555a3be8a530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x555a3be8a708 <col:85>
|-FunctionDecl 0x555a3be8aaf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x555a3be8a770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555a3be8a8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x555a3be8a9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x555a3be8abb0 <col:52>
|-FunctionDecl 0x555a3be8ad28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x555a3be8ac18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555a3be8add0 <col:61>
|-FunctionDecl 0x555a3be8b248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x555a3be8ae38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555a3be8aeb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x555a3be8afe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x555a3be8b0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x555a3be8b308 <col:62>
|-FunctionDecl 0x555a3be8b528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x555a3be8b370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555a3be8b400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x555a3be8b5d8 <line:222:22>
|-FunctionDecl 0x555a3be8b6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x555a3be8b640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555a3be8b780 <col:65>
|-TypedefDecl 0x555a3be8b7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x555a3be15fd0 'unsigned long'
|-RecordDecl 0x555a3be8b848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x555a3be8b990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555a3be8b9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555a3be8baa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x555a3be8ba50 'union pthread_attr_t' sugar
|   `-RecordType 0x555a3be8b8d0 'union pthread_attr_t'
|     `-Record 0x555a3be8b848 'pthread_attr_t'
|-RecordDecl 0x555a3be8bb00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x555a3be8bc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x555a3be8bcf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x555a3be8bda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x555a3be8bd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x555a3be8bb80 'struct __pthread_internal_list'
|     `-Record 0x555a3be8bb00 '__pthread_internal_list'
|-RecordDecl 0x555a3be8be10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x555a3be8beb8 parent 0x555a3be15e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x555a3be8bf90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555a3be8bff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x555a3be8c060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x555a3be90110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x555a3be90178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x555a3be901e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x555a3be90268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x555a3be90320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x555a3be90410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x555a3be90478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555a3be90600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x555a3be905a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x555a3be8be90 'pthread_mutex_t'
|     `-Record 0x555a3be8be10 ''
|-RecordDecl 0x555a3be90670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x555a3be907b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555a3be90818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555a3be908d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x555a3be90870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x555a3be906f0 'pthread_mutexattr_t'
|     `-Record 0x555a3be90670 ''
|-RecordDecl 0x555a3be90940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x555a3be909e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x555a3be90ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555a3be90b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x555a3be90b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x555a3be90be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x555a3be90c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x555a3be90cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x555a3be90d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x555a3be90d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x555a3be90e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_5/mix000_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_5/mix000_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x555a3be90f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x555a3be90f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x555a3be92130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x555a3be91070 'union pthread_cond_t' sugar
|   `-RecordType 0x555a3be909c0 'pthread_cond_t'
|     `-Record 0x555a3be90940 ''
|-RecordDecl 0x555a3be921a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x555a3be922a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555a3be92308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555a3be923c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x555a3be92360 'union pthread_condattr_t' sugar
|   `-RecordType 0x555a3be92220 'pthread_condattr_t'
|     `-Record 0x555a3be921a0 ''
|-TypedefDecl 0x555a3be92448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x555a3be15fb0 'unsigned int'
|-TypedefDecl 0x555a3be924b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x555a3be15f10 'int'
|-RecordDecl 0x555a3be92510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x555a3be925b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x555a3be92680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555a3be926e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x555a3be92750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x555a3be927b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x555a3be92820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x555a3be92888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x555a3be928f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x555a3be92958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x555a3be929c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x555a3be92a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x555a3be92a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x555a3be92b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_5/mix000_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_5/mix000_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x555a3be92be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555a3be92c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555a3be92da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x555a3be92d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x555a3be92590 'pthread_rwlock_t'
|     `-Record 0x555a3be92510 ''
|-RecordDecl 0x555a3be92e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x555a3be92f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x555a3be92fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555a3be93070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x555a3be93010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x555a3be92e90 'pthread_rwlockattr_t'
|     `-Record 0x555a3be92e10 ''
|-TypedefDecl 0x555a3be94140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x555a3be15f14 'volatile int' volatile
|   `-BuiltinType 0x555a3be15f10 'int'
|-RecordDecl 0x555a3be94198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x555a3be942e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x555a3be94348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555a3be94400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x555a3be943a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x555a3be94220 'pthread_barrier_t'
|     `-Record 0x555a3be94198 ''
|-RecordDecl 0x555a3be94470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x555a3be94570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555a3be945d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555a3be94690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x555a3be94630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x555a3be944f0 'pthread_barrierattr_t'
|     `-Record 0x555a3be94470 ''
|-TypedefDecl 0x555a3be947a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x555a3be94740 'long [8]' 8 
|   `-BuiltinType 0x555a3be15f30 'long'
|-EnumDecl 0x555a3be94800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x555a3be948c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x555a3be94918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x555a3be94968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x555a3be94a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x555a3be94a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x555a3be94ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x555a3be94b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x555a3be94bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x555a3be94b98 <col:26> 'int'
| |   `-DeclRefExpr 0x555a3be94b78 <col:26> 'int' EnumConstant 0x555a3be94a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x555a3be94c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x555a3be94c20 <col:29> 'int'
| |   `-DeclRefExpr 0x555a3be94c00 <col:29> 'int' EnumConstant 0x555a3be94a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x555a3be94cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x555a3be94ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x555a3be94c88 <col:30> 'int' EnumConstant 0x555a3be94ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x555a3be94d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x555a3be94d30 <col:27> 'int'
|     `-DeclRefExpr 0x555a3be94d10 <col:27> 'int' EnumConstant 0x555a3be94bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x555a3be94d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x555a3be94e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x555a3be94ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x555a3be94ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x555a3be94eb8 <col:30> 'int' EnumConstant 0x555a3be94e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x555a3be94f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x555a3be94fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x555a3be94fb0 <col:29> 'int'
|     `-DeclRefExpr 0x555a3be94f90 <col:29> 'int' EnumConstant 0x555a3be94f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x555a3be95018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x555a3be950e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x555a3be95150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x555a3be951a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x555a3be951f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x555a3be952b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x555a3be95308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x555a3be95358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x555a3be953e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x555a3be953c8 <col:31> 'int'
|     `-DeclRefExpr 0x555a3be953a8 <col:31> 'int' EnumConstant 0x555a3be952b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x555a3be95430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x555a3be954f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x555a3be95548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x555a3be95598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x555a3be95668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x555a3be956b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x555a3be95708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x555a3be957d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x555a3be95828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x555a3be95878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x555a3be95ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x555a3be95b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x555a3be95b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x555a3be95ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x555a3be95cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x555a3be95dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x555a3be95e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x555a3be95e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x555a3be95f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x555a3be95f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x555a3be965b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x555a3be96080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x555a3be961a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555a3be963a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x555a3be96420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x555a3be96678 <col:47>
| |-NonNullAttr 0x555a3be966d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x555a3be96708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x555a3be96830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x555a3be96760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x555a3be96a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x555a3be968e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x555a3be96968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x555a3be96c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x555a3be96b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x555a3be96d00 <col:60>
|-FunctionDecl 0x555a3be96e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x555a3be96ef0 <col:54>
| `-ConstAttr 0x555a3be96f48 <col:95>
|-FunctionDecl 0x555a3be98990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x555a3be96f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555a3be96ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x555a3be98a40 <line:395:19>
| `-ConstAttr 0x555a3be98a98 <col:60>
|-FunctionDecl 0x555a3be98c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555a3be98b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555a3be98d10 <col:71>
| `-NonNullAttr 0x555a3be98d68 <col:112, col:126> 1
|-FunctionDecl 0x555a3be98e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555a3be98db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555a3be98f18 <line:398:22>
| `-NonNullAttr 0x555a3be98f70 <col:63, col:77> 1
|-FunctionDecl 0x555a3be99198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x555a3be98fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555a3be99038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x555a3be99248 <line:401:22>
| `-NonNullAttr 0x555a3be992a0 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3be994a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555a3be992e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555a3be99368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x555a3be99558 <line:404:22>
| `-NonNullAttr 0x555a3be995b0 <col:63, col:77> 1
|-FunctionDecl 0x555a3be99808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x555a3be995f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555a3be996a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x555a3be998b8 <line:407:22>
| `-NonNullAttr 0x555a3be99910 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3be9ab68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555a3be9a9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555a3be9aa28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555a3be9ac18 <line:410:22>
| `-NonNullAttr 0x555a3be9ac70 <col:63, col:77> 1
|-FunctionDecl 0x555a3be9aea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555a3be9acb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555a3be9ad48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555a3be9af58 <line:413:22>
| `-NonNullAttr 0x555a3be9afb0 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3be9b1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555a3be9aff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x555a3be9b088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x555a3be9b298 <col:37>
| `-NonNullAttr 0x555a3be9b2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x555a3be9b4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3be9b338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555a3be9b3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x555a3be9b588 <line:419:22>
| `-NonNullAttr 0x555a3be9b5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3be9b768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555a3be9b628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555a3be9b6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x555a3be9b818 <line:421:22>
| `-NonNullAttr 0x555a3be9b870 <col:63, col:77> 1
|-FunctionDecl 0x555a3be9ba38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3be9b8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555a3be9b938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x555a3be9bae8 <line:424:22>
| `-NonNullAttr 0x555a3be9bb40 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3be9bcc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555a3be9bb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555a3be9bc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x555a3be9bd78 <line:427:22>
| `-NonNullAttr 0x555a3be9bdd0 <col:63, col:77> 1
|-FunctionDecl 0x555a3be9bf78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3be9be18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555a3be9be98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x555a3be9c028 <line:430:22>
| `-NonNullAttr 0x555a3be9c080 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3be9c208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555a3be9c0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555a3be9c148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x555a3be9c2b8 <line:432:22>
| `-NonNullAttr 0x555a3be9c310 <col:63, col:77> 1
|-FunctionDecl 0x555a3be9c538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x555a3be9c358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555a3be9c3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x555a3be9c5e8 <line:435:22>
| |-NonNullAttr 0x555a3be9c640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x555a3be9c678 <col:100> "" ""
|-FunctionDecl 0x555a3be9c888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x555a3be9c6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555a3be9c748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x555a3be9c938 <line:438:22>
| |-NonNullAttr 0x555a3be9c990 <col:63, col:77> 1
| `-DeprecatedAttr 0x555a3be9c9d8 <col:97> "" ""
|-FunctionDecl 0x555a3be9cbc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555a3be9ca28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555a3be9caa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555a3be9cc78 <line:441:22>
| `-NonNullAttr 0x555a3be9ccd0 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3be9ce50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555a3be9cd18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555a3be9cd90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555a3be9cf00 <line:444:22>
| `-NonNullAttr 0x555a3be9cf58 <col:63, col:77> 1
|-FunctionDecl 0x555a3be9d248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555a3be9cfa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555a3be9d028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x555a3be9d0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555a3be9d300 <line:448:22>
| `-NonNullAttr 0x555a3be9d358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x555a3be9d608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x555a3be9d3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555a3be9d430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x555a3be9d4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555a3be9d6c0 <col:43>
| `-NonNullAttr 0x555a3be9d718 <col:84, col:98> 1
|-FunctionDecl 0x555a3be9da20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555a3be9d768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555a3be9d7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x555a3be9d878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x555a3be9dad8 <line:453:22>
| `-NonNullAttr 0x555a3be9db30 <col:63, col:77> 3
|-FunctionDecl 0x555a3be9de08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555a3be9db78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555a3be9dbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x555a3be9dc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555a3be9dec0 <line:457:22>
| `-NonNullAttr 0x555a3be9df18 <col:63, col:80> 2 3
|-FunctionDecl 0x555a3be9e108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x555a3be9df68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555a3be9dfe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x555a3be9e1b8 <line:459:22>
|-FunctionDecl 0x555a3be9e588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x555a3be9e280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x555a3be9e420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x555a3be9e638 <col:52, col:69> 1 2
|-FunctionDecl 0x555a3be9e7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x555a3be9e6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x555a3be9e740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x555a3be9e9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x555a3be9e8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x555a3be9e928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x555a3be9eb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x555a3be9eab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x555a3be9ec88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x555a3be9ed28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x555a3be9edd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x555a3be9eec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x555a3be9ef30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x555a3be9f100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_5/mix000_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x555a3be9f1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x555a3be9f2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x555a3be9f250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x555a3be9edb0 '__pthread_unwind_buf_t'
| |   `-Record 0x555a3be9ed28 ''
| `-AlignedAttr 0x555a3be9f308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x555a3be9f380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x555a3be9f4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x555a3be9f548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x555a3be9f5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x555a3be9f618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x555a3be9f820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555a3be9f710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555a3be9fa00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555a3be9f8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555a3be9fbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555a3be9fab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x555a3be9fc68 <line:488:22>
|-RecordDecl 0x555a3be9fcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x555a3be9ffd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x555a3be9fe38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x555a3be9feb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x555a3bea0088 <col:86>
| `-ReturnsTwiceAttr 0x555a3bea00e0 <col:12> Implicit
|-FunctionDecl 0x555a3bea0408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555a3bea01b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x555a3bea02c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x555a3bea04b8 <line:494:22>
| `-NonNullAttr 0x555a3bea0510 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea0688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555a3bea0558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555a3bea0730 <line:496:22>
| `-NonNullAttr 0x555a3bea0788 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea0890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555a3bea07d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555a3bea0938 <line:498:22>
| `-NonNullAttr 0x555a3bea0990 <col:52, col:66> 1
|-FunctionDecl 0x555a3bea1ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555a3bea1a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555a3bea1b80 <line:500:22>
| `-NonNullAttr 0x555a3bea1bd8 <col:52, col:66> 1
|-FunctionDecl 0x555a3bea1e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555a3bea1c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555a3bea1cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555a3bea1ec8 <col:36>
| `-NonNullAttr 0x555a3bea1f20 <col:66, col:83> 1 2
|-FunctionDecl 0x555a3bea2020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555a3bea1f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555a3bea20c8 <line:505:22>
| `-NonNullAttr 0x555a3bea2120 <col:52, col:66> 1
|-FunctionDecl 0x555a3bea23b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3bea21d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555a3bea2250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555a3bea2468 <line:509:22>
| `-NonNullAttr 0x555a3bea24c0 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3bea2788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x555a3bea2508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555a3bea2588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x555a3bea2608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x555a3bea2840 <line:513:22>
| `-NonNullAttr 0x555a3bea2898 <col:63, col:80> 1 3
|-FunctionDecl 0x555a3bea2a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555a3bea28e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555a3bea2ad8 <line:515:22>
| `-NonNullAttr 0x555a3bea2b30 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea2d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555a3bea2be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555a3bea2dc0 <line:517:22>
| `-NonNullAttr 0x555a3bea2e18 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea2f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555a3bea2e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555a3bea2fc8 <line:519:22>
| `-NonNullAttr 0x555a3bea3020 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea3248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3bea3068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555a3bea30e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x555a3bea32f8 <line:523:22>
| `-NonNullAttr 0x555a3bea3350 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3bea3558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555a3bea3398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555a3bea3418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x555a3bea3608 <line:526:22>
| `-NonNullAttr 0x555a3bea3660 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea3808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3bea36a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555a3bea3728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x555a3bea38b8 <line:529:22>
| `-NonNullAttr 0x555a3bea3910 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3bea3b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555a3bea3958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555a3bea3a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x555a3bea3bb0 <line:531:22>
| `-NonNullAttr 0x555a3bea3c08 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea3db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3bea3c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555a3bea3cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x555a3bea3e68 <line:535:22>
| `-NonNullAttr 0x555a3bea3ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3bea4048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555a3bea3f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555a3bea3f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x555a3bea40f8 <line:538:22>
| `-NonNullAttr 0x555a3bea4150 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea42f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3bea4198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555a3bea4218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555a3bea43a8 <line:542:22>
| `-NonNullAttr 0x555a3bea4400 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3bea4588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555a3bea4448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555a3bea44c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x555a3bea4638 <line:545:22>
| `-NonNullAttr 0x555a3bea4690 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea4878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x555a3bea46d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x555a3bea4758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x555a3bea4928 <line:548:22>
| `-NonNullAttr 0x555a3bea4980 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3bea5b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555a3bea49c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555a3bea5a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x555a3bea5be8 <line:551:22>
| `-NonNullAttr 0x555a3bea5c40 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea5f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x555a3bea5d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555a3bea5e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x555a3bea6028 <col:29>
| `-NonNullAttr 0x555a3bea6080 <col:70, col:84> 1
|-FunctionDecl 0x555a3bea61f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555a3bea60c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555a3bea62a0 <line:556:22>
| `-NonNullAttr 0x555a3bea62f8 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea6400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555a3bea6348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555a3bea64a8 <line:558:22>
| `-NonNullAttr 0x555a3bea6500 <col:52, col:66> 1
|-FunctionDecl 0x555a3bea6600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555a3bea6548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555a3bea66a8 <line:560:19>
| `-NonNullAttr 0x555a3bea6700 <col:49, col:63> 1
|-FunctionDecl 0x555a3bea6938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555a3bea6748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555a3bea67d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555a3bea69e8 <col:39>
| `-NonNullAttr 0x555a3bea6a70 <col:69, col:86> 1 2
|-FunctionDecl 0x555a3bea6b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555a3bea6ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555a3bea6c18 <line:565:22>
| `-NonNullAttr 0x555a3bea6c70 <col:52, col:66> 1
|-FunctionDecl 0x555a3bea6d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555a3bea6cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555a3bea6e18 <line:567:22>
| `-NonNullAttr 0x555a3bea6e70 <col:52, col:66> 1
|-FunctionDecl 0x555a3bea7028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555a3bea6eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555a3bea6f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555a3bea70d8 <col:39>
| `-NonNullAttr 0x555a3bea7130 <col:69, col:86> 1 2
|-FunctionDecl 0x555a3bea7230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555a3bea7178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555a3bea72d8 <line:572:22>
| `-NonNullAttr 0x555a3bea7330 <col:52, col:66> 1
|-FunctionDecl 0x555a3bea7518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555a3bea73e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555a3bea75c0 <line:574:22>
| `-NonNullAttr 0x555a3bea7618 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea7720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555a3bea7668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555a3bea77c8 <line:576:22>
| `-NonNullAttr 0x555a3bea7820 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea7a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3bea7868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555a3bea78e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x555a3bea7b30 <line:580:22>
| `-NonNullAttr 0x555a3bea7b88 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3bea7d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555a3bea7bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555a3bea7c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x555a3bea7e48 <line:583:22>
| `-NonNullAttr 0x555a3bea7ea0 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea8048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3bea7ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555a3bea7f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x555a3bea80f8 <line:587:22>
| `-NonNullAttr 0x555a3bea8150 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3bea82d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555a3bea8198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555a3bea8218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x555a3bea8388 <col:36>
| `-NonNullAttr 0x555a3bea83e0 <col:77, col:91> 1
|-FunctionDecl 0x555a3bea8718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x555a3bea84c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555a3bea85d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x555a3bea87c8 <line:592:22>
| `-NonNullAttr 0x555a3bea8820 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea8998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555a3bea8868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555a3bea8a40 <line:594:22>
| `-NonNullAttr 0x555a3bea8ac0 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea8bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555a3bea8b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555a3bea8c68 <line:596:22>
| `-NonNullAttr 0x555a3bea8cc0 <col:52, col:66> 1
|-FunctionDecl 0x555a3bea8dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555a3bea8d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555a3bea8e68 <line:598:22>
| `-NonNullAttr 0x555a3bea8ec0 <col:52, col:66> 1
|-FunctionDecl 0x555a3bea90e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x555a3bea8f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555a3bea8f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x555a3bea9198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x555a3bea94c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555a3bea9218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555a3bea9290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555a3bea9320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x555a3bea9580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x555a3bea9798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555a3bea9660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555a3bea9840 <line:607:22>
| `-NonNullAttr 0x555a3bea9898 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea99a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555a3bea98e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555a3bea9a48 <line:609:22>
| `-NonNullAttr 0x555a3bea9ad0 <col:63, col:77> 1
|-FunctionDecl 0x555a3bea9cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3bea9b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555a3bea9b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x555a3bea9da8 <line:613:22>
| `-NonNullAttr 0x555a3bea9e00 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3beaa008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x555a3bea9e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555a3bea9ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x555a3beaa0b8 <col:37>
| `-NonNullAttr 0x555a3beaa110 <col:78, col:92> 1
|-FunctionDecl 0x555a3beaa328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x555a3beaa158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555a3beaa200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x555a3beaa3d8 <line:619:22>
| `-NonNullAttr 0x555a3beaa430 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3beaa5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x555a3beaa478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555a3beaa4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x555a3beaa6a8 <line:622:22>
| `-NonNullAttr 0x555a3beaa700 <col:63, col:77> 1
|-FunctionDecl 0x555a3beaa9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x555a3beaa7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x555a3beaa860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x555a3beaaa58 <line:624:22>
| `-NonNullAttr 0x555a3beaaae0 <col:63, col:77> 1
|-FunctionDecl 0x555a3beaac58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555a3beaab28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555a3beaad00 <line:626:22>
| `-NonNullAttr 0x555a3beaad58 <col:63, col:77> 1
|-FunctionDecl 0x555a3beaae60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555a3beaada8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555a3beaaf08 <line:628:22>
| `-NonNullAttr 0x555a3beaaf60 <col:52, col:66> 1
|-FunctionDecl 0x555a3beab060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555a3beaafa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555a3beab108 <line:630:22>
| `-NonNullAttr 0x555a3beab160 <col:52, col:66> 1
|-FunctionDecl 0x555a3beab260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555a3beab1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555a3beab308 <line:632:22>
| `-NonNullAttr 0x555a3beab360 <col:52, col:66> 1
|-FunctionDecl 0x555a3beab738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x555a3beab440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x555a3beab550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555a3beab5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x555a3beab7f0 <line:636:22>
| `-NonNullAttr 0x555a3beab848 <col:63, col:77> 1
|-FunctionDecl 0x555a3beab9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555a3beab898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555a3beaba70 <line:638:22>
| `-NonNullAttr 0x555a3beacb00 <col:63, col:77> 1
|-FunctionDecl 0x555a3beacc00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555a3beacb48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555a3beacca8 <line:640:22>
| `-NonNullAttr 0x555a3beacd00 <col:52, col:66> 1
|-FunctionDecl 0x555a3beacee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555a3beacdb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555a3beacf90 <line:642:22>
| `-NonNullAttr 0x555a3beacfe8 <col:63, col:77> 1
|-FunctionDecl 0x555a3bead0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555a3bead038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555a3bead198 <line:644:22>
| `-NonNullAttr 0x555a3bead1f0 <col:63, col:77> 1
|-FunctionDecl 0x555a3bead418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555a3bead238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555a3bead2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x555a3bead4c8 <line:648:22>
| `-NonNullAttr 0x555a3bead520 <col:63, col:80> 1 2
|-FunctionDecl 0x555a3bead728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x555a3bead568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x555a3bead5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x555a3bead7d8 <line:651:22>
| `-NonNullAttr 0x555a3bead830 <col:63, col:77> 1
|-FunctionDecl 0x555a3beadb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x555a3bead910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x555a3beada30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x555a3beadc48 <line:654:22>
| `-NonNullAttr 0x555a3beadca0 <col:63, col:77> 1
|-FunctionDecl 0x555a3beaddf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x555a3beadce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555a3beadea0 <col:69>
|-FunctionDecl 0x555a3beae018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x555a3beadf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555a3beae0c0 <col:72>
|-FunctionDecl 0x555a3beae2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x555a3beae128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x555a3beae1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x555a3beae3a8 <col:44>
|-FunctionDecl 0x555a3beae5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x555a3beae410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555a3beae488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x555a3beae678 <line:661:22>
| `-NonNullAttr 0x555a3beae6d0 <col:63, col:77> 2
|-FunctionDecl 0x555a3beaeb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x555a3beae7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x555a3beae8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x555a3beae9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x555a3beaebe8 <col:47>
|-FunctionDecl 0x555a3beaecf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x555a3beaec58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555a3beaee48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x555a3beaedb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555a3beaef10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x555a3beaefd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x555a3beaf090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x555a3beaf148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x555a3beaf1c8 prev 0x555a3beaf148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x555a3beaf230 <col:24> 'int' 0
|-VarDecl 0x555a3beaf268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x555a3beaf2e8 prev 0x555a3beaf268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x555a3beaf350 <col:27> 'int' 0
|-VarDecl 0x555a3beaf388 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x555a3beaf408 prev 0x555a3beaf388 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x555a3beaf470 <col:27> 'int' 0
|-VarDecl 0x555a3beaf4a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x555a3beaf528 prev 0x555a3beaf4a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x555a3beaf590 <col:27> 'int' 0
|-VarDecl 0x555a3beaf5c8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x555a3beaf648 prev 0x555a3beaf5c8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x555a3beaf6b0 <col:27> 'int' 0
|-VarDecl 0x555a3beaf6e0 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x555a3beaf758 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x555a3beaf7d8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x555a3beaf858 prev 0x555a3beaf7d8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x555a3beaf8c0 <col:9> 'int' 0
|-VarDecl 0x555a3beaf8f8 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x555a3beaf978 prev 0x555a3beaf8f8 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x555a3beaf9e0 <col:9> 'int' 0
|-VarDecl 0x555a3beafa10 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x555a3beafb00 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x555a3beafb78 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x555a3beafbf0 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x555a3beafc68 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x555a3beafce0 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x555a3beafd58 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x555a3beafdd0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x555a3beafe48 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x555a3beafec8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x555a3beaff48 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x555a3beaffc0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x555a3beb0040 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x555a3beb00b8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x555a3beb0130 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x555a3beb01a8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x555a3beb02c0 prev 0x555a3beaecf0 <line:703:1, line:746:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x555a3beb0228 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555a3beb4578 <line:704:1, line:746:1>
|   |-CallExpr 0x555a3beb03d8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555a3beb03c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb0368 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555a3beb0450 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555a3beb03f8 <col:3> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x555a3beb0438 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb0418 <col:15> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x555a3beb04b0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555a3beb0470 <col:3> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x555a3beb0490 <col:15> 'int' 1
|   |-BinaryOperator 0x555a3beb0528 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb04d0 <col:3> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb0510 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb04f0 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555a3beb05c0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb0548 <col:3> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x555a3beb0598 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555a3beb0568 <col:27> 'int' 1
|   |-CallExpr 0x555a3beb0748 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x555a3beb0730 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x555a3beb05e0 <col:3> 'void (int)' Function 0x555a3be55d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x555a3beb06e0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x555a3beb06c0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x555a3beb06a0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x555a3beb0658 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x555a3beb0640 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x555a3beb0600 <col:23> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x555a3beb0688 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x555a3beb0670 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x555a3beb0620 <col:41> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555a3beb07c8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb0770 <col:3> '_Bool' lvalue Var 0x555a3beafce0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb07b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb0790 <col:20> '_Bool' lvalue Var 0x555a3beafb78 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x555a3beb0840 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb07e8 <col:3> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb0828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb0808 <col:20> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555a3beb08b8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb0860 <col:3> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb08a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb0880 <col:20> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555a3beb0950 <line:714:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb08d8 <col:3> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x555a3beb0928 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555a3beb08f8 <col:27> 'int' 1
|   |-CallExpr 0x555a3beb09a8 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555a3beb0990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb0970 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555a3beb0a00 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555a3beb09e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb09c8 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555a3beb0ac8 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb0a20 <col:3> '_Bool' lvalue Var 0x555a3beb0130 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x555a3beb0aa8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x555a3beb0a90 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x555a3beb0a40 <col:19> '_Bool (void)' Function 0x555a3be55770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x555a3beb0b88 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb0b10 <col:3> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x555a3beb0b68 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x555a3beb0b50 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x555a3beb0b30 <col:19> '_Bool (void)' Function 0x555a3be55770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x555a3beb0c00 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb0ba8 <col:3> '_Bool' lvalue Var 0x555a3beafa10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb0be8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb0bc8 <col:21> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x555a3beb0c78 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555a3beb0c20 <col:3> 'int' lvalue Var 0x555a3beafb00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x555a3beb0c60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb0c40 <col:15> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   |-BinaryOperator 0x555a3beb10b0 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x555a3beb0c98 <col:3> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   | `-ConditionalOperator 0x555a3beb1080 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x555a3beb0ea8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x555a3beb0dc8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x555a3beb0cf0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x555a3beb0cd8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x555a3beb0cb8 <col:8> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x555a3beb0da8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x555a3beb0d40 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x555a3beb0d28 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x555a3beb0d08 <col:27> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x555a3beb0d90 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x555a3beb0d78 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x555a3beb0d58 <col:46> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x555a3beb0e88 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x555a3beb0e20 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x555a3beb0e08 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x555a3beb0de8 <col:65> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x555a3beb0e70 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x555a3beb0e58 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x555a3beb0e38 <col:84> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x555a3beb1068 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb0ec8 <col:101> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   |   `-ParenExpr 0x555a3beb1048 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x555a3beb1018 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x555a3beb0f88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555a3beb0f40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555a3beb0f28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555a3beb0ee8 <col:106> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555a3beb0f70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555a3beb0f58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555a3beb0f08 <col:124> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x555a3beb0fe8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555a3beb0fa8 <col:141> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x555a3beb1000 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb0fc8 <col:153> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x555a3beb15c0 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555a3beb10d0 <col:3> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x555a3beb1590 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555a3beb1560 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555a3beb1548 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555a3beb10f0 <col:15> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555a3beb1578 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb1110 <col:31> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x555a3beb1528 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555a3beb14f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555a3beb1320 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555a3beb1240 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555a3beb1168 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555a3beb1150 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555a3beb1130 <col:45> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555a3beb1220 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555a3beb11b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555a3beb11a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555a3beb1180 <col:64> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x555a3beb1208 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555a3beb11f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555a3beb11d0 <col:83> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555a3beb1300 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555a3beb1298 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555a3beb1280 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555a3beb1260 <col:102> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x555a3beb12e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555a3beb12d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555a3beb12b0 <col:121> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x555a3beb14e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555a3beb1340 <col:138> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x555a3beb14c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555a3beb1490 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555a3beb1400 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555a3beb13b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555a3beb13a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555a3beb1360 <col:151> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555a3beb13e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555a3beb13d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555a3beb1380 <col:169> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x555a3beb1460 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555a3beb1420 <col:186> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x555a3beb1478 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555a3beb1440 <col:198> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x555a3beb1ad0 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555a3beb15e0 <col:3> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x555a3beb1aa0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555a3beb1a70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555a3beb1a58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555a3beb1600 <col:15> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555a3beb1a88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb1620 <col:31> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x555a3beb1a38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555a3beb1a08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555a3beb1830 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555a3beb1750 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555a3beb1678 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555a3beb1660 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555a3beb1640 <col:45> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555a3beb1730 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555a3beb16c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555a3beb16b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555a3beb1690 <col:64> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x555a3beb1718 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555a3beb1700 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555a3beb16e0 <col:83> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555a3beb1810 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555a3beb17a8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555a3beb1790 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555a3beb1770 <col:102> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x555a3beb17f8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555a3beb17e0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555a3beb17c0 <col:121> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x555a3beb19f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555a3beb1850 <col:138> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x555a3beb19d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555a3beb19a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555a3beb1910 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555a3beb18c8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555a3beb18b0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555a3beb1870 <col:151> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555a3beb18f8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555a3beb18e0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555a3beb1890 <col:169> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x555a3beb1970 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555a3beb1930 <col:186> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x555a3beb1988 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555a3beb1950 <col:198> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x555a3beb2088 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb1af0 <col:3> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb2070 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb2040 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555a3beb1ff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb1fe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb1b20 <col:20> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb2028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb2010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb1b40 <col:36> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x555a3beb1fc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555a3beb1f90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555a3beb1d50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555a3beb1c70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555a3beb1b98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555a3beb1b80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555a3beb1b60 <col:55> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555a3beb1c50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555a3beb1be8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555a3beb1bd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555a3beb1bb0 <col:74> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x555a3beb1c38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555a3beb1c20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555a3beb1c00 <col:93> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555a3beb1d30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555a3beb1cc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555a3beb1cb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555a3beb1c90 <col:112> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x555a3beb1d18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555a3beb1d00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555a3beb1ce0 <col:131> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x555a3beb1f78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555a3beb1f60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555a3beb1d70 <col:148> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x555a3beb1f40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555a3beb1f10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555a3beb1e30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555a3beb1de8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555a3beb1dd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555a3beb1d90 <col:166> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555a3beb1e18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555a3beb1e00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555a3beb1db0 <col:184> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x555a3beb1ec8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555a3beb1e80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555a3beb1e50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555a3beb1ef8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555a3beb1ee0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555a3beb1ea8 <col:212> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555a3beb2650 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb20a8 <col:3> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb2638 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb2608 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555a3beb25c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb25a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb20c8 <col:20> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb25f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb25d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb20e8 <col:36> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x555a3beb2588 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555a3beb2558 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555a3beb22f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555a3beb2218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555a3beb2140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555a3beb2128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555a3beb2108 <col:55> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555a3beb21f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555a3beb2190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555a3beb2178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555a3beb2158 <col:74> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x555a3beb21e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555a3beb21c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555a3beb21a8 <col:93> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555a3beb22d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555a3beb2270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555a3beb2258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555a3beb2238 <col:112> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x555a3beb22c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555a3beb22a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555a3beb2288 <col:131> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x555a3beb2540 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555a3beb2528 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555a3beb2318 <col:148> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x555a3beb2508 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555a3beb24d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555a3beb23d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555a3beb2390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555a3beb2378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555a3beb2338 <col:166> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555a3beb23c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555a3beb23a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555a3beb2358 <col:184> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x555a3beb24a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555a3beb2428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555a3beb23f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555a3beb24c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555a3beb2480 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555a3beb2450 <col:219> 'int' 0
|   |-BinaryOperator 0x555a3beb2c28 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb2670 <col:3> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb2c10 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb2be0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555a3beb2b98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb2b80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb2690 <col:20> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb2bc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb2bb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb26b0 <col:36> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x555a3beb2b60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555a3beb2b30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555a3beb28c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555a3beb27e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555a3beb2708 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555a3beb26f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555a3beb26d0 <col:55> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555a3beb27c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555a3beb2758 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555a3beb2740 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555a3beb2720 <col:74> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x555a3beb27a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555a3beb2790 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555a3beb2770 <col:93> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555a3beb28a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555a3beb2838 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555a3beb2820 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555a3beb2800 <col:112> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x555a3beb2888 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555a3beb2870 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555a3beb2850 <col:131> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x555a3beb2ae8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555a3beb2ad0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555a3beb28e0 <col:148> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x555a3beb2ab0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555a3beb2a80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555a3beb29a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555a3beb2958 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555a3beb2940 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555a3beb2900 <col:166> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555a3beb2988 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555a3beb2970 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555a3beb2920 <col:184> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x555a3beb2a38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555a3beb29f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555a3beb29c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555a3beb2a68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555a3beb2a50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555a3beb2a18 <col:212> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555a3beb31f0 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb2c48 <col:3> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb31d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb31a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555a3beb3160 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb3148 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb2c68 <col:20> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb3190 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb3178 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb2c88 <col:36> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x555a3beb3128 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555a3beb30f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555a3beb2e98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555a3beb2db8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555a3beb2ce0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555a3beb2cc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555a3beb2ca8 <col:55> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555a3beb2d98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555a3beb2d30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555a3beb2d18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555a3beb2cf8 <col:74> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x555a3beb2d80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555a3beb2d68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555a3beb2d48 <col:93> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555a3beb2e78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555a3beb2e10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555a3beb2df8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555a3beb2dd8 <col:112> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x555a3beb2e60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555a3beb2e48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555a3beb2e28 <col:131> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x555a3beb30e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555a3beb30c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555a3beb2eb8 <col:148> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x555a3beb30a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555a3beb3078 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555a3beb2f78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555a3beb2f30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555a3beb2f18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555a3beb2ed8 <col:166> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555a3beb2f60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555a3beb2f48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555a3beb2ef8 <col:184> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x555a3beb3048 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555a3beb2fc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555a3beb2f98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555a3beb3060 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555a3beb3020 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555a3beb2ff0 <col:219> 'int' 0
|   |-BinaryOperator 0x555a3beb3268 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555a3beb3210 <col:3> 'int' lvalue Var 0x555a3beaf2e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x555a3beb3250 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb3230 <col:25> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   |-BinaryOperator 0x555a3beb3398 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x555a3beb3288 <col:3> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   | `-ConditionalOperator 0x555a3beb3368 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x555a3beb3320 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555a3beb3308 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555a3beb32a8 <col:7> '_Bool' lvalue Var 0x555a3beafa10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x555a3beb3338 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb32c8 <col:25> 'int' lvalue Var 0x555a3beafb00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x555a3beb3350 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x555a3beb32e8 <col:37> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   |-BinaryOperator 0x555a3beb3430 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb33b8 <col:3> '_Bool' lvalue Var 0x555a3beafa10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x555a3beb3408 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555a3beb33d8 <col:28> 'int' 0
|   |-CallExpr 0x555a3beb3488 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555a3beb3470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb3450 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555a3beb34e0 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555a3beb34c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb34a8 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555a3beb3558 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555a3beb3500 <col:3> 'int' lvalue Var 0x555a3beaf408 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x555a3beb3540 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb3520 <col:25> 'int' lvalue Var 0x555a3beaf858 'x' 'int'
|   |-CallExpr 0x555a3beb35b0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555a3beb3598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb3578 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555a3beb3608 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555a3beb35f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb35d0 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555a3beb38f0 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555a3beb3628 <col:3> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   | `-ConditionalOperator 0x555a3beb38c0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555a3beb36e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555a3beb36a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555a3beb3688 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555a3beb3648 <col:7> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555a3beb36d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555a3beb36b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555a3beb3668 <col:25> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x555a3beb38a8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb3708 <col:42> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x555a3beb3888 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555a3beb3858 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555a3beb37c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555a3beb3780 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555a3beb3768 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555a3beb3728 <col:55> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555a3beb37b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555a3beb3798 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555a3beb3748 <col:73> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x555a3beb3828 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555a3beb37e8 <col:90> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555a3beb3840 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb3808 <col:102> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   |-BinaryOperator 0x555a3beb3af8 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb3910 <col:3> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb3ae0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb3ab0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555a3beb39d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555a3beb3988 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555a3beb3970 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555a3beb3930 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555a3beb39b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555a3beb39a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555a3beb3950 <col:38> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb3a68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555a3beb3a20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555a3beb39f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555a3beb3a98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555a3beb3a80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb3a48 <col:66> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555a3beb3e08 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb3b40 <col:3> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb3df0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb3dc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555a3beb3ce0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555a3beb3c00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555a3beb3bb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555a3beb3ba0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555a3beb3b60 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555a3beb3be8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555a3beb3bd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555a3beb3b80 <col:38> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x555a3beb3cc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555a3beb3c78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555a3beb3c60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555a3beb3c20 <col:56> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555a3beb3ca8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555a3beb3c90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555a3beb3c40 <col:74> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb3d78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555a3beb3d30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555a3beb3d00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555a3beb3da8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555a3beb3d90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb3d58 <col:102> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555a3beb4010 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb3e28 <col:3> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb3ff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb3fc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555a3beb3ee8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555a3beb3ea0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555a3beb3e88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555a3beb3e48 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555a3beb3ed0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555a3beb3eb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555a3beb3e68 <col:38> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb3f80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555a3beb3f38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555a3beb3f08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555a3beb3fb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555a3beb3f98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb3f60 <col:66> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555a3beb42f8 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb4030 <col:3> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb42e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb42b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555a3beb41d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555a3beb40f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555a3beb40a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555a3beb4090 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555a3beb4050 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555a3beb40d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555a3beb40c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555a3beb4070 <col:38> '_Bool' lvalue Var 0x555a3beafbf0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x555a3beb41b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555a3beb4168 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555a3beb4150 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555a3beb4110 <col:56> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555a3beb4198 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555a3beb4180 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555a3beb4130 <col:74> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb4268 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555a3beb4220 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555a3beb41f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555a3beb4298 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555a3beb4280 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb4248 <col:102> '_Bool' lvalue Var 0x555a3beafd58 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x555a3beb4350 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555a3beb4338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb4318 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555a3beb43a8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555a3beb4390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb4370 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555a3beb4460 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555a3beb43c8 <col:3> 'int' lvalue Var 0x555a3beaf1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555a3beb4440 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555a3beb4428 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb43e8 <col:22> 'int' lvalue Var 0x555a3beaf1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555a3beb4408 <col:41> 'int' 1
|   |-CallExpr 0x555a3beb44b8 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555a3beb44a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb4480 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555a3beb4568 <line:745:3, col:36>
|     `-CallExpr 0x555a3beb4548 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555a3beb4530 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555a3beb44d8 <col:10> 'void *(void)' Function 0x555a3be55ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555a3beb4780 prev 0x555a3beaee48 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x555a3beb46e8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555a3beb8448 <line:748:1, line:782:1>
|   |-CallExpr 0x555a3beb4860 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555a3beb4848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb4828 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555a3beb48c0 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555a3beb4880 <col:3> 'int' lvalue Var 0x555a3beaf858 'x' 'int'
|   | `-IntegerLiteral 0x555a3beb48a0 <col:7> 'int' 1
|   |-CallExpr 0x555a3beb4918 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555a3beb4900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb48e0 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555a3beb4970 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555a3beb4958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb4938 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555a3beb49e8 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555a3beb4990 <col:3> 'int' lvalue Var 0x555a3beaf528 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x555a3beb49d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb49b0 <col:25> 'int' lvalue Var 0x555a3beaf858 'x' 'int'
|   |-CallExpr 0x555a3beb4a40 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555a3beb4a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb4a08 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555a3beb4a98 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555a3beb4a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb4a60 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555a3beb4b50 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb4ab8 <col:3> '_Bool' lvalue Var 0x555a3beb0130 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x555a3beb4b10 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x555a3beb4af8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x555a3beb4ad8 <col:19> '_Bool (void)' Function 0x555a3be55770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x555a3beb4be8 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb4b70 <col:3> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x555a3beb4bc8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x555a3beb4bb0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x555a3beb4b90 <col:19> '_Bool (void)' Function 0x555a3be55770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x555a3beb4c60 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb4c08 <col:3> '_Bool' lvalue Var 0x555a3beafa10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb4c48 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb4c28 <col:21> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x555a3beb4cd8 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555a3beb4c80 <col:3> 'int' lvalue Var 0x555a3beafb00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x555a3beb4cc0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb4ca0 <col:15> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   |-BinaryOperator 0x555a3beb5110 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x555a3beb4cf8 <col:3> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   | `-ConditionalOperator 0x555a3beb50e0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x555a3beb4f08 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x555a3beb4e28 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x555a3beb4d50 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x555a3beb4d38 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x555a3beb4d18 <col:8> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x555a3beb4e08 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x555a3beb4da0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x555a3beb4d88 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x555a3beb4d68 <col:27> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x555a3beb4df0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x555a3beb4dd8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x555a3beb4db8 <col:46> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x555a3beb4ee8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x555a3beb4e80 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x555a3beb4e68 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x555a3beb4e48 <col:65> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x555a3beb4ed0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x555a3beb4eb8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x555a3beb4e98 <col:84> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x555a3beb50c8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb4f28 <col:101> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   |   `-ParenExpr 0x555a3beb50a8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x555a3beb5078 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x555a3beb4fe8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555a3beb4fa0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555a3beb4f88 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555a3beb4f48 <col:106> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555a3beb4fd0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555a3beb4fb8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555a3beb4f68 <col:124> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x555a3beb5048 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555a3beb5008 <col:141> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x555a3beb5060 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb5028 <col:153> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x555a3beb5620 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555a3beb5130 <col:3> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x555a3beb55f0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555a3beb55c0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555a3beb55a8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555a3beb5150 <col:15> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555a3beb55d8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb5170 <col:31> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x555a3beb5588 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555a3beb5558 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555a3beb5380 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555a3beb52a0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555a3beb51c8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555a3beb51b0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555a3beb5190 <col:45> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555a3beb5280 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555a3beb5218 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555a3beb5200 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555a3beb51e0 <col:64> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x555a3beb5268 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555a3beb5250 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555a3beb5230 <col:83> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555a3beb5360 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555a3beb52f8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555a3beb52e0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555a3beb52c0 <col:102> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x555a3beb5348 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555a3beb5330 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555a3beb5310 <col:121> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x555a3beb5540 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555a3beb53a0 <col:138> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x555a3beb5520 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555a3beb54f0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555a3beb5460 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555a3beb5418 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555a3beb5400 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555a3beb53c0 <col:151> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555a3beb5448 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555a3beb5430 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555a3beb53e0 <col:169> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x555a3beb54c0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555a3beb5480 <col:186> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x555a3beb54d8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555a3beb54a0 <col:198> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x555a3beb5b30 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555a3beb5640 <col:3> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x555a3beb5b00 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555a3beb5ad0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555a3beb5ab8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555a3beb5660 <col:15> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555a3beb5ae8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb5680 <col:31> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x555a3beb5a98 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555a3beb5a68 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555a3beb5890 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555a3beb57b0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555a3beb56d8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555a3beb56c0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555a3beb56a0 <col:45> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555a3beb5790 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555a3beb5728 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555a3beb5710 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555a3beb56f0 <col:64> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x555a3beb5778 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555a3beb5760 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555a3beb5740 <col:83> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555a3beb5870 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555a3beb5808 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555a3beb57f0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555a3beb57d0 <col:102> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x555a3beb5858 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555a3beb5840 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555a3beb5820 <col:121> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x555a3beb5a50 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555a3beb58b0 <col:138> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x555a3beb5a30 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555a3beb5a00 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555a3beb5970 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555a3beb5928 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555a3beb5910 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555a3beb58d0 <col:151> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555a3beb5958 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555a3beb5940 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555a3beb58f0 <col:169> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x555a3beb59d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555a3beb5990 <col:186> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x555a3beb59e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555a3beb59b0 <col:198> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x555a3beb60e8 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb5b60 <col:3> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb60d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb60a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555a3beb6058 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb6040 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb5b80 <col:20> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb6088 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb6070 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb5ba0 <col:36> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x555a3beb6020 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555a3beb5ff0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555a3beb5db0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555a3beb5cd0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555a3beb5bf8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555a3beb5be0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555a3beb5bc0 <col:55> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555a3beb5cb0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555a3beb5c48 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555a3beb5c30 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555a3beb5c10 <col:74> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x555a3beb5c98 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555a3beb5c80 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555a3beb5c60 <col:93> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555a3beb5d90 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555a3beb5d28 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555a3beb5d10 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555a3beb5cf0 <col:112> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x555a3beb5d78 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555a3beb5d60 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555a3beb5d40 <col:131> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x555a3beb5fd8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555a3beb5fc0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555a3beb5dd0 <col:148> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x555a3beb5fa0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555a3beb5f70 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555a3beb5e90 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555a3beb5e48 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555a3beb5e30 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555a3beb5df0 <col:166> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555a3beb5e78 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555a3beb5e60 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555a3beb5e10 <col:184> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x555a3beb5f28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555a3beb5ee0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555a3beb5eb0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555a3beb5f58 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555a3beb5f40 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555a3beb5f08 <col:212> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555a3beb66b0 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb6108 <col:3> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb6698 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb6668 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555a3beb6620 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb6608 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb6128 <col:20> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb6650 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb6638 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb6148 <col:36> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x555a3beb65e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555a3beb65b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555a3beb6358 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555a3beb6278 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555a3beb61a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555a3beb6188 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555a3beb6168 <col:55> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555a3beb6258 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555a3beb61f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555a3beb61d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555a3beb61b8 <col:74> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x555a3beb6240 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555a3beb6228 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555a3beb6208 <col:93> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555a3beb6338 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555a3beb62d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555a3beb62b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555a3beb6298 <col:112> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x555a3beb6320 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555a3beb6308 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555a3beb62e8 <col:131> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x555a3beb65a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555a3beb6588 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555a3beb6378 <col:148> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x555a3beb6568 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555a3beb6538 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555a3beb6438 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555a3beb63f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555a3beb63d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555a3beb6398 <col:166> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555a3beb6420 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555a3beb6408 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555a3beb63b8 <col:184> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x555a3beb6508 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555a3beb6488 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555a3beb6458 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555a3beb6520 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555a3beb64e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555a3beb64b0 <col:219> 'int' 0
|   |-BinaryOperator 0x555a3beb6c68 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb66d0 <col:3> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb6c50 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb6c20 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555a3beb6bd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb6bc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb66f0 <col:20> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb6c08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb6bf0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb6710 <col:36> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x555a3beb6ba0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555a3beb6b70 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555a3beb6920 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555a3beb6840 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555a3beb6768 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555a3beb6750 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555a3beb6730 <col:55> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555a3beb6820 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555a3beb67b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555a3beb67a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555a3beb6780 <col:74> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x555a3beb6808 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555a3beb67f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555a3beb67d0 <col:93> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555a3beb6900 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555a3beb6898 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555a3beb6880 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555a3beb6860 <col:112> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x555a3beb68e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555a3beb68d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555a3beb68b0 <col:131> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x555a3beb6b48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555a3beb6b30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555a3beb6940 <col:148> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x555a3beb6b10 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555a3beb6ae0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555a3beb6a00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555a3beb69b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555a3beb69a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555a3beb6960 <col:166> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555a3beb69e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555a3beb69d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555a3beb6980 <col:184> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x555a3beb6a98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555a3beb6a50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555a3beb6a20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555a3beb6ac8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555a3beb6ab0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555a3beb6a78 <col:212> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555a3beb7230 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb6c88 <col:3> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb7218 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb71e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555a3beb71a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb7188 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb6ca8 <col:20> '_Bool' lvalue Var 0x555a3beb01a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb71d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555a3beb71b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555a3beb6cc8 <col:36> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x555a3beb7168 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555a3beb7138 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555a3beb6ed8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555a3beb6df8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555a3beb6d20 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555a3beb6d08 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555a3beb6ce8 <col:55> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555a3beb6dd8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555a3beb6d70 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555a3beb6d58 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555a3beb6d38 <col:74> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x555a3beb6dc0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555a3beb6da8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555a3beb6d88 <col:93> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555a3beb6eb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555a3beb6e50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555a3beb6e38 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555a3beb6e18 <col:112> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x555a3beb6ea0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555a3beb6e88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555a3beb6e68 <col:131> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x555a3beb7120 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555a3beb7108 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555a3beb6ef8 <col:148> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x555a3beb70e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555a3beb70b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555a3beb6fb8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555a3beb6f70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555a3beb6f58 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555a3beb6f18 <col:166> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555a3beb6fa0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555a3beb6f88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555a3beb6f38 <col:184> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x555a3beb7088 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555a3beb7008 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555a3beb6fd8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555a3beb70a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555a3beb7060 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555a3beb7030 <col:219> 'int' 0
|   |-BinaryOperator 0x555a3beb72a8 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555a3beb7250 <col:3> 'int' lvalue Var 0x555a3beaf648 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x555a3beb7290 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555a3beb7270 <col:25> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   |-BinaryOperator 0x555a3beb73d8 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x555a3beb72c8 <col:3> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   | `-ConditionalOperator 0x555a3beb73a8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x555a3beb7360 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555a3beb7348 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555a3beb72e8 <col:7> '_Bool' lvalue Var 0x555a3beafa10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x555a3beb7378 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb7308 <col:25> 'int' lvalue Var 0x555a3beafb00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x555a3beb7390 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x555a3beb7328 <col:37> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   |-BinaryOperator 0x555a3beb7470 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb73f8 <col:3> '_Bool' lvalue Var 0x555a3beafa10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x555a3beb7448 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555a3beb7418 <col:28> 'int' 0
|   |-CallExpr 0x555a3beb74c8 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555a3beb74b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb7490 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555a3beb7520 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555a3beb7508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb74e8 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555a3beb7808 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555a3beb7540 <col:3> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   | `-ConditionalOperator 0x555a3beb77d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555a3beb7600 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555a3beb75b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555a3beb75a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555a3beb7560 <col:7> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555a3beb75e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555a3beb75d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555a3beb7580 <col:25> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x555a3beb77c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb7620 <col:42> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x555a3beb77a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555a3beb7770 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555a3beb76e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555a3beb7698 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555a3beb7680 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555a3beb7640 <col:55> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555a3beb76c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555a3beb76b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555a3beb7660 <col:73> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x555a3beb7740 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555a3beb7700 <col:90> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555a3beb7758 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb7720 <col:102> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
|   |-BinaryOperator 0x555a3beb7a10 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb7828 <col:3> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb79f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb79c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555a3beb78e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555a3beb78a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555a3beb7888 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555a3beb7848 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555a3beb78d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555a3beb78b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555a3beb7868 <col:38> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb7980 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555a3beb7938 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555a3beb7908 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555a3beb79b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555a3beb7998 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb7960 <col:66> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555a3beb7d10 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb7a30 <col:3> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb7cf8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb7cc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555a3beb7be8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555a3beb7af0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555a3beb7aa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555a3beb7a90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555a3beb7a50 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555a3beb7ad8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555a3beb7ac0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555a3beb7a70 <col:38> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x555a3beb7bc8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555a3beb7b80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555a3beb7b50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555a3beb7b10 <col:56> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555a3beb7bb0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555a3beb7b98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555a3beb7b30 <col:74> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb7c80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555a3beb7c38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555a3beb7c08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555a3beb7cb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555a3beb7c98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb7c60 <col:102> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555a3beb7f18 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb7d30 <col:3> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb7f00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb7ed0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555a3beb7df0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555a3beb7da8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555a3beb7d90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555a3beb7d50 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555a3beb7dd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555a3beb7dc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555a3beb7d70 <col:38> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb7e88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555a3beb7e40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555a3beb7e10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555a3beb7eb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555a3beb7ea0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb7e68 <col:66> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555a3beb8200 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555a3beb7f38 <col:3> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555a3beb81e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555a3beb81b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555a3beb80d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555a3beb7ff8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555a3beb7fb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555a3beb7f98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555a3beb7f58 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555a3beb7fe0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555a3beb7fc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555a3beb7f78 <col:38> '_Bool' lvalue Var 0x555a3beafc68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x555a3beb80b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555a3beb8070 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555a3beb8058 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555a3beb8018 <col:56> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555a3beb80a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555a3beb8088 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555a3beb8038 <col:74> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555a3beb8170 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555a3beb8128 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555a3beb80f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555a3beb81a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555a3beb8188 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555a3beb8150 <col:102> '_Bool' lvalue Var 0x555a3beafdd0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x555a3beb8258 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555a3beb8240 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb8220 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555a3beb82b0 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555a3beb8298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb8278 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555a3beb8368 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555a3beb82d0 <col:3> 'int' lvalue Var 0x555a3beaf1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555a3beb8348 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555a3beb8330 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555a3beb82f0 <col:22> 'int' lvalue Var 0x555a3beaf1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555a3beb8310 <col:41> 'int' 1
|   |-CallExpr 0x555a3beb83c0 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555a3beb83a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555a3beb8388 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555a3beb8438 <line:781:3, col:36>
|     `-CallExpr 0x555a3beb8418 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555a3beb8400 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555a3beb83e0 <col:10> 'void *(void)' Function 0x555a3be55ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555a3beb8580 prev 0x555a3beaef10 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x555a3beb8620 <line:784:1, line:785:1>
|-FunctionDecl 0x555a3beb8650 prev 0x555a3beaefd0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x555a3beb86f0 <line:787:1, line:788:1>
|-FunctionDecl 0x555a3beb8720 prev 0x555a3beaf090 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x555a3beb87c0 <line:790:1, line:791:1>
`-FunctionDecl 0x555a3beb8828 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x555a3beba2b0 <line:793:1, line:814:1>
    |-DeclStmt 0x555a3beb8940 <line:794:3, col:15>
    | `-VarDecl 0x555a3beb88d8 <col:3, col:13> col:13 used t0 'pthread_t':'unsigned long'
    |-CallExpr 0x555a3beb8b90 <line:795:3, col:51> 'int'
    | |-ImplicitCastExpr 0x555a3beb8b30 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555a3beb8958 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555a3be965b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555a3beb8998 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555a3beb8978 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555a3beb88d8 't0' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555a3beb8bd0 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555a3beb8a10 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x555a3beb89e8 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555a3beb89b0 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x555a3beb8be8 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555a3beb8a30 <col:36> 'void *(void *)' Function 0x555a3beb02c0 'P0' 'void *(void *)'
    | `-ParenExpr 0x555a3beb8ab0 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x555a3beb8a88 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555a3beb8a50 <col:49> 'int' 0
    |-DeclStmt 0x555a3beb8c78 <line:796:3, col:15>
    | `-VarDecl 0x555a3beb8c10 <col:3, col:13> col:13 used t1 'pthread_t':'unsigned long'
    |-CallExpr 0x555a3beb8e20 <line:797:3, col:51> 'int'
    | |-ImplicitCastExpr 0x555a3beb8e08 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555a3beb8c90 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555a3be965b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555a3beb8cd0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555a3beb8cb0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555a3beb8c10 't1' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555a3beb8e60 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555a3beb8d48 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x555a3beb8d20 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555a3beb8ce8 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x555a3beb8e78 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555a3beb8d68 <col:36> 'void *(void *)' Function 0x555a3beb4780 'P1' 'void *(void *)'
    | `-ParenExpr 0x555a3beb8de8 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x555a3beb8dc0 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555a3beb8d88 <col:49> 'int' 0
    |-CallExpr 0x555a3beb8ec8 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555a3beb8eb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555a3beb8e90 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555a3beb8f98 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x555a3beb8ee8 <col:3> '_Bool' lvalue Var 0x555a3beaf6e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x555a3beb8f80 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x555a3beb8f60 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x555a3beb8f48 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x555a3beb8f08 <col:21> 'int' lvalue Var 0x555a3beaf1c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x555a3beb8f28 <col:41> 'int' 2
    |-CallExpr 0x555a3beb8ff0 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555a3beb8fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555a3beb8fb8 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555a3beb9068 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555a3beb9050 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555a3beb9010 <col:3> 'void (int)' Function 0x555a3be55940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x555a3beb90a8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555a3beb9090 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555a3beb9030 <col:21> '_Bool' lvalue Var 0x555a3beaf6e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x555a3beb90f8 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555a3beb90e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555a3beb90c0 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555a3beb93e0 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x555a3beb9118 <col:3> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
    | `-ConditionalOperator 0x555a3beb93b0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x555a3beb91d8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x555a3beb9190 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x555a3beb9178 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x555a3beb9138 <col:7> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x555a3beb91c0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x555a3beb91a8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x555a3beb9158 <col:25> '_Bool' lvalue Var 0x555a3beafb78 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x555a3beb9398 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x555a3beb91f8 <col:42> 'int' lvalue Var 0x555a3beaff48 'y$w_buff0' 'int'
    |   `-ParenExpr 0x555a3beb9378 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x555a3beb9348 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x555a3beb92b8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x555a3beb9270 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x555a3beb9258 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x555a3beb9218 <col:55> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x555a3beb92a0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x555a3beb9288 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x555a3beb9238 <col:73> '_Bool' lvalue Var 0x555a3beafce0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x555a3beb9318 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x555a3beb92d8 <col:90> 'int' lvalue Var 0x555a3beb0040 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x555a3beb9330 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x555a3beb92f8 <col:102> 'int' lvalue Var 0x555a3beaf978 'y' 'int'
    |-BinaryOperator 0x555a3beb95e8 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555a3beb9400 <col:3> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x555a3beb95d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555a3beb95a0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555a3beb94c0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555a3beb9478 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555a3beb9460 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555a3beb9420 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555a3beb94a8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555a3beb9490 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555a3beb9440 <col:38> '_Bool' lvalue Var 0x555a3beafb78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555a3beb9558 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555a3beb9510 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555a3beb94e0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555a3beb9588 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555a3beb9570 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555a3beb9538 <col:66> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x555a3beb98d0 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555a3beb9608 <col:3> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x555a3beb98b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555a3beb9888 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555a3beb97a8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555a3beb96c8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555a3beb9680 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555a3beb9668 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555a3beb9628 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555a3beb96b0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555a3beb9698 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555a3beb9648 <col:38> '_Bool' lvalue Var 0x555a3beafb78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555a3beb9788 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555a3beb9740 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555a3beb9728 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555a3beb96e8 <col:56> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555a3beb9770 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555a3beb9758 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555a3beb9708 <col:74> '_Bool' lvalue Var 0x555a3beafce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555a3beb9840 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555a3beb97f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555a3beb97c8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555a3beb9870 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555a3beb9858 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555a3beb9820 <col:102> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x555a3beb9ad8 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555a3beb98f0 <col:3> '_Bool' lvalue Var 0x555a3beafb78 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555a3beb9ac0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555a3beb9a90 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555a3beb99b0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555a3beb9968 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555a3beb9950 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555a3beb9910 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555a3beb9998 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555a3beb9980 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555a3beb9930 <col:38> '_Bool' lvalue Var 0x555a3beafb78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555a3beb9a48 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555a3beb9a00 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555a3beb99d0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555a3beb9a78 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555a3beb9a60 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555a3beb9a28 <col:66> '_Bool' lvalue Var 0x555a3beafb78 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x555a3beb9dd8 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555a3beb9af8 <col:3> '_Bool' lvalue Var 0x555a3beafce0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555a3beb9dc0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555a3beb9d90 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555a3beb9cb0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555a3beb9bd0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555a3beb9b70 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555a3beb9b58 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555a3beb9b18 <col:20> '_Bool' lvalue Var 0x555a3beaffc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555a3beb9bb8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555a3beb9ba0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555a3beb9b38 <col:38> '_Bool' lvalue Var 0x555a3beafb78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555a3beb9c90 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555a3beb9c48 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555a3beb9c30 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555a3beb9bf0 <col:56> '_Bool' lvalue Var 0x555a3beb00b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555a3beb9c78 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555a3beb9c60 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555a3beb9c10 <col:74> '_Bool' lvalue Var 0x555a3beafce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555a3beb9d48 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555a3beb9d00 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555a3beb9cd0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555a3beb9d78 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555a3beb9d60 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555a3beb9d28 <col:102> '_Bool' lvalue Var 0x555a3beafce0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x555a3beb9e30 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555a3beb9e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555a3beb9df8 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555a3beb9e88 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555a3beb9e70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555a3beb9e50 <col:3> 'void ()' Function 0x555a3be55fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555a3beba158 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x555a3beb9ea8 <col:3> '_Bool' lvalue Var 0x555a3beaf758 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x555a3beba140 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x555a3beba128 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x555a3beba108 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x555a3beba0e8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x555a3beba050 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x555a3beb9fb8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x555a3beb9f20 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x555a3beb9f08 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x555a3beb9ec8 <col:23> 'int' lvalue Var 0x555a3beaf2e8 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x555a3beb9ee8 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x555a3beb9f98 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x555a3beb9f80 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x555a3beb9f40 <col:51> 'int' lvalue Var 0x555a3beaf408 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x555a3beb9f60 <col:74> 'int' 0
    |         | `-BinaryOperator 0x555a3beba030 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x555a3beba018 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x555a3beb9fd8 <col:79> 'int' lvalue Var 0x555a3beaf528 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x555a3beb9ff8 <col:102> 'int' 1
    |         `-BinaryOperator 0x555a3beba0c8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x555a3beba0b0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x555a3beba070 <col:107> 'int' lvalue Var 0x555a3beaf648 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x555a3beba090 <col:130> 'int' 0
    |-CallExpr 0x555a3beba1b0 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555a3beba198 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555a3beba178 <col:3> 'void ()' Function 0x555a3be56060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555a3beba228 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555a3beba210 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555a3beba1d0 <col:3> 'void (int)' Function 0x555a3be55d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x555a3beba268 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555a3beba250 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555a3beba1f0 <col:21> '_Bool' lvalue Var 0x555a3beaf758 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x555a3beba2a0 <line:813:3, col:10>
      `-IntegerLiteral 0x555a3beba280 <col:10> 'int' 0
