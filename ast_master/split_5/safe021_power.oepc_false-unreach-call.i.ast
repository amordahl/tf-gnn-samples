TranslationUnitDecl 0x559b9ec54e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559b9ec556d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559b9ec553b0 '__int128'
|-TypedefDecl 0x559b9ec55748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559b9ec553d0 'unsigned __int128'
|-TypedefDecl 0x559b9ec55a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559b9ec55820 'struct __NSConstantString_tag'
|   `-Record 0x559b9ec557a0 '__NSConstantString_tag'
|-TypedefDecl 0x559b9ec55af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559b9ec55ab0 'char *'
|   `-BuiltinType 0x559b9ec54eb0 'char'
|-TypedefDecl 0x559b9ec94650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559b9ec55d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559b9ec55bd0 'struct __va_list_tag'
|     `-Record 0x559b9ec55b50 '__va_list_tag'
|-FunctionDecl 0x559b9ec94790 <./split_5/safe021_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x559b9ec946c0 <col:31> col:34 'int'
|-FunctionDecl 0x559b9ec94958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x559b9ec94a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559b9ec94bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559b9ec94b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x559b9ec94df8 <col:40, col:99>
|   |-IfStmt 0x559b9ec94dc8 <col:42, col:88>
|   | |-UnaryOperator 0x559b9ec94ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x559b9ec94c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x559b9ec94c70 <col:47> 'int' lvalue ParmVar 0x559b9ec94b38 'expression' 'int'
|   | `-CompoundStmt 0x559b9ec94db0 <col:59, col:88>
|   |   `-LabelStmt 0x559b9ec94d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x559b9ec94d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x559b9ec94d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x559b9ec94cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x559b9ec94a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x559b9ec94de0 <col:89>
|   `-ReturnStmt 0x559b9ec94de8 <col:91>
|-FunctionDecl 0x559b9ec94e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x559b9ec94f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x559b9ec95280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b9ec94fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x559b9ec95038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x559b9ec950b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559b9ec95138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559b9ec95340 <line:10:22>
|-FunctionDecl 0x559b9ecbb390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b9ec953b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x559b9ec95430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x559b9ec954b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559b9ec95530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559b9ecbb450 <line:13:22>
|-FunctionDecl 0x559b9ecbb700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b9ecbb4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559b9ecbb540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x559b9ecbb5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x559b9ecbb7b8 <line:15:22>
|-TypedefDecl 0x559b9ecbb828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559b9ec54f70 'unsigned char'
|-TypedefDecl 0x559b9ecbb898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559b9ec54f90 'unsigned short'
|-TypedefDecl 0x559b9ecbb908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559b9ec54fb0 'unsigned int'
|-TypedefDecl 0x559b9ecbb978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbb9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559b9ec54ed0 'signed char'
|-TypedefDecl 0x559b9ecbba58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559b9ec54f70 'unsigned char'
|-TypedefDecl 0x559b9ecbbac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559b9ec54ef0 'short'
|-TypedefDecl 0x559b9ecbbb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559b9ec54f90 'unsigned short'
|-TypedefDecl 0x559b9ecbbba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559b9ec54f10 'int'
|-TypedefDecl 0x559b9ecbbc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559b9ec54fb0 'unsigned int'
|-TypedefDecl 0x559b9ecbbc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbbcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbbd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbbdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbbe48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbbeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559b9ec54fb0 'unsigned int'
|-TypedefDecl 0x559b9ecbbf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559b9ec54fb0 'unsigned int'
|-TypedefDecl 0x559b9ecbbf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbc008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbc078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559b9ec54fb0 'unsigned int'
|-TypedefDecl 0x559b9ecbc0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbc158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbc1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbc238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559b9ec54f10 'int'
|-RecordDecl 0x559b9ecbc290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x559b9ecbc408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x559b9ecbc4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559b9ecbc460 'struct __fsid_t' sugar
|   `-RecordType 0x559b9ecbc310 '__fsid_t'
|     `-Record 0x559b9ecbc290 ''
|-TypedefDecl 0x559b9ecbc548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbc5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbc628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbc698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559b9ec54fb0 'unsigned int'
|-TypedefDecl 0x559b9ecbc708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbc778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559b9ec54fb0 'unsigned int'
|-TypedefDecl 0x559b9ecbc7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbc858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559b9ec54f10 'int'
|-TypedefDecl 0x559b9ecbc8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559b9ec54f10 'int'
|-TypedefDecl 0x559b9ecbc938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559b9ec54f10 'int'
|-TypedefDecl 0x559b9ecbc9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559b9ec55630 'void *'
|   `-BuiltinType 0x559b9ec54e70 'void'
|-TypedefDecl 0x559b9ecbca18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbca88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbcaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbcb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbcbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbcc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbccb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbcd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbcd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbce08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbce78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbcf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559b9ecbced0 '__off64_t' sugar
|   |-Typedef 0x559b9ecbc1c8 '__off64_t'
|   `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbd000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559b9ecbcfc0 '__quad_t *'
|   `-TypedefType 0x559b9ecbcf60 '__quad_t' sugar
|     |-Typedef 0x559b9ecbbd68 '__quad_t'
|     `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbd070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559b9ec55ab0 'char *'
|   `-BuiltinType 0x559b9ec54eb0 'char'
|-TypedefDecl 0x559b9ecbd0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecbd150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559b9ec54fb0 'unsigned int'
|-FunctionDecl 0x559b9ecbd298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x559b9ecbd1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x559b9ecbe5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x559b9ecbe5d8 <line:72:3, col:34>
|     `-CallExpr 0x559b9ecbe598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559b9ecbe580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559b9ecbe510 <col:10> '<builtin fn type>' Function 0x559b9ecbe380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x559b9ecbe5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559b9ecbe530 <col:29> 'unsigned int' lvalue ParmVar 0x559b9ecbd1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x559b9ecbe380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559b9ecbe420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559b9ecbe490 <col:10> Implicit
| `-ConstAttr 0x559b9ecbe4e8 <col:10> Implicit
|-FunctionDecl 0x559b9ecbe740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559b9ecbe638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559b9ecbea58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x559b9ecbea48 <line:77:3, col:34>
|     `-CallExpr 0x559b9ecbea08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x559b9ecbe9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559b9ecbe978 <col:10> '<builtin fn type>' Function 0x559b9ecbe7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559b9ecbea30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559b9ecbe998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559b9ecbe638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x559b9ecbe7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559b9ecbe888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x559b9ecbe8f8 <col:10> Implicit
| `-ConstAttr 0x559b9ecbe950 <col:10> Implicit
|-TypedefDecl 0x559b9ecbea88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-TypedefDecl 0x559b9ecbeb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559b9ecbeae0 '__time_t' sugar
|   |-Typedef 0x559b9ecbc708 '__time_t'
|   `-BuiltinType 0x559b9ec54f30 'long'
|-RecordDecl 0x559b9ecbeb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x559b9ecbec28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559b9ecbecb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559b9ecbed48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559b9ecbed10 '__pid_t' sugar
|   |-Typedef 0x559b9ecbc238 '__pid_t'
|   `-BuiltinType 0x559b9ec54f10 'int'
|-RecordDecl 0x559b9ecbeda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x559b9ecbee60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559b9ecbeeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x559b9ecbef70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559b9ecbefd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-RecordDecl 0x559b9ecbf030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x559b9ecbf2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x559b9ecc03a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559b9ecbf310 'struct cpu_set_t' sugar
|   `-RecordType 0x559b9ecbf0b0 'cpu_set_t'
|     `-Record 0x559b9ecbf030 ''
|-FunctionDecl 0x559b9ecc0678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559b9ecc0448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559b9ecc0550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559b9ecc0728 <line:107:19>
|-FunctionDecl 0x559b9ecc0900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559b9ecc0790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x559b9ecc09a8 <col:69>
|-FunctionDecl 0x559b9ecc0b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559b9ecc0a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559b9ecc0bc8 <col:64>
|-FunctionDecl 0x559b9ecc0e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559b9ecc0c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b9ecc0d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559b9ecc0f38 <line:113:22>
|-FunctionDecl 0x559b9ecc11b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559b9ecc0fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b9ecc1098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x559b9ecc1268 <col:88>
|-FunctionDecl 0x559b9ecc1588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559b9ecc12d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b9ecc13b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x559b9ecc1440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559b9ecc1640 <col:62>
|-FunctionDecl 0x559b9ecc17b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x559b9ecc16a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x559b9ecc1860 <col:63>
|-FunctionDecl 0x559b9ecc1988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x559b9ecc1a28 <col:47>
|-FunctionDecl 0x559b9ecc1b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x559b9ecc1a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559b9ecc1bd8 <col:69>
|-FunctionDecl 0x559b9ecc1ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x559b9ecc1c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559b9ecc1d88 <col:69>
|-FunctionDecl 0x559b9ecc2048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559b9ecc1df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b9ecc1f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x559b9ecc20f8 <col:88>
|-TypedefDecl 0x559b9ecc2188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x559b9ecc2150 '__clock_t' sugar
|   |-Typedef 0x559b9ecbc548 '__clock_t'
|   `-BuiltinType 0x559b9ec54f30 'long'
|-TypedefDecl 0x559b9ecc2218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x559b9ecc21e0 '__clockid_t' sugar
|   |-Typedef 0x559b9ecbc938 '__clockid_t'
|   `-BuiltinType 0x559b9ec54f10 'int'
|-TypedefDecl 0x559b9ecc22a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x559b9ecc2270 '__timer_t' sugar
|   |-Typedef 0x559b9ecbc9a8 '__timer_t'
|   `-PointerType 0x559b9ec55630 'void *'
|     `-BuiltinType 0x559b9ec54e70 'void'
|-RecordDecl 0x559b9ecc2300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x559b9ecc23d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x559b9ecc2440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x559b9ecc24a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x559b9ecc2510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x559b9ecc2578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x559b9ecc25e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x559b9ecc2648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x559b9ecc26b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x559b9ecc2718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x559b9ecc2780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x559b9ecc27e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x559b9ecc2838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x559b9ecc2908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x559b9ecc2978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x559b9ecc2a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x559b9ecc2bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x559b9ecc2c90 <col:45>
|-FunctionDecl 0x559b9ecc2e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x559b9ecc2d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x559b9ecc2f18 <col:54>
|-FunctionDecl 0x559b9ecc3118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x559b9ecc2f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x559b9ecc2ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x559b9ecc31c8 <line:157:22>
| `-ConstAttr 0x559b9ecc3220 <col:63>
|-FunctionDecl 0x559b9ecc4050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559b9ecc3318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559b9ecc40f8 <col:56>
|-FunctionDecl 0x559b9ecc44a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x559b9ecc4168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x559b9ecc41e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559b9ecc4260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x559b9ecc4358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x559b9ecc4560 <col:54>
|-RecordDecl 0x559b9ecc45b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x559b9ecc4668 parent 0x559b9ec54e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x559b9ecc48c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x559b9ecc4968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x559b9ecc49d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x559b9ecc4a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x559b9ecc4b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x559b9ecc4c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x559b9ecc4bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x559b9ecc4b80 'struct __locale_struct' sugar
|     `-RecordType 0x559b9ecc4640 'struct __locale_struct'
|       `-Record 0x559b9ecc45b8 '__locale_struct'
|-TypedefDecl 0x559b9ecc4cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x559b9ecc4cc0 '__locale_t' sugar
|   |-Typedef 0x559b9ecc4c48 '__locale_t'
|   `-PointerType 0x559b9ecc4bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x559b9ecc4b80 'struct __locale_struct' sugar
|       `-RecordType 0x559b9ecc4640 'struct __locale_struct'
|         `-Record 0x559b9ecc45b8 '__locale_struct'
|-FunctionDecl 0x559b9ecc6110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x559b9ecc4d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x559b9ecc4de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559b9ecc4e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x559b9ecc4ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559b9ecc4f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x559b9ecc61d8 <col:40>
|-FunctionDecl 0x559b9ecc63c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559b9ecc62a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x559b9ecc6470 <col:66>
|-FunctionDecl 0x559b9ecc6580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559b9ecc64d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x559b9ecc6628 <col:69>
|-FunctionDecl 0x559b9ecc6858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559b9ecc6690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559b9ecc6720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559b9ecc6908 <col:52>
|-FunctionDecl 0x559b9ecc6ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559b9ecc6970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559b9ecc6a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559b9ecc6b60 <col:55>
|-FunctionDecl 0x559b9ecc6cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x559b9ecc6be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x559b9ecc6da0 <col:62>
|-FunctionDecl 0x559b9ecc6f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x559b9ecc6e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x559b9ecc6fc0 <col:60>
|-FunctionDecl 0x559b9ecc72b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559b9ecc7118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559b9ecc7198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559b9ecc7368 <col:44>
|-FunctionDecl 0x559b9ecc7578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559b9ecc73d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559b9ecc7450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559b9ecc7628 <col:49>
|-VarDecl 0x559b9ecc7728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x559b9ecc77a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559b9ecc7828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x559b9ecc78f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559b9ecc7a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559b9ecc7ac0 <col:42>
|-VarDecl 0x559b9ecc7b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559b9ecc7bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559b9ecc7d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559b9ecc7c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559b9ecc7de0 <col:57>
|-FunctionDecl 0x559b9ecc7ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559b9ecc7e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559b9ecc7f98 <col:56>
|-FunctionDecl 0x559b9ecc80d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559b9ecc8018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559b9ecc8178 <col:59>
|-FunctionDecl 0x559b9ecc8280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x559b9ecc81e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559b9ecc8328 <col:48>
| `-ConstAttr 0x559b9ecc8380 <col:89>
|-FunctionDecl 0x559b9ecc85e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559b9ecc8438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x559b9ecc84c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559b9ecc8848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559b9ecc86d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b9ecc8768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x559b9ecc88f8 <col:88>
|-FunctionDecl 0x559b9ecc8a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559b9ecc8960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b9ecc89f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559b9ecc8b40 <col:88>
|-FunctionDecl 0x559b9ecc8d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559b9ecc8ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b9ecc8c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559b9ecc8e08 <line:208:22>
|-FunctionDecl 0x559b9ecc9178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559b9ecc8e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b9ecc8ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559b9ecc8f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559b9ecc9010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559b9ecc9478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559b9ecc9278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559b9ecc9350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559b9ecc9528 <col:85>
|-FunctionDecl 0x559b9ecc9918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559b9ecc9590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b9ecc96c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x559b9ecc97d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x559b9ecc99d0 <col:52>
|-FunctionDecl 0x559b9ecc9b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559b9ecc9a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559b9ecc9bf0 <col:61>
|-FunctionDecl 0x559b9ecca0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559b9ecc9c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559b9ecc9cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559b9ecc9e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559b9ecc9ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x559b9ecca1b0 <col:62>
|-FunctionDecl 0x559b9ecca3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559b9ecca218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559b9ecca2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559b9ecca478 <line:221:22>
|-FunctionDecl 0x559b9ecca578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x559b9ecca4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559b9ecca620 <col:65>
|-TypedefDecl 0x559b9ecca690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559b9ec54fd0 'unsigned long'
|-RecordDecl 0x559b9ecca6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x559b9ecca830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559b9ecca898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b9ecca948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x559b9ecca8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x559b9ecca770 'union pthread_attr_t'
|     `-Record 0x559b9ecca6e8 'pthread_attr_t'
|-RecordDecl 0x559b9ecca9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559b9eccab18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559b9eccab90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559b9eccac40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559b9eccabe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559b9eccaa20 'struct __pthread_internal_list'
|     `-Record 0x559b9ecca9a0 '__pthread_internal_list'
|-RecordDecl 0x559b9eccacb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x559b9eccad58 parent 0x559b9ec54e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559b9eccae30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559b9eccae98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559b9eccaf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559b9eccaf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559b9eccafd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559b9eccb038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559b9eccf110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x559b9eccf1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x559b9eccf2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559b9eccf318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b9eccf4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559b9eccf440 'union pthread_mutex_t' sugar
|   `-RecordType 0x559b9eccad30 'pthread_mutex_t'
|     `-Record 0x559b9eccacb0 ''
|-RecordDecl 0x559b9eccf510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x559b9eccf650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559b9eccf6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559b9eccf770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559b9eccf710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559b9eccf590 'pthread_mutexattr_t'
|     `-Record 0x559b9eccf510 ''
|-RecordDecl 0x559b9eccf7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x559b9eccf888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x559b9eccf950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559b9eccf9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559b9eccfa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559b9eccfa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559b9eccfaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559b9eccfb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559b9eccfbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559b9eccfc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559b9eccfce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_5/safe021_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_5/safe021_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x559b9eccfdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559b9eccfe38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559b9eccff70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559b9eccff10 'union pthread_cond_t' sugar
|   `-RecordType 0x559b9eccf860 'pthread_cond_t'
|     `-Record 0x559b9eccf7e0 ''
|-RecordDecl 0x559b9eccffe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x559b9ecd1130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559b9ecd1198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559b9ecd1250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x559b9ecd11f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x559b9ecd0060 'pthread_condattr_t'
|     `-Record 0x559b9eccffe0 ''
|-TypedefDecl 0x559b9ecd12d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559b9ec54fb0 'unsigned int'
|-TypedefDecl 0x559b9ecd1348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559b9ec54f10 'int'
|-RecordDecl 0x559b9ecd13a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x559b9ecd1448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x559b9ecd1510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559b9ecd1578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x559b9ecd15e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x559b9ecd1648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x559b9ecd16b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x559b9ecd1718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x559b9ecd1780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x559b9ecd17e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x559b9ecd1850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x559b9ecd18b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x559b9ecd1920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x559b9ecd19d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_5/safe021_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_5/safe021_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x559b9ecd1a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559b9ecd1ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b9ecd1c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x559b9ecd1bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x559b9ecd1420 'pthread_rwlock_t'
|     `-Record 0x559b9ecd13a0 ''
|-RecordDecl 0x559b9ecd1ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x559b9ecd1de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x559b9ecd1e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b9ecd1f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x559b9ecd1ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x559b9ecd1d20 'pthread_rwlockattr_t'
|     `-Record 0x559b9ecd1ca0 ''
|-TypedefDecl 0x559b9ecd1f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559b9ec54f14 'volatile int' volatile
|   `-BuiltinType 0x559b9ec54f10 'int'
|-RecordDecl 0x559b9ecd1fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x559b9ecd3140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x559b9ecd31a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b9ecd3260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x559b9ecd3200 'union pthread_barrier_t' sugar
|   `-RecordType 0x559b9ecd2060 'pthread_barrier_t'
|     `-Record 0x559b9ecd1fe0 ''
|-RecordDecl 0x559b9ecd32d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x559b9ecd33d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559b9ecd3438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559b9ecd34f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x559b9ecd3490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x559b9ecd3350 'pthread_barrierattr_t'
|     `-Record 0x559b9ecd32d0 ''
|-TypedefDecl 0x559b9ecd3608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x559b9ecd35a0 'long [8]' 8 
|   `-BuiltinType 0x559b9ec54f30 'long'
|-EnumDecl 0x559b9ecd3660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x559b9ecd3728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x559b9ecd3778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x559b9ecd37c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x559b9ecd3898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x559b9ecd38e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x559b9ecd3938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x559b9ecd3988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x559b9ecd3a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x559b9ecd39f8 <col:26> 'int'
| |   `-DeclRefExpr 0x559b9ecd39d8 <col:26> 'int' EnumConstant 0x559b9ecd3898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x559b9ecd3a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x559b9ecd3a80 <col:29> 'int'
| |   `-DeclRefExpr 0x559b9ecd3a60 <col:29> 'int' EnumConstant 0x559b9ecd38e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x559b9ecd3b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x559b9ecd3b08 <col:30> 'int'
| |   `-DeclRefExpr 0x559b9ecd3ae8 <col:30> 'int' EnumConstant 0x559b9ecd3938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x559b9ecd3ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x559b9ecd3b90 <col:27> 'int'
|     `-DeclRefExpr 0x559b9ecd3b70 <col:27> 'int' EnumConstant 0x559b9ecd3a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x559b9ecd3bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x559b9ecd3cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x559b9ecd3d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x559b9ecd3d38 <col:30> 'int'
| |   `-DeclRefExpr 0x559b9ecd3d18 <col:30> 'int' EnumConstant 0x559b9ecd3cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x559b9ecd3da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x559b9ecd3e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x559b9ecd3e10 <col:29> 'int'
|     `-DeclRefExpr 0x559b9ecd3df0 <col:29> 'int' EnumConstant 0x559b9ecd3da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x559b9ecd3e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x559b9ecd3f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x559b9ecd3f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x559b9ecd3fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x559b9ecd4038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x559b9ecd4150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x559b9ecd41a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x559b9ecd41f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x559b9ecd4278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x559b9ecd4260 <col:31> 'int'
|     `-DeclRefExpr 0x559b9ecd4240 <col:31> 'int' EnumConstant 0x559b9ecd4150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x559b9ecd42c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x559b9ecd4398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x559b9ecd43e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x559b9ecd4438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x559b9ecd4508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x559b9ecd4558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x559b9ecd45a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x559b9ecd4678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x559b9ecd46c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x559b9ecd4718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x559b9ecd4958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x559b9ecd49c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x559b9ecd4a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x559b9ecd4b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x559b9ecd4b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x559b9ecd4c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x559b9ecd4cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x559b9ecd4d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x559b9ecd4dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x559b9ecd4e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x559b9ecd5488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x559b9ecd4f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x559b9ecd5030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b9ecd5270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x559b9ecd52f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x559b9ecd5548 <col:47>
| |-NonNullAttr 0x559b9ecd55a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x559b9ecd55d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x559b9ecd5700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x559b9ecd5630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x559b9ecd5958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x559b9ecd57b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x559b9ecd5838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x559b9ecd5b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x559b9ecd5a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x559b9ecd5bd0 <col:60>
|-FunctionDecl 0x559b9ecd5d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x559b9ecd5dc0 <col:54>
| `-ConstAttr 0x559b9ecd5e18 <col:95>
|-FunctionDecl 0x559b9ecd5fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x559b9ecd5e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b9ecd5ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x559b9ecd6098 <line:394:19>
| `-ConstAttr 0x559b9ecd60f0 <col:60>
|-FunctionDecl 0x559b9ecd7b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559b9ecd79d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559b9ecd7bb0 <col:71>
| `-NonNullAttr 0x559b9ecd7c08 <col:112, col:126> 1
|-FunctionDecl 0x559b9ecd7d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559b9ecd7c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559b9ecd7db8 <line:397:22>
| `-NonNullAttr 0x559b9ecd7e10 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecd8038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559b9ecd7e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559b9ecd7ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x559b9ecd80e8 <line:400:22>
| `-NonNullAttr 0x559b9ecd8140 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ecd8348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b9ecd8188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b9ecd8208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x559b9ecd83f8 <line:403:22>
| `-NonNullAttr 0x559b9ecd8450 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecd86a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559b9ecd8498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559b9ecd8540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559b9ecd8758 <line:406:22>
| `-NonNullAttr 0x559b9ecd87b0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ecd99e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559b9ecd87f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b9ecd8870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559b9ecd9a98 <line:409:22>
| `-NonNullAttr 0x559b9ecd9af0 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecd9d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559b9ecd9b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b9ecd9bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559b9ecd9dd8 <line:412:22>
| `-NonNullAttr 0x559b9ecd9e30 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ecda068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559b9ecd9e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b9ecd9f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559b9ecda118 <col:37>
| `-NonNullAttr 0x559b9ecda170 <col:78, col:95> 1 2
|-FunctionDecl 0x559b9ecda358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ecda1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b9ecda238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559b9ecda408 <line:418:22>
| `-NonNullAttr 0x559b9ecda460 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ecda5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b9ecda4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b9ecda528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559b9ecda698 <line:420:22>
| `-NonNullAttr 0x559b9ecda6f0 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecda898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ecda738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b9ecda7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559b9ecda948 <line:423:22>
| `-NonNullAttr 0x559b9ecda9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ecdab48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b9ecdaa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b9ecdaa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559b9ecdabf8 <line:426:22>
| `-NonNullAttr 0x559b9ecdac50 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecdadf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ecdac98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b9ecdad18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559b9ecdaea8 <line:429:22>
| `-NonNullAttr 0x559b9ecdaf00 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ecdb088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b9ecdaf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b9ecdafc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559b9ecdb138 <line:431:22>
| `-NonNullAttr 0x559b9ecdb190 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecdb3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x559b9ecdb1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b9ecdb258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559b9ecdb468 <line:434:22>
| |-NonNullAttr 0x559b9ecdb4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x559b9ecdb4f8 <col:100> "" ""
|-FunctionDecl 0x559b9ecdb708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559b9ecdb548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b9ecdb5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x559b9ecdb7b8 <line:437:22>
| |-NonNullAttr 0x559b9ecdb810 <col:63, col:77> 1
| `-DeprecatedAttr 0x559b9ecdb848 <col:97> "" ""
|-FunctionDecl 0x559b9ecdba48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559b9ecdb898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b9ecdb910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559b9ecdbaf8 <line:440:22>
| `-NonNullAttr 0x559b9ecdbb50 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ecdbcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559b9ecdbb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b9ecdbc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559b9ecdbd80 <line:443:22>
| `-NonNullAttr 0x559b9ecdbdd8 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecdc0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559b9ecdbe28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b9ecdbea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559b9ecdbf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559b9ecdc180 <line:447:22>
| `-NonNullAttr 0x559b9ecdc1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559b9ecdc488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559b9ecdc230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b9ecdc2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559b9ecdc328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559b9ecdc540 <col:43>
| `-NonNullAttr 0x559b9ecdc598 <col:84, col:98> 1
|-FunctionDecl 0x559b9ecdc858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559b9ecdc5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b9ecdc668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x559b9ecdc6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559b9ecdc910 <line:452:22>
| `-NonNullAttr 0x559b9ecdc968 <col:63, col:77> 3
|-FunctionDecl 0x559b9ecdcc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559b9ecdc9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b9ecdca60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559b9ecdcaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559b9ecdcd30 <line:456:22>
| `-NonNullAttr 0x559b9ecdcd88 <col:63, col:80> 2 3
|-FunctionDecl 0x559b9ecdcf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559b9ecdcdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b9ecdce58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559b9ecdd028 <line:458:22>
|-FunctionDecl 0x559b9ecdd3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x559b9ecdd0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559b9ecdd290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x559b9ecdd4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x559b9ecdd650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559b9ecdd530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x559b9ecdd5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559b9ecdd838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559b9ecdd718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559b9ecdd798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x559b9ecdd9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x559b9ecdd8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559b9ecddb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559b9ecddbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x559b9ecddc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x559b9ecddd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559b9ecdddd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559b9ecddfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_5/safe021_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x559b9ecde098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559b9ecde150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x559b9ecde0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559b9ecddc50 '__pthread_unwind_buf_t'
| |   `-Record 0x559b9ecddbd0 ''
| `-AlignedAttr 0x559b9ecde1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559b9ecde220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559b9ecde380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x559b9ecde3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559b9ecde450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x559b9ecde4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x559b9ecde6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559b9ecde5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559b9ecde808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559b9ecde778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559b9ecdea00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b9ecde8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559b9ecdeaa8 <line:487:22>
|-RecordDecl 0x559b9ecdeb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559b9ecdee18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559b9ecdec78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559b9ecdecf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559b9ecdeec8 <col:86>
| `-ReturnsTwiceAttr 0x559b9ecdef20 <col:12> Implicit
|-FunctionDecl 0x559b9ecdf248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559b9ecdeff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559b9ecdf100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x559b9ecdf2f8 <line:493:22>
| `-NonNullAttr 0x559b9ecdf350 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecdf4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b9ecdf398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b9ecdf570 <line:495:22>
| `-NonNullAttr 0x559b9ecdf5c8 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecdf6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b9ecdf618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b9ecdf778 <line:497:22>
| `-NonNullAttr 0x559b9ecdf7d0 <col:52, col:66> 1
|-FunctionDecl 0x559b9ecdf8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b9ecdf818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b9ecdf978 <line:499:22>
| `-NonNullAttr 0x559b9ecdf9d0 <col:52, col:66> 1
|-FunctionDecl 0x559b9ece0c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b9ece0a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b9ece0ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559b9ece0cd8 <col:36>
| `-NonNullAttr 0x559b9ece0d30 <col:66, col:83> 1 2
|-FunctionDecl 0x559b9ece0e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b9ece0d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b9ece0ed8 <line:504:22>
| `-NonNullAttr 0x559b9ece0f30 <col:52, col:66> 1
|-FunctionDecl 0x559b9ece11c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ece0fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b9ece1060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559b9ece1278 <line:508:22>
| `-NonNullAttr 0x559b9ece12d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ece1598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x559b9ece1318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b9ece1398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x559b9ece1418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x559b9ece1650 <line:512:22>
| `-NonNullAttr 0x559b9ece16a8 <col:63, col:80> 1 3
|-FunctionDecl 0x559b9ece17b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b9ece16f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b9ece1858 <line:514:22>
| `-NonNullAttr 0x559b9ece18b0 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece1ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559b9ece1960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559b9ece1b80 <line:516:22>
| `-NonNullAttr 0x559b9ece1bd8 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece1ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559b9ece1c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559b9ece1d88 <line:518:22>
| `-NonNullAttr 0x559b9ece1de0 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece2008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ece1e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b9ece1ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b9ece20b8 <line:522:22>
| `-NonNullAttr 0x559b9ece2110 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ece2318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b9ece2158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b9ece21d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x559b9ece23c8 <line:525:22>
| `-NonNullAttr 0x559b9ece2420 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece25c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ece2468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b9ece24e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x559b9ece2678 <line:528:22>
| `-NonNullAttr 0x559b9ece26d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ece2858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b9ece2718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b9ece2798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x559b9ece2908 <line:530:22>
| `-NonNullAttr 0x559b9ece2960 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece2b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ece29a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b9ece2a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x559b9ece2bd0 <line:534:22>
| `-NonNullAttr 0x559b9ece2c28 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ece2db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b9ece2c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b9ece2cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x559b9ece2e68 <line:537:22>
| `-NonNullAttr 0x559b9ece2ec0 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece3068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ece2f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b9ece2f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559b9ece3118 <line:541:22>
| `-NonNullAttr 0x559b9ece3170 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ece32f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b9ece31b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b9ece3238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x559b9ece33a8 <line:544:22>
| `-NonNullAttr 0x559b9ece3400 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece35e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x559b9ece3448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b9ece34c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x559b9ece3698 <line:547:22>
| `-NonNullAttr 0x559b9ece36f0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ece3878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b9ece3738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b9ece37b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x559b9ece3928 <line:550:22>
| `-NonNullAttr 0x559b9ece3980 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece4cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x559b9ece4aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559b9ece4bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x559b9ece4da8 <col:29>
| `-NonNullAttr 0x559b9ece4e00 <col:70, col:84> 1
|-FunctionDecl 0x559b9ece4f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b9ece4e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b9ece5020 <line:555:22>
| `-NonNullAttr 0x559b9ece5078 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece5180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b9ece50c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b9ece5228 <line:557:22>
| `-NonNullAttr 0x559b9ece5280 <col:52, col:66> 1
|-FunctionDecl 0x559b9ece5380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b9ece52c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b9ece5428 <line:559:19>
| `-NonNullAttr 0x559b9ece5480 <col:49, col:63> 1
|-FunctionDecl 0x559b9ece56b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b9ece54c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559b9ece5558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559b9ece5768 <col:39>
| `-NonNullAttr 0x559b9ece57c0 <col:69, col:86> 1 2
|-FunctionDecl 0x559b9ece58c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b9ece5808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b9ece5968 <line:564:22>
| `-NonNullAttr 0x559b9ece59c0 <col:52, col:66> 1
|-FunctionDecl 0x559b9ece5b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b9ece5a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b9ece5bd0 <line:566:22>
| `-NonNullAttr 0x559b9ece5c28 <col:52, col:66> 1
|-FunctionDecl 0x559b9ece5de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b9ece5c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559b9ece5d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559b9ece5e98 <col:39>
| `-NonNullAttr 0x559b9ece5ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x559b9ece5ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b9ece5f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b9ece6098 <line:571:22>
| `-NonNullAttr 0x559b9ece60f0 <col:52, col:66> 1
|-FunctionDecl 0x559b9ece62d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559b9ece61a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559b9ece6380 <line:573:22>
| `-NonNullAttr 0x559b9ece63d8 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece64e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559b9ece6428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559b9ece6588 <line:575:22>
| `-NonNullAttr 0x559b9ece65e0 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece6808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ece6628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559b9ece66a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b9ece68b8 <line:579:22>
| `-NonNullAttr 0x559b9ece6910 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ece6b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559b9ece6958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559b9ece69d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x559b9ece6be8 <line:582:22>
| `-NonNullAttr 0x559b9ece6c40 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece6de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ece6c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559b9ece6d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x559b9ece6e98 <line:586:22>
| `-NonNullAttr 0x559b9ece6ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ece7078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559b9ece6f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559b9ece6fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559b9ece7128 <col:36>
| `-NonNullAttr 0x559b9ece7180 <col:77, col:91> 1
|-FunctionDecl 0x559b9ece74b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559b9ece7260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559b9ece7370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559b9ece7568 <line:591:22>
| `-NonNullAttr 0x559b9ece75c0 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece7738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559b9ece7608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559b9ece77e0 <line:593:22>
| `-NonNullAttr 0x559b9ece7838 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece7940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559b9ece7888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559b9ece79e8 <line:595:22>
| `-NonNullAttr 0x559b9ece7a40 <col:52, col:66> 1
|-FunctionDecl 0x559b9ece7b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559b9ece7aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559b9ece7c00 <line:597:22>
| `-NonNullAttr 0x559b9ece7c58 <col:52, col:66> 1
|-FunctionDecl 0x559b9ece7e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559b9ece7ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559b9ece7d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559b9ece7f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x559b9ece8268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b9ece7fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559b9ece8030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b9ece80c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559b9ece8320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x559b9ece8538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559b9ece8400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559b9ece85e0 <line:606:22>
| `-NonNullAttr 0x559b9ece8638 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece8740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559b9ece8688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559b9ece87e8 <line:608:22>
| `-NonNullAttr 0x559b9ece8840 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece8aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ece8888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559b9ece8908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b9ece8b50 <line:612:22>
| `-NonNullAttr 0x559b9ece8ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ece8db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559b9ece8bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559b9ece8c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559b9ece8e68 <col:37>
| `-NonNullAttr 0x559b9ece8ec0 <col:78, col:92> 1
|-FunctionDecl 0x559b9ece90d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559b9ece8f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559b9ece8fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559b9ece9188 <line:618:22>
| `-NonNullAttr 0x559b9ece91e0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ece93a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559b9ece9228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559b9ece92a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559b9ece9458 <line:621:22>
| `-NonNullAttr 0x559b9ece94b0 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece9758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559b9ece9590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559b9ece9610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559b9ece9808 <line:623:22>
| `-NonNullAttr 0x559b9ece9860 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece99d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b9ece98a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b9ece9ab0 <line:625:22>
| `-NonNullAttr 0x559b9ece9b08 <col:63, col:77> 1
|-FunctionDecl 0x559b9ece9c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b9ece9b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b9ece9cb8 <line:627:22>
| `-NonNullAttr 0x559b9ece9d10 <col:52, col:66> 1
|-FunctionDecl 0x559b9ece9e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b9ece9d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b9ece9eb8 <line:629:22>
| `-NonNullAttr 0x559b9ece9f10 <col:52, col:66> 1
|-FunctionDecl 0x559b9ecea010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b9ece9f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b9ecea0b8 <line:631:22>
| `-NonNullAttr 0x559b9ecea110 <col:52, col:66> 1
|-FunctionDecl 0x559b9ecea4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x559b9ecea1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559b9ecea300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559b9ecea380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x559b9ecea5a0 <line:635:22>
| `-NonNullAttr 0x559b9ecea5f8 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecea778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559b9ecea648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559b9ecea820 <line:637:22>
| `-NonNullAttr 0x559b9ecea878 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecea980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559b9ecea8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559b9eceaa28 <line:639:22>
| `-NonNullAttr 0x559b9eceaa80 <col:52, col:66> 1
|-FunctionDecl 0x559b9ecebc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559b9ecebb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559b9ecebd30 <line:641:22>
| `-NonNullAttr 0x559b9ecebd88 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecebe90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559b9ecebdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559b9ecebf38 <line:643:22>
| `-NonNullAttr 0x559b9ecebf90 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecec1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b9ecebfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559b9ecec058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b9ecec268 <line:647:22>
| `-NonNullAttr 0x559b9ecec2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b9ecec4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559b9ecec308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559b9ecec388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559b9ecec578 <line:650:22>
| `-NonNullAttr 0x559b9ecec5d0 <col:63, col:77> 1
|-FunctionDecl 0x559b9ecec918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x559b9ecec6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x559b9ecec7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x559b9ecec9c8 <line:653:22>
| `-NonNullAttr 0x559b9ececa20 <col:63, col:77> 1
|-FunctionDecl 0x559b9ececb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559b9ececa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559b9ececc30 <col:69>
|-FunctionDecl 0x559b9ececda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559b9ececc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559b9ecece50 <col:72>
|-FunctionDecl 0x559b9eced088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559b9ececeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559b9ececf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559b9eced138 <col:44>
|-FunctionDecl 0x559b9eced358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559b9eced1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b9eced218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559b9eced408 <line:660:22>
| `-NonNullAttr 0x559b9eced460 <col:63, col:77> 2
|-FunctionDecl 0x559b9eced8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559b9eced540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559b9eced650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559b9eced760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559b9eced960 <col:47>
|-FunctionDecl 0x559b9ecedaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559b9eced9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559b9ecedc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559b9ecedbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559b9ecedda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x559b9ecedd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559b9ecede68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559b9ecedf28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559b9ecedfe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559b9ecee0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559b9ecee120 prev 0x559b9ecee0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559b9ecee188 <col:24> 'int' 0
|-VarDecl 0x559b9ecee1c0 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x559b9ecee240 prev 0x559b9ecee1c0 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x559b9ecee2a8 <col:27> 'int' 0
|-VarDecl 0x559b9ecee2e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x559b9ecee360 prev 0x559b9ecee2e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x559b9ecee3c8 <col:27> 'int' 0
|-VarDecl 0x559b9ecee3f8 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559b9ecee470 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559b9ecee4f0 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x559b9ecee570 prev 0x559b9ecee4f0 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559b9ecee5d8 <col:9> 'int' 0
|-VarDecl 0x559b9ecee610 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x559b9ecee690 prev 0x559b9ecee610 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559b9ecee6f8 <col:9> 'int' 0
|-VarDecl 0x559b9ecee730 <line:683:1, col:5> col:5 used z 'int'
|-VarDecl 0x559b9ecee7b0 prev 0x559b9ecee730 <line:684:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x559b9ecee818 <col:9> 'int' 0
|-VarDecl 0x559b9ecee848 <line:685:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x559b9ecee8c8 <line:686:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x559b9ecee940 <line:687:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x559b9ecee9b8 <line:688:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x559b9eceea30 <line:689:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x559b9eceeb00 <line:690:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x559b9eceeb78 <line:691:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x559b9eceebf0 <line:692:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x559b9eceec68 <line:693:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x559b9eceece0 <line:694:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x559b9eceed58 <line:695:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x559b9eceedd8 <line:696:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x559b9eceee58 <line:697:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x559b9eceeed0 <line:698:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x559b9eceef50 <line:699:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x559b9eceefc8 <line:700:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x559b9ecef040 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559b9ecef0b8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559b9ecef1d0 prev 0x559b9ecedaf0 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559b9ecef138 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559b9ecf09f8 <line:704:1, line:731:1>
|   |-CallExpr 0x559b9ecef2e8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecef2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecef278 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecef360 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559b9ecef308 <col:3> 'int' lvalue Var 0x559b9eceef50 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x559b9ecef348 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b9ecef328 <col:15> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
|   |-BinaryOperator 0x559b9ecef3c0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559b9ecef380 <col:3> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x559b9ecef3a0 <col:15> 'int' 1
|   |-BinaryOperator 0x559b9ecef438 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecef3e0 <col:3> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecef420 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b9ecef400 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b9ecef4d0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecef458 <col:3> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559b9ecef4a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559b9ecef478 <col:27> 'int' 1
|   |-CallExpr 0x559b9ecef658 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559b9ecef640 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559b9ecef4f0 <col:3> 'void (int)' Function 0x559b9ec94bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559b9ecef5f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559b9ecef5d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559b9ecef5b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559b9ecef568 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559b9ecef550 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559b9ecef510 <col:23> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559b9ecef598 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559b9ecef580 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559b9ecef530 <col:41> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b9ecef6d8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecef680 <col:3> '_Bool' lvalue Var 0x559b9eceeb78 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecef6c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b9ecef6a0 <col:20> '_Bool' lvalue Var 0x559b9ecee940 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559b9ecef750 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecef6f8 <col:3> '_Bool' lvalue Var 0x559b9eceebf0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecef738 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b9ecef718 <col:20> '_Bool' lvalue Var 0x559b9ecee9b8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559b9ecef7c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecef770 <col:3> '_Bool' lvalue Var 0x559b9eceec68 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecef7b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b9ecef790 <col:20> '_Bool' lvalue Var 0x559b9eceea30 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559b9ecef840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecef7e8 <col:3> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecef828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b9ecef808 <col:20> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559b9ecef8d8 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecef860 <col:3> '_Bool' lvalue Var 0x559b9ecee9b8 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x559b9ecef8b0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559b9ecef880 <col:27> 'int' 1
|   |-CallExpr 0x559b9ecef930 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecef918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecef8f8 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b9ecef988 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecef970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecef950 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecef9e8 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559b9ecef9a8 <col:3> 'int' lvalue Var 0x559b9ecee570 'x' 'int'
|   | `-IntegerLiteral 0x559b9ecef9c8 <col:7> 'int' 1
|   |-CallExpr 0x559b9ecefa40 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecefa28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecefa08 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b9ecefa98 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecefa80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecefa60 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecefd98 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559b9ecefab8 <col:3> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   | `-ConditionalOperator 0x559b9ecefd68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559b9ecefb90 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559b9ecefb48 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559b9ecefb30 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559b9ecefad8 <col:7> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559b9ecefb78 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559b9ecefb60 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559b9ecefb10 <col:25> '_Bool' lvalue Var 0x559b9ecee9b8 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559b9ecefd50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b9ecefbb0 <col:42> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x559b9ecefd30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559b9ecefd00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559b9ecefc70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b9ecefc28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b9ecefc10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b9ecefbd0 <col:55> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b9ecefc58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b9ecefc40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b9ecefbf0 <col:73> '_Bool' lvalue Var 0x559b9eceebf0 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559b9ecefcd0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b9ecefc90 <col:90> 'int' lvalue Var 0x559b9eceef50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559b9ecefce8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecefcb0 <col:102> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   |-BinaryOperator 0x559b9eceffa0 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecefdb8 <col:3> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b9eceff88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9eceff58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b9ecefe78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b9ecefe30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b9ecefe18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b9ecefdd8 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b9ecefe60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b9ecefe48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b9ecefdf8 <col:38> '_Bool' lvalue Var 0x559b9ecee9b8 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9eceff10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecefec8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecefe98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9eceff40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9eceff28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecefef0 <col:66> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b9ecf0288 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b9eceffc0 <col:3> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf0270 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf0240 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b9ecf0160 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b9ecf0080 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b9ecf0038 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b9ecf0020 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b9eceffe0 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b9ecf0068 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b9ecf0050 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b9ecf0000 <col:38> '_Bool' lvalue Var 0x559b9ecee9b8 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559b9ecf0140 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b9ecf00f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b9ecf00e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b9ecf00a0 <col:56> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b9ecf0128 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b9ecf0110 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b9ecf00c0 <col:74> '_Bool' lvalue Var 0x559b9eceebf0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf01f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecf01b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecf0180 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9ecf0228 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9ecf0210 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf01d8 <col:102> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559b9ecf0490 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf02a8 <col:3> '_Bool' lvalue Var 0x559b9ecee9b8 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf0478 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf0448 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b9ecf0368 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b9ecf0320 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b9ecf0308 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b9ecf02c8 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b9ecf0350 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b9ecf0338 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b9ecf02e8 <col:38> '_Bool' lvalue Var 0x559b9ecee9b8 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf0400 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecf03b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecf0388 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9ecf0430 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9ecf0418 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf03e0 <col:66> '_Bool' lvalue Var 0x559b9ecee9b8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559b9ecf0778 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf04b0 <col:3> '_Bool' lvalue Var 0x559b9eceebf0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf0760 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf0730 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b9ecf0650 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b9ecf0570 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b9ecf0528 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b9ecf0510 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b9ecf04d0 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b9ecf0558 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b9ecf0540 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b9ecf04f0 <col:38> '_Bool' lvalue Var 0x559b9ecee9b8 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559b9ecf0630 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b9ecf05e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b9ecf05d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b9ecf0590 <col:56> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b9ecf0618 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b9ecf0600 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b9ecf05b0 <col:74> '_Bool' lvalue Var 0x559b9eceebf0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf06e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecf06a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecf0670 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9ecf0718 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9ecf0700 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf06c8 <col:102> '_Bool' lvalue Var 0x559b9eceebf0 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559b9ecf07d0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf07b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf0798 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b9ecf0828 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf0810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf07f0 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecf08e0 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf0848 <col:3> 'int' lvalue Var 0x559b9ecee120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559b9ecf08c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559b9ecf08a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b9ecf0868 <col:22> 'int' lvalue Var 0x559b9ecee120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559b9ecf0888 <col:41> 'int' 1
|   |-CallExpr 0x559b9ecf0938 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf0920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf0900 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559b9ecf09e8 <line:730:3, col:36>
|     `-CallExpr 0x559b9ecf09c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559b9ecf09b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559b9ecf0958 <col:10> 'void *(void)' Function 0x559b9ec94958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559b9ecf0bb8 prev 0x559b9ecedc48 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559b9ecf0b20 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559b9ecf1dd8 <line:733:1, line:751:1>
|   |-CallExpr 0x559b9ecf0c98 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf0c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf0c60 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecf0cf8 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf0cb8 <col:3> 'int' lvalue Var 0x559b9ecee570 'x' 'int'
|   | `-IntegerLiteral 0x559b9ecf0cd8 <col:7> 'int' 2
|   |-CallExpr 0x559b9ecf0d50 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf0d38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf0d18 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b9ecf0da8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf0d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf0d70 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecf0e08 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf0dc8 <col:3> 'int' lvalue Var 0x559b9ecee690 'y' 'int'
|   | `-IntegerLiteral 0x559b9ecf0de8 <col:7> 'int' 1
|   |-CallExpr 0x559b9ecf0e60 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf0e48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf0e28 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b9ecf0eb8 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf0ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf0e80 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecf11a0 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf0ed8 <col:3> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   | `-ConditionalOperator 0x559b9ecf1170 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559b9ecf0f98 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559b9ecf0f50 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559b9ecf0f38 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559b9ecf0ef8 <col:7> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559b9ecf0f80 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559b9ecf0f68 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559b9ecf0f18 <col:25> '_Bool' lvalue Var 0x559b9eceea30 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559b9ecf1158 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b9ecf0fb8 <col:42> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x559b9ecf1138 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559b9ecf1108 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559b9ecf1078 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b9ecf1030 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b9ecf1018 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b9ecf0fd8 <col:55> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b9ecf1060 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b9ecf1048 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b9ecf0ff8 <col:73> '_Bool' lvalue Var 0x559b9eceec68 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559b9ecf10d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b9ecf1098 <col:90> 'int' lvalue Var 0x559b9eceef50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559b9ecf10f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf10b8 <col:102> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   |-BinaryOperator 0x559b9ecf13a8 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf11c0 <col:3> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf1390 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf1360 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b9ecf1280 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b9ecf1238 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b9ecf1220 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b9ecf11e0 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b9ecf1268 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b9ecf1250 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b9ecf1200 <col:38> '_Bool' lvalue Var 0x559b9eceea30 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf1318 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecf12d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecf12a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9ecf1348 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9ecf1330 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf12f8 <col:66> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b9ecf1690 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf13c8 <col:3> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf1678 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf1648 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b9ecf1568 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b9ecf1488 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b9ecf1440 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b9ecf1428 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b9ecf13e8 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b9ecf1470 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b9ecf1458 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b9ecf1408 <col:38> '_Bool' lvalue Var 0x559b9eceea30 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559b9ecf1548 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b9ecf1500 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b9ecf14e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b9ecf14a8 <col:56> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b9ecf1530 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b9ecf1518 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b9ecf14c8 <col:74> '_Bool' lvalue Var 0x559b9eceec68 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf1600 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecf15b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecf1588 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9ecf1630 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9ecf1618 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf15e0 <col:102> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559b9ecf1898 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf16b0 <col:3> '_Bool' lvalue Var 0x559b9eceea30 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf1880 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf1850 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b9ecf1770 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b9ecf1728 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b9ecf1710 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b9ecf16d0 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b9ecf1758 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b9ecf1740 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b9ecf16f0 <col:38> '_Bool' lvalue Var 0x559b9eceea30 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf1808 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecf17c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecf1790 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9ecf1838 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9ecf1820 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf17e8 <col:66> '_Bool' lvalue Var 0x559b9eceea30 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559b9ecf1b90 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf18b8 <col:3> '_Bool' lvalue Var 0x559b9eceec68 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf1b78 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf1b48 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b9ecf1a58 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b9ecf1978 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b9ecf1930 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b9ecf1918 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b9ecf18d8 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b9ecf1960 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b9ecf1948 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b9ecf18f8 <col:38> '_Bool' lvalue Var 0x559b9eceea30 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559b9ecf1a38 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b9ecf19f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b9ecf19d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b9ecf1998 <col:56> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b9ecf1a20 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b9ecf1a08 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b9ecf19b8 <col:74> '_Bool' lvalue Var 0x559b9eceec68 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf1af0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecf1aa8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecf1a78 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9ecf1b30 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9ecf1b08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf1ad0 <col:102> '_Bool' lvalue Var 0x559b9eceec68 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x559b9ecf1be8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf1bd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf1bb0 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b9ecf1c40 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf1c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf1c08 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecf1cf8 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf1c60 <col:3> 'int' lvalue Var 0x559b9ecee120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559b9ecf1cd8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559b9ecf1cc0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b9ecf1c80 <col:22> 'int' lvalue Var 0x559b9ecee120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559b9ecf1ca0 <col:41> 'int' 1
|   |-CallExpr 0x559b9ecf1d50 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf1d38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf1d18 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559b9ecf1dc8 <line:750:3, col:36>
|     `-CallExpr 0x559b9ecf1da8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559b9ecf1d90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559b9ecf1d70 <col:10> 'void *(void)' Function 0x559b9ec94958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559b9ecf1f20 prev 0x559b9ecedda0 <line:752:1, line:784:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x559b9ecf1e88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559b9ecf5b70 <line:753:1, line:784:1>
|   |-CallExpr 0x559b9ecf2000 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf1fe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf1fc8 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecf2078 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf2020 <col:3> 'int' lvalue Var 0x559b9ecee240 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x559b9ecf2060 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b9ecf2040 <col:25> 'int' lvalue Var 0x559b9ecee690 'y' 'int'
|   |-CallExpr 0x559b9ecf20d0 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf20b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf2098 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b9ecf2128 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf2110 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf20f0 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecf21d8 <line:758:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf2148 <col:3> '_Bool' lvalue Var 0x559b9ecef040 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf21c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559b9ecf21a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559b9ecf2188 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559b9ecf2168 <col:19> 'void *(void)' Function 0x559b9ec94958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559b9ecf2288 <line:759:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf21f8 <col:3> '_Bool' lvalue Var 0x559b9ecef0b8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf2270 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559b9ecf2250 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559b9ecf2238 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559b9ecf2218 <col:19> 'void *(void)' Function 0x559b9ec94958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559b9ecf2300 <line:760:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf22a8 <col:3> '_Bool' lvalue Var 0x559b9ecee848 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf22e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b9ecf22c8 <col:21> '_Bool' lvalue Var 0x559b9ecef0b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559b9ecf2378 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf2320 <col:3> 'int' lvalue Var 0x559b9ecee8c8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559b9ecf2360 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b9ecf2340 <col:15> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   |-BinaryOperator 0x559b9ecf27b0 <line:762:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf2398 <col:3> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   | `-ConditionalOperator 0x559b9ecf2780 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559b9ecf25a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559b9ecf24c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559b9ecf23f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559b9ecf23d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559b9ecf23b8 <col:8> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559b9ecf24a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559b9ecf2440 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559b9ecf2428 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559b9ecf2408 <col:27> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x559b9ecf2490 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559b9ecf2478 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559b9ecf2458 <col:46> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559b9ecf2588 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559b9ecf2520 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559b9ecf2508 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559b9ecf24e8 <col:65> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x559b9ecf2570 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559b9ecf2558 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559b9ecf2538 <col:84> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559b9ecf2768 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b9ecf25c8 <col:101> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   |   `-ParenExpr 0x559b9ecf2748 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559b9ecf2718 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559b9ecf2688 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b9ecf2640 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b9ecf2628 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b9ecf25e8 <col:106> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b9ecf2670 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b9ecf2658 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b9ecf2608 <col:124> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559b9ecf26e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b9ecf26a8 <col:141> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559b9ecf2700 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf26c8 <col:153> 'int' lvalue Var 0x559b9eceef50 'z$w_buff1' 'int'
|   |-BinaryOperator 0x559b9ecf2ce0 <line:763:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf27d0 <col:3> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x559b9ecf2cb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559b9ecf2c80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559b9ecf2c68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559b9ecf27f0 <col:15> '_Bool' lvalue Var 0x559b9ecef0b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559b9ecf2c98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b9ecf2810 <col:31> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x559b9ecf2c48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559b9ecf2c18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559b9ecf2a20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559b9ecf2940 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559b9ecf2868 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559b9ecf2850 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559b9ecf2830 <col:45> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559b9ecf2920 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559b9ecf28b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559b9ecf28a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559b9ecf2880 <col:64> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x559b9ecf2908 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559b9ecf28f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559b9ecf28d0 <col:83> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559b9ecf2a00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559b9ecf2998 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559b9ecf2980 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559b9ecf2960 <col:102> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x559b9ecf29e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559b9ecf29d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559b9ecf29b0 <col:121> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559b9ecf2c00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b9ecf2a40 <col:138> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x559b9ecf2be0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559b9ecf2bb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559b9ecf2b00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559b9ecf2ab8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559b9ecf2aa0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559b9ecf2a60 <col:151> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559b9ecf2ae8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559b9ecf2ad0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559b9ecf2a80 <col:169> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x559b9ecf2b80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559b9ecf2b40 <col:186> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559b9ecf2b98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559b9ecf2b60 <col:198> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
|   |-BinaryOperator 0x559b9ecf31f0 <line:764:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf2d00 <col:3> 'int' lvalue Var 0x559b9eceef50 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x559b9ecf31c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559b9ecf3190 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559b9ecf3178 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559b9ecf2d20 <col:15> '_Bool' lvalue Var 0x559b9ecef0b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559b9ecf31a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b9ecf2d40 <col:31> 'int' lvalue Var 0x559b9eceef50 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x559b9ecf3158 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559b9ecf3128 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559b9ecf2f50 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559b9ecf2e70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559b9ecf2d98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559b9ecf2d80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559b9ecf2d60 <col:45> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559b9ecf2e50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559b9ecf2de8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559b9ecf2dd0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559b9ecf2db0 <col:64> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x559b9ecf2e38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559b9ecf2e20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559b9ecf2e00 <col:83> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559b9ecf2f30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559b9ecf2ec8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559b9ecf2eb0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559b9ecf2e90 <col:102> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x559b9ecf2f18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559b9ecf2f00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559b9ecf2ee0 <col:121> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559b9ecf3110 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b9ecf2f70 <col:138> 'int' lvalue Var 0x559b9eceef50 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x559b9ecf30f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559b9ecf30c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559b9ecf3030 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559b9ecf2fe8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559b9ecf2fd0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559b9ecf2f90 <col:151> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559b9ecf3018 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559b9ecf3000 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559b9ecf2fb0 <col:169> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x559b9ecf3090 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559b9ecf3050 <col:186> 'int' lvalue Var 0x559b9eceef50 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559b9ecf30a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559b9ecf3070 <col:198> 'int' lvalue Var 0x559b9eceef50 'z$w_buff1' 'int'
|   |-BinaryOperator 0x559b9ecf3798 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf3210 <col:3> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf3780 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf3750 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559b9ecf3708 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b9ecf36f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b9ecf3230 <col:20> '_Bool' lvalue Var 0x559b9ecef0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf3738 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b9ecf3720 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b9ecf3250 <col:36> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559b9ecf36d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559b9ecf36a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559b9ecf3460 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b9ecf3380 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b9ecf32a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b9ecf3290 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b9ecf3270 <col:55> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b9ecf3360 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b9ecf32f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b9ecf32e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b9ecf32c0 <col:74> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559b9ecf3348 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b9ecf3330 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b9ecf3310 <col:93> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b9ecf3440 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b9ecf33d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b9ecf33c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b9ecf33a0 <col:112> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559b9ecf3428 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b9ecf3410 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b9ecf33f0 <col:131> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559b9ecf3688 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b9ecf3670 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b9ecf3480 <col:148> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559b9ecf3650 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559b9ecf3620 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559b9ecf3540 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b9ecf34f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b9ecf34e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b9ecf34a0 <col:166> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b9ecf3528 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b9ecf3510 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b9ecf34c0 <col:184> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559b9ecf35d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b9ecf3590 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b9ecf3560 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b9ecf3608 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559b9ecf35f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559b9ecf35b8 <col:212> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b9ecf3d78 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf37b8 <col:3> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf3d60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf3d30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559b9ecf3ce8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b9ecf3cd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b9ecf37d8 <col:20> '_Bool' lvalue Var 0x559b9ecef0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf3d18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b9ecf3d00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b9ecf37f8 <col:36> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559b9ecf3cb0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559b9ecf3c80 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559b9ecf3a08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b9ecf3928 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b9ecf3850 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b9ecf3838 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b9ecf3818 <col:55> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b9ecf3908 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b9ecf38a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b9ecf3888 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b9ecf3868 <col:74> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559b9ecf38f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b9ecf38d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b9ecf38b8 <col:93> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b9ecf39e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b9ecf3980 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b9ecf3968 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b9ecf3948 <col:112> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559b9ecf39d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b9ecf39b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b9ecf3998 <col:131> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559b9ecf3c68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b9ecf3c50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b9ecf3a28 <col:148> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559b9ecf3c30 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559b9ecf3c00 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559b9ecf3ae8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b9ecf3aa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b9ecf3a88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b9ecf3a48 <col:166> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b9ecf3ad0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b9ecf3ab8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b9ecf3a68 <col:184> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559b9ecf3bd0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b9ecf3b50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b9ecf3b08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b9ecf3be8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559b9ecf3ba8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559b9ecf3b78 <col:219> 'int' 0
|   |-BinaryOperator 0x559b9ecf4320 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf3d98 <col:3> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf4308 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf42d8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559b9ecf4290 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b9ecf4278 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b9ecf3db8 <col:20> '_Bool' lvalue Var 0x559b9ecef0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf42c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b9ecf42a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b9ecf3dd8 <col:36> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x559b9ecf4258 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559b9ecf4228 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559b9ecf3fe8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b9ecf3f08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b9ecf3e30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b9ecf3e18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b9ecf3df8 <col:55> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b9ecf3ee8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b9ecf3e80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b9ecf3e68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b9ecf3e48 <col:74> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559b9ecf3ed0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b9ecf3eb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b9ecf3e98 <col:93> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b9ecf3fc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b9ecf3f60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b9ecf3f48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b9ecf3f28 <col:112> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559b9ecf3fb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b9ecf3f98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b9ecf3f78 <col:131> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559b9ecf4210 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b9ecf41f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b9ecf4008 <col:148> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x559b9ecf41d8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559b9ecf41a8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559b9ecf40c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b9ecf4080 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b9ecf4068 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b9ecf4028 <col:166> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b9ecf40b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b9ecf4098 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b9ecf4048 <col:184> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559b9ecf4160 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b9ecf4118 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b9ecf40e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b9ecf4190 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559b9ecf4178 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559b9ecf4140 <col:212> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559b9ecf48e8 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf4340 <col:3> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf48d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf48a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559b9ecf4858 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b9ecf4840 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b9ecf4360 <col:20> '_Bool' lvalue Var 0x559b9ecef0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf4888 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b9ecf4870 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b9ecf4380 <col:36> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x559b9ecf4820 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559b9ecf47f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559b9ecf4590 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b9ecf44b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b9ecf43d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b9ecf43c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b9ecf43a0 <col:55> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b9ecf4490 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b9ecf4428 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b9ecf4410 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b9ecf43f0 <col:74> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559b9ecf4478 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b9ecf4460 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b9ecf4440 <col:93> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b9ecf4570 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b9ecf4508 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b9ecf44f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b9ecf44d0 <col:112> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559b9ecf4558 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b9ecf4540 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b9ecf4520 <col:131> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559b9ecf47d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b9ecf47c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b9ecf45b0 <col:148> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x559b9ecf47a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559b9ecf4770 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559b9ecf4670 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b9ecf4628 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b9ecf4610 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b9ecf45d0 <col:166> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b9ecf4658 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b9ecf4640 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b9ecf45f0 <col:184> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559b9ecf4740 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b9ecf46c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b9ecf4690 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b9ecf4758 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559b9ecf4718 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559b9ecf46e8 <col:219> 'int' 0
|   |-BinaryOperator 0x559b9ecf4960 <line:769:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf4908 <col:3> 'int' lvalue Var 0x559b9ecee360 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x559b9ecf4948 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b9ecf4928 <col:25> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   |-BinaryOperator 0x559b9ecf4a90 <line:770:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf4980 <col:3> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   | `-ConditionalOperator 0x559b9ecf4a60 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559b9ecf4a18 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559b9ecf4a00 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559b9ecf49a0 <col:7> '_Bool' lvalue Var 0x559b9ecee848 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559b9ecf4a30 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b9ecf49c0 <col:25> 'int' lvalue Var 0x559b9ecee8c8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559b9ecf4a48 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559b9ecf49e0 <col:37> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   |-BinaryOperator 0x559b9ecf4b28 <line:771:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf4ab0 <col:3> '_Bool' lvalue Var 0x559b9ecee848 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559b9ecf4b00 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559b9ecf4ad0 <col:28> 'int' 0
|   |-CallExpr 0x559b9ecf4b98 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf4b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf4b60 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b9ecf4bf0 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf4bd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf4bb8 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecf4ed8 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf4c10 <col:3> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   | `-ConditionalOperator 0x559b9ecf4ea8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559b9ecf4cd0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559b9ecf4c88 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559b9ecf4c70 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559b9ecf4c30 <col:7> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559b9ecf4cb8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559b9ecf4ca0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559b9ecf4c50 <col:25> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559b9ecf4e90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b9ecf4cf0 <col:42> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x559b9ecf4e70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559b9ecf4e40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559b9ecf4db0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b9ecf4d68 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b9ecf4d50 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b9ecf4d10 <col:55> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b9ecf4d98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b9ecf4d80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b9ecf4d30 <col:73> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559b9ecf4e10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b9ecf4dd0 <col:90> 'int' lvalue Var 0x559b9eceef50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559b9ecf4e28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf4df0 <col:102> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
|   |-BinaryOperator 0x559b9ecf50e0 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf4ef8 <col:3> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf50c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf5098 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b9ecf4fb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b9ecf4f70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b9ecf4f58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b9ecf4f18 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b9ecf4fa0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b9ecf4f88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b9ecf4f38 <col:38> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf5050 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecf5008 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecf4fd8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9ecf5080 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9ecf5068 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf5030 <col:66> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b9ecf53c8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf5100 <col:3> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf53b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf5380 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b9ecf52a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b9ecf51c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b9ecf5178 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b9ecf5160 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b9ecf5120 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b9ecf51a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b9ecf5190 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b9ecf5140 <col:38> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559b9ecf5280 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b9ecf5238 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b9ecf5220 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b9ecf51e0 <col:56> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b9ecf5268 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b9ecf5250 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b9ecf5200 <col:74> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf5338 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecf52f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecf52c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9ecf5368 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9ecf5350 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf5318 <col:102> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559b9ecf55d0 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf53e8 <col:3> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf55b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf5588 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b9ecf54a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b9ecf5460 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b9ecf5448 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b9ecf5408 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b9ecf5490 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b9ecf5478 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b9ecf5428 <col:38> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf5540 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecf54f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecf54c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9ecf5570 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9ecf5558 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf5520 <col:66> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559b9ecf58b8 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b9ecf55f0 <col:3> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559b9ecf58a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b9ecf5870 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b9ecf5790 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b9ecf56b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b9ecf5668 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b9ecf5650 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b9ecf5610 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b9ecf5698 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b9ecf5680 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b9ecf5630 <col:38> '_Bool' lvalue Var 0x559b9eceeb00 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559b9ecf5770 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b9ecf5728 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b9ecf5710 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b9ecf56d0 <col:56> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b9ecf5758 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b9ecf5740 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b9ecf56f0 <col:74> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559b9ecf5828 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b9ecf57e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b9ecf57b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b9ecf5858 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b9ecf5840 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b9ecf5808 <col:102> '_Bool' lvalue Var 0x559b9eceece0 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x559b9ecf5910 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf58f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf58d8 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b9ecf5968 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf5950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf5930 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b9ecf5a20 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559b9ecf5988 <col:3> 'int' lvalue Var 0x559b9ecee120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559b9ecf5a00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559b9ecf59e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b9ecf59a8 <col:22> 'int' lvalue Var 0x559b9ecee120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559b9ecf59c8 <col:41> 'int' 1
|   |-CallExpr 0x559b9ecf5a78 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b9ecf5a60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b9ecf5a40 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559b9ecf5af0 <line:783:3, col:36>
|     `-CallExpr 0x559b9ecf5ad0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559b9ecf5ab8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559b9ecf5a98 <col:10> 'void *(void)' Function 0x559b9ec94958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559b9ecf5c90 prev 0x559b9ecede68 <line:785:1, line:787:1> line:785:6 fence 'void ()'
| `-CompoundStmt 0x559b9ecf5d30 <line:786:1, line:787:1>
|-FunctionDecl 0x559b9ecf5d60 prev 0x559b9ecedf28 <line:788:1, line:790:1> line:788:6 isync 'void ()'
| `-CompoundStmt 0x559b9ecf5e00 <line:789:1, line:790:1>
|-FunctionDecl 0x559b9ecf5e30 prev 0x559b9ecedfe8 <line:791:1, line:793:1> line:791:6 lwfence 'void ()'
| `-CompoundStmt 0x559b9ecf5ed0 <line:792:1, line:793:1>
`-FunctionDecl 0x559b9ecf5f38 <line:794:1, line:818:1> line:794:5 main 'int ()'
  `-CompoundStmt 0x559b9ecf7b90 <line:795:1, line:818:1>
    |-DeclStmt 0x559b9ecf6050 <line:796:3, col:18>
    | `-VarDecl 0x559b9ecf5fe8 <col:3, col:13> col:13 used t2283 'pthread_t':'unsigned long'
    |-CallExpr 0x559b9ecf6258 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559b9ecf6240 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b9ecf6068 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559b9ecd5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559b9ecf60a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559b9ecf6088 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559b9ecf5fe8 't2283' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559b9ecf6298 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559b9ecf6120 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559b9ecf60f8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559b9ecf60c0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559b9ecf62b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b9ecf6140 <col:39> 'void *(void *)' Function 0x559b9ecef1d0 'P0' 'void *(void *)'
    | `-ParenExpr 0x559b9ecf61c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559b9ecf6198 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559b9ecf6160 <col:52> 'int' 0
    |-DeclStmt 0x559b9ecf6340 <line:798:3, col:18>
    | `-VarDecl 0x559b9ecf62d8 <col:3, col:13> col:13 used t2284 'pthread_t':'unsigned long'
    |-CallExpr 0x559b9ecf64e8 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559b9ecf64d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b9ecf6358 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559b9ecd5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559b9ecf6398 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559b9ecf6378 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559b9ecf62d8 't2284' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559b9ecf6528 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559b9ecf6410 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559b9ecf63e8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559b9ecf63b0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559b9ecf6540 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b9ecf6430 <col:39> 'void *(void *)' Function 0x559b9ecf0bb8 'P1' 'void *(void *)'
    | `-ParenExpr 0x559b9ecf64b0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559b9ecf6488 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559b9ecf6450 <col:52> 'int' 0
    |-DeclStmt 0x559b9ecf65d0 <line:800:3, col:18>
    | `-VarDecl 0x559b9ecf6568 <col:3, col:13> col:13 used t2285 'pthread_t':'unsigned long'
    |-CallExpr 0x559b9ecf6778 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559b9ecf6760 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b9ecf65e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559b9ecd5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559b9ecf6628 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559b9ecf6608 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559b9ecf6568 't2285' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559b9ecf67b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559b9ecf66a0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559b9ecf6678 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559b9ecf6640 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559b9ecf67d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b9ecf66c0 <col:39> 'void *(void *)' Function 0x559b9ecf1f20 'P2' 'void *(void *)'
    | `-ParenExpr 0x559b9ecf6740 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559b9ecf6718 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559b9ecf66e0 <col:52> 'int' 0
    |-CallExpr 0x559b9ecf6820 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559b9ecf6808 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b9ecf67e8 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559b9ecf68f0 <line:803:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559b9ecf6840 <col:3> '_Bool' lvalue Var 0x559b9ecee3f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559b9ecf68d8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559b9ecf68b8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559b9ecf68a0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559b9ecf6860 <col:21> 'int' lvalue Var 0x559b9ecee120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559b9ecf6880 <col:41> 'int' 3
    |-CallExpr 0x559b9ecf6948 <line:804:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559b9ecf6930 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b9ecf6910 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559b9ecf69c0 <line:805:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559b9ecf69a8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b9ecf6968 <col:3> 'void (int)' Function 0x559b9ec94790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559b9ecf6a00 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559b9ecf69e8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559b9ecf6988 <col:21> '_Bool' lvalue Var 0x559b9ecee3f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559b9ecf6a50 <line:806:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559b9ecf6a38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b9ecf6a18 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559b9ecf6d48 <line:807:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559b9ecf6a70 <col:3> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
    | `-ConditionalOperator 0x559b9ecf6d18 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559b9ecf6b30 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559b9ecf6ae8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559b9ecf6ad0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559b9ecf6a90 <col:7> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559b9ecf6b18 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559b9ecf6b00 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559b9ecf6ab0 <col:25> '_Bool' lvalue Var 0x559b9ecee940 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559b9ecf6d00 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559b9ecf6b50 <col:42> 'int' lvalue Var 0x559b9eceee58 'z$w_buff0' 'int'
    |   `-ParenExpr 0x559b9ecf6ce0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559b9ecf6cb0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559b9ecf6c20 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559b9ecf6bd8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559b9ecf6bc0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559b9ecf6b80 <col:55> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559b9ecf6c08 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559b9ecf6bf0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559b9ecf6ba0 <col:73> '_Bool' lvalue Var 0x559b9eceeb78 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559b9ecf6c80 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559b9ecf6c40 <col:90> 'int' lvalue Var 0x559b9eceef50 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559b9ecf6c98 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559b9ecf6c60 <col:102> 'int' lvalue Var 0x559b9ecee7b0 'z' 'int'
    |-BinaryOperator 0x559b9ecf6f50 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559b9ecf6d68 <col:3> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559b9ecf6f38 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b9ecf6f08 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559b9ecf6e28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559b9ecf6de0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559b9ecf6dc8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559b9ecf6d88 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559b9ecf6e10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559b9ecf6df8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559b9ecf6da8 <col:38> '_Bool' lvalue Var 0x559b9ecee940 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b9ecf6ec0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b9ecf6e78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b9ecf6e48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559b9ecf6ef0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b9ecf6ed8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b9ecf6ea0 <col:66> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559b9ecf7238 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559b9ecf6f70 <col:3> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559b9ecf7220 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b9ecf71f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559b9ecf7110 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559b9ecf7030 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559b9ecf6fe8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559b9ecf6fd0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559b9ecf6f90 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559b9ecf7018 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559b9ecf7000 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559b9ecf6fb0 <col:38> '_Bool' lvalue Var 0x559b9ecee940 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559b9ecf70f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559b9ecf70a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559b9ecf7090 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559b9ecf7050 <col:56> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559b9ecf70d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559b9ecf70c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559b9ecf7070 <col:74> '_Bool' lvalue Var 0x559b9eceeb78 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b9ecf71a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b9ecf7160 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b9ecf7130 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559b9ecf71d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b9ecf71c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b9ecf7188 <col:102> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559b9ecf7440 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559b9ecf7258 <col:3> '_Bool' lvalue Var 0x559b9ecee940 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559b9ecf7428 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b9ecf73f8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559b9ecf7318 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559b9ecf72d0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559b9ecf72b8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559b9ecf7278 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559b9ecf7300 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559b9ecf72e8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559b9ecf7298 <col:38> '_Bool' lvalue Var 0x559b9ecee940 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b9ecf73b0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b9ecf7368 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b9ecf7338 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559b9ecf73e0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b9ecf73c8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b9ecf7390 <col:66> '_Bool' lvalue Var 0x559b9ecee940 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559b9ecf7728 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559b9ecf7460 <col:3> '_Bool' lvalue Var 0x559b9eceeb78 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559b9ecf7710 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b9ecf76e0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559b9ecf7600 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559b9ecf7520 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559b9ecf74d8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559b9ecf74c0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559b9ecf7480 <col:20> '_Bool' lvalue Var 0x559b9eceeed0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559b9ecf7508 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559b9ecf74f0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559b9ecf74a0 <col:38> '_Bool' lvalue Var 0x559b9ecee940 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559b9ecf75e0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559b9ecf7598 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559b9ecf7580 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559b9ecf7540 <col:56> '_Bool' lvalue Var 0x559b9eceefc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559b9ecf75c8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559b9ecf75b0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559b9ecf7560 <col:74> '_Bool' lvalue Var 0x559b9eceeb78 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b9ecf7698 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b9ecf7650 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b9ecf7620 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559b9ecf76c8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b9ecf76b0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b9ecf7678 <col:102> '_Bool' lvalue Var 0x559b9eceeb78 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559b9ecf7780 <line:812:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559b9ecf7768 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b9ecf7748 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559b9ecf77d8 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559b9ecf77c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b9ecf77a0 <col:3> 'void ()' Function 0x559b9ec94e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559b9ecf7a10 <line:814:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x559b9ecf77f8 <col:3> '_Bool' lvalue Var 0x559b9ecee470 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559b9ecf79f8 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559b9ecf79e0 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559b9ecf79c0 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x559b9ecf79a0 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x559b9ecf7908 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x559b9ecf7870 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x559b9ecf7858 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x559b9ecf7818 <col:23> 'int' lvalue Var 0x559b9ecee570 'x' 'int'
    |         | | `-IntegerLiteral 0x559b9ecf7838 <col:28> 'int' 2
    |         | `-BinaryOperator 0x559b9ecf78e8 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559b9ecf78d0 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559b9ecf7890 <col:33> 'int' lvalue Var 0x559b9ecee240 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x559b9ecf78b0 <col:56> 'int' 1
    |         `-BinaryOperator 0x559b9ecf7980 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x559b9ecf7968 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559b9ecf7928 <col:61> 'int' lvalue Var 0x559b9ecee360 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x559b9ecf7948 <col:84> 'int' 0
    |-CallExpr 0x559b9ecf7a68 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559b9ecf7a50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b9ecf7a30 <col:3> 'void ()' Function 0x559b9ec94f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559b9ecf7ae0 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559b9ecf7ac8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b9ecf7a88 <col:3> 'void (int)' Function 0x559b9ec94bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559b9ecf7b20 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559b9ecf7b08 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559b9ecf7aa8 <col:21> '_Bool' lvalue Var 0x559b9ecee470 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559b9ecf7b58 <line:817:3, col:10>
      `-IntegerLiteral 0x559b9ecf7b38 <col:10> 'int' 0
