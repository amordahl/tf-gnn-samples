TranslationUnitDecl 0x56231d708e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56231d7096d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56231d7093b0 '__int128'
|-TypedefDecl 0x56231d709748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56231d7093d0 'unsigned __int128'
|-TypedefDecl 0x56231d709a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56231d709820 'struct __NSConstantString_tag'
|   `-Record 0x56231d7097a0 '__NSConstantString_tag'
|-TypedefDecl 0x56231d709af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56231d709ab0 'char *'
|   `-BuiltinType 0x56231d708eb0 'char'
|-TypedefDecl 0x56231d748650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56231d709d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56231d709bd0 'struct __va_list_tag'
|     `-Record 0x56231d709b50 '__va_list_tag'
|-FunctionDecl 0x56231d748790 <./split_5/safe016_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56231d7486c0 <col:31> col:34 'int'
|-FunctionDecl 0x56231d748958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56231d748a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56231d748bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56231d748b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56231d748df8 <col:40, col:99>
|   |-IfStmt 0x56231d748dc8 <col:42, col:88>
|   | |-UnaryOperator 0x56231d748ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56231d748c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56231d748c70 <col:47> 'int' lvalue ParmVar 0x56231d748b38 'expression' 'int'
|   | `-CompoundStmt 0x56231d748db0 <col:59, col:88>
|   |   `-LabelStmt 0x56231d748d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56231d748d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56231d748d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56231d748cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x56231d748a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56231d748de0 <col:89>
|   `-ReturnStmt 0x56231d748de8 <col:91>
|-FunctionDecl 0x56231d748e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56231d748f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56231d749280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56231d748fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56231d749038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56231d7490b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56231d749138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56231d749340 <line:10:22>
|-FunctionDecl 0x56231d76f390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56231d7493b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56231d749430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56231d7494b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56231d749530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56231d76f450 <line:13:22>
|-FunctionDecl 0x56231d76f700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56231d76f4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56231d76f540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56231d76f5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56231d76f7b8 <line:15:22>
|-TypedefDecl 0x56231d76f828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56231d708f70 'unsigned char'
|-TypedefDecl 0x56231d76f898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56231d708f90 'unsigned short'
|-TypedefDecl 0x56231d76f908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56231d708fb0 'unsigned int'
|-TypedefDecl 0x56231d76f978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d76f9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56231d708ed0 'signed char'
|-TypedefDecl 0x56231d76fa58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56231d708f70 'unsigned char'
|-TypedefDecl 0x56231d76fac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56231d708ef0 'short'
|-TypedefDecl 0x56231d76fb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56231d708f90 'unsigned short'
|-TypedefDecl 0x56231d76fba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56231d708f10 'int'
|-TypedefDecl 0x56231d76fc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56231d708fb0 'unsigned int'
|-TypedefDecl 0x56231d76fc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d76fcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d76fd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d76fdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d76fe48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d76feb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56231d708fb0 'unsigned int'
|-TypedefDecl 0x56231d76ff28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56231d708fb0 'unsigned int'
|-TypedefDecl 0x56231d76ff98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d770008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d770078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56231d708fb0 'unsigned int'
|-TypedefDecl 0x56231d7700e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d770158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d7701c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d770238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56231d708f10 'int'
|-RecordDecl 0x56231d770290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56231d770408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56231d7704c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56231d770460 'struct __fsid_t' sugar
|   `-RecordType 0x56231d770310 '__fsid_t'
|     `-Record 0x56231d770290 ''
|-TypedefDecl 0x56231d770548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d7705b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d770628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d770698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56231d708fb0 'unsigned int'
|-TypedefDecl 0x56231d770708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d770778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56231d708fb0 'unsigned int'
|-TypedefDecl 0x56231d7707e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d770858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56231d708f10 'int'
|-TypedefDecl 0x56231d7708c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56231d708f10 'int'
|-TypedefDecl 0x56231d770938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56231d708f10 'int'
|-TypedefDecl 0x56231d7709a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56231d709630 'void *'
|   `-BuiltinType 0x56231d708e70 'void'
|-TypedefDecl 0x56231d770a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d770a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d770af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d770b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d770bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d770c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d770cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d770d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d770d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d770e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d770e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d770f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56231d770ed0 '__off64_t' sugar
|   |-Typedef 0x56231d7701c8 '__off64_t'
|   `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d771000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56231d770fc0 '__quad_t *'
|   `-TypedefType 0x56231d770f60 '__quad_t' sugar
|     |-Typedef 0x56231d76fd68 '__quad_t'
|     `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d771070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56231d709ab0 'char *'
|   `-BuiltinType 0x56231d708eb0 'char'
|-TypedefDecl 0x56231d7710e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d771150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56231d708fb0 'unsigned int'
|-FunctionDecl 0x56231d771298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56231d7711c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56231d7725e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56231d7725d8 <line:72:3, col:34>
|     `-CallExpr 0x56231d772598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56231d772580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56231d772510 <col:10> '<builtin fn type>' Function 0x56231d772380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56231d7725c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56231d772530 <col:29> 'unsigned int' lvalue ParmVar 0x56231d7711c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56231d772380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56231d772420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56231d772490 <col:10> Implicit
| `-ConstAttr 0x56231d7724e8 <col:10> Implicit
|-FunctionDecl 0x56231d772740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56231d772638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56231d772a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56231d772a48 <line:77:3, col:34>
|     `-CallExpr 0x56231d772a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56231d7729f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56231d772978 <col:10> '<builtin fn type>' Function 0x56231d7727e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56231d772a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56231d772998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56231d772638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56231d7727e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56231d772888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56231d7728f8 <col:10> Implicit
| `-ConstAttr 0x56231d772950 <col:10> Implicit
|-TypedefDecl 0x56231d772a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-TypedefDecl 0x56231d772b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56231d772ae0 '__time_t' sugar
|   |-Typedef 0x56231d770708 '__time_t'
|   `-BuiltinType 0x56231d708f30 'long'
|-RecordDecl 0x56231d772b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56231d772c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56231d772cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56231d772d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56231d772d10 '__pid_t' sugar
|   |-Typedef 0x56231d770238 '__pid_t'
|   `-BuiltinType 0x56231d708f10 'int'
|-RecordDecl 0x56231d772da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56231d772e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56231d772eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56231d772f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56231d772fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-RecordDecl 0x56231d773030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56231d7732c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56231d7743a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56231d773310 'struct cpu_set_t' sugar
|   `-RecordType 0x56231d7730b0 'cpu_set_t'
|     `-Record 0x56231d773030 ''
|-FunctionDecl 0x56231d774678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56231d774448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56231d774550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56231d774728 <line:107:19>
|-FunctionDecl 0x56231d774900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56231d774790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56231d7749a8 <col:69>
|-FunctionDecl 0x56231d774b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56231d774a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56231d774bc8 <col:64>
|-FunctionDecl 0x56231d774e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56231d774c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56231d774d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56231d774f38 <line:113:22>
|-FunctionDecl 0x56231d7751b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56231d774fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56231d775098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56231d775268 <col:88>
|-FunctionDecl 0x56231d775588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56231d7752d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56231d7753b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56231d775440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56231d775640 <col:62>
|-FunctionDecl 0x56231d7757b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56231d7756a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56231d775860 <col:63>
|-FunctionDecl 0x56231d775988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56231d775a28 <col:47>
|-FunctionDecl 0x56231d775b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56231d775a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56231d775bd8 <col:69>
|-FunctionDecl 0x56231d775ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56231d775c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56231d775d88 <col:69>
|-FunctionDecl 0x56231d776048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56231d775df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56231d775f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56231d7760f8 <col:88>
|-TypedefDecl 0x56231d776188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56231d776150 '__clock_t' sugar
|   |-Typedef 0x56231d770548 '__clock_t'
|   `-BuiltinType 0x56231d708f30 'long'
|-TypedefDecl 0x56231d776218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56231d7761e0 '__clockid_t' sugar
|   |-Typedef 0x56231d770938 '__clockid_t'
|   `-BuiltinType 0x56231d708f10 'int'
|-TypedefDecl 0x56231d7762a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56231d776270 '__timer_t' sugar
|   |-Typedef 0x56231d7709a8 '__timer_t'
|   `-PointerType 0x56231d709630 'void *'
|     `-BuiltinType 0x56231d708e70 'void'
|-RecordDecl 0x56231d776300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56231d7763d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56231d776440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56231d7764a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56231d776510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56231d776578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56231d7765e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56231d776648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56231d7766b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56231d776718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56231d776780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56231d7767e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56231d776838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56231d776908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56231d776978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56231d776a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56231d776bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56231d776c90 <col:45>
|-FunctionDecl 0x56231d776e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56231d776d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56231d776f18 <col:54>
|-FunctionDecl 0x56231d777118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56231d776f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56231d776ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56231d7771c8 <line:157:22>
| `-ConstAttr 0x56231d777220 <col:63>
|-FunctionDecl 0x56231d778050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56231d777318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56231d7780f8 <col:56>
|-FunctionDecl 0x56231d7784a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56231d778168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56231d7781e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56231d778260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56231d778358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56231d778560 <col:54>
|-RecordDecl 0x56231d7785b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56231d778668 parent 0x56231d708e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56231d7788c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56231d778968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56231d7789d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56231d778a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56231d778b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56231d778c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56231d778bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x56231d778b80 'struct __locale_struct' sugar
|     `-RecordType 0x56231d778640 'struct __locale_struct'
|       `-Record 0x56231d7785b8 '__locale_struct'
|-TypedefDecl 0x56231d778cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56231d778cc0 '__locale_t' sugar
|   |-Typedef 0x56231d778c48 '__locale_t'
|   `-PointerType 0x56231d778bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x56231d778b80 'struct __locale_struct' sugar
|       `-RecordType 0x56231d778640 'struct __locale_struct'
|         `-Record 0x56231d7785b8 '__locale_struct'
|-FunctionDecl 0x56231d77a110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56231d778d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56231d778de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56231d778e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56231d778ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56231d778f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56231d77a1d8 <col:40>
|-FunctionDecl 0x56231d77a3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56231d77a2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56231d77a470 <col:66>
|-FunctionDecl 0x56231d77a580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56231d77a4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56231d77a628 <col:69>
|-FunctionDecl 0x56231d77a858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56231d77a690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56231d77a720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56231d77a908 <col:52>
|-FunctionDecl 0x56231d77aab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56231d77a970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56231d77aa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56231d77ab60 <col:55>
|-FunctionDecl 0x56231d77acf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56231d77abe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56231d77ada0 <col:62>
|-FunctionDecl 0x56231d77af18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56231d77ae08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56231d77afc0 <col:60>
|-FunctionDecl 0x56231d77b2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56231d77b118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56231d77b198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56231d77b368 <col:44>
|-FunctionDecl 0x56231d77b578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56231d77b3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56231d77b450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56231d77b628 <col:49>
|-VarDecl 0x56231d77b728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56231d77b7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56231d77b828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56231d77b8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56231d77ba20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56231d77bac0 <col:42>
|-VarDecl 0x56231d77bb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56231d77bbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56231d77bd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56231d77bc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56231d77bde0 <col:57>
|-FunctionDecl 0x56231d77bef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56231d77be60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56231d77bf98 <col:56>
|-FunctionDecl 0x56231d77c0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56231d77c018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56231d77c178 <col:59>
|-FunctionDecl 0x56231d77c280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56231d77c1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56231d77c328 <col:48>
| `-ConstAttr 0x56231d77c380 <col:89>
|-FunctionDecl 0x56231d77c5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56231d77c438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56231d77c4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56231d77c848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56231d77c6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56231d77c768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56231d77c8f8 <col:88>
|-FunctionDecl 0x56231d77ca90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56231d77c960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56231d77c9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56231d77cb40 <col:88>
|-FunctionDecl 0x56231d77cd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56231d77cba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56231d77cc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56231d77ce08 <line:208:22>
|-FunctionDecl 0x56231d77d178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56231d77ce70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56231d77cef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56231d77cf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56231d77d010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56231d77d478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56231d77d278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56231d77d350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56231d77d528 <col:85>
|-FunctionDecl 0x56231d77d918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56231d77d590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56231d77d6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56231d77d7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56231d77d9d0 <col:52>
|-FunctionDecl 0x56231d77db48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56231d77da38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56231d77dbf0 <col:61>
|-FunctionDecl 0x56231d77e0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56231d77dc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56231d77dcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56231d77de08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56231d77def8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56231d77e1b0 <col:62>
|-FunctionDecl 0x56231d77e3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56231d77e218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56231d77e2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56231d77e478 <line:221:22>
|-FunctionDecl 0x56231d77e578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56231d77e4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56231d77e620 <col:65>
|-TypedefDecl 0x56231d77e690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56231d708fd0 'unsigned long'
|-RecordDecl 0x56231d77e6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56231d77e830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56231d77e898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56231d77e948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56231d77e8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56231d77e770 'union pthread_attr_t'
|     `-Record 0x56231d77e6e8 'pthread_attr_t'
|-RecordDecl 0x56231d77e9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56231d77eb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56231d77eb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56231d77ec40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56231d77ebe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56231d77ea20 'struct __pthread_internal_list'
|     `-Record 0x56231d77e9a0 '__pthread_internal_list'
|-RecordDecl 0x56231d77ecb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56231d77ed58 parent 0x56231d708e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56231d77ee30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56231d77ee98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56231d77ef00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56231d77ef68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56231d77efd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56231d77f038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56231d783110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56231d7831c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56231d7832b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56231d783318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56231d7834a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56231d783440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56231d77ed30 'pthread_mutex_t'
|     `-Record 0x56231d77ecb0 ''
|-RecordDecl 0x56231d783510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56231d783650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56231d7836b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56231d783770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56231d783710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56231d783590 'pthread_mutexattr_t'
|     `-Record 0x56231d783510 ''
|-RecordDecl 0x56231d7837e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56231d783888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56231d783950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56231d7839b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56231d783a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56231d783a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56231d783af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56231d783b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56231d783bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56231d783c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56231d783ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_5/safe016_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_5/safe016_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56231d783dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56231d783e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56231d783f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56231d783f10 'union pthread_cond_t' sugar
|   `-RecordType 0x56231d783860 'pthread_cond_t'
|     `-Record 0x56231d7837e0 ''
|-RecordDecl 0x56231d783fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56231d785130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56231d785198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56231d785250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56231d7851f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56231d784060 'pthread_condattr_t'
|     `-Record 0x56231d783fe0 ''
|-TypedefDecl 0x56231d7852d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56231d708fb0 'unsigned int'
|-TypedefDecl 0x56231d785348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56231d708f10 'int'
|-RecordDecl 0x56231d7853a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56231d785448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56231d785510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56231d785578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56231d7855e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56231d785648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56231d7856b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56231d785718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56231d785780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56231d7857e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56231d785850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56231d7858b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56231d785920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56231d7859d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_5/safe016_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_5/safe016_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56231d785a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56231d785ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56231d785c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56231d785bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56231d785420 'pthread_rwlock_t'
|     `-Record 0x56231d7853a0 ''
|-RecordDecl 0x56231d785ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56231d785de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56231d785e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56231d785f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56231d785ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56231d785d20 'pthread_rwlockattr_t'
|     `-Record 0x56231d785ca0 ''
|-TypedefDecl 0x56231d785f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56231d708f14 'volatile int' volatile
|   `-BuiltinType 0x56231d708f10 'int'
|-RecordDecl 0x56231d785fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56231d787140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56231d7871a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56231d787260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56231d787200 'union pthread_barrier_t' sugar
|   `-RecordType 0x56231d786060 'pthread_barrier_t'
|     `-Record 0x56231d785fe0 ''
|-RecordDecl 0x56231d7872d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56231d7873d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56231d787438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56231d7874f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56231d787490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56231d787350 'pthread_barrierattr_t'
|     `-Record 0x56231d7872d0 ''
|-TypedefDecl 0x56231d787608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56231d7875a0 'long [8]' 8 
|   `-BuiltinType 0x56231d708f30 'long'
|-EnumDecl 0x56231d787660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56231d787728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56231d787778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56231d7877c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56231d787898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56231d7878e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56231d787938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56231d787988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56231d787a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56231d7879f8 <col:26> 'int'
| |   `-DeclRefExpr 0x56231d7879d8 <col:26> 'int' EnumConstant 0x56231d787898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56231d787a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56231d787a80 <col:29> 'int'
| |   `-DeclRefExpr 0x56231d787a60 <col:29> 'int' EnumConstant 0x56231d7878e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56231d787b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56231d787b08 <col:30> 'int'
| |   `-DeclRefExpr 0x56231d787ae8 <col:30> 'int' EnumConstant 0x56231d787938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56231d787ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56231d787b90 <col:27> 'int'
|     `-DeclRefExpr 0x56231d787b70 <col:27> 'int' EnumConstant 0x56231d787a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56231d787bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56231d787cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56231d787d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56231d787d38 <col:30> 'int'
| |   `-DeclRefExpr 0x56231d787d18 <col:30> 'int' EnumConstant 0x56231d787cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56231d787da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56231d787e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56231d787e10 <col:29> 'int'
|     `-DeclRefExpr 0x56231d787df0 <col:29> 'int' EnumConstant 0x56231d787da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56231d787e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56231d787f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56231d787f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56231d787fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56231d788038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56231d788150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56231d7881a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56231d7881f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56231d788278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56231d788260 <col:31> 'int'
|     `-DeclRefExpr 0x56231d788240 <col:31> 'int' EnumConstant 0x56231d788150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56231d7882c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56231d788398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56231d7883e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56231d788438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56231d788508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56231d788558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56231d7885a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56231d788678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56231d7886c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56231d788718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56231d788958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56231d7889c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56231d788a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56231d788b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56231d788b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56231d788c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56231d788cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56231d788d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56231d788dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56231d788e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56231d789488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56231d788f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56231d789030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56231d789270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56231d7892f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56231d789548 <col:47>
| |-NonNullAttr 0x56231d7895a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56231d7895d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56231d789700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56231d789630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56231d789958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56231d7897b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56231d789838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56231d789b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56231d789a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56231d789bd0 <col:60>
|-FunctionDecl 0x56231d789d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56231d789dc0 <col:54>
| `-ConstAttr 0x56231d789e18 <col:95>
|-FunctionDecl 0x56231d789fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56231d789e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56231d789ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56231d78a098 <line:394:19>
| `-ConstAttr 0x56231d78a0f0 <col:60>
|-FunctionDecl 0x56231d78bb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56231d78b9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56231d78bbb0 <col:71>
| `-NonNullAttr 0x56231d78bc08 <col:112, col:126> 1
|-FunctionDecl 0x56231d78bd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56231d78bc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56231d78bdb8 <line:397:22>
| `-NonNullAttr 0x56231d78be10 <col:63, col:77> 1
|-FunctionDecl 0x56231d78c038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56231d78be58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56231d78bed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56231d78c0e8 <line:400:22>
| `-NonNullAttr 0x56231d78c140 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d78c348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56231d78c188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56231d78c208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56231d78c3f8 <line:403:22>
| `-NonNullAttr 0x56231d78c450 <col:63, col:77> 1
|-FunctionDecl 0x56231d78c6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56231d78c498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56231d78c540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56231d78c758 <line:406:22>
| `-NonNullAttr 0x56231d78c7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d78d9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56231d78c7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56231d78c870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56231d78da98 <line:409:22>
| `-NonNullAttr 0x56231d78daf0 <col:63, col:77> 1
|-FunctionDecl 0x56231d78dd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56231d78db38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56231d78dbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56231d78ddd8 <line:412:22>
| `-NonNullAttr 0x56231d78de30 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d78e068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56231d78de78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56231d78df08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56231d78e118 <col:37>
| `-NonNullAttr 0x56231d78e170 <col:78, col:95> 1 2
|-FunctionDecl 0x56231d78e358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d78e1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56231d78e238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56231d78e408 <line:418:22>
| `-NonNullAttr 0x56231d78e460 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d78e5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56231d78e4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56231d78e528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56231d78e698 <line:420:22>
| `-NonNullAttr 0x56231d78e6f0 <col:63, col:77> 1
|-FunctionDecl 0x56231d78e898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d78e738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56231d78e7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56231d78e948 <line:423:22>
| `-NonNullAttr 0x56231d78e9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d78eb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56231d78ea08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56231d78ea88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56231d78ebf8 <line:426:22>
| `-NonNullAttr 0x56231d78ec50 <col:63, col:77> 1
|-FunctionDecl 0x56231d78edf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d78ec98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56231d78ed18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56231d78eea8 <line:429:22>
| `-NonNullAttr 0x56231d78ef00 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d78f088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56231d78ef48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56231d78efc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56231d78f138 <line:431:22>
| `-NonNullAttr 0x56231d78f190 <col:63, col:77> 1
|-FunctionDecl 0x56231d78f3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56231d78f1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56231d78f258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56231d78f468 <line:434:22>
| |-NonNullAttr 0x56231d78f4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56231d78f4f8 <col:100> "" ""
|-FunctionDecl 0x56231d78f708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56231d78f548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56231d78f5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56231d78f7b8 <line:437:22>
| |-NonNullAttr 0x56231d78f810 <col:63, col:77> 1
| `-DeprecatedAttr 0x56231d78f848 <col:97> "" ""
|-FunctionDecl 0x56231d78fa48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56231d78f898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56231d78f910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56231d78faf8 <line:440:22>
| `-NonNullAttr 0x56231d78fb50 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d78fcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56231d78fb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56231d78fc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56231d78fd80 <line:443:22>
| `-NonNullAttr 0x56231d78fdd8 <col:63, col:77> 1
|-FunctionDecl 0x56231d7900c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56231d78fe28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56231d78fea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56231d78ff20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56231d790180 <line:447:22>
| `-NonNullAttr 0x56231d7901d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56231d790488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56231d790230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56231d7902b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56231d790328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56231d790540 <col:43>
| `-NonNullAttr 0x56231d790598 <col:84, col:98> 1
|-FunctionDecl 0x56231d790858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56231d7905e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56231d790668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56231d7906f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56231d790910 <line:452:22>
| `-NonNullAttr 0x56231d790968 <col:63, col:77> 3
|-FunctionDecl 0x56231d790c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56231d7909e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56231d790a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56231d790af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56231d790d30 <line:456:22>
| `-NonNullAttr 0x56231d790d88 <col:63, col:80> 2 3
|-FunctionDecl 0x56231d790f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56231d790dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56231d790e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56231d791028 <line:458:22>
|-FunctionDecl 0x56231d7913f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56231d7910f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56231d791290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56231d7914a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56231d791650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56231d791530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56231d7915b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56231d791838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56231d791718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56231d791798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56231d7919f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56231d7918f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56231d791b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56231d791bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56231d791c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56231d791d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56231d791dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56231d791fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_5/safe016_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56231d792098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56231d792150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56231d7920f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56231d791c50 '__pthread_unwind_buf_t'
| |   `-Record 0x56231d791bd0 ''
| `-AlignedAttr 0x56231d7921a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56231d792220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56231d792380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56231d7923e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56231d792450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56231d7924b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56231d7926c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56231d7925b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56231d792808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56231d792778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56231d792a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56231d7928c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56231d792aa8 <line:487:22>
|-RecordDecl 0x56231d792b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56231d792e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56231d792c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56231d792cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56231d792ec8 <col:86>
| `-ReturnsTwiceAttr 0x56231d792f20 <col:12> Implicit
|-FunctionDecl 0x56231d793248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56231d792ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56231d793100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56231d7932f8 <line:493:22>
| `-NonNullAttr 0x56231d793350 <col:63, col:77> 1
|-FunctionDecl 0x56231d7934c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56231d793398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56231d793570 <line:495:22>
| `-NonNullAttr 0x56231d7935c8 <col:63, col:77> 1
|-FunctionDecl 0x56231d7936d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56231d793618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56231d793778 <line:497:22>
| `-NonNullAttr 0x56231d7937d0 <col:52, col:66> 1
|-FunctionDecl 0x56231d7938d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56231d793818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56231d793978 <line:499:22>
| `-NonNullAttr 0x56231d7939d0 <col:52, col:66> 1
|-FunctionDecl 0x56231d794c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56231d794a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56231d794ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56231d794cd8 <col:36>
| `-NonNullAttr 0x56231d794d30 <col:66, col:83> 1 2
|-FunctionDecl 0x56231d794e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56231d794d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56231d794ed8 <line:504:22>
| `-NonNullAttr 0x56231d794f30 <col:52, col:66> 1
|-FunctionDecl 0x56231d7951c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d794fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56231d795060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56231d795278 <line:508:22>
| `-NonNullAttr 0x56231d7952d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d795598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56231d795318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56231d795398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56231d795418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56231d795650 <line:512:22>
| `-NonNullAttr 0x56231d7956a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56231d7957b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56231d7956f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56231d795858 <line:514:22>
| `-NonNullAttr 0x56231d7958b0 <col:63, col:77> 1
|-FunctionDecl 0x56231d795ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56231d795960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56231d795b80 <line:516:22>
| `-NonNullAttr 0x56231d795bd8 <col:63, col:77> 1
|-FunctionDecl 0x56231d795ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56231d795c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56231d795d88 <line:518:22>
| `-NonNullAttr 0x56231d795de0 <col:63, col:77> 1
|-FunctionDecl 0x56231d796008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d795e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56231d795ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56231d7960b8 <line:522:22>
| `-NonNullAttr 0x56231d796110 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d796318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56231d796158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56231d7961d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56231d7963c8 <line:525:22>
| `-NonNullAttr 0x56231d796420 <col:63, col:77> 1
|-FunctionDecl 0x56231d7965c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d796468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56231d7964e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56231d796678 <line:528:22>
| `-NonNullAttr 0x56231d7966d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d796858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56231d796718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56231d796798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56231d796908 <line:530:22>
| `-NonNullAttr 0x56231d796960 <col:63, col:77> 1
|-FunctionDecl 0x56231d796b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d7969a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56231d796a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56231d796bd0 <line:534:22>
| `-NonNullAttr 0x56231d796c28 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d796db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56231d796c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56231d796cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56231d796e68 <line:537:22>
| `-NonNullAttr 0x56231d796ec0 <col:63, col:77> 1
|-FunctionDecl 0x56231d797068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d796f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56231d796f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56231d797118 <line:541:22>
| `-NonNullAttr 0x56231d797170 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d7972f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56231d7971b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56231d797238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56231d7973a8 <line:544:22>
| `-NonNullAttr 0x56231d797400 <col:63, col:77> 1
|-FunctionDecl 0x56231d7975e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56231d797448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56231d7974c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56231d797698 <line:547:22>
| `-NonNullAttr 0x56231d7976f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d797878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56231d797738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56231d7977b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56231d797928 <line:550:22>
| `-NonNullAttr 0x56231d797980 <col:63, col:77> 1
|-FunctionDecl 0x56231d798cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56231d798aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56231d798bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56231d798da8 <col:29>
| `-NonNullAttr 0x56231d798e00 <col:70, col:84> 1
|-FunctionDecl 0x56231d798f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56231d798e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56231d799020 <line:555:22>
| `-NonNullAttr 0x56231d799078 <col:63, col:77> 1
|-FunctionDecl 0x56231d799180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56231d7990c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56231d799228 <line:557:22>
| `-NonNullAttr 0x56231d799280 <col:52, col:66> 1
|-FunctionDecl 0x56231d799380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56231d7992c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56231d799428 <line:559:19>
| `-NonNullAttr 0x56231d799480 <col:49, col:63> 1
|-FunctionDecl 0x56231d7996b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56231d7994c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56231d799558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56231d799768 <col:39>
| `-NonNullAttr 0x56231d7997c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56231d7998c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56231d799808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56231d799968 <line:564:22>
| `-NonNullAttr 0x56231d7999c0 <col:52, col:66> 1
|-FunctionDecl 0x56231d799b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56231d799a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56231d799bd0 <line:566:22>
| `-NonNullAttr 0x56231d799c28 <col:52, col:66> 1
|-FunctionDecl 0x56231d799de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56231d799c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56231d799d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56231d799e98 <col:39>
| `-NonNullAttr 0x56231d799ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56231d799ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56231d799f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56231d79a098 <line:571:22>
| `-NonNullAttr 0x56231d79a0f0 <col:52, col:66> 1
|-FunctionDecl 0x56231d79a2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56231d79a1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56231d79a380 <line:573:22>
| `-NonNullAttr 0x56231d79a3d8 <col:63, col:77> 1
|-FunctionDecl 0x56231d79a4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56231d79a428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56231d79a588 <line:575:22>
| `-NonNullAttr 0x56231d79a5e0 <col:63, col:77> 1
|-FunctionDecl 0x56231d79a808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d79a628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56231d79a6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56231d79a8b8 <line:579:22>
| `-NonNullAttr 0x56231d79a910 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d79ab38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56231d79a958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56231d79a9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56231d79abe8 <line:582:22>
| `-NonNullAttr 0x56231d79ac40 <col:63, col:77> 1
|-FunctionDecl 0x56231d79ade8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d79ac88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56231d79ad08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56231d79ae98 <line:586:22>
| `-NonNullAttr 0x56231d79aef0 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d79b078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56231d79af38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56231d79afb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56231d79b128 <col:36>
| `-NonNullAttr 0x56231d79b180 <col:77, col:91> 1
|-FunctionDecl 0x56231d79b4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56231d79b260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56231d79b370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56231d79b568 <line:591:22>
| `-NonNullAttr 0x56231d79b5c0 <col:63, col:77> 1
|-FunctionDecl 0x56231d79b738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56231d79b608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56231d79b7e0 <line:593:22>
| `-NonNullAttr 0x56231d79b838 <col:63, col:77> 1
|-FunctionDecl 0x56231d79b940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56231d79b888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56231d79b9e8 <line:595:22>
| `-NonNullAttr 0x56231d79ba40 <col:52, col:66> 1
|-FunctionDecl 0x56231d79bb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56231d79baa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56231d79bc00 <line:597:22>
| `-NonNullAttr 0x56231d79bc58 <col:52, col:66> 1
|-FunctionDecl 0x56231d79be88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56231d79bca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56231d79bd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56231d79bf38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56231d79c268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56231d79bfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56231d79c030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56231d79c0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56231d79c320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56231d79c538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56231d79c400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56231d79c5e0 <line:606:22>
| `-NonNullAttr 0x56231d79c638 <col:63, col:77> 1
|-FunctionDecl 0x56231d79c740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56231d79c688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56231d79c7e8 <line:608:22>
| `-NonNullAttr 0x56231d79c840 <col:63, col:77> 1
|-FunctionDecl 0x56231d79caa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d79c888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56231d79c908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56231d79cb50 <line:612:22>
| `-NonNullAttr 0x56231d79cba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d79cdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56231d79cbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56231d79cc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56231d79ce68 <col:37>
| `-NonNullAttr 0x56231d79cec0 <col:78, col:92> 1
|-FunctionDecl 0x56231d79d0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56231d79cf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56231d79cfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56231d79d188 <line:618:22>
| `-NonNullAttr 0x56231d79d1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d79d3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56231d79d228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56231d79d2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56231d79d458 <line:621:22>
| `-NonNullAttr 0x56231d79d4b0 <col:63, col:77> 1
|-FunctionDecl 0x56231d79d758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56231d79d590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56231d79d610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56231d79d808 <line:623:22>
| `-NonNullAttr 0x56231d79d860 <col:63, col:77> 1
|-FunctionDecl 0x56231d79d9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56231d79d8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56231d79dab0 <line:625:22>
| `-NonNullAttr 0x56231d79db08 <col:63, col:77> 1
|-FunctionDecl 0x56231d79dc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56231d79db58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56231d79dcb8 <line:627:22>
| `-NonNullAttr 0x56231d79dd10 <col:52, col:66> 1
|-FunctionDecl 0x56231d79de10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56231d79dd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56231d79deb8 <line:629:22>
| `-NonNullAttr 0x56231d79df10 <col:52, col:66> 1
|-FunctionDecl 0x56231d79e010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56231d79df58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56231d79e0b8 <line:631:22>
| `-NonNullAttr 0x56231d79e110 <col:52, col:66> 1
|-FunctionDecl 0x56231d79e4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56231d79e1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56231d79e300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56231d79e380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56231d79e5a0 <line:635:22>
| `-NonNullAttr 0x56231d79e5f8 <col:63, col:77> 1
|-FunctionDecl 0x56231d79e778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56231d79e648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56231d79e820 <line:637:22>
| `-NonNullAttr 0x56231d79e878 <col:63, col:77> 1
|-FunctionDecl 0x56231d79e980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56231d79e8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56231d79ea28 <line:639:22>
| `-NonNullAttr 0x56231d79ea80 <col:52, col:66> 1
|-FunctionDecl 0x56231d79fc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56231d79fb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56231d79fd30 <line:641:22>
| `-NonNullAttr 0x56231d79fd88 <col:63, col:77> 1
|-FunctionDecl 0x56231d79fe90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56231d79fdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56231d79ff38 <line:643:22>
| `-NonNullAttr 0x56231d79ff90 <col:63, col:77> 1
|-FunctionDecl 0x56231d7a01b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56231d79ffd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56231d7a0058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56231d7a0268 <line:647:22>
| `-NonNullAttr 0x56231d7a02c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56231d7a04c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56231d7a0308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56231d7a0388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56231d7a0578 <line:650:22>
| `-NonNullAttr 0x56231d7a05d0 <col:63, col:77> 1
|-FunctionDecl 0x56231d7a0918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56231d7a06b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56231d7a07d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56231d7a09c8 <line:653:22>
| `-NonNullAttr 0x56231d7a0a20 <col:63, col:77> 1
|-FunctionDecl 0x56231d7a0b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56231d7a0a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56231d7a0c30 <col:69>
|-FunctionDecl 0x56231d7a0da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56231d7a0c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56231d7a0e50 <col:72>
|-FunctionDecl 0x56231d7a1088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56231d7a0eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56231d7a0f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56231d7a1138 <col:44>
|-FunctionDecl 0x56231d7a1358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56231d7a11a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56231d7a1218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56231d7a1408 <line:660:22>
| `-NonNullAttr 0x56231d7a1460 <col:63, col:77> 2
|-FunctionDecl 0x56231d7a18a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56231d7a1540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56231d7a1650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56231d7a1760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56231d7a1960 <col:47>
|-FunctionDecl 0x56231d7a1af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56231d7a19d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56231d7a1c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56231d7a1bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56231d7a1da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56231d7a1d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56231d7a1ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56231d7a1e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56231d7a1fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56231d7a2080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56231d7a2140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56231d7a21f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56231d7a2278 prev 0x56231d7a21f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56231d7a22e0 <col:24> 'int' 0
|-VarDecl 0x56231d7a2318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56231d7a2398 prev 0x56231d7a2318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56231d7a2400 <col:27> 'int' 0
|-VarDecl 0x56231d7a2438 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56231d7a24b8 prev 0x56231d7a2438 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56231d7a2520 <col:27> 'int' 0
|-VarDecl 0x56231d7a2550 <line:678:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x56231d7a25d0 <line:679:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x56231d7a2648 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x56231d7a26c0 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x56231d7a2738 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x56231d7a27b0 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x56231d7a2828 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd4 '_Bool'
|-VarDecl 0x56231d7a28a0 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x56231d7a2918 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x56231d7a2990 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x56231d7a2a08 <line:688:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x56231d7a2a80 <line:689:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd4 '_Bool'
|-VarDecl 0x56231d7a2b10 <line:690:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x56231d7a2b90 <line:691:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x56231d7a2c10 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x56231d7a2c88 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x56231d7a2d08 <line:694:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x56231d7a2d80 <line:695:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x56231d7a2df8 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56231d7a2e70 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56231d7a2ef0 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x56231d7a2f70 prev 0x56231d7a2ef0 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56231d7a2fd8 <col:9> 'int' 0
|-VarDecl 0x56231d7a3008 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x56231d7a3088 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x56231d7a3100 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x56231d7a3178 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x56231d7a31f0 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x56231d7a3268 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x56231d7a32e0 <line:706:1, col:7> col:7 used x$r_buff0_thd4 '_Bool'
|-VarDecl 0x56231d7a3358 <line:707:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x56231d7a33d0 <line:708:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x56231d7a3448 <line:709:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x56231d7a34c0 <line:710:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x56231d7a3538 <line:711:1, col:7> col:7 used x$r_buff1_thd4 '_Bool'
|-VarDecl 0x56231d7a35b0 <line:712:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x56231d7a3630 <line:713:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x56231d7a36b0 <line:714:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x56231d7a3728 <line:715:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x56231d7a37a8 <line:716:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x56231d7a3820 <line:717:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x56231d7a38a0 <line:718:1, col:5> col:5 used y 'int'
|-VarDecl 0x56231d7a3920 prev 0x56231d7a38a0 <line:719:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56231d7a3988 <col:9> 'int' 0
|-VarDecl 0x56231d7a39b8 <line:720:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56231d7a3a30 <line:721:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x56231d7a4b20 <line:722:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56231d7a4c38 prev 0x56231d7a1af0 <line:723:1, line:742:1> line:723:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56231d7a4ba0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56231d7a5ed8 <line:724:1, line:742:1>
|   |-CallExpr 0x56231d7a4d48 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7a4d30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a4ce0 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7a4dc0 <line:726:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56231d7a4d68 <col:3> 'int' lvalue Var 0x56231d7a2398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56231d7a4da8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56231d7a4d88 <col:25> 'int' lvalue Var 0x56231d7a3920 'y' 'int'
|   |-CallExpr 0x56231d7a4e18 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7a4e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a4de0 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56231d7a4e70 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7a4e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a4e38 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7a4ed0 <line:729:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56231d7a4e90 <col:3> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   | `-IntegerLiteral 0x56231d7a4eb0 <col:7> 'int' 1
|   |-CallExpr 0x56231d7a4f28 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7a4f10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a4ef0 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56231d7a4f80 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7a4f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a4f48 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7a5268 <line:732:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56231d7a4fa0 <col:3> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   | `-ConditionalOperator 0x56231d7a5238 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56231d7a5060 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56231d7a5018 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56231d7a5000 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56231d7a4fc0 <col:7> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56231d7a5048 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56231d7a5030 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56231d7a4fe0 <col:25> '_Bool' lvalue Var 0x56231d7a3178 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56231d7a5220 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7a5080 <col:42> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56231d7a5200 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56231d7a51d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56231d7a5140 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56231d7a50f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56231d7a50e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56231d7a50a0 <col:55> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56231d7a5128 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56231d7a5110 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56231d7a50c0 <col:73> '_Bool' lvalue Var 0x56231d7a33d0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56231d7a51a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56231d7a5160 <col:90> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56231d7a51b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7a5180 <col:102> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   |-BinaryOperator 0x56231d7a5470 <line:733:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a5288 <col:3> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a5458 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7a5428 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56231d7a5348 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56231d7a5300 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56231d7a52e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56231d7a52a8 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56231d7a5330 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56231d7a5318 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56231d7a52c8 <col:38> '_Bool' lvalue Var 0x56231d7a3178 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7a53e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7a5398 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7a5368 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7a5410 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7a53f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7a53c0 <col:66> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56231d7a5758 <line:734:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a5490 <col:3> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a5740 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7a5710 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56231d7a5630 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56231d7a5550 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56231d7a5508 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56231d7a54f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56231d7a54b0 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56231d7a5538 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56231d7a5520 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56231d7a54d0 <col:38> '_Bool' lvalue Var 0x56231d7a3178 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56231d7a5610 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56231d7a55c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56231d7a55b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56231d7a5570 <col:56> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56231d7a55f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56231d7a55e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56231d7a5590 <col:74> '_Bool' lvalue Var 0x56231d7a33d0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7a56c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7a5680 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7a5650 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7a56f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7a56e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7a56a8 <col:102> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56231d7a5960 <line:735:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a5778 <col:3> '_Bool' lvalue Var 0x56231d7a3178 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a5948 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7a5918 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56231d7a5838 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56231d7a57f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56231d7a57d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56231d7a5798 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56231d7a5820 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56231d7a5808 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56231d7a57b8 <col:38> '_Bool' lvalue Var 0x56231d7a3178 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7a58d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7a5888 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7a5858 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7a5900 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7a58e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7a58b0 <col:66> '_Bool' lvalue Var 0x56231d7a3178 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56231d7a5c58 <line:736:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a5980 <col:3> '_Bool' lvalue Var 0x56231d7a33d0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a5c40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7a5c10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56231d7a5b30 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56231d7a5a40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56231d7a59f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56231d7a59e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56231d7a59a0 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56231d7a5a28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56231d7a5a10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56231d7a59c0 <col:38> '_Bool' lvalue Var 0x56231d7a3178 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56231d7a5b00 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56231d7a5ab8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56231d7a5aa0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56231d7a5a60 <col:56> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56231d7a5ae8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56231d7a5ad0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56231d7a5a80 <col:74> '_Bool' lvalue Var 0x56231d7a33d0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7a5bc8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7a5b80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7a5b50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7a5bf8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7a5be0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7a5ba8 <col:102> '_Bool' lvalue Var 0x56231d7a33d0 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56231d7a5cb0 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7a5c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a5c78 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56231d7a5d08 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7a5cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a5cd0 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7a5dc0 <line:739:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56231d7a5d28 <col:3> 'int' lvalue Var 0x56231d7a2278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56231d7a5da0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56231d7a5d88 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7a5d48 <col:22> 'int' lvalue Var 0x56231d7a2278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56231d7a5d68 <col:41> 'int' 1
|   |-CallExpr 0x56231d7a5e18 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7a5e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a5de0 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56231d7a5ec8 <line:741:3, col:36>
|     `-CallExpr 0x56231d7a5ea8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56231d7a5e90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56231d7a5e38 <col:10> 'void *(void)' Function 0x56231d748958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56231d7a6020 prev 0x56231d7a1c48 <line:743:1, line:759:1> line:743:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56231d7a5f88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56231d7a7148 <line:744:1, line:759:1>
|   |-CallExpr 0x56231d7a6100 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7a60e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a60c8 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7a6160 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56231d7a6120 <col:3> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   | `-IntegerLiteral 0x56231d7a6140 <col:7> 'int' 2
|   |-CallExpr 0x56231d7a61b8 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7a61a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a6180 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56231d7a6210 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7a61f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a61d8 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7a64f8 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56231d7a6230 <col:3> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   | `-ConditionalOperator 0x56231d7a64c8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56231d7a62f0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56231d7a62a8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56231d7a6290 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56231d7a6250 <col:7> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56231d7a62d8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56231d7a62c0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56231d7a6270 <col:25> '_Bool' lvalue Var 0x56231d7a31f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56231d7a64b0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7a6310 <col:42> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56231d7a6490 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56231d7a6460 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56231d7a63d0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56231d7a6388 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56231d7a6370 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56231d7a6330 <col:55> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56231d7a63b8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56231d7a63a0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56231d7a6350 <col:73> '_Bool' lvalue Var 0x56231d7a3448 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56231d7a6430 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56231d7a63f0 <col:90> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56231d7a6448 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7a6410 <col:102> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   |-BinaryOperator 0x56231d7a6700 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a6518 <col:3> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a66e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7a66b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56231d7a65d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56231d7a6590 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56231d7a6578 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56231d7a6538 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56231d7a65c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56231d7a65a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56231d7a6558 <col:38> '_Bool' lvalue Var 0x56231d7a31f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7a6670 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7a6628 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7a65f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7a66a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7a6688 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7a6650 <col:66> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56231d7a69e8 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a6720 <col:3> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a69d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7a69a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56231d7a68c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56231d7a67e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56231d7a6798 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56231d7a6780 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56231d7a6740 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56231d7a67c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56231d7a67b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56231d7a6760 <col:38> '_Bool' lvalue Var 0x56231d7a31f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56231d7a68a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56231d7a6858 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56231d7a6840 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56231d7a6800 <col:56> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56231d7a6888 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56231d7a6870 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56231d7a6820 <col:74> '_Bool' lvalue Var 0x56231d7a3448 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7a6958 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7a6910 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7a68e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7a6988 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7a6970 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7a6938 <col:102> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56231d7a6c18 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a6a08 <col:3> '_Bool' lvalue Var 0x56231d7a31f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a6c00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7a6bd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56231d7a6ac8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56231d7a6a80 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56231d7a6a68 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56231d7a6a28 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56231d7a6ab0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56231d7a6a98 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56231d7a6a48 <col:38> '_Bool' lvalue Var 0x56231d7a31f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7a6b88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7a6b40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7a6ae8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7a6bb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7a6ba0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7a6b68 <col:66> '_Bool' lvalue Var 0x56231d7a31f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56231d7a6f00 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a6c38 <col:3> '_Bool' lvalue Var 0x56231d7a3448 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a6ee8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7a6eb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56231d7a6dd8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56231d7a6cf8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56231d7a6cb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56231d7a6c98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56231d7a6c58 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56231d7a6ce0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56231d7a6cc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56231d7a6c78 <col:38> '_Bool' lvalue Var 0x56231d7a31f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56231d7a6db8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56231d7a6d70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56231d7a6d58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56231d7a6d18 <col:56> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56231d7a6da0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56231d7a6d88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56231d7a6d38 <col:74> '_Bool' lvalue Var 0x56231d7a3448 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7a6e70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7a6e28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7a6df8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7a6ea0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7a6e88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7a6e50 <col:102> '_Bool' lvalue Var 0x56231d7a3448 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56231d7a6f58 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7a6f40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a6f20 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56231d7a6fb0 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7a6f98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a6f78 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7a7068 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56231d7a6fd0 <col:3> 'int' lvalue Var 0x56231d7a2278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56231d7a7048 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56231d7a7030 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7a6ff0 <col:22> 'int' lvalue Var 0x56231d7a2278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56231d7a7010 <col:41> 'int' 1
|   |-CallExpr 0x56231d7a70c0 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7a70a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a7088 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56231d7a7138 <line:758:3, col:36>
|     `-CallExpr 0x56231d7a7118 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56231d7a7100 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56231d7a70e0 <col:10> 'void *(void)' Function 0x56231d748958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56231d7a7278 prev 0x56231d7a1da0 <line:760:1, line:795:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56231d7a71e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56231d7ac868 <line:761:1, line:795:1>
|   |-CallExpr 0x56231d7a7358 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7a7340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7a7320 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7a7408 <line:763:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a7378 <col:3> '_Bool' lvalue Var 0x56231d7a39b8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a73f0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56231d7a73d0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56231d7a73b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56231d7a7398 <col:19> 'void *(void)' Function 0x56231d748958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56231d7a74b8 <line:764:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a7428 <col:3> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a74a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56231d7a7480 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56231d7a7468 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56231d7a7448 <col:19> 'void *(void)' Function 0x56231d748958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56231d7a7530 <line:765:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a74d8 <col:3> '_Bool' lvalue Var 0x56231d7a3008 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a7518 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56231d7a74f8 <col:21> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56231d7a75a8 <line:766:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56231d7a7550 <col:3> 'int' lvalue Var 0x56231d7a3088 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56231d7a7590 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56231d7a7570 <col:15> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   |-BinaryOperator 0x56231d7a7658 <line:767:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a75c8 <col:3> '_Bool' lvalue Var 0x56231d7a3a30 'weak$$choice1' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a7640 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56231d7a7620 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56231d7a7608 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56231d7a75e8 <col:19> 'void *(void)' Function 0x56231d748958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56231d7a80b0 <line:768:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x56231d7a7678 <col:3> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   | `-ConditionalOperator 0x56231d7a8080 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x56231d7a76d0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x56231d7a76b8 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56231d7a7698 <col:8> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x56231d7a8068 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7a76e8 <col:25> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   |   `-ParenExpr 0x56231d7a8048 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x56231d7a8018 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x56231d7a77a8 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56231d7a7760 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56231d7a7748 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56231d7a7708 <col:30> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56231d7a7790 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56231d7a7778 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56231d7a7728 <col:48> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56231d7a8000 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56231d7a77c8 <col:65> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x56231d7a7fe0 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x56231d7a7fb0 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x56231d7a7968 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x56231d7a78f8 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x56231d7a7888 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x56231d7a7870 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x56231d7a7858 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x56231d7a77e8 <col:78> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x56231d7a7840 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x56231d7a7828 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x56231d7a7808 <col:97> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |           | | `-ImplicitCastExpr 0x56231d7a78e0 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x56231d7a78c8 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x56231d7a78a8 <col:115> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x56231d7a7950 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x56231d7a7938 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56231d7a7918 <col:134> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |           |-ParenExpr 0x56231d7a7b80 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x56231d7a7b50 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x56231d7a7af0 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x56231d7a7ad8 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x56231d7a7988 <col:152> '_Bool' lvalue Var 0x56231d7a39b8 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x56231d7a7b08 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x56231d7a79a8 <col:168> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   |           |   `-ParenExpr 0x56231d7a7ab8 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x56231d7a7a88 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x56231d7a7a40 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x56231d7a7a28 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x56231d7a79c8 <col:173> '_Bool' lvalue Var 0x56231d7a3a30 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x56231d7a7a58 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x56231d7a79e8 <col:189> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x56231d7a7a70 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x56231d7a7a08 <col:201> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x56231d7a7f90 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x56231d7a7f60 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x56231d7a7d20 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x56231d7a7cb0 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x56231d7a7c40 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x56231d7a7bf8 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x56231d7a7be0 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x56231d7a7ba0 <col:216> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x56231d7a7c28 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x56231d7a7c10 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x56231d7a7bc0 <col:234> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x56231d7a7c98 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x56231d7a7c80 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x56231d7a7c60 <col:252> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x56231d7a7d08 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x56231d7a7cf0 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x56231d7a7cd0 <col:271> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |               |-ParenExpr 0x56231d7a7e30 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x56231d7a7e00 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x56231d7a7db8 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x56231d7a7da0 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x56231d7a7d40 <col:289> '_Bool' lvalue Var 0x56231d7a39b8 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x56231d7a7dd0 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x56231d7a7d60 <col:305> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x56231d7a7de8 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x56231d7a7d80 <col:317> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x56231d7a7f40 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x56231d7a7f10 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x56231d7a7ec8 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x56231d7a7eb0 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x56231d7a7e50 <col:331> '_Bool' lvalue Var 0x56231d7a39b8 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x56231d7a7ee0 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x56231d7a7e70 <col:347> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x56231d7a7ef8 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x56231d7a7e90 <col:359> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   |-BinaryOperator 0x56231d7a8850 <line:769:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x56231d7a80d0 <col:3> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x56231d7a8820 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x56231d7a87f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56231d7a87d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56231d7a80f0 <col:15> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56231d7a8808 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7a8110 <col:31> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56231d7a87b8 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x56231d7a8788 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x56231d7a8168 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x56231d7a8150 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56231d7a8130 <col:45> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x56231d7a8770 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56231d7a8180 <col:62> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x56231d7a8750 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x56231d7a8720 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x56231d7a8240 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56231d7a81f8 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56231d7a81e0 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56231d7a81a0 <col:75> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56231d7a8228 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56231d7a8210 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56231d7a81c0 <col:93> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56231d7a8708 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56231d7a8260 <col:110> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x56231d7a86e8 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x56231d7a86b8 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x56231d7a8400 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x56231d7a8390 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x56231d7a8320 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x56231d7a8308 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x56231d7a82f0 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x56231d7a8280 <col:123> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x56231d7a82d8 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x56231d7a82c0 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x56231d7a82a0 <col:142> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x56231d7a8378 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x56231d7a8360 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x56231d7a8340 <col:160> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x56231d7a83e8 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x56231d7a83d0 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x56231d7a83b0 <col:179> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x56231d7a86a0 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x56231d7a8420 <col:196> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x56231d7a8680 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x56231d7a8650 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x56231d7a85c0 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x56231d7a8550 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x56231d7a84e0 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x56231d7a8498 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x56231d7a8480 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x56231d7a8440 <col:209> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x56231d7a84c8 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x56231d7a84b0 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x56231d7a8460 <col:227> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x56231d7a8538 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x56231d7a8520 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x56231d7a8500 <col:245> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x56231d7a85a8 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x56231d7a8590 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x56231d7a8570 <col:264> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x56231d7a8620 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x56231d7a85e0 <col:281> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x56231d7a8638 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x56231d7a8600 <col:293> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x56231d7a9000 <line:770:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x56231d7a8870 <col:3> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x56231d7a8fd0 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x56231d7a8fa0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56231d7a8f88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56231d7a8890 <col:15> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56231d7a8fb8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7a88b0 <col:31> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x56231d7a8f68 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x56231d7a8f38 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x56231d7a8908 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x56231d7a88f0 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56231d7a88d0 <col:45> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x56231d7a8f20 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56231d7a8920 <col:62> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x56231d7a8f00 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x56231d7a8ed0 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x56231d7a89e0 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56231d7a8998 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56231d7a8980 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56231d7a8940 <col:75> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56231d7a89c8 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56231d7a89b0 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56231d7a8960 <col:93> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56231d7a8eb8 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56231d7a8a00 <col:110> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x56231d7a8e98 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x56231d7a8e68 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x56231d7a8bb0 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x56231d7a8b30 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x56231d7a8ac0 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x56231d7a8aa8 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x56231d7a8a90 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x56231d7a8a20 <col:123> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x56231d7a8a78 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x56231d7a8a60 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x56231d7a8a40 <col:142> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x56231d7a8b18 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x56231d7a8b00 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x56231d7a8ae0 <col:160> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x56231d7a8b98 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x56231d7a8b80 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x56231d7a8b60 <col:179> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x56231d7a8e50 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x56231d7a8bd0 <col:196> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x56231d7a8e30 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x56231d7a8e00 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x56231d7a8d70 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x56231d7a8d00 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x56231d7a8c90 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x56231d7a8c48 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x56231d7a8c30 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x56231d7a8bf0 <col:209> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x56231d7a8c78 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x56231d7a8c60 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x56231d7a8c10 <col:227> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x56231d7a8ce8 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x56231d7a8cd0 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x56231d7a8cb0 <col:245> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x56231d7a8d58 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x56231d7a8d40 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x56231d7a8d20 <col:264> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x56231d7a8dd0 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x56231d7a8d90 <col:281> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x56231d7a8de8 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x56231d7a8db0 <col:293> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x56231d7a98d8 <line:771:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a9020 <col:3> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7a98c0 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7a9890 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x56231d7a9848 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56231d7a9830 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56231d7a9040 <col:20> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7a9878 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56231d7a9860 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56231d7a9060 <col:36> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56231d7a9810 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x56231d7a97e0 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x56231d7a90b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x56231d7a90a0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56231d7a9080 <col:55> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x56231d7a97c8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56231d7a97b0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56231d7a90d0 <col:72> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56231d7a9790 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x56231d7a9760 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x56231d7a9190 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56231d7a9148 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56231d7a9130 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56231d7a90f0 <col:90> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56231d7a9178 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56231d7a9160 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56231d7a9110 <col:108> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56231d7a9748 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56231d7a91e0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56231d7a91b0 <col:132> 'int' 0
|   |             `-ParenExpr 0x56231d7a9728 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x56231d7a96f8 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x56231d7a9388 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x56231d7a9318 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x56231d7a92a8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x56231d7a9290 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x56231d7a9278 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x56231d7a9208 <col:137> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x56231d7a9260 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x56231d7a9248 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x56231d7a9228 <col:156> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x56231d7a9300 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x56231d7a92e8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x56231d7a92c8 <col:174> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x56231d7a9370 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x56231d7a9358 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x56231d7a9338 <col:193> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |                 |-BinaryOperator 0x56231d7a9448 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x56231d7a9430 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x56231d7a9418 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x56231d7a93a8 <col:210> '_Bool' lvalue Var 0x56231d7a39b8 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x56231d7a9400 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x56231d7a93e8 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x56231d7a93c8 <col:228> '_Bool' lvalue Var 0x56231d7a3a30 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x56231d7a96d8 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x56231d7a96a8 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x56231d7a95e8 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x56231d7a9578 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x56231d7a9508 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x56231d7a94c0 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x56231d7a94a8 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x56231d7a9468 <col:245> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x56231d7a94f0 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x56231d7a94d8 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x56231d7a9488 <col:263> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x56231d7a9560 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x56231d7a9548 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x56231d7a9528 <col:281> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x56231d7a95d0 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x56231d7a95b8 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x56231d7a9598 <col:300> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x56231d7a9660 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x56231d7a9648 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x56231d7a9608 <col:317> '_Bool' lvalue Var 0x56231d7a39b8 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x56231d7a9690 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x56231d7a9678 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x56231d7a9628 <col:333> '_Bool' lvalue Var 0x56231d7a39b8 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x56231d7aa1a0 <line:772:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7a98f8 <col:3> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7aa188 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7aa158 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x56231d7aa110 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56231d7aa0f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56231d7a9918 <col:20> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7aa140 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56231d7aa128 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56231d7a9938 <col:36> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56231d7aa0d8 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x56231d7aa0a8 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x56231d7a9990 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x56231d7a9978 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56231d7a9958 <col:55> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x56231d7aa090 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56231d7aa078 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56231d7a99a8 <col:72> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56231d7aa058 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x56231d7aa028 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x56231d7a9a68 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56231d7a9a20 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56231d7a9a08 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56231d7a99c8 <col:90> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56231d7a9a50 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56231d7a9a38 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56231d7a99e8 <col:108> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56231d7aa010 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56231d7a9ab8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56231d7a9a88 <col:132> 'int' 0
|   |             `-ParenExpr 0x56231d7a9ff0 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x56231d7a9fc0 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x56231d7a9c80 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x56231d7a9c10 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x56231d7a9ba0 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x56231d7a9b88 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x56231d7a9b70 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x56231d7a9ae0 <col:137> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x56231d7a9b38 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x56231d7a9b20 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x56231d7a9b00 <col:156> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x56231d7a9bf8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x56231d7a9be0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x56231d7a9bc0 <col:174> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x56231d7a9c68 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x56231d7a9c50 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x56231d7a9c30 <col:193> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x56231d7a9fa8 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x56231d7a9f90 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x56231d7a9ca0 <col:210> '_Bool' lvalue Var 0x56231d7a39b8 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x56231d7a9f70 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x56231d7a9f40 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x56231d7a9e40 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x56231d7a9dd0 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x56231d7a9d60 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x56231d7a9d18 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x56231d7a9d00 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x56231d7a9cc0 <col:227> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x56231d7a9d48 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x56231d7a9d30 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x56231d7a9ce0 <col:245> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x56231d7a9db8 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x56231d7a9da0 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x56231d7a9d80 <col:263> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x56231d7a9e28 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x56231d7a9e10 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x56231d7a9df0 <col:282> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x56231d7a9f10 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x56231d7a9e90 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x56231d7a9e60 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x56231d7a9f28 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x56231d7a9ee8 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x56231d7a9eb8 <col:317> 'int' 0
|   |-BinaryOperator 0x56231d7aaa48 <line:773:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7aa1c0 <col:3> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7aaa30 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7aaa00 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x56231d7aa9b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56231d7aa9a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56231d7aa1e0 <col:20> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7aa9e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56231d7aa9d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56231d7aa200 <col:36> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56231d7aa980 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x56231d7aa950 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x56231d7aa258 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x56231d7aa240 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56231d7aa220 <col:55> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x56231d7aa938 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56231d7aa920 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56231d7aa270 <col:72> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56231d7aa900 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x56231d7aa8d0 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x56231d7aa330 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56231d7aa2e8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56231d7aa2d0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56231d7aa290 <col:90> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56231d7aa318 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56231d7aa300 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56231d7aa2b0 <col:108> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56231d7aa8b8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56231d7aa380 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56231d7aa350 <col:132> 'int' 0
|   |             `-ParenExpr 0x56231d7aa898 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x56231d7aa868 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x56231d7aa528 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x56231d7aa4b8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x56231d7aa448 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x56231d7aa430 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x56231d7aa418 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x56231d7aa3a8 <col:137> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x56231d7aa400 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x56231d7aa3e8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x56231d7aa3c8 <col:156> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x56231d7aa4a0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x56231d7aa488 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x56231d7aa468 <col:174> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x56231d7aa510 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x56231d7aa4f8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x56231d7aa4d8 <col:193> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x56231d7aa850 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x56231d7aa838 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x56231d7aa548 <col:210> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |                 `-ParenExpr 0x56231d7aa818 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x56231d7aa7e8 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x56231d7aa6e8 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x56231d7aa678 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x56231d7aa608 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x56231d7aa5c0 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x56231d7aa5a8 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x56231d7aa568 <col:228> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x56231d7aa5f0 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x56231d7aa5d8 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x56231d7aa588 <col:246> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x56231d7aa660 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x56231d7aa648 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x56231d7aa628 <col:264> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x56231d7aa6d0 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x56231d7aa6b8 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x56231d7aa698 <col:283> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x56231d7aa7b8 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x56231d7aa738 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x56231d7aa708 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x56231d7aa7d0 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x56231d7aa790 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x56231d7aa760 <col:318> 'int' 0
|   |-BinaryOperator 0x56231d7ab428 <line:774:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7aaa68 <col:3> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7ab410 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7ab3e0 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x56231d7ab398 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56231d7ab380 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56231d7aaa88 <col:20> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7ab3c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56231d7ab3b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56231d7aaaa8 <col:36> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56231d7ab360 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x56231d7ab330 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x56231d7aab00 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x56231d7aaae8 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56231d7aaac8 <col:55> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x56231d7ab318 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56231d7ab300 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56231d7aab18 <col:72> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56231d7ab2e0 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x56231d7ab2b0 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x56231d7aac00 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56231d7aabb8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56231d7aaba0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56231d7aab38 <col:90> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56231d7aabe8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56231d7aabd0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56231d7aab80 <col:108> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56231d7ab298 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56231d7aac50 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56231d7aac20 <col:132> 'int' 0
|   |             `-ParenExpr 0x56231d7ab278 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x56231d7ab248 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x56231d7aadf8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x56231d7aad88 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x56231d7aad18 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x56231d7aad00 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x56231d7aace8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x56231d7aac78 <col:137> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x56231d7aacd0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x56231d7aacb8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x56231d7aac98 <col:156> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x56231d7aad70 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x56231d7aad58 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x56231d7aad38 <col:174> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x56231d7aade0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x56231d7aadc8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x56231d7aada8 <col:193> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |                 |-ParenExpr 0x56231d7aaf58 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x56231d7aaf28 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x56231d7aaec8 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x56231d7aaeb0 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x56231d7aae18 <col:211> '_Bool' lvalue Var 0x56231d7a39b8 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x56231d7aaef8 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x56231d7aaee0 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x56231d7aae38 <col:227> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x56231d7aaf10 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x56231d7aae88 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x56231d7aae58 <col:251> 'int' 0
|   |                 `-ParenExpr 0x56231d7ab228 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x56231d7ab1f8 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x56231d7ab0f8 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x56231d7ab088 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x56231d7ab018 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x56231d7aafd0 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x56231d7aafb8 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x56231d7aaf78 <col:257> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x56231d7ab000 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x56231d7aafe8 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x56231d7aaf98 <col:275> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x56231d7ab070 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x56231d7ab058 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x56231d7ab038 <col:293> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x56231d7ab0e0 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x56231d7ab0c8 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x56231d7ab0a8 <col:312> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x56231d7ab1c8 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x56231d7ab148 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x56231d7ab118 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x56231d7ab1e0 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x56231d7ab1a0 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x56231d7ab170 <col:347> 'int' 0
|   |-BinaryOperator 0x56231d7ab4c0 <line:775:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7ab448 <col:3> '_Bool' lvalue Var 0x56231d7a2b10 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56231d7ab498 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56231d7ab468 <col:45> 'int' 1
|   |-BinaryOperator 0x56231d7ab538 <line:776:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x56231d7ab4e0 <col:3> 'int *' lvalue Var 0x56231d7a2b90 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x56231d7ab520 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x56231d7ab500 <col:43> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   |-BinaryOperator 0x56231d7ab5b0 <line:777:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56231d7ab558 <col:3> 'int' lvalue Var 0x56231d7a24b8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56231d7ab598 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56231d7ab578 <col:25> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   |-BinaryOperator 0x56231d7ab6e0 <line:778:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56231d7ab5d0 <col:3> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   | `-ConditionalOperator 0x56231d7ab6b0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56231d7ab668 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56231d7ab650 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56231d7ab5f0 <col:7> '_Bool' lvalue Var 0x56231d7a3008 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56231d7ab680 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7ab610 <col:25> 'int' lvalue Var 0x56231d7a3088 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56231d7ab698 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56231d7ab630 <col:37> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   |-BinaryOperator 0x56231d7ab778 <line:779:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7ab700 <col:3> '_Bool' lvalue Var 0x56231d7a3008 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56231d7ab750 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56231d7ab720 <col:28> 'int' 0
|   |-CallExpr 0x56231d7ab7d0 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7ab7b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7ab798 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56231d7ab828 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7ab810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7ab7f0 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7ab888 <line:782:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56231d7ab848 <col:3> 'int' lvalue Var 0x56231d7a3920 'y' 'int'
|   | `-IntegerLiteral 0x56231d7ab868 <col:7> 'int' 1
|   |-CallExpr 0x56231d7ab8e0 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7ab8c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7ab8a8 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56231d7ab938 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7ab920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7ab900 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7abc40 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56231d7ab958 <col:3> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   | `-ConditionalOperator 0x56231d7abc10 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56231d7aba18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56231d7ab9d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56231d7ab9b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56231d7ab978 <col:7> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56231d7aba00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56231d7ab9e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56231d7ab998 <col:25> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56231d7abbf8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7aba38 <col:42> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56231d7abbd8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56231d7abba8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56231d7abaf8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56231d7abab0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56231d7aba98 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56231d7aba58 <col:55> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56231d7abae0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56231d7abac8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56231d7aba78 <col:73> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56231d7abb58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56231d7abb18 <col:90> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56231d7abb90 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7abb38 <col:102> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   |-BinaryOperator 0x56231d7abe48 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7abc60 <col:3> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7abe30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7abe00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56231d7abd20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56231d7abcd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56231d7abcc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56231d7abc80 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56231d7abd08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56231d7abcf0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56231d7abca0 <col:38> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7abdb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7abd70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7abd40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7abde8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7abdd0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7abd98 <col:66> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56231d7ac130 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7abe68 <col:3> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7ac118 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7ac0e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56231d7ac008 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56231d7abf28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56231d7abee0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56231d7abec8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56231d7abe88 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56231d7abf10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56231d7abef8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56231d7abea8 <col:38> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56231d7abfe8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56231d7abfa0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56231d7abf88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56231d7abf48 <col:56> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56231d7abfd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56231d7abfb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56231d7abf68 <col:74> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7ac0a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7ac058 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7ac028 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7ac0d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7ac0b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7ac080 <col:102> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56231d7ac338 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7ac150 <col:3> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7ac320 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7ac2f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56231d7ac210 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56231d7ac1c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56231d7ac1b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56231d7ac170 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56231d7ac1f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56231d7ac1e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56231d7ac190 <col:38> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7ac2a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7ac260 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7ac230 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7ac2d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7ac2c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7ac288 <col:66> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56231d7ac620 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7ac358 <col:3> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7ac608 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7ac5d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56231d7ac4f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56231d7ac418 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56231d7ac3d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56231d7ac3b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56231d7ac378 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56231d7ac400 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56231d7ac3e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56231d7ac398 <col:38> '_Bool' lvalue Var 0x56231d7a3268 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56231d7ac4d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56231d7ac490 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56231d7ac478 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56231d7ac438 <col:56> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56231d7ac4c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56231d7ac4a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56231d7ac458 <col:74> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7ac590 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7ac548 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7ac518 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7ac5c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7ac5a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7ac570 <col:102> '_Bool' lvalue Var 0x56231d7a34c0 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56231d7ac678 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7ac660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7ac640 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56231d7ac6d0 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7ac6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7ac698 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7ac788 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56231d7ac6f0 <col:3> 'int' lvalue Var 0x56231d7a2278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56231d7ac768 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56231d7ac750 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7ac710 <col:22> 'int' lvalue Var 0x56231d7a2278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56231d7ac730 <col:41> 'int' 1
|   |-CallExpr 0x56231d7ac7e0 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7ac7c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7ac7a8 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56231d7ac858 <line:794:3, col:36>
|     `-CallExpr 0x56231d7ac838 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56231d7ac820 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56231d7ac800 <col:10> 'void *(void)' Function 0x56231d748958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56231d7aca30 prev 0x56231d7a1ef8 <line:796:1, line:812:1> line:796:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x56231d7ac998 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56231d7adbb0 <line:797:1, line:812:1>
|   |-CallExpr 0x56231d7acb10 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7acaf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7acad8 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7acb70 <line:799:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56231d7acb30 <col:3> 'int' lvalue Var 0x56231d7a3920 'y' 'int'
|   | `-IntegerLiteral 0x56231d7acb50 <col:7> 'int' 2
|   |-CallExpr 0x56231d7acbd8 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7acbc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7acba0 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56231d7acc30 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7acc18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7acbf8 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7acf18 <line:802:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56231d7acc50 <col:3> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   | `-ConditionalOperator 0x56231d7acee8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56231d7acd10 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56231d7accc8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56231d7accb0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56231d7acc70 <col:7> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56231d7accf8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56231d7acce0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56231d7acc90 <col:25> '_Bool' lvalue Var 0x56231d7a32e0 'x$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56231d7aced0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7acd30 <col:42> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56231d7aceb0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56231d7ace80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56231d7acdf0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56231d7acda8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56231d7acd90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56231d7acd50 <col:55> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56231d7acdd8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56231d7acdc0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56231d7acd70 <col:73> '_Bool' lvalue Var 0x56231d7a3538 'x$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56231d7ace50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56231d7ace10 <col:90> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56231d7ace68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7ace30 <col:102> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
|   |-BinaryOperator 0x56231d7ad120 <line:803:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7acf38 <col:3> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7ad108 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7ad0d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56231d7acff8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56231d7acfb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56231d7acf98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56231d7acf58 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56231d7acfe0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56231d7acfc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56231d7acf78 <col:38> '_Bool' lvalue Var 0x56231d7a32e0 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7ad090 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7ad048 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7ad018 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7ad0c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7ad0a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7ad070 <col:66> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56231d7ad408 <line:804:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7ad140 <col:3> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7ad3f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7ad3c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56231d7ad2e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56231d7ad200 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56231d7ad1b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56231d7ad1a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56231d7ad160 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56231d7ad1e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56231d7ad1d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56231d7ad180 <col:38> '_Bool' lvalue Var 0x56231d7a32e0 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56231d7ad2c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56231d7ad278 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56231d7ad260 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56231d7ad220 <col:56> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56231d7ad2a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56231d7ad290 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56231d7ad240 <col:74> '_Bool' lvalue Var 0x56231d7a3538 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7ad378 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7ad330 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7ad300 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7ad3a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7ad390 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7ad358 <col:102> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56231d7ad610 <line:805:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7ad428 <col:3> '_Bool' lvalue Var 0x56231d7a32e0 'x$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7ad5f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7ad5c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56231d7ad4e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56231d7ad4a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56231d7ad488 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56231d7ad448 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56231d7ad4d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56231d7ad4b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56231d7ad468 <col:38> '_Bool' lvalue Var 0x56231d7a32e0 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7ad580 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7ad538 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7ad508 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7ad5b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7ad598 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7ad560 <col:66> '_Bool' lvalue Var 0x56231d7a32e0 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56231d7ad8f8 <line:806:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56231d7ad630 <col:3> '_Bool' lvalue Var 0x56231d7a3538 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56231d7ad8e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56231d7ad8b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56231d7ad7d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56231d7ad6f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56231d7ad6a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56231d7ad690 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56231d7ad650 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56231d7ad6d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56231d7ad6c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56231d7ad670 <col:38> '_Bool' lvalue Var 0x56231d7a32e0 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56231d7ad7b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56231d7ad768 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56231d7ad750 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56231d7ad710 <col:56> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56231d7ad798 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56231d7ad780 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56231d7ad730 <col:74> '_Bool' lvalue Var 0x56231d7a3538 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56231d7ad868 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56231d7ad820 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56231d7ad7f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56231d7ad898 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56231d7ad880 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56231d7ad848 <col:102> '_Bool' lvalue Var 0x56231d7a3538 'x$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x56231d7ad950 <line:807:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7ad938 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7ad918 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56231d7ad9a8 <line:808:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56231d7ad990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7ad970 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56231d7ada60 <line:809:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56231d7ad9c8 <col:3> 'int' lvalue Var 0x56231d7a2278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56231d7ada40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56231d7ada28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56231d7ad9e8 <col:22> 'int' lvalue Var 0x56231d7a2278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56231d7ada08 <col:41> 'int' 1
|   |-CallExpr 0x56231d7adab8 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56231d7adaa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56231d7ada80 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56231d7adb30 <line:811:3, col:36>
|     `-CallExpr 0x56231d7adb10 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56231d7adaf8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56231d7adad8 <col:10> 'void *(void)' Function 0x56231d748958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56231d7adc50 prev 0x56231d7a1fc0 <line:813:1, line:815:1> line:813:6 fence 'void ()'
| `-CompoundStmt 0x56231d7adcf0 <line:814:1, line:815:1>
|-FunctionDecl 0x56231d7add20 prev 0x56231d7a2080 <line:816:1, line:818:1> line:816:6 isync 'void ()'
| `-CompoundStmt 0x56231d7addc0 <line:817:1, line:818:1>
|-FunctionDecl 0x56231d7addf0 prev 0x56231d7a2140 <line:819:1, line:821:1> line:819:6 lwfence 'void ()'
| `-CompoundStmt 0x56231d7ade90 <line:820:1, line:821:1>
`-FunctionDecl 0x56231d7adef8 <line:822:1, line:863:1> line:822:5 main 'int ()'
  `-CompoundStmt 0x56231d7b2c00 <line:823:1, line:863:1>
    |-DeclStmt 0x56231d7ae010 <line:824:3, col:18>
    | `-VarDecl 0x56231d7adfa8 <col:3, col:13> col:13 used t2151 'pthread_t':'unsigned long'
    |-CallExpr 0x56231d7ae218 <line:825:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56231d7ae200 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56231d7ae028 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56231d789488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56231d7ae068 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56231d7ae048 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56231d7adfa8 't2151' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56231d7ae258 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56231d7ae0e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56231d7ae0b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56231d7ae080 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56231d7ae270 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56231d7ae100 <col:39> 'void *(void *)' Function 0x56231d7a4c38 'P0' 'void *(void *)'
    | `-ParenExpr 0x56231d7ae180 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56231d7ae158 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56231d7ae120 <col:52> 'int' 0
    |-DeclStmt 0x56231d7ae300 <line:826:3, col:18>
    | `-VarDecl 0x56231d7ae298 <col:3, col:13> col:13 used t2152 'pthread_t':'unsigned long'
    |-CallExpr 0x56231d7ae4a8 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56231d7ae490 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56231d7ae318 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56231d789488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56231d7ae358 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56231d7ae338 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56231d7ae298 't2152' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56231d7ae4e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56231d7ae3d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56231d7ae3a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56231d7ae370 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56231d7ae500 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56231d7ae3f0 <col:39> 'void *(void *)' Function 0x56231d7a6020 'P1' 'void *(void *)'
    | `-ParenExpr 0x56231d7ae470 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56231d7ae448 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56231d7ae410 <col:52> 'int' 0
    |-DeclStmt 0x56231d7ae590 <line:828:3, col:18>
    | `-VarDecl 0x56231d7ae528 <col:3, col:13> col:13 used t2153 'pthread_t':'unsigned long'
    |-CallExpr 0x56231d7ae738 <line:829:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56231d7ae720 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56231d7ae5a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56231d789488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56231d7ae5e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56231d7ae5c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56231d7ae528 't2153' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56231d7ae778 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56231d7ae660 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56231d7ae638 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56231d7ae600 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56231d7ae790 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56231d7ae680 <col:39> 'void *(void *)' Function 0x56231d7a7278 'P2' 'void *(void *)'
    | `-ParenExpr 0x56231d7ae700 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56231d7ae6d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56231d7ae6a0 <col:52> 'int' 0
    |-DeclStmt 0x56231d7ae820 <line:830:3, col:18>
    | `-VarDecl 0x56231d7ae7b8 <col:3, col:13> col:13 used t2154 'pthread_t':'unsigned long'
    |-CallExpr 0x56231d7ae9c8 <line:831:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56231d7ae9b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56231d7ae838 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56231d789488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56231d7ae878 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56231d7ae858 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56231d7ae7b8 't2154' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56231d7aea08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56231d7ae8f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56231d7ae8c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56231d7ae890 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56231d7aea20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56231d7ae910 <col:39> 'void *(void *)' Function 0x56231d7aca30 'P3' 'void *(void *)'
    | `-ParenExpr 0x56231d7ae990 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56231d7ae968 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56231d7ae930 <col:52> 'int' 0
    |-CallExpr 0x56231d7aea70 <line:832:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56231d7aea58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56231d7aea38 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56231d7aeb40 <line:833:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56231d7aea90 <col:3> '_Bool' lvalue Var 0x56231d7a2df8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56231d7aeb28 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56231d7aeb08 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56231d7aeaf0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56231d7aeab0 <col:21> 'int' lvalue Var 0x56231d7a2278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56231d7aead0 <col:41> 'int' 4
    |-CallExpr 0x56231d7aebc0 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56231d7aeb80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56231d7aeb60 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56231d7aec68 <line:835:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56231d7aec50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56231d7aebe0 <col:3> 'void (int)' Function 0x56231d748790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56231d7aeca8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56231d7aec90 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56231d7aec00 <col:21> '_Bool' lvalue Var 0x56231d7a2df8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56231d7aecf8 <line:836:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56231d7aece0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56231d7aecc0 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56231d7aefe0 <line:837:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56231d7aed18 <col:3> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
    | `-ConditionalOperator 0x56231d7aefb0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56231d7aedd8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56231d7aed90 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56231d7aed78 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56231d7aed38 <col:7> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56231d7aedc0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56231d7aeda8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56231d7aed58 <col:25> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56231d7aef98 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56231d7aedf8 <col:42> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x56231d7aef78 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56231d7aef48 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56231d7aeeb8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56231d7aee70 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56231d7aee58 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56231d7aee18 <col:55> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56231d7aeea0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56231d7aee88 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56231d7aee38 <col:73> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56231d7aef18 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56231d7aeed8 <col:90> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56231d7aef30 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56231d7aeef8 <col:102> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
    |-BinaryOperator 0x56231d7af1e8 <line:838:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56231d7af000 <col:3> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56231d7af1d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56231d7af1a0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56231d7af0c0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56231d7af078 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56231d7af060 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56231d7af020 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56231d7af0a8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56231d7af090 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56231d7af040 <col:38> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56231d7af158 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56231d7af110 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56231d7af0e0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56231d7af188 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56231d7af170 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56231d7af138 <col:66> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56231d7af4d0 <line:839:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56231d7af208 <col:3> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56231d7af4b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56231d7af488 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56231d7af3a8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56231d7af2c8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56231d7af280 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56231d7af268 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56231d7af228 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56231d7af2b0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56231d7af298 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56231d7af248 <col:38> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56231d7af388 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56231d7af340 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56231d7af328 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56231d7af2e8 <col:56> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56231d7af370 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56231d7af358 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56231d7af308 <col:74> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56231d7af440 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56231d7af3f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56231d7af3c8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56231d7af470 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56231d7af458 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56231d7af420 <col:102> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56231d7af6d8 <line:840:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56231d7af4f0 <col:3> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56231d7af6c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56231d7af690 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56231d7af5b0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56231d7af568 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56231d7af550 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56231d7af510 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56231d7af598 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56231d7af580 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56231d7af530 <col:38> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56231d7af648 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56231d7af600 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56231d7af5d0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56231d7af678 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56231d7af660 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56231d7af628 <col:66> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56231d7af9c0 <line:841:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56231d7af6f8 <col:3> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56231d7af9a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56231d7af978 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56231d7af898 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56231d7af7b8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56231d7af770 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56231d7af758 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56231d7af718 <col:20> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56231d7af7a0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56231d7af788 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56231d7af738 <col:38> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56231d7af878 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56231d7af830 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56231d7af818 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56231d7af7d8 <col:56> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56231d7af860 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56231d7af848 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56231d7af7f8 <col:74> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56231d7af930 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56231d7af8e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56231d7af8b8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56231d7af960 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56231d7af948 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56231d7af910 <col:102> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56231d7afa18 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56231d7afa00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56231d7af9e0 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56231d7afa70 <line:843:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56231d7afa58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56231d7afa38 <col:3> 'void ()' Function 0x56231d748e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56231d7afb20 <line:844:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x56231d7afa90 <col:3> '_Bool' lvalue Var 0x56231d7a39b8 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x56231d7afb08 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x56231d7afae8 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x56231d7afad0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56231d7afab0 <col:19> 'void *(void)' Function 0x56231d748958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x56231d7afbe8 <line:845:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x56231d7afb40 <col:3> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x56231d7afbd0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x56231d7afb98 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x56231d7afb80 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56231d7afb60 <col:19> 'void *(void)' Function 0x56231d748958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x56231d7afc60 <line:846:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x56231d7afc08 <col:3> '_Bool' lvalue Var 0x56231d7a3008 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x56231d7afc48 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x56231d7afc28 <col:21> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x56231d7afcd8 <line:847:3, col:15> 'int' '='
    | |-DeclRefExpr 0x56231d7afc80 <col:3> 'int' lvalue Var 0x56231d7a3088 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x56231d7afcc0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x56231d7afca0 <col:15> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
    |-BinaryOperator 0x56231d7b0110 <line:848:3, col:162> 'int' '='
    | |-DeclRefExpr 0x56231d7afcf8 <col:3> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
    | `-ConditionalOperator 0x56231d7b00e0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x56231d7aff08 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x56231d7afe28 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x56231d7afd50 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x56231d7afd38 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x56231d7afd18 <col:8> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x56231d7afe08 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x56231d7afda0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x56231d7afd88 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x56231d7afd68 <col:27> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x56231d7afdf0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x56231d7afdd8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x56231d7afdb8 <col:46> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x56231d7afee8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x56231d7afe80 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x56231d7afe68 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x56231d7afe48 <col:65> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x56231d7afed0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x56231d7afeb8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x56231d7afe98 <col:84> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56231d7b00c8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56231d7aff28 <col:101> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
    |   `-ParenExpr 0x56231d7b00a8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x56231d7b0078 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x56231d7affe8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56231d7affa0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56231d7aff88 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56231d7aff48 <col:106> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56231d7affd0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56231d7affb8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56231d7aff68 <col:124> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56231d7b0048 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56231d7b0008 <col:141> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x56231d7b0060 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56231d7b0028 <col:153> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
    |-BinaryOperator 0x56231d7b0620 <line:849:3, col:208> 'int' '='
    | |-DeclRefExpr 0x56231d7b0130 <col:3> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x56231d7b05f0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x56231d7b05c0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56231d7b05a8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56231d7b0150 <col:15> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x56231d7b05d8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56231d7b0170 <col:31> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x56231d7b0588 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x56231d7b0558 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x56231d7b0380 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x56231d7b02a0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x56231d7b01c8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x56231d7b01b0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x56231d7b0190 <col:45> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x56231d7b0280 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x56231d7b0218 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x56231d7b0200 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x56231d7b01e0 <col:64> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x56231d7b0268 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x56231d7b0250 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x56231d7b0230 <col:83> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x56231d7b0360 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x56231d7b02f8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x56231d7b02e0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x56231d7b02c0 <col:102> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x56231d7b0348 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x56231d7b0330 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x56231d7b0310 <col:121> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56231d7b0540 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56231d7b03a0 <col:138> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
    |       `-ParenExpr 0x56231d7b0520 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x56231d7b04f0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x56231d7b0460 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x56231d7b0418 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x56231d7b0400 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x56231d7b03c0 <col:151> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x56231d7b0448 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x56231d7b0430 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x56231d7b03e0 <col:169> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x56231d7b04c0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56231d7b0480 <col:186> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x56231d7b04d8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x56231d7b04a0 <col:198> 'int' lvalue Var 0x56231d7a36b0 'x$w_buff0' 'int'
    |-BinaryOperator 0x56231d7b0b30 <line:850:3, col:208> 'int' '='
    | |-DeclRefExpr 0x56231d7b0640 <col:3> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x56231d7b0b00 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x56231d7b0ad0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56231d7b0ab8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56231d7b0660 <col:15> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x56231d7b0ae8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56231d7b0680 <col:31> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x56231d7b0a98 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x56231d7b0a68 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x56231d7b0890 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x56231d7b07b0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x56231d7b06d8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x56231d7b06c0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x56231d7b06a0 <col:45> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x56231d7b0790 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x56231d7b0728 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x56231d7b0710 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x56231d7b06f0 <col:64> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x56231d7b0778 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x56231d7b0760 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x56231d7b0740 <col:83> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x56231d7b0870 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x56231d7b0808 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x56231d7b07f0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x56231d7b07d0 <col:102> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x56231d7b0858 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x56231d7b0840 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x56231d7b0820 <col:121> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56231d7b0a50 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56231d7b08b0 <col:138> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x56231d7b0a30 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x56231d7b0a00 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x56231d7b0970 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x56231d7b0928 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x56231d7b0910 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x56231d7b08d0 <col:151> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x56231d7b0958 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x56231d7b0940 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x56231d7b08f0 <col:169> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x56231d7b09d0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56231d7b0990 <col:186> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x56231d7b09e8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x56231d7b09b0 <col:198> 'int' lvalue Var 0x56231d7a37a8 'x$w_buff1' 'int'
    |-BinaryOperator 0x56231d7b10e8 <line:851:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x56231d7b0b50 <col:3> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56231d7b10d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56231d7b10a0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x56231d7b1058 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56231d7b1040 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56231d7b0b70 <col:20> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56231d7b1088 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56231d7b1070 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56231d7b0b90 <col:36> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x56231d7b1020 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x56231d7b0ff0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x56231d7b0db0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56231d7b0cd0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56231d7b0bf8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56231d7b0be0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56231d7b0bb0 <col:55> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56231d7b0cb0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56231d7b0c48 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56231d7b0c30 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56231d7b0c10 <col:74> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56231d7b0c98 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56231d7b0c80 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56231d7b0c60 <col:93> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56231d7b0d90 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56231d7b0d28 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56231d7b0d10 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56231d7b0cf0 <col:112> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56231d7b0d78 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56231d7b0d60 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56231d7b0d40 <col:131> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56231d7b0fd8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56231d7b0fc0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56231d7b0dd0 <col:148> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x56231d7b0fa0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x56231d7b0f70 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x56231d7b0e90 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56231d7b0e48 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56231d7b0e30 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56231d7b0df0 <col:166> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56231d7b0e78 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56231d7b0e60 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56231d7b0e10 <col:184> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56231d7b0f28 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56231d7b0ee0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56231d7b0eb0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56231d7b0f58 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x56231d7b0f40 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x56231d7b0f08 <col:212> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56231d7b16b0 <line:852:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x56231d7b1108 <col:3> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56231d7b1698 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56231d7b1668 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x56231d7b1620 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56231d7b1608 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56231d7b1128 <col:20> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56231d7b1650 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56231d7b1638 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56231d7b1148 <col:36> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x56231d7b15e8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x56231d7b15b8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x56231d7b1358 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56231d7b1278 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56231d7b11a0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56231d7b1188 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56231d7b1168 <col:55> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56231d7b1258 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56231d7b11f0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56231d7b11d8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56231d7b11b8 <col:74> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56231d7b1240 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56231d7b1228 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56231d7b1208 <col:93> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56231d7b1338 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56231d7b12d0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56231d7b12b8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56231d7b1298 <col:112> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56231d7b1320 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56231d7b1308 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56231d7b12e8 <col:131> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56231d7b15a0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56231d7b1588 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56231d7b1378 <col:148> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x56231d7b1568 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x56231d7b1538 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x56231d7b1438 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56231d7b13f0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56231d7b13d8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56231d7b1398 <col:166> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56231d7b1420 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56231d7b1408 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56231d7b13b8 <col:184> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56231d7b1508 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56231d7b1488 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56231d7b1458 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56231d7b1520 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x56231d7b14e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x56231d7b14b0 <col:219> 'int' 0
    |-BinaryOperator 0x56231d7b1c68 <line:853:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x56231d7b16d0 <col:3> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56231d7b1c50 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56231d7b1c20 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x56231d7b1bc8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56231d7b1bb0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56231d7b16f0 <col:20> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56231d7b1c08 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56231d7b1bf0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56231d7b1710 <col:36> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x56231d7b1b90 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x56231d7b1b60 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x56231d7b1920 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56231d7b1840 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56231d7b1768 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56231d7b1750 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56231d7b1730 <col:55> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56231d7b1820 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56231d7b17b8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56231d7b17a0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56231d7b1780 <col:74> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56231d7b1808 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56231d7b17f0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56231d7b17d0 <col:93> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56231d7b1900 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56231d7b1898 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56231d7b1880 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56231d7b1860 <col:112> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56231d7b18e8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56231d7b18d0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56231d7b18b0 <col:131> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56231d7b1b48 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56231d7b1b30 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56231d7b1940 <col:148> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x56231d7b1b10 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x56231d7b1ae0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x56231d7b1a00 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56231d7b19b8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56231d7b19a0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56231d7b1960 <col:166> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56231d7b19e8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56231d7b19d0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56231d7b1980 <col:184> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56231d7b1a98 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56231d7b1a50 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56231d7b1a20 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56231d7b1ac8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x56231d7b1ab0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x56231d7b1a78 <col:212> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56231d7b2230 <line:854:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x56231d7b1c88 <col:3> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56231d7b2218 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56231d7b21e8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x56231d7b21a0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56231d7b2188 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56231d7b1ca8 <col:20> '_Bool' lvalue Var 0x56231d7a4b20 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56231d7b21d0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56231d7b21b8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56231d7b1cc8 <col:36> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x56231d7b2168 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x56231d7b2138 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x56231d7b1ed8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56231d7b1df8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56231d7b1d20 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56231d7b1d08 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56231d7b1ce8 <col:55> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56231d7b1dd8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56231d7b1d70 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56231d7b1d58 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56231d7b1d38 <col:74> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56231d7b1dc0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56231d7b1da8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56231d7b1d88 <col:93> '_Bool' lvalue Var 0x56231d7a3820 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56231d7b1eb8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56231d7b1e50 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56231d7b1e38 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56231d7b1e18 <col:112> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56231d7b1ea0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56231d7b1e88 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56231d7b1e68 <col:131> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56231d7b2120 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56231d7b2108 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56231d7b1ef8 <col:148> '_Bool' lvalue Var 0x56231d7a3358 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x56231d7b20e8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x56231d7b20b8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x56231d7b1fb8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56231d7b1f70 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56231d7b1f58 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56231d7b1f18 <col:166> '_Bool' lvalue Var 0x56231d7a3728 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56231d7b1fa0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56231d7b1f88 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56231d7b1f38 <col:184> '_Bool' lvalue Var 0x56231d7a3100 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56231d7b2088 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56231d7b2008 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56231d7b1fd8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56231d7b20a0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x56231d7b2060 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x56231d7b2030 <col:219> 'int' 0
    |-BinaryOperator 0x56231d7b22e0 <line:855:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x56231d7b2250 <col:3> '_Bool' lvalue Var 0x56231d7a3a30 'weak$$choice1' '_Bool'
    | `-ImplicitCastExpr 0x56231d7b22c8 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x56231d7b22a8 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x56231d7b2290 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56231d7b2270 <col:19> 'void *(void)' Function 0x56231d748958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x56231d7b2518 <line:856:3, col:140> 'int' '='
    | |-DeclRefExpr 0x56231d7b2300 <col:3> 'int' lvalue Var 0x56231d7a24b8 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x56231d7b24e8 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x56231d7b24b8 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56231d7b24a0 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56231d7b2320 <col:25> '_Bool' lvalue Var 0x56231d7a2b10 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x56231d7b2460 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x56231d7b2430 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x56231d7b23e8 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x56231d7b23d0 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x56231d7b2340 <col:61> '_Bool' lvalue Var 0x56231d7a3a30 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x56231d7b2400 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x56231d7b2398 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x56231d7b2380 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x56231d7b2360 <col:78> 'int *' lvalue Var 0x56231d7a2b90 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x56231d7b2418 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56231d7b23b0 <col:117> 'int' lvalue Var 0x56231d7a24b8 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x56231d7b24d0 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x56231d7b2480 <col:140> 'int' lvalue Var 0x56231d7a24b8 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x56231d7b27e8 <line:857:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x56231d7b2538 <col:3> '_Bool' lvalue Var 0x56231d7a2e70 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56231d7b27d0 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56231d7b27b8 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56231d7b2798 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x56231d7b2778 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x56231d7b26e0 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x56231d7b2648 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x56231d7b25b0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x56231d7b2598 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x56231d7b2558 <col:23> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
    |         | | | `-IntegerLiteral 0x56231d7b2578 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x56231d7b2628 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56231d7b2610 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56231d7b25d0 <col:33> 'int' lvalue Var 0x56231d7a3920 'y' 'int'
    |         | |   `-IntegerLiteral 0x56231d7b25f0 <col:38> 'int' 2
    |         | `-BinaryOperator 0x56231d7b26c0 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56231d7b26a8 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56231d7b2668 <col:43> 'int' lvalue Var 0x56231d7a2398 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x56231d7b2688 <col:66> 'int' 2
    |         `-BinaryOperator 0x56231d7b2758 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x56231d7b2740 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56231d7b2700 <col:71> 'int' lvalue Var 0x56231d7a24b8 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x56231d7b2720 <col:94> 'int' 2
    |-BinaryOperator 0x56231d7b2918 <line:858:3, col:37> 'int' '='
    | |-DeclRefExpr 0x56231d7b2808 <col:3> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
    | `-ConditionalOperator 0x56231d7b28e8 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x56231d7b28a0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56231d7b2888 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56231d7b2828 <col:7> '_Bool' lvalue Var 0x56231d7a3008 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x56231d7b28b8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56231d7b2848 <col:25> 'int' lvalue Var 0x56231d7a3088 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x56231d7b28d0 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x56231d7b2868 <col:37> 'int' lvalue Var 0x56231d7a2f70 'x' 'int'
    |-BinaryOperator 0x56231d7b29b0 <line:859:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x56231d7b2938 <col:3> '_Bool' lvalue Var 0x56231d7a3008 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x56231d7b2988 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x56231d7b2958 <col:28> 'int' 0
    |-CallExpr 0x56231d7b2a08 <line:860:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56231d7b29f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56231d7b29d0 <col:3> 'void ()' Function 0x56231d748f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56231d7b2a80 <line:861:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56231d7b2a68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56231d7b2a28 <col:3> 'void (int)' Function 0x56231d748bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56231d7b2ac0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56231d7b2aa8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56231d7b2a48 <col:21> '_Bool' lvalue Var 0x56231d7a2e70 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56231d7b2af8 <line:862:3, col:10>
      `-IntegerLiteral 0x56231d7b2ad8 <col:10> 'int' 0
