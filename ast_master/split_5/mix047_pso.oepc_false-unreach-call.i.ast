TranslationUnitDecl 0x55a923135e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55a9231366d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55a9231363b0 '__int128'
|-TypedefDecl 0x55a923136748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55a9231363d0 'unsigned __int128'
|-TypedefDecl 0x55a923136a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55a923136820 'struct __NSConstantString_tag'
|   `-Record 0x55a9231367a0 '__NSConstantString_tag'
|-TypedefDecl 0x55a923136af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55a923136ab0 'char *'
|   `-BuiltinType 0x55a923135eb0 'char'
|-TypedefDecl 0x55a923175650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55a923136d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55a923136bd0 'struct __va_list_tag'
|     `-Record 0x55a923136b50 '__va_list_tag'
|-FunctionDecl 0x55a923175790 <./split_5/mix047_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55a9231756c0 <col:31> col:34 'int'
|-FunctionDecl 0x55a923175958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55a923175a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55a923175bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55a923175b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55a923175df8 <col:40, col:99>
|   |-IfStmt 0x55a923175dc8 <col:42, col:88>
|   | |-UnaryOperator 0x55a923175ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55a923175c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55a923175c70 <col:47> 'int' lvalue ParmVar 0x55a923175b38 'expression' 'int'
|   | `-CompoundStmt 0x55a923175db0 <col:59, col:88>
|   |   `-LabelStmt 0x55a923175d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55a923175d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55a923175d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55a923175cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55a923175a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55a923175de0 <col:89>
|   `-ReturnStmt 0x55a923175de8 <col:91>
|-FunctionDecl 0x55a923175e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55a923175f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55a923176280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a923175fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55a923176038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55a9231760b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a923176138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a923176340 <line:10:22>
|-FunctionDecl 0x55a92319c390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a9231763b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55a923176430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55a9231764b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a923176530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a92319c450 <line:13:22>
|-FunctionDecl 0x55a92319c700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a92319c4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55a92319c540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55a92319c5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55a92319c7b8 <line:15:22>
|-TypedefDecl 0x55a92319c828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55a923135f70 'unsigned char'
|-TypedefDecl 0x55a92319c898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55a923135f90 'unsigned short'
|-TypedefDecl 0x55a92319c908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55a923135fb0 'unsigned int'
|-TypedefDecl 0x55a92319c978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319c9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55a923135ed0 'signed char'
|-TypedefDecl 0x55a92319ca58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55a923135f70 'unsigned char'
|-TypedefDecl 0x55a92319cac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55a923135ef0 'short'
|-TypedefDecl 0x55a92319cb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55a923135f90 'unsigned short'
|-TypedefDecl 0x55a92319cba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55a923135f10 'int'
|-TypedefDecl 0x55a92319cc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55a923135fb0 'unsigned int'
|-TypedefDecl 0x55a92319cc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319ccf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319cd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319cdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319ce48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319ceb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55a923135fb0 'unsigned int'
|-TypedefDecl 0x55a92319cf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55a923135fb0 'unsigned int'
|-TypedefDecl 0x55a92319cf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319d008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319d078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55a923135fb0 'unsigned int'
|-TypedefDecl 0x55a92319d0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319d158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319d1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319d238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55a923135f10 'int'
|-RecordDecl 0x55a92319d290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55a92319d408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55a92319d4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55a92319d460 'struct __fsid_t' sugar
|   `-RecordType 0x55a92319d310 '__fsid_t'
|     `-Record 0x55a92319d290 ''
|-TypedefDecl 0x55a92319d548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319d5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319d628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319d698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55a923135fb0 'unsigned int'
|-TypedefDecl 0x55a92319d708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319d778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55a923135fb0 'unsigned int'
|-TypedefDecl 0x55a92319d7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319d858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55a923135f10 'int'
|-TypedefDecl 0x55a92319d8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55a923135f10 'int'
|-TypedefDecl 0x55a92319d938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55a923135f10 'int'
|-TypedefDecl 0x55a92319d9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55a923136630 'void *'
|   `-BuiltinType 0x55a923135e70 'void'
|-TypedefDecl 0x55a92319da18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319da88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319daf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319db68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319dbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319dc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319dcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319dd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319dd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319de08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319de78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319df08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55a92319ded0 '__off64_t' sugar
|   |-Typedef 0x55a92319d1c8 '__off64_t'
|   `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319e000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55a92319dfc0 '__quad_t *'
|   `-TypedefType 0x55a92319df60 '__quad_t' sugar
|     |-Typedef 0x55a92319cd68 '__quad_t'
|     `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319e070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55a923136ab0 'char *'
|   `-BuiltinType 0x55a923135eb0 'char'
|-TypedefDecl 0x55a92319e0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a92319e150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55a923135fb0 'unsigned int'
|-FunctionDecl 0x55a92319e298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55a92319e1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55a92319f5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55a92319f5d8 <line:72:3, col:34>
|     `-CallExpr 0x55a92319f598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55a92319f580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a92319f510 <col:10> '<builtin fn type>' Function 0x55a92319f380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55a92319f5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a92319f530 <col:29> 'unsigned int' lvalue ParmVar 0x55a92319e1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55a92319f380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55a92319f420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55a92319f490 <col:10> Implicit
| `-ConstAttr 0x55a92319f4e8 <col:10> Implicit
|-FunctionDecl 0x55a92319f740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55a92319f638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55a92319fa58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55a92319fa48 <line:77:3, col:34>
|     `-CallExpr 0x55a92319fa08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55a92319f9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a92319f978 <col:10> '<builtin fn type>' Function 0x55a92319f7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55a92319fa30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55a92319f998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55a92319f638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55a92319f7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55a92319f888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55a92319f8f8 <col:10> Implicit
| `-ConstAttr 0x55a92319f950 <col:10> Implicit
|-TypedefDecl 0x55a92319fa88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-TypedefDecl 0x55a92319fb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55a92319fae0 '__time_t' sugar
|   |-Typedef 0x55a92319d708 '__time_t'
|   `-BuiltinType 0x55a923135f30 'long'
|-RecordDecl 0x55a92319fb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55a92319fc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55a92319fcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55a92319fd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55a92319fd10 '__pid_t' sugar
|   |-Typedef 0x55a92319d238 '__pid_t'
|   `-BuiltinType 0x55a923135f10 'int'
|-RecordDecl 0x55a92319fda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55a92319fe60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55a92319feb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55a92319ff70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55a92319ffd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-RecordDecl 0x55a9231a0030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55a9231a02c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55a9231a13a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55a9231a0310 'struct cpu_set_t' sugar
|   `-RecordType 0x55a9231a00b0 'cpu_set_t'
|     `-Record 0x55a9231a0030 ''
|-FunctionDecl 0x55a9231a1678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55a9231a1448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a9231a1550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55a9231a1728 <line:107:19>
|-FunctionDecl 0x55a9231a1900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55a9231a1790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55a9231a19a8 <col:69>
|-FunctionDecl 0x55a9231a1b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55a9231a1a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55a9231a1bc8 <col:64>
|-FunctionDecl 0x55a9231a1e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a9231a1c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a9231a1d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a9231a1f38 <line:113:22>
|-FunctionDecl 0x55a9231a21b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55a9231a1fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a9231a2098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55a9231a2268 <col:88>
|-FunctionDecl 0x55a9231a2588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a9231a22d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a9231a23b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55a9231a2440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a9231a2640 <col:62>
|-FunctionDecl 0x55a9231a27b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55a9231a26a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55a9231a2860 <col:63>
|-FunctionDecl 0x55a9231a2988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55a9231a2a28 <col:47>
|-FunctionDecl 0x55a9231a2b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55a9231a2a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a9231a2bd8 <col:69>
|-FunctionDecl 0x55a9231a2ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55a9231a2c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a9231a2d88 <col:69>
|-FunctionDecl 0x55a9231a3048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a9231a2df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a9231a2f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55a9231a30f8 <col:88>
|-TypedefDecl 0x55a9231a3188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55a9231a3150 '__clock_t' sugar
|   |-Typedef 0x55a92319d548 '__clock_t'
|   `-BuiltinType 0x55a923135f30 'long'
|-TypedefDecl 0x55a9231a3218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55a9231a31e0 '__clockid_t' sugar
|   |-Typedef 0x55a92319d938 '__clockid_t'
|   `-BuiltinType 0x55a923135f10 'int'
|-TypedefDecl 0x55a9231a32a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55a9231a3270 '__timer_t' sugar
|   |-Typedef 0x55a92319d9a8 '__timer_t'
|   `-PointerType 0x55a923136630 'void *'
|     `-BuiltinType 0x55a923135e70 'void'
|-RecordDecl 0x55a9231a3300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55a9231a33d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55a9231a3440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55a9231a34a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55a9231a3510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55a9231a3578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55a9231a35e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55a9231a3648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55a9231a36b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55a9231a3718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55a9231a3780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55a9231a37e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55a9231a3838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55a9231a3908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55a9231a3978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55a9231a3a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55a9231a3bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55a9231a3c90 <col:45>
|-FunctionDecl 0x55a9231a3e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55a9231a3d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55a9231a3f18 <col:54>
|-FunctionDecl 0x55a9231a4118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55a9231a3f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55a9231a3ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55a9231a41c8 <line:157:22>
| `-ConstAttr 0x55a9231a4220 <col:63>
|-FunctionDecl 0x55a9231a5050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a9231a4318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a9231a50f8 <col:56>
|-FunctionDecl 0x55a9231a54a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55a9231a5168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55a9231a51e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a9231a5260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55a9231a5358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55a9231a5560 <col:54>
|-RecordDecl 0x55a9231a55b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55a9231a5668 parent 0x55a923135e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55a9231a58c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55a9231a5968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55a9231a59d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55a9231a5a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55a9231a5b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55a9231a5c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55a9231a5bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55a9231a5b80 'struct __locale_struct' sugar
|     `-RecordType 0x55a9231a5640 'struct __locale_struct'
|       `-Record 0x55a9231a55b8 '__locale_struct'
|-TypedefDecl 0x55a9231a5cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55a9231a5cc0 '__locale_t' sugar
|   |-Typedef 0x55a9231a5c48 '__locale_t'
|   `-PointerType 0x55a9231a5bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55a9231a5b80 'struct __locale_struct' sugar
|       `-RecordType 0x55a9231a5640 'struct __locale_struct'
|         `-Record 0x55a9231a55b8 '__locale_struct'
|-FunctionDecl 0x55a9231a7110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55a9231a5d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55a9231a5de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a9231a5e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55a9231a5ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a9231a5f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55a9231a71d8 <col:40>
|-FunctionDecl 0x55a9231a73c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a9231a72a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55a9231a7470 <col:66>
|-FunctionDecl 0x55a9231a7580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a9231a74d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55a9231a7628 <col:69>
|-FunctionDecl 0x55a9231a7858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a9231a7690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a9231a7720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a9231a7908 <col:52>
|-FunctionDecl 0x55a9231a7ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a9231a7970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a9231a7a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a9231a7b60 <col:55>
|-FunctionDecl 0x55a9231a7cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55a9231a7be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55a9231a7da0 <col:62>
|-FunctionDecl 0x55a9231a7f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55a9231a7e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55a9231a7fc0 <col:60>
|-FunctionDecl 0x55a9231a82b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a9231a8118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a9231a8198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55a9231a8368 <col:44>
|-FunctionDecl 0x55a9231a8578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a9231a83d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a9231a8450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55a9231a8628 <col:49>
|-VarDecl 0x55a9231a8728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55a9231a87a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55a9231a8828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55a9231a88f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55a9231a8a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55a9231a8ac0 <col:42>
|-VarDecl 0x55a9231a8b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55a9231a8bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55a9231a8d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55a9231a8c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55a9231a8de0 <col:57>
|-FunctionDecl 0x55a9231a8ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a9231a8e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a9231a8f98 <col:56>
|-FunctionDecl 0x55a9231a90d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a9231a9018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55a9231a9178 <col:59>
|-FunctionDecl 0x55a9231a9280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55a9231a91e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55a9231a9328 <col:48>
| `-ConstAttr 0x55a9231a9380 <col:89>
|-FunctionDecl 0x55a9231a95e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a9231a9438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55a9231a94c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55a9231a9848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a9231a96d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a9231a9768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55a9231a98f8 <col:88>
|-FunctionDecl 0x55a9231a9a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a9231a9960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a9231a99f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55a9231a9b40 <col:88>
|-FunctionDecl 0x55a9231a9d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55a9231a9ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a9231a9c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55a9231a9e08 <line:208:22>
|-FunctionDecl 0x55a9231aa178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a9231a9e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a9231a9ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55a9231a9f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55a9231aa010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55a9231aa478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55a9231aa278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55a9231aa350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55a9231aa528 <col:85>
|-FunctionDecl 0x55a9231aa918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55a9231aa590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a9231aa6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55a9231aa7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55a9231aa9d0 <col:52>
|-FunctionDecl 0x55a9231aab48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55a9231aaa38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a9231aabf0 <col:61>
|-FunctionDecl 0x55a9231ab0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55a9231aac58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a9231aacd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55a9231aae08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55a9231aaef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55a9231ab1b0 <col:62>
|-FunctionDecl 0x55a9231ab3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55a9231ab218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a9231ab2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55a9231ab478 <line:221:22>
|-FunctionDecl 0x55a9231ab578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55a9231ab4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a9231ab620 <col:65>
|-TypedefDecl 0x55a9231ab690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55a923135fd0 'unsigned long'
|-RecordDecl 0x55a9231ab6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55a9231ab830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a9231ab898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a9231ab948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55a9231ab8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55a9231ab770 'union pthread_attr_t'
|     `-Record 0x55a9231ab6e8 'pthread_attr_t'
|-RecordDecl 0x55a9231ab9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55a9231abb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55a9231abb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55a9231abc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55a9231abbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55a9231aba20 'struct __pthread_internal_list'
|     `-Record 0x55a9231ab9a0 '__pthread_internal_list'
|-RecordDecl 0x55a9231abcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55a9231abd58 parent 0x55a923135e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55a9231abe30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a9231abe98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55a9231abf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55a9231abf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55a9231abfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55a9231ac038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55a9231b0110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55a9231b01c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55a9231b02b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55a9231b0318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a9231b04a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55a9231b0440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55a9231abd30 'pthread_mutex_t'
|     `-Record 0x55a9231abcb0 ''
|-RecordDecl 0x55a9231b0510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55a9231b0650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a9231b06b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a9231b0770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55a9231b0710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55a9231b0590 'pthread_mutexattr_t'
|     `-Record 0x55a9231b0510 ''
|-RecordDecl 0x55a9231b07e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55a9231b0888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55a9231b0950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a9231b09b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55a9231b0a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55a9231b0a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55a9231b0af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55a9231b0b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55a9231b0bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55a9231b0c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55a9231b0ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_5/mix047_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_5/mix047_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55a9231b0dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55a9231b0e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55a9231b0f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55a9231b0f10 'union pthread_cond_t' sugar
|   `-RecordType 0x55a9231b0860 'pthread_cond_t'
|     `-Record 0x55a9231b07e0 ''
|-RecordDecl 0x55a9231b0fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55a9231b2130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a9231b2198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a9231b2250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55a9231b21f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55a9231b1060 'pthread_condattr_t'
|     `-Record 0x55a9231b0fe0 ''
|-TypedefDecl 0x55a9231b22d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55a923135fb0 'unsigned int'
|-TypedefDecl 0x55a9231b2348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55a923135f10 'int'
|-RecordDecl 0x55a9231b23a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55a9231b2448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55a9231b2510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a9231b2578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55a9231b25e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55a9231b2648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55a9231b26b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55a9231b2718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55a9231b2780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55a9231b27e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55a9231b2850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55a9231b28b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55a9231b2920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55a9231b29d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_5/mix047_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_5/mix047_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55a9231b2a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a9231b2ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a9231b2c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55a9231b2bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55a9231b2420 'pthread_rwlock_t'
|     `-Record 0x55a9231b23a0 ''
|-RecordDecl 0x55a9231b2ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55a9231b2de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55a9231b2e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a9231b2f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55a9231b2ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55a9231b2d20 'pthread_rwlockattr_t'
|     `-Record 0x55a9231b2ca0 ''
|-TypedefDecl 0x55a9231b2f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55a923135f14 'volatile int' volatile
|   `-BuiltinType 0x55a923135f10 'int'
|-RecordDecl 0x55a9231b2fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55a9231b4140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55a9231b41a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a9231b4260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55a9231b4200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55a9231b3060 'pthread_barrier_t'
|     `-Record 0x55a9231b2fe0 ''
|-RecordDecl 0x55a9231b42d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55a9231b43d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a9231b4438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a9231b44f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55a9231b4490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55a9231b4350 'pthread_barrierattr_t'
|     `-Record 0x55a9231b42d0 ''
|-TypedefDecl 0x55a9231b4608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55a9231b45a0 'long [8]' 8 
|   `-BuiltinType 0x55a923135f30 'long'
|-EnumDecl 0x55a9231b4660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55a9231b4728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55a9231b4778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55a9231b47c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55a9231b4898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55a9231b48e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55a9231b4938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55a9231b4988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55a9231b4a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55a9231b49f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55a9231b49d8 <col:26> 'int' EnumConstant 0x55a9231b4898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55a9231b4a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55a9231b4a80 <col:29> 'int'
| |   `-DeclRefExpr 0x55a9231b4a60 <col:29> 'int' EnumConstant 0x55a9231b48e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55a9231b4b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55a9231b4b08 <col:30> 'int'
| |   `-DeclRefExpr 0x55a9231b4ae8 <col:30> 'int' EnumConstant 0x55a9231b4938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55a9231b4ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55a9231b4b90 <col:27> 'int'
|     `-DeclRefExpr 0x55a9231b4b70 <col:27> 'int' EnumConstant 0x55a9231b4a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55a9231b4bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55a9231b4cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55a9231b4d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55a9231b4d38 <col:30> 'int'
| |   `-DeclRefExpr 0x55a9231b4d18 <col:30> 'int' EnumConstant 0x55a9231b4cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55a9231b4da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55a9231b4e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55a9231b4e10 <col:29> 'int'
|     `-DeclRefExpr 0x55a9231b4df0 <col:29> 'int' EnumConstant 0x55a9231b4da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55a9231b4e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55a9231b4f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55a9231b4f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55a9231b4fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55a9231b5038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55a9231b5150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55a9231b51a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55a9231b51f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55a9231b5278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55a9231b5260 <col:31> 'int'
|     `-DeclRefExpr 0x55a9231b5240 <col:31> 'int' EnumConstant 0x55a9231b5150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55a9231b52c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55a9231b5398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55a9231b53e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55a9231b5438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55a9231b5508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55a9231b5558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55a9231b55a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55a9231b5678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55a9231b56c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55a9231b5718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55a9231b5958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55a9231b59c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55a9231b5a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55a9231b5b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55a9231b5b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55a9231b5c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55a9231b5cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55a9231b5d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55a9231b5dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55a9231b5e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55a9231b6488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55a9231b5f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55a9231b6030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a9231b6270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55a9231b62f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55a9231b6548 <col:47>
| |-NonNullAttr 0x55a9231b65a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55a9231b65d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55a9231b6700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55a9231b6630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55a9231b6958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55a9231b67b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55a9231b6838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55a9231b6b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55a9231b6a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55a9231b6bd0 <col:60>
|-FunctionDecl 0x55a9231b6d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55a9231b6dc0 <col:54>
| `-ConstAttr 0x55a9231b6e18 <col:95>
|-FunctionDecl 0x55a9231b6fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55a9231b6e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a9231b6ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55a9231b7098 <line:394:19>
| `-ConstAttr 0x55a9231b70f0 <col:60>
|-FunctionDecl 0x55a9231b8b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a9231b89d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a9231b8bb0 <col:71>
| `-NonNullAttr 0x55a9231b8c08 <col:112, col:126> 1
|-FunctionDecl 0x55a9231b8d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a9231b8c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a9231b8db8 <line:397:22>
| `-NonNullAttr 0x55a9231b8e10 <col:63, col:77> 1
|-FunctionDecl 0x55a9231b9038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55a9231b8e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a9231b8ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55a9231b90e8 <line:400:22>
| `-NonNullAttr 0x55a9231b9140 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231b9348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a9231b9188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a9231b9208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55a9231b93f8 <line:403:22>
| `-NonNullAttr 0x55a9231b9450 <col:63, col:77> 1
|-FunctionDecl 0x55a9231b96a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55a9231b9498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a9231b9540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55a9231b9758 <line:406:22>
| `-NonNullAttr 0x55a9231b97b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231ba9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a9231b97f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a9231b9870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a9231baa98 <line:409:22>
| `-NonNullAttr 0x55a9231baaf0 <col:63, col:77> 1
|-FunctionDecl 0x55a9231bad28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a9231bab38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a9231babc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a9231badd8 <line:412:22>
| `-NonNullAttr 0x55a9231bae30 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231bb068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a9231bae78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a9231baf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55a9231bb118 <col:37>
| `-NonNullAttr 0x55a9231bb170 <col:78, col:95> 1 2
|-FunctionDecl 0x55a9231bb358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231bb1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a9231bb238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55a9231bb408 <line:418:22>
| `-NonNullAttr 0x55a9231bb460 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231bb5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a9231bb4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a9231bb528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55a9231bb698 <line:420:22>
| `-NonNullAttr 0x55a9231bb6f0 <col:63, col:77> 1
|-FunctionDecl 0x55a9231bb898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231bb738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a9231bb7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55a9231bb948 <line:423:22>
| `-NonNullAttr 0x55a9231bb9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231bbb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a9231bba08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a9231bba88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55a9231bbbf8 <line:426:22>
| `-NonNullAttr 0x55a9231bbc50 <col:63, col:77> 1
|-FunctionDecl 0x55a9231bbdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231bbc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a9231bbd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55a9231bbea8 <line:429:22>
| `-NonNullAttr 0x55a9231bbf00 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231bc088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a9231bbf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a9231bbfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55a9231bc138 <line:431:22>
| `-NonNullAttr 0x55a9231bc190 <col:63, col:77> 1
|-FunctionDecl 0x55a9231bc3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55a9231bc1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a9231bc258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55a9231bc468 <line:434:22>
| |-NonNullAttr 0x55a9231bc4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55a9231bc4f8 <col:100> "" ""
|-FunctionDecl 0x55a9231bc708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55a9231bc548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a9231bc5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55a9231bc7b8 <line:437:22>
| |-NonNullAttr 0x55a9231bc810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55a9231bc848 <col:97> "" ""
|-FunctionDecl 0x55a9231bca48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a9231bc898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a9231bc910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a9231bcaf8 <line:440:22>
| `-NonNullAttr 0x55a9231bcb50 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231bccd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a9231bcb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a9231bcc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a9231bcd80 <line:443:22>
| `-NonNullAttr 0x55a9231bcdd8 <col:63, col:77> 1
|-FunctionDecl 0x55a9231bd0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a9231bce28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a9231bcea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55a9231bcf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a9231bd180 <line:447:22>
| `-NonNullAttr 0x55a9231bd1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55a9231bd488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55a9231bd230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a9231bd2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55a9231bd328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a9231bd540 <col:43>
| `-NonNullAttr 0x55a9231bd598 <col:84, col:98> 1
|-FunctionDecl 0x55a9231bd858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a9231bd5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a9231bd668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55a9231bd6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55a9231bd910 <line:452:22>
| `-NonNullAttr 0x55a9231bd968 <col:63, col:77> 3
|-FunctionDecl 0x55a9231bdc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a9231bd9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a9231bda60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55a9231bdaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a9231bdd30 <line:456:22>
| `-NonNullAttr 0x55a9231bdd88 <col:63, col:80> 2 3
|-FunctionDecl 0x55a9231bdf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55a9231bddd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a9231bde58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55a9231be028 <line:458:22>
|-FunctionDecl 0x55a9231be3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55a9231be0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55a9231be290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55a9231be4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55a9231be650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55a9231be530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55a9231be5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55a9231be838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55a9231be718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55a9231be798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55a9231be9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55a9231be8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55a9231beb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55a9231bebd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55a9231bec78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55a9231bed68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55a9231bedd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55a9231befa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_5/mix047_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55a9231bf098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55a9231bf150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55a9231bf0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55a9231bec50 '__pthread_unwind_buf_t'
| |   `-Record 0x55a9231bebd0 ''
| `-AlignedAttr 0x55a9231bf1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55a9231bf220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55a9231bf380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55a9231bf3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55a9231bf450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55a9231bf4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55a9231bf6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a9231bf5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a9231bf808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a9231bf778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a9231bfa00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a9231bf8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55a9231bfaa8 <line:487:22>
|-RecordDecl 0x55a9231bfb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55a9231bfe18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55a9231bfc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55a9231bfcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55a9231bfec8 <col:86>
| `-ReturnsTwiceAttr 0x55a9231bff20 <col:12> Implicit
|-FunctionDecl 0x55a9231c0248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a9231bfff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55a9231c0100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a9231c02f8 <line:493:22>
| `-NonNullAttr 0x55a9231c0350 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c04c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a9231c0398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a9231c0570 <line:495:22>
| `-NonNullAttr 0x55a9231c05c8 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c06d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a9231c0618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a9231c0778 <line:497:22>
| `-NonNullAttr 0x55a9231c07d0 <col:52, col:66> 1
|-FunctionDecl 0x55a9231c08d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a9231c0818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a9231c0978 <line:499:22>
| `-NonNullAttr 0x55a9231c09d0 <col:52, col:66> 1
|-FunctionDecl 0x55a9231c1c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a9231c1a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a9231c1ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a9231c1cd8 <col:36>
| `-NonNullAttr 0x55a9231c1d30 <col:66, col:83> 1 2
|-FunctionDecl 0x55a9231c1e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a9231c1d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a9231c1ed8 <line:504:22>
| `-NonNullAttr 0x55a9231c1f30 <col:52, col:66> 1
|-FunctionDecl 0x55a9231c21c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231c1fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a9231c2060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a9231c2278 <line:508:22>
| `-NonNullAttr 0x55a9231c22d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231c2598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55a9231c2318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a9231c2398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55a9231c2418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55a9231c2650 <line:512:22>
| `-NonNullAttr 0x55a9231c26a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55a9231c27b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a9231c26f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a9231c2858 <line:514:22>
| `-NonNullAttr 0x55a9231c28b0 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c2ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a9231c2960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a9231c2b80 <line:516:22>
| `-NonNullAttr 0x55a9231c2bd8 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c2ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a9231c2c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a9231c2d88 <line:518:22>
| `-NonNullAttr 0x55a9231c2de0 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c3008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231c2e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a9231c2ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a9231c30b8 <line:522:22>
| `-NonNullAttr 0x55a9231c3110 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231c3318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a9231c3158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a9231c31d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55a9231c33c8 <line:525:22>
| `-NonNullAttr 0x55a9231c3420 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c35c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231c3468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a9231c34e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55a9231c3678 <line:528:22>
| `-NonNullAttr 0x55a9231c36d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231c3858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a9231c3718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a9231c3798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55a9231c3908 <line:530:22>
| `-NonNullAttr 0x55a9231c3960 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c3b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231c39a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a9231c3a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55a9231c3bd0 <line:534:22>
| `-NonNullAttr 0x55a9231c3c28 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231c3db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a9231c3c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a9231c3cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55a9231c3e68 <line:537:22>
| `-NonNullAttr 0x55a9231c3ec0 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c4068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231c3f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a9231c3f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a9231c4118 <line:541:22>
| `-NonNullAttr 0x55a9231c4170 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231c42f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a9231c41b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a9231c4238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55a9231c43a8 <line:544:22>
| `-NonNullAttr 0x55a9231c4400 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c45e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55a9231c4448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a9231c44c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55a9231c4698 <line:547:22>
| `-NonNullAttr 0x55a9231c46f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231c4878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a9231c4738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a9231c47b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55a9231c4928 <line:550:22>
| `-NonNullAttr 0x55a9231c4980 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c5cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55a9231c5aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a9231c5bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55a9231c5da8 <col:29>
| `-NonNullAttr 0x55a9231c5e00 <col:70, col:84> 1
|-FunctionDecl 0x55a9231c5f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a9231c5e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a9231c6020 <line:555:22>
| `-NonNullAttr 0x55a9231c6078 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c6180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a9231c60c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a9231c6228 <line:557:22>
| `-NonNullAttr 0x55a9231c6280 <col:52, col:66> 1
|-FunctionDecl 0x55a9231c6380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a9231c62c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a9231c6428 <line:559:19>
| `-NonNullAttr 0x55a9231c6480 <col:49, col:63> 1
|-FunctionDecl 0x55a9231c66b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a9231c64c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a9231c6558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a9231c6768 <col:39>
| `-NonNullAttr 0x55a9231c67c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55a9231c68c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a9231c6808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a9231c6968 <line:564:22>
| `-NonNullAttr 0x55a9231c69c0 <col:52, col:66> 1
|-FunctionDecl 0x55a9231c6b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a9231c6a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a9231c6bd0 <line:566:22>
| `-NonNullAttr 0x55a9231c6c28 <col:52, col:66> 1
|-FunctionDecl 0x55a9231c6de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a9231c6c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a9231c6d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a9231c6e98 <col:39>
| `-NonNullAttr 0x55a9231c6ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55a9231c6ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a9231c6f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a9231c7098 <line:571:22>
| `-NonNullAttr 0x55a9231c70f0 <col:52, col:66> 1
|-FunctionDecl 0x55a9231c72d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a9231c71a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a9231c7380 <line:573:22>
| `-NonNullAttr 0x55a9231c73d8 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c74e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a9231c7428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a9231c7588 <line:575:22>
| `-NonNullAttr 0x55a9231c75e0 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c7808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231c7628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a9231c76a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a9231c78b8 <line:579:22>
| `-NonNullAttr 0x55a9231c7910 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231c7b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a9231c7958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a9231c79d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55a9231c7be8 <line:582:22>
| `-NonNullAttr 0x55a9231c7c40 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c7de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231c7c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a9231c7d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55a9231c7e98 <line:586:22>
| `-NonNullAttr 0x55a9231c7ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231c8078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a9231c7f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a9231c7fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55a9231c8128 <col:36>
| `-NonNullAttr 0x55a9231c8180 <col:77, col:91> 1
|-FunctionDecl 0x55a9231c84b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55a9231c8260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a9231c8370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55a9231c8568 <line:591:22>
| `-NonNullAttr 0x55a9231c85c0 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c8738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a9231c8608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a9231c87e0 <line:593:22>
| `-NonNullAttr 0x55a9231c8838 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c8940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a9231c8888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a9231c89e8 <line:595:22>
| `-NonNullAttr 0x55a9231c8a40 <col:52, col:66> 1
|-FunctionDecl 0x55a9231c8b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a9231c8aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a9231c8c00 <line:597:22>
| `-NonNullAttr 0x55a9231c8c58 <col:52, col:66> 1
|-FunctionDecl 0x55a9231c8e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55a9231c8ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a9231c8d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55a9231c8f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55a9231c9268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a9231c8fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a9231c9030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a9231c90c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55a9231c9320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55a9231c9538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a9231c9400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a9231c95e0 <line:606:22>
| `-NonNullAttr 0x55a9231c9638 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c9740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a9231c9688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a9231c97e8 <line:608:22>
| `-NonNullAttr 0x55a9231c9840 <col:63, col:77> 1
|-FunctionDecl 0x55a9231c9aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231c9888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a9231c9908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a9231c9b50 <line:612:22>
| `-NonNullAttr 0x55a9231c9ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231c9db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55a9231c9bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a9231c9c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55a9231c9e68 <col:37>
| `-NonNullAttr 0x55a9231c9ec0 <col:78, col:92> 1
|-FunctionDecl 0x55a9231ca0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55a9231c9f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a9231c9fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55a9231ca188 <line:618:22>
| `-NonNullAttr 0x55a9231ca1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231ca3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55a9231ca228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a9231ca2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55a9231ca458 <line:621:22>
| `-NonNullAttr 0x55a9231ca4b0 <col:63, col:77> 1
|-FunctionDecl 0x55a9231ca758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55a9231ca590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55a9231ca610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55a9231ca808 <line:623:22>
| `-NonNullAttr 0x55a9231ca860 <col:63, col:77> 1
|-FunctionDecl 0x55a9231ca9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a9231ca8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a9231caab0 <line:625:22>
| `-NonNullAttr 0x55a9231cab08 <col:63, col:77> 1
|-FunctionDecl 0x55a9231cac10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a9231cab58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a9231cacb8 <line:627:22>
| `-NonNullAttr 0x55a9231cad10 <col:52, col:66> 1
|-FunctionDecl 0x55a9231cae10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a9231cad58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a9231caeb8 <line:629:22>
| `-NonNullAttr 0x55a9231caf10 <col:52, col:66> 1
|-FunctionDecl 0x55a9231cb010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a9231caf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a9231cb0b8 <line:631:22>
| `-NonNullAttr 0x55a9231cb110 <col:52, col:66> 1
|-FunctionDecl 0x55a9231cb4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55a9231cb1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55a9231cb300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a9231cb380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55a9231cb5a0 <line:635:22>
| `-NonNullAttr 0x55a9231cb5f8 <col:63, col:77> 1
|-FunctionDecl 0x55a9231cb778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a9231cb648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a9231cb820 <line:637:22>
| `-NonNullAttr 0x55a9231cb878 <col:63, col:77> 1
|-FunctionDecl 0x55a9231cb980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a9231cb8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a9231cba28 <line:639:22>
| `-NonNullAttr 0x55a9231cba80 <col:52, col:66> 1
|-FunctionDecl 0x55a9231ccc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a9231ccb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a9231ccd30 <line:641:22>
| `-NonNullAttr 0x55a9231ccd88 <col:63, col:77> 1
|-FunctionDecl 0x55a9231cce90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a9231ccdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a9231ccf38 <line:643:22>
| `-NonNullAttr 0x55a9231ccf90 <col:63, col:77> 1
|-FunctionDecl 0x55a9231cd1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a9231ccfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a9231cd058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a9231cd268 <line:647:22>
| `-NonNullAttr 0x55a9231cd2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a9231cd4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55a9231cd308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55a9231cd388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55a9231cd578 <line:650:22>
| `-NonNullAttr 0x55a9231cd5d0 <col:63, col:77> 1
|-FunctionDecl 0x55a9231cd918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55a9231cd6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55a9231cd7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55a9231cd9c8 <line:653:22>
| `-NonNullAttr 0x55a9231cda20 <col:63, col:77> 1
|-FunctionDecl 0x55a9231cdb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55a9231cda68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a9231cdc30 <col:69>
|-FunctionDecl 0x55a9231cdda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55a9231cdc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a9231cde50 <col:72>
|-FunctionDecl 0x55a9231ce088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55a9231cdeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55a9231cdf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55a9231ce138 <col:44>
|-FunctionDecl 0x55a9231ce358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55a9231ce1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a9231ce218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55a9231ce408 <line:660:22>
| `-NonNullAttr 0x55a9231ce460 <col:63, col:77> 2
|-FunctionDecl 0x55a9231ce8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55a9231ce540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55a9231ce650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55a9231ce760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55a9231ce960 <col:47>
|-FunctionDecl 0x55a9231ceaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55a9231ce9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a9231cec48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55a9231cebb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a9231ceda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55a9231ced08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a9231ceef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55a9231cee60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a9231cefc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55a9231cf080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55a9231cf140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55a9231cf1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55a9231cf278 prev 0x55a9231cf1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55a9231cf2e0 <col:24> 'int' 0
|-VarDecl 0x55a9231cf318 <line:674:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55a9231cf398 prev 0x55a9231cf318 <line:675:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55a9231cf400 <col:27> 'int' 0
|-VarDecl 0x55a9231cf438 <line:676:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55a9231cf4b8 prev 0x55a9231cf438 <line:677:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55a9231cf520 <col:27> 'int' 0
|-VarDecl 0x55a9231cf558 <line:678:1, col:5> col:5 used a 'int'
|-VarDecl 0x55a9231cf5d8 prev 0x55a9231cf558 <line:679:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55a9231cf640 <col:9> 'int' 0
|-VarDecl 0x55a9231cf678 <line:680:1, col:5> col:5 used b 'int'
|-VarDecl 0x55a9231cf6f8 prev 0x55a9231cf678 <line:681:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x55a9231cf760 <col:9> 'int' 0
|-VarDecl 0x55a9231cf790 <line:682:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x55a9231cf810 <line:683:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x55a9231cf888 <line:684:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x55a9231cf900 <line:685:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x55a9231cf978 <line:686:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x55a9231cf9f0 <line:687:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x55a9231cfa68 <line:688:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x55a9231cfb00 <line:689:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x55a9231cfb78 <line:690:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x55a9231cfbf0 <line:691:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x55a9231cfc68 <line:692:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x55a9231cfce0 <line:693:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x55a9231cfd58 <line:694:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x55a9231cfdd8 <line:695:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x55a9231cfe58 <line:696:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x55a9231cfed0 <line:697:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x55a9231cff50 <line:698:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x55a9231cffc8 <line:699:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x55a9231d0040 <line:700:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55a9231d00b8 <line:701:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55a9231d0138 <line:702:1, col:5> col:5 used x 'int'
|-VarDecl 0x55a9231d01b8 prev 0x55a9231d0138 <line:703:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55a9231d0220 <col:9> 'int' 0
|-VarDecl 0x55a9231d0258 <line:704:1, col:5> col:5 used y 'int'
|-VarDecl 0x55a9231d02d8 prev 0x55a9231d0258 <line:705:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55a9231d0340 <col:9> 'int' 0
|-VarDecl 0x55a9231d0378 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x55a9231d03f8 prev 0x55a9231d0378 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55a9231d0460 <col:9> 'int' 0
|-VarDecl 0x55a9231d0490 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55a9231d0508 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55a9231d0620 prev 0x55a9231ceaf0 <line:710:1, line:739:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55a9231d0588 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a9231d1ee8 <line:711:1, line:739:1>
|   |-CallExpr 0x55a9231d0738 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d0720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d06c8 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d07b0 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a9231d0758 <col:3> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55a9231d0798 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a9231d0778 <col:15> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55a9231d0810 <line:714:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a9231d07d0 <col:3> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x55a9231d07f0 <col:15> 'int' 1
|   |-BinaryOperator 0x55a9231d0888 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d0830 <col:3> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d0870 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a9231d0850 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a9231d0920 <line:716:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d08a8 <col:3> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55a9231d08f8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a9231d08c8 <col:27> 'int' 1
|   |-CallExpr 0x55a9231d0aa8 <line:717:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55a9231d0a90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55a9231d0940 <col:3> 'void (int)' Function 0x55a923175bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55a9231d0a40 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55a9231d0a20 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55a9231d0a00 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55a9231d09b8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55a9231d09a0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55a9231d0960 <col:23> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55a9231d09e8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55a9231d09d0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55a9231d0980 <col:41> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a9231d0b48 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d0ad0 <col:3> '_Bool' lvalue Var 0x55a9231cfb00 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d0b30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a9231d0b10 <col:20> '_Bool' lvalue Var 0x55a9231cf888 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55a9231d0bc0 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d0b68 <col:3> '_Bool' lvalue Var 0x55a9231cfb78 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d0ba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a9231d0b88 <col:20> '_Bool' lvalue Var 0x55a9231cf900 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55a9231d0c38 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d0be0 <col:3> '_Bool' lvalue Var 0x55a9231cfbf0 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d0c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a9231d0c00 <col:20> '_Bool' lvalue Var 0x55a9231cf978 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55a9231d0cb0 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d0c58 <col:3> '_Bool' lvalue Var 0x55a9231cfc68 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d0c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a9231d0c78 <col:20> '_Bool' lvalue Var 0x55a9231cf9f0 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55a9231d0d28 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d0cd0 <col:3> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d0d10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a9231d0cf0 <col:20> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55a9231d0dc0 <line:723:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d0d48 <col:3> '_Bool' lvalue Var 0x55a9231cf900 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55a9231d0d98 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a9231d0d68 <col:27> 'int' 1
|   |-CallExpr 0x55a9231d0e18 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d0e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d0de0 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d0e70 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d0e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d0e38 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d0ed0 <line:726:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a9231d0e90 <col:3> 'int' lvalue Var 0x55a9231d01b8 'x' 'int'
|   | `-IntegerLiteral 0x55a9231d0eb0 <col:7> 'int' 1
|   |-CallExpr 0x55a9231d0f28 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d0f10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d0ef0 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d0f80 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d0f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d0f48 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d1268 <line:729:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a9231d0fa0 <col:3> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   | `-ConditionalOperator 0x55a9231d1238 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a9231d1060 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a9231d1018 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a9231d1000 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a9231d0fc0 <col:7> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a9231d1048 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a9231d1030 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a9231d0fe0 <col:25> '_Bool' lvalue Var 0x55a9231cf900 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55a9231d1220 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d1080 <col:42> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a9231d1200 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a9231d11d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a9231d1140 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a9231d10f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a9231d10e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a9231d10a0 <col:55> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a9231d1128 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a9231d1110 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a9231d10c0 <col:73> '_Bool' lvalue Var 0x55a9231cfb78 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55a9231d11a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a9231d1160 <col:90> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a9231d11b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d1180 <col:102> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   |-BinaryOperator 0x55a9231d1470 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d1288 <col:3> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d1458 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d1428 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a9231d1348 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a9231d1300 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a9231d12e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a9231d12a8 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a9231d1330 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a9231d1318 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a9231d12c8 <col:38> '_Bool' lvalue Var 0x55a9231cf900 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d13e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d1398 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d1368 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d1410 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d13f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d13c0 <col:66> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a9231d1758 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d1490 <col:3> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d1740 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d1710 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a9231d1630 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a9231d1550 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a9231d1508 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a9231d14f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a9231d14b0 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a9231d1538 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a9231d1520 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a9231d14d0 <col:38> '_Bool' lvalue Var 0x55a9231cf900 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55a9231d1610 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a9231d15c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a9231d15b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a9231d1570 <col:56> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a9231d15f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a9231d15e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a9231d1590 <col:74> '_Bool' lvalue Var 0x55a9231cfb78 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d16c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d1680 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d1650 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d16f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d16e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d16a8 <col:102> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a9231d1960 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d1778 <col:3> '_Bool' lvalue Var 0x55a9231cf900 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d1948 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d1918 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a9231d1838 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a9231d17f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a9231d17d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a9231d1798 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a9231d1820 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a9231d1808 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a9231d17b8 <col:38> '_Bool' lvalue Var 0x55a9231cf900 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d18d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d1888 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d1858 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d1900 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d18e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d18b0 <col:66> '_Bool' lvalue Var 0x55a9231cf900 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55a9231d1c68 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d1980 <col:3> '_Bool' lvalue Var 0x55a9231cfb78 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d1c50 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d1c20 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a9231d1b40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a9231d1a40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a9231d19f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a9231d19e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a9231d19a0 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a9231d1a28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a9231d1a10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a9231d19c0 <col:38> '_Bool' lvalue Var 0x55a9231cf900 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55a9231d1b20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a9231d1ab8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a9231d1aa0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a9231d1a60 <col:56> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a9231d1ae8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a9231d1ad0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a9231d1a80 <col:74> '_Bool' lvalue Var 0x55a9231cfb78 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d1bd8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d1b90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d1b60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d1c08 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d1bf0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d1bb8 <col:102> '_Bool' lvalue Var 0x55a9231cfb78 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55a9231d1cc0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d1ca8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d1c88 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d1d18 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d1d00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d1ce0 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d1dd0 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a9231d1d38 <col:3> 'int' lvalue Var 0x55a9231cf278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a9231d1db0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a9231d1d98 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d1d58 <col:22> 'int' lvalue Var 0x55a9231cf278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a9231d1d78 <col:41> 'int' 1
|   |-CallExpr 0x55a9231d1e28 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d1e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d1df0 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a9231d1ed8 <line:738:3, col:36>
|     `-CallExpr 0x55a9231d1eb8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a9231d1ea0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a9231d1e48 <col:10> 'void *(void)' Function 0x55a923175958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a9231d2080 prev 0x55a9231cec48 <line:740:1, line:759:1> line:740:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55a9231d1fe8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a9231d32b0 <line:741:1, line:759:1>
|   |-CallExpr 0x55a9231d2160 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d2148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d2128 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d21c0 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a9231d2180 <col:3> 'int' lvalue Var 0x55a9231d01b8 'x' 'int'
|   | `-IntegerLiteral 0x55a9231d21a0 <col:7> 'int' 2
|   |-CallExpr 0x55a9231d2218 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d2200 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d21e0 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d2270 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d2258 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d2238 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d22d0 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a9231d2290 <col:3> 'int' lvalue Var 0x55a9231d02d8 'y' 'int'
|   | `-IntegerLiteral 0x55a9231d22b0 <col:7> 'int' 1
|   |-CallExpr 0x55a9231d2328 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d2310 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d22f0 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d2380 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d2368 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d2348 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d2668 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a9231d23a0 <col:3> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   | `-ConditionalOperator 0x55a9231d2638 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a9231d2460 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a9231d2418 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a9231d2400 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a9231d23c0 <col:7> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a9231d2448 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a9231d2430 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a9231d23e0 <col:25> '_Bool' lvalue Var 0x55a9231cf978 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a9231d2620 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d2480 <col:42> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a9231d2600 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a9231d25d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a9231d2540 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a9231d24f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a9231d24e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a9231d24a0 <col:55> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a9231d2528 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a9231d2510 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a9231d24c0 <col:73> '_Bool' lvalue Var 0x55a9231cfbf0 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55a9231d25a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a9231d2560 <col:90> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a9231d25b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d2580 <col:102> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   |-BinaryOperator 0x55a9231d2870 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d2688 <col:3> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d2858 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d2828 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a9231d2748 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a9231d2700 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a9231d26e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a9231d26a8 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a9231d2730 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a9231d2718 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a9231d26c8 <col:38> '_Bool' lvalue Var 0x55a9231cf978 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d27e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d2798 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d2768 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d2810 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d27f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d27c0 <col:66> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a9231d2b78 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d2890 <col:3> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d2b60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d2b30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a9231d2a30 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a9231d2950 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a9231d2908 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a9231d28f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a9231d28b0 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a9231d2938 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a9231d2920 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a9231d28d0 <col:38> '_Bool' lvalue Var 0x55a9231cf978 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55a9231d2a10 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a9231d29c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a9231d29b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a9231d2970 <col:56> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a9231d29f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a9231d29e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a9231d2990 <col:74> '_Bool' lvalue Var 0x55a9231cfbf0 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d2ac8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d2a80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d2a50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d2af8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d2ae0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d2aa8 <col:102> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a9231d2d80 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d2b98 <col:3> '_Bool' lvalue Var 0x55a9231cf978 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d2d68 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d2d38 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a9231d2c58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a9231d2c10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a9231d2bf8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a9231d2bb8 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a9231d2c40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a9231d2c28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a9231d2bd8 <col:38> '_Bool' lvalue Var 0x55a9231cf978 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d2cf0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d2ca8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d2c78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d2d20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d2d08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d2cd0 <col:66> '_Bool' lvalue Var 0x55a9231cf978 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55a9231d3068 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d2da0 <col:3> '_Bool' lvalue Var 0x55a9231cfbf0 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d3050 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d3020 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a9231d2f40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a9231d2e60 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a9231d2e18 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a9231d2e00 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a9231d2dc0 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a9231d2e48 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a9231d2e30 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a9231d2de0 <col:38> '_Bool' lvalue Var 0x55a9231cf978 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55a9231d2f20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a9231d2ed8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a9231d2ec0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a9231d2e80 <col:56> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a9231d2f08 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a9231d2ef0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a9231d2ea0 <col:74> '_Bool' lvalue Var 0x55a9231cfbf0 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d2fd8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d2f90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d2f60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d3008 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d2ff0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d2fb8 <col:102> '_Bool' lvalue Var 0x55a9231cfbf0 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55a9231d30c0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d30a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d3088 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d3118 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d3100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d30e0 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d31d0 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a9231d3138 <col:3> 'int' lvalue Var 0x55a9231cf278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a9231d31b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a9231d3198 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d3158 <col:22> 'int' lvalue Var 0x55a9231cf278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a9231d3178 <col:41> 'int' 1
|   |-CallExpr 0x55a9231d3228 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d3210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d31f0 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a9231d32a0 <line:758:3, col:36>
|     `-CallExpr 0x55a9231d3280 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a9231d3268 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a9231d3248 <col:10> 'void *(void)' Function 0x55a923175958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a9231d33f8 prev 0x55a9231ceda0 <line:760:1, line:779:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55a9231d3360 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a9231d4638 <line:761:1, line:779:1>
|   |-CallExpr 0x55a9231d34d8 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d34c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d34a0 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d3538 <line:763:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a9231d34f8 <col:3> 'int' lvalue Var 0x55a9231d02d8 'y' 'int'
|   | `-IntegerLiteral 0x55a9231d3518 <col:7> 'int' 2
|   |-CallExpr 0x55a9231d3590 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d3578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d3558 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d35e8 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d35d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d35b0 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d3648 <line:766:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a9231d3608 <col:3> 'int' lvalue Var 0x55a9231d03f8 'z' 'int'
|   | `-IntegerLiteral 0x55a9231d3628 <col:7> 'int' 1
|   |-CallExpr 0x55a9231d36a0 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d3688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d3668 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d36f8 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d36e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d36c0 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d39e0 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a9231d3718 <col:3> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   | `-ConditionalOperator 0x55a9231d39b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a9231d37d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a9231d3790 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a9231d3778 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a9231d3738 <col:7> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a9231d37c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a9231d37a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a9231d3758 <col:25> '_Bool' lvalue Var 0x55a9231cf9f0 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55a9231d3998 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d37f8 <col:42> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a9231d3978 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a9231d3948 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a9231d38b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a9231d3870 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a9231d3858 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a9231d3818 <col:55> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a9231d38a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a9231d3888 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a9231d3838 <col:73> '_Bool' lvalue Var 0x55a9231cfc68 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55a9231d3918 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a9231d38d8 <col:90> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a9231d3930 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d38f8 <col:102> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   |-BinaryOperator 0x55a9231d3c18 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d3a00 <col:3> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d3c00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d3bd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a9231d3ac0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a9231d3a78 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a9231d3a60 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a9231d3a20 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a9231d3aa8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a9231d3a90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a9231d3a40 <col:38> '_Bool' lvalue Var 0x55a9231cf9f0 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d3b88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d3b40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d3ae0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d3bb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d3ba0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d3b68 <col:66> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a9231d3f00 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d3c38 <col:3> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d3ee8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d3eb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a9231d3dd8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a9231d3cf8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a9231d3cb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a9231d3c98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a9231d3c58 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a9231d3ce0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a9231d3cc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a9231d3c78 <col:38> '_Bool' lvalue Var 0x55a9231cf9f0 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55a9231d3db8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a9231d3d70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a9231d3d58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a9231d3d18 <col:56> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a9231d3da0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a9231d3d88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a9231d3d38 <col:74> '_Bool' lvalue Var 0x55a9231cfc68 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d3e70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d3e28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d3df8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d3ea0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d3e88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d3e50 <col:102> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a9231d4108 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d3f20 <col:3> '_Bool' lvalue Var 0x55a9231cf9f0 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d40f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d40c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a9231d3fe0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a9231d3f98 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a9231d3f80 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a9231d3f40 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a9231d3fc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a9231d3fb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a9231d3f60 <col:38> '_Bool' lvalue Var 0x55a9231cf9f0 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d4078 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d4030 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d4000 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d40a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d4090 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d4058 <col:66> '_Bool' lvalue Var 0x55a9231cf9f0 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55a9231d43f0 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d4128 <col:3> '_Bool' lvalue Var 0x55a9231cfc68 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d43d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d43a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a9231d42c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a9231d41e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a9231d41a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a9231d4188 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a9231d4148 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a9231d41d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a9231d41b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a9231d4168 <col:38> '_Bool' lvalue Var 0x55a9231cf9f0 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55a9231d42a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a9231d4260 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a9231d4248 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a9231d4208 <col:56> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a9231d4290 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a9231d4278 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a9231d4228 <col:74> '_Bool' lvalue Var 0x55a9231cfc68 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d4360 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d4318 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d42e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d4390 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d4378 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d4340 <col:102> '_Bool' lvalue Var 0x55a9231cfc68 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55a9231d4448 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d4430 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d4410 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d44a0 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d4488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d4468 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d4558 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a9231d44c0 <col:3> 'int' lvalue Var 0x55a9231cf278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a9231d4538 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a9231d4520 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d44e0 <col:22> 'int' lvalue Var 0x55a9231cf278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a9231d4500 <col:41> 'int' 1
|   |-CallExpr 0x55a9231d45b0 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d4598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d4578 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a9231d4628 <line:778:3, col:36>
|     `-CallExpr 0x55a9231d4608 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a9231d45f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a9231d45d0 <col:10> 'void *(void)' Function 0x55a923175958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a9231d4780 prev 0x55a9231ceef8 <line:780:1, line:818:1> line:780:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55a9231d46e8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a9231d85a0 <line:781:1, line:818:1>
|   |-CallExpr 0x55a9231d4860 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d4848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d4828 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d48c0 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a9231d4880 <col:3> 'int' lvalue Var 0x55a9231d03f8 'z' 'int'
|   | `-IntegerLiteral 0x55a9231d48a0 <col:7> 'int' 2
|   |-CallExpr 0x55a9231d4918 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d4900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d48e0 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d4970 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d4958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d4938 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d49d0 <line:786:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a9231d4990 <col:3> 'int' lvalue Var 0x55a9231cf5d8 'a' 'int'
|   | `-IntegerLiteral 0x55a9231d49b0 <col:7> 'int' 1
|   |-CallExpr 0x55a9231d4a28 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d4a10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d49f0 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d4a80 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d4a68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d4a48 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d4af8 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a9231d4aa0 <col:3> 'int' lvalue Var 0x55a9231cf398 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55a9231d4ae0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a9231d4ac0 <col:25> 'int' lvalue Var 0x55a9231cf5d8 'a' 'int'
|   |-CallExpr 0x55a9231d4b68 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d4b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d4b18 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d4bc0 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d4ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d4b88 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d4c70 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d4be0 <col:3> '_Bool' lvalue Var 0x55a9231d0490 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d4c58 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55a9231d4c38 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55a9231d4c20 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55a9231d4c00 <col:19> 'void *(void)' Function 0x55a923175958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55a9231d4d20 <line:793:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d4c90 <col:3> '_Bool' lvalue Var 0x55a9231d0508 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d4d08 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55a9231d4ce8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55a9231d4cd0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55a9231d4cb0 <col:19> 'void *(void)' Function 0x55a923175958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55a9231d4d98 <line:794:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d4d40 <col:3> '_Bool' lvalue Var 0x55a9231cf790 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d4d80 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a9231d4d60 <col:21> '_Bool' lvalue Var 0x55a9231d0508 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55a9231d4e10 <line:795:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a9231d4db8 <col:3> 'int' lvalue Var 0x55a9231cf810 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55a9231d4df8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a9231d4dd8 <col:15> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   |-BinaryOperator 0x55a9231d5248 <line:796:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55a9231d4e30 <col:3> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   | `-ConditionalOperator 0x55a9231d5218 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55a9231d5040 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55a9231d4f60 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55a9231d4e88 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55a9231d4e70 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55a9231d4e50 <col:8> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55a9231d4f40 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55a9231d4ed8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55a9231d4ec0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55a9231d4ea0 <col:27> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55a9231d4f28 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55a9231d4f10 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55a9231d4ef0 <col:46> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55a9231d5020 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55a9231d4fb8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55a9231d4fa0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55a9231d4f80 <col:65> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55a9231d5008 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55a9231d4ff0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55a9231d4fd0 <col:84> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55a9231d5200 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d5060 <col:101> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   |   `-ParenExpr 0x55a9231d51e0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55a9231d51b0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55a9231d5120 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a9231d50d8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a9231d50c0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a9231d5080 <col:106> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a9231d5108 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a9231d50f0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a9231d50a0 <col:124> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55a9231d5180 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a9231d5140 <col:141> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55a9231d5198 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d5160 <col:153> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55a9231d5758 <line:797:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a9231d5268 <col:3> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x55a9231d5728 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a9231d56f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a9231d56e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a9231d5288 <col:15> '_Bool' lvalue Var 0x55a9231d0508 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a9231d5710 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d52a8 <col:31> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a9231d56c0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a9231d5690 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a9231d54b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a9231d53d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a9231d5300 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a9231d52e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a9231d52c8 <col:45> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a9231d53b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a9231d5350 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a9231d5338 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a9231d5318 <col:64> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55a9231d53a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a9231d5388 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a9231d5368 <col:83> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a9231d5498 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a9231d5430 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a9231d5418 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a9231d53f8 <col:102> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55a9231d5480 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a9231d5468 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a9231d5448 <col:121> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55a9231d5678 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a9231d54d8 <col:138> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x55a9231d5658 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a9231d5628 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a9231d5598 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a9231d5550 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a9231d5538 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a9231d54f8 <col:151> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a9231d5580 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a9231d5568 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a9231d5518 <col:169> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55a9231d55f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a9231d55b8 <col:186> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55a9231d5610 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a9231d55d8 <col:198> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55a9231d5c90 <line:798:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a9231d5778 <col:3> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x55a9231d5c60 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a9231d5c30 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a9231d5c18 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a9231d5798 <col:15> '_Bool' lvalue Var 0x55a9231d0508 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a9231d5c48 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d57b8 <col:31> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x55a9231d5bf8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a9231d5bc8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a9231d59c8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a9231d58e8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a9231d5810 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a9231d57f8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a9231d57d8 <col:45> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a9231d58c8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a9231d5860 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a9231d5848 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a9231d5828 <col:64> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55a9231d58b0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a9231d5898 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a9231d5878 <col:83> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a9231d59a8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a9231d5940 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a9231d5928 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a9231d5908 <col:102> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55a9231d5990 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a9231d5978 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a9231d5958 <col:121> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55a9231d5bb0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a9231d59e8 <col:138> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x55a9231d5b90 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a9231d5b60 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a9231d5aa8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a9231d5a60 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a9231d5a48 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a9231d5a08 <col:151> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a9231d5a90 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a9231d5a78 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a9231d5a28 <col:169> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55a9231d5b08 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a9231d5ac8 <col:186> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55a9231d5b20 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a9231d5ae8 <col:198> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55a9231d6238 <line:799:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d5cb0 <col:3> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d6220 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d61f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a9231d61a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a9231d6190 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a9231d5cd0 <col:20> '_Bool' lvalue Var 0x55a9231d0508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d61d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a9231d61c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a9231d5cf0 <col:36> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55a9231d6170 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a9231d6140 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a9231d5f00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a9231d5e20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a9231d5d48 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a9231d5d30 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a9231d5d10 <col:55> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a9231d5e00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a9231d5d98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a9231d5d80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a9231d5d60 <col:74> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55a9231d5de8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a9231d5dd0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a9231d5db0 <col:93> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a9231d5ee0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a9231d5e78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a9231d5e60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a9231d5e40 <col:112> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55a9231d5ec8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a9231d5eb0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a9231d5e90 <col:131> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55a9231d6128 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a9231d6110 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a9231d5f20 <col:148> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55a9231d60f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a9231d60c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a9231d5fe0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a9231d5f98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a9231d5f80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a9231d5f40 <col:166> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a9231d5fc8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a9231d5fb0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a9231d5f60 <col:184> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55a9231d6078 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a9231d6030 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a9231d6000 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a9231d60a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a9231d6090 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a9231d6058 <col:212> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a9231d6800 <line:800:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d6258 <col:3> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d67e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d67b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a9231d6770 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a9231d6758 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a9231d6278 <col:20> '_Bool' lvalue Var 0x55a9231d0508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d67a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a9231d6788 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a9231d6298 <col:36> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55a9231d6738 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a9231d6708 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a9231d64a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a9231d63c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a9231d62f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a9231d62d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a9231d62b8 <col:55> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a9231d63a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a9231d6340 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a9231d6328 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a9231d6308 <col:74> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55a9231d6390 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a9231d6378 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a9231d6358 <col:93> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a9231d6488 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a9231d6420 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a9231d6408 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a9231d63e8 <col:112> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55a9231d6470 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a9231d6458 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a9231d6438 <col:131> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55a9231d66f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a9231d66d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a9231d64c8 <col:148> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55a9231d66b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a9231d6688 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a9231d6588 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a9231d6540 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a9231d6528 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a9231d64e8 <col:166> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a9231d6570 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a9231d6558 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a9231d6508 <col:184> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55a9231d6658 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a9231d65d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a9231d65a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a9231d6670 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a9231d6630 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a9231d6600 <col:219> 'int' 0
|   |-BinaryOperator 0x55a9231d6dc8 <line:801:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d6820 <col:3> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d6db0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d6d80 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a9231d6d38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a9231d6d20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a9231d6840 <col:20> '_Bool' lvalue Var 0x55a9231d0508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d6d68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a9231d6d50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a9231d6860 <col:36> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55a9231d6d00 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a9231d6cd0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a9231d6a70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a9231d6990 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a9231d68b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a9231d68a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a9231d6880 <col:55> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a9231d6970 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a9231d6908 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a9231d68f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a9231d68d0 <col:74> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55a9231d6958 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a9231d6940 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a9231d6920 <col:93> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a9231d6a50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a9231d69e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a9231d69d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a9231d69b0 <col:112> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55a9231d6a38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a9231d6a20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a9231d6a00 <col:131> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55a9231d6cb8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a9231d6ca0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a9231d6a90 <col:148> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55a9231d6c80 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a9231d6c50 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a9231d6b70 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a9231d6b08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a9231d6af0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a9231d6ab0 <col:166> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a9231d6b38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a9231d6b20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a9231d6ad0 <col:184> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55a9231d6c08 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a9231d6bc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a9231d6b90 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a9231d6c38 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a9231d6c20 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a9231d6be8 <col:212> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55a9231d7390 <line:802:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d6de8 <col:3> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d7378 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d7348 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a9231d7300 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a9231d72e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a9231d6e08 <col:20> '_Bool' lvalue Var 0x55a9231d0508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d7330 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a9231d7318 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a9231d6e28 <col:36> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55a9231d72c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a9231d7298 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a9231d7038 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a9231d6f58 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a9231d6e80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a9231d6e68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a9231d6e48 <col:55> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a9231d6f38 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a9231d6ed0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a9231d6eb8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a9231d6e98 <col:74> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55a9231d6f20 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a9231d6f08 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a9231d6ee8 <col:93> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a9231d7018 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a9231d6fb0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a9231d6f98 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a9231d6f78 <col:112> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55a9231d7000 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a9231d6fe8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a9231d6fc8 <col:131> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55a9231d7280 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a9231d7268 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a9231d7058 <col:148> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55a9231d7248 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a9231d7218 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a9231d7118 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a9231d70d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a9231d70b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a9231d7078 <col:166> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a9231d7100 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a9231d70e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a9231d7098 <col:184> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55a9231d71e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a9231d7168 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a9231d7138 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a9231d7200 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a9231d71c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a9231d7190 <col:219> 'int' 0
|   |-BinaryOperator 0x55a9231d7408 <line:803:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a9231d73b0 <col:3> 'int' lvalue Var 0x55a9231cf4b8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55a9231d73f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a9231d73d0 <col:25> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   |-BinaryOperator 0x55a9231d7538 <line:804:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55a9231d7428 <col:3> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   | `-ConditionalOperator 0x55a9231d7508 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55a9231d74c0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a9231d74a8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a9231d7448 <col:7> '_Bool' lvalue Var 0x55a9231cf790 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55a9231d74d8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d7468 <col:25> 'int' lvalue Var 0x55a9231cf810 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55a9231d74f0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55a9231d7488 <col:37> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   |-BinaryOperator 0x55a9231d75d0 <line:805:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d7558 <col:3> '_Bool' lvalue Var 0x55a9231cf790 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55a9231d75a8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a9231d7578 <col:28> 'int' 0
|   |-CallExpr 0x55a9231d7628 <line:806:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d7610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d75f0 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d7680 <line:807:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d7668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d7648 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d7968 <line:808:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a9231d76a0 <col:3> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   | `-ConditionalOperator 0x55a9231d7938 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a9231d7760 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a9231d7718 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a9231d7700 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a9231d76c0 <col:7> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a9231d7748 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a9231d7730 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a9231d76e0 <col:25> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55a9231d7920 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d7780 <col:42> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55a9231d7900 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a9231d78d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a9231d7840 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a9231d77f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a9231d77e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a9231d77a0 <col:55> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a9231d7828 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a9231d7810 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a9231d77c0 <col:73> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55a9231d78a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a9231d7860 <col:90> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a9231d78b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d7880 <col:102> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
|   |-BinaryOperator 0x55a9231d7b80 <line:809:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d7988 <col:3> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d7b58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d7b28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a9231d7a48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a9231d7a00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a9231d79e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a9231d79a8 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a9231d7a30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a9231d7a18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a9231d79c8 <col:38> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d7ae0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d7a98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d7a68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d7b10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d7af8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d7ac0 <col:66> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a9231d7e68 <line:810:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d7ba0 <col:3> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d7e50 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d7e20 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a9231d7d40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a9231d7c60 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a9231d7c18 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a9231d7c00 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a9231d7bc0 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a9231d7c48 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a9231d7c30 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a9231d7be0 <col:38> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55a9231d7d20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a9231d7cd8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a9231d7cc0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a9231d7c80 <col:56> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a9231d7d08 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a9231d7cf0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a9231d7ca0 <col:74> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d7dd8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d7d90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d7d60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d7e08 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d7df0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d7db8 <col:102> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a9231d8070 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d7e88 <col:3> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d8058 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d8028 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a9231d7f48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a9231d7f00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a9231d7ee8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a9231d7ea8 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a9231d7f30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a9231d7f18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a9231d7ec8 <col:38> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d7fe0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d7f98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d7f68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d8010 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d7ff8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d7fc0 <col:66> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55a9231d8358 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a9231d8090 <col:3> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55a9231d8340 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a9231d8310 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a9231d8230 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a9231d8150 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a9231d8108 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a9231d80f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a9231d80b0 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a9231d8138 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a9231d8120 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a9231d80d0 <col:38> '_Bool' lvalue Var 0x55a9231cfa68 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55a9231d8210 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a9231d81c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a9231d81b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a9231d8170 <col:56> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a9231d81f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a9231d81e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a9231d8190 <col:74> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55a9231d82c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a9231d8280 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a9231d8250 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a9231d82f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a9231d82e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a9231d82a8 <col:102> '_Bool' lvalue Var 0x55a9231cfce0 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55a9231d83b0 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d8398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d8378 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a9231d8408 <line:814:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a9231d83f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d83d0 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a9231d84c0 <line:815:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a9231d8428 <col:3> 'int' lvalue Var 0x55a9231cf278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a9231d84a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a9231d8488 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a9231d8448 <col:22> 'int' lvalue Var 0x55a9231cf278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a9231d8468 <col:41> 'int' 1
|   |-CallExpr 0x55a9231d8518 <line:816:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a9231d8500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a9231d84e0 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a9231d8590 <line:817:3, col:36>
|     `-CallExpr 0x55a9231d8570 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a9231d8558 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a9231d8538 <col:10> 'void *(void)' Function 0x55a923175958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a9231d86f0 prev 0x55a9231cefc0 <line:819:1, line:821:1> line:819:6 fence 'void ()'
| `-CompoundStmt 0x55a9231d8790 <line:820:1, line:821:1>
|-FunctionDecl 0x55a9231d87c0 prev 0x55a9231cf080 <line:822:1, line:824:1> line:822:6 isync 'void ()'
| `-CompoundStmt 0x55a9231d8860 <line:823:1, line:824:1>
|-FunctionDecl 0x55a9231d8890 prev 0x55a9231cf140 <line:825:1, line:827:1> line:825:6 lwfence 'void ()'
| `-CompoundStmt 0x55a9231d8930 <line:826:1, line:827:1>
`-FunctionDecl 0x55a9231d8998 <line:828:1, line:854:1> line:828:5 main 'int ()'
  `-CompoundStmt 0x55a9231da998 <line:829:1, line:854:1>
    |-DeclStmt 0x55a9231d8ab0 <line:830:3, col:18>
    | `-VarDecl 0x55a9231d8a48 <col:3, col:13> col:13 used t1259 'pthread_t':'unsigned long'
    |-CallExpr 0x55a9231d8cc8 <line:831:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a9231d8cb0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a9231d8ac8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a9231b6488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a9231d8b08 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a9231d8ae8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a9231d8a48 't1259' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a9231d8d08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a9231d8b90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a9231d8b58 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a9231d8b20 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a9231d8d20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a9231d8bb0 <col:39> 'void *(void *)' Function 0x55a9231d0620 'P0' 'void *(void *)'
    | `-ParenExpr 0x55a9231d8c30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a9231d8c08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a9231d8bd0 <col:52> 'int' 0
    |-DeclStmt 0x55a9231d8db0 <line:832:3, col:18>
    | `-VarDecl 0x55a9231d8d48 <col:3, col:13> col:13 used t1260 'pthread_t':'unsigned long'
    |-CallExpr 0x55a9231d8f58 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a9231d8f40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a9231d8dc8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a9231b6488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a9231d8e08 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a9231d8de8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a9231d8d48 't1260' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a9231d8f98 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a9231d8e80 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a9231d8e58 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a9231d8e20 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a9231d8fb0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a9231d8ea0 <col:39> 'void *(void *)' Function 0x55a9231d2080 'P1' 'void *(void *)'
    | `-ParenExpr 0x55a9231d8f20 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a9231d8ef8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a9231d8ec0 <col:52> 'int' 0
    |-DeclStmt 0x55a9231d9040 <line:834:3, col:18>
    | `-VarDecl 0x55a9231d8fd8 <col:3, col:13> col:13 used t1261 'pthread_t':'unsigned long'
    |-CallExpr 0x55a9231d91e8 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a9231d91d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a9231d9058 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a9231b6488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a9231d9098 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a9231d9078 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a9231d8fd8 't1261' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a9231d9228 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a9231d9110 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a9231d90e8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a9231d90b0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a9231d9240 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a9231d9130 <col:39> 'void *(void *)' Function 0x55a9231d33f8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55a9231d91b0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a9231d9188 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a9231d9150 <col:52> 'int' 0
    |-DeclStmt 0x55a9231d92d0 <line:836:3, col:18>
    | `-VarDecl 0x55a9231d9268 <col:3, col:13> col:13 used t1262 'pthread_t':'unsigned long'
    |-CallExpr 0x55a9231d9478 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a9231d9460 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a9231d92e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a9231b6488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a9231d9328 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a9231d9308 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a9231d9268 't1262' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a9231d94b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a9231d93a0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a9231d9378 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a9231d9340 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a9231d94d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a9231d93c0 <col:39> 'void *(void *)' Function 0x55a9231d4780 'P3' 'void *(void *)'
    | `-ParenExpr 0x55a9231d9440 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a9231d9418 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a9231d93e0 <col:52> 'int' 0
    |-CallExpr 0x55a9231d9520 <line:838:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a9231d9508 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a9231d94e8 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a9231d95f0 <line:839:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55a9231d9540 <col:3> '_Bool' lvalue Var 0x55a9231d0040 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55a9231d95d8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55a9231d95b8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55a9231d95a0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55a9231d9560 <col:21> 'int' lvalue Var 0x55a9231cf278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55a9231d9580 <col:41> 'int' 4
    |-CallExpr 0x55a9231d9648 <line:840:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a9231d9630 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a9231d9610 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a9231d96c0 <line:841:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a9231d96a8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a9231d9668 <col:3> 'void (int)' Function 0x55a923175790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55a9231d9700 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a9231d96e8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a9231d9688 <col:21> '_Bool' lvalue Var 0x55a9231d0040 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55a9231d9750 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a9231d9738 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a9231d9718 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a9231d9a38 <line:843:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55a9231d9770 <col:3> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
    | `-ConditionalOperator 0x55a9231d9a08 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55a9231d9830 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55a9231d97e8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55a9231d97d0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55a9231d9790 <col:7> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55a9231d9818 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55a9231d9800 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55a9231d97b0 <col:25> '_Bool' lvalue Var 0x55a9231cf888 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55a9231d99f0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a9231d9850 <col:42> 'int' lvalue Var 0x55a9231cfe58 'b$w_buff0' 'int'
    |   `-ParenExpr 0x55a9231d99d0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55a9231d99a0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55a9231d9910 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55a9231d98c8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55a9231d98b0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55a9231d9870 <col:55> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55a9231d98f8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55a9231d98e0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55a9231d9890 <col:73> '_Bool' lvalue Var 0x55a9231cfb00 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a9231d9970 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a9231d9930 <col:90> 'int' lvalue Var 0x55a9231cff50 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55a9231d9988 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55a9231d9950 <col:102> 'int' lvalue Var 0x55a9231cf6f8 'b' 'int'
    |-BinaryOperator 0x55a9231d9c50 <line:844:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a9231d9a58 <col:3> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55a9231d9c38 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a9231d9c08 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a9231d9b18 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a9231d9ad0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a9231d9ab8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a9231d9a78 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a9231d9b00 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a9231d9ae8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a9231d9a98 <col:38> '_Bool' lvalue Var 0x55a9231cf888 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a9231d9bc0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a9231d9b68 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a9231d9b38 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a9231d9bf0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a9231d9bd8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a9231d9ba0 <col:66> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55a9231d9f38 <line:845:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a9231d9c70 <col:3> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55a9231d9f20 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a9231d9ef0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a9231d9e10 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a9231d9d30 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a9231d9ce8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a9231d9cd0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a9231d9c90 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a9231d9d18 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a9231d9d00 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a9231d9cb0 <col:38> '_Bool' lvalue Var 0x55a9231cf888 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a9231d9df0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a9231d9da8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a9231d9d90 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a9231d9d50 <col:56> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a9231d9dd8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a9231d9dc0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a9231d9d70 <col:74> '_Bool' lvalue Var 0x55a9231cfb00 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a9231d9ea8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a9231d9e60 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a9231d9e30 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a9231d9ed8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a9231d9ec0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a9231d9e88 <col:102> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55a9231da140 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a9231d9f58 <col:3> '_Bool' lvalue Var 0x55a9231cf888 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a9231da128 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a9231da0f8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a9231da018 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a9231d9fd0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a9231d9fb8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a9231d9f78 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a9231da000 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a9231d9fe8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a9231d9f98 <col:38> '_Bool' lvalue Var 0x55a9231cf888 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a9231da0b0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a9231da068 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a9231da038 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a9231da0e0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a9231da0c8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a9231da090 <col:66> '_Bool' lvalue Var 0x55a9231cf888 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55a9231da428 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a9231da160 <col:3> '_Bool' lvalue Var 0x55a9231cfb00 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a9231da410 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a9231da3e0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a9231da300 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a9231da220 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a9231da1d8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a9231da1c0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a9231da180 <col:20> '_Bool' lvalue Var 0x55a9231cfed0 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a9231da208 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a9231da1f0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a9231da1a0 <col:38> '_Bool' lvalue Var 0x55a9231cf888 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a9231da2e0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a9231da298 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a9231da280 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a9231da240 <col:56> '_Bool' lvalue Var 0x55a9231cffc8 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a9231da2c8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a9231da2b0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a9231da260 <col:74> '_Bool' lvalue Var 0x55a9231cfb00 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a9231da398 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a9231da350 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a9231da320 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a9231da3c8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a9231da3b0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a9231da378 <col:102> '_Bool' lvalue Var 0x55a9231cfb00 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55a9231da480 <line:848:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a9231da468 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a9231da448 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a9231da4d8 <line:849:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a9231da4c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a9231da4a0 <col:3> 'void ()' Function 0x55a923175e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a9231da840 <line:850:3, col:105> '_Bool' '='
    | |-DeclRefExpr 0x55a9231da4f8 <col:3> '_Bool' lvalue Var 0x55a9231d00b8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55a9231da828 <col:21, col:105> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55a9231da810 <col:21, col:105> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55a9231da7f0 <col:22, col:105> 'int'
    |       `-BinaryOperator 0x55a9231da7d0 <col:23, col:104> 'int' '&&'
    |         |-BinaryOperator 0x55a9231da738 <col:23, col:76> 'int' '&&'
    |         | |-BinaryOperator 0x55a9231da6a0 <col:23, col:48> 'int' '&&'
    |         | | |-BinaryOperator 0x55a9231da608 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x55a9231da570 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55a9231da558 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55a9231da518 <col:23> 'int' lvalue Var 0x55a9231d01b8 'x' 'int'
    |         | | | | `-IntegerLiteral 0x55a9231da538 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x55a9231da5e8 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55a9231da5d0 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55a9231da590 <col:33> 'int' lvalue Var 0x55a9231d02d8 'y' 'int'
    |         | | |   `-IntegerLiteral 0x55a9231da5b0 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x55a9231da680 <col:43, col:48> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55a9231da668 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55a9231da628 <col:43> 'int' lvalue Var 0x55a9231d03f8 'z' 'int'
    |         | |   `-IntegerLiteral 0x55a9231da648 <col:48> 'int' 2
    |         | `-BinaryOperator 0x55a9231da718 <col:53, col:76> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55a9231da700 <col:53> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55a9231da6c0 <col:53> 'int' lvalue Var 0x55a9231cf398 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55a9231da6e0 <col:76> 'int' 1
    |         `-BinaryOperator 0x55a9231da7b0 <col:81, col:104> 'int' '=='
    |           |-ImplicitCastExpr 0x55a9231da798 <col:81> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a9231da758 <col:81> 'int' lvalue Var 0x55a9231cf4b8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55a9231da778 <col:104> 'int' 0
    |-CallExpr 0x55a9231da898 <line:851:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a9231da880 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a9231da860 <col:3> 'void ()' Function 0x55a923175f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a9231da910 <line:852:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a9231da8f8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a9231da8b8 <col:3> 'void (int)' Function 0x55a923175bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55a9231da950 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a9231da938 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a9231da8d8 <col:21> '_Bool' lvalue Var 0x55a9231d00b8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55a9231da988 <line:853:3, col:10>
      `-IntegerLiteral 0x55a9231da968 <col:10> 'int' 0
