TranslationUnitDecl 0x558d03894e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x558d038956d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x558d038953b0 '__int128'
|-TypedefDecl 0x558d03895748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x558d038953d0 'unsigned __int128'
|-TypedefDecl 0x558d03895a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x558d03895820 'struct __NSConstantString_tag'
|   `-Record 0x558d038957a0 '__NSConstantString_tag'
|-TypedefDecl 0x558d03895af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x558d03895ab0 'char *'
|   `-BuiltinType 0x558d03894eb0 'char'
|-TypedefDecl 0x558d038d4650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x558d03895d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x558d03895bd0 'struct __va_list_tag'
|     `-Record 0x558d03895b50 '__va_list_tag'
|-FunctionDecl 0x558d038d4790 <./split_5/mix026_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x558d038d46c0 <col:31> col:34 'int'
|-FunctionDecl 0x558d038d4958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x558d038d4a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x558d038d4bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x558d038d4b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x558d038d4df8 <col:40, col:99>
|   |-IfStmt 0x558d038d4dc8 <col:42, col:88>
|   | |-UnaryOperator 0x558d038d4ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x558d038d4c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x558d038d4c70 <col:47> 'int' lvalue ParmVar 0x558d038d4b38 'expression' 'int'
|   | `-CompoundStmt 0x558d038d4db0 <col:59, col:88>
|   |   `-LabelStmt 0x558d038d4d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x558d038d4d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x558d038d4d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x558d038d4cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x558d038d4a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x558d038d4de0 <col:89>
|   `-ReturnStmt 0x558d038d4de8 <col:91>
|-FunctionDecl 0x558d038d4e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x558d038d4f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x558d038d5280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558d038d4fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x558d038d5038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x558d038d50b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558d038d5138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558d038d5340 <line:10:22>
|-FunctionDecl 0x558d038fb390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558d038d53b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x558d038d5430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x558d038d54b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558d038d5530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558d038fb450 <line:13:22>
|-FunctionDecl 0x558d038fb700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558d038fb4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x558d038fb540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x558d038fb5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x558d038fb7b8 <line:15:22>
|-TypedefDecl 0x558d038fb828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x558d03894f70 'unsigned char'
|-TypedefDecl 0x558d038fb898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x558d03894f90 'unsigned short'
|-TypedefDecl 0x558d038fb908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x558d03894fb0 'unsigned int'
|-TypedefDecl 0x558d038fb978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fb9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x558d03894ed0 'signed char'
|-TypedefDecl 0x558d038fba58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x558d03894f70 'unsigned char'
|-TypedefDecl 0x558d038fbac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x558d03894ef0 'short'
|-TypedefDecl 0x558d038fbb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x558d03894f90 'unsigned short'
|-TypedefDecl 0x558d038fbba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x558d03894f10 'int'
|-TypedefDecl 0x558d038fbc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x558d03894fb0 'unsigned int'
|-TypedefDecl 0x558d038fbc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fbcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fbd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fbdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fbe48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fbeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x558d03894fb0 'unsigned int'
|-TypedefDecl 0x558d038fbf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x558d03894fb0 'unsigned int'
|-TypedefDecl 0x558d038fbf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fc008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fc078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x558d03894fb0 'unsigned int'
|-TypedefDecl 0x558d038fc0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fc158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fc1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fc238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x558d03894f10 'int'
|-RecordDecl 0x558d038fc290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x558d038fc408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x558d038fc4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x558d038fc460 'struct __fsid_t' sugar
|   `-RecordType 0x558d038fc310 '__fsid_t'
|     `-Record 0x558d038fc290 ''
|-TypedefDecl 0x558d038fc548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fc5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fc628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fc698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x558d03894fb0 'unsigned int'
|-TypedefDecl 0x558d038fc708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fc778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x558d03894fb0 'unsigned int'
|-TypedefDecl 0x558d038fc7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fc858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x558d03894f10 'int'
|-TypedefDecl 0x558d038fc8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x558d03894f10 'int'
|-TypedefDecl 0x558d038fc938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x558d03894f10 'int'
|-TypedefDecl 0x558d038fc9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x558d03895630 'void *'
|   `-BuiltinType 0x558d03894e70 'void'
|-TypedefDecl 0x558d038fca18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fca88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fcaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fcb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fcbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fcc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fccb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fcd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fcd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fce08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fce78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038fcf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x558d038fced0 '__off64_t' sugar
|   |-Typedef 0x558d038fc1c8 '__off64_t'
|   `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fd000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x558d038fcfc0 '__quad_t *'
|   `-TypedefType 0x558d038fcf60 '__quad_t' sugar
|     |-Typedef 0x558d038fbd68 '__quad_t'
|     `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fd070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x558d03895ab0 'char *'
|   `-BuiltinType 0x558d03894eb0 'char'
|-TypedefDecl 0x558d038fd0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d038fd150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x558d03894fb0 'unsigned int'
|-FunctionDecl 0x558d038fd298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x558d038fd1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x558d038fe5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x558d038fe5d8 <line:72:3, col:34>
|     `-CallExpr 0x558d038fe598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x558d038fe580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558d038fe510 <col:10> '<builtin fn type>' Function 0x558d038fe380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x558d038fe5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558d038fe530 <col:29> 'unsigned int' lvalue ParmVar 0x558d038fd1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x558d038fe380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x558d038fe420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x558d038fe490 <col:10> Implicit
| `-ConstAttr 0x558d038fe4e8 <col:10> Implicit
|-FunctionDecl 0x558d038fe740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x558d038fe638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x558d038fea58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x558d038fea48 <line:77:3, col:34>
|     `-CallExpr 0x558d038fea08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x558d038fe9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558d038fe978 <col:10> '<builtin fn type>' Function 0x558d038fe7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x558d038fea30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x558d038fe998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x558d038fe638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x558d038fe7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x558d038fe888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x558d038fe8f8 <col:10> Implicit
| `-ConstAttr 0x558d038fe950 <col:10> Implicit
|-TypedefDecl 0x558d038fea88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-TypedefDecl 0x558d038feb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x558d038feae0 '__time_t' sugar
|   |-Typedef 0x558d038fc708 '__time_t'
|   `-BuiltinType 0x558d03894f30 'long'
|-RecordDecl 0x558d038feb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x558d038fec28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x558d038fecb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x558d038fed48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x558d038fed10 '__pid_t' sugar
|   |-Typedef 0x558d038fc238 '__pid_t'
|   `-BuiltinType 0x558d03894f10 'int'
|-RecordDecl 0x558d038feda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x558d038fee60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x558d038feeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x558d038fef70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x558d038fefd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-RecordDecl 0x558d038ff030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x558d038ff2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x558d039003a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x558d038ff310 'struct cpu_set_t' sugar
|   `-RecordType 0x558d038ff0b0 'cpu_set_t'
|     `-Record 0x558d038ff030 ''
|-FunctionDecl 0x558d03900678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x558d03900448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558d03900550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x558d03900728 <line:107:19>
|-FunctionDecl 0x558d03900900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x558d03900790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x558d039009a8 <col:69>
|-FunctionDecl 0x558d03900b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x558d03900a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x558d03900bc8 <col:64>
|-FunctionDecl 0x558d03900e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x558d03900c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558d03900d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558d03900f38 <line:113:22>
|-FunctionDecl 0x558d039011b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x558d03900fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558d03901098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x558d03901268 <col:88>
|-FunctionDecl 0x558d03901588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558d039012d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558d039013b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x558d03901440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558d03901640 <col:62>
|-FunctionDecl 0x558d039017b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x558d039016a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x558d03901860 <col:63>
|-FunctionDecl 0x558d03901988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x558d03901a28 <col:47>
|-FunctionDecl 0x558d03901b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x558d03901a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558d03901bd8 <col:69>
|-FunctionDecl 0x558d03901ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x558d03901c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558d03901d88 <col:69>
|-FunctionDecl 0x558d03902048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558d03901df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558d03901f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x558d039020f8 <col:88>
|-TypedefDecl 0x558d03902188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x558d03902150 '__clock_t' sugar
|   |-Typedef 0x558d038fc548 '__clock_t'
|   `-BuiltinType 0x558d03894f30 'long'
|-TypedefDecl 0x558d03902218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x558d039021e0 '__clockid_t' sugar
|   |-Typedef 0x558d038fc938 '__clockid_t'
|   `-BuiltinType 0x558d03894f10 'int'
|-TypedefDecl 0x558d039022a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x558d03902270 '__timer_t' sugar
|   |-Typedef 0x558d038fc9a8 '__timer_t'
|   `-PointerType 0x558d03895630 'void *'
|     `-BuiltinType 0x558d03894e70 'void'
|-RecordDecl 0x558d03902300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x558d039023d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x558d03902440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x558d039024a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x558d03902510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x558d03902578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x558d039025e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x558d03902648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x558d039026b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x558d03902718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x558d03902780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x558d039027e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x558d03902838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x558d03902908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x558d03902978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x558d03902a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x558d03902bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x558d03902c90 <col:45>
|-FunctionDecl 0x558d03902e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x558d03902d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x558d03902f18 <col:54>
|-FunctionDecl 0x558d03903118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x558d03902f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x558d03902ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x558d039031c8 <line:157:22>
| `-ConstAttr 0x558d03903220 <col:63>
|-FunctionDecl 0x558d03904050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558d03903318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558d039040f8 <col:56>
|-FunctionDecl 0x558d039044a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x558d03904168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x558d039041e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558d03904260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x558d03904358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x558d03904560 <col:54>
|-RecordDecl 0x558d039045b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x558d03904668 parent 0x558d03894e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x558d039048c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x558d03904968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x558d039049d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x558d03904a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x558d03904b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x558d03904c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x558d03904bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x558d03904b80 'struct __locale_struct' sugar
|     `-RecordType 0x558d03904640 'struct __locale_struct'
|       `-Record 0x558d039045b8 '__locale_struct'
|-TypedefDecl 0x558d03904cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x558d03904cc0 '__locale_t' sugar
|   |-Typedef 0x558d03904c48 '__locale_t'
|   `-PointerType 0x558d03904bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x558d03904b80 'struct __locale_struct' sugar
|       `-RecordType 0x558d03904640 'struct __locale_struct'
|         `-Record 0x558d039045b8 '__locale_struct'
|-FunctionDecl 0x558d03906110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x558d03904d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x558d03904de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558d03904e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x558d03904ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558d03904f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x558d039061d8 <col:40>
|-FunctionDecl 0x558d039063c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558d039062a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x558d03906470 <col:66>
|-FunctionDecl 0x558d03906580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558d039064d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x558d03906628 <col:69>
|-FunctionDecl 0x558d03906858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558d03906690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558d03906720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558d03906908 <col:52>
|-FunctionDecl 0x558d03906ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558d03906970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558d03906a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558d03906b60 <col:55>
|-FunctionDecl 0x558d03906cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x558d03906be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x558d03906da0 <col:62>
|-FunctionDecl 0x558d03906f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x558d03906e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x558d03906fc0 <col:60>
|-FunctionDecl 0x558d039072b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558d03907118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558d03907198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x558d03907368 <col:44>
|-FunctionDecl 0x558d03907578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558d039073d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558d03907450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x558d03907628 <col:49>
|-VarDecl 0x558d03907728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x558d039077a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x558d03907828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x558d039078f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x558d03907a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x558d03907ac0 <col:42>
|-VarDecl 0x558d03907b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x558d03907bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x558d03907d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x558d03907c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x558d03907de0 <col:57>
|-FunctionDecl 0x558d03907ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558d03907e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558d03907f98 <col:56>
|-FunctionDecl 0x558d039080d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558d03908018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x558d03908178 <col:59>
|-FunctionDecl 0x558d03908280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x558d039081e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x558d03908328 <col:48>
| `-ConstAttr 0x558d03908380 <col:89>
|-FunctionDecl 0x558d039085e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558d03908438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x558d039084c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x558d03908848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558d039086d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558d03908768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x558d039088f8 <col:88>
|-FunctionDecl 0x558d03908a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558d03908960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558d039089f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x558d03908b40 <col:88>
|-FunctionDecl 0x558d03908d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x558d03908ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558d03908c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x558d03908e08 <line:208:22>
|-FunctionDecl 0x558d03909178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558d03908e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558d03908ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x558d03908f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x558d03909010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x558d03909478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x558d03909278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x558d03909350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x558d03909528 <col:85>
|-FunctionDecl 0x558d03909918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x558d03909590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558d039096c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x558d039097d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x558d039099d0 <col:52>
|-FunctionDecl 0x558d03909b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x558d03909a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558d03909bf0 <col:61>
|-FunctionDecl 0x558d0390a0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x558d03909c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558d03909cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x558d03909e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x558d03909ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x558d0390a1b0 <col:62>
|-FunctionDecl 0x558d0390a3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x558d0390a218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558d0390a2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x558d0390a478 <line:221:22>
|-FunctionDecl 0x558d0390a578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x558d0390a4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558d0390a620 <col:65>
|-TypedefDecl 0x558d0390a690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x558d03894fd0 'unsigned long'
|-RecordDecl 0x558d0390a6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x558d0390a830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558d0390a898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558d0390a948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x558d0390a8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x558d0390a770 'union pthread_attr_t'
|     `-Record 0x558d0390a6e8 'pthread_attr_t'
|-RecordDecl 0x558d0390a9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x558d0390ab18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x558d0390ab90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x558d0390ac40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x558d0390abe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x558d0390aa20 'struct __pthread_internal_list'
|     `-Record 0x558d0390a9a0 '__pthread_internal_list'
|-RecordDecl 0x558d0390acb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x558d0390ad58 parent 0x558d03894e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x558d0390ae30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558d0390ae98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x558d0390af00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x558d0390af68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x558d0390afd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x558d0390b038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x558d0390f110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x558d0390f1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x558d0390f2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x558d0390f318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558d0390f4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x558d0390f440 'union pthread_mutex_t' sugar
|   `-RecordType 0x558d0390ad30 'pthread_mutex_t'
|     `-Record 0x558d0390acb0 ''
|-RecordDecl 0x558d0390f510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x558d0390f650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558d0390f6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558d0390f770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x558d0390f710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x558d0390f590 'pthread_mutexattr_t'
|     `-Record 0x558d0390f510 ''
|-RecordDecl 0x558d0390f7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x558d0390f888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x558d0390f950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558d0390f9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x558d0390fa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x558d0390fa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x558d0390faf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x558d0390fb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x558d0390fbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x558d0390fc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x558d0390fce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_5/mix026_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_5/mix026_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x558d0390fdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x558d0390fe38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x558d0390ff70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x558d0390ff10 'union pthread_cond_t' sugar
|   `-RecordType 0x558d0390f860 'pthread_cond_t'
|     `-Record 0x558d0390f7e0 ''
|-RecordDecl 0x558d0390ffe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x558d03911130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558d03911198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558d03911250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x558d039111f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x558d03910060 'pthread_condattr_t'
|     `-Record 0x558d0390ffe0 ''
|-TypedefDecl 0x558d039112d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x558d03894fb0 'unsigned int'
|-TypedefDecl 0x558d03911348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x558d03894f10 'int'
|-RecordDecl 0x558d039113a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x558d03911448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x558d03911510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558d03911578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x558d039115e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x558d03911648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x558d039116b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x558d03911718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x558d03911780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x558d039117e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x558d03911850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x558d039118b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x558d03911920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x558d039119d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_5/mix026_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_5/mix026_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x558d03911a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558d03911ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558d03911c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x558d03911bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x558d03911420 'pthread_rwlock_t'
|     `-Record 0x558d039113a0 ''
|-RecordDecl 0x558d03911ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x558d03911de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x558d03911e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558d03911f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x558d03911ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x558d03911d20 'pthread_rwlockattr_t'
|     `-Record 0x558d03911ca0 ''
|-TypedefDecl 0x558d03911f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x558d03894f14 'volatile int' volatile
|   `-BuiltinType 0x558d03894f10 'int'
|-RecordDecl 0x558d03911fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x558d03913140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x558d039131a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558d03913260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x558d03913200 'union pthread_barrier_t' sugar
|   `-RecordType 0x558d03912060 'pthread_barrier_t'
|     `-Record 0x558d03911fe0 ''
|-RecordDecl 0x558d039132d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x558d039133d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558d03913438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558d039134f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x558d03913490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x558d03913350 'pthread_barrierattr_t'
|     `-Record 0x558d039132d0 ''
|-TypedefDecl 0x558d03913608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x558d039135a0 'long [8]' 8 
|   `-BuiltinType 0x558d03894f30 'long'
|-EnumDecl 0x558d03913660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x558d03913728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x558d03913778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x558d039137c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x558d03913898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x558d039138e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x558d03913938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x558d03913988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x558d03913a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x558d039139f8 <col:26> 'int'
| |   `-DeclRefExpr 0x558d039139d8 <col:26> 'int' EnumConstant 0x558d03913898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x558d03913a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x558d03913a80 <col:29> 'int'
| |   `-DeclRefExpr 0x558d03913a60 <col:29> 'int' EnumConstant 0x558d039138e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x558d03913b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x558d03913b08 <col:30> 'int'
| |   `-DeclRefExpr 0x558d03913ae8 <col:30> 'int' EnumConstant 0x558d03913938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x558d03913ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x558d03913b90 <col:27> 'int'
|     `-DeclRefExpr 0x558d03913b70 <col:27> 'int' EnumConstant 0x558d03913a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x558d03913bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x558d03913cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x558d03913d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x558d03913d38 <col:30> 'int'
| |   `-DeclRefExpr 0x558d03913d18 <col:30> 'int' EnumConstant 0x558d03913cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x558d03913da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x558d03913e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x558d03913e10 <col:29> 'int'
|     `-DeclRefExpr 0x558d03913df0 <col:29> 'int' EnumConstant 0x558d03913da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x558d03913e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x558d03913f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x558d03913f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x558d03913fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x558d03914038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x558d03914150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x558d039141a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x558d039141f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x558d03914278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x558d03914260 <col:31> 'int'
|     `-DeclRefExpr 0x558d03914240 <col:31> 'int' EnumConstant 0x558d03914150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x558d039142c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x558d03914398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x558d039143e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x558d03914438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x558d03914508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x558d03914558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x558d039145a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x558d03914678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x558d039146c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x558d03914718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x558d03914958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x558d039149c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x558d03914a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x558d03914b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x558d03914b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x558d03914c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x558d03914cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x558d03914d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x558d03914dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x558d03914e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x558d03915488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x558d03914f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x558d03915030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d03915270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x558d039152f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x558d03915548 <col:47>
| |-NonNullAttr 0x558d039155a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x558d039155d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x558d03915700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x558d03915630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x558d03915958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x558d039157b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x558d03915838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x558d03915b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x558d03915a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x558d03915bd0 <col:60>
|-FunctionDecl 0x558d03915d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x558d03915dc0 <col:54>
| `-ConstAttr 0x558d03915e18 <col:95>
|-FunctionDecl 0x558d03915fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x558d03915e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558d03915ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x558d03916098 <line:394:19>
| `-ConstAttr 0x558d039160f0 <col:60>
|-FunctionDecl 0x558d03917b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558d039179d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558d03917bb0 <col:71>
| `-NonNullAttr 0x558d03917c08 <col:112, col:126> 1
|-FunctionDecl 0x558d03917d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558d03917c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558d03917db8 <line:397:22>
| `-NonNullAttr 0x558d03917e10 <col:63, col:77> 1
|-FunctionDecl 0x558d03918038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x558d03917e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558d03917ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x558d039180e8 <line:400:22>
| `-NonNullAttr 0x558d03918140 <col:63, col:80> 1 2
|-FunctionDecl 0x558d03918348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558d03918188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d03918208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x558d039183f8 <line:403:22>
| `-NonNullAttr 0x558d03918450 <col:63, col:77> 1
|-FunctionDecl 0x558d039186a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x558d03918498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558d03918540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x558d03918758 <line:406:22>
| `-NonNullAttr 0x558d039187b0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d039199e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558d039187f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d03918870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558d03919a98 <line:409:22>
| `-NonNullAttr 0x558d03919af0 <col:63, col:77> 1
|-FunctionDecl 0x558d03919d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558d03919b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d03919bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558d03919dd8 <line:412:22>
| `-NonNullAttr 0x558d03919e30 <col:63, col:80> 1 2
|-FunctionDecl 0x558d0391a068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558d03919e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d03919f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x558d0391a118 <col:37>
| `-NonNullAttr 0x558d0391a170 <col:78, col:95> 1 2
|-FunctionDecl 0x558d0391a358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d0391a1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d0391a238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x558d0391a408 <line:418:22>
| `-NonNullAttr 0x558d0391a460 <col:63, col:80> 1 2
|-FunctionDecl 0x558d0391a5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558d0391a4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d0391a528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x558d0391a698 <line:420:22>
| `-NonNullAttr 0x558d0391a6f0 <col:63, col:77> 1
|-FunctionDecl 0x558d0391a898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d0391a738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d0391a7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x558d0391a948 <line:423:22>
| `-NonNullAttr 0x558d0391a9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d0391ab48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558d0391aa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d0391aa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x558d0391abf8 <line:426:22>
| `-NonNullAttr 0x558d0391ac50 <col:63, col:77> 1
|-FunctionDecl 0x558d0391adf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d0391ac98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d0391ad18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x558d0391aea8 <line:429:22>
| `-NonNullAttr 0x558d0391af00 <col:63, col:80> 1 2
|-FunctionDecl 0x558d0391b088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558d0391af48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d0391afc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x558d0391b138 <line:431:22>
| `-NonNullAttr 0x558d0391b190 <col:63, col:77> 1
|-FunctionDecl 0x558d0391b3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x558d0391b1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d0391b258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x558d0391b468 <line:434:22>
| |-NonNullAttr 0x558d0391b4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x558d0391b4f8 <col:100> "" ""
|-FunctionDecl 0x558d0391b708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x558d0391b548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d0391b5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x558d0391b7b8 <line:437:22>
| |-NonNullAttr 0x558d0391b810 <col:63, col:77> 1
| `-DeprecatedAttr 0x558d0391b848 <col:97> "" ""
|-FunctionDecl 0x558d0391ba48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558d0391b898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d0391b910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558d0391baf8 <line:440:22>
| `-NonNullAttr 0x558d0391bb50 <col:63, col:80> 1 2
|-FunctionDecl 0x558d0391bcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558d0391bb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d0391bc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558d0391bd80 <line:443:22>
| `-NonNullAttr 0x558d0391bdd8 <col:63, col:77> 1
|-FunctionDecl 0x558d0391c0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558d0391be28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558d0391bea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x558d0391bf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558d0391c180 <line:447:22>
| `-NonNullAttr 0x558d0391c1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x558d0391c488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x558d0391c230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558d0391c2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x558d0391c328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558d0391c540 <col:43>
| `-NonNullAttr 0x558d0391c598 <col:84, col:98> 1
|-FunctionDecl 0x558d0391c858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558d0391c5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558d0391c668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x558d0391c6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x558d0391c910 <line:452:22>
| `-NonNullAttr 0x558d0391c968 <col:63, col:77> 3
|-FunctionDecl 0x558d0391cc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558d0391c9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558d0391ca60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x558d0391caf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558d0391cd30 <line:456:22>
| `-NonNullAttr 0x558d0391cd88 <col:63, col:80> 2 3
|-FunctionDecl 0x558d0391cf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x558d0391cdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558d0391ce58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x558d0391d028 <line:458:22>
|-FunctionDecl 0x558d0391d3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x558d0391d0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x558d0391d290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x558d0391d4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x558d0391d650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x558d0391d530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x558d0391d5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x558d0391d838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x558d0391d718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x558d0391d798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x558d0391d9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x558d0391d8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x558d0391db30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x558d0391dbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x558d0391dc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x558d0391dd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x558d0391ddd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x558d0391dfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_5/mix026_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x558d0391e098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x558d0391e150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x558d0391e0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x558d0391dc50 '__pthread_unwind_buf_t'
| |   `-Record 0x558d0391dbd0 ''
| `-AlignedAttr 0x558d0391e1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x558d0391e220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x558d0391e380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x558d0391e3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x558d0391e450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x558d0391e4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x558d0391e6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558d0391e5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558d0391e808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558d0391e778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558d0391ea00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558d0391e8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x558d0391eaa8 <line:487:22>
|-RecordDecl 0x558d0391eb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x558d0391ee18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x558d0391ec78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x558d0391ecf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x558d0391eec8 <col:86>
| `-ReturnsTwiceAttr 0x558d0391ef20 <col:12> Implicit
|-FunctionDecl 0x558d0391f248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558d0391eff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x558d0391f100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x558d0391f2f8 <line:493:22>
| `-NonNullAttr 0x558d0391f350 <col:63, col:77> 1
|-FunctionDecl 0x558d0391f4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558d0391f398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558d0391f570 <line:495:22>
| `-NonNullAttr 0x558d0391f5c8 <col:63, col:77> 1
|-FunctionDecl 0x558d0391f6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558d0391f618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558d0391f778 <line:497:22>
| `-NonNullAttr 0x558d0391f7d0 <col:52, col:66> 1
|-FunctionDecl 0x558d0391f8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558d0391f818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558d0391f978 <line:499:22>
| `-NonNullAttr 0x558d0391f9d0 <col:52, col:66> 1
|-FunctionDecl 0x558d03920c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558d03920a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558d03920ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558d03920cd8 <col:36>
| `-NonNullAttr 0x558d03920d30 <col:66, col:83> 1 2
|-FunctionDecl 0x558d03920e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558d03920d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558d03920ed8 <line:504:22>
| `-NonNullAttr 0x558d03920f30 <col:52, col:66> 1
|-FunctionDecl 0x558d039211c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d03920fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558d03921060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558d03921278 <line:508:22>
| `-NonNullAttr 0x558d039212d0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d03921598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x558d03921318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558d03921398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x558d03921418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x558d03921650 <line:512:22>
| `-NonNullAttr 0x558d039216a8 <col:63, col:80> 1 3
|-FunctionDecl 0x558d039217b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558d039216f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558d03921858 <line:514:22>
| `-NonNullAttr 0x558d039218b0 <col:63, col:77> 1
|-FunctionDecl 0x558d03921ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558d03921960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558d03921b80 <line:516:22>
| `-NonNullAttr 0x558d03921bd8 <col:63, col:77> 1
|-FunctionDecl 0x558d03921ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558d03921c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558d03921d88 <line:518:22>
| `-NonNullAttr 0x558d03921de0 <col:63, col:77> 1
|-FunctionDecl 0x558d03922008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d03921e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558d03921ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x558d039220b8 <line:522:22>
| `-NonNullAttr 0x558d03922110 <col:63, col:80> 1 2
|-FunctionDecl 0x558d03922318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558d03922158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d039221d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x558d039223c8 <line:525:22>
| `-NonNullAttr 0x558d03922420 <col:63, col:77> 1
|-FunctionDecl 0x558d039225c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d03922468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558d039224e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x558d03922678 <line:528:22>
| `-NonNullAttr 0x558d039226d0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d03922858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558d03922718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d03922798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x558d03922908 <line:530:22>
| `-NonNullAttr 0x558d03922960 <col:63, col:77> 1
|-FunctionDecl 0x558d03922b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d039229a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558d03922a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x558d03922bd0 <line:534:22>
| `-NonNullAttr 0x558d03922c28 <col:63, col:80> 1 2
|-FunctionDecl 0x558d03922db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558d03922c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d03922cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x558d03922e68 <line:537:22>
| `-NonNullAttr 0x558d03922ec0 <col:63, col:77> 1
|-FunctionDecl 0x558d03923068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d03922f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558d03922f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558d03923118 <line:541:22>
| `-NonNullAttr 0x558d03923170 <col:63, col:80> 1 2
|-FunctionDecl 0x558d039232f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558d039231b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d03923238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x558d039233a8 <line:544:22>
| `-NonNullAttr 0x558d03923400 <col:63, col:77> 1
|-FunctionDecl 0x558d039235e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x558d03923448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d039234c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x558d03923698 <line:547:22>
| `-NonNullAttr 0x558d039236f0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d03923878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558d03923738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558d039237b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x558d03923928 <line:550:22>
| `-NonNullAttr 0x558d03923980 <col:63, col:77> 1
|-FunctionDecl 0x558d03924cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x558d03924aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558d03924bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x558d03924da8 <col:29>
| `-NonNullAttr 0x558d03924e00 <col:70, col:84> 1
|-FunctionDecl 0x558d03924f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d03924e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d03925020 <line:555:22>
| `-NonNullAttr 0x558d03925078 <col:63, col:77> 1
|-FunctionDecl 0x558d03925180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d039250c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d03925228 <line:557:22>
| `-NonNullAttr 0x558d03925280 <col:52, col:66> 1
|-FunctionDecl 0x558d03925380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d039252c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d03925428 <line:559:19>
| `-NonNullAttr 0x558d03925480 <col:49, col:63> 1
|-FunctionDecl 0x558d039256b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558d039254c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558d03925558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558d03925768 <col:39>
| `-NonNullAttr 0x558d039257c0 <col:69, col:86> 1 2
|-FunctionDecl 0x558d039258c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d03925808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d03925968 <line:564:22>
| `-NonNullAttr 0x558d039259c0 <col:52, col:66> 1
|-FunctionDecl 0x558d03925b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d03925a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d03925bd0 <line:566:22>
| `-NonNullAttr 0x558d03925c28 <col:52, col:66> 1
|-FunctionDecl 0x558d03925de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558d03925c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558d03925d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558d03925e98 <col:39>
| `-NonNullAttr 0x558d03925ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x558d03925ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558d03925f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558d03926098 <line:571:22>
| `-NonNullAttr 0x558d039260f0 <col:52, col:66> 1
|-FunctionDecl 0x558d039262d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558d039261a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558d03926380 <line:573:22>
| `-NonNullAttr 0x558d039263d8 <col:63, col:77> 1
|-FunctionDecl 0x558d039264e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558d03926428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558d03926588 <line:575:22>
| `-NonNullAttr 0x558d039265e0 <col:63, col:77> 1
|-FunctionDecl 0x558d03926808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d03926628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558d039266a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x558d039268b8 <line:579:22>
| `-NonNullAttr 0x558d03926910 <col:63, col:80> 1 2
|-FunctionDecl 0x558d03926b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558d03926958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558d039269d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x558d03926be8 <line:582:22>
| `-NonNullAttr 0x558d03926c40 <col:63, col:77> 1
|-FunctionDecl 0x558d03926de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d03926c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558d03926d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x558d03926e98 <line:586:22>
| `-NonNullAttr 0x558d03926ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d03927078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558d03926f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558d03926fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x558d03927128 <col:36>
| `-NonNullAttr 0x558d03927180 <col:77, col:91> 1
|-FunctionDecl 0x558d039274b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x558d03927260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558d03927370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x558d03927568 <line:591:22>
| `-NonNullAttr 0x558d039275c0 <col:63, col:77> 1
|-FunctionDecl 0x558d03927738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558d03927608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558d039277e0 <line:593:22>
| `-NonNullAttr 0x558d03927838 <col:63, col:77> 1
|-FunctionDecl 0x558d03927940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558d03927888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558d039279e8 <line:595:22>
| `-NonNullAttr 0x558d03927a40 <col:52, col:66> 1
|-FunctionDecl 0x558d03927b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558d03927aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558d03927c00 <line:597:22>
| `-NonNullAttr 0x558d03927c58 <col:52, col:66> 1
|-FunctionDecl 0x558d03927e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x558d03927ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558d03927d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x558d03927f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x558d03928268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558d03927fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558d03928030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558d039280c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x558d03928320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x558d03928538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558d03928400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558d039285e0 <line:606:22>
| `-NonNullAttr 0x558d03928638 <col:63, col:77> 1
|-FunctionDecl 0x558d03928740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558d03928688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558d039287e8 <line:608:22>
| `-NonNullAttr 0x558d03928840 <col:63, col:77> 1
|-FunctionDecl 0x558d03928aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d03928888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558d03928908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x558d03928b50 <line:612:22>
| `-NonNullAttr 0x558d03928ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x558d03928db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x558d03928bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558d03928c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x558d03928e68 <col:37>
| `-NonNullAttr 0x558d03928ec0 <col:78, col:92> 1
|-FunctionDecl 0x558d039290d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x558d03928f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558d03928fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x558d03929188 <line:618:22>
| `-NonNullAttr 0x558d039291e0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d039293a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x558d03929228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558d039292a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x558d03929458 <line:621:22>
| `-NonNullAttr 0x558d039294b0 <col:63, col:77> 1
|-FunctionDecl 0x558d03929758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x558d03929590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x558d03929610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x558d03929808 <line:623:22>
| `-NonNullAttr 0x558d03929860 <col:63, col:77> 1
|-FunctionDecl 0x558d039299d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558d039298a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558d03929ab0 <line:625:22>
| `-NonNullAttr 0x558d03929b08 <col:63, col:77> 1
|-FunctionDecl 0x558d03929c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558d03929b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558d03929cb8 <line:627:22>
| `-NonNullAttr 0x558d03929d10 <col:52, col:66> 1
|-FunctionDecl 0x558d03929e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558d03929d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558d03929eb8 <line:629:22>
| `-NonNullAttr 0x558d03929f10 <col:52, col:66> 1
|-FunctionDecl 0x558d0392a010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558d03929f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558d0392a0b8 <line:631:22>
| `-NonNullAttr 0x558d0392a110 <col:52, col:66> 1
|-FunctionDecl 0x558d0392a4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x558d0392a1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x558d0392a300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558d0392a380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x558d0392a5a0 <line:635:22>
| `-NonNullAttr 0x558d0392a5f8 <col:63, col:77> 1
|-FunctionDecl 0x558d0392a778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558d0392a648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558d0392a820 <line:637:22>
| `-NonNullAttr 0x558d0392a878 <col:63, col:77> 1
|-FunctionDecl 0x558d0392a980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558d0392a8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558d0392aa28 <line:639:22>
| `-NonNullAttr 0x558d0392aa80 <col:52, col:66> 1
|-FunctionDecl 0x558d0392bc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558d0392bb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558d0392bd30 <line:641:22>
| `-NonNullAttr 0x558d0392bd88 <col:63, col:77> 1
|-FunctionDecl 0x558d0392be90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558d0392bdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558d0392bf38 <line:643:22>
| `-NonNullAttr 0x558d0392bf90 <col:63, col:77> 1
|-FunctionDecl 0x558d0392c1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558d0392bfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558d0392c058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x558d0392c268 <line:647:22>
| `-NonNullAttr 0x558d0392c2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x558d0392c4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x558d0392c308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x558d0392c388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x558d0392c578 <line:650:22>
| `-NonNullAttr 0x558d0392c5d0 <col:63, col:77> 1
|-FunctionDecl 0x558d0392c918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x558d0392c6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x558d0392c7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x558d0392c9c8 <line:653:22>
| `-NonNullAttr 0x558d0392ca20 <col:63, col:77> 1
|-FunctionDecl 0x558d0392cb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x558d0392ca68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558d0392cc30 <col:69>
|-FunctionDecl 0x558d0392cda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x558d0392cc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558d0392ce50 <col:72>
|-FunctionDecl 0x558d0392d088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x558d0392ceb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x558d0392cf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x558d0392d138 <col:44>
|-FunctionDecl 0x558d0392d358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x558d0392d1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558d0392d218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x558d0392d408 <line:660:22>
| `-NonNullAttr 0x558d0392d460 <col:63, col:77> 2
|-FunctionDecl 0x558d0392d8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x558d0392d540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x558d0392d650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x558d0392d760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x558d0392d960 <col:47>
|-FunctionDecl 0x558d0392daf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x558d0392d9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558d0392dc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x558d0392dbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558d0392dda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x558d0392dd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558d0392def8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x558d0392de60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558d0392dfc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x558d0392e080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x558d0392e140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x558d0392e1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x558d0392e278 prev 0x558d0392e1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x558d0392e2e0 <col:24> 'int' 0
|-VarDecl 0x558d0392e318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x558d0392e398 prev 0x558d0392e318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x558d0392e400 <col:27> 'int' 0
|-VarDecl 0x558d0392e438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x558d0392e4b8 prev 0x558d0392e438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x558d0392e520 <col:27> 'int' 0
|-VarDecl 0x558d0392e558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x558d0392e5d8 prev 0x558d0392e558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x558d0392e640 <col:27> 'int' 0
|-VarDecl 0x558d0392e678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x558d0392e6f8 prev 0x558d0392e678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x558d0392e760 <col:27> 'int' 0
|-VarDecl 0x558d0392e798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x558d0392e818 prev 0x558d0392e798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x558d0392e880 <col:9> 'int' 0
|-VarDecl 0x558d0392e8b0 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x558d0392e930 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x558d0392e9a8 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x558d0392ea20 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x558d0392eb00 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x558d0392eb78 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x558d0392ebf0 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x558d0392ec68 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x558d0392ece0 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x558d0392ed58 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x558d0392edd0 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x558d0392ee48 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x558d0392eec0 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x558d0392ef40 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x558d0392efc0 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x558d0392f038 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x558d0392f0b8 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x558d0392f130 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x558d0392f1a8 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x558d0392f220 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x558d0392f2a0 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x558d0392f320 prev 0x558d0392f2a0 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x558d0392f388 <col:9> 'int' 0
|-VarDecl 0x558d0392f3c0 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x558d0392f440 prev 0x558d0392f3c0 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x558d0392f4a8 <col:9> 'int' 0
|-VarDecl 0x558d0392f4e0 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x558d0392f560 prev 0x558d0392f4e0 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x558d0392f5c8 <col:9> 'int' 0
|-VarDecl 0x558d0392f5f8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x558d0392f670 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x558d0392f788 prev 0x558d0392daf0 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x558d0392f6f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558d03931048 <line:713:1, line:741:1>
|   |-CallExpr 0x558d0392f898 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d0392f880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d0392f830 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d0392f910 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558d0392f8b8 <col:3> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x558d0392f8f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d0392f8d8 <col:15> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x558d0392f970 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558d0392f930 <col:3> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x558d0392f950 <col:15> 'int' 1
|   |-BinaryOperator 0x558d0392f9e8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d0392f990 <col:3> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d0392f9d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d0392f9b0 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d0392fa80 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558d0392fa08 <col:3> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x558d0392fa58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558d0392fa28 <col:27> 'int' 1
|   |-CallExpr 0x558d0392fc18 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x558d0392fc00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x558d0392faa0 <col:3> 'void (int)' Function 0x558d038d4bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x558d0392fbb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x558d0392fb90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x558d0392fb70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x558d0392fb28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x558d0392fb10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x558d0392fac0 <col:23> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x558d0392fb58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x558d0392fb40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x558d0392fae0 <col:41> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d0392fc98 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d0392fc40 <col:3> '_Bool' lvalue Var 0x558d0392ec68 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x558d0392fc80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d0392fc60 <col:20> '_Bool' lvalue Var 0x558d0392e9a8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x558d0392fd10 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d0392fcb8 <col:3> '_Bool' lvalue Var 0x558d0392ece0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558d0392fcf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d0392fcd8 <col:20> '_Bool' lvalue Var 0x558d0392ea20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558d0392fd88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d0392fd30 <col:3> '_Bool' lvalue Var 0x558d0392ed58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558d0392fd70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d0392fd50 <col:20> '_Bool' lvalue Var 0x558d0392eb00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558d0392fe00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d0392fda8 <col:3> '_Bool' lvalue Var 0x558d0392edd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558d0392fde8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d0392fdc8 <col:20> '_Bool' lvalue Var 0x558d0392eb78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558d0392fe78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558d0392fe20 <col:3> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558d0392fe60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d0392fe40 <col:20> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x558d0392ff10 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558d0392fe98 <col:3> '_Bool' lvalue Var 0x558d0392ea20 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x558d0392fee8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558d0392feb8 <col:27> 'int' 1
|   |-CallExpr 0x558d0392ff68 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d0392ff50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d0392ff30 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d0392ffc0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d0392ffa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d0392ff88 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d03930038 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558d0392ffe0 <col:3> 'int' lvalue Var 0x558d0392e398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x558d03930020 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d03930000 <col:25> 'int' lvalue Var 0x558d0392f320 'x' 'int'
|   |-CallExpr 0x558d03930090 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03930078 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03930058 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d039300e8 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d039300d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d039300b0 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d039303d0 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558d03930108 <col:3> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   | `-ConditionalOperator 0x558d039303a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558d039301c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558d03930180 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558d03930168 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558d03930128 <col:7> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558d039301b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558d03930198 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558d03930148 <col:25> '_Bool' lvalue Var 0x558d0392ea20 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x558d03930388 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d039301e8 <col:42> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558d03930368 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558d03930338 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558d039302a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558d03930260 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558d03930248 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558d03930208 <col:55> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558d03930290 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558d03930278 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558d03930228 <col:73> '_Bool' lvalue Var 0x558d0392ece0 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x558d03930308 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d039302c8 <col:90> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558d03930320 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d039302e8 <col:102> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   |-BinaryOperator 0x558d039305d8 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d039303f0 <col:3> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d039305c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03930590 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d039304b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d03930468 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d03930450 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d03930410 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d03930498 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d03930480 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d03930430 <col:38> '_Bool' lvalue Var 0x558d0392ea20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03930548 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03930500 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d039304d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03930578 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03930560 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03930528 <col:66> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d039308c0 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d039305f8 <col:3> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d039308a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03930878 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d03930798 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d039306b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d03930670 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d03930658 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d03930618 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d039306a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d03930688 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d03930638 <col:38> '_Bool' lvalue Var 0x558d0392ea20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558d03930778 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d03930730 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d03930718 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d039306d8 <col:56> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d03930760 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d03930748 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d039306f8 <col:74> '_Bool' lvalue Var 0x558d0392ece0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03930830 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d039307e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d039307b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03930860 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03930848 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03930810 <col:102> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558d03930ac8 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d039308e0 <col:3> '_Bool' lvalue Var 0x558d0392ea20 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558d03930ab0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03930a80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d039309a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d03930958 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d03930940 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d03930900 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d03930988 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d03930970 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d03930920 <col:38> '_Bool' lvalue Var 0x558d0392ea20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03930a38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d039309f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d039309c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03930a68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03930a50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03930a18 <col:66> '_Bool' lvalue Var 0x558d0392ea20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558d03930dc8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d03930ae8 <col:3> '_Bool' lvalue Var 0x558d0392ece0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558d03930db0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03930d80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d03930ca0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d03930bc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d03930b78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d03930b60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d03930b20 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d03930ba8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d03930b90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d03930b40 <col:38> '_Bool' lvalue Var 0x558d0392ea20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558d03930c80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d03930c38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d03930c20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d03930be0 <col:56> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d03930c68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d03930c50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d03930c00 <col:74> '_Bool' lvalue Var 0x558d0392ece0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03930d38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03930cf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d03930cc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03930d68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03930d50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03930d18 <col:102> '_Bool' lvalue Var 0x558d0392ece0 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x558d03930e20 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03930e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03930de8 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d03930e78 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d03930e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03930e40 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d03930f30 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558d03930e98 <col:3> 'int' lvalue Var 0x558d0392e278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558d03930f10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558d03930ef8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d03930eb8 <col:22> 'int' lvalue Var 0x558d0392e278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558d03930ed8 <col:41> 'int' 1
|   |-CallExpr 0x558d03930f88 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03930f70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03930f50 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558d03931038 <line:740:3, col:36>
|     `-CallExpr 0x558d03931018 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558d03931000 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558d03930fa8 <col:10> 'void *(void)' Function 0x558d038d4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558d039311e0 prev 0x558d0392dc48 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x558d03931148 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558d03932430 <line:743:1, line:761:1>
|   |-CallExpr 0x558d039312c0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d039312a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03931288 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d03931320 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558d039312e0 <col:3> 'int' lvalue Var 0x558d0392f320 'x' 'int'
|   | `-IntegerLiteral 0x558d03931300 <col:7> 'int' 1
|   |-CallExpr 0x558d03931378 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03931360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03931340 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d039313d0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d039313b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03931398 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d03931448 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558d039313f0 <col:3> 'int' lvalue Var 0x558d0392e4b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x558d03931430 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d03931410 <col:25> 'int' lvalue Var 0x558d0392f440 'y' 'int'
|   |-CallExpr 0x558d039314a0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03931488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03931468 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d039314f8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d039314e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d039314c0 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d039317e0 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558d03931518 <col:3> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   | `-ConditionalOperator 0x558d039317b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558d039315d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558d03931590 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558d03931578 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558d03931538 <col:7> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558d039315c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558d039315a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558d03931558 <col:25> '_Bool' lvalue Var 0x558d0392eb00 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x558d03931798 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d039315f8 <col:42> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558d03931778 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558d03931748 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558d039316b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558d03931670 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558d03931658 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558d03931618 <col:55> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558d039316a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558d03931688 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558d03931638 <col:73> '_Bool' lvalue Var 0x558d0392ed58 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x558d03931718 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d039316d8 <col:90> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558d03931730 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d039316f8 <col:102> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   |-BinaryOperator 0x558d039319e8 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d03931800 <col:3> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d039319d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d039319a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d039318c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d03931878 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d03931860 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d03931820 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d039318a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d03931890 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d03931840 <col:38> '_Bool' lvalue Var 0x558d0392eb00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03931958 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03931910 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d039318e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03931988 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03931970 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03931938 <col:66> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d03931cf8 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d03931a08 <col:3> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d03931ce0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03931cb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d03931bd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d03931ac8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d03931a80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d03931a68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d03931a28 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d03931ab0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d03931a98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d03931a48 <col:38> '_Bool' lvalue Var 0x558d0392eb00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558d03931bb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d03931b68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d03931b50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d03931ae8 <col:56> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d03931b98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d03931b80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d03931b30 <col:74> '_Bool' lvalue Var 0x558d0392ed58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03931c68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03931c20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d03931bf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03931c98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03931c80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03931c48 <col:102> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558d03931f00 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d03931d18 <col:3> '_Bool' lvalue Var 0x558d0392eb00 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558d03931ee8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03931eb8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d03931dd8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d03931d90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d03931d78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d03931d38 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d03931dc0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d03931da8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d03931d58 <col:38> '_Bool' lvalue Var 0x558d0392eb00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03931e70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03931e28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d03931df8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03931ea0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03931e88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03931e50 <col:66> '_Bool' lvalue Var 0x558d0392eb00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558d039321e8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d03931f20 <col:3> '_Bool' lvalue Var 0x558d0392ed58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558d039321d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d039321a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d039320c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d03931fe0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d03931f98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d03931f80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d03931f40 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d03931fc8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d03931fb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d03931f60 <col:38> '_Bool' lvalue Var 0x558d0392eb00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558d039320a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d03932058 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d03932040 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d03932000 <col:56> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d03932088 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d03932070 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d03932020 <col:74> '_Bool' lvalue Var 0x558d0392ed58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03932158 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03932110 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d039320e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03932188 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03932170 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03932138 <col:102> '_Bool' lvalue Var 0x558d0392ed58 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x558d03932240 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03932228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03932208 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d03932298 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d03932280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03932260 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d03932350 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558d039322b8 <col:3> 'int' lvalue Var 0x558d0392e278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558d03932330 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558d03932318 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d039322d8 <col:22> 'int' lvalue Var 0x558d0392e278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558d039322f8 <col:41> 'int' 1
|   |-CallExpr 0x558d039323a8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03932390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03932370 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558d03932420 <line:760:3, col:36>
|     `-CallExpr 0x558d03932400 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558d039323e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558d039323c8 <col:10> 'void *(void)' Function 0x558d038d4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558d03932578 prev 0x558d0392dda0 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x558d039324e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558d03933798 <line:763:1, line:781:1>
|   |-CallExpr 0x558d03932658 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d03932640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03932620 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d039326b8 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558d03932678 <col:3> 'int' lvalue Var 0x558d0392f440 'y' 'int'
|   | `-IntegerLiteral 0x558d03932698 <col:7> 'int' 1
|   |-CallExpr 0x558d03932710 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d039326f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d039326d8 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d03932768 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d03932750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03932730 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d039327c8 <line:768:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558d03932788 <col:3> 'int' lvalue Var 0x558d0392f560 'z' 'int'
|   | `-IntegerLiteral 0x558d039327a8 <col:7> 'int' 1
|   |-CallExpr 0x558d03932820 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03932808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d039327e8 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d03932878 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d03932860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03932840 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d03932b70 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558d03932898 <col:3> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   | `-ConditionalOperator 0x558d03932b40 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558d03932958 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558d03932910 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558d039328f8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558d039328b8 <col:7> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558d03932940 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558d03932928 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558d039328d8 <col:25> '_Bool' lvalue Var 0x558d0392eb78 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x558d03932b18 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d03932978 <col:42> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558d03932af8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558d03932ac8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558d03932a38 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558d039329f0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558d039329d8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558d03932998 <col:55> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558d03932a20 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558d03932a08 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558d039329b8 <col:73> '_Bool' lvalue Var 0x558d0392edd0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558d03932a98 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d03932a58 <col:90> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558d03932ab0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03932a78 <col:102> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   |-BinaryOperator 0x558d03932d78 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d03932b90 <col:3> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d03932d60 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03932d30 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d03932c50 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d03932c08 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d03932bf0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d03932bb0 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d03932c38 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d03932c20 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d03932bd0 <col:38> '_Bool' lvalue Var 0x558d0392eb78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03932ce8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03932ca0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d03932c70 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03932d18 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03932d00 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03932cc8 <col:66> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d03933060 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d03932d98 <col:3> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d03933048 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03933018 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d03932f38 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d03932e58 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d03932e10 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d03932df8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d03932db8 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d03932e40 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d03932e28 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d03932dd8 <col:38> '_Bool' lvalue Var 0x558d0392eb78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558d03932f18 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d03932ed0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d03932eb8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d03932e78 <col:56> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d03932f00 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d03932ee8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d03932e98 <col:74> '_Bool' lvalue Var 0x558d0392edd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03932fd0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03932f88 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d03932f58 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03933000 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03932fe8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03932fb0 <col:102> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558d03933268 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d03933080 <col:3> '_Bool' lvalue Var 0x558d0392eb78 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558d03933250 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03933220 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d03933140 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d039330f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d039330e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d039330a0 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d03933128 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d03933110 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d039330c0 <col:38> '_Bool' lvalue Var 0x558d0392eb78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558d039331d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03933190 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d03933160 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03933208 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d039331f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d039331b8 <col:66> '_Bool' lvalue Var 0x558d0392eb78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558d03933550 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d03933288 <col:3> '_Bool' lvalue Var 0x558d0392edd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558d03933538 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03933508 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d03933428 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d03933348 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d03933300 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d039332e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d039332a8 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d03933330 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d03933318 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d039332c8 <col:38> '_Bool' lvalue Var 0x558d0392eb78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558d03933408 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d039333c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d039333a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d03933368 <col:56> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d039333f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d039333d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d03933388 <col:74> '_Bool' lvalue Var 0x558d0392edd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558d039334c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03933478 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d03933448 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d039334f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d039334d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d039334a0 <col:102> '_Bool' lvalue Var 0x558d0392edd0 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x558d039335a8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03933590 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03933570 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d03933600 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d039335e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d039335c8 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d039336b8 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558d03933620 <col:3> 'int' lvalue Var 0x558d0392e278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558d03933698 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558d03933680 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d03933640 <col:22> 'int' lvalue Var 0x558d0392e278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558d03933660 <col:41> 'int' 1
|   |-CallExpr 0x558d03933710 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d039336f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d039336d8 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558d03933788 <line:780:3, col:36>
|     `-CallExpr 0x558d03933768 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558d03933750 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558d03933730 <col:10> 'void *(void)' Function 0x558d038d4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558d039338e0 prev 0x558d0392def8 <line:782:1, line:817:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x558d03933848 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558d039375e8 <line:783:1, line:817:1>
|   |-CallExpr 0x558d039339c0 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d039339a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03933988 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d03933a20 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558d039339e0 <col:3> 'int' lvalue Var 0x558d0392f560 'z' 'int'
|   | `-IntegerLiteral 0x558d03933a00 <col:7> 'int' 2
|   |-CallExpr 0x558d03933a78 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03933a60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03933a40 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d03933ad0 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d03933ab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03933a98 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d03933b68 <line:788:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558d03933af0 <col:3> 'int' lvalue Var 0x558d0392e5d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x558d03933b50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d03933b10 <col:25> 'int' lvalue Var 0x558d0392f560 'z' 'int'
|   |-CallExpr 0x558d03933bc0 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03933ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03933b88 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d03933c18 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d03933c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03933be0 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d03933cc8 <line:791:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558d03933c38 <col:3> '_Bool' lvalue Var 0x558d0392f5f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x558d03933cb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x558d03933c90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x558d03933c78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x558d03933c58 <col:19> 'void *(void)' Function 0x558d038d4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x558d03933d78 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558d03933ce8 <col:3> '_Bool' lvalue Var 0x558d0392f670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x558d03933d60 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x558d03933d40 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x558d03933d28 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x558d03933d08 <col:19> 'void *(void)' Function 0x558d038d4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x558d03933df0 <line:793:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x558d03933d98 <col:3> '_Bool' lvalue Var 0x558d0392e8b0 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x558d03933dd8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d03933db8 <col:21> '_Bool' lvalue Var 0x558d0392f670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x558d03933e68 <line:794:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558d03933e10 <col:3> 'int' lvalue Var 0x558d0392e930 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x558d03933e50 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d03933e30 <col:15> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   |-BinaryOperator 0x558d039342a0 <line:795:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x558d03933e88 <col:3> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   | `-ConditionalOperator 0x558d03934270 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x558d03934098 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x558d03933fb8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x558d03933ee0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x558d03933ec8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x558d03933ea8 <col:8> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x558d03933f98 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x558d03933f30 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x558d03933f18 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x558d03933ef8 <col:27> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x558d03933f80 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x558d03933f68 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x558d03933f48 <col:46> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x558d03934078 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x558d03934010 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x558d03933ff8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x558d03933fd8 <col:65> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x558d03934060 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x558d03934048 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x558d03934028 <col:84> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x558d03934258 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d039340b8 <col:101> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   |   `-ParenExpr 0x558d03934238 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x558d03934208 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x558d03934178 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558d03934130 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558d03934118 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558d039340d8 <col:106> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558d03934160 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558d03934148 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558d039340f8 <col:124> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558d039341d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d03934198 <col:141> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x558d039341f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d039341b8 <col:153> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x558d039347b0 <line:796:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558d039342c0 <col:3> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x558d03934780 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558d03934750 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558d03934738 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558d039342e0 <col:15> '_Bool' lvalue Var 0x558d0392f670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558d03934768 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d03934300 <col:31> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558d03934718 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558d039346e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558d03934510 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558d03934430 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558d03934358 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558d03934340 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558d03934320 <col:45> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558d03934410 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558d039343a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558d03934390 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558d03934370 <col:64> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x558d039343f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558d039343e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558d039343c0 <col:83> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558d039344f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558d03934488 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558d03934470 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558d03934450 <col:102> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x558d039344d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558d039344c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558d039344a0 <col:121> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558d039346d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d03934530 <col:138> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x558d039346b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558d03934680 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558d039345f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558d039345a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558d03934590 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558d03934550 <col:151> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558d039345d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558d039345c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558d03934570 <col:169> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x558d03934650 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558d03934610 <col:186> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x558d03934668 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558d03934630 <col:198> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x558d03934ce0 <line:797:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x558d039347d0 <col:3> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x558d03934cb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x558d03934c80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558d03934c68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558d039347f0 <col:15> '_Bool' lvalue Var 0x558d0392f670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558d03934c98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d03934810 <col:31> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x558d03934c48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x558d03934c18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x558d03934a20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x558d03934940 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x558d03934868 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x558d03934850 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x558d03934830 <col:45> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x558d03934920 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x558d039348b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x558d039348a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x558d03934880 <col:64> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x558d03934908 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x558d039348f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x558d039348d0 <col:83> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x558d03934a00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x558d03934998 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x558d03934980 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x558d03934960 <col:102> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x558d039349e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x558d039349d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x558d039349b0 <col:121> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558d03934c00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d03934a40 <col:138> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x558d03934be0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x558d03934bb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x558d03934b00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558d03934ab8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558d03934aa0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558d03934a60 <col:151> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558d03934ae8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558d03934ad0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558d03934a80 <col:169> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x558d03934b80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558d03934b20 <col:186> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x558d03934b98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x558d03934b60 <col:198> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x558d03935288 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558d03934d00 <col:3> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d03935270 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03935240 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558d039351f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d039351e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d03934d20 <col:20> '_Bool' lvalue Var 0x558d0392f670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03935228 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d03935210 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d03934d40 <col:36> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x558d039351c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558d03935190 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558d03934f50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558d03934e70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558d03934d98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558d03934d80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558d03934d60 <col:55> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558d03934e50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558d03934de8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558d03934dd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558d03934db0 <col:74> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558d03934e38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558d03934e20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558d03934e00 <col:93> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558d03934f30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558d03934ec8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558d03934eb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558d03934e90 <col:112> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558d03934f18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558d03934f00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558d03934ee0 <col:131> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558d03935178 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558d03935160 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558d03934f70 <col:148> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x558d03935140 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558d03935110 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558d03935030 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558d03934fe8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558d03934fd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558d03934f90 <col:166> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558d03935018 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558d03935000 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558d03934fb0 <col:184> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558d039350c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558d03935080 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558d03935050 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558d039350f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558d039350e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558d039350a8 <col:212> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d03935850 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558d039352a8 <col:3> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d03935838 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03935808 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558d039357c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d039357a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d039352c8 <col:20> '_Bool' lvalue Var 0x558d0392f670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d039357f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d039357d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d039352e8 <col:36> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x558d03935788 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558d03935758 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558d039354f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558d03935418 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558d03935340 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558d03935328 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558d03935308 <col:55> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558d039353f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558d03935390 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558d03935378 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558d03935358 <col:74> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558d039353e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558d039353c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558d039353a8 <col:93> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558d039354d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558d03935470 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558d03935458 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558d03935438 <col:112> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558d039354c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558d039354a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558d03935488 <col:131> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558d03935740 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558d03935728 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558d03935518 <col:148> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x558d03935708 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558d039356d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558d039355d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558d03935590 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558d03935578 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558d03935538 <col:166> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558d039355c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558d039355a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558d03935558 <col:184> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558d039356a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558d03935628 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558d039355f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558d039356c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558d03935680 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558d03935650 <col:219> 'int' 0
|   |-BinaryOperator 0x558d03935e10 <line:800:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x558d03935870 <col:3> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558d03935df8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03935dc8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x558d03935d80 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d03935d68 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d03935890 <col:20> '_Bool' lvalue Var 0x558d0392f670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03935db0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d03935d98 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d039358b0 <col:36> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x558d03935d48 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x558d03935d18 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x558d03935ac0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558d039359e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558d03935908 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558d039358f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558d039358d0 <col:55> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558d039359c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558d03935958 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558d03935940 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558d03935920 <col:74> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558d039359a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558d03935990 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558d03935970 <col:93> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558d03935aa0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558d03935a38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558d03935a20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558d03935a00 <col:112> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558d03935a88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558d03935a70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558d03935a50 <col:131> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558d03935d00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558d03935ce8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558d03935ae0 <col:148> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x558d03935cc8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x558d03935c98 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x558d03935bb8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558d03935b70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558d03935b40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558d03935b00 <col:166> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558d03935ba0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558d03935b88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558d03935b20 <col:184> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558d03935c50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558d03935c08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558d03935bd8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558d03935c80 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x558d03935c68 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x558d03935c30 <col:212> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x558d039363d8 <line:801:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x558d03935e30 <col:3> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558d039363c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03936390 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x558d03936348 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d03936330 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d03935e50 <col:20> '_Bool' lvalue Var 0x558d0392f670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03936378 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558d03936360 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558d03935e70 <col:36> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x558d03936310 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x558d039362e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x558d03936080 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x558d03935fa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x558d03935ec8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x558d03935eb0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x558d03935e90 <col:55> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x558d03935f80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x558d03935f18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x558d03935f00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x558d03935ee0 <col:74> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x558d03935f68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x558d03935f50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x558d03935f30 <col:93> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x558d03936060 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x558d03935ff8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x558d03935fe0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x558d03935fc0 <col:112> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x558d03936048 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x558d03936030 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x558d03936010 <col:131> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x558d039362c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558d039362b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558d039360a0 <col:148> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x558d03936290 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x558d03936260 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x558d03936160 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558d03936118 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558d03936100 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558d039360c0 <col:166> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558d03936148 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558d03936130 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558d039360e0 <col:184> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x558d03936230 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558d039361b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558d03936180 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x558d03936248 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x558d03936208 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x558d039361d8 <col:219> 'int' 0
|   |-BinaryOperator 0x558d03936450 <line:802:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558d039363f8 <col:3> 'int' lvalue Var 0x558d0392e6f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x558d03936438 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558d03936418 <col:25> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   |-BinaryOperator 0x558d03936580 <line:803:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x558d03936470 <col:3> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   | `-ConditionalOperator 0x558d03936550 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x558d03936508 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558d039364f0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558d03936490 <col:7> '_Bool' lvalue Var 0x558d0392e8b0 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x558d03936520 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d039364b0 <col:25> 'int' lvalue Var 0x558d0392e930 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x558d03936538 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x558d039364d0 <col:37> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   |-BinaryOperator 0x558d03936618 <line:804:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x558d039365a0 <col:3> '_Bool' lvalue Var 0x558d0392e8b0 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x558d039365f0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558d039365c0 <col:28> 'int' 0
|   |-CallExpr 0x558d03936670 <line:805:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03936658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03936638 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d039366c8 <line:806:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d039366b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03936690 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d039369b0 <line:807:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558d039366e8 <col:3> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   | `-ConditionalOperator 0x558d03936980 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558d039367a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558d03936760 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558d03936748 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558d03936708 <col:7> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558d03936790 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558d03936778 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558d03936728 <col:25> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x558d03936968 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d039367c8 <col:42> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x558d03936948 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558d03936918 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558d03936888 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558d03936840 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558d03936828 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558d039367e8 <col:55> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558d03936870 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558d03936858 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558d03936808 <col:73> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x558d039368e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558d039368a8 <col:90> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558d03936900 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d039368c8 <col:102> 'int' lvalue Var 0x558d0392e818 'a' 'int'
|   |-BinaryOperator 0x558d03936bc8 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d039369d0 <col:3> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d03936bb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03936b80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d03936a90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d03936a48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d03936a30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d039369f0 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d03936a78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d03936a60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d03936a10 <col:38> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03936b28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03936ae0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d03936ab0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03936b58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03936b40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03936b08 <col:66> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558d03936eb0 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d03936be8 <col:3> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558d03936e98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03936e68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d03936d88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d03936ca8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d03936c60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d03936c48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d03936c08 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d03936c90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d03936c78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d03936c28 <col:38> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x558d03936d68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d03936d20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d03936d08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d03936cc8 <col:56> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d03936d50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d03936d38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d03936ce8 <col:74> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03936e20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03936dd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d03936da8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03936e50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03936e38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03936e00 <col:102> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558d039370b8 <line:810:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558d03936ed0 <col:3> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558d039370a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03937070 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558d03936f90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558d03936f48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558d03936f30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558d03936ef0 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558d03936f78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558d03936f60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558d03936f10 <col:38> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03937028 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d03936fe0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d03936fb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03937058 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03937040 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d03937008 <col:66> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x558d039373a0 <line:811:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558d039370d8 <col:3> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x558d03937388 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558d03937358 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558d03937278 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558d03937198 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558d03937150 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558d03937138 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558d039370f8 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558d03937180 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558d03937168 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558d03937118 <col:38> '_Bool' lvalue Var 0x558d0392ebf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x558d03937258 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558d03937210 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558d039371f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558d039371b8 <col:56> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558d03937240 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558d03937228 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558d039371d8 <col:74> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x558d03937310 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558d039372c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558d03937298 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558d03937340 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558d03937328 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558d039372f0 <col:102> '_Bool' lvalue Var 0x558d0392ee48 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x558d039373f8 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d039373e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d039373c0 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558d03937450 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558d03937438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03937418 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558d03937508 <line:814:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558d03937470 <col:3> 'int' lvalue Var 0x558d0392e278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558d039374e8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558d039374d0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558d03937490 <col:22> 'int' lvalue Var 0x558d0392e278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558d039374b0 <col:41> 'int' 1
|   |-CallExpr 0x558d03937560 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558d03937548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558d03937528 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558d039375d8 <line:816:3, col:36>
|     `-CallExpr 0x558d039375b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558d039375a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558d03937580 <col:10> 'void *(void)' Function 0x558d038d4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558d03937720 prev 0x558d0392dfc0 <line:818:1, line:820:1> line:818:6 fence 'void ()'
| `-CompoundStmt 0x558d039377c0 <line:819:1, line:820:1>
|-FunctionDecl 0x558d039377f0 prev 0x558d0392e080 <line:821:1, line:823:1> line:821:6 isync 'void ()'
| `-CompoundStmt 0x558d03937890 <line:822:1, line:823:1>
|-FunctionDecl 0x558d039378c0 prev 0x558d0392e140 <line:824:1, line:826:1> line:824:6 lwfence 'void ()'
| `-CompoundStmt 0x558d03937960 <line:825:1, line:826:1>
`-FunctionDecl 0x558d039379c8 <line:827:1, line:853:1> line:827:5 main 'int ()'
  `-CompoundStmt 0x558d039399f0 <line:828:1, line:853:1>
    |-DeclStmt 0x558d03937ae0 <line:829:3, col:17>
    | `-VarDecl 0x558d03937a78 <col:3, col:13> col:13 used t699 'pthread_t':'unsigned long'
    |-CallExpr 0x558d03937d08 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x558d03937cf0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d03937af8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558d03915488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558d03937b38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558d03937b18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558d03937a78 't699' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558d03937d48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558d03937bd0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x558d03937ba8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558d03937b50 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x558d03937d60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d03937bf0 <col:38> 'void *(void *)' Function 0x558d0392f788 'P0' 'void *(void *)'
    | `-ParenExpr 0x558d03937c70 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x558d03937c48 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558d03937c10 <col:51> 'int' 0
    |-DeclStmt 0x558d03937df0 <line:831:3, col:17>
    | `-VarDecl 0x558d03937d88 <col:3, col:13> col:13 used t700 'pthread_t':'unsigned long'
    |-CallExpr 0x558d03937f98 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x558d03937f80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d03937e08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558d03915488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558d03937e48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558d03937e28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558d03937d88 't700' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558d03937fd8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558d03937ec0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x558d03937e98 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558d03937e60 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x558d03937ff0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d03937ee0 <col:38> 'void *(void *)' Function 0x558d039311e0 'P1' 'void *(void *)'
    | `-ParenExpr 0x558d03937f60 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x558d03937f38 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558d03937f00 <col:51> 'int' 0
    |-DeclStmt 0x558d03938080 <line:833:3, col:17>
    | `-VarDecl 0x558d03938018 <col:3, col:13> col:13 used t701 'pthread_t':'unsigned long'
    |-CallExpr 0x558d03938228 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x558d03938210 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d03938098 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558d03915488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558d039380d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558d039380b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558d03938018 't701' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558d03938268 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558d03938150 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x558d03938128 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558d039380f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x558d03938280 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d03938170 <col:38> 'void *(void *)' Function 0x558d03932578 'P2' 'void *(void *)'
    | `-ParenExpr 0x558d039381f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x558d039381c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558d03938190 <col:51> 'int' 0
    |-DeclStmt 0x558d03938310 <line:835:3, col:17>
    | `-VarDecl 0x558d039382a8 <col:3, col:13> col:13 used t702 'pthread_t':'unsigned long'
    |-CallExpr 0x558d039384b8 <line:836:3, col:53> 'int'
    | |-ImplicitCastExpr 0x558d039384a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d03938328 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558d03915488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558d03938368 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558d03938348 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558d039382a8 't702' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558d039384f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558d039383e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x558d039383b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558d03938380 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x558d03938510 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d03938400 <col:38> 'void *(void *)' Function 0x558d039338e0 'P3' 'void *(void *)'
    | `-ParenExpr 0x558d03938480 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x558d03938458 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558d03938420 <col:51> 'int' 0
    |-CallExpr 0x558d03938560 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558d03938548 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d03938528 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558d03938630 <line:838:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x558d03938580 <col:3> '_Bool' lvalue Var 0x558d0392f1a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x558d03938618 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x558d039385f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x558d039385e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x558d039385a0 <col:21> 'int' lvalue Var 0x558d0392e278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x558d039385c0 <col:41> 'int' 4
    |-CallExpr 0x558d03938688 <line:839:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558d03938670 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d03938650 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558d03938700 <line:840:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558d039386e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d039386a8 <col:3> 'void (int)' Function 0x558d038d4790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x558d03938740 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558d03938728 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558d039386c8 <col:21> '_Bool' lvalue Var 0x558d0392f1a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x558d03938790 <line:841:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558d03938778 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d03938758 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558d03938a78 <line:842:3, col:103> 'int' '='
    | |-DeclRefExpr 0x558d039387b0 <col:3> 'int' lvalue Var 0x558d0392e818 'a' 'int'
    | `-ConditionalOperator 0x558d03938a48 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x558d03938870 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x558d03938828 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x558d03938810 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x558d039387d0 <col:7> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x558d03938858 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x558d03938840 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x558d039387f0 <col:25> '_Bool' lvalue Var 0x558d0392e9a8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x558d03938a30 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558d03938890 <col:42> 'int' lvalue Var 0x558d0392efc0 'a$w_buff0' 'int'
    |   `-ParenExpr 0x558d03938a10 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x558d039389e0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x558d03938950 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x558d03938908 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x558d039388f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x558d039388b0 <col:55> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x558d03938938 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x558d03938920 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x558d039388d0 <col:73> '_Bool' lvalue Var 0x558d0392ec68 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x558d039389b0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x558d03938970 <col:90> 'int' lvalue Var 0x558d0392f0b8 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x558d039389c8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x558d03938990 <col:102> 'int' lvalue Var 0x558d0392e818 'a' 'int'
    |-BinaryOperator 0x558d03938ca8 <line:843:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558d03938a98 <col:3> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x558d03938c90 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558d03938c60 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558d03938b58 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558d03938b10 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558d03938af8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558d03938ab8 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558d03938b40 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558d03938b28 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558d03938ad8 <col:38> '_Bool' lvalue Var 0x558d0392e9a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558d03938c18 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558d03938bd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558d03938ba0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558d03938c48 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558d03938c30 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558d03938bf8 <col:66> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x558d03938f90 <line:844:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558d03938cc8 <col:3> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x558d03938f78 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558d03938f48 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558d03938e68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558d03938d88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558d03938d40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558d03938d28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558d03938ce8 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558d03938d70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558d03938d58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558d03938d08 <col:38> '_Bool' lvalue Var 0x558d0392e9a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558d03938e48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558d03938e00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558d03938de8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558d03938da8 <col:56> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558d03938e30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558d03938e18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558d03938dc8 <col:74> '_Bool' lvalue Var 0x558d0392ec68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558d03938f00 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558d03938eb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558d03938e88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558d03938f30 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558d03938f18 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558d03938ee0 <col:102> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x558d03939198 <line:845:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558d03938fb0 <col:3> '_Bool' lvalue Var 0x558d0392e9a8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558d03939180 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558d03939150 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558d03939070 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558d03939028 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558d03939010 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558d03938fd0 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558d03939058 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558d03939040 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558d03938ff0 <col:38> '_Bool' lvalue Var 0x558d0392e9a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558d03939108 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558d039390c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558d03939090 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558d03939138 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558d03939120 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558d039390e8 <col:66> '_Bool' lvalue Var 0x558d0392e9a8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x558d03939480 <line:846:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558d039391b8 <col:3> '_Bool' lvalue Var 0x558d0392ec68 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558d03939468 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558d03939438 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558d03939358 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558d03939278 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558d03939230 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558d03939218 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558d039391d8 <col:20> '_Bool' lvalue Var 0x558d0392f038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558d03939260 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558d03939248 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558d039391f8 <col:38> '_Bool' lvalue Var 0x558d0392e9a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558d03939338 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558d039392f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558d039392d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558d03939298 <col:56> '_Bool' lvalue Var 0x558d0392f130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558d03939320 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558d03939308 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558d039392b8 <col:74> '_Bool' lvalue Var 0x558d0392ec68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558d039393f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558d039393a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558d03939378 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558d03939420 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558d03939408 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558d039393d0 <col:102> '_Bool' lvalue Var 0x558d0392ec68 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x558d039394d8 <line:847:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558d039394c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d039394a0 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558d03939530 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558d03939518 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d039394f8 <col:3> 'void ()' Function 0x558d038d4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558d03939898 <line:849:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x558d03939550 <col:3> '_Bool' lvalue Var 0x558d0392f220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x558d03939880 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x558d03939868 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x558d03939848 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x558d03939828 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x558d03939790 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x558d039396f8 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x558d03939660 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x558d039395c8 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x558d039395b0 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x558d03939570 <col:23> 'int' lvalue Var 0x558d0392f560 'z' 'int'
    |         | | | | `-IntegerLiteral 0x558d03939590 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x558d03939640 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x558d03939628 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x558d039395e8 <col:33> 'int' lvalue Var 0x558d0392e398 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x558d03939608 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x558d039396d8 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x558d039396c0 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x558d03939680 <col:61> 'int' lvalue Var 0x558d0392e4b8 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x558d039396a0 <col:84> 'int' 0
    |         | `-BinaryOperator 0x558d03939770 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x558d03939758 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x558d03939718 <col:89> 'int' lvalue Var 0x558d0392e5d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x558d03939738 <col:112> 'int' 2
    |         `-BinaryOperator 0x558d03939808 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x558d039397f0 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x558d039397b0 <col:117> 'int' lvalue Var 0x558d0392e6f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x558d039397d0 <col:140> 'int' 0
    |-CallExpr 0x558d039398f0 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558d039398d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558d039398b8 <col:3> 'void ()' Function 0x558d038d4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558d03939968 <line:851:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558d03939950 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558d03939910 <col:3> 'void (int)' Function 0x558d038d4bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x558d039399a8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558d03939990 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558d03939930 <col:21> '_Bool' lvalue Var 0x558d0392f220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x558d039399e0 <line:852:3, col:10>
      `-IntegerLiteral 0x558d039399c0 <col:10> 'int' 0
