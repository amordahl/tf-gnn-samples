TranslationUnitDecl 0x555ecbe85e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x555ecbe866d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x555ecbe863b0 '__int128'
|-TypedefDecl 0x555ecbe86748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x555ecbe863d0 'unsigned __int128'
|-TypedefDecl 0x555ecbe86a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x555ecbe86820 'struct __NSConstantString_tag'
|   `-Record 0x555ecbe867a0 '__NSConstantString_tag'
|-TypedefDecl 0x555ecbe86af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x555ecbe86ab0 'char *'
|   `-BuiltinType 0x555ecbe85eb0 'char'
|-TypedefDecl 0x555ecbec5650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x555ecbe86d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x555ecbe86bd0 'struct __va_list_tag'
|     `-Record 0x555ecbe86b50 '__va_list_tag'
|-FunctionDecl 0x555ecbec5790 <./split_5/mix017_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x555ecbec56c0 <col:31> col:34 'int'
|-FunctionDecl 0x555ecbec5958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x555ecbec5a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x555ecbec5bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x555ecbec5b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x555ecbec5df8 <col:40, col:99>
|   |-IfStmt 0x555ecbec5dc8 <col:42, col:88>
|   | |-UnaryOperator 0x555ecbec5ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x555ecbec5c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x555ecbec5c70 <col:47> 'int' lvalue ParmVar 0x555ecbec5b38 'expression' 'int'
|   | `-CompoundStmt 0x555ecbec5db0 <col:59, col:88>
|   |   `-LabelStmt 0x555ecbec5d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x555ecbec5d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x555ecbec5d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x555ecbec5cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x555ecbec5a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x555ecbec5de0 <col:89>
|   `-ReturnStmt 0x555ecbec5de8 <col:91>
|-FunctionDecl 0x555ecbec5e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x555ecbec5f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x555ecbec6280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555ecbec5fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x555ecbec6038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x555ecbec60b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555ecbec6138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555ecbec6340 <line:10:22>
|-FunctionDecl 0x555ecbeec390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555ecbec63b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x555ecbec6430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x555ecbec64b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555ecbec6530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555ecbeec450 <line:13:22>
|-FunctionDecl 0x555ecbeec700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555ecbeec4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x555ecbeec540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x555ecbeec5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x555ecbeec7b8 <line:15:22>
|-TypedefDecl 0x555ecbeec828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x555ecbe85f70 'unsigned char'
|-TypedefDecl 0x555ecbeec898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x555ecbe85f90 'unsigned short'
|-TypedefDecl 0x555ecbeec908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x555ecbe85fb0 'unsigned int'
|-TypedefDecl 0x555ecbeec978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeec9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x555ecbe85ed0 'signed char'
|-TypedefDecl 0x555ecbeeca58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x555ecbe85f70 'unsigned char'
|-TypedefDecl 0x555ecbeecac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x555ecbe85ef0 'short'
|-TypedefDecl 0x555ecbeecb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x555ecbe85f90 'unsigned short'
|-TypedefDecl 0x555ecbeecba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x555ecbe85f10 'int'
|-TypedefDecl 0x555ecbeecc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x555ecbe85fb0 'unsigned int'
|-TypedefDecl 0x555ecbeecc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeeccf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeecd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeecdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeece48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeeceb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x555ecbe85fb0 'unsigned int'
|-TypedefDecl 0x555ecbeecf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x555ecbe85fb0 'unsigned int'
|-TypedefDecl 0x555ecbeecf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeed008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeed078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x555ecbe85fb0 'unsigned int'
|-TypedefDecl 0x555ecbeed0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeed158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeed1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeed238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x555ecbe85f10 'int'
|-RecordDecl 0x555ecbeed290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x555ecbeed408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x555ecbeed4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x555ecbeed460 'struct __fsid_t' sugar
|   `-RecordType 0x555ecbeed310 '__fsid_t'
|     `-Record 0x555ecbeed290 ''
|-TypedefDecl 0x555ecbeed548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeed5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeed628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeed698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x555ecbe85fb0 'unsigned int'
|-TypedefDecl 0x555ecbeed708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeed778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x555ecbe85fb0 'unsigned int'
|-TypedefDecl 0x555ecbeed7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeed858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x555ecbe85f10 'int'
|-TypedefDecl 0x555ecbeed8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x555ecbe85f10 'int'
|-TypedefDecl 0x555ecbeed938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x555ecbe85f10 'int'
|-TypedefDecl 0x555ecbeed9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x555ecbe86630 'void *'
|   `-BuiltinType 0x555ecbe85e70 'void'
|-TypedefDecl 0x555ecbeeda18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeeda88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeedaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeedb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeedbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeedc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeedcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeedd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeedd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeede08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeede78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeedf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x555ecbeeded0 '__off64_t' sugar
|   |-Typedef 0x555ecbeed1c8 '__off64_t'
|   `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeee000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x555ecbeedfc0 '__quad_t *'
|   `-TypedefType 0x555ecbeedf60 '__quad_t' sugar
|     |-Typedef 0x555ecbeecd68 '__quad_t'
|     `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeee070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x555ecbe86ab0 'char *'
|   `-BuiltinType 0x555ecbe85eb0 'char'
|-TypedefDecl 0x555ecbeee0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbeee150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x555ecbe85fb0 'unsigned int'
|-FunctionDecl 0x555ecbeee298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x555ecbeee1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x555ecbeef5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x555ecbeef5d8 <line:72:3, col:34>
|     `-CallExpr 0x555ecbeef598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x555ecbeef580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555ecbeef510 <col:10> '<builtin fn type>' Function 0x555ecbeef380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x555ecbeef5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x555ecbeef530 <col:29> 'unsigned int' lvalue ParmVar 0x555ecbeee1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x555ecbeef380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x555ecbeef420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x555ecbeef490 <col:10> Implicit
| `-ConstAttr 0x555ecbeef4e8 <col:10> Implicit
|-FunctionDecl 0x555ecbeef740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x555ecbeef638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x555ecbeefa58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x555ecbeefa48 <line:77:3, col:34>
|     `-CallExpr 0x555ecbeefa08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x555ecbeef9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555ecbeef978 <col:10> '<builtin fn type>' Function 0x555ecbeef7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x555ecbeefa30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x555ecbeef998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x555ecbeef638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x555ecbeef7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x555ecbeef888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x555ecbeef8f8 <col:10> Implicit
| `-ConstAttr 0x555ecbeef950 <col:10> Implicit
|-TypedefDecl 0x555ecbeefa88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-TypedefDecl 0x555ecbeefb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x555ecbeefae0 '__time_t' sugar
|   |-Typedef 0x555ecbeed708 '__time_t'
|   `-BuiltinType 0x555ecbe85f30 'long'
|-RecordDecl 0x555ecbeefb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x555ecbeefc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x555ecbeefcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x555ecbeefd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x555ecbeefd10 '__pid_t' sugar
|   |-Typedef 0x555ecbeed238 '__pid_t'
|   `-BuiltinType 0x555ecbe85f10 'int'
|-RecordDecl 0x555ecbeefda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x555ecbeefe60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x555ecbeefeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x555ecbeeff70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x555ecbeeffd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-RecordDecl 0x555ecbef0030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x555ecbef02c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x555ecbef13a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x555ecbef0310 'struct cpu_set_t' sugar
|   `-RecordType 0x555ecbef00b0 'cpu_set_t'
|     `-Record 0x555ecbef0030 ''
|-FunctionDecl 0x555ecbef1678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x555ecbef1448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555ecbef1550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x555ecbef1728 <line:107:19>
|-FunctionDecl 0x555ecbef1900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x555ecbef1790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x555ecbef19a8 <col:69>
|-FunctionDecl 0x555ecbef1b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x555ecbef1a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x555ecbef1bc8 <col:64>
|-FunctionDecl 0x555ecbef1e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x555ecbef1c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555ecbef1d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555ecbef1f38 <line:113:22>
|-FunctionDecl 0x555ecbef21b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x555ecbef1fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555ecbef2098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x555ecbef2268 <col:88>
|-FunctionDecl 0x555ecbef2588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555ecbef22d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555ecbef23b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x555ecbef2440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555ecbef2640 <col:62>
|-FunctionDecl 0x555ecbef27b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x555ecbef26a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x555ecbef2860 <col:63>
|-FunctionDecl 0x555ecbef2988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x555ecbef2a28 <col:47>
|-FunctionDecl 0x555ecbef2b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x555ecbef2a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555ecbef2bd8 <col:69>
|-FunctionDecl 0x555ecbef2ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x555ecbef2c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555ecbef2d88 <col:69>
|-FunctionDecl 0x555ecbef3048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555ecbef2df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555ecbef2f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x555ecbef30f8 <col:88>
|-TypedefDecl 0x555ecbef3188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x555ecbef3150 '__clock_t' sugar
|   |-Typedef 0x555ecbeed548 '__clock_t'
|   `-BuiltinType 0x555ecbe85f30 'long'
|-TypedefDecl 0x555ecbef3218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x555ecbef31e0 '__clockid_t' sugar
|   |-Typedef 0x555ecbeed938 '__clockid_t'
|   `-BuiltinType 0x555ecbe85f10 'int'
|-TypedefDecl 0x555ecbef32a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x555ecbef3270 '__timer_t' sugar
|   |-Typedef 0x555ecbeed9a8 '__timer_t'
|   `-PointerType 0x555ecbe86630 'void *'
|     `-BuiltinType 0x555ecbe85e70 'void'
|-RecordDecl 0x555ecbef3300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x555ecbef33d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x555ecbef3440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x555ecbef34a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x555ecbef3510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x555ecbef3578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x555ecbef35e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x555ecbef3648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x555ecbef36b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x555ecbef3718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x555ecbef3780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x555ecbef37e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x555ecbef3838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x555ecbef3908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x555ecbef3978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x555ecbef3a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x555ecbef3bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x555ecbef3c90 <col:45>
|-FunctionDecl 0x555ecbef3e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x555ecbef3d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x555ecbef3f18 <col:54>
|-FunctionDecl 0x555ecbef4118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x555ecbef3f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x555ecbef3ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x555ecbef41c8 <line:157:22>
| `-ConstAttr 0x555ecbef4220 <col:63>
|-FunctionDecl 0x555ecbef5050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555ecbef4318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555ecbef50f8 <col:56>
|-FunctionDecl 0x555ecbef54a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x555ecbef5168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x555ecbef51e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555ecbef5260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x555ecbef5358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x555ecbef5560 <col:54>
|-RecordDecl 0x555ecbef55b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x555ecbef5668 parent 0x555ecbe85e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x555ecbef58c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x555ecbef5968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x555ecbef59d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x555ecbef5a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x555ecbef5b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x555ecbef5c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x555ecbef5bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x555ecbef5b80 'struct __locale_struct' sugar
|     `-RecordType 0x555ecbef5640 'struct __locale_struct'
|       `-Record 0x555ecbef55b8 '__locale_struct'
|-TypedefDecl 0x555ecbef5cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x555ecbef5cc0 '__locale_t' sugar
|   |-Typedef 0x555ecbef5c48 '__locale_t'
|   `-PointerType 0x555ecbef5bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x555ecbef5b80 'struct __locale_struct' sugar
|       `-RecordType 0x555ecbef5640 'struct __locale_struct'
|         `-Record 0x555ecbef55b8 '__locale_struct'
|-FunctionDecl 0x555ecbef7110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x555ecbef5d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x555ecbef5de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555ecbef5e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x555ecbef5ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555ecbef5f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x555ecbef71d8 <col:40>
|-FunctionDecl 0x555ecbef73c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555ecbef72a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x555ecbef7470 <col:66>
|-FunctionDecl 0x555ecbef7580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555ecbef74d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x555ecbef7628 <col:69>
|-FunctionDecl 0x555ecbef7858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555ecbef7690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555ecbef7720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555ecbef7908 <col:52>
|-FunctionDecl 0x555ecbef7ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555ecbef7970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555ecbef7a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555ecbef7b60 <col:55>
|-FunctionDecl 0x555ecbef7cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x555ecbef7be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x555ecbef7da0 <col:62>
|-FunctionDecl 0x555ecbef7f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x555ecbef7e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x555ecbef7fc0 <col:60>
|-FunctionDecl 0x555ecbef82b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555ecbef8118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555ecbef8198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x555ecbef8368 <col:44>
|-FunctionDecl 0x555ecbef8578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555ecbef83d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555ecbef8450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x555ecbef8628 <col:49>
|-VarDecl 0x555ecbef8728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x555ecbef87a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x555ecbef8828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x555ecbef88f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x555ecbef8a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x555ecbef8ac0 <col:42>
|-VarDecl 0x555ecbef8b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x555ecbef8bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x555ecbef8d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x555ecbef8c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x555ecbef8de0 <col:57>
|-FunctionDecl 0x555ecbef8ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555ecbef8e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555ecbef8f98 <col:56>
|-FunctionDecl 0x555ecbef90d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555ecbef9018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x555ecbef9178 <col:59>
|-FunctionDecl 0x555ecbef9280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x555ecbef91e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x555ecbef9328 <col:48>
| `-ConstAttr 0x555ecbef9380 <col:89>
|-FunctionDecl 0x555ecbef95e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555ecbef9438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x555ecbef94c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x555ecbef9848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555ecbef96d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555ecbef9768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x555ecbef98f8 <col:88>
|-FunctionDecl 0x555ecbef9a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555ecbef9960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555ecbef99f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x555ecbef9b40 <col:88>
|-FunctionDecl 0x555ecbef9d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x555ecbef9ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555ecbef9c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x555ecbef9e08 <line:208:22>
|-FunctionDecl 0x555ecbefa178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555ecbef9e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555ecbef9ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x555ecbef9f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x555ecbefa010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x555ecbefa478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x555ecbefa278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x555ecbefa350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x555ecbefa528 <col:85>
|-FunctionDecl 0x555ecbefa918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x555ecbefa590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555ecbefa6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x555ecbefa7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x555ecbefa9d0 <col:52>
|-FunctionDecl 0x555ecbefab48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x555ecbefaa38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555ecbefabf0 <col:61>
|-FunctionDecl 0x555ecbefb0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x555ecbefac58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555ecbefacd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x555ecbefae08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x555ecbefaef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x555ecbefb1b0 <col:62>
|-FunctionDecl 0x555ecbefb3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x555ecbefb218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555ecbefb2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x555ecbefb478 <line:221:22>
|-FunctionDecl 0x555ecbefb578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x555ecbefb4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555ecbefb620 <col:65>
|-TypedefDecl 0x555ecbefb690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x555ecbe85fd0 'unsigned long'
|-RecordDecl 0x555ecbefb6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x555ecbefb830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555ecbefb898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555ecbefb948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x555ecbefb8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x555ecbefb770 'union pthread_attr_t'
|     `-Record 0x555ecbefb6e8 'pthread_attr_t'
|-RecordDecl 0x555ecbefb9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x555ecbefbb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x555ecbefbb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x555ecbefbc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x555ecbefbbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x555ecbefba20 'struct __pthread_internal_list'
|     `-Record 0x555ecbefb9a0 '__pthread_internal_list'
|-RecordDecl 0x555ecbefbcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x555ecbefbd58 parent 0x555ecbe85e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x555ecbefbe30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555ecbefbe98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x555ecbefbf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x555ecbefbf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x555ecbefbfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x555ecbefc038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x555ecbf00110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x555ecbf001c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x555ecbf002b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x555ecbf00318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555ecbf004a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x555ecbf00440 'union pthread_mutex_t' sugar
|   `-RecordType 0x555ecbefbd30 'pthread_mutex_t'
|     `-Record 0x555ecbefbcb0 ''
|-RecordDecl 0x555ecbf00510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x555ecbf00650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555ecbf006b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555ecbf00770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x555ecbf00710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x555ecbf00590 'pthread_mutexattr_t'
|     `-Record 0x555ecbf00510 ''
|-RecordDecl 0x555ecbf007e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x555ecbf00888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x555ecbf00950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555ecbf009b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x555ecbf00a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x555ecbf00a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x555ecbf00af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x555ecbf00b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x555ecbf00bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x555ecbf00c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x555ecbf00ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_5/mix017_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_5/mix017_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x555ecbf00dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x555ecbf00e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x555ecbf00f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x555ecbf00f10 'union pthread_cond_t' sugar
|   `-RecordType 0x555ecbf00860 'pthread_cond_t'
|     `-Record 0x555ecbf007e0 ''
|-RecordDecl 0x555ecbf00fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x555ecbf02130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555ecbf02198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555ecbf02250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x555ecbf021f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x555ecbf01060 'pthread_condattr_t'
|     `-Record 0x555ecbf00fe0 ''
|-TypedefDecl 0x555ecbf022d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x555ecbe85fb0 'unsigned int'
|-TypedefDecl 0x555ecbf02348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x555ecbe85f10 'int'
|-RecordDecl 0x555ecbf023a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x555ecbf02448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x555ecbf02510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555ecbf02578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x555ecbf025e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x555ecbf02648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x555ecbf026b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x555ecbf02718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x555ecbf02780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x555ecbf027e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x555ecbf02850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x555ecbf028b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x555ecbf02920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x555ecbf029d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_5/mix017_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_5/mix017_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x555ecbf02a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555ecbf02ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555ecbf02c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x555ecbf02bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x555ecbf02420 'pthread_rwlock_t'
|     `-Record 0x555ecbf023a0 ''
|-RecordDecl 0x555ecbf02ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x555ecbf02de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x555ecbf02e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555ecbf02f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x555ecbf02ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x555ecbf02d20 'pthread_rwlockattr_t'
|     `-Record 0x555ecbf02ca0 ''
|-TypedefDecl 0x555ecbf02f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x555ecbe85f14 'volatile int' volatile
|   `-BuiltinType 0x555ecbe85f10 'int'
|-RecordDecl 0x555ecbf02fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x555ecbf04140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x555ecbf041a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555ecbf04260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x555ecbf04200 'union pthread_barrier_t' sugar
|   `-RecordType 0x555ecbf03060 'pthread_barrier_t'
|     `-Record 0x555ecbf02fe0 ''
|-RecordDecl 0x555ecbf042d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x555ecbf043d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555ecbf04438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555ecbf044f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x555ecbf04490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x555ecbf04350 'pthread_barrierattr_t'
|     `-Record 0x555ecbf042d0 ''
|-TypedefDecl 0x555ecbf04608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x555ecbf045a0 'long [8]' 8 
|   `-BuiltinType 0x555ecbe85f30 'long'
|-EnumDecl 0x555ecbf04660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x555ecbf04728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x555ecbf04778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x555ecbf047c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x555ecbf04898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x555ecbf048e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x555ecbf04938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x555ecbf04988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x555ecbf04a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x555ecbf049f8 <col:26> 'int'
| |   `-DeclRefExpr 0x555ecbf049d8 <col:26> 'int' EnumConstant 0x555ecbf04898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x555ecbf04a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x555ecbf04a80 <col:29> 'int'
| |   `-DeclRefExpr 0x555ecbf04a60 <col:29> 'int' EnumConstant 0x555ecbf048e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x555ecbf04b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x555ecbf04b08 <col:30> 'int'
| |   `-DeclRefExpr 0x555ecbf04ae8 <col:30> 'int' EnumConstant 0x555ecbf04938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x555ecbf04ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x555ecbf04b90 <col:27> 'int'
|     `-DeclRefExpr 0x555ecbf04b70 <col:27> 'int' EnumConstant 0x555ecbf04a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x555ecbf04bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x555ecbf04cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x555ecbf04d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x555ecbf04d38 <col:30> 'int'
| |   `-DeclRefExpr 0x555ecbf04d18 <col:30> 'int' EnumConstant 0x555ecbf04cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x555ecbf04da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x555ecbf04e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x555ecbf04e10 <col:29> 'int'
|     `-DeclRefExpr 0x555ecbf04df0 <col:29> 'int' EnumConstant 0x555ecbf04da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x555ecbf04e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x555ecbf04f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x555ecbf04f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x555ecbf04fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x555ecbf05038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x555ecbf05150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x555ecbf051a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x555ecbf051f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x555ecbf05278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x555ecbf05260 <col:31> 'int'
|     `-DeclRefExpr 0x555ecbf05240 <col:31> 'int' EnumConstant 0x555ecbf05150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x555ecbf052c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x555ecbf05398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x555ecbf053e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x555ecbf05438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x555ecbf05508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x555ecbf05558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x555ecbf055a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x555ecbf05678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x555ecbf056c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x555ecbf05718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x555ecbf05958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x555ecbf059c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x555ecbf05a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x555ecbf05b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x555ecbf05b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x555ecbf05c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x555ecbf05cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x555ecbf05d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x555ecbf05dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x555ecbf05e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x555ecbf06488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x555ecbf05f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x555ecbf06030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ecbf06270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x555ecbf062f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x555ecbf06548 <col:47>
| |-NonNullAttr 0x555ecbf065a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x555ecbf065d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x555ecbf06700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x555ecbf06630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x555ecbf06958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x555ecbf067b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x555ecbf06838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x555ecbf06b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x555ecbf06a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x555ecbf06bd0 <col:60>
|-FunctionDecl 0x555ecbf06d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x555ecbf06dc0 <col:54>
| `-ConstAttr 0x555ecbf06e18 <col:95>
|-FunctionDecl 0x555ecbf06fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x555ecbf06e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555ecbf06ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x555ecbf07098 <line:394:19>
| `-ConstAttr 0x555ecbf070f0 <col:60>
|-FunctionDecl 0x555ecbf08b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555ecbf089d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555ecbf08bb0 <col:71>
| `-NonNullAttr 0x555ecbf08c08 <col:112, col:126> 1
|-FunctionDecl 0x555ecbf08d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555ecbf08c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555ecbf08db8 <line:397:22>
| `-NonNullAttr 0x555ecbf08e10 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf09038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x555ecbf08e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555ecbf08ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x555ecbf090e8 <line:400:22>
| `-NonNullAttr 0x555ecbf09140 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf09348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf09188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ecbf09208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x555ecbf093f8 <line:403:22>
| `-NonNullAttr 0x555ecbf09450 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf096a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x555ecbf09498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555ecbf09540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x555ecbf09758 <line:406:22>
| `-NonNullAttr 0x555ecbf097b0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf0a9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555ecbf097f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ecbf09870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555ecbf0aa98 <line:409:22>
| `-NonNullAttr 0x555ecbf0aaf0 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf0ad28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555ecbf0ab38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ecbf0abc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555ecbf0add8 <line:412:22>
| `-NonNullAttr 0x555ecbf0ae30 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf0b068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555ecbf0ae78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ecbf0af08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x555ecbf0b118 <col:37>
| `-NonNullAttr 0x555ecbf0b170 <col:78, col:95> 1 2
|-FunctionDecl 0x555ecbf0b358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf0b1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ecbf0b238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x555ecbf0b408 <line:418:22>
| `-NonNullAttr 0x555ecbf0b460 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf0b5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf0b4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ecbf0b528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x555ecbf0b698 <line:420:22>
| `-NonNullAttr 0x555ecbf0b6f0 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf0b898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf0b738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ecbf0b7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x555ecbf0b948 <line:423:22>
| `-NonNullAttr 0x555ecbf0b9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf0bb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf0ba08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ecbf0ba88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x555ecbf0bbf8 <line:426:22>
| `-NonNullAttr 0x555ecbf0bc50 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf0bdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf0bc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ecbf0bd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x555ecbf0bea8 <line:429:22>
| `-NonNullAttr 0x555ecbf0bf00 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf0c088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf0bf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ecbf0bfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x555ecbf0c138 <line:431:22>
| `-NonNullAttr 0x555ecbf0c190 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf0c3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x555ecbf0c1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ecbf0c258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x555ecbf0c468 <line:434:22>
| |-NonNullAttr 0x555ecbf0c4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x555ecbf0c4f8 <col:100> "" ""
|-FunctionDecl 0x555ecbf0c708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x555ecbf0c548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ecbf0c5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x555ecbf0c7b8 <line:437:22>
| |-NonNullAttr 0x555ecbf0c810 <col:63, col:77> 1
| `-DeprecatedAttr 0x555ecbf0c848 <col:97> "" ""
|-FunctionDecl 0x555ecbf0ca48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555ecbf0c898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ecbf0c910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555ecbf0caf8 <line:440:22>
| `-NonNullAttr 0x555ecbf0cb50 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf0ccd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555ecbf0cb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ecbf0cc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555ecbf0cd80 <line:443:22>
| `-NonNullAttr 0x555ecbf0cdd8 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf0d0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555ecbf0ce28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555ecbf0cea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x555ecbf0cf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555ecbf0d180 <line:447:22>
| `-NonNullAttr 0x555ecbf0d1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x555ecbf0d488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x555ecbf0d230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555ecbf0d2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x555ecbf0d328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555ecbf0d540 <col:43>
| `-NonNullAttr 0x555ecbf0d598 <col:84, col:98> 1
|-FunctionDecl 0x555ecbf0d858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555ecbf0d5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555ecbf0d668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x555ecbf0d6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x555ecbf0d910 <line:452:22>
| `-NonNullAttr 0x555ecbf0d968 <col:63, col:77> 3
|-FunctionDecl 0x555ecbf0dc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555ecbf0d9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555ecbf0da60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x555ecbf0daf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555ecbf0dd30 <line:456:22>
| `-NonNullAttr 0x555ecbf0dd88 <col:63, col:80> 2 3
|-FunctionDecl 0x555ecbf0df78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x555ecbf0ddd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555ecbf0de58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x555ecbf0e028 <line:458:22>
|-FunctionDecl 0x555ecbf0e3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x555ecbf0e0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x555ecbf0e290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x555ecbf0e4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x555ecbf0e650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x555ecbf0e530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x555ecbf0e5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x555ecbf0e838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x555ecbf0e718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x555ecbf0e798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x555ecbf0e9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x555ecbf0e8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x555ecbf0eb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x555ecbf0ebd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x555ecbf0ec78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x555ecbf0ed68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x555ecbf0edd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x555ecbf0efa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_5/mix017_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x555ecbf0f098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x555ecbf0f150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x555ecbf0f0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x555ecbf0ec50 '__pthread_unwind_buf_t'
| |   `-Record 0x555ecbf0ebd0 ''
| `-AlignedAttr 0x555ecbf0f1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x555ecbf0f220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x555ecbf0f380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x555ecbf0f3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x555ecbf0f450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x555ecbf0f4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x555ecbf0f6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555ecbf0f5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555ecbf0f808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555ecbf0f778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555ecbf0fa00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555ecbf0f8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x555ecbf0faa8 <line:487:22>
|-RecordDecl 0x555ecbf0fb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x555ecbf0fe18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x555ecbf0fc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x555ecbf0fcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x555ecbf0fec8 <col:86>
| `-ReturnsTwiceAttr 0x555ecbf0ff20 <col:12> Implicit
|-FunctionDecl 0x555ecbf10248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555ecbf0fff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x555ecbf10100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x555ecbf102f8 <line:493:22>
| `-NonNullAttr 0x555ecbf10350 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf104c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555ecbf10398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555ecbf10570 <line:495:22>
| `-NonNullAttr 0x555ecbf105c8 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf106d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555ecbf10618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555ecbf10778 <line:497:22>
| `-NonNullAttr 0x555ecbf107d0 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf108d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555ecbf10818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555ecbf10978 <line:499:22>
| `-NonNullAttr 0x555ecbf109d0 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf11c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555ecbf11a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555ecbf11ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555ecbf11cd8 <col:36>
| `-NonNullAttr 0x555ecbf11d30 <col:66, col:83> 1 2
|-FunctionDecl 0x555ecbf11e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555ecbf11d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555ecbf11ed8 <line:504:22>
| `-NonNullAttr 0x555ecbf11f30 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf121c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf11fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555ecbf12060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555ecbf12278 <line:508:22>
| `-NonNullAttr 0x555ecbf122d0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf12598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf12318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555ecbf12398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x555ecbf12418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x555ecbf12650 <line:512:22>
| `-NonNullAttr 0x555ecbf126a8 <col:63, col:80> 1 3
|-FunctionDecl 0x555ecbf127b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555ecbf126f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555ecbf12858 <line:514:22>
| `-NonNullAttr 0x555ecbf128b0 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf12ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555ecbf12960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555ecbf12b80 <line:516:22>
| `-NonNullAttr 0x555ecbf12bd8 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf12ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555ecbf12c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555ecbf12d88 <line:518:22>
| `-NonNullAttr 0x555ecbf12de0 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf13008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf12e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555ecbf12ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x555ecbf130b8 <line:522:22>
| `-NonNullAttr 0x555ecbf13110 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf13318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf13158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ecbf131d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x555ecbf133c8 <line:525:22>
| `-NonNullAttr 0x555ecbf13420 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf135c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf13468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555ecbf134e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x555ecbf13678 <line:528:22>
| `-NonNullAttr 0x555ecbf136d0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf13858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf13718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ecbf13798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x555ecbf13908 <line:530:22>
| `-NonNullAttr 0x555ecbf13960 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf13b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf139a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555ecbf13a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x555ecbf13bd0 <line:534:22>
| `-NonNullAttr 0x555ecbf13c28 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf13db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf13c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ecbf13cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x555ecbf13e68 <line:537:22>
| `-NonNullAttr 0x555ecbf13ec0 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf14068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf13f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555ecbf13f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555ecbf14118 <line:541:22>
| `-NonNullAttr 0x555ecbf14170 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf142f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf141b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ecbf14238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x555ecbf143a8 <line:544:22>
| `-NonNullAttr 0x555ecbf14400 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf145e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x555ecbf14448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ecbf144c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x555ecbf14698 <line:547:22>
| `-NonNullAttr 0x555ecbf146f0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf14878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf14738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555ecbf147b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x555ecbf14928 <line:550:22>
| `-NonNullAttr 0x555ecbf14980 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf15cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x555ecbf15aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555ecbf15bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x555ecbf15da8 <col:29>
| `-NonNullAttr 0x555ecbf15e00 <col:70, col:84> 1
|-FunctionDecl 0x555ecbf15f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ecbf15e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ecbf16020 <line:555:22>
| `-NonNullAttr 0x555ecbf16078 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf16180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ecbf160c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ecbf16228 <line:557:22>
| `-NonNullAttr 0x555ecbf16280 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf16380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ecbf162c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ecbf16428 <line:559:19>
| `-NonNullAttr 0x555ecbf16480 <col:49, col:63> 1
|-FunctionDecl 0x555ecbf166b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555ecbf164c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555ecbf16558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555ecbf16768 <col:39>
| `-NonNullAttr 0x555ecbf167c0 <col:69, col:86> 1 2
|-FunctionDecl 0x555ecbf168c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ecbf16808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ecbf16968 <line:564:22>
| `-NonNullAttr 0x555ecbf169c0 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf16b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ecbf16a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ecbf16bd0 <line:566:22>
| `-NonNullAttr 0x555ecbf16c28 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf16de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555ecbf16c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555ecbf16d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555ecbf16e98 <col:39>
| `-NonNullAttr 0x555ecbf16ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x555ecbf16ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555ecbf16f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555ecbf17098 <line:571:22>
| `-NonNullAttr 0x555ecbf170f0 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf172d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555ecbf171a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555ecbf17380 <line:573:22>
| `-NonNullAttr 0x555ecbf173d8 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf174e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555ecbf17428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555ecbf17588 <line:575:22>
| `-NonNullAttr 0x555ecbf175e0 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf17808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf17628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555ecbf176a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x555ecbf178b8 <line:579:22>
| `-NonNullAttr 0x555ecbf17910 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf17b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf17958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555ecbf179d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x555ecbf17be8 <line:582:22>
| `-NonNullAttr 0x555ecbf17c40 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf17de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf17c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555ecbf17d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x555ecbf17e98 <line:586:22>
| `-NonNullAttr 0x555ecbf17ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf18078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf17f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555ecbf17fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x555ecbf18128 <col:36>
| `-NonNullAttr 0x555ecbf18180 <col:77, col:91> 1
|-FunctionDecl 0x555ecbf184b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x555ecbf18260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555ecbf18370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x555ecbf18568 <line:591:22>
| `-NonNullAttr 0x555ecbf185c0 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf18738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555ecbf18608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555ecbf187e0 <line:593:22>
| `-NonNullAttr 0x555ecbf18838 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf18940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555ecbf18888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555ecbf189e8 <line:595:22>
| `-NonNullAttr 0x555ecbf18a40 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf18b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555ecbf18aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555ecbf18c00 <line:597:22>
| `-NonNullAttr 0x555ecbf18c58 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf18e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x555ecbf18ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555ecbf18d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x555ecbf18f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x555ecbf19268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555ecbf18fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555ecbf19030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555ecbf190c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x555ecbf19320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x555ecbf19538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555ecbf19400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555ecbf195e0 <line:606:22>
| `-NonNullAttr 0x555ecbf19638 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf19740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555ecbf19688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555ecbf197e8 <line:608:22>
| `-NonNullAttr 0x555ecbf19840 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf19aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf19888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555ecbf19908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x555ecbf19b50 <line:612:22>
| `-NonNullAttr 0x555ecbf19ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf19db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf19bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555ecbf19c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x555ecbf19e68 <col:37>
| `-NonNullAttr 0x555ecbf19ec0 <col:78, col:92> 1
|-FunctionDecl 0x555ecbf1a0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x555ecbf19f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555ecbf19fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x555ecbf1a188 <line:618:22>
| `-NonNullAttr 0x555ecbf1a1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf1a3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x555ecbf1a228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555ecbf1a2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x555ecbf1a458 <line:621:22>
| `-NonNullAttr 0x555ecbf1a4b0 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf1a758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x555ecbf1a590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x555ecbf1a610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x555ecbf1a808 <line:623:22>
| `-NonNullAttr 0x555ecbf1a860 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf1a9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555ecbf1a8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555ecbf1aab0 <line:625:22>
| `-NonNullAttr 0x555ecbf1ab08 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf1ac10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555ecbf1ab58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555ecbf1acb8 <line:627:22>
| `-NonNullAttr 0x555ecbf1ad10 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf1ae10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555ecbf1ad58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555ecbf1aeb8 <line:629:22>
| `-NonNullAttr 0x555ecbf1af10 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf1b010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555ecbf1af58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555ecbf1b0b8 <line:631:22>
| `-NonNullAttr 0x555ecbf1b110 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf1b4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x555ecbf1b1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x555ecbf1b300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555ecbf1b380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x555ecbf1b5a0 <line:635:22>
| `-NonNullAttr 0x555ecbf1b5f8 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf1b778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555ecbf1b648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555ecbf1b820 <line:637:22>
| `-NonNullAttr 0x555ecbf1b878 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf1b980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555ecbf1b8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555ecbf1ba28 <line:639:22>
| `-NonNullAttr 0x555ecbf1ba80 <col:52, col:66> 1
|-FunctionDecl 0x555ecbf1cc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555ecbf1cb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555ecbf1cd30 <line:641:22>
| `-NonNullAttr 0x555ecbf1cd88 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf1ce90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555ecbf1cdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555ecbf1cf38 <line:643:22>
| `-NonNullAttr 0x555ecbf1cf90 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf1d1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555ecbf1cfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555ecbf1d058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x555ecbf1d268 <line:647:22>
| `-NonNullAttr 0x555ecbf1d2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x555ecbf1d4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x555ecbf1d308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x555ecbf1d388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x555ecbf1d578 <line:650:22>
| `-NonNullAttr 0x555ecbf1d5d0 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf1d918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x555ecbf1d6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x555ecbf1d7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x555ecbf1d9c8 <line:653:22>
| `-NonNullAttr 0x555ecbf1da20 <col:63, col:77> 1
|-FunctionDecl 0x555ecbf1db88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x555ecbf1da68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555ecbf1dc30 <col:69>
|-FunctionDecl 0x555ecbf1dda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x555ecbf1dc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555ecbf1de50 <col:72>
|-FunctionDecl 0x555ecbf1e088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x555ecbf1deb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x555ecbf1df68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x555ecbf1e138 <col:44>
|-FunctionDecl 0x555ecbf1e358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x555ecbf1e1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555ecbf1e218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x555ecbf1e408 <line:660:22>
| `-NonNullAttr 0x555ecbf1e460 <col:63, col:77> 2
|-FunctionDecl 0x555ecbf1e8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x555ecbf1e540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x555ecbf1e650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x555ecbf1e760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x555ecbf1e960 <col:47>
|-FunctionDecl 0x555ecbf1eaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x555ecbf1e9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555ecbf1ec48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x555ecbf1ebb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555ecbf1eda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x555ecbf1ed08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555ecbf1eef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x555ecbf1ee60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555ecbf1efc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x555ecbf1f080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x555ecbf1f140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x555ecbf1f1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x555ecbf1f278 prev 0x555ecbf1f1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x555ecbf1f2e0 <col:24> 'int' 0
|-VarDecl 0x555ecbf1f318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x555ecbf1f398 prev 0x555ecbf1f318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x555ecbf1f400 <col:27> 'int' 0
|-VarDecl 0x555ecbf1f438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x555ecbf1f4b8 prev 0x555ecbf1f438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x555ecbf1f520 <col:27> 'int' 0
|-VarDecl 0x555ecbf1f558 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x555ecbf1f5d8 prev 0x555ecbf1f558 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x555ecbf1f640 <col:27> 'int' 0
|-VarDecl 0x555ecbf1f678 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x555ecbf1f6f8 prev 0x555ecbf1f678 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x555ecbf1f760 <col:27> 'int' 0
|-VarDecl 0x555ecbf1f798 <line:682:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x555ecbf1f818 prev 0x555ecbf1f798 <line:683:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x555ecbf1f880 <col:27> 'int' 0
|-VarDecl 0x555ecbf1f8b8 <line:684:1, col:5> col:5 used a 'int'
|-VarDecl 0x555ecbf1f938 prev 0x555ecbf1f8b8 <line:685:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x555ecbf1f9a0 <col:9> 'int' 0
|-VarDecl 0x555ecbf1f9d0 <line:686:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x555ecbf1fa50 <line:687:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x555ecbf1fb00 <line:688:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x555ecbf1fb78 <line:689:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x555ecbf1fbf0 <line:690:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x555ecbf1fc68 <line:691:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x555ecbf1fce0 <line:692:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x555ecbf1fd58 <line:693:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x555ecbf1fdd0 <line:694:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x555ecbf1fe48 <line:695:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x555ecbf1fec0 <line:696:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x555ecbf1ff38 <line:697:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x555ecbf1ffb0 <line:698:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x555ecbf20030 <line:699:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x555ecbf200b0 <line:700:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x555ecbf20128 <line:701:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x555ecbf201a8 <line:702:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x555ecbf20220 <line:703:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x555ecbf20298 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x555ecbf20310 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x555ecbf20390 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x555ecbf20410 prev 0x555ecbf20390 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x555ecbf20478 <col:9> 'int' 0
|-VarDecl 0x555ecbf204b0 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x555ecbf20530 prev 0x555ecbf204b0 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x555ecbf20598 <col:9> 'int' 0
|-VarDecl 0x555ecbf205d0 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x555ecbf20650 prev 0x555ecbf205d0 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x555ecbf206b8 <col:9> 'int' 0
|-VarDecl 0x555ecbf206e8 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x555ecbf20760 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x555ecbf20878 prev 0x555ecbf1eaf0 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x555ecbf207e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555ecbf22138 <line:715:1, line:743:1>
|   |-CallExpr 0x555ecbf20988 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf20970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf20920 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf20a00 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555ecbf209a8 <col:3> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x555ecbf209e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf209c8 <col:15> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x555ecbf20a60 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555ecbf20a20 <col:3> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x555ecbf20a40 <col:15> 'int' 1
|   |-BinaryOperator 0x555ecbf20ad8 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf20a80 <col:3> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf20ac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf20aa0 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ecbf20b88 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf20b10 <col:3> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x555ecbf20b60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555ecbf20b30 <col:27> 'int' 1
|   |-CallExpr 0x555ecbf20d08 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x555ecbf20cf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x555ecbf20ba8 <col:3> 'void (int)' Function 0x555ecbec5bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x555ecbf20ca8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x555ecbf20c88 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x555ecbf20c68 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x555ecbf20c20 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x555ecbf20c08 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x555ecbf20bc8 <col:23> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x555ecbf20c50 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x555ecbf20c38 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x555ecbf20be8 <col:41> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ecbf20d88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf20d30 <col:3> '_Bool' lvalue Var 0x555ecbf1fd58 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf20d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf20d50 <col:20> '_Bool' lvalue Var 0x555ecbf1fb00 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x555ecbf20e00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf20da8 <col:3> '_Bool' lvalue Var 0x555ecbf1fdd0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf20de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf20dc8 <col:20> '_Bool' lvalue Var 0x555ecbf1fb78 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555ecbf20e78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf20e20 <col:3> '_Bool' lvalue Var 0x555ecbf1fe48 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf20e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf20e40 <col:20> '_Bool' lvalue Var 0x555ecbf1fbf0 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555ecbf20ef0 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf20e98 <col:3> '_Bool' lvalue Var 0x555ecbf1fec0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf20ed8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf20eb8 <col:20> '_Bool' lvalue Var 0x555ecbf1fc68 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x555ecbf20f68 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf20f10 <col:3> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf20f50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf20f30 <col:20> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x555ecbf21000 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf20f88 <col:3> '_Bool' lvalue Var 0x555ecbf1fb78 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x555ecbf20fd8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555ecbf20fa8 <col:27> 'int' 1
|   |-CallExpr 0x555ecbf21058 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf21040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf21020 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf210b0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf21098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf21078 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf21128 <line:730:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555ecbf210d0 <col:3> 'int' lvalue Var 0x555ecbf1f398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x555ecbf21110 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf210f0 <col:25> 'int' lvalue Var 0x555ecbf20410 'x' 'int'
|   |-CallExpr 0x555ecbf21180 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf21168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf21148 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf211d8 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf211c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf211a0 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf214c0 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555ecbf211f8 <col:3> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   | `-ConditionalOperator 0x555ecbf21490 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555ecbf212b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555ecbf21270 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555ecbf21258 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555ecbf21218 <col:7> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555ecbf212a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555ecbf21288 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555ecbf21238 <col:25> '_Bool' lvalue Var 0x555ecbf1fb78 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x555ecbf21478 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf212d8 <col:42> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555ecbf21458 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555ecbf21428 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555ecbf21398 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555ecbf21350 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555ecbf21338 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555ecbf212f8 <col:55> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555ecbf21380 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555ecbf21368 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555ecbf21318 <col:73> '_Bool' lvalue Var 0x555ecbf1fdd0 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x555ecbf213f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ecbf213b8 <col:90> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555ecbf21410 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf213d8 <col:102> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   |-BinaryOperator 0x555ecbf216c8 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf214e0 <col:3> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf216b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf21680 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ecbf215a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ecbf21558 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ecbf21540 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ecbf21500 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ecbf21588 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ecbf21570 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ecbf21520 <col:38> '_Bool' lvalue Var 0x555ecbf1fb78 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf21638 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf215f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf215c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf21668 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf21650 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf21618 <col:66> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ecbf219b0 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf216e8 <col:3> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf21998 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf21968 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ecbf21888 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ecbf217a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ecbf21760 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ecbf21748 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ecbf21708 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ecbf21790 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ecbf21778 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ecbf21728 <col:38> '_Bool' lvalue Var 0x555ecbf1fb78 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x555ecbf21868 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ecbf21820 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ecbf21808 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ecbf217c8 <col:56> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ecbf21850 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ecbf21838 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ecbf217e8 <col:74> '_Bool' lvalue Var 0x555ecbf1fdd0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf21920 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf218d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf218a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf21950 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf21938 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf21900 <col:102> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555ecbf21bd0 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf219d0 <col:3> '_Bool' lvalue Var 0x555ecbf1fb78 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf21bb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf21b88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ecbf21a90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ecbf21a48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ecbf21a30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ecbf219f0 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ecbf21a78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ecbf21a60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ecbf21a10 <col:38> '_Bool' lvalue Var 0x555ecbf1fb78 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf21b40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf21ae0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf21ab0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf21b70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf21b58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf21b20 <col:66> '_Bool' lvalue Var 0x555ecbf1fb78 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555ecbf21eb8 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf21bf0 <col:3> '_Bool' lvalue Var 0x555ecbf1fdd0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf21ea0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf21e70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ecbf21d90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ecbf21cb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ecbf21c68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ecbf21c50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ecbf21c10 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ecbf21c98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ecbf21c80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ecbf21c30 <col:38> '_Bool' lvalue Var 0x555ecbf1fb78 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x555ecbf21d70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ecbf21d28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ecbf21d10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ecbf21cd0 <col:56> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ecbf21d58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ecbf21d40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ecbf21cf0 <col:74> '_Bool' lvalue Var 0x555ecbf1fdd0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf21e28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf21de0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf21db0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf21e58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf21e40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf21e08 <col:102> '_Bool' lvalue Var 0x555ecbf1fdd0 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x555ecbf21f10 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf21ef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf21ed8 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf21f68 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf21f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf21f30 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf22020 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555ecbf21f88 <col:3> 'int' lvalue Var 0x555ecbf1f278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555ecbf22000 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555ecbf21fe8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf21fa8 <col:22> 'int' lvalue Var 0x555ecbf1f278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555ecbf21fc8 <col:41> 'int' 1
|   |-CallExpr 0x555ecbf22078 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf22060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf22040 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555ecbf22128 <line:742:3, col:36>
|     `-CallExpr 0x555ecbf22108 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555ecbf220f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555ecbf22098 <col:10> 'void *(void)' Function 0x555ecbec5958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555ecbf222d0 prev 0x555ecbf1ec48 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x555ecbf22238 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555ecbf23510 <line:745:1, line:763:1>
|   |-CallExpr 0x555ecbf223b0 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf22398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf22378 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf22410 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555ecbf223d0 <col:3> 'int' lvalue Var 0x555ecbf20410 'x' 'int'
|   | `-IntegerLiteral 0x555ecbf223f0 <col:7> 'int' 1
|   |-CallExpr 0x555ecbf22468 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf22450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf22430 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf224c0 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf224a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf22488 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf22538 <line:750:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555ecbf224e0 <col:3> 'int' lvalue Var 0x555ecbf1f4b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x555ecbf22520 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf22500 <col:25> 'int' lvalue Var 0x555ecbf20530 'y' 'int'
|   |-CallExpr 0x555ecbf22590 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf22578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf22558 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf225e8 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf225d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf225b0 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf228d0 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555ecbf22608 <col:3> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   | `-ConditionalOperator 0x555ecbf228a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555ecbf226c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555ecbf22680 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555ecbf22668 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555ecbf22628 <col:7> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555ecbf226b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555ecbf22698 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555ecbf22648 <col:25> '_Bool' lvalue Var 0x555ecbf1fbf0 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x555ecbf22888 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf226e8 <col:42> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555ecbf22868 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555ecbf22838 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555ecbf227a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555ecbf22760 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555ecbf22748 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555ecbf22708 <col:55> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555ecbf22790 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555ecbf22778 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555ecbf22728 <col:73> '_Bool' lvalue Var 0x555ecbf1fe48 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x555ecbf22808 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ecbf227c8 <col:90> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555ecbf22820 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf227e8 <col:102> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   |-BinaryOperator 0x555ecbf22ad8 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf228f0 <col:3> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf22ac0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf22a90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ecbf229b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ecbf22968 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ecbf22950 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ecbf22910 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ecbf22998 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ecbf22980 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ecbf22930 <col:38> '_Bool' lvalue Var 0x555ecbf1fbf0 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf22a48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf22a00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf229d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf22a78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf22a60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf22a28 <col:66> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ecbf22dd8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf22af8 <col:3> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf22dc0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf22d90 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ecbf22cb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ecbf22bd0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ecbf22b88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ecbf22b70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ecbf22b30 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ecbf22bb8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ecbf22ba0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ecbf22b50 <col:38> '_Bool' lvalue Var 0x555ecbf1fbf0 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x555ecbf22c90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ecbf22c48 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ecbf22c30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ecbf22bf0 <col:56> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ecbf22c78 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ecbf22c60 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ecbf22c10 <col:74> '_Bool' lvalue Var 0x555ecbf1fe48 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf22d48 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf22d00 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf22cd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf22d78 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf22d60 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf22d28 <col:102> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555ecbf22fe0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf22df8 <col:3> '_Bool' lvalue Var 0x555ecbf1fbf0 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf22fc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf22f98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ecbf22eb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ecbf22e70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ecbf22e58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ecbf22e18 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ecbf22ea0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ecbf22e88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ecbf22e38 <col:38> '_Bool' lvalue Var 0x555ecbf1fbf0 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf22f50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf22f08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf22ed8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf22f80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf22f68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf22f30 <col:66> '_Bool' lvalue Var 0x555ecbf1fbf0 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555ecbf232c8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf23000 <col:3> '_Bool' lvalue Var 0x555ecbf1fe48 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf232b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf23280 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ecbf231a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ecbf230c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ecbf23078 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ecbf23060 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ecbf23020 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ecbf230a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ecbf23090 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ecbf23040 <col:38> '_Bool' lvalue Var 0x555ecbf1fbf0 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x555ecbf23180 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ecbf23138 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ecbf23120 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ecbf230e0 <col:56> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ecbf23168 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ecbf23150 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ecbf23100 <col:74> '_Bool' lvalue Var 0x555ecbf1fe48 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf23238 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf231f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf231c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf23268 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf23250 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf23218 <col:102> '_Bool' lvalue Var 0x555ecbf1fe48 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x555ecbf23320 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf23308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf232e8 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf23378 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf23360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf23340 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf23430 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555ecbf23398 <col:3> 'int' lvalue Var 0x555ecbf1f278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555ecbf23410 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555ecbf233f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf233b8 <col:22> 'int' lvalue Var 0x555ecbf1f278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555ecbf233d8 <col:41> 'int' 1
|   |-CallExpr 0x555ecbf23488 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf23470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf23450 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555ecbf23500 <line:762:3, col:36>
|     `-CallExpr 0x555ecbf234e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555ecbf234c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555ecbf234a8 <col:10> 'void *(void)' Function 0x555ecbec5958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555ecbf23658 prev 0x555ecbf1eda0 <line:764:1, line:783:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x555ecbf235c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555ecbf24890 <line:765:1, line:783:1>
|   |-CallExpr 0x555ecbf23738 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf23720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf23700 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf23798 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555ecbf23758 <col:3> 'int' lvalue Var 0x555ecbf20530 'y' 'int'
|   | `-IntegerLiteral 0x555ecbf23778 <col:7> 'int' 1
|   |-CallExpr 0x555ecbf237f0 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf237d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf237b8 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf23848 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf23830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf23810 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf238c0 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555ecbf23868 <col:3> 'int' lvalue Var 0x555ecbf1f5d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x555ecbf238a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf23888 <col:25> 'int' lvalue Var 0x555ecbf20650 'z' 'int'
|   |-CallExpr 0x555ecbf23918 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf23900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf238e0 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf23970 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf23958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf23938 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf23c68 <line:773:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555ecbf23990 <col:3> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   | `-ConditionalOperator 0x555ecbf23c38 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555ecbf23a50 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555ecbf23a08 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555ecbf239f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555ecbf239b0 <col:7> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555ecbf23a38 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555ecbf23a20 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555ecbf239d0 <col:25> '_Bool' lvalue Var 0x555ecbf1fc68 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x555ecbf23c20 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf23a70 <col:42> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555ecbf23c00 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555ecbf23bd0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555ecbf23b40 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555ecbf23ae8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555ecbf23ad0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555ecbf23a90 <col:55> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555ecbf23b18 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555ecbf23b00 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555ecbf23ab0 <col:73> '_Bool' lvalue Var 0x555ecbf1fec0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x555ecbf23ba0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ecbf23b60 <col:90> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555ecbf23bb8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf23b80 <col:102> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   |-BinaryOperator 0x555ecbf23e70 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf23c88 <col:3> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf23e58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf23e28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ecbf23d48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ecbf23d00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ecbf23ce8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ecbf23ca8 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ecbf23d30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ecbf23d18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ecbf23cc8 <col:38> '_Bool' lvalue Var 0x555ecbf1fc68 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf23de0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf23d98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf23d68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf23e10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf23df8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf23dc0 <col:66> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ecbf24158 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf23e90 <col:3> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf24140 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf24110 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ecbf24030 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ecbf23f50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ecbf23f08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ecbf23ef0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ecbf23eb0 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ecbf23f38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ecbf23f20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ecbf23ed0 <col:38> '_Bool' lvalue Var 0x555ecbf1fc68 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x555ecbf24010 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ecbf23fc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ecbf23fb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ecbf23f70 <col:56> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ecbf23ff8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ecbf23fe0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ecbf23f90 <col:74> '_Bool' lvalue Var 0x555ecbf1fec0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf240c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf24080 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf24050 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf240f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf240e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf240a8 <col:102> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555ecbf24360 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf24178 <col:3> '_Bool' lvalue Var 0x555ecbf1fc68 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf24348 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf24318 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ecbf24238 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ecbf241f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ecbf241d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ecbf24198 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ecbf24220 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ecbf24208 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ecbf241b8 <col:38> '_Bool' lvalue Var 0x555ecbf1fc68 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf242d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf24288 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf24258 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf24300 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf242e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf242b0 <col:66> '_Bool' lvalue Var 0x555ecbf1fc68 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x555ecbf24648 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf24380 <col:3> '_Bool' lvalue Var 0x555ecbf1fec0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf24630 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf24600 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ecbf24520 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ecbf24440 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ecbf243f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ecbf243e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ecbf243a0 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ecbf24428 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ecbf24410 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ecbf243c0 <col:38> '_Bool' lvalue Var 0x555ecbf1fc68 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x555ecbf24500 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ecbf244b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ecbf244a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ecbf24460 <col:56> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ecbf244e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ecbf244d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ecbf24480 <col:74> '_Bool' lvalue Var 0x555ecbf1fec0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf245b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf24570 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf24540 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf245e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf245d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf24598 <col:102> '_Bool' lvalue Var 0x555ecbf1fec0 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x555ecbf246a0 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf24688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf24668 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf246f8 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf246e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf246c0 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf247b0 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555ecbf24718 <col:3> 'int' lvalue Var 0x555ecbf1f278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555ecbf24790 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555ecbf24778 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf24738 <col:22> 'int' lvalue Var 0x555ecbf1f278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555ecbf24758 <col:41> 'int' 1
|   |-CallExpr 0x555ecbf24808 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf247f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf247d0 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555ecbf24880 <line:782:3, col:36>
|     `-CallExpr 0x555ecbf24860 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555ecbf24848 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555ecbf24828 <col:10> 'void *(void)' Function 0x555ecbec5958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555ecbf249d8 prev 0x555ecbf1eef8 <line:784:1, line:819:1> line:784:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x555ecbf24940 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555ecbf286e0 <line:785:1, line:819:1>
|   |-CallExpr 0x555ecbf24ab8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf24aa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf24a80 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf24b18 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555ecbf24ad8 <col:3> 'int' lvalue Var 0x555ecbf20650 'z' 'int'
|   | `-IntegerLiteral 0x555ecbf24af8 <col:7> 'int' 1
|   |-CallExpr 0x555ecbf24b88 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf24b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf24b50 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf24be0 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf24bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf24ba8 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf24c58 <line:790:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555ecbf24c00 <col:3> 'int' lvalue Var 0x555ecbf1f6f8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x555ecbf24c40 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf24c20 <col:25> 'int' lvalue Var 0x555ecbf20650 'z' 'int'
|   |-CallExpr 0x555ecbf24cb0 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf24c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf24c78 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf24d08 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf24cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf24cd0 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf24db8 <line:793:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf24d28 <col:3> '_Bool' lvalue Var 0x555ecbf206e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf24da0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x555ecbf24d80 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x555ecbf24d68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x555ecbf24d48 <col:19> 'void *(void)' Function 0x555ecbec5958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x555ecbf24e68 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf24dd8 <col:3> '_Bool' lvalue Var 0x555ecbf20760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf24e50 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x555ecbf24e30 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x555ecbf24e18 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x555ecbf24df8 <col:19> 'void *(void)' Function 0x555ecbec5958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x555ecbf24ee0 <line:795:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf24e88 <col:3> '_Bool' lvalue Var 0x555ecbf1f9d0 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf24ec8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf24ea8 <col:21> '_Bool' lvalue Var 0x555ecbf20760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x555ecbf24f58 <line:796:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555ecbf24f00 <col:3> 'int' lvalue Var 0x555ecbf1fa50 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x555ecbf24f40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf24f20 <col:15> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   |-BinaryOperator 0x555ecbf25390 <line:797:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x555ecbf24f78 <col:3> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   | `-ConditionalOperator 0x555ecbf25360 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x555ecbf25188 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x555ecbf250a8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x555ecbf24fd0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x555ecbf24fb8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x555ecbf24f98 <col:8> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x555ecbf25088 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x555ecbf25020 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x555ecbf25008 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x555ecbf24fe8 <col:27> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x555ecbf25070 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x555ecbf25058 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x555ecbf25038 <col:46> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x555ecbf25168 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x555ecbf25100 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x555ecbf250e8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x555ecbf250c8 <col:65> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x555ecbf25150 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x555ecbf25138 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x555ecbf25118 <col:84> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x555ecbf25348 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf251a8 <col:101> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   |   `-ParenExpr 0x555ecbf25328 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x555ecbf252f8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x555ecbf25268 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555ecbf25220 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555ecbf25208 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555ecbf251c8 <col:106> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555ecbf25250 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555ecbf25238 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555ecbf251e8 <col:124> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555ecbf252c8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ecbf25288 <col:141> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x555ecbf252e0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf252a8 <col:153> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x555ecbf258a0 <line:798:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555ecbf253b0 <col:3> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x555ecbf25870 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555ecbf25840 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555ecbf25828 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555ecbf253d0 <col:15> '_Bool' lvalue Var 0x555ecbf20760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555ecbf25858 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf253f0 <col:31> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555ecbf25808 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555ecbf257d8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555ecbf25600 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555ecbf25520 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555ecbf25448 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555ecbf25430 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555ecbf25410 <col:45> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555ecbf25500 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555ecbf25498 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555ecbf25480 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555ecbf25460 <col:64> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x555ecbf254e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555ecbf254d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555ecbf254b0 <col:83> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555ecbf255e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555ecbf25578 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555ecbf25560 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555ecbf25540 <col:102> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x555ecbf255c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555ecbf255b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555ecbf25590 <col:121> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555ecbf257c0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ecbf25620 <col:138> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x555ecbf257a0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555ecbf25770 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555ecbf256e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555ecbf25698 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555ecbf25680 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555ecbf25640 <col:151> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555ecbf256c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555ecbf256b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555ecbf25660 <col:169> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x555ecbf25740 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555ecbf25700 <col:186> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x555ecbf25758 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555ecbf25720 <col:198> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x555ecbf25dc0 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555ecbf258c0 <col:3> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x555ecbf25d90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555ecbf25d60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555ecbf25d48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555ecbf258e0 <col:15> '_Bool' lvalue Var 0x555ecbf20760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555ecbf25d78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf25900 <col:31> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x555ecbf25d28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555ecbf25cf8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555ecbf25b10 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555ecbf25a30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555ecbf25958 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555ecbf25940 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555ecbf25920 <col:45> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555ecbf25a10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555ecbf259a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555ecbf25990 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555ecbf25970 <col:64> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x555ecbf259f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555ecbf259e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555ecbf259c0 <col:83> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555ecbf25af0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555ecbf25a88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555ecbf25a70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555ecbf25a50 <col:102> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x555ecbf25ad8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555ecbf25ac0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555ecbf25aa0 <col:121> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555ecbf25ce0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ecbf25b30 <col:138> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x555ecbf25cc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555ecbf25c90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555ecbf25c00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555ecbf25bb8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555ecbf25ba0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555ecbf25b60 <col:151> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555ecbf25be8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555ecbf25bd0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555ecbf25b80 <col:169> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x555ecbf25c60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555ecbf25c20 <col:186> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x555ecbf25c78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555ecbf25c40 <col:198> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x555ecbf26368 <line:800:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf25de0 <col:3> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf26350 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf26320 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555ecbf262d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ecbf262c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ecbf25e00 <col:20> '_Bool' lvalue Var 0x555ecbf20760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf26308 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ecbf262f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ecbf25e20 <col:36> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x555ecbf262a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555ecbf26270 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555ecbf26030 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555ecbf25f50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555ecbf25e78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555ecbf25e60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555ecbf25e40 <col:55> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555ecbf25f30 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555ecbf25ec8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555ecbf25eb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555ecbf25e90 <col:74> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555ecbf25f18 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555ecbf25f00 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555ecbf25ee0 <col:93> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555ecbf26010 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555ecbf25fa8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555ecbf25f90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555ecbf25f70 <col:112> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555ecbf25ff8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555ecbf25fe0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555ecbf25fc0 <col:131> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555ecbf26258 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555ecbf26240 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555ecbf26050 <col:148> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x555ecbf26220 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555ecbf261f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555ecbf26110 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555ecbf260c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555ecbf260b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555ecbf26070 <col:166> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555ecbf260f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555ecbf260e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555ecbf26090 <col:184> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555ecbf261a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555ecbf26160 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555ecbf26130 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555ecbf261d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555ecbf261c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555ecbf26188 <col:212> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ecbf26930 <line:801:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf26388 <col:3> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf26918 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf268e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555ecbf268a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ecbf26888 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ecbf263a8 <col:20> '_Bool' lvalue Var 0x555ecbf20760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf268d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ecbf268b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ecbf263c8 <col:36> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x555ecbf26868 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555ecbf26838 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555ecbf265d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555ecbf264f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555ecbf26420 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555ecbf26408 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555ecbf263e8 <col:55> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555ecbf264d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555ecbf26470 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555ecbf26458 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555ecbf26438 <col:74> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555ecbf264c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555ecbf264a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555ecbf26488 <col:93> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555ecbf265b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555ecbf26550 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555ecbf26538 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555ecbf26518 <col:112> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555ecbf265a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555ecbf26588 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555ecbf26568 <col:131> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555ecbf26820 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555ecbf26808 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555ecbf265f8 <col:148> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x555ecbf267e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555ecbf267b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555ecbf266b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555ecbf26670 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555ecbf26658 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555ecbf26618 <col:166> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555ecbf266a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555ecbf26688 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555ecbf26638 <col:184> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555ecbf26788 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555ecbf26708 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555ecbf266d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555ecbf267a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555ecbf26760 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555ecbf26730 <col:219> 'int' 0
|   |-BinaryOperator 0x555ecbf26ef8 <line:802:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf26950 <col:3> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf26ee0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf26eb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555ecbf26e68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ecbf26e50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ecbf26970 <col:20> '_Bool' lvalue Var 0x555ecbf20760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf26e98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ecbf26e80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ecbf26990 <col:36> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x555ecbf26e30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555ecbf26e00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555ecbf26bc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555ecbf26ac0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555ecbf269e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555ecbf269d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555ecbf269b0 <col:55> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555ecbf26aa0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555ecbf26a38 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555ecbf26a20 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555ecbf26a00 <col:74> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555ecbf26a88 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555ecbf26a70 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555ecbf26a50 <col:93> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555ecbf26ba0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555ecbf26b18 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555ecbf26b00 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555ecbf26ae0 <col:112> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555ecbf26b88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555ecbf26b70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555ecbf26b30 <col:131> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555ecbf26de8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555ecbf26dd0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555ecbf26be0 <col:148> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x555ecbf26db0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555ecbf26d80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555ecbf26ca0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555ecbf26c58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555ecbf26c40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555ecbf26c00 <col:166> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555ecbf26c88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555ecbf26c70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555ecbf26c20 <col:184> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555ecbf26d38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555ecbf26cf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555ecbf26cc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555ecbf26d68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555ecbf26d50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555ecbf26d18 <col:212> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x555ecbf274c0 <line:803:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf26f18 <col:3> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf274a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf27478 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555ecbf27430 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ecbf27418 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ecbf26f38 <col:20> '_Bool' lvalue Var 0x555ecbf20760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf27460 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555ecbf27448 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555ecbf26f58 <col:36> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x555ecbf273f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555ecbf273c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555ecbf27168 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555ecbf27088 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555ecbf26fb0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555ecbf26f98 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555ecbf26f78 <col:55> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555ecbf27068 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555ecbf27000 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555ecbf26fe8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555ecbf26fc8 <col:74> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x555ecbf27050 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555ecbf27038 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555ecbf27018 <col:93> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555ecbf27148 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555ecbf270e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555ecbf270c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555ecbf270a8 <col:112> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x555ecbf27130 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555ecbf27118 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555ecbf270f8 <col:131> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x555ecbf273b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555ecbf27398 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555ecbf27188 <col:148> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x555ecbf27378 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555ecbf27348 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555ecbf27248 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555ecbf27200 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555ecbf271e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555ecbf271a8 <col:166> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555ecbf27230 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555ecbf27218 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555ecbf271c8 <col:184> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x555ecbf27318 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555ecbf27298 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555ecbf27268 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555ecbf27330 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555ecbf272f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555ecbf272c0 <col:219> 'int' 0
|   |-BinaryOperator 0x555ecbf27538 <line:804:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555ecbf274e0 <col:3> 'int' lvalue Var 0x555ecbf1f818 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x555ecbf27520 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555ecbf27500 <col:25> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   |-BinaryOperator 0x555ecbf27668 <line:805:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x555ecbf27558 <col:3> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   | `-ConditionalOperator 0x555ecbf27638 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x555ecbf275f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555ecbf275d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555ecbf27578 <col:7> '_Bool' lvalue Var 0x555ecbf1f9d0 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x555ecbf27608 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf27598 <col:25> 'int' lvalue Var 0x555ecbf1fa50 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x555ecbf27620 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x555ecbf275b8 <col:37> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   |-BinaryOperator 0x555ecbf27700 <line:806:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf27688 <col:3> '_Bool' lvalue Var 0x555ecbf1f9d0 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x555ecbf276d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555ecbf276a8 <col:28> 'int' 0
|   |-CallExpr 0x555ecbf27758 <line:807:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf27740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf27720 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf277b0 <line:808:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf27798 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf27778 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf27a98 <line:809:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555ecbf277d0 <col:3> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   | `-ConditionalOperator 0x555ecbf27a68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555ecbf27890 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555ecbf27848 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555ecbf27830 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555ecbf277f0 <col:7> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555ecbf27878 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555ecbf27860 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555ecbf27810 <col:25> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x555ecbf27a50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf278b0 <col:42> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x555ecbf27a30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555ecbf27a00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555ecbf27970 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555ecbf27928 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555ecbf27910 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555ecbf278d0 <col:55> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555ecbf27958 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555ecbf27940 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555ecbf278f0 <col:73> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x555ecbf279d0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555ecbf27990 <col:90> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555ecbf279e8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf279b0 <col:102> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
|   |-BinaryOperator 0x555ecbf27cc0 <line:810:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf27ab8 <col:3> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf27ca8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf27c78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ecbf27b98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ecbf27b30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ecbf27b18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ecbf27ad8 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ecbf27b80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ecbf27b48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ecbf27af8 <col:38> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf27c30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf27be8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf27bb8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf27c60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf27c48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf27c10 <col:66> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555ecbf27fa8 <line:811:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf27ce0 <col:3> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf27f90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf27f60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ecbf27e80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ecbf27da0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ecbf27d58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ecbf27d40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ecbf27d00 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ecbf27d88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ecbf27d70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ecbf27d20 <col:38> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x555ecbf27e60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ecbf27e18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ecbf27e00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ecbf27dc0 <col:56> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ecbf27e48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ecbf27e30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ecbf27de0 <col:74> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf27f18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf27ed0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf27ea0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf27f48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf27f30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf27ef8 <col:102> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555ecbf281b0 <line:812:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf27fc8 <col:3> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf28198 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf28168 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555ecbf28088 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555ecbf28040 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555ecbf28028 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555ecbf27fe8 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555ecbf28070 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555ecbf28058 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555ecbf28008 <col:38> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf28120 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf280d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf280a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf28150 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf28138 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf28100 <col:66> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x555ecbf28498 <line:813:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555ecbf281d0 <col:3> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x555ecbf28480 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555ecbf28450 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555ecbf28370 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555ecbf28290 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555ecbf28248 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555ecbf28230 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555ecbf281f0 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555ecbf28278 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555ecbf28260 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555ecbf28210 <col:38> '_Bool' lvalue Var 0x555ecbf1fce0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x555ecbf28350 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555ecbf28308 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555ecbf282f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555ecbf282b0 <col:56> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555ecbf28338 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555ecbf28320 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555ecbf282d0 <col:74> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x555ecbf28408 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555ecbf283c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555ecbf28390 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555ecbf28438 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555ecbf28420 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555ecbf283e8 <col:102> '_Bool' lvalue Var 0x555ecbf1ff38 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x555ecbf284f0 <line:814:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf284d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf284b8 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555ecbf28548 <line:815:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555ecbf28530 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf28510 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555ecbf28600 <line:816:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555ecbf28568 <col:3> 'int' lvalue Var 0x555ecbf1f278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555ecbf285e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555ecbf285c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555ecbf28588 <col:22> 'int' lvalue Var 0x555ecbf1f278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555ecbf285a8 <col:41> 'int' 1
|   |-CallExpr 0x555ecbf28658 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555ecbf28640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555ecbf28620 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555ecbf286d0 <line:818:3, col:36>
|     `-CallExpr 0x555ecbf286b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555ecbf28698 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555ecbf28678 <col:10> 'void *(void)' Function 0x555ecbec5958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555ecbf28818 prev 0x555ecbf1efc0 <line:820:1, line:822:1> line:820:6 fence 'void ()'
| `-CompoundStmt 0x555ecbf288b8 <line:821:1, line:822:1>
|-FunctionDecl 0x555ecbf288e8 prev 0x555ecbf1f080 <line:823:1, line:825:1> line:823:6 isync 'void ()'
| `-CompoundStmt 0x555ecbf28988 <line:824:1, line:825:1>
|-FunctionDecl 0x555ecbf289b8 prev 0x555ecbf1f140 <line:826:1, line:828:1> line:826:6 lwfence 'void ()'
| `-CompoundStmt 0x555ecbf28a58 <line:827:1, line:828:1>
`-FunctionDecl 0x555ecbf28ac8 <line:829:1, line:855:1> line:829:5 main 'int ()'
  `-CompoundStmt 0x555ecbf2abb0 <line:830:1, line:855:1>
    |-DeclStmt 0x555ecbf28bf8 <line:831:3, col:17>
    | `-VarDecl 0x555ecbf28b90 <col:3, col:13> col:13 used t451 'pthread_t':'unsigned long'
    |-CallExpr 0x555ecbf28e08 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555ecbf28df0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ecbf28c10 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555ecbf06488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555ecbf28c50 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555ecbf28c30 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555ecbf28b90 't451' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555ecbf28e48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555ecbf28cc8 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555ecbf28ca0 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555ecbf28c68 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555ecbf28e60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ecbf28ce8 <col:38> 'void *(void *)' Function 0x555ecbf20878 'P0' 'void *(void *)'
    | `-ParenExpr 0x555ecbf28d68 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555ecbf28d40 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555ecbf28d08 <col:51> 'int' 0
    |-DeclStmt 0x555ecbf28ef0 <line:833:3, col:17>
    | `-VarDecl 0x555ecbf28e88 <col:3, col:13> col:13 used t452 'pthread_t':'unsigned long'
    |-CallExpr 0x555ecbf29098 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555ecbf29080 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ecbf28f08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555ecbf06488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555ecbf28f48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555ecbf28f28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555ecbf28e88 't452' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555ecbf290d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555ecbf28fc0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555ecbf28f98 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555ecbf28f60 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555ecbf290f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ecbf28fe0 <col:38> 'void *(void *)' Function 0x555ecbf222d0 'P1' 'void *(void *)'
    | `-ParenExpr 0x555ecbf29060 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555ecbf29038 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555ecbf29000 <col:51> 'int' 0
    |-DeclStmt 0x555ecbf29180 <line:835:3, col:17>
    | `-VarDecl 0x555ecbf29118 <col:3, col:13> col:13 used t453 'pthread_t':'unsigned long'
    |-CallExpr 0x555ecbf29328 <line:836:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555ecbf29310 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ecbf29198 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555ecbf06488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555ecbf291d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555ecbf291b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555ecbf29118 't453' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555ecbf29368 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555ecbf29250 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555ecbf29228 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555ecbf291f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555ecbf29380 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ecbf29270 <col:38> 'void *(void *)' Function 0x555ecbf23658 'P2' 'void *(void *)'
    | `-ParenExpr 0x555ecbf292f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555ecbf292c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555ecbf29290 <col:51> 'int' 0
    |-DeclStmt 0x555ecbf29410 <line:837:3, col:17>
    | `-VarDecl 0x555ecbf293a8 <col:3, col:13> col:13 used t454 'pthread_t':'unsigned long'
    |-CallExpr 0x555ecbf295b8 <line:838:3, col:53> 'int'
    | |-ImplicitCastExpr 0x555ecbf295a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ecbf29428 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555ecbf06488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555ecbf29468 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555ecbf29448 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555ecbf293a8 't454' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555ecbf295f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555ecbf294e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x555ecbf294b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555ecbf29480 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x555ecbf29610 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ecbf29500 <col:38> 'void *(void *)' Function 0x555ecbf249d8 'P3' 'void *(void *)'
    | `-ParenExpr 0x555ecbf29580 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x555ecbf29558 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555ecbf29520 <col:51> 'int' 0
    |-CallExpr 0x555ecbf29660 <line:839:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555ecbf29648 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ecbf29628 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555ecbf29730 <line:840:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x555ecbf29680 <col:3> '_Bool' lvalue Var 0x555ecbf20298 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x555ecbf29718 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x555ecbf296f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x555ecbf296e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x555ecbf296a0 <col:21> 'int' lvalue Var 0x555ecbf1f278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x555ecbf296c0 <col:41> 'int' 4
    |-CallExpr 0x555ecbf29788 <line:841:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555ecbf29770 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ecbf29750 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555ecbf29800 <line:842:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555ecbf297e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ecbf297a8 <col:3> 'void (int)' Function 0x555ecbec5790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x555ecbf29840 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555ecbf29828 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555ecbf297c8 <col:21> '_Bool' lvalue Var 0x555ecbf20298 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x555ecbf29890 <line:843:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555ecbf29878 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ecbf29858 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555ecbf29ba0 <line:844:3, col:103> 'int' '='
    | |-DeclRefExpr 0x555ecbf298b0 <col:3> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
    | `-ConditionalOperator 0x555ecbf29b48 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x555ecbf29970 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x555ecbf29928 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x555ecbf29910 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x555ecbf298d0 <col:7> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x555ecbf29958 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x555ecbf29940 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x555ecbf298f0 <col:25> '_Bool' lvalue Var 0x555ecbf1fb00 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x555ecbf29b30 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x555ecbf29990 <col:42> 'int' lvalue Var 0x555ecbf200b0 'a$w_buff0' 'int'
    |   `-ParenExpr 0x555ecbf29b10 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x555ecbf29ae0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x555ecbf29a50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x555ecbf29a08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x555ecbf299f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x555ecbf299b0 <col:55> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x555ecbf29a38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x555ecbf29a20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x555ecbf299d0 <col:73> '_Bool' lvalue Var 0x555ecbf1fd58 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x555ecbf29ab0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x555ecbf29a70 <col:90> 'int' lvalue Var 0x555ecbf201a8 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x555ecbf29ac8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x555ecbf29a90 <col:102> 'int' lvalue Var 0x555ecbf1f938 'a' 'int'
    |-BinaryOperator 0x555ecbf29da8 <line:845:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555ecbf29bc0 <col:3> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x555ecbf29d90 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555ecbf29d60 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555ecbf29c80 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555ecbf29c38 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555ecbf29c20 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555ecbf29be0 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555ecbf29c68 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555ecbf29c50 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555ecbf29c00 <col:38> '_Bool' lvalue Var 0x555ecbf1fb00 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555ecbf29d18 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555ecbf29cd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555ecbf29ca0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555ecbf29d48 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555ecbf29d30 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555ecbf29cf8 <col:66> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x555ecbf2a090 <line:846:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555ecbf29dc8 <col:3> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x555ecbf2a078 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555ecbf2a048 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555ecbf29f68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555ecbf29e88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555ecbf29e40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555ecbf29e28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555ecbf29de8 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555ecbf29e70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555ecbf29e58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555ecbf29e08 <col:38> '_Bool' lvalue Var 0x555ecbf1fb00 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555ecbf29f48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555ecbf29f00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555ecbf29ee8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555ecbf29ea8 <col:56> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555ecbf29f30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555ecbf29f18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555ecbf29ec8 <col:74> '_Bool' lvalue Var 0x555ecbf1fd58 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555ecbf2a000 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555ecbf29fb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555ecbf29f88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555ecbf2a030 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555ecbf2a018 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555ecbf29fe0 <col:102> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x555ecbf2a298 <line:847:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555ecbf2a0b0 <col:3> '_Bool' lvalue Var 0x555ecbf1fb00 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555ecbf2a280 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555ecbf2a250 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555ecbf2a170 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555ecbf2a128 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555ecbf2a110 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555ecbf2a0d0 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555ecbf2a158 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555ecbf2a140 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555ecbf2a0f0 <col:38> '_Bool' lvalue Var 0x555ecbf1fb00 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555ecbf2a208 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555ecbf2a1c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555ecbf2a190 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555ecbf2a238 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555ecbf2a220 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555ecbf2a1e8 <col:66> '_Bool' lvalue Var 0x555ecbf1fb00 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x555ecbf2a580 <line:848:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555ecbf2a2b8 <col:3> '_Bool' lvalue Var 0x555ecbf1fd58 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555ecbf2a568 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555ecbf2a538 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555ecbf2a458 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555ecbf2a378 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555ecbf2a330 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555ecbf2a318 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555ecbf2a2d8 <col:20> '_Bool' lvalue Var 0x555ecbf20128 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555ecbf2a360 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555ecbf2a348 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555ecbf2a2f8 <col:38> '_Bool' lvalue Var 0x555ecbf1fb00 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555ecbf2a438 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555ecbf2a3f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555ecbf2a3d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555ecbf2a398 <col:56> '_Bool' lvalue Var 0x555ecbf20220 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555ecbf2a420 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555ecbf2a408 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555ecbf2a3b8 <col:74> '_Bool' lvalue Var 0x555ecbf1fd58 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555ecbf2a4f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555ecbf2a4a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555ecbf2a478 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555ecbf2a520 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555ecbf2a508 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555ecbf2a4d0 <col:102> '_Bool' lvalue Var 0x555ecbf1fd58 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x555ecbf2a5d8 <line:849:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555ecbf2a5c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ecbf2a5a0 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555ecbf2a630 <line:850:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555ecbf2a618 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ecbf2a5f8 <col:3> 'void ()' Function 0x555ecbec5e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555ecbf2a998 <line:851:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x555ecbf2a650 <col:3> '_Bool' lvalue Var 0x555ecbf20310 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x555ecbf2a980 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x555ecbf2a968 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x555ecbf2a948 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x555ecbf2a928 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x555ecbf2a890 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x555ecbf2a7f8 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x555ecbf2a760 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x555ecbf2a6c8 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x555ecbf2a6b0 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x555ecbf2a670 <col:23> 'int' lvalue Var 0x555ecbf1f398 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x555ecbf2a690 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x555ecbf2a740 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x555ecbf2a728 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x555ecbf2a6e8 <col:51> 'int' lvalue Var 0x555ecbf1f4b8 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x555ecbf2a708 <col:74> 'int' 0
    |         | | `-BinaryOperator 0x555ecbf2a7d8 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x555ecbf2a7c0 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x555ecbf2a780 <col:79> 'int' lvalue Var 0x555ecbf1f5d8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x555ecbf2a7a0 <col:102> 'int' 0
    |         | `-BinaryOperator 0x555ecbf2a870 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x555ecbf2a858 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x555ecbf2a818 <col:107> 'int' lvalue Var 0x555ecbf1f6f8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x555ecbf2a838 <col:130> 'int' 1
    |         `-BinaryOperator 0x555ecbf2a908 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x555ecbf2a8f0 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x555ecbf2a8b0 <col:135> 'int' lvalue Var 0x555ecbf1f818 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x555ecbf2a8d0 <col:158> 'int' 0
    |-CallExpr 0x555ecbf2a9f0 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555ecbf2a9d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555ecbf2a9b8 <col:3> 'void ()' Function 0x555ecbec5f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555ecbf2aa68 <line:853:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555ecbf2aa50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555ecbf2aa10 <col:3> 'void (int)' Function 0x555ecbec5bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x555ecbf2aaa8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555ecbf2aa90 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555ecbf2aa30 <col:21> '_Bool' lvalue Var 0x555ecbf20310 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x555ecbf2aae0 <line:854:3, col:10>
      `-IntegerLiteral 0x555ecbf2aac0 <col:10> 'int' 0
