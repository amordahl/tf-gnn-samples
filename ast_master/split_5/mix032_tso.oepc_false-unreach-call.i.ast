TranslationUnitDecl 0x55eb08950e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55eb089516d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55eb089513b0 '__int128'
|-TypedefDecl 0x55eb08951748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55eb089513d0 'unsigned __int128'
|-TypedefDecl 0x55eb08951a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55eb08951820 'struct __NSConstantString_tag'
|   `-Record 0x55eb089517a0 '__NSConstantString_tag'
|-TypedefDecl 0x55eb08951af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55eb08951ab0 'char *'
|   `-BuiltinType 0x55eb08950eb0 'char'
|-TypedefDecl 0x55eb08990650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55eb08951d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55eb08951bd0 'struct __va_list_tag'
|     `-Record 0x55eb08951b50 '__va_list_tag'
|-FunctionDecl 0x55eb08990790 <./split_5/mix032_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55eb089906c0 <col:31> col:34 'int'
|-FunctionDecl 0x55eb08990958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55eb08990a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55eb08990bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55eb08990b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55eb08990df8 <col:40, col:99>
|   |-IfStmt 0x55eb08990dc8 <col:42, col:88>
|   | |-UnaryOperator 0x55eb08990ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55eb08990c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55eb08990c70 <col:47> 'int' lvalue ParmVar 0x55eb08990b38 'expression' 'int'
|   | `-CompoundStmt 0x55eb08990db0 <col:59, col:88>
|   |   `-LabelStmt 0x55eb08990d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55eb08990d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55eb08990d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55eb08990cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55eb08990a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55eb08990de0 <col:89>
|   `-ReturnStmt 0x55eb08990de8 <col:91>
|-FunctionDecl 0x55eb08990e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55eb08990f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55eb08991280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55eb08990fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55eb08991038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55eb089910b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55eb08991138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55eb08991340 <line:10:22>
|-FunctionDecl 0x55eb089b7390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55eb089913b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55eb08991430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55eb089914b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55eb08991530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55eb089b7450 <line:13:22>
|-FunctionDecl 0x55eb089b7700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55eb089b74c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55eb089b7540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55eb089b75c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55eb089b77b8 <line:15:22>
|-TypedefDecl 0x55eb089b7828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55eb08950f70 'unsigned char'
|-TypedefDecl 0x55eb089b7898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55eb08950f90 'unsigned short'
|-TypedefDecl 0x55eb089b7908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55eb08950fb0 'unsigned int'
|-TypedefDecl 0x55eb089b7978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b79e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55eb08950ed0 'signed char'
|-TypedefDecl 0x55eb089b7a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55eb08950f70 'unsigned char'
|-TypedefDecl 0x55eb089b7ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55eb08950ef0 'short'
|-TypedefDecl 0x55eb089b7b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55eb08950f90 'unsigned short'
|-TypedefDecl 0x55eb089b7ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55eb08950f10 'int'
|-TypedefDecl 0x55eb089b7c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55eb08950fb0 'unsigned int'
|-TypedefDecl 0x55eb089b7c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b7cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b7d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b7dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b7e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b7eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55eb08950fb0 'unsigned int'
|-TypedefDecl 0x55eb089b7f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55eb08950fb0 'unsigned int'
|-TypedefDecl 0x55eb089b7f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b8008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b8078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55eb08950fb0 'unsigned int'
|-TypedefDecl 0x55eb089b80e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b8158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b81c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b8238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55eb08950f10 'int'
|-RecordDecl 0x55eb089b8290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55eb089b8408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55eb089b84c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55eb089b8460 'struct __fsid_t' sugar
|   `-RecordType 0x55eb089b8310 '__fsid_t'
|     `-Record 0x55eb089b8290 ''
|-TypedefDecl 0x55eb089b8548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b85b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b8628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b8698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55eb08950fb0 'unsigned int'
|-TypedefDecl 0x55eb089b8708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b8778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55eb08950fb0 'unsigned int'
|-TypedefDecl 0x55eb089b87e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b8858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55eb08950f10 'int'
|-TypedefDecl 0x55eb089b88c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55eb08950f10 'int'
|-TypedefDecl 0x55eb089b8938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55eb08950f10 'int'
|-TypedefDecl 0x55eb089b89a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55eb08951630 'void *'
|   `-BuiltinType 0x55eb08950e70 'void'
|-TypedefDecl 0x55eb089b8a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b8a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b8af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b8b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b8bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b8c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b8cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b8d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b8d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b8e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b8e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089b8f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55eb089b8ed0 '__off64_t' sugar
|   |-Typedef 0x55eb089b81c8 '__off64_t'
|   `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b9000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55eb089b8fc0 '__quad_t *'
|   `-TypedefType 0x55eb089b8f60 '__quad_t' sugar
|     |-Typedef 0x55eb089b7d68 '__quad_t'
|     `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b9070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55eb08951ab0 'char *'
|   `-BuiltinType 0x55eb08950eb0 'char'
|-TypedefDecl 0x55eb089b90e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089b9150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55eb08950fb0 'unsigned int'
|-FunctionDecl 0x55eb089b9298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55eb089b91c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55eb089ba5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55eb089ba5d8 <line:72:3, col:34>
|     `-CallExpr 0x55eb089ba598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55eb089ba580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55eb089ba510 <col:10> '<builtin fn type>' Function 0x55eb089ba380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55eb089ba5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55eb089ba530 <col:29> 'unsigned int' lvalue ParmVar 0x55eb089b91c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55eb089ba380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55eb089ba420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55eb089ba490 <col:10> Implicit
| `-ConstAttr 0x55eb089ba4e8 <col:10> Implicit
|-FunctionDecl 0x55eb089ba740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55eb089ba638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55eb089baa58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55eb089baa48 <line:77:3, col:34>
|     `-CallExpr 0x55eb089baa08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55eb089ba9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55eb089ba978 <col:10> '<builtin fn type>' Function 0x55eb089ba7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55eb089baa30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55eb089ba998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55eb089ba638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55eb089ba7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55eb089ba888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55eb089ba8f8 <col:10> Implicit
| `-ConstAttr 0x55eb089ba950 <col:10> Implicit
|-TypedefDecl 0x55eb089baa88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-TypedefDecl 0x55eb089bab18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55eb089baae0 '__time_t' sugar
|   |-Typedef 0x55eb089b8708 '__time_t'
|   `-BuiltinType 0x55eb08950f30 'long'
|-RecordDecl 0x55eb089bab70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55eb089bac28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55eb089bacb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55eb089bad48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55eb089bad10 '__pid_t' sugar
|   |-Typedef 0x55eb089b8238 '__pid_t'
|   `-BuiltinType 0x55eb08950f10 'int'
|-RecordDecl 0x55eb089bada0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55eb089bae60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55eb089baeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55eb089baf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55eb089bafd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-RecordDecl 0x55eb089bb030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55eb089bb2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55eb089bc3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55eb089bb310 'struct cpu_set_t' sugar
|   `-RecordType 0x55eb089bb0b0 'cpu_set_t'
|     `-Record 0x55eb089bb030 ''
|-FunctionDecl 0x55eb089bc678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55eb089bc448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55eb089bc550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55eb089bc728 <line:107:19>
|-FunctionDecl 0x55eb089bc900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55eb089bc790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55eb089bc9a8 <col:69>
|-FunctionDecl 0x55eb089bcb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55eb089bca10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55eb089bcbc8 <col:64>
|-FunctionDecl 0x55eb089bce88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55eb089bcc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55eb089bcd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55eb089bcf38 <line:113:22>
|-FunctionDecl 0x55eb089bd1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55eb089bcfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55eb089bd098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55eb089bd268 <col:88>
|-FunctionDecl 0x55eb089bd588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55eb089bd2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55eb089bd3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55eb089bd440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55eb089bd640 <col:62>
|-FunctionDecl 0x55eb089bd7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55eb089bd6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55eb089bd860 <col:63>
|-FunctionDecl 0x55eb089bd988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55eb089bda28 <col:47>
|-FunctionDecl 0x55eb089bdb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55eb089bda98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55eb089bdbd8 <col:69>
|-FunctionDecl 0x55eb089bdce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55eb089bdc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55eb089bdd88 <col:69>
|-FunctionDecl 0x55eb089be048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55eb089bddf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55eb089bdf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55eb089be0f8 <col:88>
|-TypedefDecl 0x55eb089be188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55eb089be150 '__clock_t' sugar
|   |-Typedef 0x55eb089b8548 '__clock_t'
|   `-BuiltinType 0x55eb08950f30 'long'
|-TypedefDecl 0x55eb089be218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55eb089be1e0 '__clockid_t' sugar
|   |-Typedef 0x55eb089b8938 '__clockid_t'
|   `-BuiltinType 0x55eb08950f10 'int'
|-TypedefDecl 0x55eb089be2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55eb089be270 '__timer_t' sugar
|   |-Typedef 0x55eb089b89a8 '__timer_t'
|   `-PointerType 0x55eb08951630 'void *'
|     `-BuiltinType 0x55eb08950e70 'void'
|-RecordDecl 0x55eb089be300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55eb089be3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55eb089be440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55eb089be4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55eb089be510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55eb089be578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55eb089be5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55eb089be648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55eb089be6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55eb089be718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55eb089be780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55eb089be7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55eb089be838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55eb089be908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55eb089be978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55eb089bea20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55eb089bebf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55eb089bec90 <col:45>
|-FunctionDecl 0x55eb089bee70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55eb089bed60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55eb089bef18 <col:54>
|-FunctionDecl 0x55eb089bf118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55eb089bef80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55eb089beff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55eb089bf1c8 <line:157:22>
| `-ConstAttr 0x55eb089bf220 <col:63>
|-FunctionDecl 0x55eb089c0050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55eb089bf318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55eb089c00f8 <col:56>
|-FunctionDecl 0x55eb089c04a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55eb089c0168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55eb089c01e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55eb089c0260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55eb089c0358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55eb089c0560 <col:54>
|-RecordDecl 0x55eb089c05b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55eb089c0668 parent 0x55eb08950e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55eb089c08c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55eb089c0968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55eb089c09d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55eb089c0a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55eb089c0b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55eb089c0c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55eb089c0bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55eb089c0b80 'struct __locale_struct' sugar
|     `-RecordType 0x55eb089c0640 'struct __locale_struct'
|       `-Record 0x55eb089c05b8 '__locale_struct'
|-TypedefDecl 0x55eb089c0cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55eb089c0cc0 '__locale_t' sugar
|   |-Typedef 0x55eb089c0c48 '__locale_t'
|   `-PointerType 0x55eb089c0bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55eb089c0b80 'struct __locale_struct' sugar
|       `-RecordType 0x55eb089c0640 'struct __locale_struct'
|         `-Record 0x55eb089c05b8 '__locale_struct'
|-FunctionDecl 0x55eb089c2110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55eb089c0d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55eb089c0de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55eb089c0e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55eb089c0ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55eb089c0f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55eb089c21d8 <col:40>
|-FunctionDecl 0x55eb089c23c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55eb089c22a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55eb089c2470 <col:66>
|-FunctionDecl 0x55eb089c2580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55eb089c24d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55eb089c2628 <col:69>
|-FunctionDecl 0x55eb089c2858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55eb089c2690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55eb089c2720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55eb089c2908 <col:52>
|-FunctionDecl 0x55eb089c2ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55eb089c2970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55eb089c2a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55eb089c2b60 <col:55>
|-FunctionDecl 0x55eb089c2cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55eb089c2be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55eb089c2da0 <col:62>
|-FunctionDecl 0x55eb089c2f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55eb089c2e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55eb089c2fc0 <col:60>
|-FunctionDecl 0x55eb089c32b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55eb089c3118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55eb089c3198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55eb089c3368 <col:44>
|-FunctionDecl 0x55eb089c3578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55eb089c33d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55eb089c3450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55eb089c3628 <col:49>
|-VarDecl 0x55eb089c3728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55eb089c37a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55eb089c3828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55eb089c38f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55eb089c3a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55eb089c3ac0 <col:42>
|-VarDecl 0x55eb089c3b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55eb089c3bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55eb089c3d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55eb089c3c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55eb089c3de0 <col:57>
|-FunctionDecl 0x55eb089c3ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55eb089c3e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55eb089c3f98 <col:56>
|-FunctionDecl 0x55eb089c40d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55eb089c4018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55eb089c4178 <col:59>
|-FunctionDecl 0x55eb089c4280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55eb089c41e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55eb089c4328 <col:48>
| `-ConstAttr 0x55eb089c4380 <col:89>
|-FunctionDecl 0x55eb089c45e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55eb089c4438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55eb089c44c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55eb089c4848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55eb089c46d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55eb089c4768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55eb089c48f8 <col:88>
|-FunctionDecl 0x55eb089c4a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55eb089c4960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55eb089c49f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55eb089c4b40 <col:88>
|-FunctionDecl 0x55eb089c4d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55eb089c4ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55eb089c4c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55eb089c4e08 <line:208:22>
|-FunctionDecl 0x55eb089c5178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55eb089c4e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55eb089c4ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55eb089c4f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55eb089c5010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55eb089c5478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55eb089c5278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55eb089c5350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55eb089c5528 <col:85>
|-FunctionDecl 0x55eb089c5918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55eb089c5590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55eb089c56c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55eb089c57d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55eb089c59d0 <col:52>
|-FunctionDecl 0x55eb089c5b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55eb089c5a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55eb089c5bf0 <col:61>
|-FunctionDecl 0x55eb089c60f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55eb089c5c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55eb089c5cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55eb089c5e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55eb089c5ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55eb089c61b0 <col:62>
|-FunctionDecl 0x55eb089c63c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55eb089c6218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55eb089c62a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55eb089c6478 <line:221:22>
|-FunctionDecl 0x55eb089c6578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55eb089c64e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55eb089c6620 <col:65>
|-TypedefDecl 0x55eb089c6690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55eb08950fd0 'unsigned long'
|-RecordDecl 0x55eb089c66e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55eb089c6830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55eb089c6898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55eb089c6948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55eb089c68f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55eb089c6770 'union pthread_attr_t'
|     `-Record 0x55eb089c66e8 'pthread_attr_t'
|-RecordDecl 0x55eb089c69a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55eb089c6b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55eb089c6b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55eb089c6c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55eb089c6be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55eb089c6a20 'struct __pthread_internal_list'
|     `-Record 0x55eb089c69a0 '__pthread_internal_list'
|-RecordDecl 0x55eb089c6cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55eb089c6d58 parent 0x55eb08950e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55eb089c6e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55eb089c6e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55eb089c6f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55eb089c6f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55eb089c6fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55eb089c7038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55eb089cb110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55eb089cb1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55eb089cb2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55eb089cb318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55eb089cb4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55eb089cb440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55eb089c6d30 'pthread_mutex_t'
|     `-Record 0x55eb089c6cb0 ''
|-RecordDecl 0x55eb089cb510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55eb089cb650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55eb089cb6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55eb089cb770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55eb089cb710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55eb089cb590 'pthread_mutexattr_t'
|     `-Record 0x55eb089cb510 ''
|-RecordDecl 0x55eb089cb7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55eb089cb888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55eb089cb950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55eb089cb9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55eb089cba20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55eb089cba88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55eb089cbaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55eb089cbb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55eb089cbbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55eb089cbc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55eb089cbce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_5/mix032_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_5/mix032_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55eb089cbdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55eb089cbe38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55eb089cbf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55eb089cbf10 'union pthread_cond_t' sugar
|   `-RecordType 0x55eb089cb860 'pthread_cond_t'
|     `-Record 0x55eb089cb7e0 ''
|-RecordDecl 0x55eb089cbfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55eb089cd130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55eb089cd198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55eb089cd250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55eb089cd1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55eb089cc060 'pthread_condattr_t'
|     `-Record 0x55eb089cbfe0 ''
|-TypedefDecl 0x55eb089cd2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55eb08950fb0 'unsigned int'
|-TypedefDecl 0x55eb089cd348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55eb08950f10 'int'
|-RecordDecl 0x55eb089cd3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55eb089cd448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55eb089cd510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55eb089cd578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55eb089cd5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55eb089cd648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55eb089cd6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55eb089cd718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55eb089cd780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55eb089cd7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55eb089cd850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55eb089cd8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55eb089cd920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55eb089cd9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_5/mix032_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_5/mix032_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55eb089cda78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55eb089cdae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55eb089cdc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55eb089cdbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55eb089cd420 'pthread_rwlock_t'
|     `-Record 0x55eb089cd3a0 ''
|-RecordDecl 0x55eb089cdca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55eb089cdde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55eb089cde48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55eb089cdf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55eb089cdea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55eb089cdd20 'pthread_rwlockattr_t'
|     `-Record 0x55eb089cdca0 ''
|-TypedefDecl 0x55eb089cdf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55eb08950f14 'volatile int' volatile
|   `-BuiltinType 0x55eb08950f10 'int'
|-RecordDecl 0x55eb089cdfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55eb089cf140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55eb089cf1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55eb089cf260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55eb089cf200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55eb089ce060 'pthread_barrier_t'
|     `-Record 0x55eb089cdfe0 ''
|-RecordDecl 0x55eb089cf2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55eb089cf3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55eb089cf438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55eb089cf4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55eb089cf490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55eb089cf350 'pthread_barrierattr_t'
|     `-Record 0x55eb089cf2d0 ''
|-TypedefDecl 0x55eb089cf608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55eb089cf5a0 'long [8]' 8 
|   `-BuiltinType 0x55eb08950f30 'long'
|-EnumDecl 0x55eb089cf660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55eb089cf728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55eb089cf778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55eb089cf7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55eb089cf898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55eb089cf8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55eb089cf938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55eb089cf988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55eb089cfa10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55eb089cf9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55eb089cf9d8 <col:26> 'int' EnumConstant 0x55eb089cf898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55eb089cfa98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55eb089cfa80 <col:29> 'int'
| |   `-DeclRefExpr 0x55eb089cfa60 <col:29> 'int' EnumConstant 0x55eb089cf8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55eb089cfb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55eb089cfb08 <col:30> 'int'
| |   `-DeclRefExpr 0x55eb089cfae8 <col:30> 'int' EnumConstant 0x55eb089cf938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55eb089cfba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55eb089cfb90 <col:27> 'int'
|     `-DeclRefExpr 0x55eb089cfb70 <col:27> 'int' EnumConstant 0x55eb089cfa10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55eb089cfbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55eb089cfcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55eb089cfd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55eb089cfd38 <col:30> 'int'
| |   `-DeclRefExpr 0x55eb089cfd18 <col:30> 'int' EnumConstant 0x55eb089cfcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55eb089cfda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55eb089cfe28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55eb089cfe10 <col:29> 'int'
|     `-DeclRefExpr 0x55eb089cfdf0 <col:29> 'int' EnumConstant 0x55eb089cfda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55eb089cfe78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55eb089cff48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55eb089cff98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55eb089cffe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55eb089d0038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55eb089d0150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55eb089d01a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55eb089d01f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55eb089d0278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55eb089d0260 <col:31> 'int'
|     `-DeclRefExpr 0x55eb089d0240 <col:31> 'int' EnumConstant 0x55eb089d0150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55eb089d02c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55eb089d0398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55eb089d03e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55eb089d0438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55eb089d0508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55eb089d0558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55eb089d05a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55eb089d0678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55eb089d06c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55eb089d0718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55eb089d0958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55eb089d09c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55eb089d0a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55eb089d0b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55eb089d0b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55eb089d0c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55eb089d0cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55eb089d0d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55eb089d0dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55eb089d0e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55eb089d1488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55eb089d0f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55eb089d1030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eb089d1270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55eb089d12f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55eb089d1548 <col:47>
| |-NonNullAttr 0x55eb089d15a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55eb089d15d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55eb089d1700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55eb089d1630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55eb089d1958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55eb089d17b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55eb089d1838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55eb089d1b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55eb089d1a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55eb089d1bd0 <col:60>
|-FunctionDecl 0x55eb089d1d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55eb089d1dc0 <col:54>
| `-ConstAttr 0x55eb089d1e18 <col:95>
|-FunctionDecl 0x55eb089d1fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55eb089d1e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55eb089d1ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55eb089d2098 <line:394:19>
| `-ConstAttr 0x55eb089d20f0 <col:60>
|-FunctionDecl 0x55eb089d3b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55eb089d39d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55eb089d3bb0 <col:71>
| `-NonNullAttr 0x55eb089d3c08 <col:112, col:126> 1
|-FunctionDecl 0x55eb089d3d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55eb089d3c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55eb089d3db8 <line:397:22>
| `-NonNullAttr 0x55eb089d3e10 <col:63, col:77> 1
|-FunctionDecl 0x55eb089d4038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55eb089d3e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55eb089d3ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55eb089d40e8 <line:400:22>
| `-NonNullAttr 0x55eb089d4140 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089d4348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55eb089d4188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eb089d4208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55eb089d43f8 <line:403:22>
| `-NonNullAttr 0x55eb089d4450 <col:63, col:77> 1
|-FunctionDecl 0x55eb089d46a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55eb089d4498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55eb089d4540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55eb089d4758 <line:406:22>
| `-NonNullAttr 0x55eb089d47b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089d59e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55eb089d47f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eb089d4870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55eb089d5a98 <line:409:22>
| `-NonNullAttr 0x55eb089d5af0 <col:63, col:77> 1
|-FunctionDecl 0x55eb089d5d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55eb089d5b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eb089d5bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55eb089d5dd8 <line:412:22>
| `-NonNullAttr 0x55eb089d5e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089d6068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55eb089d5e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eb089d5f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55eb089d6118 <col:37>
| `-NonNullAttr 0x55eb089d6170 <col:78, col:95> 1 2
|-FunctionDecl 0x55eb089d6358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089d61b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eb089d6238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55eb089d6408 <line:418:22>
| `-NonNullAttr 0x55eb089d6460 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089d65e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55eb089d64a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eb089d6528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55eb089d6698 <line:420:22>
| `-NonNullAttr 0x55eb089d66f0 <col:63, col:77> 1
|-FunctionDecl 0x55eb089d6898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089d6738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eb089d67b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55eb089d6948 <line:423:22>
| `-NonNullAttr 0x55eb089d69c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089d6b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55eb089d6a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eb089d6a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55eb089d6bf8 <line:426:22>
| `-NonNullAttr 0x55eb089d6c50 <col:63, col:77> 1
|-FunctionDecl 0x55eb089d6df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089d6c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eb089d6d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55eb089d6ea8 <line:429:22>
| `-NonNullAttr 0x55eb089d6f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089d7088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55eb089d6f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eb089d6fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55eb089d7138 <line:431:22>
| `-NonNullAttr 0x55eb089d7190 <col:63, col:77> 1
|-FunctionDecl 0x55eb089d73b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55eb089d71d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eb089d7258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55eb089d7468 <line:434:22>
| |-NonNullAttr 0x55eb089d74c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55eb089d74f8 <col:100> "" ""
|-FunctionDecl 0x55eb089d7708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55eb089d7548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eb089d75c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55eb089d77b8 <line:437:22>
| |-NonNullAttr 0x55eb089d7810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55eb089d7848 <col:97> "" ""
|-FunctionDecl 0x55eb089d7a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55eb089d7898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eb089d7910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55eb089d7af8 <line:440:22>
| `-NonNullAttr 0x55eb089d7b50 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089d7cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55eb089d7b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eb089d7c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55eb089d7d80 <line:443:22>
| `-NonNullAttr 0x55eb089d7dd8 <col:63, col:77> 1
|-FunctionDecl 0x55eb089d80c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55eb089d7e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55eb089d7ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55eb089d7f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55eb089d8180 <line:447:22>
| `-NonNullAttr 0x55eb089d81d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55eb089d8488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55eb089d8230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55eb089d82b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55eb089d8328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55eb089d8540 <col:43>
| `-NonNullAttr 0x55eb089d8598 <col:84, col:98> 1
|-FunctionDecl 0x55eb089d8858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55eb089d85e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55eb089d8668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55eb089d86f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55eb089d8910 <line:452:22>
| `-NonNullAttr 0x55eb089d8968 <col:63, col:77> 3
|-FunctionDecl 0x55eb089d8c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55eb089d89e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55eb089d8a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55eb089d8af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55eb089d8d30 <line:456:22>
| `-NonNullAttr 0x55eb089d8d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55eb089d8f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55eb089d8dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55eb089d8e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55eb089d9028 <line:458:22>
|-FunctionDecl 0x55eb089d93f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55eb089d90f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55eb089d9290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55eb089d94a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55eb089d9650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55eb089d9530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55eb089d95b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55eb089d9838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55eb089d9718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55eb089d9798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55eb089d99f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55eb089d98f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55eb089d9b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55eb089d9bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55eb089d9c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55eb089d9d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55eb089d9dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55eb089d9fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_5/mix032_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55eb089da098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55eb089da150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55eb089da0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55eb089d9c50 '__pthread_unwind_buf_t'
| |   `-Record 0x55eb089d9bd0 ''
| `-AlignedAttr 0x55eb089da1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55eb089da220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55eb089da380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55eb089da3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55eb089da450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55eb089da4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55eb089da6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55eb089da5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55eb089da808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55eb089da778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55eb089daa00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55eb089da8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55eb089daaa8 <line:487:22>
|-RecordDecl 0x55eb089dab00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55eb089dae18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55eb089dac78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55eb089dacf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55eb089daec8 <col:86>
| `-ReturnsTwiceAttr 0x55eb089daf20 <col:12> Implicit
|-FunctionDecl 0x55eb089db248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55eb089daff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55eb089db100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55eb089db2f8 <line:493:22>
| `-NonNullAttr 0x55eb089db350 <col:63, col:77> 1
|-FunctionDecl 0x55eb089db4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55eb089db398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55eb089db570 <line:495:22>
| `-NonNullAttr 0x55eb089db5c8 <col:63, col:77> 1
|-FunctionDecl 0x55eb089db6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55eb089db618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55eb089db778 <line:497:22>
| `-NonNullAttr 0x55eb089db7d0 <col:52, col:66> 1
|-FunctionDecl 0x55eb089db8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55eb089db818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55eb089db978 <line:499:22>
| `-NonNullAttr 0x55eb089db9d0 <col:52, col:66> 1
|-FunctionDecl 0x55eb089dcc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55eb089dca38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55eb089dcac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55eb089dccd8 <col:36>
| `-NonNullAttr 0x55eb089dcd30 <col:66, col:83> 1 2
|-FunctionDecl 0x55eb089dce30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55eb089dcd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55eb089dced8 <line:504:22>
| `-NonNullAttr 0x55eb089dcf30 <col:52, col:66> 1
|-FunctionDecl 0x55eb089dd1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089dcfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55eb089dd060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55eb089dd278 <line:508:22>
| `-NonNullAttr 0x55eb089dd2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089dd598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55eb089dd318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55eb089dd398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55eb089dd418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55eb089dd650 <line:512:22>
| `-NonNullAttr 0x55eb089dd6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55eb089dd7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55eb089dd6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55eb089dd858 <line:514:22>
| `-NonNullAttr 0x55eb089dd8b0 <col:63, col:77> 1
|-FunctionDecl 0x55eb089ddad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55eb089dd960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55eb089ddb80 <line:516:22>
| `-NonNullAttr 0x55eb089ddbd8 <col:63, col:77> 1
|-FunctionDecl 0x55eb089ddce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55eb089ddc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55eb089ddd88 <line:518:22>
| `-NonNullAttr 0x55eb089ddde0 <col:63, col:77> 1
|-FunctionDecl 0x55eb089de008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089dde28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55eb089ddea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55eb089de0b8 <line:522:22>
| `-NonNullAttr 0x55eb089de110 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089de318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55eb089de158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eb089de1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55eb089de3c8 <line:525:22>
| `-NonNullAttr 0x55eb089de420 <col:63, col:77> 1
|-FunctionDecl 0x55eb089de5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089de468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55eb089de4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55eb089de678 <line:528:22>
| `-NonNullAttr 0x55eb089de6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089de858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55eb089de718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eb089de798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55eb089de908 <line:530:22>
| `-NonNullAttr 0x55eb089de960 <col:63, col:77> 1
|-FunctionDecl 0x55eb089deb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089de9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55eb089dea40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55eb089debd0 <line:534:22>
| `-NonNullAttr 0x55eb089dec28 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089dedb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55eb089dec78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eb089decf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55eb089dee68 <line:537:22>
| `-NonNullAttr 0x55eb089deec0 <col:63, col:77> 1
|-FunctionDecl 0x55eb089df068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089def08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55eb089def88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55eb089df118 <line:541:22>
| `-NonNullAttr 0x55eb089df170 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089df2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55eb089df1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eb089df238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55eb089df3a8 <line:544:22>
| `-NonNullAttr 0x55eb089df400 <col:63, col:77> 1
|-FunctionDecl 0x55eb089df5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55eb089df448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eb089df4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55eb089df698 <line:547:22>
| `-NonNullAttr 0x55eb089df6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089df878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55eb089df738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55eb089df7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55eb089df928 <line:550:22>
| `-NonNullAttr 0x55eb089df980 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e0cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55eb089e0aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55eb089e0bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55eb089e0da8 <col:29>
| `-NonNullAttr 0x55eb089e0e00 <col:70, col:84> 1
|-FunctionDecl 0x55eb089e0f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eb089e0e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eb089e1020 <line:555:22>
| `-NonNullAttr 0x55eb089e1078 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e1180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eb089e10c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eb089e1228 <line:557:22>
| `-NonNullAttr 0x55eb089e1280 <col:52, col:66> 1
|-FunctionDecl 0x55eb089e1380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eb089e12c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eb089e1428 <line:559:19>
| `-NonNullAttr 0x55eb089e1480 <col:49, col:63> 1
|-FunctionDecl 0x55eb089e16b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55eb089e14c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55eb089e1558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55eb089e1768 <col:39>
| `-NonNullAttr 0x55eb089e17c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55eb089e18c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eb089e1808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eb089e1968 <line:564:22>
| `-NonNullAttr 0x55eb089e19c0 <col:52, col:66> 1
|-FunctionDecl 0x55eb089e1b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eb089e1a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eb089e1bd0 <line:566:22>
| `-NonNullAttr 0x55eb089e1c28 <col:52, col:66> 1
|-FunctionDecl 0x55eb089e1de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55eb089e1c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55eb089e1d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55eb089e1e98 <col:39>
| `-NonNullAttr 0x55eb089e1ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55eb089e1ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55eb089e1f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55eb089e2098 <line:571:22>
| `-NonNullAttr 0x55eb089e20f0 <col:52, col:66> 1
|-FunctionDecl 0x55eb089e22d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55eb089e21a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55eb089e2380 <line:573:22>
| `-NonNullAttr 0x55eb089e23d8 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e24e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55eb089e2428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55eb089e2588 <line:575:22>
| `-NonNullAttr 0x55eb089e25e0 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e2808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089e2628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55eb089e26a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55eb089e28b8 <line:579:22>
| `-NonNullAttr 0x55eb089e2910 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089e2b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55eb089e2958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55eb089e29d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55eb089e2be8 <line:582:22>
| `-NonNullAttr 0x55eb089e2c40 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e2de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089e2c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55eb089e2d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55eb089e2e98 <line:586:22>
| `-NonNullAttr 0x55eb089e2ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089e3078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55eb089e2f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55eb089e2fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55eb089e3128 <col:36>
| `-NonNullAttr 0x55eb089e3180 <col:77, col:91> 1
|-FunctionDecl 0x55eb089e34b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55eb089e3260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55eb089e3370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55eb089e3568 <line:591:22>
| `-NonNullAttr 0x55eb089e35c0 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e3738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55eb089e3608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55eb089e37e0 <line:593:22>
| `-NonNullAttr 0x55eb089e3838 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e3940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55eb089e3888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55eb089e39e8 <line:595:22>
| `-NonNullAttr 0x55eb089e3a40 <col:52, col:66> 1
|-FunctionDecl 0x55eb089e3b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55eb089e3aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55eb089e3c00 <line:597:22>
| `-NonNullAttr 0x55eb089e3c58 <col:52, col:66> 1
|-FunctionDecl 0x55eb089e3e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55eb089e3ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55eb089e3d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55eb089e3f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55eb089e4268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55eb089e3fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55eb089e4030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55eb089e40c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55eb089e4320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55eb089e4538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55eb089e4400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55eb089e45e0 <line:606:22>
| `-NonNullAttr 0x55eb089e4638 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e4740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55eb089e4688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55eb089e47e8 <line:608:22>
| `-NonNullAttr 0x55eb089e4840 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e4aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089e4888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55eb089e4908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55eb089e4b50 <line:612:22>
| `-NonNullAttr 0x55eb089e4ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089e4db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55eb089e4bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55eb089e4c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55eb089e4e68 <col:37>
| `-NonNullAttr 0x55eb089e4ec0 <col:78, col:92> 1
|-FunctionDecl 0x55eb089e50d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55eb089e4f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55eb089e4fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55eb089e5188 <line:618:22>
| `-NonNullAttr 0x55eb089e51e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089e53a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55eb089e5228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55eb089e52a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55eb089e5458 <line:621:22>
| `-NonNullAttr 0x55eb089e54b0 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e5758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55eb089e5590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55eb089e5610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55eb089e5808 <line:623:22>
| `-NonNullAttr 0x55eb089e5860 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e59d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55eb089e58a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55eb089e5ab0 <line:625:22>
| `-NonNullAttr 0x55eb089e5b08 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e5c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55eb089e5b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55eb089e5cb8 <line:627:22>
| `-NonNullAttr 0x55eb089e5d10 <col:52, col:66> 1
|-FunctionDecl 0x55eb089e5e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55eb089e5d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55eb089e5eb8 <line:629:22>
| `-NonNullAttr 0x55eb089e5f10 <col:52, col:66> 1
|-FunctionDecl 0x55eb089e6010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55eb089e5f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55eb089e60b8 <line:631:22>
| `-NonNullAttr 0x55eb089e6110 <col:52, col:66> 1
|-FunctionDecl 0x55eb089e64e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55eb089e61f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55eb089e6300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55eb089e6380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55eb089e65a0 <line:635:22>
| `-NonNullAttr 0x55eb089e65f8 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e6778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55eb089e6648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55eb089e6820 <line:637:22>
| `-NonNullAttr 0x55eb089e6878 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e6980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55eb089e68c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55eb089e6a28 <line:639:22>
| `-NonNullAttr 0x55eb089e6a80 <col:52, col:66> 1
|-FunctionDecl 0x55eb089e7c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55eb089e7b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55eb089e7d30 <line:641:22>
| `-NonNullAttr 0x55eb089e7d88 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e7e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55eb089e7dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55eb089e7f38 <line:643:22>
| `-NonNullAttr 0x55eb089e7f90 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e81b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55eb089e7fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55eb089e8058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55eb089e8268 <line:647:22>
| `-NonNullAttr 0x55eb089e82c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55eb089e84c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55eb089e8308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55eb089e8388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55eb089e8578 <line:650:22>
| `-NonNullAttr 0x55eb089e85d0 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e8918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55eb089e86b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55eb089e87d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55eb089e89c8 <line:653:22>
| `-NonNullAttr 0x55eb089e8a20 <col:63, col:77> 1
|-FunctionDecl 0x55eb089e8b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55eb089e8a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55eb089e8c30 <col:69>
|-FunctionDecl 0x55eb089e8da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55eb089e8c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55eb089e8e50 <col:72>
|-FunctionDecl 0x55eb089e9088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55eb089e8eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55eb089e8f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55eb089e9138 <col:44>
|-FunctionDecl 0x55eb089e9358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55eb089e91a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55eb089e9218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55eb089e9408 <line:660:22>
| `-NonNullAttr 0x55eb089e9460 <col:63, col:77> 2
|-FunctionDecl 0x55eb089e98a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55eb089e9540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55eb089e9650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55eb089e9760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55eb089e9960 <col:47>
|-FunctionDecl 0x55eb089e9af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55eb089e99d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55eb089e9c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55eb089e9bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55eb089e9da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55eb089e9d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55eb089e9e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55eb089e9f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55eb089e9fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55eb089ea0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55eb089ea120 prev 0x55eb089ea0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55eb089ea188 <col:24> 'int' 0
|-VarDecl 0x55eb089ea1c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55eb089ea240 prev 0x55eb089ea1c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55eb089ea2a8 <col:27> 'int' 0
|-VarDecl 0x55eb089ea2e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55eb089ea360 prev 0x55eb089ea2e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55eb089ea3c8 <col:27> 'int' 0
|-VarDecl 0x55eb089ea400 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55eb089ea480 prev 0x55eb089ea400 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55eb089ea4e8 <col:27> 'int' 0
|-VarDecl 0x55eb089ea520 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55eb089ea5a0 prev 0x55eb089ea520 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55eb089ea608 <col:27> 'int' 0
|-VarDecl 0x55eb089ea640 <line:681:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55eb089ea6c0 prev 0x55eb089ea640 <line:682:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55eb089ea728 <col:27> 'int' 0
|-VarDecl 0x55eb089ea760 <line:683:1, col:5> col:5 used a 'int'
|-VarDecl 0x55eb089ea7e0 prev 0x55eb089ea760 <line:684:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55eb089ea848 <col:9> 'int' 0
|-VarDecl 0x55eb089ea880 <line:685:1, col:5> col:5 used b 'int'
|-VarDecl 0x55eb089ea900 prev 0x55eb089ea880 <line:686:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x55eb089ea968 <col:9> 'int' 0
|-VarDecl 0x55eb089ea998 <line:687:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x55eb089eaa18 <line:688:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x55eb089eab00 <line:689:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x55eb089eab78 <line:690:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x55eb089eabf0 <line:691:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x55eb089eac68 <line:692:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x55eb089eace0 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x55eb089ead58 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x55eb089eadd0 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x55eb089eae48 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x55eb089eaec0 <line:697:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x55eb089eaf40 <line:698:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x55eb089eafc0 <line:699:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x55eb089eb038 <line:700:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x55eb089eb0b8 <line:701:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x55eb089eb130 <line:702:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x55eb089eb1a8 <line:703:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55eb089eb220 <line:704:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55eb089eb2a0 <line:705:1, col:5> col:5 used x 'int'
|-VarDecl 0x55eb089eb320 prev 0x55eb089eb2a0 <line:706:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55eb089eb388 <col:9> 'int' 0
|-VarDecl 0x55eb089eb3c0 <line:707:1, col:5> col:5 used y 'int'
|-VarDecl 0x55eb089eb440 prev 0x55eb089eb3c0 <line:708:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55eb089eb4a8 <col:9> 'int' 0
|-VarDecl 0x55eb089eb4e0 <line:709:1, col:5> col:5 used z 'int'
|-VarDecl 0x55eb089eb560 prev 0x55eb089eb4e0 <line:710:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55eb089eb5c8 <col:9> 'int' 0
|-VarDecl 0x55eb089eb5f8 <line:711:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55eb089eb670 <line:712:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55eb089eb788 prev 0x55eb089e9af0 <line:713:1, line:741:1> line:713:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55eb089eb6f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55eb089ecfd8 <line:714:1, line:741:1>
|   |-CallExpr 0x55eb089eb898 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089eb880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089eb830 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089eb910 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55eb089eb8b8 <col:3> 'int' lvalue Var 0x55eb089eb0b8 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55eb089eb8f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089eb8d8 <col:15> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55eb089eb970 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55eb089eb930 <col:3> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x55eb089eb950 <col:15> 'int' 1
|   |-BinaryOperator 0x55eb089eb9e8 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089eb990 <col:3> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089eb9d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089eb9b0 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55eb089eba80 <line:719:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089eba08 <col:3> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55eb089eba58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55eb089eba28 <col:27> 'int' 1
|   |-CallExpr 0x55eb089ebc18 <line:720:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55eb089ebc00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55eb089ebaa0 <col:3> 'void (int)' Function 0x55eb08990bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55eb089ebbb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55eb089ebb90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55eb089ebb70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55eb089ebb28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55eb089ebb10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55eb089ebac0 <col:23> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55eb089ebb58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55eb089ebb40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55eb089ebae0 <col:41> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55eb089ebc98 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089ebc40 <col:3> '_Bool' lvalue Var 0x55eb089eace0 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089ebc80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089ebc60 <col:20> '_Bool' lvalue Var 0x55eb089eab00 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55eb089ebd10 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089ebcb8 <col:3> '_Bool' lvalue Var 0x55eb089ead58 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089ebcf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089ebcd8 <col:20> '_Bool' lvalue Var 0x55eb089eab78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55eb089ebd88 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089ebd30 <col:3> '_Bool' lvalue Var 0x55eb089eadd0 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089ebd70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089ebd50 <col:20> '_Bool' lvalue Var 0x55eb089eabf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55eb089ebe00 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089ebda8 <col:3> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089ebde8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089ebdc8 <col:20> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55eb089ebe98 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089ebe20 <col:3> '_Bool' lvalue Var 0x55eb089eab78 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55eb089ebe70 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55eb089ebe40 <col:27> 'int' 1
|   |-CallExpr 0x55eb089ebef0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ebed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ebeb8 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089ebf48 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089ebf30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ebf10 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089ebfc0 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55eb089ebf68 <col:3> 'int' lvalue Var 0x55eb089ea240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55eb089ebfa8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089ebf88 <col:25> 'int' lvalue Var 0x55eb089eb320 'x' 'int'
|   |-CallExpr 0x55eb089ec018 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ec000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ebfe0 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089ec070 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089ec058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ec038 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089ec358 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55eb089ec090 <col:3> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   | `-ConditionalOperator 0x55eb089ec328 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55eb089ec150 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55eb089ec108 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55eb089ec0f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55eb089ec0b0 <col:7> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55eb089ec138 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55eb089ec120 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55eb089ec0d0 <col:25> '_Bool' lvalue Var 0x55eb089eab78 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55eb089ec310 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eb089ec170 <col:42> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55eb089ec2f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55eb089ec2c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55eb089ec230 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55eb089ec1e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55eb089ec1d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55eb089ec190 <col:55> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55eb089ec218 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55eb089ec200 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55eb089ec1b0 <col:73> '_Bool' lvalue Var 0x55eb089ead58 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55eb089ec290 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55eb089ec250 <col:90> 'int' lvalue Var 0x55eb089eb0b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55eb089ec2a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089ec270 <col:102> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   |-BinaryOperator 0x55eb089ec560 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089ec378 <col:3> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089ec548 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089ec518 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eb089ec438 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eb089ec3f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eb089ec3d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eb089ec398 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eb089ec420 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eb089ec408 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eb089ec3b8 <col:38> '_Bool' lvalue Var 0x55eb089eab78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089ec4d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089ec488 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089ec458 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089ec500 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089ec4e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089ec4b0 <col:66> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55eb089ec848 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089ec580 <col:3> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089ec830 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089ec800 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eb089ec720 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eb089ec640 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eb089ec5f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eb089ec5e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eb089ec5a0 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eb089ec628 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eb089ec610 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eb089ec5c0 <col:38> '_Bool' lvalue Var 0x55eb089eab78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55eb089ec700 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eb089ec6b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eb089ec6a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eb089ec660 <col:56> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eb089ec6e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eb089ec6d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eb089ec680 <col:74> '_Bool' lvalue Var 0x55eb089ead58 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089ec7b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089ec770 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089ec740 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089ec7e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089ec7d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089ec798 <col:102> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55eb089eca50 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089ec868 <col:3> '_Bool' lvalue Var 0x55eb089eab78 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089eca38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089eca08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eb089ec928 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eb089ec8e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eb089ec8c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eb089ec888 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eb089ec910 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eb089ec8f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eb089ec8a8 <col:38> '_Bool' lvalue Var 0x55eb089eab78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089ec9c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089ec978 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089ec948 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089ec9f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089ec9d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089ec9a0 <col:66> '_Bool' lvalue Var 0x55eb089eab78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55eb089ecd58 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089eca70 <col:3> '_Bool' lvalue Var 0x55eb089ead58 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089ecd40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089ecd10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eb089ecc30 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eb089ecb50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eb089ecae8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eb089ecad0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eb089eca90 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eb089ecb38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eb089ecb20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eb089ecab0 <col:38> '_Bool' lvalue Var 0x55eb089eab78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55eb089ecc10 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eb089ecbc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eb089ecbb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eb089ecb70 <col:56> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eb089ecbf8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eb089ecbe0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eb089ecb90 <col:74> '_Bool' lvalue Var 0x55eb089ead58 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089eccc8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089ecc80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089ecc50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089eccf8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089ecce0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089ecca8 <col:102> '_Bool' lvalue Var 0x55eb089ead58 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55eb089ecdb0 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ecd98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ecd78 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089ece08 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089ecdf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ecdd0 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089ecec0 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55eb089ece28 <col:3> 'int' lvalue Var 0x55eb089ea120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55eb089ecea0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55eb089ece88 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eb089ece48 <col:22> 'int' lvalue Var 0x55eb089ea120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55eb089ece68 <col:41> 'int' 1
|   |-CallExpr 0x55eb089ecf18 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ecf00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ecee0 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55eb089ecfc8 <line:740:3, col:36>
|     `-CallExpr 0x55eb089ecfa8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55eb089ecf90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55eb089ecf38 <col:10> 'void *(void)' Function 0x55eb08990958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55eb089ed168 prev 0x55eb089e9c48 <line:742:1, line:767:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55eb089ed0d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55eb089ee5e0 <line:743:1, line:767:1>
|   |-CallExpr 0x55eb089ed248 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089ed230 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ed210 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089ed2a8 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55eb089ed268 <col:3> 'int' lvalue Var 0x55eb089eb320 'x' 'int'
|   | `-IntegerLiteral 0x55eb089ed288 <col:7> 'int' 1
|   |-CallExpr 0x55eb089ed300 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ed2e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ed2c8 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089ed358 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089ed340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ed320 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089ed3b8 <line:748:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55eb089ed378 <col:3> 'int' lvalue Var 0x55eb089eb440 'y' 'int'
|   | `-IntegerLiteral 0x55eb089ed398 <col:7> 'int' 1
|   |-CallExpr 0x55eb089ed410 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ed3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ed3d8 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089ed468 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089ed450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ed430 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089ed4e0 <line:751:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55eb089ed488 <col:3> 'int' lvalue Var 0x55eb089ea360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55eb089ed4c8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089ed4a8 <col:25> 'int' lvalue Var 0x55eb089eb440 'y' 'int'
|   |-CallExpr 0x55eb089ed538 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ed520 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ed500 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089ed590 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089ed578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ed558 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089ed608 <line:754:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55eb089ed5b0 <col:3> 'int' lvalue Var 0x55eb089ea480 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55eb089ed5f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089ed5d0 <col:25> 'int' lvalue Var 0x55eb089eb560 'z' 'int'
|   |-CallExpr 0x55eb089ed660 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ed648 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ed628 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089ed6b8 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089ed6a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ed680 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089ed9a0 <line:757:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55eb089ed6d8 <col:3> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   | `-ConditionalOperator 0x55eb089ed970 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55eb089ed798 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55eb089ed750 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55eb089ed738 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55eb089ed6f8 <col:7> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55eb089ed780 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55eb089ed768 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55eb089ed718 <col:25> '_Bool' lvalue Var 0x55eb089eabf0 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55eb089ed958 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eb089ed7b8 <col:42> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55eb089ed938 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55eb089ed908 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55eb089ed878 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55eb089ed830 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55eb089ed818 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55eb089ed7d8 <col:55> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55eb089ed860 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55eb089ed848 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55eb089ed7f8 <col:73> '_Bool' lvalue Var 0x55eb089eadd0 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55eb089ed8d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55eb089ed898 <col:90> 'int' lvalue Var 0x55eb089eb0b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55eb089ed8f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089ed8b8 <col:102> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   |-BinaryOperator 0x55eb089edbc0 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089ed9c0 <col:3> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089edba8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089edb78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eb089eda80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eb089eda38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eb089eda20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eb089ed9e0 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eb089eda68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eb089eda50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eb089eda00 <col:38> '_Bool' lvalue Var 0x55eb089eabf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089edb30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089edad0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089edaa0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089edb60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089edb48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089edaf8 <col:66> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55eb089edea8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089edbe0 <col:3> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089ede90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089ede60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eb089edd80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eb089edca0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eb089edc58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eb089edc40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eb089edc00 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eb089edc88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eb089edc70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eb089edc20 <col:38> '_Bool' lvalue Var 0x55eb089eabf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55eb089edd60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eb089edd18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eb089edd00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eb089edcc0 <col:56> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eb089edd48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eb089edd30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eb089edce0 <col:74> '_Bool' lvalue Var 0x55eb089eadd0 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089ede18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089eddd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089edda0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089ede48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089ede30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089eddf8 <col:102> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55eb089ee0b0 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089edec8 <col:3> '_Bool' lvalue Var 0x55eb089eabf0 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089ee098 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089ee068 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eb089edf88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eb089edf40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eb089edf28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eb089edee8 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eb089edf70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eb089edf58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eb089edf08 <col:38> '_Bool' lvalue Var 0x55eb089eabf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089ee020 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089edfd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089edfa8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089ee050 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089ee038 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089ee000 <col:66> '_Bool' lvalue Var 0x55eb089eabf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55eb089ee398 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089ee0d0 <col:3> '_Bool' lvalue Var 0x55eb089eadd0 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089ee380 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089ee350 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eb089ee270 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eb089ee190 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eb089ee148 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eb089ee130 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eb089ee0f0 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eb089ee178 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eb089ee160 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eb089ee110 <col:38> '_Bool' lvalue Var 0x55eb089eabf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55eb089ee250 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eb089ee208 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eb089ee1f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eb089ee1b0 <col:56> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eb089ee238 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eb089ee220 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eb089ee1d0 <col:74> '_Bool' lvalue Var 0x55eb089eadd0 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089ee308 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089ee2c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089ee290 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089ee338 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089ee320 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089ee2e8 <col:102> '_Bool' lvalue Var 0x55eb089eadd0 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55eb089ee3f0 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ee3d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ee3b8 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089ee448 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089ee430 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ee410 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089ee500 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55eb089ee468 <col:3> 'int' lvalue Var 0x55eb089ea120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55eb089ee4e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55eb089ee4c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eb089ee488 <col:22> 'int' lvalue Var 0x55eb089ea120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55eb089ee4a8 <col:41> 'int' 1
|   |-CallExpr 0x55eb089ee558 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ee540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ee520 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55eb089ee5d0 <line:766:3, col:36>
|     `-CallExpr 0x55eb089ee5b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55eb089ee598 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55eb089ee578 <col:10> 'void *(void)' Function 0x55eb08990958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55eb089ee758 prev 0x55eb089e9da0 <line:768:1, line:806:1> line:768:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55eb089ee6c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55eb089f2550 <line:769:1, line:806:1>
|   |-CallExpr 0x55eb089ee838 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089ee820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ee800 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089ee898 <line:771:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55eb089ee858 <col:3> 'int' lvalue Var 0x55eb089eb560 'z' 'int'
|   | `-IntegerLiteral 0x55eb089ee878 <col:7> 'int' 1
|   |-CallExpr 0x55eb089ee8f0 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ee8d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ee8b8 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089ee948 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089ee930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ee910 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089ee9a8 <line:774:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55eb089ee968 <col:3> 'int' lvalue Var 0x55eb089ea7e0 'a' 'int'
|   | `-IntegerLiteral 0x55eb089ee988 <col:7> 'int' 1
|   |-CallExpr 0x55eb089eea00 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089ee9e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089ee9c8 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089eea58 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089eea40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089eea20 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089eead0 <line:777:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55eb089eea78 <col:3> 'int' lvalue Var 0x55eb089ea5a0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55eb089eeab8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089eea98 <col:25> 'int' lvalue Var 0x55eb089ea7e0 'a' 'int'
|   |-CallExpr 0x55eb089eeb40 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089eeb10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089eeaf0 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089eeb98 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089eeb80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089eeb60 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089eec48 <line:780:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089eebb8 <col:3> '_Bool' lvalue Var 0x55eb089eb5f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089eec30 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55eb089eec10 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55eb089eebf8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55eb089eebd8 <col:19> 'void *(void)' Function 0x55eb08990958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55eb089eecf8 <line:781:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089eec68 <col:3> '_Bool' lvalue Var 0x55eb089eb670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089eece0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55eb089eecc0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55eb089eeca8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55eb089eec88 <col:19> 'void *(void)' Function 0x55eb08990958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55eb089eed70 <line:782:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089eed18 <col:3> '_Bool' lvalue Var 0x55eb089ea998 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089eed58 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089eed38 <col:21> '_Bool' lvalue Var 0x55eb089eb670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55eb089eede8 <line:783:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55eb089eed90 <col:3> 'int' lvalue Var 0x55eb089eaa18 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55eb089eedd0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089eedb0 <col:15> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   |-BinaryOperator 0x55eb089ef220 <line:784:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55eb089eee08 <col:3> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   | `-ConditionalOperator 0x55eb089ef1f0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55eb089ef018 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55eb089eef38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55eb089eee60 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55eb089eee48 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55eb089eee28 <col:8> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55eb089eef18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55eb089eeeb0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55eb089eee98 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55eb089eee78 <col:27> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55eb089eef00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55eb089eeee8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55eb089eeec8 <col:46> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55eb089eeff8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55eb089eef90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55eb089eef78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55eb089eef58 <col:65> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55eb089eefe0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55eb089eefc8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55eb089eefa8 <col:84> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55eb089ef1d8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eb089ef038 <col:101> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   |   `-ParenExpr 0x55eb089ef1b8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55eb089ef188 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55eb089ef0f8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55eb089ef0b0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55eb089ef098 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55eb089ef058 <col:106> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55eb089ef0e0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55eb089ef0c8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55eb089ef078 <col:124> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55eb089ef158 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55eb089ef118 <col:141> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55eb089ef170 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089ef138 <col:153> 'int' lvalue Var 0x55eb089eb0b8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55eb089ef730 <line:785:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55eb089ef240 <col:3> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x55eb089ef700 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55eb089ef6d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55eb089ef6b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55eb089ef260 <col:15> '_Bool' lvalue Var 0x55eb089eb670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55eb089ef6e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eb089ef280 <col:31> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55eb089ef698 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55eb089ef668 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55eb089ef490 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55eb089ef3b0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55eb089ef2d8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55eb089ef2c0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55eb089ef2a0 <col:45> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55eb089ef390 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55eb089ef328 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55eb089ef310 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55eb089ef2f0 <col:64> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55eb089ef378 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55eb089ef360 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55eb089ef340 <col:83> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55eb089ef470 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55eb089ef408 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55eb089ef3f0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55eb089ef3d0 <col:102> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55eb089ef458 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55eb089ef440 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55eb089ef420 <col:121> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55eb089ef650 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55eb089ef4b0 <col:138> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x55eb089ef630 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55eb089ef600 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55eb089ef570 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55eb089ef528 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55eb089ef510 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55eb089ef4d0 <col:151> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55eb089ef558 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55eb089ef540 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55eb089ef4f0 <col:169> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55eb089ef5d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55eb089ef590 <col:186> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55eb089ef5e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55eb089ef5b0 <col:198> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55eb089efc50 <line:786:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55eb089ef750 <col:3> 'int' lvalue Var 0x55eb089eb0b8 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x55eb089efc20 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55eb089efbf0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55eb089efbd8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55eb089ef770 <col:15> '_Bool' lvalue Var 0x55eb089eb670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55eb089efc08 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eb089ef790 <col:31> 'int' lvalue Var 0x55eb089eb0b8 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x55eb089efbb8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55eb089efb88 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55eb089ef9a0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55eb089ef8c0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55eb089ef7e8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55eb089ef7d0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55eb089ef7b0 <col:45> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55eb089ef8a0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55eb089ef838 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55eb089ef820 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55eb089ef800 <col:64> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55eb089ef888 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55eb089ef870 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55eb089ef850 <col:83> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55eb089ef980 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55eb089ef918 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55eb089ef900 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55eb089ef8e0 <col:102> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55eb089ef968 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55eb089ef950 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55eb089ef930 <col:121> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55eb089efb70 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55eb089ef9c0 <col:138> 'int' lvalue Var 0x55eb089eb0b8 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x55eb089efb50 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55eb089efb10 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55eb089efa80 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55eb089efa38 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55eb089efa20 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55eb089ef9e0 <col:151> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55eb089efa68 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55eb089efa50 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55eb089efa00 <col:169> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55eb089efae0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55eb089efaa0 <col:186> 'int' lvalue Var 0x55eb089eb0b8 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55eb089efaf8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55eb089efac0 <col:198> 'int' lvalue Var 0x55eb089eb0b8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55eb089f01f8 <line:787:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089efc70 <col:3> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089f01e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089f01b0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55eb089f0168 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55eb089f0150 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55eb089efc90 <col:20> '_Bool' lvalue Var 0x55eb089eb670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089f0198 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55eb089f0180 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55eb089efcb0 <col:36> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55eb089f0130 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55eb089f0100 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55eb089efec0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55eb089efde0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55eb089efd08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55eb089efcf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55eb089efcd0 <col:55> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55eb089efdc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55eb089efd58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55eb089efd40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55eb089efd20 <col:74> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55eb089efda8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55eb089efd90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55eb089efd70 <col:93> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55eb089efea0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55eb089efe38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55eb089efe20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55eb089efe00 <col:112> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55eb089efe88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55eb089efe70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55eb089efe50 <col:131> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55eb089f00e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55eb089f00d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55eb089efee0 <col:148> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55eb089f00b0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55eb089f0080 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55eb089effa0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55eb089eff58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55eb089eff40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55eb089eff00 <col:166> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55eb089eff88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55eb089eff70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55eb089eff20 <col:184> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55eb089f0038 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55eb089efff0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55eb089effc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55eb089f0068 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55eb089f0050 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55eb089f0018 <col:212> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55eb089f07c0 <line:788:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089f0218 <col:3> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089f07a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089f0778 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55eb089f0730 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55eb089f0718 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55eb089f0238 <col:20> '_Bool' lvalue Var 0x55eb089eb670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089f0760 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55eb089f0748 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55eb089f0258 <col:36> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55eb089f06f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55eb089f06c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55eb089f0468 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55eb089f0388 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55eb089f02b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55eb089f0298 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55eb089f0278 <col:55> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55eb089f0368 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55eb089f0300 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55eb089f02e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55eb089f02c8 <col:74> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55eb089f0350 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55eb089f0338 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55eb089f0318 <col:93> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55eb089f0448 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55eb089f03e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55eb089f03c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55eb089f03a8 <col:112> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55eb089f0430 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55eb089f0418 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55eb089f03f8 <col:131> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55eb089f06b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55eb089f0698 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55eb089f0488 <col:148> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55eb089f0678 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55eb089f0648 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55eb089f0548 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55eb089f0500 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55eb089f04e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55eb089f04a8 <col:166> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55eb089f0530 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55eb089f0518 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55eb089f04c8 <col:184> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55eb089f0618 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55eb089f0598 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55eb089f0568 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55eb089f0630 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55eb089f05f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55eb089f05c0 <col:219> 'int' 0
|   |-BinaryOperator 0x55eb089f0d78 <line:789:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089f07e0 <col:3> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089f0d60 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089f0d30 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55eb089f0ce8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55eb089f0cd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55eb089f0800 <col:20> '_Bool' lvalue Var 0x55eb089eb670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089f0d18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55eb089f0d00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55eb089f0820 <col:36> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55eb089f0cb0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55eb089f0c80 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55eb089f0a30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55eb089f0950 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55eb089f0878 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55eb089f0860 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55eb089f0840 <col:55> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55eb089f0930 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55eb089f08c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55eb089f08b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55eb089f0890 <col:74> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55eb089f0918 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55eb089f0900 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55eb089f08e0 <col:93> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55eb089f0a10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55eb089f09a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55eb089f0990 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55eb089f0970 <col:112> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55eb089f09f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55eb089f09e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55eb089f09c0 <col:131> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55eb089f0c68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55eb089f0c50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55eb089f0a50 <col:148> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55eb089f0c30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55eb089f0c00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55eb089f0b10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55eb089f0ac8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55eb089f0ab0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55eb089f0a70 <col:166> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55eb089f0af8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55eb089f0ae0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55eb089f0a90 <col:184> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55eb089f0bb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55eb089f0b70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55eb089f0b30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55eb089f0be8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55eb089f0bd0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55eb089f0b98 <col:212> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55eb089f1340 <line:790:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089f0d98 <col:3> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089f1328 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089f12f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55eb089f12b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55eb089f1298 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55eb089f0db8 <col:20> '_Bool' lvalue Var 0x55eb089eb670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089f12e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55eb089f12c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55eb089f0dd8 <col:36> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55eb089f1278 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55eb089f1248 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55eb089f0fe8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55eb089f0f08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55eb089f0e30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55eb089f0e18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55eb089f0df8 <col:55> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55eb089f0ee8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55eb089f0e80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55eb089f0e68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55eb089f0e48 <col:74> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55eb089f0ed0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55eb089f0eb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55eb089f0e98 <col:93> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55eb089f0fc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55eb089f0f60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55eb089f0f48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55eb089f0f28 <col:112> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55eb089f0fb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55eb089f0f98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55eb089f0f78 <col:131> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55eb089f1230 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55eb089f1218 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55eb089f1008 <col:148> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55eb089f11f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55eb089f11c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55eb089f10c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55eb089f1080 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55eb089f1068 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55eb089f1028 <col:166> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55eb089f10b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55eb089f1098 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55eb089f1048 <col:184> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55eb089f1198 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55eb089f1118 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55eb089f10e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55eb089f11b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55eb089f1170 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55eb089f1140 <col:219> 'int' 0
|   |-BinaryOperator 0x55eb089f13b8 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55eb089f1360 <col:3> 'int' lvalue Var 0x55eb089ea6c0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55eb089f13a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eb089f1380 <col:25> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   |-BinaryOperator 0x55eb089f14e8 <line:792:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55eb089f13d8 <col:3> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   | `-ConditionalOperator 0x55eb089f14b8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55eb089f1470 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55eb089f1458 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55eb089f13f8 <col:7> '_Bool' lvalue Var 0x55eb089ea998 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55eb089f1488 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eb089f1418 <col:25> 'int' lvalue Var 0x55eb089eaa18 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55eb089f14a0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55eb089f1438 <col:37> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   |-BinaryOperator 0x55eb089f1580 <line:793:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089f1508 <col:3> '_Bool' lvalue Var 0x55eb089ea998 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55eb089f1558 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55eb089f1528 <col:28> 'int' 0
|   |-CallExpr 0x55eb089f15d8 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089f15c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089f15a0 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089f1630 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089f1618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089f15f8 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089f1918 <line:796:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55eb089f1650 <col:3> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   | `-ConditionalOperator 0x55eb089f18e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55eb089f1710 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55eb089f16c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55eb089f16b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55eb089f1670 <col:7> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55eb089f16f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55eb089f16e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55eb089f1690 <col:25> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55eb089f18d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eb089f1730 <col:42> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55eb089f18b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55eb089f1880 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55eb089f17f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55eb089f17a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55eb089f1790 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55eb089f1750 <col:55> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55eb089f17d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55eb089f17c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55eb089f1770 <col:73> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55eb089f1850 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55eb089f1810 <col:90> 'int' lvalue Var 0x55eb089eb0b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55eb089f1868 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089f1830 <col:102> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
|   |-BinaryOperator 0x55eb089f1b20 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089f1938 <col:3> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089f1b08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089f1ad8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eb089f19f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eb089f19b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eb089f1998 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eb089f1958 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eb089f19e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eb089f19c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eb089f1978 <col:38> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089f1a90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089f1a48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089f1a18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089f1ac0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089f1aa8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089f1a70 <col:66> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55eb089f1e18 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089f1b40 <col:3> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089f1e00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089f1dd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eb089f1cf0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eb089f1c10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eb089f1bc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eb089f1bb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eb089f1b70 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eb089f1bf8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eb089f1be0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eb089f1b90 <col:38> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55eb089f1cd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eb089f1c88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eb089f1c70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eb089f1c30 <col:56> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eb089f1cb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eb089f1ca0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eb089f1c50 <col:74> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089f1d88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089f1d40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089f1d10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089f1db8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089f1da0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089f1d68 <col:102> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55eb089f2020 <line:799:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089f1e38 <col:3> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089f2008 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089f1fd8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55eb089f1ef8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55eb089f1eb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55eb089f1e98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55eb089f1e58 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55eb089f1ee0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55eb089f1ec8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55eb089f1e78 <col:38> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089f1f90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089f1f48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089f1f18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089f1fc0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089f1fa8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089f1f70 <col:66> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55eb089f2308 <line:800:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55eb089f2040 <col:3> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55eb089f22f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55eb089f22c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55eb089f21e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55eb089f2100 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55eb089f20b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55eb089f20a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55eb089f2060 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55eb089f20e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55eb089f20d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55eb089f2080 <col:38> '_Bool' lvalue Var 0x55eb089eac68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55eb089f21c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55eb089f2178 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55eb089f2160 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55eb089f2120 <col:56> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55eb089f21a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55eb089f2190 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55eb089f2140 <col:74> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55eb089f2278 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55eb089f2230 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55eb089f2200 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55eb089f22a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55eb089f2290 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55eb089f2258 <col:102> '_Bool' lvalue Var 0x55eb089eae48 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55eb089f2360 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089f2348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089f2328 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55eb089f23b8 <line:802:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55eb089f23a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089f2380 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55eb089f2470 <line:803:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55eb089f23d8 <col:3> 'int' lvalue Var 0x55eb089ea120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55eb089f2450 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55eb089f2438 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55eb089f23f8 <col:22> 'int' lvalue Var 0x55eb089ea120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55eb089f2418 <col:41> 'int' 1
|   |-CallExpr 0x55eb089f24c8 <line:804:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55eb089f24b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55eb089f2490 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55eb089f2540 <line:805:3, col:36>
|     `-CallExpr 0x55eb089f2520 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55eb089f2508 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55eb089f24e8 <col:10> 'void *(void)' Function 0x55eb08990958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55eb089f26a0 prev 0x55eb089e9e68 <line:807:1, line:809:1> line:807:6 fence 'void ()'
| `-CompoundStmt 0x55eb089f2740 <line:808:1, line:809:1>
|-FunctionDecl 0x55eb089f2770 prev 0x55eb089e9f28 <line:810:1, line:812:1> line:810:6 isync 'void ()'
| `-CompoundStmt 0x55eb089f2810 <line:811:1, line:812:1>
|-FunctionDecl 0x55eb089f2840 prev 0x55eb089e9fe8 <line:813:1, line:815:1> line:813:6 lwfence 'void ()'
| `-CompoundStmt 0x55eb089f28e0 <line:814:1, line:815:1>
`-FunctionDecl 0x55eb089f2948 <line:816:1, line:840:1> line:816:5 main 'int ()'
  `-CompoundStmt 0x55eb089f46c8 <line:817:1, line:840:1>
    |-DeclStmt 0x55eb089f2a60 <line:818:3, col:17>
    | `-VarDecl 0x55eb089f29f8 <col:3, col:13> col:13 used t869 'pthread_t':'unsigned long'
    |-CallExpr 0x55eb089f2c78 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55eb089f2c60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eb089f2a78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55eb089d1488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55eb089f2ab8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55eb089f2a98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55eb089f29f8 't869' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55eb089f2cb8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55eb089f2b30 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55eb089f2b08 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55eb089f2ad0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55eb089f2cd0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eb089f2b50 <col:38> 'void *(void *)' Function 0x55eb089eb788 'P0' 'void *(void *)'
    | `-ParenExpr 0x55eb089f2be0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55eb089f2bb8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55eb089f2b80 <col:51> 'int' 0
    |-DeclStmt 0x55eb089f2d60 <line:820:3, col:17>
    | `-VarDecl 0x55eb089f2cf8 <col:3, col:13> col:13 used t870 'pthread_t':'unsigned long'
    |-CallExpr 0x55eb089f2f08 <line:821:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55eb089f2ef0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eb089f2d78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55eb089d1488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55eb089f2db8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55eb089f2d98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55eb089f2cf8 't870' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55eb089f2f48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55eb089f2e30 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55eb089f2e08 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55eb089f2dd0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55eb089f2f60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eb089f2e50 <col:38> 'void *(void *)' Function 0x55eb089ed168 'P1' 'void *(void *)'
    | `-ParenExpr 0x55eb089f2ed0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55eb089f2ea8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55eb089f2e70 <col:51> 'int' 0
    |-DeclStmt 0x55eb089f2ff0 <line:822:3, col:17>
    | `-VarDecl 0x55eb089f2f88 <col:3, col:13> col:13 used t871 'pthread_t':'unsigned long'
    |-CallExpr 0x55eb089f3198 <line:823:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55eb089f3180 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eb089f3008 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55eb089d1488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55eb089f3048 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55eb089f3028 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55eb089f2f88 't871' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55eb089f31d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55eb089f30c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55eb089f3098 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55eb089f3060 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55eb089f31f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eb089f30e0 <col:38> 'void *(void *)' Function 0x55eb089ee758 'P2' 'void *(void *)'
    | `-ParenExpr 0x55eb089f3160 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55eb089f3138 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55eb089f3100 <col:51> 'int' 0
    |-CallExpr 0x55eb089f3240 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55eb089f3228 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eb089f3208 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55eb089f3310 <line:825:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55eb089f3260 <col:3> '_Bool' lvalue Var 0x55eb089eb1a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55eb089f32f8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55eb089f32d8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55eb089f32c0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55eb089f3280 <col:21> 'int' lvalue Var 0x55eb089ea120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55eb089f32a0 <col:41> 'int' 3
    |-CallExpr 0x55eb089f3368 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55eb089f3350 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eb089f3330 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55eb089f33e0 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55eb089f33c8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eb089f3388 <col:3> 'void (int)' Function 0x55eb08990790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55eb089f3420 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55eb089f3408 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55eb089f33a8 <col:21> '_Bool' lvalue Var 0x55eb089eb1a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55eb089f3470 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55eb089f3458 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eb089f3438 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55eb089f3758 <line:829:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55eb089f3490 <col:3> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
    | `-ConditionalOperator 0x55eb089f3728 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55eb089f3550 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55eb089f3508 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55eb089f34f0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55eb089f34b0 <col:7> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55eb089f3538 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55eb089f3520 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55eb089f34d0 <col:25> '_Bool' lvalue Var 0x55eb089eab00 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55eb089f3710 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55eb089f3570 <col:42> 'int' lvalue Var 0x55eb089eafc0 'b$w_buff0' 'int'
    |   `-ParenExpr 0x55eb089f36f0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55eb089f36c0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55eb089f3630 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55eb089f35e8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55eb089f35d0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55eb089f3590 <col:55> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55eb089f3618 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55eb089f3600 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55eb089f35b0 <col:73> '_Bool' lvalue Var 0x55eb089eace0 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55eb089f3690 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55eb089f3650 <col:90> 'int' lvalue Var 0x55eb089eb0b8 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55eb089f36a8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55eb089f3670 <col:102> 'int' lvalue Var 0x55eb089ea900 'b' 'int'
    |-BinaryOperator 0x55eb089f3960 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55eb089f3778 <col:3> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55eb089f3948 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eb089f3918 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55eb089f3838 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55eb089f37f0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55eb089f37d8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55eb089f3798 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55eb089f3820 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55eb089f3808 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55eb089f37b8 <col:38> '_Bool' lvalue Var 0x55eb089eab00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55eb089f38d0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55eb089f3888 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55eb089f3858 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55eb089f3900 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55eb089f38e8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55eb089f38b0 <col:66> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55eb089f3c68 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55eb089f3980 <col:3> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55eb089f3c50 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eb089f3c20 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55eb089f3b20 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55eb089f3a40 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55eb089f39f8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55eb089f39e0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55eb089f39a0 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55eb089f3a28 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55eb089f3a10 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55eb089f39c0 <col:38> '_Bool' lvalue Var 0x55eb089eab00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55eb089f3b00 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55eb089f3ab8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55eb089f3aa0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55eb089f3a60 <col:56> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55eb089f3ae8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55eb089f3ad0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55eb089f3a80 <col:74> '_Bool' lvalue Var 0x55eb089eace0 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55eb089f3bd8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55eb089f3b90 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55eb089f3b40 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55eb089f3c08 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55eb089f3bf0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55eb089f3bb8 <col:102> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55eb089f3e70 <line:832:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55eb089f3c88 <col:3> '_Bool' lvalue Var 0x55eb089eab00 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55eb089f3e58 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eb089f3e28 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55eb089f3d48 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55eb089f3d00 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55eb089f3ce8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55eb089f3ca8 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55eb089f3d30 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55eb089f3d18 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55eb089f3cc8 <col:38> '_Bool' lvalue Var 0x55eb089eab00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55eb089f3de0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55eb089f3d98 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55eb089f3d68 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55eb089f3e10 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55eb089f3df8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55eb089f3dc0 <col:66> '_Bool' lvalue Var 0x55eb089eab00 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55eb089f4158 <line:833:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55eb089f3e90 <col:3> '_Bool' lvalue Var 0x55eb089eace0 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55eb089f4140 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55eb089f4110 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55eb089f4030 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55eb089f3f50 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55eb089f3f08 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55eb089f3ef0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55eb089f3eb0 <col:20> '_Bool' lvalue Var 0x55eb089eb038 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55eb089f3f38 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55eb089f3f20 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55eb089f3ed0 <col:38> '_Bool' lvalue Var 0x55eb089eab00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55eb089f4010 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55eb089f3fc8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55eb089f3fb0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55eb089f3f70 <col:56> '_Bool' lvalue Var 0x55eb089eb130 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55eb089f3ff8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55eb089f3fe0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55eb089f3f90 <col:74> '_Bool' lvalue Var 0x55eb089eace0 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55eb089f40c8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55eb089f4080 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55eb089f4050 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55eb089f40f8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55eb089f40e0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55eb089f40a8 <col:102> '_Bool' lvalue Var 0x55eb089eace0 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55eb089f41b0 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55eb089f4198 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eb089f4178 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55eb089f4208 <line:835:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55eb089f41f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eb089f41d0 <col:3> 'void ()' Function 0x55eb08990e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55eb089f4570 <line:836:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x55eb089f4228 <col:3> '_Bool' lvalue Var 0x55eb089eb220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55eb089f4558 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55eb089f4540 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55eb089f4520 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x55eb089f4500 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x55eb089f4468 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x55eb089f43d0 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x55eb089f4338 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x55eb089f42a0 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55eb089f4288 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55eb089f4248 <col:23> 'int' lvalue Var 0x55eb089ea240 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x55eb089f4268 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x55eb089f4318 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55eb089f4300 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55eb089f42c0 <col:51> 'int' lvalue Var 0x55eb089ea360 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55eb089f42e0 <col:74> 'int' 1
    |         | | `-BinaryOperator 0x55eb089f43b0 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55eb089f4398 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55eb089f4358 <col:79> 'int' lvalue Var 0x55eb089ea480 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55eb089f4378 <col:102> 'int' 0
    |         | `-BinaryOperator 0x55eb089f4448 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55eb089f4430 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55eb089f43f0 <col:107> 'int' lvalue Var 0x55eb089ea5a0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55eb089f4410 <col:130> 'int' 1
    |         `-BinaryOperator 0x55eb089f44e0 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x55eb089f44c8 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55eb089f4488 <col:135> 'int' lvalue Var 0x55eb089ea6c0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55eb089f44a8 <col:158> 'int' 0
    |-CallExpr 0x55eb089f45c8 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55eb089f45b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55eb089f4590 <col:3> 'void ()' Function 0x55eb08990f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55eb089f4640 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55eb089f4628 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55eb089f45e8 <col:3> 'void (int)' Function 0x55eb08990bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55eb089f4680 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55eb089f4668 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55eb089f4608 <col:21> '_Bool' lvalue Var 0x55eb089eb220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55eb089f46b8 <line:839:3, col:10>
      `-IntegerLiteral 0x55eb089f4698 <col:10> 'int' 0
