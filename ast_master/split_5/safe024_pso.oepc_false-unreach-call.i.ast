TranslationUnitDecl 0x5608fa065e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5608fa0666d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5608fa0663b0 '__int128'
|-TypedefDecl 0x5608fa066748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5608fa0663d0 'unsigned __int128'
|-TypedefDecl 0x5608fa066a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5608fa066820 'struct __NSConstantString_tag'
|   `-Record 0x5608fa0667a0 '__NSConstantString_tag'
|-TypedefDecl 0x5608fa066af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5608fa066ab0 'char *'
|   `-BuiltinType 0x5608fa065eb0 'char'
|-TypedefDecl 0x5608fa0a5650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5608fa066d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5608fa066bd0 'struct __va_list_tag'
|     `-Record 0x5608fa066b50 '__va_list_tag'
|-FunctionDecl 0x5608fa0a5770 <./split_5/safe024_pso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5608fa0a5940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5608fa0a5870 <col:31> col:34 'int'
|-FunctionDecl 0x5608fa0a5ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5608fa0a5be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5608fa0a5d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5608fa0a5c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5608fa0a5f58 <col:40, col:99>
|   |-IfStmt 0x5608fa0a5f28 <col:42, col:88>
|   | |-UnaryOperator 0x5608fa0a5e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5608fa0a5df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5608fa0a5dd0 <col:47> 'int' lvalue ParmVar 0x5608fa0a5c98 'expression' 'int'
|   | `-CompoundStmt 0x5608fa0a5f10 <col:59, col:88>
|   |   `-LabelStmt 0x5608fa0a5ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5608fa0a5e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5608fa0a5e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5608fa0a5e20 <col:68> 'void () __attribute__((noreturn))' Function 0x5608fa0a5be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5608fa0a5f40 <col:89>
|   `-ReturnStmt 0x5608fa0a5f48 <col:91>
|-FunctionDecl 0x5608fa0a5fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5608fa0a6060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5608fa0a63e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5608fa0a6118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5608fa0a6198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5608fa0a6218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5608fa0a6298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5608fa0a64a0 <line:11:22>
|-FunctionDecl 0x5608fa0cc520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5608fa0a6510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5608fa0a6590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5608fa0cc350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5608fa0cc3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5608fa0cc5e0 <line:14:22>
|-FunctionDecl 0x5608fa0cc890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5608fa0cc650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5608fa0cc6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5608fa0cc750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5608fa0cc948 <line:16:22>
|-TypedefDecl 0x5608fa0cc9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5608fa065f70 'unsigned char'
|-TypedefDecl 0x5608fa0cca28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5608fa065f90 'unsigned short'
|-TypedefDecl 0x5608fa0cca98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5608fa065fb0 'unsigned int'
|-TypedefDecl 0x5608fa0ccb08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0ccb78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5608fa065ed0 'signed char'
|-TypedefDecl 0x5608fa0ccbe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5608fa065f70 'unsigned char'
|-TypedefDecl 0x5608fa0ccc58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5608fa065ef0 'short'
|-TypedefDecl 0x5608fa0cccc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5608fa065f90 'unsigned short'
|-TypedefDecl 0x5608fa0ccd38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5608fa065f10 'int'
|-TypedefDecl 0x5608fa0ccda8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5608fa065fb0 'unsigned int'
|-TypedefDecl 0x5608fa0cce18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cce88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0ccef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0ccf68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0ccfd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0cd048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5608fa065fb0 'unsigned int'
|-TypedefDecl 0x5608fa0cd0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5608fa065fb0 'unsigned int'
|-TypedefDecl 0x5608fa0cd128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0cd198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0cd208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5608fa065fb0 'unsigned int'
|-TypedefDecl 0x5608fa0cd278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0cd2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cd378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cd3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5608fa065f10 'int'
|-RecordDecl 0x5608fa0cd440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5608fa0cd588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5608fa0cd640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5608fa0cd5e0 'struct __fsid_t' sugar
|   `-RecordType 0x5608fa0cd4c0 '__fsid_t'
|     `-Record 0x5608fa0cd440 ''
|-TypedefDecl 0x5608fa0cd6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cd738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0cd7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0cd818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5608fa065fb0 'unsigned int'
|-TypedefDecl 0x5608fa0cd888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cd8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5608fa065fb0 'unsigned int'
|-TypedefDecl 0x5608fa0cd968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cd9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5608fa065f10 'int'
|-TypedefDecl 0x5608fa0cda48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5608fa065f10 'int'
|-TypedefDecl 0x5608fa0cdab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5608fa065f10 'int'
|-TypedefDecl 0x5608fa0cdb28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5608fa066630 'void *'
|   `-BuiltinType 0x5608fa065e70 'void'
|-TypedefDecl 0x5608fa0cdb98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cdc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cdc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cdce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0cdd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0cddc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0cde38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0cdea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cdf18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cdf88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0cdff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0ce088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5608fa0ce050 '__off64_t' sugar
|   |-Typedef 0x5608fa0cd378 '__off64_t'
|   `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0ce180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5608fa0ce140 '__quad_t *'
|   `-TypedefType 0x5608fa0ce0e0 '__quad_t' sugar
|     |-Typedef 0x5608fa0ccef8 '__quad_t'
|     `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0ce1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5608fa066ab0 'char *'
|   `-BuiltinType 0x5608fa065eb0 'char'
|-TypedefDecl 0x5608fa0ce260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0ce2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5608fa065fb0 'unsigned int'
|-FunctionDecl 0x5608fa0cf458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5608fa0cf380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5608fa0cf768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5608fa0cf758 <line:73:3, col:34>
|     `-CallExpr 0x5608fa0cf718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5608fa0cf700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5608fa0cf690 <col:10> '<builtin fn type>' Function 0x5608fa0cf500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5608fa0cf740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5608fa0cf6b0 <col:29> 'unsigned int' lvalue ParmVar 0x5608fa0cf380 '__bsx' 'unsigned int'
|-FunctionDecl 0x5608fa0cf500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5608fa0cf5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5608fa0cf610 <col:10> Implicit
| `-ConstAttr 0x5608fa0cf668 <col:10> Implicit
|-FunctionDecl 0x5608fa0cf8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5608fa0cf7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5608fa0cfbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5608fa0cfbc8 <line:78:3, col:34>
|     `-CallExpr 0x5608fa0cfb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5608fa0cfb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5608fa0cfaf8 <col:10> '<builtin fn type>' Function 0x5608fa0cf968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5608fa0cfbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5608fa0cfb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5608fa0cf7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5608fa0cf968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5608fa0cfa08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5608fa0cfa78 <col:10> Implicit
| `-ConstAttr 0x5608fa0cfad0 <col:10> Implicit
|-TypedefDecl 0x5608fa0cfc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-TypedefDecl 0x5608fa0cfc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5608fa0cfc60 '__time_t' sugar
|   |-Typedef 0x5608fa0cd888 '__time_t'
|   `-BuiltinType 0x5608fa065f30 'long'
|-RecordDecl 0x5608fa0cfcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5608fa0cfda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5608fa0cfe38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5608fa0cfec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5608fa0cfe90 '__pid_t' sugar
|   |-Typedef 0x5608fa0cd3e8 '__pid_t'
|   `-BuiltinType 0x5608fa065f10 'int'
|-RecordDecl 0x5608fa0cff20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5608fa0cffe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5608fa0d0030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5608fa0d00f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5608fa0d0158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-RecordDecl 0x5608fa0d01b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5608fa0d1480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5608fa0d1530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5608fa0d14d0 'struct cpu_set_t' sugar
|   `-RecordType 0x5608fa0d0230 'cpu_set_t'
|     `-Record 0x5608fa0d01b0 ''
|-FunctionDecl 0x5608fa0d1808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5608fa0d15d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5608fa0d16e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5608fa0d18b8 <line:108:19>
|-FunctionDecl 0x5608fa0d1a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5608fa0d1920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5608fa0d1b38 <col:69>
|-FunctionDecl 0x5608fa0d1cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5608fa0d1ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5608fa0d1d58 <col:64>
|-FunctionDecl 0x5608fa0d2018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5608fa0d1dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5608fa0d1ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5608fa0d20c8 <line:114:22>
|-FunctionDecl 0x5608fa0d23b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5608fa0d2130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5608fa0d2228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5608fa0d2460 <col:88>
|-FunctionDecl 0x5608fa0d2718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5608fa0d24c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5608fa0d2548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5608fa0d25d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5608fa0d27d0 <col:62>
|-FunctionDecl 0x5608fa0d2948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5608fa0d2838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5608fa0d29f0 <col:63>
|-FunctionDecl 0x5608fa0d2b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5608fa0d2bb8 <col:47>
|-FunctionDecl 0x5608fa0d2cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5608fa0d2c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5608fa0d2d68 <col:69>
|-FunctionDecl 0x5608fa0d2e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5608fa0d2dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5608fa0d2f18 <col:69>
|-FunctionDecl 0x5608fa0d31d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5608fa0d2f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5608fa0d30b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5608fa0d3288 <col:88>
|-TypedefDecl 0x5608fa0d3318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5608fa0d32e0 '__clock_t' sugar
|   |-Typedef 0x5608fa0cd6c8 '__clock_t'
|   `-BuiltinType 0x5608fa065f30 'long'
|-TypedefDecl 0x5608fa0d33c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5608fa0d3370 '__clockid_t' sugar
|   |-Typedef 0x5608fa0cdab8 '__clockid_t'
|   `-BuiltinType 0x5608fa065f10 'int'
|-TypedefDecl 0x5608fa0d3458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5608fa0d3420 '__timer_t' sugar
|   |-Typedef 0x5608fa0cdb28 '__timer_t'
|   `-PointerType 0x5608fa066630 'void *'
|     `-BuiltinType 0x5608fa065e70 'void'
|-RecordDecl 0x5608fa0d34b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5608fa0d3570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5608fa0d35d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5608fa0d3640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5608fa0d36a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5608fa0d3710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5608fa0d3778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5608fa0d37e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5608fa0d3848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5608fa0d38b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5608fa0d3918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5608fa0d3980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5608fa0d39d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5608fa0d3a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5608fa0d3b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5608fa0d3bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5608fa0d3d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5608fa0d3e20 <col:45>
|-FunctionDecl 0x5608fa0d4000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5608fa0d3ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5608fa0d40a8 <col:54>
|-FunctionDecl 0x5608fa0d42a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5608fa0d4110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5608fa0d4188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5608fa0d4358 <line:158:22>
| `-ConstAttr 0x5608fa0d4ff0 <col:63>
|-FunctionDecl 0x5608fa0d51f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5608fa0d50e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5608fa0d5298 <col:56>
|-FunctionDecl 0x5608fa0d5640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5608fa0d5308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5608fa0d5380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5608fa0d5400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5608fa0d54f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5608fa0d5700 <col:54>
|-RecordDecl 0x5608fa0d5758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5608fa0d5808 parent 0x5608fa065e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5608fa0d5a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5608fa0d5b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5608fa0d5b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5608fa0d5bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5608fa0d5cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5608fa0d5de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5608fa0d5d90 'struct __locale_struct *'
|   `-ElaboratedType 0x5608fa0d5d20 'struct __locale_struct' sugar
|     `-RecordType 0x5608fa0d57e0 'struct __locale_struct'
|       `-Record 0x5608fa0d5758 '__locale_struct'
|-TypedefDecl 0x5608fa0d5e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5608fa0d5e60 '__locale_t' sugar
|   |-Typedef 0x5608fa0d5de8 '__locale_t'
|   `-PointerType 0x5608fa0d5d90 'struct __locale_struct *'
|     `-ElaboratedType 0x5608fa0d5d20 'struct __locale_struct' sugar
|       `-RecordType 0x5608fa0d57e0 'struct __locale_struct'
|         `-Record 0x5608fa0d5758 '__locale_struct'
|-FunctionDecl 0x5608fa0d72a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5608fa0d5f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5608fa0d5f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5608fa0d7028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5608fa0d70b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5608fa0d7130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5608fa0d7368 <col:40>
|-FunctionDecl 0x5608fa0d7558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5608fa0d7430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5608fa0d7600 <col:66>
|-FunctionDecl 0x5608fa0d7710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5608fa0d7668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5608fa0d77b8 <col:69>
|-FunctionDecl 0x5608fa0d79e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5608fa0d7820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5608fa0d78b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5608fa0d7a98 <col:52>
|-FunctionDecl 0x5608fa0d7c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5608fa0d7b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5608fa0d7b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5608fa0d7cf0 <col:55>
|-FunctionDecl 0x5608fa0d7e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5608fa0d7d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5608fa0d7f30 <col:62>
|-FunctionDecl 0x5608fa0d8168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5608fa0d7f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5608fa0d8210 <col:60>
|-FunctionDecl 0x5608fa0d8438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5608fa0d8290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5608fa0d8310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5608fa0d84e8 <col:44>
|-FunctionDecl 0x5608fa0d86f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5608fa0d8550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5608fa0d85d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5608fa0d87a8 <col:49>
|-VarDecl 0x5608fa0d88a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5608fa0d8928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5608fa0d89a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5608fa0d8a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5608fa0d8ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5608fa0d8c40 <col:42>
|-VarDecl 0x5608fa0d8cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5608fa0d8d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5608fa0d8eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5608fa0d8da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5608fa0d8f60 <col:57>
|-FunctionDecl 0x5608fa0d90d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5608fa0d8fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5608fa0d9178 <col:56>
|-FunctionDecl 0x5608fa0d9288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5608fa0d91f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5608fa0d9330 <col:59>
|-FunctionDecl 0x5608fa0d9438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5608fa0d93a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5608fa0d94e0 <col:48>
| `-ConstAttr 0x5608fa0d9538 <col:89>
|-FunctionDecl 0x5608fa0d9798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5608fa0d95e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5608fa0d9678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5608fa0d99f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5608fa0d9888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5608fa0d9918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5608fa0d9aa8 <col:88>
|-FunctionDecl 0x5608fa0d9c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5608fa0d9b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5608fa0d9ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5608fa0d9cf0 <col:88>
|-FunctionDecl 0x5608fa0d9f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5608fa0d9d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5608fa0d9de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5608fa0d9fb8 <line:209:22>
|-FunctionDecl 0x5608fa0da358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5608fa0da020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5608fa0da0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5608fa0da170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5608fa0da200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5608fa0da658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5608fa0da458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5608fa0da530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5608fa0da708 <col:85>
|-FunctionDecl 0x5608fa0daaf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5608fa0da770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5608fa0da8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5608fa0da9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5608fa0dabb0 <col:52>
|-FunctionDecl 0x5608fa0dad28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5608fa0dac18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5608fa0dadd0 <col:61>
|-FunctionDecl 0x5608fa0db248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5608fa0dae38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5608fa0daeb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5608fa0dafe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5608fa0db0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5608fa0db308 <col:62>
|-FunctionDecl 0x5608fa0db528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5608fa0db370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5608fa0db400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5608fa0db5d8 <line:222:22>
|-FunctionDecl 0x5608fa0db6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5608fa0db640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5608fa0db780 <col:65>
|-TypedefDecl 0x5608fa0db7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5608fa065fd0 'unsigned long'
|-RecordDecl 0x5608fa0db848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5608fa0db990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5608fa0db9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5608fa0dbaa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5608fa0dba50 'union pthread_attr_t' sugar
|   `-RecordType 0x5608fa0db8d0 'union pthread_attr_t'
|     `-Record 0x5608fa0db848 'pthread_attr_t'
|-RecordDecl 0x5608fa0dbb00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5608fa0dbc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5608fa0dbcf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5608fa0dbda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5608fa0dbd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5608fa0dbb80 'struct __pthread_internal_list'
|     `-Record 0x5608fa0dbb00 '__pthread_internal_list'
|-RecordDecl 0x5608fa0dbe10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5608fa0dbeb8 parent 0x5608fa065e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5608fa0dbf90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5608fa0dbff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5608fa0dc060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5608fa0e0110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5608fa0e0178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5608fa0e01e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5608fa0e0268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5608fa0e0320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5608fa0e0410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5608fa0e0478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5608fa0e0600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5608fa0e05a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5608fa0dbe90 'pthread_mutex_t'
|     `-Record 0x5608fa0dbe10 ''
|-RecordDecl 0x5608fa0e0670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5608fa0e07b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5608fa0e0818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5608fa0e08d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5608fa0e0870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5608fa0e06f0 'pthread_mutexattr_t'
|     `-Record 0x5608fa0e0670 ''
|-RecordDecl 0x5608fa0e0940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5608fa0e09e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5608fa0e0ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5608fa0e0b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5608fa0e0b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5608fa0e0be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5608fa0e0c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5608fa0e0cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5608fa0e0d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5608fa0e0d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5608fa0e0e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_5/safe024_pso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_5/safe024_pso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5608fa0e0f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5608fa0e0f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5608fa0e2130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5608fa0e1070 'union pthread_cond_t' sugar
|   `-RecordType 0x5608fa0e09c0 'pthread_cond_t'
|     `-Record 0x5608fa0e0940 ''
|-RecordDecl 0x5608fa0e21a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5608fa0e22a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5608fa0e2308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5608fa0e23c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5608fa0e2360 'union pthread_condattr_t' sugar
|   `-RecordType 0x5608fa0e2220 'pthread_condattr_t'
|     `-Record 0x5608fa0e21a0 ''
|-TypedefDecl 0x5608fa0e2448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5608fa065fb0 'unsigned int'
|-TypedefDecl 0x5608fa0e24b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5608fa065f10 'int'
|-RecordDecl 0x5608fa0e2510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5608fa0e25b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5608fa0e2680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5608fa0e26e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5608fa0e2750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5608fa0e27b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5608fa0e2820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5608fa0e2888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5608fa0e28f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5608fa0e2958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5608fa0e29c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5608fa0e2a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5608fa0e2a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5608fa0e2b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_5/safe024_pso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_5/safe024_pso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5608fa0e2be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5608fa0e2c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5608fa0e2da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5608fa0e2d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5608fa0e2590 'pthread_rwlock_t'
|     `-Record 0x5608fa0e2510 ''
|-RecordDecl 0x5608fa0e2e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5608fa0e2f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5608fa0e2fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5608fa0e3070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5608fa0e3010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5608fa0e2e90 'pthread_rwlockattr_t'
|     `-Record 0x5608fa0e2e10 ''
|-TypedefDecl 0x5608fa0e4140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5608fa065f14 'volatile int' volatile
|   `-BuiltinType 0x5608fa065f10 'int'
|-RecordDecl 0x5608fa0e4198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5608fa0e42e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5608fa0e4348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5608fa0e4400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5608fa0e43a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5608fa0e4220 'pthread_barrier_t'
|     `-Record 0x5608fa0e4198 ''
|-RecordDecl 0x5608fa0e4470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5608fa0e4570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5608fa0e45d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5608fa0e4690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5608fa0e4630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5608fa0e44f0 'pthread_barrierattr_t'
|     `-Record 0x5608fa0e4470 ''
|-TypedefDecl 0x5608fa0e47a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5608fa0e4740 'long [8]' 8 
|   `-BuiltinType 0x5608fa065f30 'long'
|-EnumDecl 0x5608fa0e4800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5608fa0e48c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5608fa0e4918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5608fa0e4968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5608fa0e4a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5608fa0e4a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5608fa0e4ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5608fa0e4b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5608fa0e4bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5608fa0e4b98 <col:26> 'int'
| |   `-DeclRefExpr 0x5608fa0e4b78 <col:26> 'int' EnumConstant 0x5608fa0e4a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5608fa0e4c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5608fa0e4c20 <col:29> 'int'
| |   `-DeclRefExpr 0x5608fa0e4c00 <col:29> 'int' EnumConstant 0x5608fa0e4a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5608fa0e4cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5608fa0e4ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x5608fa0e4c88 <col:30> 'int' EnumConstant 0x5608fa0e4ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5608fa0e4d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5608fa0e4d30 <col:27> 'int'
|     `-DeclRefExpr 0x5608fa0e4d10 <col:27> 'int' EnumConstant 0x5608fa0e4bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5608fa0e4d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5608fa0e4e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5608fa0e4ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5608fa0e4ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x5608fa0e4eb8 <col:30> 'int' EnumConstant 0x5608fa0e4e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5608fa0e4f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5608fa0e4fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5608fa0e4fb0 <col:29> 'int'
|     `-DeclRefExpr 0x5608fa0e4f90 <col:29> 'int' EnumConstant 0x5608fa0e4f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5608fa0e5018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5608fa0e50e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5608fa0e5150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5608fa0e51a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5608fa0e51f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5608fa0e52b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5608fa0e5308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5608fa0e5358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5608fa0e53e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5608fa0e53c8 <col:31> 'int'
|     `-DeclRefExpr 0x5608fa0e53a8 <col:31> 'int' EnumConstant 0x5608fa0e52b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5608fa0e5430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5608fa0e54f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5608fa0e5548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5608fa0e5598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5608fa0e5668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5608fa0e56b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5608fa0e5708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5608fa0e57d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5608fa0e5828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5608fa0e5878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5608fa0e5ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5608fa0e5b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5608fa0e5b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5608fa0e5ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5608fa0e5cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5608fa0e5dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5608fa0e5e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5608fa0e5e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5608fa0e5f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5608fa0e5f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5608fa0e65b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5608fa0e6080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5608fa0e61a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5608fa0e63a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5608fa0e6420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5608fa0e6678 <col:47>
| |-NonNullAttr 0x5608fa0e66d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5608fa0e6708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5608fa0e6830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5608fa0e6760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5608fa0e6a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5608fa0e68e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5608fa0e6968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5608fa0e6c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5608fa0e6b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5608fa0e6d00 <col:60>
|-FunctionDecl 0x5608fa0e6e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5608fa0e6ef0 <col:54>
| `-ConstAttr 0x5608fa0e6f48 <col:95>
|-FunctionDecl 0x5608fa0e8990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5608fa0e6f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5608fa0e6ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5608fa0e8a40 <line:395:19>
| `-ConstAttr 0x5608fa0e8a98 <col:60>
|-FunctionDecl 0x5608fa0e8c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5608fa0e8b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5608fa0e8d10 <col:71>
| `-NonNullAttr 0x5608fa0e8d68 <col:112, col:126> 1
|-FunctionDecl 0x5608fa0e8e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5608fa0e8db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5608fa0e8f18 <line:398:22>
| `-NonNullAttr 0x5608fa0e8f70 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0e9198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5608fa0e8fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5608fa0e9038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5608fa0e9248 <line:401:22>
| `-NonNullAttr 0x5608fa0e92a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0e94a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0e92e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5608fa0e9368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5608fa0e9558 <line:404:22>
| `-NonNullAttr 0x5608fa0e95b0 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0e9808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5608fa0e95f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5608fa0e96a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5608fa0e98b8 <line:407:22>
| `-NonNullAttr 0x5608fa0e9910 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0eab68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5608fa0ea9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5608fa0eaa28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5608fa0eac18 <line:410:22>
| `-NonNullAttr 0x5608fa0eac70 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0eaea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5608fa0eacb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5608fa0ead48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5608fa0eaf58 <line:413:22>
| `-NonNullAttr 0x5608fa0eafb0 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0eb1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5608fa0eaff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5608fa0eb088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5608fa0eb298 <col:37>
| `-NonNullAttr 0x5608fa0eb2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x5608fa0eb4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0eb338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5608fa0eb3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5608fa0eb588 <line:419:22>
| `-NonNullAttr 0x5608fa0eb5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0eb768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0eb628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5608fa0eb6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5608fa0eb818 <line:421:22>
| `-NonNullAttr 0x5608fa0eb870 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0eba38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0eb8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5608fa0eb938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5608fa0ebae8 <line:424:22>
| `-NonNullAttr 0x5608fa0ebb40 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0ebcc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0ebb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5608fa0ebc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5608fa0ebd78 <line:427:22>
| `-NonNullAttr 0x5608fa0ebdd0 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0ebf78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0ebe18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5608fa0ebe98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5608fa0ec028 <line:430:22>
| `-NonNullAttr 0x5608fa0ec080 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0ec208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0ec0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5608fa0ec148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5608fa0ec2b8 <line:432:22>
| `-NonNullAttr 0x5608fa0ec310 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0ec538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5608fa0ec358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5608fa0ec3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5608fa0ec5e8 <line:435:22>
| |-NonNullAttr 0x5608fa0ec640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5608fa0ec678 <col:100> "" ""
|-FunctionDecl 0x5608fa0ec888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5608fa0ec6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5608fa0ec748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5608fa0ec938 <line:438:22>
| |-NonNullAttr 0x5608fa0ec990 <col:63, col:77> 1
| `-DeprecatedAttr 0x5608fa0ec9d8 <col:97> "" ""
|-FunctionDecl 0x5608fa0ecbc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5608fa0eca28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5608fa0ecaa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5608fa0ecc78 <line:441:22>
| `-NonNullAttr 0x5608fa0eccd0 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0ece50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5608fa0ecd18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5608fa0ecd90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5608fa0ecf00 <line:444:22>
| `-NonNullAttr 0x5608fa0ecf58 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0ed248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5608fa0ecfa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5608fa0ed028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5608fa0ed0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5608fa0ed300 <line:448:22>
| `-NonNullAttr 0x5608fa0ed358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5608fa0ed608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5608fa0ed3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5608fa0ed430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5608fa0ed4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5608fa0ed6c0 <col:43>
| `-NonNullAttr 0x5608fa0ed718 <col:84, col:98> 1
|-FunctionDecl 0x5608fa0eda20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5608fa0ed768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5608fa0ed7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5608fa0ed878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5608fa0edad8 <line:453:22>
| `-NonNullAttr 0x5608fa0edb30 <col:63, col:77> 3
|-FunctionDecl 0x5608fa0ede08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5608fa0edb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5608fa0edbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5608fa0edc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5608fa0edec0 <line:457:22>
| `-NonNullAttr 0x5608fa0edf18 <col:63, col:80> 2 3
|-FunctionDecl 0x5608fa0ee108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5608fa0edf68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5608fa0edfe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5608fa0ee1b8 <line:459:22>
|-FunctionDecl 0x5608fa0ee588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5608fa0ee280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5608fa0ee420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5608fa0ee638 <col:52, col:69> 1 2
|-FunctionDecl 0x5608fa0ee7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5608fa0ee6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5608fa0ee740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5608fa0ee9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5608fa0ee8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5608fa0ee928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5608fa0eeb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5608fa0eeab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5608fa0eec88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5608fa0eed28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5608fa0eedd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5608fa0eeec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5608fa0eef30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5608fa0ef100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_5/safe024_pso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5608fa0ef1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5608fa0ef2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5608fa0ef250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5608fa0eedb0 '__pthread_unwind_buf_t'
| |   `-Record 0x5608fa0eed28 ''
| `-AlignedAttr 0x5608fa0ef308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5608fa0ef380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5608fa0ef4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5608fa0ef548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5608fa0ef5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5608fa0ef618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5608fa0ef820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5608fa0ef710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5608fa0efa00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5608fa0ef8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5608fa0efbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5608fa0efab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5608fa0efc68 <line:488:22>
|-RecordDecl 0x5608fa0efcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5608fa0effd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5608fa0efe38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5608fa0efeb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5608fa0f0088 <col:86>
| `-ReturnsTwiceAttr 0x5608fa0f00e0 <col:12> Implicit
|-FunctionDecl 0x5608fa0f0408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5608fa0f01b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5608fa0f02c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5608fa0f04b8 <line:494:22>
| `-NonNullAttr 0x5608fa0f0510 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f0688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5608fa0f0558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5608fa0f0730 <line:496:22>
| `-NonNullAttr 0x5608fa0f0788 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f0890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5608fa0f07d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5608fa0f0938 <line:498:22>
| `-NonNullAttr 0x5608fa0f0990 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0f1ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5608fa0f1a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5608fa0f1b80 <line:500:22>
| `-NonNullAttr 0x5608fa0f1bd8 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0f1e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5608fa0f1c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5608fa0f1cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5608fa0f1ec8 <col:36>
| `-NonNullAttr 0x5608fa0f1f20 <col:66, col:83> 1 2
|-FunctionDecl 0x5608fa0f2020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5608fa0f1f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5608fa0f20c8 <line:505:22>
| `-NonNullAttr 0x5608fa0f2120 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0f23b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0f21d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5608fa0f2250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5608fa0f2468 <line:509:22>
| `-NonNullAttr 0x5608fa0f24c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0f2788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0f2508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5608fa0f2588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5608fa0f2608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5608fa0f2840 <line:513:22>
| `-NonNullAttr 0x5608fa0f2898 <col:63, col:80> 1 3
|-FunctionDecl 0x5608fa0f2a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5608fa0f28e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5608fa0f2ad8 <line:515:22>
| `-NonNullAttr 0x5608fa0f2b30 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f2d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5608fa0f2be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5608fa0f2dc0 <line:517:22>
| `-NonNullAttr 0x5608fa0f2e18 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f2f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5608fa0f2e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5608fa0f2fc8 <line:519:22>
| `-NonNullAttr 0x5608fa0f3020 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f3248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0f3068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5608fa0f30e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5608fa0f32f8 <line:523:22>
| `-NonNullAttr 0x5608fa0f3350 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0f3558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0f3398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5608fa0f3418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5608fa0f3608 <line:526:22>
| `-NonNullAttr 0x5608fa0f3660 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f3808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0f36a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5608fa0f3728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5608fa0f38b8 <line:529:22>
| `-NonNullAttr 0x5608fa0f3910 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0f3b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0f3958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5608fa0f3a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5608fa0f3bb0 <line:531:22>
| `-NonNullAttr 0x5608fa0f3c08 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f3db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0f3c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5608fa0f3cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5608fa0f3e68 <line:535:22>
| `-NonNullAttr 0x5608fa0f3ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0f4048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0f3f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5608fa0f3f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5608fa0f40f8 <line:538:22>
| `-NonNullAttr 0x5608fa0f4150 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f42f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0f4198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5608fa0f4218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5608fa0f43a8 <line:542:22>
| `-NonNullAttr 0x5608fa0f4400 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0f4588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0f4448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5608fa0f44c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5608fa0f4638 <line:545:22>
| `-NonNullAttr 0x5608fa0f4690 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f4878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5608fa0f46d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5608fa0f4758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5608fa0f4928 <line:548:22>
| `-NonNullAttr 0x5608fa0f4980 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0f5b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0f49c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5608fa0f5a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5608fa0f5be8 <line:551:22>
| `-NonNullAttr 0x5608fa0f5c40 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f5f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5608fa0f5d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5608fa0f5e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5608fa0f6028 <col:29>
| `-NonNullAttr 0x5608fa0f6080 <col:70, col:84> 1
|-FunctionDecl 0x5608fa0f61f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5608fa0f60c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5608fa0f62a0 <line:556:22>
| `-NonNullAttr 0x5608fa0f62f8 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f6400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5608fa0f6348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5608fa0f64a8 <line:558:22>
| `-NonNullAttr 0x5608fa0f6500 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0f6600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5608fa0f6548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5608fa0f66a8 <line:560:19>
| `-NonNullAttr 0x5608fa0f6700 <col:49, col:63> 1
|-FunctionDecl 0x5608fa0f6938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5608fa0f6748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5608fa0f67d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5608fa0f69e8 <col:39>
| `-NonNullAttr 0x5608fa0f6a70 <col:69, col:86> 1 2
|-FunctionDecl 0x5608fa0f6b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5608fa0f6ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5608fa0f6c18 <line:565:22>
| `-NonNullAttr 0x5608fa0f6c70 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0f6d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5608fa0f6cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5608fa0f6e18 <line:567:22>
| `-NonNullAttr 0x5608fa0f6e70 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0f7028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5608fa0f6eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5608fa0f6f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5608fa0f70d8 <col:39>
| `-NonNullAttr 0x5608fa0f7130 <col:69, col:86> 1 2
|-FunctionDecl 0x5608fa0f7230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5608fa0f7178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5608fa0f72d8 <line:572:22>
| `-NonNullAttr 0x5608fa0f7330 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0f7518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5608fa0f73e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5608fa0f75c0 <line:574:22>
| `-NonNullAttr 0x5608fa0f7618 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f7720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5608fa0f7668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5608fa0f77c8 <line:576:22>
| `-NonNullAttr 0x5608fa0f7820 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f7a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0f7868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5608fa0f78e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5608fa0f7b30 <line:580:22>
| `-NonNullAttr 0x5608fa0f7b88 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0f7d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0f7bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5608fa0f7c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5608fa0f7e48 <line:583:22>
| `-NonNullAttr 0x5608fa0f7ea0 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f8048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0f7ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5608fa0f7f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5608fa0f80f8 <line:587:22>
| `-NonNullAttr 0x5608fa0f8150 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0f82d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0f8198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5608fa0f8218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5608fa0f8388 <col:36>
| `-NonNullAttr 0x5608fa0f83e0 <col:77, col:91> 1
|-FunctionDecl 0x5608fa0f8718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5608fa0f84c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5608fa0f85d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5608fa0f87c8 <line:592:22>
| `-NonNullAttr 0x5608fa0f8820 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f8998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5608fa0f8868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5608fa0f8a40 <line:594:22>
| `-NonNullAttr 0x5608fa0f8ac0 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f8bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5608fa0f8b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5608fa0f8c68 <line:596:22>
| `-NonNullAttr 0x5608fa0f8cc0 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0f8dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5608fa0f8d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5608fa0f8e68 <line:598:22>
| `-NonNullAttr 0x5608fa0f8ec0 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0f90e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5608fa0f8f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5608fa0f8f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5608fa0f9198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5608fa0f94c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5608fa0f9218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5608fa0f9290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5608fa0f9320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5608fa0f9580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5608fa0f9798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5608fa0f9660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5608fa0f9840 <line:607:22>
| `-NonNullAttr 0x5608fa0f9898 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f99a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5608fa0f98e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5608fa0f9a48 <line:609:22>
| `-NonNullAttr 0x5608fa0f9ad0 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0f9cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0f9b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5608fa0f9b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5608fa0f9da8 <line:613:22>
| `-NonNullAttr 0x5608fa0f9e00 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0fa008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0f9e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5608fa0f9ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5608fa0fa0b8 <col:37>
| `-NonNullAttr 0x5608fa0fa110 <col:78, col:92> 1
|-FunctionDecl 0x5608fa0fa328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5608fa0fa158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5608fa0fa200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5608fa0fa3d8 <line:619:22>
| `-NonNullAttr 0x5608fa0fa430 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0fa5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5608fa0fa478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5608fa0fa4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5608fa0fa6a8 <line:622:22>
| `-NonNullAttr 0x5608fa0fa700 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0fa9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5608fa0fa7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5608fa0fa860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5608fa0faa58 <line:624:22>
| `-NonNullAttr 0x5608fa0faae0 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0fac58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5608fa0fab28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5608fa0fad00 <line:626:22>
| `-NonNullAttr 0x5608fa0fad58 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0fae60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5608fa0fada8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5608fa0faf08 <line:628:22>
| `-NonNullAttr 0x5608fa0faf60 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0fb060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5608fa0fafa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5608fa0fb108 <line:630:22>
| `-NonNullAttr 0x5608fa0fb160 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0fb260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5608fa0fb1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5608fa0fb308 <line:632:22>
| `-NonNullAttr 0x5608fa0fb360 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0fb738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5608fa0fb440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5608fa0fb550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5608fa0fb5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5608fa0fb7f0 <line:636:22>
| `-NonNullAttr 0x5608fa0fb848 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0fb9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5608fa0fb898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5608fa0fba70 <line:638:22>
| `-NonNullAttr 0x5608fa0fcb00 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0fcc00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5608fa0fcb48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5608fa0fcca8 <line:640:22>
| `-NonNullAttr 0x5608fa0fcd00 <col:52, col:66> 1
|-FunctionDecl 0x5608fa0fcee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5608fa0fcdb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5608fa0fcf90 <line:642:22>
| `-NonNullAttr 0x5608fa0fcfe8 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0fd0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5608fa0fd038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5608fa0fd198 <line:644:22>
| `-NonNullAttr 0x5608fa0fd1f0 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0fd418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5608fa0fd238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5608fa0fd2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5608fa0fd4c8 <line:648:22>
| `-NonNullAttr 0x5608fa0fd520 <col:63, col:80> 1 2
|-FunctionDecl 0x5608fa0fd728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5608fa0fd568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5608fa0fd5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5608fa0fd7d8 <line:651:22>
| `-NonNullAttr 0x5608fa0fd830 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0fdb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5608fa0fd910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5608fa0fda30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5608fa0fdc48 <line:654:22>
| `-NonNullAttr 0x5608fa0fdca0 <col:63, col:77> 1
|-FunctionDecl 0x5608fa0fddf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5608fa0fdce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5608fa0fdea0 <col:69>
|-FunctionDecl 0x5608fa0fe018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5608fa0fdf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5608fa0fe0c0 <col:72>
|-FunctionDecl 0x5608fa0fe2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5608fa0fe128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5608fa0fe1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5608fa0fe3a8 <col:44>
|-FunctionDecl 0x5608fa0fe5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5608fa0fe410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5608fa0fe488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5608fa0fe678 <line:661:22>
| `-NonNullAttr 0x5608fa0fe6d0 <col:63, col:77> 2
|-FunctionDecl 0x5608fa0feb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5608fa0fe7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5608fa0fe8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5608fa0fe9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5608fa0febe8 <col:47>
|-FunctionDecl 0x5608fa0fecf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5608fa0fec58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5608fa0fee48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5608fa0fedb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5608fa0fefa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5608fa0fef08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5608fa0ff068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5608fa0ff128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5608fa0ff1e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5608fa0ff2a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5608fa0ff320 prev 0x5608fa0ff2a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5608fa0ff388 <col:24> 'int' 0
|-VarDecl 0x5608fa0ff3c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5608fa0ff440 prev 0x5608fa0ff3c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5608fa0ff4a8 <col:27> 'int' 0
|-VarDecl 0x5608fa0ff4e0 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5608fa0ff560 prev 0x5608fa0ff4e0 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5608fa0ff5c8 <col:27> 'int' 0
|-VarDecl 0x5608fa0ff600 <line:678:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5608fa0ff680 prev 0x5608fa0ff600 <line:679:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5608fa0ff6e8 <col:27> 'int' 0
|-VarDecl 0x5608fa0ff718 <line:680:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5608fa0ff790 <line:681:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5608fa0ff810 <line:682:1, col:5> col:5 used x 'int'
|-VarDecl 0x5608fa0ff890 prev 0x5608fa0ff810 <line:683:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5608fa0ff8f8 <col:9> 'int' 0
|-VarDecl 0x5608fa0ff928 <line:684:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5608fa0ff9a8 <line:685:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5608fa0ffa20 <line:686:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5608fa0ffb00 <line:687:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5608fa0ffb78 <line:688:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5608fa0ffbf0 <line:689:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5608fa0ffc68 <line:690:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5608fa0ffce0 <line:691:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5608fa0ffd58 <line:692:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5608fa0ffdd0 <line:693:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5608fa0ffe48 <line:694:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5608fa0ffec8 <line:695:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5608fa0fff48 <line:696:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5608fa0fffc0 <line:697:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5608fa100040 <line:698:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5608fa1000b8 <line:699:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5608fa100138 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x5608fa1001b8 prev 0x5608fa100138 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5608fa100220 <col:9> 'int' 0
|-VarDecl 0x5608fa100258 <line:702:1, col:5> col:5 used z 'int'
|-VarDecl 0x5608fa1002d8 prev 0x5608fa100258 <line:703:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5608fa100340 <col:9> 'int' 0
|-VarDecl 0x5608fa100370 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5608fa1003e8 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5608fa100500 prev 0x5608fa0fecf0 <line:706:1, line:735:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5608fa100468 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5608fa103508 <line:707:1, line:735:1>
|   |-CallExpr 0x5608fa100618 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa100600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa1005a8 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5608fa100678 <line:709:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5608fa100638 <col:3> 'int' lvalue Var 0x5608fa1002d8 'z' 'int'
|   | `-IntegerLiteral 0x5608fa100658 <col:7> 'int' 1
|   |-CallExpr 0x5608fa1006d0 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa1006b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa100698 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5608fa100728 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa100710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa1006f0 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5608fa100780 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa100768 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa100748 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5608fa1007d8 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa1007c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa1007a0 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5608fa1008a8 <line:714:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa1007f8 <col:3> '_Bool' lvalue Var 0x5608fa100370 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5608fa100888 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5608fa100870 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5608fa100818 <col:19> '_Bool (void)' Function 0x5608fa0a5770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5608fa100940 <line:715:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa1008c8 <col:3> '_Bool' lvalue Var 0x5608fa1003e8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5608fa100920 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5608fa100908 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5608fa1008e8 <col:19> '_Bool (void)' Function 0x5608fa0a5770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5608fa1009b8 <line:716:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa100960 <col:3> '_Bool' lvalue Var 0x5608fa0ff928 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa1009a0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5608fa100980 <col:21> '_Bool' lvalue Var 0x5608fa1003e8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5608fa100a30 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5608fa1009d8 <col:3> 'int' lvalue Var 0x5608fa0ff9a8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5608fa100a18 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5608fa1009f8 <col:15> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
|   |-BinaryOperator 0x5608fa100e80 <line:718:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5608fa100a50 <col:3> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
|   | `-ConditionalOperator 0x5608fa100e50 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5608fa100c78 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5608fa100b98 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5608fa100aa8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5608fa100a90 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5608fa100a70 <col:8> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5608fa100b78 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5608fa100b10 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5608fa100ae0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5608fa100ac0 <col:27> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5608fa100b60 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5608fa100b48 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5608fa100b28 <col:46> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5608fa100c58 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5608fa100bf0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5608fa100bd8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5608fa100bb8 <col:65> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5608fa100c40 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5608fa100c28 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5608fa100c08 <col:84> '_Bool' lvalue Var 0x5608fa0ffce0 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5608fa100e38 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5608fa100c98 <col:101> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
|   |   `-ParenExpr 0x5608fa100e18 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5608fa100de8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5608fa100d58 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5608fa100d10 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5608fa100cf8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5608fa100cb8 <col:106> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5608fa100d40 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5608fa100d28 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5608fa100cd8 <col:124> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5608fa100db8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5608fa100d78 <col:141> 'int' lvalue Var 0x5608fa0fff48 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5608fa100dd0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5608fa100d98 <col:153> 'int' lvalue Var 0x5608fa100040 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5608fa101390 <line:719:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5608fa100ea0 <col:3> 'int' lvalue Var 0x5608fa0fff48 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5608fa101360 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5608fa101330 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5608fa101318 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5608fa100ec0 <col:15> '_Bool' lvalue Var 0x5608fa1003e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5608fa101348 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5608fa100ee0 <col:31> 'int' lvalue Var 0x5608fa0fff48 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5608fa1012f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5608fa1012c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5608fa1010f0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5608fa101010 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5608fa100f38 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5608fa100f20 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5608fa100f00 <col:45> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5608fa100ff0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5608fa100f88 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5608fa100f70 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5608fa100f50 <col:64> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5608fa100fd8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5608fa100fc0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5608fa100fa0 <col:83> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5608fa1010d0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5608fa101068 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5608fa101050 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5608fa101030 <col:102> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5608fa1010b8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5608fa1010a0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5608fa101080 <col:121> '_Bool' lvalue Var 0x5608fa0ffce0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5608fa1012b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5608fa101110 <col:138> 'int' lvalue Var 0x5608fa0fff48 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5608fa101290 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5608fa101260 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5608fa1011d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5608fa101188 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5608fa101170 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5608fa101130 <col:151> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5608fa1011b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5608fa1011a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5608fa101150 <col:169> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5608fa101230 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5608fa1011f0 <col:186> 'int' lvalue Var 0x5608fa0fff48 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5608fa101248 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5608fa101210 <col:198> 'int' lvalue Var 0x5608fa0fff48 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5608fa1018a0 <line:720:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5608fa1013b0 <col:3> 'int' lvalue Var 0x5608fa100040 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5608fa101870 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5608fa101840 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5608fa101828 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5608fa1013d0 <col:15> '_Bool' lvalue Var 0x5608fa1003e8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5608fa101858 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5608fa1013f0 <col:31> 'int' lvalue Var 0x5608fa100040 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5608fa101808 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5608fa1017d8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5608fa101600 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5608fa101520 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5608fa101448 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5608fa101430 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5608fa101410 <col:45> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5608fa101500 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5608fa101498 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5608fa101480 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5608fa101460 <col:64> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5608fa1014e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5608fa1014d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5608fa1014b0 <col:83> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5608fa1015e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5608fa101578 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5608fa101560 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5608fa101540 <col:102> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5608fa1015c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5608fa1015b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5608fa101590 <col:121> '_Bool' lvalue Var 0x5608fa0ffce0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5608fa1017c0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5608fa101620 <col:138> 'int' lvalue Var 0x5608fa100040 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5608fa1017a0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5608fa101770 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5608fa1016e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5608fa101698 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5608fa101680 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5608fa101640 <col:151> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5608fa1016c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5608fa1016b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5608fa101660 <col:169> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5608fa101740 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5608fa101700 <col:186> 'int' lvalue Var 0x5608fa100040 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5608fa101758 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5608fa101720 <col:198> 'int' lvalue Var 0x5608fa100040 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5608fa101e58 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa1018c0 <col:3> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa101e40 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa101e10 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5608fa101dc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5608fa101db0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5608fa1018e0 <col:20> '_Bool' lvalue Var 0x5608fa1003e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa101df8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5608fa101de0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5608fa101900 <col:36> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5608fa101d90 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5608fa101d60 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5608fa101b20 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5608fa101a30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5608fa101958 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5608fa101940 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5608fa101920 <col:55> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5608fa101a10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5608fa1019a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5608fa101990 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5608fa101970 <col:74> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5608fa1019f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5608fa1019e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5608fa1019c0 <col:93> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5608fa101af0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5608fa101a88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5608fa101a70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5608fa101a50 <col:112> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5608fa101ad8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5608fa101ac0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5608fa101aa0 <col:131> '_Bool' lvalue Var 0x5608fa0ffce0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5608fa101d48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5608fa101d30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5608fa101b40 <col:148> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5608fa101d10 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5608fa101ce0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5608fa101c00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5608fa101bb8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5608fa101ba0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5608fa101b60 <col:166> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5608fa101be8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5608fa101bd0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5608fa101b80 <col:184> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5608fa101c98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5608fa101c50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5608fa101c20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5608fa101cc8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5608fa101cb0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5608fa101c78 <col:212> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5608fa102420 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa101e78 <col:3> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa102408 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa1023d8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5608fa102390 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5608fa102378 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5608fa101e98 <col:20> '_Bool' lvalue Var 0x5608fa1003e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa1023c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5608fa1023a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5608fa101eb8 <col:36> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5608fa102358 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5608fa102328 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5608fa1020c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5608fa101fe8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5608fa101f10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5608fa101ef8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5608fa101ed8 <col:55> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5608fa101fc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5608fa101f60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5608fa101f48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5608fa101f28 <col:74> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5608fa101fb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5608fa101f98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5608fa101f78 <col:93> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5608fa1020a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5608fa102040 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5608fa102028 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5608fa102008 <col:112> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5608fa102090 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5608fa102078 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5608fa102058 <col:131> '_Bool' lvalue Var 0x5608fa0ffce0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5608fa102310 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5608fa1022f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5608fa1020e8 <col:148> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5608fa1022d8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5608fa1022a8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5608fa1021a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5608fa102160 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5608fa102148 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5608fa102108 <col:166> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5608fa102190 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5608fa102178 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5608fa102128 <col:184> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5608fa102278 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5608fa1021f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5608fa1021c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5608fa102290 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5608fa102250 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5608fa102220 <col:219> 'int' 0
|   |-BinaryOperator 0x5608fa1029c8 <line:723:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa102440 <col:3> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa1029b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa102980 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5608fa102938 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5608fa102920 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5608fa102460 <col:20> '_Bool' lvalue Var 0x5608fa1003e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa102968 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5608fa102950 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5608fa102480 <col:36> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5608fa102900 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5608fa1028d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5608fa102690 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5608fa1025b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5608fa1024d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5608fa1024c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5608fa1024a0 <col:55> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5608fa102590 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5608fa102528 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5608fa102510 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5608fa1024f0 <col:74> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5608fa102578 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5608fa102560 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5608fa102540 <col:93> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5608fa102670 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5608fa102608 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5608fa1025f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5608fa1025d0 <col:112> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5608fa102658 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5608fa102640 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5608fa102620 <col:131> '_Bool' lvalue Var 0x5608fa0ffce0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5608fa1028b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5608fa1028a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5608fa1026b0 <col:148> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5608fa102880 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5608fa102850 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5608fa102770 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5608fa102728 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5608fa102710 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5608fa1026d0 <col:166> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5608fa102758 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5608fa102740 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5608fa1026f0 <col:184> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5608fa102808 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5608fa1027c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5608fa102790 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5608fa102838 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5608fa102820 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5608fa1027e8 <col:212> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5608fa102fa0 <line:724:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa1029e8 <col:3> '_Bool' lvalue Var 0x5608fa0ffce0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa102f88 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa102f58 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5608fa102f10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5608fa102ef8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5608fa102a08 <col:20> '_Bool' lvalue Var 0x5608fa1003e8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa102f40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5608fa102f28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5608fa102a28 <col:36> '_Bool' lvalue Var 0x5608fa0ffce0 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5608fa102ed8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5608fa102ea8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5608fa102c48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5608fa102b68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5608fa102a80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5608fa102a68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5608fa102a48 <col:55> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5608fa102b48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5608fa102ad0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5608fa102ab8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5608fa102a98 <col:74> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5608fa102b30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5608fa102b08 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5608fa102ae8 <col:93> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5608fa102c28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5608fa102bc0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5608fa102ba8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5608fa102b88 <col:112> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5608fa102c10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5608fa102bf8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5608fa102bd8 <col:131> '_Bool' lvalue Var 0x5608fa0ffce0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5608fa102e90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5608fa102e78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5608fa102c68 <col:148> '_Bool' lvalue Var 0x5608fa0ffce0 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5608fa102e58 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5608fa102e28 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5608fa102d28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5608fa102ce0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5608fa102cc8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5608fa102c88 <col:166> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5608fa102d10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5608fa102cf8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5608fa102ca8 <col:184> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5608fa102df8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5608fa102d78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5608fa102d48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5608fa102e10 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5608fa102dd0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5608fa102da0 <col:219> 'int' 0
|   |-BinaryOperator 0x5608fa103018 <line:725:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5608fa102fc0 <col:3> 'int' lvalue Var 0x5608fa0ff440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5608fa103000 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5608fa102fe0 <col:25> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
|   |-BinaryOperator 0x5608fa103148 <line:726:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5608fa103038 <col:3> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
|   | `-ConditionalOperator 0x5608fa103118 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5608fa1030d0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5608fa1030b8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5608fa103058 <col:7> '_Bool' lvalue Var 0x5608fa0ff928 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5608fa1030e8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5608fa103078 <col:25> 'int' lvalue Var 0x5608fa0ff9a8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5608fa103100 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5608fa103098 <col:37> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
|   |-BinaryOperator 0x5608fa1031e0 <line:727:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa103168 <col:3> '_Bool' lvalue Var 0x5608fa0ff928 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5608fa1031b8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5608fa103188 <col:28> 'int' 0
|   |-CallExpr 0x5608fa103238 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa103220 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa103200 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5608fa103290 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa103278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa103258 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5608fa1032e8 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa1032d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa1032b0 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5608fa103340 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa103328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa103308 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5608fa1033f8 <line:732:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5608fa103360 <col:3> 'int' lvalue Var 0x5608fa0ff320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5608fa1033d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5608fa1033c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5608fa103380 <col:22> 'int' lvalue Var 0x5608fa0ff320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5608fa1033a0 <col:41> 'int' 1
|   |-CallExpr 0x5608fa103450 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa103438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa103418 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5608fa1034f8 <line:734:3, col:36>
|     `-CallExpr 0x5608fa1034d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5608fa1034c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5608fa103470 <col:10> 'void *(void)' Function 0x5608fa0a5ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5608fa1036a0 prev 0x5608fa0fee48 <line:736:1, line:764:1> line:736:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5608fa103608 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5608fa104e70 <line:737:1, line:764:1>
|   |-CallExpr 0x5608fa103780 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa103768 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa103748 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5608fa1037f8 <line:739:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5608fa1037a0 <col:3> 'int' lvalue Var 0x5608fa100040 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5608fa1037e0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5608fa1037c0 <col:15> 'int' lvalue Var 0x5608fa0fff48 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5608fa103858 <line:740:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5608fa103818 <col:3> 'int' lvalue Var 0x5608fa0fff48 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5608fa103838 <col:15> 'int' 1
|   |-BinaryOperator 0x5608fa1038d0 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa103878 <col:3> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa1038b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5608fa103898 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5608fa103968 <line:742:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa1038f0 <col:3> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5608fa103940 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5608fa103910 <col:27> 'int' 1
|   |-CallExpr 0x5608fa103ae8 <line:743:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5608fa103ad0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5608fa103988 <col:3> 'void (int)' Function 0x5608fa0a5d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5608fa103a88 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5608fa103a68 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5608fa103a48 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5608fa103a00 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5608fa1039e8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5608fa1039a8 <col:23> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5608fa103a30 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5608fa103a18 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5608fa1039c8 <col:41> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5608fa103b78 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa103b10 <col:3> '_Bool' lvalue Var 0x5608fa0ffc68 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa103b60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5608fa103b40 <col:20> '_Bool' lvalue Var 0x5608fa0ffa20 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5608fa103bf0 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa103b98 <col:3> '_Bool' lvalue Var 0x5608fa0ffce0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa103bd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5608fa103bb8 <col:20> '_Bool' lvalue Var 0x5608fa0ffb00 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5608fa103c68 <line:746:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa103c10 <col:3> '_Bool' lvalue Var 0x5608fa0ffd58 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa103c50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5608fa103c30 <col:20> '_Bool' lvalue Var 0x5608fa0ffb78 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5608fa103ce0 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa103c88 <col:3> '_Bool' lvalue Var 0x5608fa0ffdd0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa103cc8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5608fa103ca8 <col:20> '_Bool' lvalue Var 0x5608fa0ffbf0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5608fa103d78 <line:748:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa103d00 <col:3> '_Bool' lvalue Var 0x5608fa0ffb78 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5608fa103d50 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5608fa103d20 <col:27> 'int' 1
|   |-CallExpr 0x5608fa103dd0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa103db8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa103d98 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5608fa103e28 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa103e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa103df0 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5608fa103e88 <line:751:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5608fa103e48 <col:3> 'int' lvalue Var 0x5608fa1001b8 'y' 'int'
|   | `-IntegerLiteral 0x5608fa103e68 <col:7> 'int' 1
|   |-CallExpr 0x5608fa103ee0 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa103ec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa103ea8 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5608fa103f38 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa103f20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa103f00 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5608fa104220 <line:754:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5608fa103f58 <col:3> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
|   | `-ConditionalOperator 0x5608fa1041f0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5608fa104018 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5608fa103fd0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5608fa103fb8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5608fa103f78 <col:7> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5608fa104000 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5608fa103fe8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5608fa103f98 <col:25> '_Bool' lvalue Var 0x5608fa0ffb78 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5608fa1041d8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5608fa104038 <col:42> 'int' lvalue Var 0x5608fa0fff48 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5608fa1041b8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5608fa104188 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5608fa1040f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5608fa1040b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5608fa104098 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5608fa104058 <col:55> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5608fa1040e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5608fa1040c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5608fa104078 <col:73> '_Bool' lvalue Var 0x5608fa0ffd58 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5608fa104158 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5608fa104118 <col:90> 'int' lvalue Var 0x5608fa100040 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5608fa104170 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5608fa104138 <col:102> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
|   |-BinaryOperator 0x5608fa104428 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa104240 <col:3> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa104410 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa1043e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5608fa104300 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5608fa1042b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5608fa1042a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5608fa104260 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5608fa1042e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5608fa1042d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5608fa104280 <col:38> '_Bool' lvalue Var 0x5608fa0ffb78 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa104398 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5608fa104350 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5608fa104320 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5608fa1043c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5608fa1043b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5608fa104378 <col:66> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5608fa104710 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa104448 <col:3> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa1046f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa1046c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5608fa1045e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5608fa104508 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5608fa1044c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5608fa1044a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5608fa104468 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5608fa1044f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5608fa1044d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5608fa104488 <col:38> '_Bool' lvalue Var 0x5608fa0ffb78 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5608fa1045c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5608fa104580 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5608fa104568 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5608fa104528 <col:56> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5608fa1045b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5608fa104598 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5608fa104548 <col:74> '_Bool' lvalue Var 0x5608fa0ffd58 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa104680 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5608fa104638 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5608fa104608 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5608fa1046b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5608fa104698 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5608fa104660 <col:102> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5608fa104918 <line:757:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa104730 <col:3> '_Bool' lvalue Var 0x5608fa0ffb78 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa104900 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa1048d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5608fa1047f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5608fa1047a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5608fa104790 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5608fa104750 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5608fa1047d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5608fa1047c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5608fa104770 <col:38> '_Bool' lvalue Var 0x5608fa0ffb78 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa104888 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5608fa104840 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5608fa104810 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5608fa1048b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5608fa1048a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5608fa104868 <col:66> '_Bool' lvalue Var 0x5608fa0ffb78 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5608fa104c28 <line:758:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa104938 <col:3> '_Bool' lvalue Var 0x5608fa0ffd58 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa104c10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa104be0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5608fa104ad8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5608fa1049f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5608fa1049b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5608fa104998 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5608fa104958 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5608fa1049e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5608fa1049c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5608fa104978 <col:38> '_Bool' lvalue Var 0x5608fa0ffb78 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5608fa104ab8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5608fa104a70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5608fa104a58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5608fa104a18 <col:56> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5608fa104aa0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5608fa104a88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5608fa104a38 <col:74> '_Bool' lvalue Var 0x5608fa0ffd58 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa104b98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5608fa104b50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5608fa104af8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5608fa104bc8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5608fa104bb0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5608fa104b78 <col:102> '_Bool' lvalue Var 0x5608fa0ffd58 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5608fa104c80 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa104c68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa104c48 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5608fa104cd8 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa104cc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa104ca0 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5608fa104d90 <line:761:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5608fa104cf8 <col:3> 'int' lvalue Var 0x5608fa0ff320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5608fa104d70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5608fa104d58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5608fa104d18 <col:22> 'int' lvalue Var 0x5608fa0ff320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5608fa104d38 <col:41> 'int' 1
|   |-CallExpr 0x5608fa104de8 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa104dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa104db0 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5608fa104e60 <line:763:3, col:36>
|     `-CallExpr 0x5608fa104e40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5608fa104e28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5608fa104e08 <col:10> 'void *(void)' Function 0x5608fa0a5ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5608fa105000 prev 0x5608fa0fefa0 <line:765:1, line:784:1> line:765:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5608fa104f68 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5608fa106258 <line:766:1, line:784:1>
|   |-CallExpr 0x5608fa1050e0 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa1050c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa1050a8 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5608fa105158 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5608fa105100 <col:3> 'int' lvalue Var 0x5608fa0ff560 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5608fa105140 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5608fa105120 <col:25> 'int' lvalue Var 0x5608fa1001b8 'y' 'int'
|   |-CallExpr 0x5608fa1051b0 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa105198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa105178 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5608fa105208 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa1051f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa1051d0 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5608fa105280 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5608fa105228 <col:3> 'int' lvalue Var 0x5608fa0ff680 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5608fa105268 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5608fa105248 <col:25> 'int' lvalue Var 0x5608fa1002d8 'z' 'int'
|   |-CallExpr 0x5608fa1052d8 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa1052c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa1052a0 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5608fa105330 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa105318 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa1052f8 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5608fa105618 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5608fa105350 <col:3> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
|   | `-ConditionalOperator 0x5608fa1055e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5608fa105410 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5608fa1053c8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5608fa1053b0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5608fa105370 <col:7> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5608fa1053f8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5608fa1053e0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5608fa105390 <col:25> '_Bool' lvalue Var 0x5608fa0ffbf0 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5608fa1055d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5608fa105430 <col:42> 'int' lvalue Var 0x5608fa0fff48 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5608fa1055b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5608fa105580 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5608fa1054f0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5608fa1054a8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5608fa105490 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5608fa105450 <col:55> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5608fa1054d8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5608fa1054c0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5608fa105470 <col:73> '_Bool' lvalue Var 0x5608fa0ffdd0 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5608fa105550 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5608fa105510 <col:90> 'int' lvalue Var 0x5608fa100040 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5608fa105568 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5608fa105530 <col:102> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
|   |-BinaryOperator 0x5608fa105820 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa105638 <col:3> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa105808 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa1057d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5608fa1056f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5608fa1056b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5608fa105698 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5608fa105658 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5608fa1056e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5608fa1056c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5608fa105678 <col:38> '_Bool' lvalue Var 0x5608fa0ffbf0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa105790 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5608fa105748 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5608fa105718 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5608fa1057c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5608fa1057a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5608fa105770 <col:66> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5608fa105b08 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa105840 <col:3> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa105af0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa105ac0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5608fa1059e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5608fa105900 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5608fa1058b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5608fa1058a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5608fa105860 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5608fa1058e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5608fa1058d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5608fa105880 <col:38> '_Bool' lvalue Var 0x5608fa0ffbf0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5608fa1059c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5608fa105978 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5608fa105960 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5608fa105920 <col:56> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5608fa1059a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5608fa105990 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5608fa105940 <col:74> '_Bool' lvalue Var 0x5608fa0ffdd0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa105a78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5608fa105a30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5608fa105a00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5608fa105aa8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5608fa105a90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5608fa105a58 <col:102> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5608fa105d28 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa105b28 <col:3> '_Bool' lvalue Var 0x5608fa0ffbf0 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa105d10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa105ce0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5608fa105c00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5608fa105bb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5608fa105ba0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5608fa105b60 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5608fa105be8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5608fa105bd0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5608fa105b80 <col:38> '_Bool' lvalue Var 0x5608fa0ffbf0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa105c98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5608fa105c50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5608fa105c20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5608fa105cc8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5608fa105cb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5608fa105c78 <col:66> '_Bool' lvalue Var 0x5608fa0ffbf0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5608fa106010 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5608fa105d48 <col:3> '_Bool' lvalue Var 0x5608fa0ffdd0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5608fa105ff8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5608fa105fc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5608fa105ee8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5608fa105e08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5608fa105dc0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5608fa105da8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5608fa105d68 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5608fa105df0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5608fa105dd8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5608fa105d88 <col:38> '_Bool' lvalue Var 0x5608fa0ffbf0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5608fa105ec8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5608fa105e80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5608fa105e68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5608fa105e28 <col:56> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5608fa105eb0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5608fa105e98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5608fa105e48 <col:74> '_Bool' lvalue Var 0x5608fa0ffdd0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5608fa105f80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5608fa105f38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5608fa105f08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5608fa105fb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5608fa105f98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5608fa105f60 <col:102> '_Bool' lvalue Var 0x5608fa0ffdd0 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5608fa106068 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa106050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa106030 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5608fa1060c0 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5608fa1060a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa106088 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5608fa106178 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5608fa1060e0 <col:3> 'int' lvalue Var 0x5608fa0ff320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5608fa106158 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5608fa106140 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5608fa106100 <col:22> 'int' lvalue Var 0x5608fa0ff320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5608fa106120 <col:41> 'int' 1
|   |-CallExpr 0x5608fa1061d0 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5608fa1061b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5608fa106198 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5608fa106248 <line:783:3, col:36>
|     `-CallExpr 0x5608fa106228 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5608fa106210 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5608fa1061f0 <col:10> 'void *(void)' Function 0x5608fa0a5ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5608fa106310 prev 0x5608fa0ff068 <line:785:1, line:787:1> line:785:6 fence 'void ()'
| `-CompoundStmt 0x5608fa1063b0 <line:786:1, line:787:1>
|-FunctionDecl 0x5608fa1063e0 prev 0x5608fa0ff128 <line:788:1, line:790:1> line:788:6 isync 'void ()'
| `-CompoundStmt 0x5608fa106480 <line:789:1, line:790:1>
|-FunctionDecl 0x5608fa1064b0 prev 0x5608fa0ff1e8 <line:791:1, line:793:1> line:791:6 lwfence 'void ()'
| `-CompoundStmt 0x5608fa106550 <line:792:1, line:793:1>
`-FunctionDecl 0x5608fa1065b8 <line:794:1, line:818:1> line:794:5 main 'int ()'
  `-CompoundStmt 0x5608fa108210 <line:795:1, line:818:1>
    |-DeclStmt 0x5608fa1066d0 <line:796:3, col:18>
    | `-VarDecl 0x5608fa106668 <col:3, col:13> col:13 used t2353 'pthread_t':'unsigned long'
    |-CallExpr 0x5608fa1068d8 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5608fa1068c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5608fa1066e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5608fa0e65b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5608fa106728 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5608fa106708 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5608fa106668 't2353' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5608fa106918 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5608fa1067a0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5608fa106778 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5608fa106740 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5608fa106930 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5608fa1067c0 <col:39> 'void *(void *)' Function 0x5608fa100500 'P0' 'void *(void *)'
    | `-ParenExpr 0x5608fa106840 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5608fa106818 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5608fa1067e0 <col:52> 'int' 0
    |-DeclStmt 0x5608fa1069c0 <line:798:3, col:18>
    | `-VarDecl 0x5608fa106958 <col:3, col:13> col:13 used t2354 'pthread_t':'unsigned long'
    |-CallExpr 0x5608fa106b88 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5608fa106b70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5608fa1069d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5608fa0e65b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5608fa106a18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5608fa1069f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5608fa106958 't2354' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5608fa106bc8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5608fa106a90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5608fa106a68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5608fa106a30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5608fa106be0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5608fa106ab0 <col:39> 'void *(void *)' Function 0x5608fa1036a0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5608fa106b30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5608fa106b08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5608fa106ad0 <col:52> 'int' 0
    |-DeclStmt 0x5608fa106c70 <line:800:3, col:18>
    | `-VarDecl 0x5608fa106c08 <col:3, col:13> col:13 used t2355 'pthread_t':'unsigned long'
    |-CallExpr 0x5608fa106e18 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5608fa106e00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5608fa106c88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5608fa0e65b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5608fa106cc8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5608fa106ca8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5608fa106c08 't2355' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5608fa106e58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5608fa106d40 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5608fa106d18 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5608fa106ce0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5608fa106e70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5608fa106d60 <col:39> 'void *(void *)' Function 0x5608fa105000 'P2' 'void *(void *)'
    | `-ParenExpr 0x5608fa106de0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5608fa106db8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5608fa106d80 <col:52> 'int' 0
    |-CallExpr 0x5608fa106ec0 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5608fa106ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5608fa106e88 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5608fa106f90 <line:803:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5608fa106ee0 <col:3> '_Bool' lvalue Var 0x5608fa0ff718 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5608fa106f78 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5608fa106f58 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5608fa106f40 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5608fa106f00 <col:21> 'int' lvalue Var 0x5608fa0ff320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5608fa106f20 <col:41> 'int' 3
    |-CallExpr 0x5608fa106fe8 <line:804:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5608fa106fd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5608fa106fb0 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5608fa107060 <line:805:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5608fa107048 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5608fa107008 <col:3> 'void (int)' Function 0x5608fa0a5940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5608fa1070a0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5608fa107088 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5608fa107028 <col:21> '_Bool' lvalue Var 0x5608fa0ff718 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5608fa1070f0 <line:806:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5608fa1070d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5608fa1070b8 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5608fa1073d8 <line:807:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5608fa107110 <col:3> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
    | `-ConditionalOperator 0x5608fa1073a8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5608fa1071d0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5608fa107188 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5608fa107170 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5608fa107130 <col:7> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5608fa1071b8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5608fa1071a0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5608fa107150 <col:25> '_Bool' lvalue Var 0x5608fa0ffa20 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5608fa107390 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5608fa1071f0 <col:42> 'int' lvalue Var 0x5608fa0fff48 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5608fa107370 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5608fa107340 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5608fa1072b0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5608fa107268 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5608fa107250 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5608fa107210 <col:55> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5608fa107298 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5608fa107280 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5608fa107230 <col:73> '_Bool' lvalue Var 0x5608fa0ffc68 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5608fa107310 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5608fa1072d0 <col:90> 'int' lvalue Var 0x5608fa100040 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5608fa107328 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5608fa1072f0 <col:102> 'int' lvalue Var 0x5608fa0ff890 'x' 'int'
    |-BinaryOperator 0x5608fa1075e0 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5608fa1073f8 <col:3> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5608fa1075c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5608fa107598 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5608fa1074b8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5608fa107470 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5608fa107458 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5608fa107418 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5608fa1074a0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5608fa107488 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5608fa107438 <col:38> '_Bool' lvalue Var 0x5608fa0ffa20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5608fa107550 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5608fa107508 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5608fa1074d8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5608fa107580 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5608fa107568 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5608fa107530 <col:66> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5608fa1078c8 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5608fa107600 <col:3> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5608fa1078b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5608fa107880 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5608fa1077a0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5608fa1076c0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5608fa107678 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5608fa107660 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5608fa107620 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5608fa1076a8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5608fa107690 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5608fa107640 <col:38> '_Bool' lvalue Var 0x5608fa0ffa20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5608fa107780 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5608fa107738 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5608fa107720 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5608fa1076e0 <col:56> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5608fa107768 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5608fa107750 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5608fa107700 <col:74> '_Bool' lvalue Var 0x5608fa0ffc68 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5608fa107838 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5608fa1077f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5608fa1077c0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5608fa107868 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5608fa107850 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5608fa107818 <col:102> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5608fa107ad0 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5608fa1078e8 <col:3> '_Bool' lvalue Var 0x5608fa0ffa20 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5608fa107ab8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5608fa107a88 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5608fa1079a8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5608fa107960 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5608fa107948 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5608fa107908 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5608fa107990 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5608fa107978 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5608fa107928 <col:38> '_Bool' lvalue Var 0x5608fa0ffa20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5608fa107a40 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5608fa1079f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5608fa1079c8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5608fa107a70 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5608fa107a58 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5608fa107a20 <col:66> '_Bool' lvalue Var 0x5608fa0ffa20 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5608fa107dd0 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5608fa107af0 <col:3> '_Bool' lvalue Var 0x5608fa0ffc68 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5608fa107db8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5608fa107d88 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5608fa107ca8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5608fa107bc8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5608fa107b80 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5608fa107b50 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5608fa107b10 <col:20> '_Bool' lvalue Var 0x5608fa0fffc0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5608fa107bb0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5608fa107b98 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5608fa107b30 <col:38> '_Bool' lvalue Var 0x5608fa0ffa20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5608fa107c88 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5608fa107c40 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5608fa107c28 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5608fa107be8 <col:56> '_Bool' lvalue Var 0x5608fa1000b8 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5608fa107c70 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5608fa107c58 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5608fa107c08 <col:74> '_Bool' lvalue Var 0x5608fa0ffc68 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5608fa107d40 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5608fa107cf8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5608fa107cc8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5608fa107d70 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5608fa107d58 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5608fa107d20 <col:102> '_Bool' lvalue Var 0x5608fa0ffc68 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5608fa107e28 <line:812:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5608fa107e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5608fa107df0 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5608fa107e80 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5608fa107e68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5608fa107e48 <col:3> 'void ()' Function 0x5608fa0a5fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5608fa1080b8 <line:814:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x5608fa107ea0 <col:3> '_Bool' lvalue Var 0x5608fa0ff790 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5608fa1080a0 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5608fa108088 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5608fa108068 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x5608fa108048 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x5608fa107fb0 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x5608fa107f18 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5608fa107f00 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5608fa107ec0 <col:23> 'int' lvalue Var 0x5608fa0ff440 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x5608fa107ee0 <col:46> 'int' 0
    |         | `-BinaryOperator 0x5608fa107f90 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5608fa107f78 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5608fa107f38 <col:51> 'int' lvalue Var 0x5608fa0ff560 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5608fa107f58 <col:74> 'int' 1
    |         `-BinaryOperator 0x5608fa108028 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x5608fa108010 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5608fa107fd0 <col:79> 'int' lvalue Var 0x5608fa0ff680 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5608fa107ff0 <col:102> 'int' 0
    |-CallExpr 0x5608fa108110 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5608fa1080f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5608fa1080d8 <col:3> 'void ()' Function 0x5608fa0a6060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5608fa108188 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5608fa108170 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5608fa108130 <col:3> 'void (int)' Function 0x5608fa0a5d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5608fa1081c8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5608fa1081b0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5608fa108150 <col:21> '_Bool' lvalue Var 0x5608fa0ff790 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5608fa108200 <line:817:3, col:10>
      `-IntegerLiteral 0x5608fa1081e0 <col:10> 'int' 0
