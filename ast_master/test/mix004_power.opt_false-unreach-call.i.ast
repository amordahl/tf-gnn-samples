TranslationUnitDecl 0x5603791f2e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5603791f36d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5603791f33b0 '__int128'
|-TypedefDecl 0x5603791f3748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5603791f33d0 'unsigned __int128'
|-TypedefDecl 0x5603791f3a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5603791f3820 'struct __NSConstantString_tag'
|   `-Record 0x5603791f37a0 '__NSConstantString_tag'
|-TypedefDecl 0x5603791f3af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5603791f3ab0 'char *'
|   `-BuiltinType 0x5603791f2eb0 'char'
|-TypedefDecl 0x560379232650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5603791f3d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5603791f3bd0 'struct __va_list_tag'
|     `-Record 0x5603791f3b50 '__va_list_tag'
|-FunctionDecl 0x560379232790 <./test/mix004_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5603792326c0 <col:31> col:34 'int'
|-FunctionDecl 0x560379232958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560379232a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560379232bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560379232b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560379232df8 <col:40, col:99>
|   |-IfStmt 0x560379232dc8 <col:42, col:88>
|   | |-UnaryOperator 0x560379232ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560379232c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560379232c70 <col:47> 'int' lvalue ParmVar 0x560379232b38 'expression' 'int'
|   | `-CompoundStmt 0x560379232db0 <col:59, col:88>
|   |   `-LabelStmt 0x560379232d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560379232d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560379232d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560379232cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x560379232a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560379232de0 <col:89>
|   `-ReturnStmt 0x560379232de8 <col:91>
|-FunctionDecl 0x560379232e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560379232f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560379233280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560379232fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560379233038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5603792330b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560379233138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560379233340 <line:10:22>
|-FunctionDecl 0x560379259390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5603792333b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560379233430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5603792334b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560379233530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560379259450 <line:13:22>
|-FunctionDecl 0x560379259700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5603792594c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560379259540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5603792595c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5603792597b8 <line:15:22>
|-TypedefDecl 0x560379259828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5603791f2f70 'unsigned char'
|-TypedefDecl 0x560379259898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5603791f2f90 'unsigned short'
|-TypedefDecl 0x560379259908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5603791f2fb0 'unsigned int'
|-TypedefDecl 0x560379259978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x5603792599e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5603791f2ed0 'signed char'
|-TypedefDecl 0x560379259a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5603791f2f70 'unsigned char'
|-TypedefDecl 0x560379259ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5603791f2ef0 'short'
|-TypedefDecl 0x560379259b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5603791f2f90 'unsigned short'
|-TypedefDecl 0x560379259ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5603791f2f10 'int'
|-TypedefDecl 0x560379259c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5603791f2fb0 'unsigned int'
|-TypedefDecl 0x560379259c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x560379259cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x560379259d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x560379259dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x560379259e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x560379259eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5603791f2fb0 'unsigned int'
|-TypedefDecl 0x560379259f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5603791f2fb0 'unsigned int'
|-TypedefDecl 0x560379259f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x56037925a008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x56037925a078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5603791f2fb0 'unsigned int'
|-TypedefDecl 0x56037925a0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x56037925a158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925a1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925a238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5603791f2f10 'int'
|-RecordDecl 0x56037925a290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56037925a408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56037925a4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56037925a460 'struct __fsid_t' sugar
|   `-RecordType 0x56037925a310 '__fsid_t'
|     `-Record 0x56037925a290 ''
|-TypedefDecl 0x56037925a548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925a5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x56037925a628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x56037925a698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5603791f2fb0 'unsigned int'
|-TypedefDecl 0x56037925a708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925a778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5603791f2fb0 'unsigned int'
|-TypedefDecl 0x56037925a7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925a858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5603791f2f10 'int'
|-TypedefDecl 0x56037925a8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5603791f2f10 'int'
|-TypedefDecl 0x56037925a938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5603791f2f10 'int'
|-TypedefDecl 0x56037925a9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5603791f3630 'void *'
|   `-BuiltinType 0x5603791f2e70 'void'
|-TypedefDecl 0x56037925aa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925aa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925aaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925ab68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x56037925abd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x56037925ac48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x56037925acb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x56037925ad28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925ad98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925ae08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925ae78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x56037925af08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56037925aed0 '__off64_t' sugar
|   |-Typedef 0x56037925a1c8 '__off64_t'
|   `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925b000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56037925afc0 '__quad_t *'
|   `-TypedefType 0x56037925af60 '__quad_t' sugar
|     |-Typedef 0x560379259d68 '__quad_t'
|     `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925b070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5603791f3ab0 'char *'
|   `-BuiltinType 0x5603791f2eb0 'char'
|-TypedefDecl 0x56037925b0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x56037925b150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5603791f2fb0 'unsigned int'
|-FunctionDecl 0x56037925b298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56037925b1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56037925c5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56037925c5d8 <line:72:3, col:34>
|     `-CallExpr 0x56037925c598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56037925c580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56037925c510 <col:10> '<builtin fn type>' Function 0x56037925c380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56037925c5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56037925c530 <col:29> 'unsigned int' lvalue ParmVar 0x56037925b1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56037925c380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56037925c420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56037925c490 <col:10> Implicit
| `-ConstAttr 0x56037925c4e8 <col:10> Implicit
|-FunctionDecl 0x56037925c740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56037925c638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56037925ca58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56037925ca48 <line:77:3, col:34>
|     `-CallExpr 0x56037925ca08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56037925c9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56037925c978 <col:10> '<builtin fn type>' Function 0x56037925c7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56037925ca30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56037925c998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56037925c638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56037925c7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56037925c888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56037925c8f8 <col:10> Implicit
| `-ConstAttr 0x56037925c950 <col:10> Implicit
|-TypedefDecl 0x56037925ca88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-TypedefDecl 0x56037925cb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56037925cae0 '__time_t' sugar
|   |-Typedef 0x56037925a708 '__time_t'
|   `-BuiltinType 0x5603791f2f30 'long'
|-RecordDecl 0x56037925cb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56037925cc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56037925ccb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56037925cd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56037925cd10 '__pid_t' sugar
|   |-Typedef 0x56037925a238 '__pid_t'
|   `-BuiltinType 0x5603791f2f10 'int'
|-RecordDecl 0x56037925cda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56037925ce60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56037925ceb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56037925cf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56037925cfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-RecordDecl 0x56037925d030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56037925d2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56037925e3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56037925d310 'struct cpu_set_t' sugar
|   `-RecordType 0x56037925d0b0 'cpu_set_t'
|     `-Record 0x56037925d030 ''
|-FunctionDecl 0x56037925e678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56037925e448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56037925e550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56037925e728 <line:107:19>
|-FunctionDecl 0x56037925e900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56037925e790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56037925e9a8 <col:69>
|-FunctionDecl 0x56037925eb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56037925ea10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56037925ebc8 <col:64>
|-FunctionDecl 0x56037925ee88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56037925ec30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56037925ed68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56037925ef38 <line:113:22>
|-FunctionDecl 0x56037925f1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56037925efa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56037925f098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56037925f268 <col:88>
|-FunctionDecl 0x56037925f588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56037925f2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56037925f3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56037925f440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56037925f640 <col:62>
|-FunctionDecl 0x56037925f7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56037925f6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56037925f860 <col:63>
|-FunctionDecl 0x56037925f988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56037925fa28 <col:47>
|-FunctionDecl 0x56037925fb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56037925fa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56037925fbd8 <col:69>
|-FunctionDecl 0x56037925fce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56037925fc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56037925fd88 <col:69>
|-FunctionDecl 0x560379260048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56037925fdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56037925ff28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5603792600f8 <col:88>
|-TypedefDecl 0x560379260188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560379260150 '__clock_t' sugar
|   |-Typedef 0x56037925a548 '__clock_t'
|   `-BuiltinType 0x5603791f2f30 'long'
|-TypedefDecl 0x560379260218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5603792601e0 '__clockid_t' sugar
|   |-Typedef 0x56037925a938 '__clockid_t'
|   `-BuiltinType 0x5603791f2f10 'int'
|-TypedefDecl 0x5603792602a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560379260270 '__timer_t' sugar
|   |-Typedef 0x56037925a9a8 '__timer_t'
|   `-PointerType 0x5603791f3630 'void *'
|     `-BuiltinType 0x5603791f2e70 'void'
|-RecordDecl 0x560379260300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5603792603d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560379260440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5603792604a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560379260510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560379260578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5603792605e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560379260648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5603792606b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560379260718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560379260780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5603792607e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560379260838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x560379260908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560379260978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560379260a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560379260bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560379260c90 <col:45>
|-FunctionDecl 0x560379260e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560379260d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560379260f18 <col:54>
|-FunctionDecl 0x560379261118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560379260f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560379260ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5603792611c8 <line:157:22>
| `-ConstAttr 0x560379261220 <col:63>
|-FunctionDecl 0x560379262050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560379261318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5603792620f8 <col:56>
|-FunctionDecl 0x5603792624a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560379262168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5603792621e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560379262260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560379262358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560379262560 <col:54>
|-RecordDecl 0x5603792625b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x560379262668 parent 0x5603791f2e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5603792628c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560379262968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5603792629d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560379262a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560379262b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560379262c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560379262bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x560379262b80 'struct __locale_struct' sugar
|     `-RecordType 0x560379262640 'struct __locale_struct'
|       `-Record 0x5603792625b8 '__locale_struct'
|-TypedefDecl 0x560379262cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560379262cc0 '__locale_t' sugar
|   |-Typedef 0x560379262c48 '__locale_t'
|   `-PointerType 0x560379262bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x560379262b80 'struct __locale_struct' sugar
|       `-RecordType 0x560379262640 'struct __locale_struct'
|         `-Record 0x5603792625b8 '__locale_struct'
|-FunctionDecl 0x560379264110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560379262d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560379262de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560379262e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560379262ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560379262f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5603792641d8 <col:40>
|-FunctionDecl 0x5603792643c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5603792642a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560379264470 <col:66>
|-FunctionDecl 0x560379264580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5603792644d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560379264628 <col:69>
|-FunctionDecl 0x560379264858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560379264690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560379264720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560379264908 <col:52>
|-FunctionDecl 0x560379264ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560379264970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560379264a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560379264b60 <col:55>
|-FunctionDecl 0x560379264cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560379264be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560379264da0 <col:62>
|-FunctionDecl 0x560379264f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560379264e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560379264fc0 <col:60>
|-FunctionDecl 0x5603792652b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560379265118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560379265198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560379265368 <col:44>
|-FunctionDecl 0x560379265578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5603792653d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560379265450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560379265628 <col:49>
|-VarDecl 0x560379265728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5603792657a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560379265828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5603792658f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560379265a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560379265ac0 <col:42>
|-VarDecl 0x560379265b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560379265bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560379265d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560379265c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560379265de0 <col:57>
|-FunctionDecl 0x560379265ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560379265e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560379265f98 <col:56>
|-FunctionDecl 0x5603792660d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560379266018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560379266178 <col:59>
|-FunctionDecl 0x560379266280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5603792661e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560379266328 <col:48>
| `-ConstAttr 0x560379266380 <col:89>
|-FunctionDecl 0x5603792665e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560379266438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5603792664c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560379266848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5603792666d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560379266768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5603792668f8 <col:88>
|-FunctionDecl 0x560379266a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560379266960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5603792669f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560379266b40 <col:88>
|-FunctionDecl 0x560379266d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560379266ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560379266c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560379266e08 <line:208:22>
|-FunctionDecl 0x560379267178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560379266e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560379266ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560379266f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560379267010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560379267478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560379267278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560379267350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560379267528 <col:85>
|-FunctionDecl 0x560379267918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560379267590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5603792676c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5603792677d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5603792679d0 <col:52>
|-FunctionDecl 0x560379267b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560379267a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560379267bf0 <col:61>
|-FunctionDecl 0x5603792680f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560379267c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560379267cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560379267e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560379267ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5603792681b0 <col:62>
|-FunctionDecl 0x5603792683c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560379268218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5603792682a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560379268478 <line:221:22>
|-FunctionDecl 0x560379268578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5603792684e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560379268620 <col:65>
|-TypedefDecl 0x560379268690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5603791f2fd0 'unsigned long'
|-RecordDecl 0x5603792686e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x560379268830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560379268898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560379268948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5603792688f0 'union pthread_attr_t' sugar
|   `-RecordType 0x560379268770 'union pthread_attr_t'
|     `-Record 0x5603792686e8 'pthread_attr_t'
|-RecordDecl 0x5603792689a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560379268b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560379268b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560379268c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560379268be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560379268a20 'struct __pthread_internal_list'
|     `-Record 0x5603792689a0 '__pthread_internal_list'
|-RecordDecl 0x560379268cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x560379268d58 parent 0x5603791f2e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560379268e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560379268e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560379268f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560379268f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560379268fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560379269038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56037926d110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56037926d1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56037926d2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56037926d318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56037926d4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56037926d440 'union pthread_mutex_t' sugar
|   `-RecordType 0x560379268d30 'pthread_mutex_t'
|     `-Record 0x560379268cb0 ''
|-RecordDecl 0x56037926d510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56037926d650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56037926d6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56037926d770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56037926d710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56037926d590 'pthread_mutexattr_t'
|     `-Record 0x56037926d510 ''
|-RecordDecl 0x56037926d7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56037926d888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56037926d950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56037926d9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56037926da20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56037926da88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56037926daf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56037926db58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56037926dbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56037926dc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56037926dce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/mix004_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/mix004_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56037926ddd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56037926de38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56037926df70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56037926df10 'union pthread_cond_t' sugar
|   `-RecordType 0x56037926d860 'pthread_cond_t'
|     `-Record 0x56037926d7e0 ''
|-RecordDecl 0x56037926dfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56037926f130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56037926f198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56037926f250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56037926f1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56037926e060 'pthread_condattr_t'
|     `-Record 0x56037926dfe0 ''
|-TypedefDecl 0x56037926f2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5603791f2fb0 'unsigned int'
|-TypedefDecl 0x56037926f348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5603791f2f10 'int'
|-RecordDecl 0x56037926f3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56037926f448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56037926f510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56037926f578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56037926f5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56037926f648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56037926f6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56037926f718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56037926f780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56037926f7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56037926f850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56037926f8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56037926f920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56037926f9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/mix004_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix004_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56037926fa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56037926fae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56037926fc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56037926fbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56037926f420 'pthread_rwlock_t'
|     `-Record 0x56037926f3a0 ''
|-RecordDecl 0x56037926fca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56037926fde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56037926fe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56037926ff00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56037926fea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56037926fd20 'pthread_rwlockattr_t'
|     `-Record 0x56037926fca0 ''
|-TypedefDecl 0x56037926ff88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5603791f2f14 'volatile int' volatile
|   `-BuiltinType 0x5603791f2f10 'int'
|-RecordDecl 0x56037926ffe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x560379271140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5603792711a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560379271260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560379271200 'union pthread_barrier_t' sugar
|   `-RecordType 0x560379270060 'pthread_barrier_t'
|     `-Record 0x56037926ffe0 ''
|-RecordDecl 0x5603792712d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5603792713d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560379271438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5603792714f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560379271490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560379271350 'pthread_barrierattr_t'
|     `-Record 0x5603792712d0 ''
|-TypedefDecl 0x560379271608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5603792715a0 'long [8]' 8 
|   `-BuiltinType 0x5603791f2f30 'long'
|-EnumDecl 0x560379271660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x560379271728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560379271778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5603792717c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x560379271898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5603792718e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560379271938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560379271988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560379271a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5603792719f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5603792719d8 <col:26> 'int' EnumConstant 0x560379271898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560379271a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560379271a80 <col:29> 'int'
| |   `-DeclRefExpr 0x560379271a60 <col:29> 'int' EnumConstant 0x5603792718e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560379271b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560379271b08 <col:30> 'int'
| |   `-DeclRefExpr 0x560379271ae8 <col:30> 'int' EnumConstant 0x560379271938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560379271ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560379271b90 <col:27> 'int'
|     `-DeclRefExpr 0x560379271b70 <col:27> 'int' EnumConstant 0x560379271a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560379271bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x560379271cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560379271d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560379271d38 <col:30> 'int'
| |   `-DeclRefExpr 0x560379271d18 <col:30> 'int' EnumConstant 0x560379271cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560379271da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560379271e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560379271e10 <col:29> 'int'
|     `-DeclRefExpr 0x560379271df0 <col:29> 'int' EnumConstant 0x560379271da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560379271e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x560379271f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560379271f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560379271fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560379272038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x560379272150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5603792721a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5603792721f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560379272278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560379272260 <col:31> 'int'
|     `-DeclRefExpr 0x560379272240 <col:31> 'int' EnumConstant 0x560379272150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5603792722c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x560379272398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5603792723e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560379272438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x560379272508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560379272558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5603792725a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x560379272678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5603792726c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560379272718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560379272958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5603792729c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560379272a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560379272b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560379272b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x560379272c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560379272cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560379272d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x560379272dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560379272e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560379273488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560379272f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560379273030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560379273270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5603792732f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560379273548 <col:47>
| |-NonNullAttr 0x5603792735a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5603792735d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x560379273700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560379273630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560379273958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5603792737b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560379273838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560379273b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560379273a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560379273bd0 <col:60>
|-FunctionDecl 0x560379273d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560379273dc0 <col:54>
| `-ConstAttr 0x560379273e18 <col:95>
|-FunctionDecl 0x560379273fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560379273e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560379273ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560379274098 <line:394:19>
| `-ConstAttr 0x5603792740f0 <col:60>
|-FunctionDecl 0x560379275b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5603792759d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560379275bb0 <col:71>
| `-NonNullAttr 0x560379275c08 <col:112, col:126> 1
|-FunctionDecl 0x560379275d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560379275c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560379275db8 <line:397:22>
| `-NonNullAttr 0x560379275e10 <col:63, col:77> 1
|-FunctionDecl 0x560379276038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560379275e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560379275ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5603792760e8 <line:400:22>
| `-NonNullAttr 0x560379276140 <col:63, col:80> 1 2
|-FunctionDecl 0x560379276348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560379276188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560379276208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5603792763f8 <line:403:22>
| `-NonNullAttr 0x560379276450 <col:63, col:77> 1
|-FunctionDecl 0x5603792766a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560379276498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560379276540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560379276758 <line:406:22>
| `-NonNullAttr 0x5603792767b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5603792779e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5603792767f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560379276870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560379277a98 <line:409:22>
| `-NonNullAttr 0x560379277af0 <col:63, col:77> 1
|-FunctionDecl 0x560379277d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560379277b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560379277bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560379277dd8 <line:412:22>
| `-NonNullAttr 0x560379277e30 <col:63, col:80> 1 2
|-FunctionDecl 0x560379278068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560379277e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560379277f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560379278118 <col:37>
| `-NonNullAttr 0x560379278170 <col:78, col:95> 1 2
|-FunctionDecl 0x560379278358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5603792781b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560379278238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560379278408 <line:418:22>
| `-NonNullAttr 0x560379278460 <col:63, col:80> 1 2
|-FunctionDecl 0x5603792785e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5603792784a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560379278528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560379278698 <line:420:22>
| `-NonNullAttr 0x5603792786f0 <col:63, col:77> 1
|-FunctionDecl 0x560379278898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560379278738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5603792787b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560379278948 <line:423:22>
| `-NonNullAttr 0x5603792789c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560379278b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560379278a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560379278a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560379278bf8 <line:426:22>
| `-NonNullAttr 0x560379278c50 <col:63, col:77> 1
|-FunctionDecl 0x560379278df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560379278c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560379278d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560379278ea8 <line:429:22>
| `-NonNullAttr 0x560379278f00 <col:63, col:80> 1 2
|-FunctionDecl 0x560379279088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560379278f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560379278fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560379279138 <line:431:22>
| `-NonNullAttr 0x560379279190 <col:63, col:77> 1
|-FunctionDecl 0x5603792793b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5603792791d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560379279258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560379279468 <line:434:22>
| |-NonNullAttr 0x5603792794c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5603792794f8 <col:100> "" ""
|-FunctionDecl 0x560379279708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560379279548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5603792795c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5603792797b8 <line:437:22>
| |-NonNullAttr 0x560379279810 <col:63, col:77> 1
| `-DeprecatedAttr 0x560379279848 <col:97> "" ""
|-FunctionDecl 0x560379279a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560379279898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560379279910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560379279af8 <line:440:22>
| `-NonNullAttr 0x560379279b50 <col:63, col:80> 1 2
|-FunctionDecl 0x560379279cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560379279b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560379279c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560379279d80 <line:443:22>
| `-NonNullAttr 0x560379279dd8 <col:63, col:77> 1
|-FunctionDecl 0x56037927a0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560379279e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560379279ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560379279f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56037927a180 <line:447:22>
| `-NonNullAttr 0x56037927a1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56037927a488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56037927a230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56037927a2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56037927a328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56037927a540 <col:43>
| `-NonNullAttr 0x56037927a598 <col:84, col:98> 1
|-FunctionDecl 0x56037927a858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56037927a5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56037927a668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56037927a6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56037927a910 <line:452:22>
| `-NonNullAttr 0x56037927a968 <col:63, col:77> 3
|-FunctionDecl 0x56037927ac78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56037927a9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56037927aa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56037927aaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56037927ad30 <line:456:22>
| `-NonNullAttr 0x56037927ad88 <col:63, col:80> 2 3
|-FunctionDecl 0x56037927af78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56037927add8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56037927ae58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56037927b028 <line:458:22>
|-FunctionDecl 0x56037927b3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56037927b0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56037927b290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56037927b4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56037927b650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56037927b530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56037927b5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56037927b838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56037927b718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56037927b798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56037927b9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56037927b8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56037927bb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56037927bbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56037927bc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56037927bd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56037927bdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56037927bfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix004_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56037927c098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56037927c150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56037927c0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56037927bc50 '__pthread_unwind_buf_t'
| |   `-Record 0x56037927bbd0 ''
| `-AlignedAttr 0x56037927c1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56037927c220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56037927c380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56037927c3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56037927c450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56037927c4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56037927c6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56037927c5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56037927c808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56037927c778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56037927ca00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56037927c8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56037927caa8 <line:487:22>
|-RecordDecl 0x56037927cb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56037927ce18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56037927cc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56037927ccf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56037927cec8 <col:86>
| `-ReturnsTwiceAttr 0x56037927cf20 <col:12> Implicit
|-FunctionDecl 0x56037927d248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56037927cff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56037927d100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56037927d2f8 <line:493:22>
| `-NonNullAttr 0x56037927d350 <col:63, col:77> 1
|-FunctionDecl 0x56037927d4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56037927d398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56037927d570 <line:495:22>
| `-NonNullAttr 0x56037927d5c8 <col:63, col:77> 1
|-FunctionDecl 0x56037927d6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56037927d618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56037927d778 <line:497:22>
| `-NonNullAttr 0x56037927d7d0 <col:52, col:66> 1
|-FunctionDecl 0x56037927d8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56037927d818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56037927d978 <line:499:22>
| `-NonNullAttr 0x56037927d9d0 <col:52, col:66> 1
|-FunctionDecl 0x56037927ec28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56037927ea38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56037927eac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56037927ecd8 <col:36>
| `-NonNullAttr 0x56037927ed30 <col:66, col:83> 1 2
|-FunctionDecl 0x56037927ee30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56037927ed78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56037927eed8 <line:504:22>
| `-NonNullAttr 0x56037927ef30 <col:52, col:66> 1
|-FunctionDecl 0x56037927f1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56037927efe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56037927f060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56037927f278 <line:508:22>
| `-NonNullAttr 0x56037927f2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56037927f598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56037927f318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56037927f398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56037927f418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56037927f650 <line:512:22>
| `-NonNullAttr 0x56037927f6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56037927f7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56037927f6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56037927f858 <line:514:22>
| `-NonNullAttr 0x56037927f8b0 <col:63, col:77> 1
|-FunctionDecl 0x56037927fad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56037927f960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56037927fb80 <line:516:22>
| `-NonNullAttr 0x56037927fbd8 <col:63, col:77> 1
|-FunctionDecl 0x56037927fce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56037927fc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56037927fd88 <line:518:22>
| `-NonNullAttr 0x56037927fde0 <col:63, col:77> 1
|-FunctionDecl 0x560379280008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56037927fe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56037927fea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5603792800b8 <line:522:22>
| `-NonNullAttr 0x560379280110 <col:63, col:80> 1 2
|-FunctionDecl 0x560379280318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560379280158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5603792801d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5603792803c8 <line:525:22>
| `-NonNullAttr 0x560379280420 <col:63, col:77> 1
|-FunctionDecl 0x5603792805c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560379280468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5603792804e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560379280678 <line:528:22>
| `-NonNullAttr 0x5603792806d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560379280858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560379280718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560379280798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560379280908 <line:530:22>
| `-NonNullAttr 0x560379280960 <col:63, col:77> 1
|-FunctionDecl 0x560379280b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5603792809a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560379280a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560379280bd0 <line:534:22>
| `-NonNullAttr 0x560379280c28 <col:63, col:80> 1 2
|-FunctionDecl 0x560379280db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560379280c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560379280cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560379280e68 <line:537:22>
| `-NonNullAttr 0x560379280ec0 <col:63, col:77> 1
|-FunctionDecl 0x560379281068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560379280f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560379280f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560379281118 <line:541:22>
| `-NonNullAttr 0x560379281170 <col:63, col:80> 1 2
|-FunctionDecl 0x5603792812f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5603792811b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560379281238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5603792813a8 <line:544:22>
| `-NonNullAttr 0x560379281400 <col:63, col:77> 1
|-FunctionDecl 0x5603792815e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560379281448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5603792814c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560379281698 <line:547:22>
| `-NonNullAttr 0x5603792816f0 <col:63, col:80> 1 2
|-FunctionDecl 0x560379281878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560379281738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5603792817b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560379281928 <line:550:22>
| `-NonNullAttr 0x560379281980 <col:63, col:77> 1
|-FunctionDecl 0x560379282cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560379282aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560379282bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560379282da8 <col:29>
| `-NonNullAttr 0x560379282e00 <col:70, col:84> 1
|-FunctionDecl 0x560379282f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560379282e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560379283020 <line:555:22>
| `-NonNullAttr 0x560379283078 <col:63, col:77> 1
|-FunctionDecl 0x560379283180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5603792830c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560379283228 <line:557:22>
| `-NonNullAttr 0x560379283280 <col:52, col:66> 1
|-FunctionDecl 0x560379283380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5603792832c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560379283428 <line:559:19>
| `-NonNullAttr 0x560379283480 <col:49, col:63> 1
|-FunctionDecl 0x5603792836b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5603792834c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560379283558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560379283768 <col:39>
| `-NonNullAttr 0x5603792837c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5603792838c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560379283808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560379283968 <line:564:22>
| `-NonNullAttr 0x5603792839c0 <col:52, col:66> 1
|-FunctionDecl 0x560379283b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560379283a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560379283bd0 <line:566:22>
| `-NonNullAttr 0x560379283c28 <col:52, col:66> 1
|-FunctionDecl 0x560379283de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560379283c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560379283d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560379283e98 <col:39>
| `-NonNullAttr 0x560379283ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x560379283ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560379283f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560379284098 <line:571:22>
| `-NonNullAttr 0x5603792840f0 <col:52, col:66> 1
|-FunctionDecl 0x5603792842d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5603792841a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560379284380 <line:573:22>
| `-NonNullAttr 0x5603792843d8 <col:63, col:77> 1
|-FunctionDecl 0x5603792844e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560379284428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560379284588 <line:575:22>
| `-NonNullAttr 0x5603792845e0 <col:63, col:77> 1
|-FunctionDecl 0x560379284808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560379284628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5603792846a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5603792848b8 <line:579:22>
| `-NonNullAttr 0x560379284910 <col:63, col:80> 1 2
|-FunctionDecl 0x560379284b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560379284958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5603792849d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560379284be8 <line:582:22>
| `-NonNullAttr 0x560379284c40 <col:63, col:77> 1
|-FunctionDecl 0x560379284de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560379284c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560379284d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560379284e98 <line:586:22>
| `-NonNullAttr 0x560379284ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x560379285078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560379284f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560379284fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560379285128 <col:36>
| `-NonNullAttr 0x560379285180 <col:77, col:91> 1
|-FunctionDecl 0x5603792854b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560379285260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560379285370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560379285568 <line:591:22>
| `-NonNullAttr 0x5603792855c0 <col:63, col:77> 1
|-FunctionDecl 0x560379285738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560379285608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5603792857e0 <line:593:22>
| `-NonNullAttr 0x560379285838 <col:63, col:77> 1
|-FunctionDecl 0x560379285940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560379285888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5603792859e8 <line:595:22>
| `-NonNullAttr 0x560379285a40 <col:52, col:66> 1
|-FunctionDecl 0x560379285b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560379285aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560379285c00 <line:597:22>
| `-NonNullAttr 0x560379285c58 <col:52, col:66> 1
|-FunctionDecl 0x560379285e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560379285ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560379285d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560379285f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x560379286268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560379285fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560379286030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5603792860c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560379286320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x560379286538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560379286400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5603792865e0 <line:606:22>
| `-NonNullAttr 0x560379286638 <col:63, col:77> 1
|-FunctionDecl 0x560379286740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560379286688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5603792867e8 <line:608:22>
| `-NonNullAttr 0x560379286840 <col:63, col:77> 1
|-FunctionDecl 0x560379286aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560379286888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560379286908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560379286b50 <line:612:22>
| `-NonNullAttr 0x560379286ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x560379286db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560379286bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560379286c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560379286e68 <col:37>
| `-NonNullAttr 0x560379286ec0 <col:78, col:92> 1
|-FunctionDecl 0x5603792870d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560379286f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560379286fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560379287188 <line:618:22>
| `-NonNullAttr 0x5603792871e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5603792873a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560379287228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5603792872a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560379287458 <line:621:22>
| `-NonNullAttr 0x5603792874b0 <col:63, col:77> 1
|-FunctionDecl 0x560379287758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560379287590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560379287610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560379287808 <line:623:22>
| `-NonNullAttr 0x560379287860 <col:63, col:77> 1
|-FunctionDecl 0x5603792879d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5603792878a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560379287ab0 <line:625:22>
| `-NonNullAttr 0x560379287b08 <col:63, col:77> 1
|-FunctionDecl 0x560379287c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560379287b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560379287cb8 <line:627:22>
| `-NonNullAttr 0x560379287d10 <col:52, col:66> 1
|-FunctionDecl 0x560379287e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560379287d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560379287eb8 <line:629:22>
| `-NonNullAttr 0x560379287f10 <col:52, col:66> 1
|-FunctionDecl 0x560379288010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560379287f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5603792880b8 <line:631:22>
| `-NonNullAttr 0x560379288110 <col:52, col:66> 1
|-FunctionDecl 0x5603792884e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5603792881f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560379288300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560379288380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5603792885a0 <line:635:22>
| `-NonNullAttr 0x5603792885f8 <col:63, col:77> 1
|-FunctionDecl 0x560379288778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560379288648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560379288820 <line:637:22>
| `-NonNullAttr 0x560379288878 <col:63, col:77> 1
|-FunctionDecl 0x560379288980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5603792888c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560379288a28 <line:639:22>
| `-NonNullAttr 0x560379288a80 <col:52, col:66> 1
|-FunctionDecl 0x560379289c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560379289b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560379289d30 <line:641:22>
| `-NonNullAttr 0x560379289d88 <col:63, col:77> 1
|-FunctionDecl 0x560379289e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560379289dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560379289f38 <line:643:22>
| `-NonNullAttr 0x560379289f90 <col:63, col:77> 1
|-FunctionDecl 0x56037928a1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560379289fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56037928a058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56037928a268 <line:647:22>
| `-NonNullAttr 0x56037928a2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56037928a4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56037928a308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56037928a388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56037928a578 <line:650:22>
| `-NonNullAttr 0x56037928a5d0 <col:63, col:77> 1
|-FunctionDecl 0x56037928a918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56037928a6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56037928a7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56037928a9c8 <line:653:22>
| `-NonNullAttr 0x56037928aa20 <col:63, col:77> 1
|-FunctionDecl 0x56037928ab88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56037928aa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56037928ac30 <col:69>
|-FunctionDecl 0x56037928ada8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56037928ac98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56037928ae50 <col:72>
|-FunctionDecl 0x56037928b088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56037928aeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56037928af68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56037928b138 <col:44>
|-FunctionDecl 0x56037928b358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56037928b1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56037928b218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56037928b408 <line:660:22>
| `-NonNullAttr 0x56037928b460 <col:63, col:77> 2
|-FunctionDecl 0x56037928b8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56037928b540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56037928b650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56037928b760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56037928b960 <col:47>
|-FunctionDecl 0x56037928baf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56037928b9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56037928bc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56037928bbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56037928bda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56037928bd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56037928bef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56037928be60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56037928bfc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56037928c080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56037928c140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56037928c1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56037928c278 prev 0x56037928c1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56037928c2e0 <col:24> 'int' 0
|-VarDecl 0x56037928c318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56037928c398 prev 0x56037928c318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56037928c400 <col:27> 'int' 0
|-VarDecl 0x56037928c438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56037928c4b8 prev 0x56037928c438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56037928c520 <col:27> 'int' 0
|-VarDecl 0x56037928c558 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56037928c5d8 prev 0x56037928c558 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56037928c640 <col:27> 'int' 0
|-VarDecl 0x56037928c678 <line:680:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x56037928c6f8 prev 0x56037928c678 <line:681:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x56037928c760 <col:27> 'int' 0
|-VarDecl 0x56037928c798 <line:682:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56037928c818 prev 0x56037928c798 <line:683:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56037928c880 <col:27> 'int' 0
|-VarDecl 0x56037928c8b8 <line:684:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x56037928c938 prev 0x56037928c8b8 <line:685:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x56037928c9a0 <col:27> 'int' 0
|-VarDecl 0x56037928c9d8 <line:686:1, col:5> col:5 used a 'int'
|-VarDecl 0x56037928ca58 prev 0x56037928c9d8 <line:687:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56037928cac0 <col:9> 'int' 0
|-VarDecl 0x56037928cb00 <line:688:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56037928cb78 <line:689:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56037928cbf8 <line:690:1, col:5> col:5 used x 'int'
|-VarDecl 0x56037928cc78 prev 0x56037928cbf8 <line:691:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56037928cce0 <col:9> 'int' 0
|-VarDecl 0x56037928cd18 <line:692:1, col:5> col:5 used y 'int'
|-VarDecl 0x56037928cd98 prev 0x56037928cd18 <line:693:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56037928ce00 <col:9> 'int' 0
|-VarDecl 0x56037928ce38 <line:694:1, col:5> col:5 used z 'int'
|-VarDecl 0x56037928ceb8 prev 0x56037928ce38 <line:695:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56037928cf20 <col:9> 'int' 0
|-VarDecl 0x56037928cf50 <line:696:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x56037928cfd0 <line:697:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x56037928d048 <line:698:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x56037928d0c0 <line:699:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x56037928d138 <line:700:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x56037928d1b0 <line:701:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x56037928d228 <line:702:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x56037928d2a0 <line:703:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x56037928d318 <line:704:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x56037928d390 <line:705:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x56037928d408 <line:706:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x56037928d480 <line:707:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x56037928d4f8 <line:708:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x56037928d578 <line:709:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x56037928d5f8 <line:710:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x56037928d670 <line:711:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x56037928d6f0 <line:712:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x56037928d768 <line:713:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x56037928d7e0 <line:714:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56037928d858 <line:715:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56037928d970 prev 0x56037928baf0 <line:716:1, line:730:1> line:716:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56037928d8d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56037928df68 <line:717:1, line:730:1>
|   |-CallExpr 0x56037928da88 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56037928da70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928da18 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56037928db10 <line:719:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56037928daa8 <col:3> 'int' lvalue Var 0x56037928ca58 'a' 'int'
|   | `-IntegerLiteral 0x56037928dac8 <col:7> 'int' 1
|   |-CallExpr 0x56037928db68 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56037928db50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928db30 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56037928dbc0 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56037928dba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928db88 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56037928dc38 <line:722:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56037928dbe0 <col:3> 'int' lvalue Var 0x56037928c398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56037928dc20 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56037928dc00 <col:25> 'int' lvalue Var 0x56037928cc78 'x' 'int'
|   |-CallExpr 0x56037928dc90 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56037928dc78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928dc58 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56037928dce8 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56037928dcd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928dcb0 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56037928dd40 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56037928dd28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928dd08 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56037928dd98 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56037928dd80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928dd60 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56037928de50 <line:727:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56037928ddb8 <col:3> 'int' lvalue Var 0x56037928c278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56037928de30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56037928de18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56037928ddd8 <col:22> 'int' lvalue Var 0x56037928c278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56037928ddf8 <col:41> 'int' 1
|   |-CallExpr 0x56037928dea8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56037928de90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928de70 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56037928df58 <line:729:3, col:36>
|     `-CallExpr 0x56037928df38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56037928df20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56037928dec8 <col:10> 'void *(void)' Function 0x560379232958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56037928e088 prev 0x56037928bc48 <line:731:1, line:745:1> line:731:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56037928dff0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56037928e5e8 <line:732:1, line:745:1>
|   |-CallExpr 0x56037928e168 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56037928e150 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e130 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56037928e1c8 <line:734:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56037928e188 <col:3> 'int' lvalue Var 0x56037928cc78 'x' 'int'
|   | `-IntegerLiteral 0x56037928e1a8 <col:7> 'int' 1
|   |-CallExpr 0x56037928e220 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56037928e208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e1e8 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56037928e278 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56037928e260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e240 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56037928e2f0 <line:737:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56037928e298 <col:3> 'int' lvalue Var 0x56037928c4b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56037928e2d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56037928e2b8 <col:25> 'int' lvalue Var 0x56037928cd98 'y' 'int'
|   |-CallExpr 0x56037928e348 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56037928e330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e310 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56037928e3a0 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56037928e388 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e368 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56037928e3f8 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56037928e3e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e3c0 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56037928e450 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56037928e438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e418 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56037928e508 <line:742:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56037928e470 <col:3> 'int' lvalue Var 0x56037928c278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56037928e4e8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56037928e4d0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56037928e490 <col:22> 'int' lvalue Var 0x56037928c278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56037928e4b0 <col:41> 'int' 1
|   |-CallExpr 0x56037928e560 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56037928e548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e528 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56037928e5d8 <line:744:3, col:36>
|     `-CallExpr 0x56037928e5b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56037928e5a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56037928e580 <col:10> 'void *(void)' Function 0x560379232958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56037928e708 prev 0x56037928bda0 <line:746:1, line:776:1> line:746:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56037928e670 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560379291738 <line:747:1, line:776:1>
|   |-CallExpr 0x56037928e7e8 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56037928e7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e7b0 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56037928e848 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56037928e808 <col:3> 'int' lvalue Var 0x56037928cd98 'y' 'int'
|   | `-IntegerLiteral 0x56037928e828 <col:7> 'int' 1
|   |-CallExpr 0x56037928e8a0 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56037928e888 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e868 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56037928e8f8 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56037928e8e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e8c0 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56037928e970 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56037928e918 <col:3> 'int' lvalue Var 0x56037928c5d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56037928e958 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56037928e938 <col:25> 'int' lvalue Var 0x56037928cd98 'y' 'int'
|   |-CallExpr 0x56037928e9c8 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56037928e9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e990 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56037928ea20 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56037928ea08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56037928e9e8 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56037928ead0 <line:755:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56037928ea40 <col:3> '_Bool' lvalue Var 0x56037928d7e0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56037928eab8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56037928ea98 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56037928ea80 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56037928ea60 <col:19> 'void *(void)' Function 0x560379232958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56037928eb90 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56037928eaf0 <col:3> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56037928eb78 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56037928eb58 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56037928eb40 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56037928eb20 <col:19> 'void *(void)' Function 0x560379232958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56037928ec08 <line:757:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56037928ebb0 <col:3> '_Bool' lvalue Var 0x56037928cf50 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56037928ebf0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56037928ebd0 <col:21> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56037928ec80 <line:758:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56037928ec28 <col:3> 'int' lvalue Var 0x56037928cfd0 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56037928ec68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56037928ec48 <col:15> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   |-BinaryOperator 0x56037928f0b8 <line:759:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56037928eca0 <col:3> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   | `-ConditionalOperator 0x56037928f088 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56037928eeb0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56037928edd0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56037928ecf8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56037928ece0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56037928ecc0 <col:8> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56037928edb0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56037928ed48 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56037928ed30 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56037928ed10 <col:27> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56037928ed98 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56037928ed80 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56037928ed60 <col:46> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56037928ee90 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56037928ee28 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56037928ee10 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56037928edf0 <col:65> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56037928ee78 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56037928ee60 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56037928ee40 <col:84> '_Bool' lvalue Var 0x56037928d408 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56037928f070 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56037928eed0 <col:101> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   |   `-ParenExpr 0x56037928f050 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56037928f020 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56037928ef90 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56037928ef48 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56037928ef30 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56037928eef0 <col:106> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56037928ef78 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56037928ef60 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56037928ef10 <col:124> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56037928eff0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56037928efb0 <col:141> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56037928f008 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56037928efd0 <col:153> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56037928f5c8 <line:760:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56037928f0d8 <col:3> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x56037928f598 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56037928f568 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56037928f550 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56037928f0f8 <col:15> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56037928f580 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56037928f118 <col:31> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56037928f530 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56037928f500 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56037928f328 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56037928f248 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56037928f170 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56037928f158 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56037928f138 <col:45> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56037928f228 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56037928f1c0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56037928f1a8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56037928f188 <col:64> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56037928f210 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56037928f1f8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56037928f1d8 <col:83> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56037928f308 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56037928f2a0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56037928f288 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56037928f268 <col:102> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56037928f2f0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56037928f2d8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56037928f2b8 <col:121> '_Bool' lvalue Var 0x56037928d408 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56037928f4e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56037928f348 <col:138> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x56037928f4c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56037928f498 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56037928f408 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56037928f3c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56037928f3a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56037928f368 <col:151> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56037928f3f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56037928f3d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56037928f388 <col:169> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56037928f468 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56037928f428 <col:186> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56037928f480 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56037928f448 <col:198> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56037928fad8 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56037928f5e8 <col:3> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x56037928faa8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56037928fa78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56037928fa60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56037928f608 <col:15> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56037928fa90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56037928f628 <col:31> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x56037928fa40 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56037928fa10 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56037928f838 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56037928f758 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56037928f680 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56037928f668 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56037928f648 <col:45> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56037928f738 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56037928f6d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56037928f6b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56037928f698 <col:64> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56037928f720 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56037928f708 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56037928f6e8 <col:83> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56037928f818 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56037928f7b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56037928f798 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56037928f778 <col:102> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56037928f800 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56037928f7e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56037928f7c8 <col:121> '_Bool' lvalue Var 0x56037928d408 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56037928f9f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56037928f858 <col:138> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x56037928f9d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56037928f9a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56037928f918 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56037928f8d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56037928f8b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56037928f878 <col:151> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56037928f900 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56037928f8e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56037928f898 <col:169> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56037928f978 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56037928f938 <col:186> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56037928f990 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56037928f958 <col:198> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560379290098 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56037928faf8 <col:3> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560379290080 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560379290050 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560379290008 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56037928fff0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56037928fb30 <col:20> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560379290038 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560379290020 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56037928fb50 <col:36> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56037928ffd0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56037928ffa0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56037928fd60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56037928fc80 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56037928fba8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56037928fb90 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56037928fb70 <col:55> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56037928fc60 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56037928fbf8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56037928fbe0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56037928fbc0 <col:74> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56037928fc48 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56037928fc30 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56037928fc10 <col:93> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56037928fd40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56037928fcd8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56037928fcc0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56037928fca0 <col:112> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56037928fd28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56037928fd10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56037928fcf0 <col:131> '_Bool' lvalue Var 0x56037928d408 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56037928ff88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56037928ff70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56037928fd80 <col:148> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56037928ff50 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56037928ff20 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56037928fe40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56037928fdf8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56037928fde0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56037928fda0 <col:166> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56037928fe28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56037928fe10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56037928fdc0 <col:184> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56037928fed8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56037928fe90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56037928fe60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56037928ff08 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56037928fef0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56037928feb8 <col:212> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560379290660 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5603792900b8 <col:3> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560379290648 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560379290618 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5603792905d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5603792905b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5603792900d8 <col:20> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560379290600 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5603792905e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5603792900f8 <col:36> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560379290598 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560379290568 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560379290308 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560379290228 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560379290150 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560379290138 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560379290118 <col:55> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560379290208 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5603792901a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560379290188 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560379290168 <col:74> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5603792901f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5603792901d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5603792901b8 <col:93> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5603792902e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560379290280 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560379290268 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560379290248 <col:112> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5603792902d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5603792902b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560379290298 <col:131> '_Bool' lvalue Var 0x56037928d408 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560379290550 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560379290538 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560379290328 <col:148> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560379290518 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5603792904e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5603792903e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5603792903a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560379290388 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560379290348 <col:166> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5603792903d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5603792903b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560379290368 <col:184> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5603792904b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560379290438 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560379290408 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5603792904d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560379290490 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560379290460 <col:219> 'int' 0
|   |-BinaryOperator 0x560379290c38 <line:764:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560379290680 <col:3> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560379290c20 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560379290bf0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560379290ba8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560379290b90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5603792906a0 <col:20> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560379290bd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560379290bc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5603792906c0 <col:36> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x560379290b70 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560379290b40 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5603792908d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5603792907f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560379290718 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560379290700 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5603792906e0 <col:55> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5603792907d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560379290768 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560379290750 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560379290730 <col:74> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5603792907b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5603792907a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560379290780 <col:93> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5603792908b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560379290848 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560379290830 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560379290810 <col:112> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560379290898 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560379290880 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560379290860 <col:131> '_Bool' lvalue Var 0x56037928d408 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560379290af8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560379290ae0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5603792908f0 <col:148> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x560379290ac0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560379290a90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5603792909b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560379290968 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560379290950 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560379290910 <col:166> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560379290998 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560379290980 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560379290930 <col:184> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560379290a48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560379290a00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5603792909d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560379290a78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560379290a60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560379290a28 <col:212> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560379291200 <line:765:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560379290c58 <col:3> '_Bool' lvalue Var 0x56037928d408 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5603792911e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5603792911b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560379291170 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560379291158 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560379290c78 <col:20> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5603792911a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560379291188 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560379290c98 <col:36> '_Bool' lvalue Var 0x56037928d408 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x560379291138 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560379291108 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560379290ea8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560379290dc8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560379290cf0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560379290cd8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560379290cb8 <col:55> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560379290da8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560379290d40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560379290d28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560379290d08 <col:74> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560379290d90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560379290d78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560379290d58 <col:93> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560379290e88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560379290e20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560379290e08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560379290de8 <col:112> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560379290e70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560379290e58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560379290e38 <col:131> '_Bool' lvalue Var 0x56037928d408 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5603792910f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5603792910d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560379290ec8 <col:148> '_Bool' lvalue Var 0x56037928d408 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5603792910b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560379291088 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560379290f88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560379290f40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560379290f28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560379290ee8 <col:166> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560379290f70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560379290f58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560379290f08 <col:184> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560379291058 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560379290fd8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560379290fa8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560379291070 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560379291030 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560379291000 <col:219> 'int' 0
|   |-BinaryOperator 0x560379291278 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560379291220 <col:3> 'int' lvalue Var 0x56037928c6f8 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x560379291260 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560379291240 <col:25> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   |-BinaryOperator 0x5603792913a8 <line:767:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560379291298 <col:3> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   | `-ConditionalOperator 0x560379291378 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560379291330 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560379291318 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5603792912b8 <col:7> '_Bool' lvalue Var 0x56037928cf50 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560379291348 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5603792912d8 <col:25> 'int' lvalue Var 0x56037928cfd0 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560379291360 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5603792912f8 <col:37> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   |-BinaryOperator 0x560379291440 <line:768:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5603792913c8 <col:3> '_Bool' lvalue Var 0x56037928cf50 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560379291418 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5603792913e8 <col:28> 'int' 0
|   |-CallExpr 0x560379291498 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560379291480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379291460 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5603792914f0 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5603792914d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5603792914b8 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560379291548 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560379291530 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379291510 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5603792915a0 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560379291588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379291568 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560379291658 <line:773:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5603792915c0 <col:3> 'int' lvalue Var 0x56037928c278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560379291638 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560379291620 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5603792915e0 <col:22> 'int' lvalue Var 0x56037928c278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560379291600 <col:41> 'int' 1
|   |-CallExpr 0x5603792916b0 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560379291698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379291678 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560379291728 <line:775:3, col:36>
|     `-CallExpr 0x560379291708 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5603792916f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5603792916d0 <col:10> 'void *(void)' Function 0x560379232958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5603792918d8 prev 0x56037928bef8 <line:777:1, line:822:1> line:777:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x560379291840 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560379295c18 <line:778:1, line:822:1>
|   |-CallExpr 0x5603792919b8 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5603792919a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379291980 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560379291a30 <line:780:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5603792919d8 <col:3> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560379291a18 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5603792919f8 <col:15> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560379291a90 <line:781:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560379291a50 <col:3> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x560379291a70 <col:15> 'int' 1
|   |-BinaryOperator 0x560379291b08 <line:782:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560379291ab0 <col:3> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560379291af0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560379291ad0 <col:20> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560379291bc8 <line:783:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560379291b50 <col:3> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560379291ba0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560379291b70 <col:27> 'int' 1
|   |-CallExpr 0x560379291d48 <line:784:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560379291d30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560379291be8 <col:3> 'void (int)' Function 0x560379232bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560379291ce8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560379291cc8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560379291ca8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560379291c60 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560379291c48 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560379291c08 <col:23> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560379291c90 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560379291c78 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560379291c28 <col:41> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560379291dc8 <line:785:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560379291d70 <col:3> '_Bool' lvalue Var 0x56037928d2a0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560379291db0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560379291d90 <col:20> '_Bool' lvalue Var 0x56037928d048 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560379291e40 <line:786:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560379291de8 <col:3> '_Bool' lvalue Var 0x56037928d318 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560379291e28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560379291e08 <col:20> '_Bool' lvalue Var 0x56037928d0c0 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560379291eb8 <line:787:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560379291e60 <col:3> '_Bool' lvalue Var 0x56037928d390 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560379291ea0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560379291e80 <col:20> '_Bool' lvalue Var 0x56037928d138 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560379291f30 <line:788:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560379291ed8 <col:3> '_Bool' lvalue Var 0x56037928d408 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560379291f18 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560379291ef8 <col:20> '_Bool' lvalue Var 0x56037928d1b0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560379291fa8 <line:789:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560379291f50 <col:3> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560379291f90 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560379291f70 <col:20> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560379292040 <line:790:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560379291fc8 <col:3> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x560379292018 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560379291fe8 <col:27> 'int' 1
|   |-CallExpr 0x560379292098 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560379292080 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379292060 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5603792920f0 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5603792920d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5603792920b8 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5603792921a0 <line:793:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560379292110 <col:3> '_Bool' lvalue Var 0x56037928d7e0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x560379292188 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560379292168 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560379292150 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560379292130 <col:19> 'void *(void)' Function 0x560379232958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560379292250 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5603792921c0 <col:3> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x560379292238 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560379292218 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560379292200 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5603792921e0 <col:19> 'void *(void)' Function 0x560379232958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5603792922c8 <line:795:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560379292270 <col:3> '_Bool' lvalue Var 0x56037928cf50 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5603792922b0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560379292290 <col:21> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560379292340 <line:796:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5603792922e8 <col:3> 'int' lvalue Var 0x56037928cfd0 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560379292328 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560379292308 <col:15> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   |-BinaryOperator 0x560379292778 <line:797:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560379292360 <col:3> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   | `-ConditionalOperator 0x560379292748 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560379292570 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560379292490 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5603792923b8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5603792923a0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560379292380 <col:8> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560379292470 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560379292408 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5603792923f0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5603792923d0 <col:27> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x560379292458 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560379292440 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560379292420 <col:46> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560379292550 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5603792924e8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5603792924d0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5603792924b0 <col:65> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x560379292538 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560379292520 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560379292500 <col:84> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x560379292730 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560379292590 <col:101> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   |   `-ParenExpr 0x560379292710 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5603792926e0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560379292650 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560379292608 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5603792925f0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5603792925b0 <col:106> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560379292638 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560379292620 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5603792925d0 <col:124> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5603792926b0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560379292670 <col:141> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5603792926c8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560379292690 <col:153> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560379292ca8 <line:798:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560379292798 <col:3> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x560379292c78 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560379292c48 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560379292c30 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5603792927b8 <col:15> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560379292c60 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5603792927d8 <col:31> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560379292c10 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560379292be0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5603792929e8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560379292908 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560379292830 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560379292818 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5603792927f8 <col:45> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5603792928e8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560379292880 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560379292868 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560379292848 <col:64> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5603792928d0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5603792928b8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560379292898 <col:83> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5603792929c8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560379292960 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560379292948 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560379292928 <col:102> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5603792929b0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560379292998 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560379292978 <col:121> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560379292bc8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560379292a08 <col:138> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x560379292ba8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560379292b78 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560379292ac8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560379292a80 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560379292a68 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560379292a28 <col:151> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560379292ab0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560379292a98 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560379292a48 <col:169> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x560379292b28 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560379292ae8 <col:186> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560379292b60 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560379292b08 <col:198> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5603792931b8 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560379292cc8 <col:3> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x560379293188 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560379293158 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560379293140 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560379292ce8 <col:15> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560379293170 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560379292d08 <col:31> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x560379293120 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5603792930f0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560379292f18 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560379292e38 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560379292d60 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560379292d48 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560379292d28 <col:45> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560379292e18 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560379292db0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560379292d98 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560379292d78 <col:64> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x560379292e00 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560379292de8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560379292dc8 <col:83> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560379292ef8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560379292e90 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560379292e78 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560379292e58 <col:102> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x560379292ee0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560379292ec8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560379292ea8 <col:121> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5603792930d8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560379292f38 <col:138> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5603792930b8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560379293088 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560379292ff8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560379292fb0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560379292f98 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560379292f58 <col:151> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560379292fe0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560379292fc8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560379292f78 <col:169> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x560379293058 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560379293018 <col:186> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560379293070 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560379293038 <col:198> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x560379293760 <line:800:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5603792931d8 <col:3> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560379293748 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560379293718 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5603792936d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5603792936b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5603792931f8 <col:20> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560379293700 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5603792936e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560379293218 <col:36> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560379293698 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560379293668 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560379293428 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560379293348 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560379293270 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560379293258 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560379293238 <col:55> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560379293328 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5603792932c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5603792932a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560379293288 <col:74> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560379293310 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5603792932f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5603792932d8 <col:93> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560379293408 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5603792933a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560379293388 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560379293368 <col:112> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5603792933f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5603792933d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5603792933b8 <col:131> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560379293650 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560379293638 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560379293448 <col:148> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560379293618 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5603792935e8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560379293508 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5603792934c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5603792934a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560379293468 <col:166> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5603792934f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5603792934d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560379293488 <col:184> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5603792935a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560379293558 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560379293528 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5603792935d0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5603792935b8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560379293580 <col:212> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560379293d40 <line:801:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560379293780 <col:3> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560379293d28 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560379293cf8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560379293cb0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560379293c98 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5603792937a0 <col:20> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560379293ce0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560379293cc8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5603792937c0 <col:36> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560379293c78 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560379293c48 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5603792939d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5603792938f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560379293818 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560379293800 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5603792937e0 <col:55> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5603792938d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560379293868 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560379293850 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560379293830 <col:74> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5603792938b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5603792938a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560379293880 <col:93> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5603792939b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560379293948 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560379293930 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560379293910 <col:112> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560379293998 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560379293980 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560379293960 <col:131> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560379293c30 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560379293c18 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5603792939f0 <col:148> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560379293bf8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560379293bc8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560379293ab0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560379293a68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560379293a50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560379293a10 <col:166> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560379293a98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560379293a80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560379293a30 <col:184> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560379293b98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560379293b00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560379293ad0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560379293bb0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560379293b70 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560379293b28 <col:219> 'int' 0
|   |-BinaryOperator 0x5603792942e8 <line:802:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560379293d60 <col:3> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5603792942d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5603792942a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560379294258 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560379294240 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560379293d80 <col:20> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560379294288 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560379294270 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560379293da0 <col:36> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x560379294220 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5603792941f0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560379293fb0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560379293ed0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560379293df8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560379293de0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560379293dc0 <col:55> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560379293eb0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560379293e48 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560379293e30 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560379293e10 <col:74> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560379293e98 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560379293e80 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560379293e60 <col:93> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560379293f90 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560379293f28 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560379293f10 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560379293ef0 <col:112> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560379293f78 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560379293f60 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560379293f40 <col:131> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5603792941d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5603792941c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560379293fd0 <col:148> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x5603792941a0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560379294170 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560379294090 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560379294048 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560379294030 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560379293ff0 <col:166> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560379294078 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560379294060 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560379294010 <col:184> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560379294128 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5603792940e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5603792940b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560379294158 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560379294140 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560379294108 <col:212> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5603792948b0 <line:803:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560379294308 <col:3> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560379294898 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560379294868 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560379294820 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560379294808 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560379294328 <col:20> '_Bool' lvalue Var 0x56037928d858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560379294850 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560379294838 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560379294348 <col:36> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x5603792947e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5603792947b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560379294558 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560379294478 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5603792943a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560379294388 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560379294368 <col:55> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560379294458 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5603792943f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5603792943d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5603792943b8 <col:74> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560379294440 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560379294428 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560379294408 <col:93> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560379294538 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5603792944d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5603792944b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560379294498 <col:112> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560379294520 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560379294508 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5603792944e8 <col:131> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5603792947a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560379294788 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560379294578 <col:148> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x560379294768 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560379294738 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560379294638 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5603792945f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5603792945d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560379294598 <col:166> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560379294620 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560379294608 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5603792945b8 <col:184> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560379294708 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560379294688 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560379294658 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560379294720 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5603792946e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5603792946b0 <col:219> 'int' 0
|   |-BinaryOperator 0x560379294928 <line:804:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5603792948d0 <col:3> 'int' lvalue Var 0x56037928c818 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x560379294910 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5603792948f0 <col:25> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   |-BinaryOperator 0x560379294a58 <line:805:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560379294948 <col:3> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   | `-ConditionalOperator 0x560379294a28 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5603792949e0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5603792949c8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560379294968 <col:7> '_Bool' lvalue Var 0x56037928cf50 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5603792949f8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560379294988 <col:25> 'int' lvalue Var 0x56037928cfd0 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560379294a10 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5603792949a8 <col:37> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   |-BinaryOperator 0x560379294af0 <line:806:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560379294a78 <col:3> '_Bool' lvalue Var 0x56037928cf50 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560379294ac8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560379294a98 <col:28> 'int' 0
|   |-CallExpr 0x560379294b48 <line:807:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560379294b30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379294b10 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560379294bb8 <line:808:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560379294ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379294b80 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560379294c30 <line:809:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560379294bd8 <col:3> 'int' lvalue Var 0x56037928c938 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x560379294c18 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560379294bf8 <col:25> 'int' lvalue Var 0x56037928ca58 'a' 'int'
|   |-CallExpr 0x560379294c88 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560379294c70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379294c50 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560379294ce0 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560379294cc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379294ca8 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560379294fc8 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560379294d00 <col:3> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   | `-ConditionalOperator 0x560379294f98 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560379294dc0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560379294d78 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560379294d60 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560379294d20 <col:7> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560379294da8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560379294d90 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560379294d40 <col:25> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x560379294f80 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560379294de0 <col:42> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560379294f60 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560379294f30 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560379294ea0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560379294e58 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560379294e40 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560379294e00 <col:55> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560379294e88 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560379294e70 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560379294e20 <col:73> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560379294f00 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560379294ec0 <col:90> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560379294f18 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560379294ee0 <col:102> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
|   |-BinaryOperator 0x5603792951d0 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560379294fe8 <col:3> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5603792951b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560379295188 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5603792950a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560379295060 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560379295048 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560379295008 <col:20> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560379295090 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560379295078 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560379295028 <col:38> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560379295140 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5603792950f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5603792950c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560379295170 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560379295158 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560379295120 <col:66> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5603792954b8 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5603792951f0 <col:3> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5603792954a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560379295470 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560379295390 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5603792952b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560379295268 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560379295250 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560379295210 <col:20> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560379295298 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560379295280 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560379295230 <col:38> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560379295370 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560379295328 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560379295310 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5603792952d0 <col:56> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560379295358 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560379295340 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5603792952f0 <col:74> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560379295428 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5603792953e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5603792953b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560379295458 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560379295440 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560379295408 <col:102> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5603792956c0 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5603792954d8 <col:3> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5603792956a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560379295678 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560379295598 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560379295550 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560379295538 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5603792954f8 <col:20> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560379295580 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560379295568 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560379295518 <col:38> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560379295630 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5603792955e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5603792955b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560379295660 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560379295648 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560379295610 <col:66> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5603792959a8 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5603792956e0 <col:3> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560379295990 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560379295960 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560379295880 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5603792957a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560379295758 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560379295740 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560379295700 <col:20> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560379295788 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560379295770 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560379295720 <col:38> '_Bool' lvalue Var 0x56037928d228 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560379295860 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560379295818 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560379295800 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5603792957c0 <col:56> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560379295848 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560379295830 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5603792957e0 <col:74> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560379295918 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5603792958d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5603792958a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560379295948 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560379295930 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5603792958f8 <col:102> '_Bool' lvalue Var 0x56037928d480 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x560379295a00 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5603792959e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5603792959c8 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560379295a58 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560379295a40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379295a20 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560379295b10 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560379295a78 <col:3> 'int' lvalue Var 0x56037928c278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560379295af0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560379295ad8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560379295a98 <col:22> 'int' lvalue Var 0x56037928c278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560379295ab8 <col:41> 'int' 1
|   |-CallExpr 0x560379295b90 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560379295b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560379295b30 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560379295c08 <line:821:3, col:36>
|     `-CallExpr 0x560379295be8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560379295bd0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560379295bb0 <col:10> 'void *(void)' Function 0x560379232958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560379295da0 prev 0x56037928bfc0 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x560379295e40 <line:824:1, line:825:1>
|-FunctionDecl 0x560379295e70 prev 0x56037928c080 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x560379295f10 <line:827:1, line:828:1>
|-FunctionDecl 0x560379295f40 prev 0x56037928c140 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x560379295fe0 <line:830:1, line:831:1>
`-FunctionDecl 0x560379296048 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x5603792980e8 <line:833:1, line:858:1>
    |-DeclStmt 0x560379296160 <line:834:3, col:16>
    | `-VarDecl 0x5603792960f8 <col:3, col:13> col:13 used t95 'pthread_t':'unsigned long'
    |-CallExpr 0x560379296368 <line:835:3, col:52> 'int'
    | |-ImplicitCastExpr 0x560379296350 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560379296178 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560379273488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5603792961b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560379296198 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5603792960f8 't95' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5603792963a8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560379296230 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x560379296208 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5603792961d0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x5603792963c0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560379296250 <col:37> 'void *(void *)' Function 0x56037928d970 'P0' 'void *(void *)'
    | `-ParenExpr 0x5603792962d0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x5603792962a8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560379296270 <col:50> 'int' 0
    |-DeclStmt 0x560379296450 <line:836:3, col:16>
    | `-VarDecl 0x5603792963e8 <col:3, col:13> col:13 used t96 'pthread_t':'unsigned long'
    |-CallExpr 0x5603792965f8 <line:837:3, col:52> 'int'
    | |-ImplicitCastExpr 0x5603792965e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560379296468 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560379273488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5603792964a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560379296488 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5603792963e8 't96' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560379296638 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560379296520 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x5603792964f8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5603792964c0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x560379296650 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560379296540 <col:37> 'void *(void *)' Function 0x56037928e088 'P1' 'void *(void *)'
    | `-ParenExpr 0x5603792965c0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x560379296598 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560379296560 <col:50> 'int' 0
    |-DeclStmt 0x5603792966e0 <line:838:3, col:16>
    | `-VarDecl 0x560379296678 <col:3, col:13> col:13 used t97 'pthread_t':'unsigned long'
    |-CallExpr 0x560379296888 <line:839:3, col:52> 'int'
    | |-ImplicitCastExpr 0x560379296870 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5603792966f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560379273488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560379296738 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560379296718 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560379296678 't97' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5603792968c8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5603792967b0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x560379296788 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560379296750 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x5603792968e0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5603792967d0 <col:37> 'void *(void *)' Function 0x56037928e708 'P2' 'void *(void *)'
    | `-ParenExpr 0x560379296850 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x560379296828 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5603792967f0 <col:50> 'int' 0
    |-DeclStmt 0x560379296970 <line:840:3, col:16>
    | `-VarDecl 0x560379296908 <col:3, col:13> col:13 used t98 'pthread_t':'unsigned long'
    |-CallExpr 0x560379296b18 <line:841:3, col:52> 'int'
    | |-ImplicitCastExpr 0x560379296b00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560379296988 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560379273488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5603792969c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5603792969a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560379296908 't98' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560379296b58 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560379296a40 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x560379296a18 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5603792969e0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x560379296b70 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560379296a60 <col:37> 'void *(void *)' Function 0x5603792918d8 'P3' 'void *(void *)'
    | `-ParenExpr 0x560379296ae0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x560379296ab8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560379296a80 <col:50> 'int' 0
    |-CallExpr 0x560379296bd8 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560379296bc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560379296ba0 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560379296ca8 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560379296bf8 <col:3> '_Bool' lvalue Var 0x56037928cb00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560379296c90 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560379296c70 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560379296c58 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560379296c18 <col:21> 'int' lvalue Var 0x56037928c278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560379296c38 <col:41> 'int' 4
    |-CallExpr 0x560379296d00 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560379296ce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560379296cc8 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560379296d78 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560379296d60 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560379296d20 <col:3> 'void (int)' Function 0x560379232790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560379296db8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560379296da0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560379296d40 <col:21> '_Bool' lvalue Var 0x56037928cb00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560379296e08 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560379296df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560379296dd0 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5603792970f0 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560379296e28 <col:3> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
    | `-ConditionalOperator 0x5603792970c0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560379296ee8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560379296ea0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560379296e88 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560379296e48 <col:7> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560379296ed0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560379296eb8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560379296e68 <col:25> '_Bool' lvalue Var 0x56037928d048 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5603792970a8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560379296f08 <col:42> 'int' lvalue Var 0x56037928d5f8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x560379297088 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560379297058 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560379296fc8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560379296f80 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560379296f68 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560379296f28 <col:55> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560379296fb0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560379296f98 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560379296f48 <col:73> '_Bool' lvalue Var 0x56037928d2a0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560379297028 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560379296fe8 <col:90> 'int' lvalue Var 0x56037928d6f0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560379297040 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560379297008 <col:102> 'int' lvalue Var 0x56037928ceb8 'z' 'int'
    |-BinaryOperator 0x5603792972f8 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560379297110 <col:3> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5603792972e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5603792972b0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5603792971d0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560379297188 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560379297170 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560379297130 <col:20> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5603792971b8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5603792971a0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560379297150 <col:38> '_Bool' lvalue Var 0x56037928d048 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560379297268 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560379297220 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5603792971f0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560379297298 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560379297280 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560379297248 <col:66> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5603792975e0 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560379297318 <col:3> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5603792975c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560379297598 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5603792974b8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5603792973d8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560379297390 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560379297378 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560379297338 <col:20> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5603792973c0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5603792973a8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560379297358 <col:38> '_Bool' lvalue Var 0x56037928d048 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560379297498 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560379297450 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560379297438 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5603792973f8 <col:56> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560379297480 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560379297468 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560379297418 <col:74> '_Bool' lvalue Var 0x56037928d2a0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560379297550 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560379297508 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5603792974d8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560379297580 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560379297568 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560379297530 <col:102> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5603792977e8 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560379297600 <col:3> '_Bool' lvalue Var 0x56037928d048 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5603792977d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5603792977a0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5603792976c0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560379297678 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560379297660 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560379297620 <col:20> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5603792976a8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560379297690 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560379297640 <col:38> '_Bool' lvalue Var 0x56037928d048 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560379297758 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560379297710 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5603792976e0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560379297788 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560379297770 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560379297738 <col:66> '_Bool' lvalue Var 0x56037928d048 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560379297ad0 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560379297808 <col:3> '_Bool' lvalue Var 0x56037928d2a0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560379297ab8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560379297a88 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5603792979a8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5603792978c8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560379297880 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560379297868 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560379297828 <col:20> '_Bool' lvalue Var 0x56037928d670 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5603792978b0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560379297898 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560379297848 <col:38> '_Bool' lvalue Var 0x56037928d048 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560379297988 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560379297940 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560379297928 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5603792978e8 <col:56> '_Bool' lvalue Var 0x56037928d768 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560379297970 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560379297958 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560379297908 <col:74> '_Bool' lvalue Var 0x56037928d2a0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560379297a40 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5603792979f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5603792979c8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560379297a70 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560379297a58 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560379297a20 <col:102> '_Bool' lvalue Var 0x56037928d2a0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560379297b28 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560379297b10 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560379297af0 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560379297b80 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560379297b68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560379297b48 <col:3> 'void ()' Function 0x560379232e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560379297f90 <line:854:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x560379297bb0 <col:3> '_Bool' lvalue Var 0x56037928cb78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560379297f78 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560379297f60 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560379297f40 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x560379297f20 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x560379297e88 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x560379297df0 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x560379297d58 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x560379297cc0 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x560379297c28 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x560379297c10 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x560379297bd0 <col:23> 'int' lvalue Var 0x56037928c398 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x560379297bf0 <col:46> 'int' 0
    |         | | | | `-BinaryOperator 0x560379297ca0 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x560379297c88 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x560379297c48 <col:51> 'int' lvalue Var 0x56037928c4b8 '__unbuffered_p1_EAX' 'int'
    |         | | | |   `-IntegerLiteral 0x560379297c68 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x560379297d38 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x560379297d20 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x560379297ce0 <col:79> 'int' lvalue Var 0x56037928c5d8 '__unbuffered_p2_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x560379297d00 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x560379297dd0 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560379297db8 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560379297d78 <col:107> 'int' lvalue Var 0x56037928c6f8 '__unbuffered_p2_EBX' 'int'
    |         | |   `-IntegerLiteral 0x560379297d98 <col:130> 'int' 0
    |         | `-BinaryOperator 0x560379297e68 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560379297e50 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560379297e10 <col:135> 'int' lvalue Var 0x56037928c818 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x560379297e30 <col:158> 'int' 1
    |         `-BinaryOperator 0x560379297f00 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x560379297ee8 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560379297ea8 <col:163> 'int' lvalue Var 0x56037928c938 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x560379297ec8 <col:186> 'int' 0
    |-CallExpr 0x560379297fe8 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560379297fd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560379297fb0 <col:3> 'void ()' Function 0x560379232f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560379298060 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560379298048 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560379298008 <col:3> 'void (int)' Function 0x560379232bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5603792980a0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560379298088 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560379298028 <col:21> '_Bool' lvalue Var 0x56037928cb78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5603792980d8 <line:857:3, col:10>
      `-IntegerLiteral 0x5603792980b8 <col:10> 'int' 0
