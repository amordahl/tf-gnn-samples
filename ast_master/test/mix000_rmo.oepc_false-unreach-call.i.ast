TranslationUnitDecl 0x559cdaa99e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559cdaa9a6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559cdaa9a3b0 '__int128'
|-TypedefDecl 0x559cdaa9a748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559cdaa9a3d0 'unsigned __int128'
|-TypedefDecl 0x559cdaa9aa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559cdaa9a820 'struct __NSConstantString_tag'
|   `-Record 0x559cdaa9a7a0 '__NSConstantString_tag'
|-TypedefDecl 0x559cdaa9aaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559cdaa9aab0 'char *'
|   `-BuiltinType 0x559cdaa99eb0 'char'
|-TypedefDecl 0x559cdaad9650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559cdaa9ad90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559cdaa9abd0 'struct __va_list_tag'
|     `-Record 0x559cdaa9ab50 '__va_list_tag'
|-FunctionDecl 0x559cdaad9770 <./test/mix000_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x559cdaad9940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x559cdaad9870 <col:31> col:34 'int'
|-FunctionDecl 0x559cdaad9ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x559cdaad9be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559cdaad9d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559cdaad9c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x559cdaad9f58 <col:40, col:99>
|   |-IfStmt 0x559cdaad9f28 <col:42, col:88>
|   | |-UnaryOperator 0x559cdaad9e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x559cdaad9df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x559cdaad9dd0 <col:47> 'int' lvalue ParmVar 0x559cdaad9c98 'expression' 'int'
|   | `-CompoundStmt 0x559cdaad9f10 <col:59, col:88>
|   |   `-LabelStmt 0x559cdaad9ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x559cdaad9e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x559cdaad9e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x559cdaad9e20 <col:68> 'void () __attribute__((noreturn))' Function 0x559cdaad9be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x559cdaad9f40 <col:89>
|   `-ReturnStmt 0x559cdaad9f48 <col:91>
|-FunctionDecl 0x559cdaad9fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x559cdaada060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x559cdaada3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559cdaada118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x559cdaada198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x559cdaada218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559cdaada298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559cdaada4a0 <line:11:22>
|-FunctionDecl 0x559cdab00520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559cdaada510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x559cdaada590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x559cdab00350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559cdab003d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559cdab005e0 <line:14:22>
|-FunctionDecl 0x559cdab00890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559cdab00650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559cdab006d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x559cdab00750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x559cdab00948 <line:16:22>
|-TypedefDecl 0x559cdab009b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559cdaa99f70 'unsigned char'
|-TypedefDecl 0x559cdab00a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559cdaa99f90 'unsigned short'
|-TypedefDecl 0x559cdab00a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559cdaa99fb0 'unsigned int'
|-TypedefDecl 0x559cdab00b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab00b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559cdaa99ed0 'signed char'
|-TypedefDecl 0x559cdab00be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559cdaa99f70 'unsigned char'
|-TypedefDecl 0x559cdab00c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559cdaa99ef0 'short'
|-TypedefDecl 0x559cdab00cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559cdaa99f90 'unsigned short'
|-TypedefDecl 0x559cdab00d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559cdaa99f10 'int'
|-TypedefDecl 0x559cdab00da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559cdaa99fb0 'unsigned int'
|-TypedefDecl 0x559cdab00e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab00e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab00ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab00f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab00fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab01048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559cdaa99fb0 'unsigned int'
|-TypedefDecl 0x559cdab010b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559cdaa99fb0 'unsigned int'
|-TypedefDecl 0x559cdab01128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab01198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab01208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559cdaa99fb0 'unsigned int'
|-TypedefDecl 0x559cdab01278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab012e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab01378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab013e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559cdaa99f10 'int'
|-RecordDecl 0x559cdab01440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x559cdab01588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x559cdab01640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559cdab015e0 'struct __fsid_t' sugar
|   `-RecordType 0x559cdab014c0 '__fsid_t'
|     `-Record 0x559cdab01440 ''
|-TypedefDecl 0x559cdab016c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab01738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab017a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab01818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559cdaa99fb0 'unsigned int'
|-TypedefDecl 0x559cdab01888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab018f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559cdaa99fb0 'unsigned int'
|-TypedefDecl 0x559cdab01968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab019d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559cdaa99f10 'int'
|-TypedefDecl 0x559cdab01a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559cdaa99f10 'int'
|-TypedefDecl 0x559cdab01ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559cdaa99f10 'int'
|-TypedefDecl 0x559cdab01b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559cdaa9a630 'void *'
|   `-BuiltinType 0x559cdaa99e70 'void'
|-TypedefDecl 0x559cdab01b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab01c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab01c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab01ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab01d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab01dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab01e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab01ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab01f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab01f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab01ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab02088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559cdab02050 '__off64_t' sugar
|   |-Typedef 0x559cdab01378 '__off64_t'
|   `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab02180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559cdab02140 '__quad_t *'
|   `-TypedefType 0x559cdab020e0 '__quad_t' sugar
|     |-Typedef 0x559cdab00ef8 '__quad_t'
|     `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab021f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559cdaa9aab0 'char *'
|   `-BuiltinType 0x559cdaa99eb0 'char'
|-TypedefDecl 0x559cdab02260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab022d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559cdaa99fb0 'unsigned int'
|-FunctionDecl 0x559cdab03458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x559cdab03380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x559cdab03768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x559cdab03758 <line:73:3, col:34>
|     `-CallExpr 0x559cdab03718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559cdab03700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559cdab03690 <col:10> '<builtin fn type>' Function 0x559cdab03500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x559cdab03740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559cdab036b0 <col:29> 'unsigned int' lvalue ParmVar 0x559cdab03380 '__bsx' 'unsigned int'
|-FunctionDecl 0x559cdab03500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559cdab035a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559cdab03610 <col:10> Implicit
| `-ConstAttr 0x559cdab03668 <col:10> Implicit
|-FunctionDecl 0x559cdab038c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559cdab037b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559cdab03bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x559cdab03bc8 <line:78:3, col:34>
|     `-CallExpr 0x559cdab03b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x559cdab03b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559cdab03af8 <col:10> '<builtin fn type>' Function 0x559cdab03968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559cdab03bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559cdab03b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559cdab037b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x559cdab03968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559cdab03a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x559cdab03a78 <col:10> Implicit
| `-ConstAttr 0x559cdab03ad0 <col:10> Implicit
|-TypedefDecl 0x559cdab03c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-TypedefDecl 0x559cdab03c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559cdab03c60 '__time_t' sugar
|   |-Typedef 0x559cdab01888 '__time_t'
|   `-BuiltinType 0x559cdaa99f30 'long'
|-RecordDecl 0x559cdab03cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x559cdab03da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559cdab03e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559cdab03ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559cdab03e90 '__pid_t' sugar
|   |-Typedef 0x559cdab013e8 '__pid_t'
|   `-BuiltinType 0x559cdaa99f10 'int'
|-RecordDecl 0x559cdab03f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x559cdab03fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559cdab04030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x559cdab040f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559cdab04158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-RecordDecl 0x559cdab041b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x559cdab05480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x559cdab05530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559cdab054d0 'struct cpu_set_t' sugar
|   `-RecordType 0x559cdab04230 'cpu_set_t'
|     `-Record 0x559cdab041b0 ''
|-FunctionDecl 0x559cdab05808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559cdab055d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559cdab056e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559cdab058b8 <line:108:19>
|-FunctionDecl 0x559cdab05a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559cdab05920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x559cdab05b38 <col:69>
|-FunctionDecl 0x559cdab05cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559cdab05ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559cdab05d58 <col:64>
|-FunctionDecl 0x559cdab06018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559cdab05dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559cdab05ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559cdab060c8 <line:114:22>
|-FunctionDecl 0x559cdab063b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559cdab06130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559cdab06228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x559cdab06460 <col:88>
|-FunctionDecl 0x559cdab06718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559cdab064c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559cdab06548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x559cdab065d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559cdab067d0 <col:62>
|-FunctionDecl 0x559cdab06948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x559cdab06838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x559cdab069f0 <col:63>
|-FunctionDecl 0x559cdab06b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x559cdab06bb8 <col:47>
|-FunctionDecl 0x559cdab06cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x559cdab06c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559cdab06d68 <col:69>
|-FunctionDecl 0x559cdab06e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x559cdab06dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559cdab06f18 <col:69>
|-FunctionDecl 0x559cdab071d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559cdab06f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559cdab070b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x559cdab07288 <col:88>
|-TypedefDecl 0x559cdab07318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x559cdab072e0 '__clock_t' sugar
|   |-Typedef 0x559cdab016c8 '__clock_t'
|   `-BuiltinType 0x559cdaa99f30 'long'
|-TypedefDecl 0x559cdab073c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x559cdab07370 '__clockid_t' sugar
|   |-Typedef 0x559cdab01ab8 '__clockid_t'
|   `-BuiltinType 0x559cdaa99f10 'int'
|-TypedefDecl 0x559cdab07458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x559cdab07420 '__timer_t' sugar
|   |-Typedef 0x559cdab01b28 '__timer_t'
|   `-PointerType 0x559cdaa9a630 'void *'
|     `-BuiltinType 0x559cdaa99e70 'void'
|-RecordDecl 0x559cdab074b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x559cdab07570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x559cdab075d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x559cdab07640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x559cdab076a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x559cdab07710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x559cdab07778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x559cdab077e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x559cdab07848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x559cdab078b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x559cdab07918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x559cdab07980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x559cdab079d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x559cdab07a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x559cdab07b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x559cdab07bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x559cdab07d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x559cdab07e20 <col:45>
|-FunctionDecl 0x559cdab08000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x559cdab07ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x559cdab080a8 <col:54>
|-FunctionDecl 0x559cdab082a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x559cdab08110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x559cdab08188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x559cdab08358 <line:158:22>
| `-ConstAttr 0x559cdab08ff0 <col:63>
|-FunctionDecl 0x559cdab091f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559cdab090e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559cdab09298 <col:56>
|-FunctionDecl 0x559cdab09640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x559cdab09308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x559cdab09380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559cdab09400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x559cdab094f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x559cdab09700 <col:54>
|-RecordDecl 0x559cdab09758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x559cdab09808 parent 0x559cdaa99e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x559cdab09a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x559cdab09b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x559cdab09b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x559cdab09bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x559cdab09cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x559cdab09de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x559cdab09d90 'struct __locale_struct *'
|   `-ElaboratedType 0x559cdab09d20 'struct __locale_struct' sugar
|     `-RecordType 0x559cdab097e0 'struct __locale_struct'
|       `-Record 0x559cdab09758 '__locale_struct'
|-TypedefDecl 0x559cdab09e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x559cdab09e60 '__locale_t' sugar
|   |-Typedef 0x559cdab09de8 '__locale_t'
|   `-PointerType 0x559cdab09d90 'struct __locale_struct *'
|     `-ElaboratedType 0x559cdab09d20 'struct __locale_struct' sugar
|       `-RecordType 0x559cdab097e0 'struct __locale_struct'
|         `-Record 0x559cdab09758 '__locale_struct'
|-FunctionDecl 0x559cdab0b2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x559cdab09f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x559cdab09f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559cdab0b028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x559cdab0b0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559cdab0b130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x559cdab0b368 <col:40>
|-FunctionDecl 0x559cdab0b558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559cdab0b430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x559cdab0b600 <col:66>
|-FunctionDecl 0x559cdab0b710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559cdab0b668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x559cdab0b7b8 <col:69>
|-FunctionDecl 0x559cdab0b9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559cdab0b820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559cdab0b8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559cdab0ba98 <col:52>
|-FunctionDecl 0x559cdab0bc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559cdab0bb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559cdab0bb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559cdab0bcf0 <col:55>
|-FunctionDecl 0x559cdab0be88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x559cdab0bd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x559cdab0bf30 <col:62>
|-FunctionDecl 0x559cdab0c168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x559cdab0bf98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x559cdab0c210 <col:60>
|-FunctionDecl 0x559cdab0c438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559cdab0c290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559cdab0c310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559cdab0c4e8 <col:44>
|-FunctionDecl 0x559cdab0c6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559cdab0c550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559cdab0c5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559cdab0c7a8 <col:49>
|-VarDecl 0x559cdab0c8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x559cdab0c928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559cdab0c9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x559cdab0ca70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559cdab0cba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559cdab0cc40 <col:42>
|-VarDecl 0x559cdab0ccb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559cdab0cd30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559cdab0ceb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559cdab0cda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559cdab0cf60 <col:57>
|-FunctionDecl 0x559cdab0d0d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559cdab0cfe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559cdab0d178 <col:56>
|-FunctionDecl 0x559cdab0d288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559cdab0d1f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559cdab0d330 <col:59>
|-FunctionDecl 0x559cdab0d438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x559cdab0d3a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559cdab0d4e0 <col:48>
| `-ConstAttr 0x559cdab0d538 <col:89>
|-FunctionDecl 0x559cdab0d798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559cdab0d5e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x559cdab0d678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559cdab0d9f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559cdab0d888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559cdab0d918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x559cdab0daa8 <col:88>
|-FunctionDecl 0x559cdab0dc40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559cdab0db10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559cdab0dba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559cdab0dcf0 <col:88>
|-FunctionDecl 0x559cdab0df08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559cdab0dd58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559cdab0dde8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559cdab0dfb8 <line:209:22>
|-FunctionDecl 0x559cdab0e358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559cdab0e020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559cdab0e0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559cdab0e170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559cdab0e200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559cdab0e658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559cdab0e458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559cdab0e530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559cdab0e708 <col:85>
|-FunctionDecl 0x559cdab0eaf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559cdab0e770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559cdab0e8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x559cdab0e9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x559cdab0ebb0 <col:52>
|-FunctionDecl 0x559cdab0ed28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559cdab0ec18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559cdab0edd0 <col:61>
|-FunctionDecl 0x559cdab0f248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559cdab0ee38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559cdab0eeb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559cdab0efe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559cdab0f0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x559cdab0f308 <col:62>
|-FunctionDecl 0x559cdab0f528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559cdab0f370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559cdab0f400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559cdab0f5d8 <line:222:22>
|-FunctionDecl 0x559cdab0f6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x559cdab0f640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559cdab0f780 <col:65>
|-TypedefDecl 0x559cdab0f7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559cdaa99fd0 'unsigned long'
|-RecordDecl 0x559cdab0f848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x559cdab0f990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559cdab0f9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559cdab0faa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x559cdab0fa50 'union pthread_attr_t' sugar
|   `-RecordType 0x559cdab0f8d0 'union pthread_attr_t'
|     `-Record 0x559cdab0f848 'pthread_attr_t'
|-RecordDecl 0x559cdab0fb00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559cdab0fc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559cdab0fcf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559cdab0fda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559cdab0fd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559cdab0fb80 'struct __pthread_internal_list'
|     `-Record 0x559cdab0fb00 '__pthread_internal_list'
|-RecordDecl 0x559cdab0fe10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x559cdab0feb8 parent 0x559cdaa99e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559cdab0ff90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559cdab0fff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559cdab10060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559cdab14110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559cdab14178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559cdab141e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559cdab14268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x559cdab14320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x559cdab14410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559cdab14478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559cdab14600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559cdab145a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x559cdab0fe90 'pthread_mutex_t'
|     `-Record 0x559cdab0fe10 ''
|-RecordDecl 0x559cdab14670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x559cdab147b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559cdab14818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559cdab148d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559cdab14870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559cdab146f0 'pthread_mutexattr_t'
|     `-Record 0x559cdab14670 ''
|-RecordDecl 0x559cdab14940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x559cdab149e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x559cdab14ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559cdab14b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559cdab14b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559cdab14be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559cdab14c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559cdab14cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559cdab14d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559cdab14d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559cdab14e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./test/mix000_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./test/mix000_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x559cdab14f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559cdab14f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559cdab16130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559cdab15070 'union pthread_cond_t' sugar
|   `-RecordType 0x559cdab149c0 'pthread_cond_t'
|     `-Record 0x559cdab14940 ''
|-RecordDecl 0x559cdab161a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x559cdab162a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559cdab16308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559cdab163c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x559cdab16360 'union pthread_condattr_t' sugar
|   `-RecordType 0x559cdab16220 'pthread_condattr_t'
|     `-Record 0x559cdab161a0 ''
|-TypedefDecl 0x559cdab16448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559cdaa99fb0 'unsigned int'
|-TypedefDecl 0x559cdab164b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559cdaa99f10 'int'
|-RecordDecl 0x559cdab16510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x559cdab165b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x559cdab16680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559cdab166e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x559cdab16750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x559cdab167b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x559cdab16820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x559cdab16888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x559cdab168f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x559cdab16958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x559cdab169c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x559cdab16a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x559cdab16a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x559cdab16b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./test/mix000_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix000_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x559cdab16be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559cdab16c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559cdab16da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x559cdab16d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x559cdab16590 'pthread_rwlock_t'
|     `-Record 0x559cdab16510 ''
|-RecordDecl 0x559cdab16e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x559cdab16f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x559cdab16fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559cdab17070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x559cdab17010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x559cdab16e90 'pthread_rwlockattr_t'
|     `-Record 0x559cdab16e10 ''
|-TypedefDecl 0x559cdab18140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559cdaa99f14 'volatile int' volatile
|   `-BuiltinType 0x559cdaa99f10 'int'
|-RecordDecl 0x559cdab18198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x559cdab182e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x559cdab18348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559cdab18400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x559cdab183a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x559cdab18220 'pthread_barrier_t'
|     `-Record 0x559cdab18198 ''
|-RecordDecl 0x559cdab18470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x559cdab18570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559cdab185d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559cdab18690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x559cdab18630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x559cdab184f0 'pthread_barrierattr_t'
|     `-Record 0x559cdab18470 ''
|-TypedefDecl 0x559cdab187a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x559cdab18740 'long [8]' 8 
|   `-BuiltinType 0x559cdaa99f30 'long'
|-EnumDecl 0x559cdab18800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x559cdab188c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x559cdab18918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x559cdab18968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x559cdab18a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x559cdab18a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x559cdab18ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x559cdab18b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x559cdab18bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x559cdab18b98 <col:26> 'int'
| |   `-DeclRefExpr 0x559cdab18b78 <col:26> 'int' EnumConstant 0x559cdab18a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x559cdab18c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x559cdab18c20 <col:29> 'int'
| |   `-DeclRefExpr 0x559cdab18c00 <col:29> 'int' EnumConstant 0x559cdab18a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x559cdab18cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x559cdab18ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x559cdab18c88 <col:30> 'int' EnumConstant 0x559cdab18ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x559cdab18d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x559cdab18d30 <col:27> 'int'
|     `-DeclRefExpr 0x559cdab18d10 <col:27> 'int' EnumConstant 0x559cdab18bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x559cdab18d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x559cdab18e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x559cdab18ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x559cdab18ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x559cdab18eb8 <col:30> 'int' EnumConstant 0x559cdab18e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x559cdab18f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x559cdab18fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x559cdab18fb0 <col:29> 'int'
|     `-DeclRefExpr 0x559cdab18f90 <col:29> 'int' EnumConstant 0x559cdab18f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x559cdab19018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x559cdab190e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x559cdab19150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x559cdab191a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x559cdab191f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x559cdab192b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x559cdab19308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x559cdab19358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x559cdab193e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x559cdab193c8 <col:31> 'int'
|     `-DeclRefExpr 0x559cdab193a8 <col:31> 'int' EnumConstant 0x559cdab192b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x559cdab19430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x559cdab194f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x559cdab19548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x559cdab19598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x559cdab19668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x559cdab196b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x559cdab19708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x559cdab197d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x559cdab19828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x559cdab19878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x559cdab19ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x559cdab19b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x559cdab19b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x559cdab19ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x559cdab19cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x559cdab19dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x559cdab19e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x559cdab19e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x559cdab19f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x559cdab19f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x559cdab1a5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x559cdab1a080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x559cdab1a1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cdab1a3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x559cdab1a420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x559cdab1a678 <col:47>
| |-NonNullAttr 0x559cdab1a6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x559cdab1a708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x559cdab1a830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x559cdab1a760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x559cdab1aa88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x559cdab1a8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x559cdab1a968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x559cdab1ac58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x559cdab1ab48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x559cdab1ad00 <col:60>
|-FunctionDecl 0x559cdab1ae50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x559cdab1aef0 <col:54>
| `-ConstAttr 0x559cdab1af48 <col:95>
|-FunctionDecl 0x559cdab1c990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x559cdab1af80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559cdab1aff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x559cdab1ca40 <line:395:19>
| `-ConstAttr 0x559cdab1ca98 <col:60>
|-FunctionDecl 0x559cdab1cc68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559cdab1cb30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559cdab1cd10 <col:71>
| `-NonNullAttr 0x559cdab1cd68 <col:112, col:126> 1
|-FunctionDecl 0x559cdab1ce70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559cdab1cdb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559cdab1cf18 <line:398:22>
| `-NonNullAttr 0x559cdab1cf70 <col:63, col:77> 1
|-FunctionDecl 0x559cdab1d198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559cdab1cfb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559cdab1d038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x559cdab1d248 <line:401:22>
| `-NonNullAttr 0x559cdab1d2a0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab1d4a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559cdab1d2e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cdab1d368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x559cdab1d558 <line:404:22>
| `-NonNullAttr 0x559cdab1d5b0 <col:63, col:77> 1
|-FunctionDecl 0x559cdab1d808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559cdab1d5f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559cdab1d6a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559cdab1d8b8 <line:407:22>
| `-NonNullAttr 0x559cdab1d910 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab1eb68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559cdab1e9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cdab1ea28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559cdab1ec18 <line:410:22>
| `-NonNullAttr 0x559cdab1ec70 <col:63, col:77> 1
|-FunctionDecl 0x559cdab1eea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559cdab1ecb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cdab1ed48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559cdab1ef58 <line:413:22>
| `-NonNullAttr 0x559cdab1efb0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab1f1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559cdab1eff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cdab1f088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559cdab1f298 <col:37>
| `-NonNullAttr 0x559cdab1f2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x559cdab1f4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab1f338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cdab1f3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559cdab1f588 <line:419:22>
| `-NonNullAttr 0x559cdab1f5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab1f768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559cdab1f628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cdab1f6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559cdab1f818 <line:421:22>
| `-NonNullAttr 0x559cdab1f870 <col:63, col:77> 1
|-FunctionDecl 0x559cdab1fa38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab1f8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cdab1f938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559cdab1fae8 <line:424:22>
| `-NonNullAttr 0x559cdab1fb40 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab1fcc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559cdab1fb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cdab1fc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559cdab1fd78 <line:427:22>
| `-NonNullAttr 0x559cdab1fdd0 <col:63, col:77> 1
|-FunctionDecl 0x559cdab1ff78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab1fe18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cdab1fe98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559cdab20028 <line:430:22>
| `-NonNullAttr 0x559cdab20080 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab20208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559cdab200c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cdab20148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559cdab202b8 <line:432:22>
| `-NonNullAttr 0x559cdab20310 <col:63, col:77> 1
|-FunctionDecl 0x559cdab20538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x559cdab20358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cdab203d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559cdab205e8 <line:435:22>
| |-NonNullAttr 0x559cdab20640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x559cdab20678 <col:100> "" ""
|-FunctionDecl 0x559cdab20888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559cdab206c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cdab20748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x559cdab20938 <line:438:22>
| |-NonNullAttr 0x559cdab20990 <col:63, col:77> 1
| `-DeprecatedAttr 0x559cdab209d8 <col:97> "" ""
|-FunctionDecl 0x559cdab20bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559cdab20a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cdab20aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559cdab20c78 <line:441:22>
| `-NonNullAttr 0x559cdab20cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab20e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559cdab20d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cdab20d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559cdab20f00 <line:444:22>
| `-NonNullAttr 0x559cdab20f58 <col:63, col:77> 1
|-FunctionDecl 0x559cdab21248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559cdab20fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cdab21028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559cdab210a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559cdab21300 <line:448:22>
| `-NonNullAttr 0x559cdab21358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559cdab21608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559cdab213b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cdab21430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559cdab214a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559cdab216c0 <col:43>
| `-NonNullAttr 0x559cdab21718 <col:84, col:98> 1
|-FunctionDecl 0x559cdab21a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559cdab21768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559cdab217e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x559cdab21878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559cdab21ad8 <line:453:22>
| `-NonNullAttr 0x559cdab21b30 <col:63, col:77> 3
|-FunctionDecl 0x559cdab21e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559cdab21b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559cdab21bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559cdab21c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559cdab21ec0 <line:457:22>
| `-NonNullAttr 0x559cdab21f18 <col:63, col:80> 2 3
|-FunctionDecl 0x559cdab22108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559cdab21f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559cdab21fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559cdab221b8 <line:459:22>
|-FunctionDecl 0x559cdab22588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x559cdab22280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559cdab22420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x559cdab22638 <col:52, col:69> 1 2
|-FunctionDecl 0x559cdab227e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559cdab226c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x559cdab22740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559cdab229f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559cdab228a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559cdab22928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x559cdab22b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x559cdab22ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559cdab22c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559cdab22d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x559cdab22dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x559cdab22ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559cdab22f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559cdab23100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix000_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x559cdab231f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559cdab232b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x559cdab23250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559cdab22db0 '__pthread_unwind_buf_t'
| |   `-Record 0x559cdab22d28 ''
| `-AlignedAttr 0x559cdab23308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559cdab23380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559cdab234e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x559cdab23548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559cdab235b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x559cdab23618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x559cdab23820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559cdab23710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559cdab23a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559cdab238d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559cdab23bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559cdab23ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559cdab23c68 <line:488:22>
|-RecordDecl 0x559cdab23cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559cdab23fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559cdab23e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559cdab23eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559cdab24088 <col:86>
| `-ReturnsTwiceAttr 0x559cdab240e0 <col:12> Implicit
|-FunctionDecl 0x559cdab24408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559cdab241b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559cdab242c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x559cdab244b8 <line:494:22>
| `-NonNullAttr 0x559cdab24510 <col:63, col:77> 1
|-FunctionDecl 0x559cdab24688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559cdab24558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559cdab24730 <line:496:22>
| `-NonNullAttr 0x559cdab24788 <col:63, col:77> 1
|-FunctionDecl 0x559cdab24890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559cdab247d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559cdab24938 <line:498:22>
| `-NonNullAttr 0x559cdab24990 <col:52, col:66> 1
|-FunctionDecl 0x559cdab25ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559cdab25a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559cdab25b80 <line:500:22>
| `-NonNullAttr 0x559cdab25bd8 <col:52, col:66> 1
|-FunctionDecl 0x559cdab25e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559cdab25c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559cdab25cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559cdab25ec8 <col:36>
| `-NonNullAttr 0x559cdab25f20 <col:66, col:83> 1 2
|-FunctionDecl 0x559cdab26020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559cdab25f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559cdab260c8 <line:505:22>
| `-NonNullAttr 0x559cdab26120 <col:52, col:66> 1
|-FunctionDecl 0x559cdab263b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab261d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559cdab26250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559cdab26468 <line:509:22>
| `-NonNullAttr 0x559cdab264c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab26788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x559cdab26508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559cdab26588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x559cdab26608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x559cdab26840 <line:513:22>
| `-NonNullAttr 0x559cdab26898 <col:63, col:80> 1 3
|-FunctionDecl 0x559cdab26a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559cdab268e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559cdab26ad8 <line:515:22>
| `-NonNullAttr 0x559cdab26b30 <col:63, col:77> 1
|-FunctionDecl 0x559cdab26d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559cdab26be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559cdab26dc0 <line:517:22>
| `-NonNullAttr 0x559cdab26e18 <col:63, col:77> 1
|-FunctionDecl 0x559cdab26f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559cdab26e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559cdab26fc8 <line:519:22>
| `-NonNullAttr 0x559cdab27020 <col:63, col:77> 1
|-FunctionDecl 0x559cdab27248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab27068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559cdab270e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x559cdab272f8 <line:523:22>
| `-NonNullAttr 0x559cdab27350 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab27558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559cdab27398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cdab27418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x559cdab27608 <line:526:22>
| `-NonNullAttr 0x559cdab27660 <col:63, col:77> 1
|-FunctionDecl 0x559cdab27808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab276a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559cdab27728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x559cdab278b8 <line:529:22>
| `-NonNullAttr 0x559cdab27910 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab27b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559cdab27958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cdab27a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x559cdab27bb0 <line:531:22>
| `-NonNullAttr 0x559cdab27c08 <col:63, col:77> 1
|-FunctionDecl 0x559cdab27db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab27c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559cdab27cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x559cdab27e68 <line:535:22>
| `-NonNullAttr 0x559cdab27ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab28048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559cdab27f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cdab27f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x559cdab280f8 <line:538:22>
| `-NonNullAttr 0x559cdab28150 <col:63, col:77> 1
|-FunctionDecl 0x559cdab282f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab28198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559cdab28218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559cdab283a8 <line:542:22>
| `-NonNullAttr 0x559cdab28400 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab28588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559cdab28448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cdab284c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x559cdab28638 <line:545:22>
| `-NonNullAttr 0x559cdab28690 <col:63, col:77> 1
|-FunctionDecl 0x559cdab28878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x559cdab286d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cdab28758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x559cdab28928 <line:548:22>
| `-NonNullAttr 0x559cdab28980 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab29b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559cdab289c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cdab29a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x559cdab29be8 <line:551:22>
| `-NonNullAttr 0x559cdab29c40 <col:63, col:77> 1
|-FunctionDecl 0x559cdab29f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x559cdab29d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559cdab29e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x559cdab2a028 <col:29>
| `-NonNullAttr 0x559cdab2a080 <col:70, col:84> 1
|-FunctionDecl 0x559cdab2a1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cdab2a0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cdab2a2a0 <line:556:22>
| `-NonNullAttr 0x559cdab2a2f8 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2a400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cdab2a348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cdab2a4a8 <line:558:22>
| `-NonNullAttr 0x559cdab2a500 <col:52, col:66> 1
|-FunctionDecl 0x559cdab2a600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cdab2a548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cdab2a6a8 <line:560:19>
| `-NonNullAttr 0x559cdab2a700 <col:49, col:63> 1
|-FunctionDecl 0x559cdab2a938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559cdab2a748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559cdab2a7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559cdab2a9e8 <col:39>
| `-NonNullAttr 0x559cdab2aa70 <col:69, col:86> 1 2
|-FunctionDecl 0x559cdab2ab70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cdab2aab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cdab2ac18 <line:565:22>
| `-NonNullAttr 0x559cdab2ac70 <col:52, col:66> 1
|-FunctionDecl 0x559cdab2ad70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cdab2acb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cdab2ae18 <line:567:22>
| `-NonNullAttr 0x559cdab2ae70 <col:52, col:66> 1
|-FunctionDecl 0x559cdab2b028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559cdab2aeb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559cdab2af48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559cdab2b0d8 <col:39>
| `-NonNullAttr 0x559cdab2b130 <col:69, col:86> 1 2
|-FunctionDecl 0x559cdab2b230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cdab2b178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cdab2b2d8 <line:572:22>
| `-NonNullAttr 0x559cdab2b330 <col:52, col:66> 1
|-FunctionDecl 0x559cdab2b518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559cdab2b3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559cdab2b5c0 <line:574:22>
| `-NonNullAttr 0x559cdab2b618 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2b720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559cdab2b668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559cdab2b7c8 <line:576:22>
| `-NonNullAttr 0x559cdab2b820 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2ba80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab2b868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559cdab2b8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x559cdab2bb30 <line:580:22>
| `-NonNullAttr 0x559cdab2bb88 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab2bd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559cdab2bbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559cdab2bc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x559cdab2be48 <line:583:22>
| `-NonNullAttr 0x559cdab2bea0 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2c048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab2bee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559cdab2bf68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x559cdab2c0f8 <line:587:22>
| `-NonNullAttr 0x559cdab2c150 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab2c2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559cdab2c198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559cdab2c218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559cdab2c388 <col:36>
| `-NonNullAttr 0x559cdab2c3e0 <col:77, col:91> 1
|-FunctionDecl 0x559cdab2c718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559cdab2c4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559cdab2c5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559cdab2c7c8 <line:592:22>
| `-NonNullAttr 0x559cdab2c820 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2c998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559cdab2c868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559cdab2ca40 <line:594:22>
| `-NonNullAttr 0x559cdab2cac0 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2cbc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559cdab2cb08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559cdab2cc68 <line:596:22>
| `-NonNullAttr 0x559cdab2ccc0 <col:52, col:66> 1
|-FunctionDecl 0x559cdab2cdc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559cdab2cd08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559cdab2ce68 <line:598:22>
| `-NonNullAttr 0x559cdab2cec0 <col:52, col:66> 1
|-FunctionDecl 0x559cdab2d0e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559cdab2cf08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559cdab2cf80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559cdab2d198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x559cdab2d4c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559cdab2d218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559cdab2d290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559cdab2d320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559cdab2d580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x559cdab2d798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559cdab2d660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559cdab2d840 <line:607:22>
| `-NonNullAttr 0x559cdab2d898 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2d9a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559cdab2d8e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559cdab2da48 <line:609:22>
| `-NonNullAttr 0x559cdab2dad0 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2dcf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab2db18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559cdab2db98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559cdab2dda8 <line:613:22>
| `-NonNullAttr 0x559cdab2de00 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab2e008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559cdab2de48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559cdab2dec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559cdab2e0b8 <col:37>
| `-NonNullAttr 0x559cdab2e110 <col:78, col:92> 1
|-FunctionDecl 0x559cdab2e328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559cdab2e158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559cdab2e200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559cdab2e3d8 <line:619:22>
| `-NonNullAttr 0x559cdab2e430 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab2e5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559cdab2e478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559cdab2e4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559cdab2e6a8 <line:622:22>
| `-NonNullAttr 0x559cdab2e700 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2e9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559cdab2e7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559cdab2e860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559cdab2ea58 <line:624:22>
| `-NonNullAttr 0x559cdab2eae0 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2ec58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559cdab2eb28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559cdab2ed00 <line:626:22>
| `-NonNullAttr 0x559cdab2ed58 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2ee60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559cdab2eda8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559cdab2ef08 <line:628:22>
| `-NonNullAttr 0x559cdab2ef60 <col:52, col:66> 1
|-FunctionDecl 0x559cdab2f060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559cdab2efa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559cdab2f108 <line:630:22>
| `-NonNullAttr 0x559cdab2f160 <col:52, col:66> 1
|-FunctionDecl 0x559cdab2f260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559cdab2f1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559cdab2f308 <line:632:22>
| `-NonNullAttr 0x559cdab2f360 <col:52, col:66> 1
|-FunctionDecl 0x559cdab2f738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x559cdab2f440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559cdab2f550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559cdab2f5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x559cdab2f7f0 <line:636:22>
| `-NonNullAttr 0x559cdab2f848 <col:63, col:77> 1
|-FunctionDecl 0x559cdab2f9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559cdab2f898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559cdab2fa70 <line:638:22>
| `-NonNullAttr 0x559cdab30b00 <col:63, col:77> 1
|-FunctionDecl 0x559cdab30c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559cdab30b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559cdab30ca8 <line:640:22>
| `-NonNullAttr 0x559cdab30d00 <col:52, col:66> 1
|-FunctionDecl 0x559cdab30ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559cdab30db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559cdab30f90 <line:642:22>
| `-NonNullAttr 0x559cdab30fe8 <col:63, col:77> 1
|-FunctionDecl 0x559cdab310f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559cdab31038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559cdab31198 <line:644:22>
| `-NonNullAttr 0x559cdab311f0 <col:63, col:77> 1
|-FunctionDecl 0x559cdab31418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cdab31238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559cdab312b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559cdab314c8 <line:648:22>
| `-NonNullAttr 0x559cdab31520 <col:63, col:80> 1 2
|-FunctionDecl 0x559cdab31728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559cdab31568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559cdab315e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559cdab317d8 <line:651:22>
| `-NonNullAttr 0x559cdab31830 <col:63, col:77> 1
|-FunctionDecl 0x559cdab31b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x559cdab31910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x559cdab31a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x559cdab31c48 <line:654:22>
| `-NonNullAttr 0x559cdab31ca0 <col:63, col:77> 1
|-FunctionDecl 0x559cdab31df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559cdab31ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559cdab31ea0 <col:69>
|-FunctionDecl 0x559cdab32018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559cdab31f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559cdab320c0 <col:72>
|-FunctionDecl 0x559cdab322f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559cdab32128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559cdab321d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559cdab323a8 <col:44>
|-FunctionDecl 0x559cdab325c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559cdab32410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559cdab32488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559cdab32678 <line:661:22>
| `-NonNullAttr 0x559cdab326d0 <col:63, col:77> 2
|-FunctionDecl 0x559cdab32b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559cdab327b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559cdab328c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559cdab329d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559cdab32be8 <col:47>
|-FunctionDecl 0x559cdab32cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559cdab32c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559cdab32e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559cdab32db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559cdab32f10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559cdab32fd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559cdab33090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559cdab33148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559cdab331c8 prev 0x559cdab33148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559cdab33230 <col:24> 'int' 0
|-VarDecl 0x559cdab33268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x559cdab332e8 prev 0x559cdab33268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x559cdab33350 <col:27> 'int' 0
|-VarDecl 0x559cdab33388 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x559cdab33408 prev 0x559cdab33388 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x559cdab33470 <col:27> 'int' 0
|-VarDecl 0x559cdab334a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x559cdab33528 prev 0x559cdab334a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x559cdab33590 <col:27> 'int' 0
|-VarDecl 0x559cdab335c8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x559cdab33648 prev 0x559cdab335c8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x559cdab336b0 <col:27> 'int' 0
|-VarDecl 0x559cdab336e0 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559cdab33758 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559cdab337d8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x559cdab33858 prev 0x559cdab337d8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559cdab338c0 <col:9> 'int' 0
|-VarDecl 0x559cdab338f8 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x559cdab33978 prev 0x559cdab338f8 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559cdab339e0 <col:9> 'int' 0
|-VarDecl 0x559cdab33a10 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x559cdab33b00 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x559cdab33b78 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x559cdab33bf0 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x559cdab33c68 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x559cdab33ce0 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x559cdab33d58 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x559cdab33dd0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x559cdab33e48 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x559cdab33ec8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x559cdab33f48 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x559cdab33fc0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x559cdab34040 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x559cdab340b8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x559cdab34130 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559cdab341a8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559cdab342c0 prev 0x559cdab32cf0 <line:703:1, line:746:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559cdab34228 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559cdab38578 <line:704:1, line:746:1>
|   |-CallExpr 0x559cdab343d8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cdab343c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab34368 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cdab34450 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559cdab343f8 <col:3> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x559cdab34438 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab34418 <col:15> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x559cdab344b0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559cdab34470 <col:3> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x559cdab34490 <col:15> 'int' 1
|   |-BinaryOperator 0x559cdab34528 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab344d0 <col:3> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab34510 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab344f0 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cdab345c0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab34548 <col:3> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559cdab34598 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559cdab34568 <col:27> 'int' 1
|   |-CallExpr 0x559cdab34748 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559cdab34730 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559cdab345e0 <col:3> 'void (int)' Function 0x559cdaad9d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559cdab346e0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559cdab346c0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559cdab346a0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559cdab34658 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559cdab34640 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559cdab34600 <col:23> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559cdab34688 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559cdab34670 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559cdab34620 <col:41> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cdab347c8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab34770 <col:3> '_Bool' lvalue Var 0x559cdab33ce0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab347b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab34790 <col:20> '_Bool' lvalue Var 0x559cdab33b78 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559cdab34840 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab347e8 <col:3> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab34828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab34808 <col:20> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559cdab348b8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab34860 <col:3> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab348a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab34880 <col:20> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559cdab34950 <line:714:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab348d8 <col:3> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x559cdab34928 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559cdab348f8 <col:27> 'int' 1
|   |-CallExpr 0x559cdab349a8 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cdab34990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab34970 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cdab34a00 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cdab349e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab349c8 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cdab34ac8 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab34a20 <col:3> '_Bool' lvalue Var 0x559cdab34130 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x559cdab34aa8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559cdab34a90 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559cdab34a40 <col:19> '_Bool (void)' Function 0x559cdaad9770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559cdab34b88 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab34b10 <col:3> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x559cdab34b68 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559cdab34b50 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559cdab34b30 <col:19> '_Bool (void)' Function 0x559cdaad9770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559cdab34c00 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab34ba8 <col:3> '_Bool' lvalue Var 0x559cdab33a10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab34be8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab34bc8 <col:21> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559cdab34c78 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559cdab34c20 <col:3> 'int' lvalue Var 0x559cdab33b00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559cdab34c60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab34c40 <col:15> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   |-BinaryOperator 0x559cdab350b0 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559cdab34c98 <col:3> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   | `-ConditionalOperator 0x559cdab35080 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559cdab34ea8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559cdab34dc8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559cdab34cf0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559cdab34cd8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559cdab34cb8 <col:8> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559cdab34da8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559cdab34d40 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559cdab34d28 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559cdab34d08 <col:27> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x559cdab34d90 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559cdab34d78 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559cdab34d58 <col:46> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559cdab34e88 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559cdab34e20 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559cdab34e08 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559cdab34de8 <col:65> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x559cdab34e70 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559cdab34e58 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559cdab34e38 <col:84> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559cdab35068 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab34ec8 <col:101> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   |   `-ParenExpr 0x559cdab35048 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559cdab35018 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559cdab34f88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559cdab34f40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559cdab34f28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559cdab34ee8 <col:106> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559cdab34f70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559cdab34f58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559cdab34f08 <col:124> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559cdab34fe8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cdab34fa8 <col:141> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559cdab35000 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab34fc8 <col:153> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x559cdab355c0 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559cdab350d0 <col:3> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x559cdab35590 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559cdab35560 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559cdab35548 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559cdab350f0 <col:15> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559cdab35578 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab35110 <col:31> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x559cdab35528 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559cdab354f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559cdab35320 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559cdab35240 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559cdab35168 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559cdab35150 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559cdab35130 <col:45> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559cdab35220 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559cdab351b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559cdab351a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559cdab35180 <col:64> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x559cdab35208 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559cdab351f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559cdab351d0 <col:83> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559cdab35300 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559cdab35298 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559cdab35280 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559cdab35260 <col:102> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x559cdab352e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559cdab352d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559cdab352b0 <col:121> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559cdab354e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cdab35340 <col:138> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x559cdab354c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559cdab35490 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559cdab35400 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559cdab353b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559cdab353a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559cdab35360 <col:151> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559cdab353e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559cdab353d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559cdab35380 <col:169> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x559cdab35460 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559cdab35420 <col:186> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559cdab35478 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559cdab35440 <col:198> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x559cdab35ad0 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559cdab355e0 <col:3> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x559cdab35aa0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559cdab35a70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559cdab35a58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559cdab35600 <col:15> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559cdab35a88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab35620 <col:31> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x559cdab35a38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559cdab35a08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559cdab35830 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559cdab35750 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559cdab35678 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559cdab35660 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559cdab35640 <col:45> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559cdab35730 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559cdab356c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559cdab356b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559cdab35690 <col:64> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x559cdab35718 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559cdab35700 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559cdab356e0 <col:83> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559cdab35810 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559cdab357a8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559cdab35790 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559cdab35770 <col:102> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x559cdab357f8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559cdab357e0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559cdab357c0 <col:121> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559cdab359f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cdab35850 <col:138> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x559cdab359d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559cdab359a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559cdab35910 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559cdab358c8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559cdab358b0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559cdab35870 <col:151> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559cdab358f8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559cdab358e0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559cdab35890 <col:169> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x559cdab35970 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559cdab35930 <col:186> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559cdab35988 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559cdab35950 <col:198> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x559cdab36088 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab35af0 <col:3> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab36070 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab36040 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559cdab35ff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab35fe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab35b20 <col:20> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab36028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab36010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab35b40 <col:36> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559cdab35fc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559cdab35f90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559cdab35d50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cdab35c70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cdab35b98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cdab35b80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cdab35b60 <col:55> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cdab35c50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cdab35be8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cdab35bd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cdab35bb0 <col:74> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559cdab35c38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cdab35c20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cdab35c00 <col:93> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cdab35d30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cdab35cc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cdab35cb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cdab35c90 <col:112> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559cdab35d18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cdab35d00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cdab35ce0 <col:131> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559cdab35f78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cdab35f60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cdab35d70 <col:148> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559cdab35f40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559cdab35f10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559cdab35e30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cdab35de8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cdab35dd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cdab35d90 <col:166> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cdab35e18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cdab35e00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cdab35db0 <col:184> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559cdab35ec8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cdab35e80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cdab35e50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cdab35ef8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559cdab35ee0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559cdab35ea8 <col:212> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cdab36650 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab360a8 <col:3> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab36638 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab36608 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559cdab365c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab365a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab360c8 <col:20> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab365f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab365d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab360e8 <col:36> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559cdab36588 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559cdab36558 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559cdab362f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cdab36218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cdab36140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cdab36128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cdab36108 <col:55> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cdab361f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cdab36190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cdab36178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cdab36158 <col:74> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559cdab361e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cdab361c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cdab361a8 <col:93> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cdab362d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cdab36270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cdab36258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cdab36238 <col:112> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559cdab362c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cdab362a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cdab36288 <col:131> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559cdab36540 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cdab36528 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cdab36318 <col:148> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559cdab36508 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559cdab364d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559cdab363d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cdab36390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cdab36378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cdab36338 <col:166> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cdab363c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cdab363a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cdab36358 <col:184> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559cdab364a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cdab36428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cdab363f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cdab364c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559cdab36480 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559cdab36450 <col:219> 'int' 0
|   |-BinaryOperator 0x559cdab36c28 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab36670 <col:3> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab36c10 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab36be0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559cdab36b98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab36b80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab36690 <col:20> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab36bc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab36bb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab366b0 <col:36> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x559cdab36b60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559cdab36b30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559cdab368c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cdab367e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cdab36708 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cdab366f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cdab366d0 <col:55> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cdab367c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cdab36758 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cdab36740 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cdab36720 <col:74> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559cdab367a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cdab36790 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cdab36770 <col:93> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cdab368a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cdab36838 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cdab36820 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cdab36800 <col:112> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559cdab36888 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cdab36870 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cdab36850 <col:131> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559cdab36ae8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cdab36ad0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cdab368e0 <col:148> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x559cdab36ab0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559cdab36a80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559cdab369a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cdab36958 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cdab36940 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cdab36900 <col:166> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cdab36988 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cdab36970 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cdab36920 <col:184> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559cdab36a38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cdab369f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cdab369c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cdab36a68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559cdab36a50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559cdab36a18 <col:212> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559cdab371f0 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab36c48 <col:3> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab371d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab371a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559cdab37160 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab37148 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab36c68 <col:20> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab37190 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab37178 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab36c88 <col:36> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x559cdab37128 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559cdab370f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559cdab36e98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cdab36db8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cdab36ce0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cdab36cc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cdab36ca8 <col:55> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cdab36d98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cdab36d30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cdab36d18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cdab36cf8 <col:74> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x559cdab36d80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cdab36d68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cdab36d48 <col:93> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cdab36e78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cdab36e10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cdab36df8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cdab36dd8 <col:112> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x559cdab36e60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cdab36e48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cdab36e28 <col:131> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x559cdab370e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cdab370c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cdab36eb8 <col:148> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x559cdab370a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559cdab37078 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559cdab36f78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cdab36f30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cdab36f18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cdab36ed8 <col:166> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cdab36f60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cdab36f48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cdab36ef8 <col:184> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x559cdab37048 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cdab36fc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cdab36f98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cdab37060 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559cdab37020 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559cdab36ff0 <col:219> 'int' 0
|   |-BinaryOperator 0x559cdab37268 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559cdab37210 <col:3> 'int' lvalue Var 0x559cdab332e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x559cdab37250 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab37230 <col:25> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   |-BinaryOperator 0x559cdab37398 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559cdab37288 <col:3> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   | `-ConditionalOperator 0x559cdab37368 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559cdab37320 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559cdab37308 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559cdab372a8 <col:7> '_Bool' lvalue Var 0x559cdab33a10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559cdab37338 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab372c8 <col:25> 'int' lvalue Var 0x559cdab33b00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559cdab37350 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559cdab372e8 <col:37> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   |-BinaryOperator 0x559cdab37430 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab373b8 <col:3> '_Bool' lvalue Var 0x559cdab33a10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559cdab37408 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559cdab373d8 <col:28> 'int' 0
|   |-CallExpr 0x559cdab37488 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cdab37470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab37450 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cdab374e0 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cdab374c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab374a8 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cdab37558 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559cdab37500 <col:3> 'int' lvalue Var 0x559cdab33408 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x559cdab37540 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab37520 <col:25> 'int' lvalue Var 0x559cdab33858 'x' 'int'
|   |-CallExpr 0x559cdab375b0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cdab37598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab37578 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cdab37608 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cdab375f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab375d0 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cdab378f0 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559cdab37628 <col:3> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   | `-ConditionalOperator 0x559cdab378c0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559cdab376e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559cdab376a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559cdab37688 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559cdab37648 <col:7> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559cdab376d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559cdab376b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559cdab37668 <col:25> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559cdab378a8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab37708 <col:42> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x559cdab37888 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559cdab37858 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559cdab377c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559cdab37780 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559cdab37768 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559cdab37728 <col:55> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559cdab377b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559cdab37798 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559cdab37748 <col:73> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559cdab37828 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cdab377e8 <col:90> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559cdab37840 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab37808 <col:102> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   |-BinaryOperator 0x559cdab37af8 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab37910 <col:3> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab37ae0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab37ab0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cdab379d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cdab37988 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cdab37970 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cdab37930 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cdab379b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cdab379a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cdab37950 <col:38> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab37a68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cdab37a20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cdab379f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cdab37a98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cdab37a80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab37a48 <col:66> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cdab37e08 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab37b40 <col:3> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab37df0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab37dc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cdab37ce0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cdab37c00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cdab37bb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cdab37ba0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cdab37b60 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cdab37be8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cdab37bd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cdab37b80 <col:38> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559cdab37cc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cdab37c78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cdab37c60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cdab37c20 <col:56> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cdab37ca8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cdab37c90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cdab37c40 <col:74> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab37d78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cdab37d30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cdab37d00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cdab37da8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cdab37d90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab37d58 <col:102> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559cdab38010 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab37e28 <col:3> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab37ff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab37fc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cdab37ee8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cdab37ea0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cdab37e88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cdab37e48 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cdab37ed0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cdab37eb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cdab37e68 <col:38> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab37f80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cdab37f38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cdab37f08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cdab37fb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cdab37f98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab37f60 <col:66> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559cdab382f8 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab38030 <col:3> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab382e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab382b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cdab381d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cdab380f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cdab380a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cdab38090 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cdab38050 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cdab380d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cdab380c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cdab38070 <col:38> '_Bool' lvalue Var 0x559cdab33bf0 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559cdab381b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cdab38168 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cdab38150 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cdab38110 <col:56> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cdab38198 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cdab38180 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cdab38130 <col:74> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab38268 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cdab38220 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cdab381f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cdab38298 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cdab38280 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab38248 <col:102> '_Bool' lvalue Var 0x559cdab33d58 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559cdab38350 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cdab38338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab38318 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cdab383a8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cdab38390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab38370 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cdab38460 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559cdab383c8 <col:3> 'int' lvalue Var 0x559cdab331c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559cdab38440 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559cdab38428 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab383e8 <col:22> 'int' lvalue Var 0x559cdab331c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559cdab38408 <col:41> 'int' 1
|   |-CallExpr 0x559cdab384b8 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cdab384a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab38480 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559cdab38568 <line:745:3, col:36>
|     `-CallExpr 0x559cdab38548 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559cdab38530 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559cdab384d8 <col:10> 'void *(void)' Function 0x559cdaad9ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559cdab38780 prev 0x559cdab32e48 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559cdab386e8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559cdab3c448 <line:748:1, line:782:1>
|   |-CallExpr 0x559cdab38860 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cdab38848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab38828 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cdab388c0 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559cdab38880 <col:3> 'int' lvalue Var 0x559cdab33858 'x' 'int'
|   | `-IntegerLiteral 0x559cdab388a0 <col:7> 'int' 1
|   |-CallExpr 0x559cdab38918 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cdab38900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab388e0 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cdab38970 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cdab38958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab38938 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cdab389e8 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559cdab38990 <col:3> 'int' lvalue Var 0x559cdab33528 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x559cdab389d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab389b0 <col:25> 'int' lvalue Var 0x559cdab33858 'x' 'int'
|   |-CallExpr 0x559cdab38a40 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cdab38a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab38a08 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cdab38a98 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cdab38a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab38a60 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cdab38b50 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab38ab8 <col:3> '_Bool' lvalue Var 0x559cdab34130 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x559cdab38b10 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559cdab38af8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559cdab38ad8 <col:19> '_Bool (void)' Function 0x559cdaad9770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559cdab38be8 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab38b70 <col:3> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x559cdab38bc8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x559cdab38bb0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x559cdab38b90 <col:19> '_Bool (void)' Function 0x559cdaad9770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x559cdab38c60 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab38c08 <col:3> '_Bool' lvalue Var 0x559cdab33a10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab38c48 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab38c28 <col:21> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559cdab38cd8 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559cdab38c80 <col:3> 'int' lvalue Var 0x559cdab33b00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559cdab38cc0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab38ca0 <col:15> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   |-BinaryOperator 0x559cdab39110 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559cdab38cf8 <col:3> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   | `-ConditionalOperator 0x559cdab390e0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559cdab38f08 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559cdab38e28 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559cdab38d50 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559cdab38d38 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559cdab38d18 <col:8> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559cdab38e08 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559cdab38da0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559cdab38d88 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559cdab38d68 <col:27> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x559cdab38df0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559cdab38dd8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559cdab38db8 <col:46> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559cdab38ee8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559cdab38e80 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559cdab38e68 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559cdab38e48 <col:65> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x559cdab38ed0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559cdab38eb8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559cdab38e98 <col:84> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559cdab390c8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab38f28 <col:101> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   |   `-ParenExpr 0x559cdab390a8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559cdab39078 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559cdab38fe8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559cdab38fa0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559cdab38f88 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559cdab38f48 <col:106> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559cdab38fd0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559cdab38fb8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559cdab38f68 <col:124> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559cdab39048 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cdab39008 <col:141> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559cdab39060 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab39028 <col:153> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x559cdab39620 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559cdab39130 <col:3> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x559cdab395f0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559cdab395c0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559cdab395a8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559cdab39150 <col:15> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559cdab395d8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab39170 <col:31> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x559cdab39588 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559cdab39558 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559cdab39380 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559cdab392a0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559cdab391c8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559cdab391b0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559cdab39190 <col:45> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559cdab39280 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559cdab39218 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559cdab39200 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559cdab391e0 <col:64> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x559cdab39268 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559cdab39250 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559cdab39230 <col:83> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559cdab39360 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559cdab392f8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559cdab392e0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559cdab392c0 <col:102> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x559cdab39348 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559cdab39330 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559cdab39310 <col:121> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559cdab39540 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cdab393a0 <col:138> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x559cdab39520 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559cdab394f0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559cdab39460 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559cdab39418 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559cdab39400 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559cdab393c0 <col:151> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559cdab39448 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559cdab39430 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559cdab393e0 <col:169> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x559cdab394c0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559cdab39480 <col:186> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559cdab394d8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559cdab394a0 <col:198> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x559cdab39b30 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559cdab39640 <col:3> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x559cdab39b00 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559cdab39ad0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559cdab39ab8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559cdab39660 <col:15> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559cdab39ae8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab39680 <col:31> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x559cdab39a98 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559cdab39a68 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559cdab39890 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559cdab397b0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559cdab396d8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559cdab396c0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559cdab396a0 <col:45> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559cdab39790 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559cdab39728 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559cdab39710 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559cdab396f0 <col:64> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x559cdab39778 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559cdab39760 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559cdab39740 <col:83> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559cdab39870 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559cdab39808 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559cdab397f0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559cdab397d0 <col:102> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x559cdab39858 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559cdab39840 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559cdab39820 <col:121> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559cdab39a50 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cdab398b0 <col:138> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x559cdab39a30 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559cdab39a00 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559cdab39970 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559cdab39928 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559cdab39910 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559cdab398d0 <col:151> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559cdab39958 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559cdab39940 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559cdab398f0 <col:169> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x559cdab399d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559cdab39990 <col:186> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559cdab399e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559cdab399b0 <col:198> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x559cdab3a0e8 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab39b60 <col:3> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab3a0d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab3a0a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559cdab3a058 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab3a040 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab39b80 <col:20> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab3a088 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab3a070 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab39ba0 <col:36> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559cdab3a020 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559cdab39ff0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559cdab39db0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cdab39cd0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cdab39bf8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cdab39be0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cdab39bc0 <col:55> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cdab39cb0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cdab39c48 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cdab39c30 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cdab39c10 <col:74> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559cdab39c98 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cdab39c80 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cdab39c60 <col:93> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cdab39d90 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cdab39d28 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cdab39d10 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cdab39cf0 <col:112> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559cdab39d78 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cdab39d60 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cdab39d40 <col:131> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559cdab39fd8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cdab39fc0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cdab39dd0 <col:148> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559cdab39fa0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559cdab39f70 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559cdab39e90 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cdab39e48 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cdab39e30 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cdab39df0 <col:166> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cdab39e78 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cdab39e60 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cdab39e10 <col:184> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559cdab39f28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cdab39ee0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cdab39eb0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cdab39f58 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559cdab39f40 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559cdab39f08 <col:212> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cdab3a6b0 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab3a108 <col:3> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab3a698 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab3a668 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559cdab3a620 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab3a608 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab3a128 <col:20> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab3a650 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab3a638 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab3a148 <col:36> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559cdab3a5e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559cdab3a5b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559cdab3a358 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cdab3a278 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cdab3a1a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cdab3a188 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cdab3a168 <col:55> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cdab3a258 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cdab3a1f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cdab3a1d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cdab3a1b8 <col:74> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559cdab3a240 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cdab3a228 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cdab3a208 <col:93> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cdab3a338 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cdab3a2d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cdab3a2b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cdab3a298 <col:112> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559cdab3a320 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cdab3a308 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cdab3a2e8 <col:131> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559cdab3a5a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cdab3a588 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cdab3a378 <col:148> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559cdab3a568 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559cdab3a538 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559cdab3a438 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cdab3a3f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cdab3a3d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cdab3a398 <col:166> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cdab3a420 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cdab3a408 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cdab3a3b8 <col:184> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559cdab3a508 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cdab3a488 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cdab3a458 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cdab3a520 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559cdab3a4e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559cdab3a4b0 <col:219> 'int' 0
|   |-BinaryOperator 0x559cdab3ac68 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab3a6d0 <col:3> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab3ac50 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab3ac20 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559cdab3abd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab3abc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab3a6f0 <col:20> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab3ac08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab3abf0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab3a710 <col:36> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x559cdab3aba0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559cdab3ab70 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559cdab3a920 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cdab3a840 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cdab3a768 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cdab3a750 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cdab3a730 <col:55> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cdab3a820 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cdab3a7b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cdab3a7a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cdab3a780 <col:74> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559cdab3a808 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cdab3a7f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cdab3a7d0 <col:93> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cdab3a900 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cdab3a898 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cdab3a880 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cdab3a860 <col:112> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559cdab3a8e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cdab3a8d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cdab3a8b0 <col:131> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559cdab3ab48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cdab3ab30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cdab3a940 <col:148> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x559cdab3ab10 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559cdab3aae0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559cdab3aa00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cdab3a9b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cdab3a9a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cdab3a960 <col:166> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cdab3a9e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cdab3a9d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cdab3a980 <col:184> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559cdab3aa98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cdab3aa50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cdab3aa20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cdab3aac8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559cdab3aab0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559cdab3aa78 <col:212> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559cdab3b230 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab3ac88 <col:3> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab3b218 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab3b1e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559cdab3b1a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab3b188 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab3aca8 <col:20> '_Bool' lvalue Var 0x559cdab341a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab3b1d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cdab3b1b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cdab3acc8 <col:36> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x559cdab3b168 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559cdab3b138 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559cdab3aed8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cdab3adf8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cdab3ad20 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cdab3ad08 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cdab3ace8 <col:55> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cdab3add8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cdab3ad70 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cdab3ad58 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cdab3ad38 <col:74> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559cdab3adc0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cdab3ada8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cdab3ad88 <col:93> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cdab3aeb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cdab3ae50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cdab3ae38 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cdab3ae18 <col:112> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559cdab3aea0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cdab3ae88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cdab3ae68 <col:131> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559cdab3b120 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cdab3b108 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cdab3aef8 <col:148> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x559cdab3b0e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559cdab3b0b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559cdab3afb8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cdab3af70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cdab3af58 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cdab3af18 <col:166> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cdab3afa0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cdab3af88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cdab3af38 <col:184> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559cdab3b088 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cdab3b008 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cdab3afd8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cdab3b0a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559cdab3b060 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559cdab3b030 <col:219> 'int' 0
|   |-BinaryOperator 0x559cdab3b2a8 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559cdab3b250 <col:3> 'int' lvalue Var 0x559cdab33648 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x559cdab3b290 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cdab3b270 <col:25> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   |-BinaryOperator 0x559cdab3b3d8 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559cdab3b2c8 <col:3> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   | `-ConditionalOperator 0x559cdab3b3a8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559cdab3b360 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559cdab3b348 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559cdab3b2e8 <col:7> '_Bool' lvalue Var 0x559cdab33a10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559cdab3b378 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab3b308 <col:25> 'int' lvalue Var 0x559cdab33b00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559cdab3b390 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559cdab3b328 <col:37> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   |-BinaryOperator 0x559cdab3b470 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab3b3f8 <col:3> '_Bool' lvalue Var 0x559cdab33a10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559cdab3b448 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559cdab3b418 <col:28> 'int' 0
|   |-CallExpr 0x559cdab3b4c8 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cdab3b4b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab3b490 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cdab3b520 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cdab3b508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab3b4e8 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cdab3b808 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559cdab3b540 <col:3> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   | `-ConditionalOperator 0x559cdab3b7d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559cdab3b600 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559cdab3b5b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559cdab3b5a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559cdab3b560 <col:7> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559cdab3b5e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559cdab3b5d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559cdab3b580 <col:25> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559cdab3b7c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab3b620 <col:42> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x559cdab3b7a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559cdab3b770 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559cdab3b6e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559cdab3b698 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559cdab3b680 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559cdab3b640 <col:55> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559cdab3b6c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559cdab3b6b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559cdab3b660 <col:73> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559cdab3b740 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cdab3b700 <col:90> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559cdab3b758 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab3b720 <col:102> 'int' lvalue Var 0x559cdab33978 'y' 'int'
|   |-BinaryOperator 0x559cdab3ba10 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab3b828 <col:3> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab3b9f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab3b9c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cdab3b8e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cdab3b8a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cdab3b888 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cdab3b848 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cdab3b8d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cdab3b8b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cdab3b868 <col:38> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab3b980 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cdab3b938 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cdab3b908 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cdab3b9b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cdab3b998 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab3b960 <col:66> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cdab3bd10 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab3ba30 <col:3> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab3bcf8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab3bcc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cdab3bbe8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cdab3baf0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cdab3baa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cdab3ba90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cdab3ba50 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cdab3bad8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cdab3bac0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cdab3ba70 <col:38> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559cdab3bbc8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cdab3bb80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cdab3bb50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cdab3bb10 <col:56> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cdab3bbb0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cdab3bb98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cdab3bb30 <col:74> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab3bc80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cdab3bc38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cdab3bc08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cdab3bcb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cdab3bc98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab3bc60 <col:102> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559cdab3bf18 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab3bd30 <col:3> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab3bf00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab3bed0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cdab3bdf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cdab3bda8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cdab3bd90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cdab3bd50 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cdab3bdd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cdab3bdc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cdab3bd70 <col:38> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab3be88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cdab3be40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cdab3be10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cdab3beb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cdab3bea0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab3be68 <col:66> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559cdab3c200 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cdab3bf38 <col:3> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559cdab3c1e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cdab3c1b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cdab3c0d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cdab3bff8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cdab3bfb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cdab3bf98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cdab3bf58 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cdab3bfe0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cdab3bfc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cdab3bf78 <col:38> '_Bool' lvalue Var 0x559cdab33c68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559cdab3c0b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cdab3c070 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cdab3c058 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cdab3c018 <col:56> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cdab3c0a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cdab3c088 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cdab3c038 <col:74> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cdab3c170 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cdab3c128 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cdab3c0f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cdab3c1a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cdab3c188 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cdab3c150 <col:102> '_Bool' lvalue Var 0x559cdab33dd0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x559cdab3c258 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cdab3c240 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab3c220 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cdab3c2b0 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cdab3c298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab3c278 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cdab3c368 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559cdab3c2d0 <col:3> 'int' lvalue Var 0x559cdab331c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559cdab3c348 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559cdab3c330 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cdab3c2f0 <col:22> 'int' lvalue Var 0x559cdab331c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559cdab3c310 <col:41> 'int' 1
|   |-CallExpr 0x559cdab3c3c0 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cdab3c3a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cdab3c388 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559cdab3c438 <line:781:3, col:36>
|     `-CallExpr 0x559cdab3c418 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559cdab3c400 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559cdab3c3e0 <col:10> 'void *(void)' Function 0x559cdaad9ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559cdab3c580 prev 0x559cdab32f10 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x559cdab3c620 <line:784:1, line:785:1>
|-FunctionDecl 0x559cdab3c650 prev 0x559cdab32fd0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x559cdab3c6f0 <line:787:1, line:788:1>
|-FunctionDecl 0x559cdab3c720 prev 0x559cdab33090 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x559cdab3c7c0 <line:790:1, line:791:1>
`-FunctionDecl 0x559cdab3c828 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x559cdab3e2b0 <line:793:1, line:814:1>
    |-DeclStmt 0x559cdab3c940 <line:794:3, col:15>
    | `-VarDecl 0x559cdab3c8d8 <col:3, col:13> col:13 used t8 'pthread_t':'unsigned long'
    |-CallExpr 0x559cdab3cb90 <line:795:3, col:51> 'int'
    | |-ImplicitCastExpr 0x559cdab3cb30 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cdab3c958 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559cdab1a5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559cdab3c998 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559cdab3c978 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559cdab3c8d8 't8' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559cdab3cbd0 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559cdab3ca10 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x559cdab3c9e8 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559cdab3c9b0 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x559cdab3cbe8 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cdab3ca30 <col:36> 'void *(void *)' Function 0x559cdab342c0 'P0' 'void *(void *)'
    | `-ParenExpr 0x559cdab3cab0 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x559cdab3ca88 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559cdab3ca50 <col:49> 'int' 0
    |-DeclStmt 0x559cdab3cc78 <line:796:3, col:15>
    | `-VarDecl 0x559cdab3cc10 <col:3, col:13> col:13 used t9 'pthread_t':'unsigned long'
    |-CallExpr 0x559cdab3ce20 <line:797:3, col:51> 'int'
    | |-ImplicitCastExpr 0x559cdab3ce08 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cdab3cc90 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559cdab1a5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559cdab3ccd0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559cdab3ccb0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559cdab3cc10 't9' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559cdab3ce60 <col:23, col:33> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559cdab3cd48 <col:23, col:33> 'void *'
    | |   `-CStyleCastExpr 0x559cdab3cd20 <col:24, col:32> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559cdab3cce8 <col:32> 'int' 0
    | |-ImplicitCastExpr 0x559cdab3ce78 <col:36> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cdab3cd68 <col:36> 'void *(void *)' Function 0x559cdab38780 'P1' 'void *(void *)'
    | `-ParenExpr 0x559cdab3cde8 <col:40, col:50> 'void *'
    |   `-CStyleCastExpr 0x559cdab3cdc0 <col:41, col:49> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559cdab3cd88 <col:49> 'int' 0
    |-CallExpr 0x559cdab3cec8 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559cdab3ceb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cdab3ce90 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559cdab3cf98 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559cdab3cee8 <col:3> '_Bool' lvalue Var 0x559cdab336e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559cdab3cf80 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559cdab3cf60 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559cdab3cf48 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559cdab3cf08 <col:21> 'int' lvalue Var 0x559cdab331c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559cdab3cf28 <col:41> 'int' 2
    |-CallExpr 0x559cdab3cff0 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559cdab3cfd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cdab3cfb8 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559cdab3d068 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559cdab3d050 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cdab3d010 <col:3> 'void (int)' Function 0x559cdaad9940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559cdab3d0a8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559cdab3d090 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559cdab3d030 <col:21> '_Bool' lvalue Var 0x559cdab336e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559cdab3d0f8 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559cdab3d0e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cdab3d0c0 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559cdab3d3e0 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559cdab3d118 <col:3> 'int' lvalue Var 0x559cdab33978 'y' 'int'
    | `-ConditionalOperator 0x559cdab3d3b0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559cdab3d1d8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559cdab3d190 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559cdab3d178 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559cdab3d138 <col:7> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559cdab3d1c0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559cdab3d1a8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559cdab3d158 <col:25> '_Bool' lvalue Var 0x559cdab33b78 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559cdab3d398 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559cdab3d1f8 <col:42> 'int' lvalue Var 0x559cdab33f48 'y$w_buff0' 'int'
    |   `-ParenExpr 0x559cdab3d378 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559cdab3d348 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559cdab3d2b8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559cdab3d270 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559cdab3d258 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559cdab3d218 <col:55> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559cdab3d2a0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559cdab3d288 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559cdab3d238 <col:73> '_Bool' lvalue Var 0x559cdab33ce0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559cdab3d318 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559cdab3d2d8 <col:90> 'int' lvalue Var 0x559cdab34040 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559cdab3d330 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559cdab3d2f8 <col:102> 'int' lvalue Var 0x559cdab33978 'y' 'int'
    |-BinaryOperator 0x559cdab3d5e8 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559cdab3d400 <col:3> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559cdab3d5d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559cdab3d5a0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559cdab3d4c0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559cdab3d478 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559cdab3d460 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559cdab3d420 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559cdab3d4a8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559cdab3d490 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559cdab3d440 <col:38> '_Bool' lvalue Var 0x559cdab33b78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559cdab3d558 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559cdab3d510 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559cdab3d4e0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559cdab3d588 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559cdab3d570 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559cdab3d538 <col:66> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559cdab3d8d0 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559cdab3d608 <col:3> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559cdab3d8b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559cdab3d888 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559cdab3d7a8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559cdab3d6c8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559cdab3d680 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559cdab3d668 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559cdab3d628 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559cdab3d6b0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559cdab3d698 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559cdab3d648 <col:38> '_Bool' lvalue Var 0x559cdab33b78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559cdab3d788 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559cdab3d740 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559cdab3d728 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559cdab3d6e8 <col:56> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559cdab3d770 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559cdab3d758 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559cdab3d708 <col:74> '_Bool' lvalue Var 0x559cdab33ce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559cdab3d840 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559cdab3d7f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559cdab3d7c8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559cdab3d870 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559cdab3d858 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559cdab3d820 <col:102> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559cdab3dad8 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559cdab3d8f0 <col:3> '_Bool' lvalue Var 0x559cdab33b78 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559cdab3dac0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559cdab3da90 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559cdab3d9b0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559cdab3d968 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559cdab3d950 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559cdab3d910 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559cdab3d998 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559cdab3d980 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559cdab3d930 <col:38> '_Bool' lvalue Var 0x559cdab33b78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559cdab3da48 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559cdab3da00 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559cdab3d9d0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559cdab3da78 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559cdab3da60 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559cdab3da28 <col:66> '_Bool' lvalue Var 0x559cdab33b78 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559cdab3ddd8 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559cdab3daf8 <col:3> '_Bool' lvalue Var 0x559cdab33ce0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559cdab3ddc0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559cdab3dd90 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559cdab3dcb0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559cdab3dbd0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559cdab3db70 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559cdab3db58 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559cdab3db18 <col:20> '_Bool' lvalue Var 0x559cdab33fc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559cdab3dbb8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559cdab3dba0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559cdab3db38 <col:38> '_Bool' lvalue Var 0x559cdab33b78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559cdab3dc90 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559cdab3dc48 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559cdab3dc30 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559cdab3dbf0 <col:56> '_Bool' lvalue Var 0x559cdab340b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559cdab3dc78 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559cdab3dc60 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559cdab3dc10 <col:74> '_Bool' lvalue Var 0x559cdab33ce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559cdab3dd48 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559cdab3dd00 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559cdab3dcd0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559cdab3dd78 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559cdab3dd60 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559cdab3dd28 <col:102> '_Bool' lvalue Var 0x559cdab33ce0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559cdab3de30 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559cdab3de18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cdab3ddf8 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559cdab3de88 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559cdab3de70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cdab3de50 <col:3> 'void ()' Function 0x559cdaad9fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559cdab3e158 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x559cdab3dea8 <col:3> '_Bool' lvalue Var 0x559cdab33758 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559cdab3e140 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559cdab3e128 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559cdab3e108 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x559cdab3e0e8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x559cdab3e050 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x559cdab3dfb8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x559cdab3df20 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x559cdab3df08 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x559cdab3dec8 <col:23> 'int' lvalue Var 0x559cdab332e8 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x559cdab3dee8 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x559cdab3df98 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x559cdab3df80 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x559cdab3df40 <col:51> 'int' lvalue Var 0x559cdab33408 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x559cdab3df60 <col:74> 'int' 0
    |         | `-BinaryOperator 0x559cdab3e030 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559cdab3e018 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559cdab3dfd8 <col:79> 'int' lvalue Var 0x559cdab33528 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x559cdab3dff8 <col:102> 'int' 1
    |         `-BinaryOperator 0x559cdab3e0c8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x559cdab3e0b0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559cdab3e070 <col:107> 'int' lvalue Var 0x559cdab33648 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x559cdab3e090 <col:130> 'int' 0
    |-CallExpr 0x559cdab3e1b0 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559cdab3e198 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cdab3e178 <col:3> 'void ()' Function 0x559cdaada060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559cdab3e228 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559cdab3e210 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cdab3e1d0 <col:3> 'void (int)' Function 0x559cdaad9d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559cdab3e268 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559cdab3e250 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559cdab3e1f0 <col:21> '_Bool' lvalue Var 0x559cdab33758 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559cdab3e2a0 <line:813:3, col:10>
      `-IntegerLiteral 0x559cdab3e280 <col:10> 'int' 0
