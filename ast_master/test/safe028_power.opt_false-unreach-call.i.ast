TranslationUnitDecl 0x55daf21bae18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55daf21bb6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55daf21bb3b0 '__int128'
|-TypedefDecl 0x55daf21bb748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55daf21bb3d0 'unsigned __int128'
|-TypedefDecl 0x55daf21bba50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55daf21bb820 'struct __NSConstantString_tag'
|   `-Record 0x55daf21bb7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55daf21bbaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55daf21bbab0 'char *'
|   `-BuiltinType 0x55daf21baeb0 'char'
|-TypedefDecl 0x55daf21fa650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55daf21bbd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55daf21bbbd0 'struct __va_list_tag'
|     `-Record 0x55daf21bbb50 '__va_list_tag'
|-FunctionDecl 0x55daf21fa770 <./test/safe028_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55daf21fa940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55daf21fa870 <col:31> col:34 'int'
|-FunctionDecl 0x55daf21faab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55daf21fabe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55daf21fad28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55daf21fac98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55daf21faf58 <col:40, col:99>
|   |-IfStmt 0x55daf21faf28 <col:42, col:88>
|   | |-UnaryOperator 0x55daf21fae08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55daf21fadf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55daf21fadd0 <col:47> 'int' lvalue ParmVar 0x55daf21fac98 'expression' 'int'
|   | `-CompoundStmt 0x55daf21faf10 <col:59, col:88>
|   |   `-LabelStmt 0x55daf21faef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55daf21fae88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55daf21fae70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55daf21fae20 <col:68> 'void () __attribute__((noreturn))' Function 0x55daf21fabe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55daf21faf40 <col:89>
|   `-ReturnStmt 0x55daf21faf48 <col:91>
|-FunctionDecl 0x55daf21fafa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55daf21fb060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55daf21fb3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55daf21fb118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55daf21fb198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55daf21fb218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55daf21fb298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55daf21fb4a0 <line:11:22>
|-FunctionDecl 0x55daf2221520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55daf21fb510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55daf21fb590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55daf2221350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55daf22213d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55daf22215e0 <line:14:22>
|-FunctionDecl 0x55daf2221890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55daf2221650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55daf22216d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55daf2221750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55daf2221948 <line:16:22>
|-TypedefDecl 0x55daf22219b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55daf21baf70 'unsigned char'
|-TypedefDecl 0x55daf2221a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55daf21baf90 'unsigned short'
|-TypedefDecl 0x55daf2221a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55daf21bafb0 'unsigned int'
|-TypedefDecl 0x55daf2221b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2221b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55daf21baed0 'signed char'
|-TypedefDecl 0x55daf2221be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55daf21baf70 'unsigned char'
|-TypedefDecl 0x55daf2221c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55daf21baef0 'short'
|-TypedefDecl 0x55daf2221cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55daf21baf90 'unsigned short'
|-TypedefDecl 0x55daf2221d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55daf21baf10 'int'
|-TypedefDecl 0x55daf2221da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55daf21bafb0 'unsigned int'
|-TypedefDecl 0x55daf2221e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf2221e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2221ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf2221f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2221fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2222048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55daf21bafb0 'unsigned int'
|-TypedefDecl 0x55daf22220b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55daf21bafb0 'unsigned int'
|-TypedefDecl 0x55daf2222128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2222198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2222208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55daf21bafb0 'unsigned int'
|-TypedefDecl 0x55daf2222278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf22222e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf2222378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf22223e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55daf21baf10 'int'
|-RecordDecl 0x55daf2222440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55daf2222588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55daf2222640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55daf22225e0 'struct __fsid_t' sugar
|   `-RecordType 0x55daf22224c0 '__fsid_t'
|     `-Record 0x55daf2222440 ''
|-TypedefDecl 0x55daf22226c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf2222738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf22227a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2222818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55daf21bafb0 'unsigned int'
|-TypedefDecl 0x55daf2222888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf22228f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55daf21bafb0 'unsigned int'
|-TypedefDecl 0x55daf2222968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf22229d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55daf21baf10 'int'
|-TypedefDecl 0x55daf2222a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55daf21baf10 'int'
|-TypedefDecl 0x55daf2222ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55daf21baf10 'int'
|-TypedefDecl 0x55daf2222b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55daf21bb630 'void *'
|   `-BuiltinType 0x55daf21bae70 'void'
|-TypedefDecl 0x55daf2222b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf2222c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf2222c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf2222ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2222d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2222dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2222e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2222ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf2222f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf2222f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf2222ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2223088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55daf2223050 '__off64_t' sugar
|   |-Typedef 0x55daf2222378 '__off64_t'
|   `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf2223180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55daf2223140 '__quad_t *'
|   `-TypedefType 0x55daf22230e0 '__quad_t' sugar
|     |-Typedef 0x55daf2221ef8 '__quad_t'
|     `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf22231f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55daf21bbab0 'char *'
|   `-BuiltinType 0x55daf21baeb0 'char'
|-TypedefDecl 0x55daf2223260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf22232d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55daf21bafb0 'unsigned int'
|-FunctionDecl 0x55daf2224458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55daf2224380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55daf2224768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55daf2224758 <line:73:3, col:34>
|     `-CallExpr 0x55daf2224718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55daf2224700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55daf2224690 <col:10> '<builtin fn type>' Function 0x55daf2224500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55daf2224740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55daf22246b0 <col:29> 'unsigned int' lvalue ParmVar 0x55daf2224380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55daf2224500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55daf22245a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55daf2224610 <col:10> Implicit
| `-ConstAttr 0x55daf2224668 <col:10> Implicit
|-FunctionDecl 0x55daf22248c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55daf22247b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55daf2224bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55daf2224bc8 <line:78:3, col:34>
|     `-CallExpr 0x55daf2224b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55daf2224b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55daf2224af8 <col:10> '<builtin fn type>' Function 0x55daf2224968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55daf2224bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55daf2224b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55daf22247b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55daf2224968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55daf2224a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55daf2224a78 <col:10> Implicit
| `-ConstAttr 0x55daf2224ad0 <col:10> Implicit
|-TypedefDecl 0x55daf2224c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-TypedefDecl 0x55daf2224c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55daf2224c60 '__time_t' sugar
|   |-Typedef 0x55daf2222888 '__time_t'
|   `-BuiltinType 0x55daf21baf30 'long'
|-RecordDecl 0x55daf2224cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55daf2224da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55daf2224e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55daf2224ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55daf2224e90 '__pid_t' sugar
|   |-Typedef 0x55daf22223e8 '__pid_t'
|   `-BuiltinType 0x55daf21baf10 'int'
|-RecordDecl 0x55daf2224f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55daf2224fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55daf2225030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55daf22250f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55daf2225158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-RecordDecl 0x55daf22251b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55daf2226480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55daf2226530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55daf22264d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55daf2225230 'cpu_set_t'
|     `-Record 0x55daf22251b0 ''
|-FunctionDecl 0x55daf2226808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55daf22265d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55daf22266e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55daf22268b8 <line:108:19>
|-FunctionDecl 0x55daf2226a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55daf2226920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55daf2226b38 <col:69>
|-FunctionDecl 0x55daf2226cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55daf2226ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55daf2226d58 <col:64>
|-FunctionDecl 0x55daf2227018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55daf2226dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55daf2226ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55daf22270c8 <line:114:22>
|-FunctionDecl 0x55daf22273b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55daf2227130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55daf2227228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55daf2227460 <col:88>
|-FunctionDecl 0x55daf2227718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55daf22274c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55daf2227548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55daf22275d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55daf22277d0 <col:62>
|-FunctionDecl 0x55daf2227948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55daf2227838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55daf22279f0 <col:63>
|-FunctionDecl 0x55daf2227b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55daf2227bb8 <col:47>
|-FunctionDecl 0x55daf2227cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55daf2227c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55daf2227d68 <col:69>
|-FunctionDecl 0x55daf2227e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55daf2227dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55daf2227f18 <col:69>
|-FunctionDecl 0x55daf22281d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55daf2227f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55daf22280b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55daf2228288 <col:88>
|-TypedefDecl 0x55daf2228318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55daf22282e0 '__clock_t' sugar
|   |-Typedef 0x55daf22226c8 '__clock_t'
|   `-BuiltinType 0x55daf21baf30 'long'
|-TypedefDecl 0x55daf22283c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55daf2228370 '__clockid_t' sugar
|   |-Typedef 0x55daf2222ab8 '__clockid_t'
|   `-BuiltinType 0x55daf21baf10 'int'
|-TypedefDecl 0x55daf2228458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55daf2228420 '__timer_t' sugar
|   |-Typedef 0x55daf2222b28 '__timer_t'
|   `-PointerType 0x55daf21bb630 'void *'
|     `-BuiltinType 0x55daf21bae70 'void'
|-RecordDecl 0x55daf22284b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55daf2228570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55daf22285d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55daf2228640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55daf22286a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55daf2228710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55daf2228778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55daf22287e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55daf2228848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55daf22288b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55daf2228918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55daf2228980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55daf22289d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55daf2228a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55daf2228b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55daf2228bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55daf2228d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55daf2228e20 <col:45>
|-FunctionDecl 0x55daf2229000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55daf2228ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55daf22290a8 <col:54>
|-FunctionDecl 0x55daf22292a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55daf2229110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55daf2229188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55daf2229358 <line:158:22>
| `-ConstAttr 0x55daf2229ff0 <col:63>
|-FunctionDecl 0x55daf222a1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55daf222a0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55daf222a298 <col:56>
|-FunctionDecl 0x55daf222a640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55daf222a308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55daf222a380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55daf222a400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55daf222a4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55daf222a700 <col:54>
|-RecordDecl 0x55daf222a758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55daf222a808 parent 0x55daf21bae18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55daf222aa68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55daf222ab08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55daf222ab70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55daf222abd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55daf222acc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55daf222ade8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55daf222ad90 'struct __locale_struct *'
|   `-ElaboratedType 0x55daf222ad20 'struct __locale_struct' sugar
|     `-RecordType 0x55daf222a7e0 'struct __locale_struct'
|       `-Record 0x55daf222a758 '__locale_struct'
|-TypedefDecl 0x55daf222ae98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55daf222ae60 '__locale_t' sugar
|   |-Typedef 0x55daf222ade8 '__locale_t'
|   `-PointerType 0x55daf222ad90 'struct __locale_struct *'
|     `-ElaboratedType 0x55daf222ad20 'struct __locale_struct' sugar
|       `-RecordType 0x55daf222a7e0 'struct __locale_struct'
|         `-Record 0x55daf222a758 '__locale_struct'
|-FunctionDecl 0x55daf222c2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55daf222af08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55daf222af80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55daf222c028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55daf222c0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55daf222c130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55daf222c368 <col:40>
|-FunctionDecl 0x55daf222c558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55daf222c430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55daf222c600 <col:66>
|-FunctionDecl 0x55daf222c710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55daf222c668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55daf222c7b8 <col:69>
|-FunctionDecl 0x55daf222c9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55daf222c820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55daf222c8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55daf222ca98 <col:52>
|-FunctionDecl 0x55daf222cc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55daf222cb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55daf222cb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55daf222ccf0 <col:55>
|-FunctionDecl 0x55daf222ce88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55daf222cd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55daf222cf30 <col:62>
|-FunctionDecl 0x55daf222d168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55daf222cf98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55daf222d210 <col:60>
|-FunctionDecl 0x55daf222d438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55daf222d290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55daf222d310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55daf222d4e8 <col:44>
|-FunctionDecl 0x55daf222d6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55daf222d550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55daf222d5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55daf222d7a8 <col:49>
|-VarDecl 0x55daf222d8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55daf222d928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55daf222d9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55daf222da70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55daf222dba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55daf222dc40 <col:42>
|-VarDecl 0x55daf222dcb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55daf222dd30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55daf222deb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55daf222dda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55daf222df60 <col:57>
|-FunctionDecl 0x55daf222e0d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55daf222dfe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55daf222e178 <col:56>
|-FunctionDecl 0x55daf222e288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55daf222e1f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55daf222e330 <col:59>
|-FunctionDecl 0x55daf222e438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55daf222e3a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55daf222e4e0 <col:48>
| `-ConstAttr 0x55daf222e538 <col:89>
|-FunctionDecl 0x55daf222e798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55daf222e5e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55daf222e678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55daf222e9f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55daf222e888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55daf222e918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55daf222eaa8 <col:88>
|-FunctionDecl 0x55daf222ec40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55daf222eb10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55daf222eba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55daf222ecf0 <col:88>
|-FunctionDecl 0x55daf222ef08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55daf222ed58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55daf222ede8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55daf222efb8 <line:209:22>
|-FunctionDecl 0x55daf222f358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55daf222f020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55daf222f0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55daf222f170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55daf222f200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55daf222f658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55daf222f458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55daf222f530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55daf222f708 <col:85>
|-FunctionDecl 0x55daf222faf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55daf222f770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55daf222f8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55daf222f9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55daf222fbb0 <col:52>
|-FunctionDecl 0x55daf222fd28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55daf222fc18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55daf222fdd0 <col:61>
|-FunctionDecl 0x55daf2230248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55daf222fe38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55daf222feb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55daf222ffe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55daf22300f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55daf2230308 <col:62>
|-FunctionDecl 0x55daf2230528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55daf2230370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55daf2230400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55daf22305d8 <line:222:22>
|-FunctionDecl 0x55daf22306d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55daf2230640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55daf2230780 <col:65>
|-TypedefDecl 0x55daf22307f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55daf21bafd0 'unsigned long'
|-RecordDecl 0x55daf2230848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55daf2230990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55daf22309f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55daf2230aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55daf2230a50 'union pthread_attr_t' sugar
|   `-RecordType 0x55daf22308d0 'union pthread_attr_t'
|     `-Record 0x55daf2230848 'pthread_attr_t'
|-RecordDecl 0x55daf2230b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55daf2230c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55daf2230cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55daf2230da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55daf2230d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55daf2230b80 'struct __pthread_internal_list'
|     `-Record 0x55daf2230b00 '__pthread_internal_list'
|-RecordDecl 0x55daf2230e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55daf2230eb8 parent 0x55daf21bae18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55daf2230f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55daf2230ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55daf2231060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55daf2235110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55daf2235178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55daf22351e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55daf2235268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55daf2235320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55daf2235410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55daf2235478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55daf2235600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55daf22355a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55daf2230e90 'pthread_mutex_t'
|     `-Record 0x55daf2230e10 ''
|-RecordDecl 0x55daf2235670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55daf22357b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55daf2235818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55daf22358d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55daf2235870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55daf22356f0 'pthread_mutexattr_t'
|     `-Record 0x55daf2235670 ''
|-RecordDecl 0x55daf2235940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55daf22359e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55daf2235ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55daf2235b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55daf2235b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55daf2235be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55daf2235c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55daf2235cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55daf2235d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55daf2235d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55daf2235e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./test/safe028_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./test/safe028_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55daf2235f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55daf2235f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55daf2237130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55daf2236070 'union pthread_cond_t' sugar
|   `-RecordType 0x55daf22359c0 'pthread_cond_t'
|     `-Record 0x55daf2235940 ''
|-RecordDecl 0x55daf22371a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55daf22372a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55daf2237308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55daf22373c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55daf2237360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55daf2237220 'pthread_condattr_t'
|     `-Record 0x55daf22371a0 ''
|-TypedefDecl 0x55daf2237448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55daf21bafb0 'unsigned int'
|-TypedefDecl 0x55daf22374b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55daf21baf10 'int'
|-RecordDecl 0x55daf2237510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55daf22375b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55daf2237680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55daf22376e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55daf2237750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55daf22377b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55daf2237820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55daf2237888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55daf22378f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55daf2237958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55daf22379c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55daf2237a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55daf2237a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55daf2237b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./test/safe028_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./test/safe028_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55daf2237be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55daf2237c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55daf2237da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55daf2237d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55daf2237590 'pthread_rwlock_t'
|     `-Record 0x55daf2237510 ''
|-RecordDecl 0x55daf2237e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55daf2237f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55daf2237fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55daf2238070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55daf2238010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55daf2237e90 'pthread_rwlockattr_t'
|     `-Record 0x55daf2237e10 ''
|-TypedefDecl 0x55daf2239140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55daf21baf14 'volatile int' volatile
|   `-BuiltinType 0x55daf21baf10 'int'
|-RecordDecl 0x55daf2239198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55daf22392e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55daf2239348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55daf2239400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55daf22393a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55daf2239220 'pthread_barrier_t'
|     `-Record 0x55daf2239198 ''
|-RecordDecl 0x55daf2239470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55daf2239570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55daf22395d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55daf2239690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55daf2239630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55daf22394f0 'pthread_barrierattr_t'
|     `-Record 0x55daf2239470 ''
|-TypedefDecl 0x55daf22397a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55daf2239740 'long [8]' 8 
|   `-BuiltinType 0x55daf21baf30 'long'
|-EnumDecl 0x55daf2239800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55daf22398c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55daf2239918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55daf2239968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55daf2239a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55daf2239a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55daf2239ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55daf2239b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55daf2239bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55daf2239b98 <col:26> 'int'
| |   `-DeclRefExpr 0x55daf2239b78 <col:26> 'int' EnumConstant 0x55daf2239a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55daf2239c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55daf2239c20 <col:29> 'int'
| |   `-DeclRefExpr 0x55daf2239c00 <col:29> 'int' EnumConstant 0x55daf2239a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55daf2239cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55daf2239ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55daf2239c88 <col:30> 'int' EnumConstant 0x55daf2239ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55daf2239d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55daf2239d30 <col:27> 'int'
|     `-DeclRefExpr 0x55daf2239d10 <col:27> 'int' EnumConstant 0x55daf2239bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55daf2239d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55daf2239e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55daf2239ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55daf2239ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x55daf2239eb8 <col:30> 'int' EnumConstant 0x55daf2239e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55daf2239f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55daf2239fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55daf2239fb0 <col:29> 'int'
|     `-DeclRefExpr 0x55daf2239f90 <col:29> 'int' EnumConstant 0x55daf2239f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55daf223a018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55daf223a0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55daf223a150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55daf223a1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55daf223a1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55daf223a2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55daf223a308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55daf223a358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55daf223a3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55daf223a3c8 <col:31> 'int'
|     `-DeclRefExpr 0x55daf223a3a8 <col:31> 'int' EnumConstant 0x55daf223a2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55daf223a430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55daf223a4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55daf223a548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55daf223a598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55daf223a668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55daf223a6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55daf223a708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55daf223a7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55daf223a828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55daf223a878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55daf223aab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55daf223ab20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55daf223ab88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55daf223aca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55daf223acf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55daf223adc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55daf223ae18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55daf223ae68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55daf223af38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55daf223af88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55daf223b5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55daf223b080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55daf223b1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55daf223b3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55daf223b420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55daf223b678 <col:47>
| |-NonNullAttr 0x55daf223b6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55daf223b708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55daf223b830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55daf223b760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55daf223ba88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55daf223b8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55daf223b968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55daf223bc58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55daf223bb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55daf223bd00 <col:60>
|-FunctionDecl 0x55daf223be50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55daf223bef0 <col:54>
| `-ConstAttr 0x55daf223bf48 <col:95>
|-FunctionDecl 0x55daf223d990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55daf223bf80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55daf223bff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55daf223da40 <line:395:19>
| `-ConstAttr 0x55daf223da98 <col:60>
|-FunctionDecl 0x55daf223dc68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55daf223db30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55daf223dd10 <col:71>
| `-NonNullAttr 0x55daf223dd68 <col:112, col:126> 1
|-FunctionDecl 0x55daf223de70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55daf223ddb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55daf223df18 <line:398:22>
| `-NonNullAttr 0x55daf223df70 <col:63, col:77> 1
|-FunctionDecl 0x55daf223e198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55daf223dfb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55daf223e038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55daf223e248 <line:401:22>
| `-NonNullAttr 0x55daf223e2a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf223e4a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55daf223e2e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55daf223e368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55daf223e558 <line:404:22>
| `-NonNullAttr 0x55daf223e5b0 <col:63, col:77> 1
|-FunctionDecl 0x55daf223e808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55daf223e5f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55daf223e6a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55daf223e8b8 <line:407:22>
| `-NonNullAttr 0x55daf223e910 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf223fb68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55daf223f9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55daf223fa28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55daf223fc18 <line:410:22>
| `-NonNullAttr 0x55daf223fc70 <col:63, col:77> 1
|-FunctionDecl 0x55daf223fea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55daf223fcb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55daf223fd48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55daf223ff58 <line:413:22>
| `-NonNullAttr 0x55daf223ffb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf22401e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55daf223fff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55daf2240088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55daf2240298 <col:37>
| `-NonNullAttr 0x55daf22402f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55daf22404d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf2240338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55daf22403b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55daf2240588 <line:419:22>
| `-NonNullAttr 0x55daf22405e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf2240768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55daf2240628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55daf22406a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55daf2240818 <line:421:22>
| `-NonNullAttr 0x55daf2240870 <col:63, col:77> 1
|-FunctionDecl 0x55daf2240a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf22408b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55daf2240938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55daf2240ae8 <line:424:22>
| `-NonNullAttr 0x55daf2240b40 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf2240cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55daf2240b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55daf2240c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55daf2240d78 <line:427:22>
| `-NonNullAttr 0x55daf2240dd0 <col:63, col:77> 1
|-FunctionDecl 0x55daf2240f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf2240e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55daf2240e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55daf2241028 <line:430:22>
| `-NonNullAttr 0x55daf2241080 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf2241208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55daf22410c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55daf2241148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55daf22412b8 <line:432:22>
| `-NonNullAttr 0x55daf2241310 <col:63, col:77> 1
|-FunctionDecl 0x55daf2241538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55daf2241358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55daf22413d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55daf22415e8 <line:435:22>
| |-NonNullAttr 0x55daf2241640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55daf2241678 <col:100> "" ""
|-FunctionDecl 0x55daf2241888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55daf22416c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55daf2241748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55daf2241938 <line:438:22>
| |-NonNullAttr 0x55daf2241990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55daf22419d8 <col:97> "" ""
|-FunctionDecl 0x55daf2241bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55daf2241a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55daf2241aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55daf2241c78 <line:441:22>
| `-NonNullAttr 0x55daf2241cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf2241e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55daf2241d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55daf2241d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55daf2241f00 <line:444:22>
| `-NonNullAttr 0x55daf2241f58 <col:63, col:77> 1
|-FunctionDecl 0x55daf2242248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55daf2241fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55daf2242028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55daf22420a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55daf2242300 <line:448:22>
| `-NonNullAttr 0x55daf2242358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55daf2242608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55daf22423b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55daf2242430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55daf22424a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55daf22426c0 <col:43>
| `-NonNullAttr 0x55daf2242718 <col:84, col:98> 1
|-FunctionDecl 0x55daf2242a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55daf2242768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55daf22427e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55daf2242878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55daf2242ad8 <line:453:22>
| `-NonNullAttr 0x55daf2242b30 <col:63, col:77> 3
|-FunctionDecl 0x55daf2242e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55daf2242b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55daf2242bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55daf2242c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55daf2242ec0 <line:457:22>
| `-NonNullAttr 0x55daf2242f18 <col:63, col:80> 2 3
|-FunctionDecl 0x55daf2243108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55daf2242f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55daf2242fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55daf22431b8 <line:459:22>
|-FunctionDecl 0x55daf2243588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55daf2243280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55daf2243420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55daf2243638 <col:52, col:69> 1 2
|-FunctionDecl 0x55daf22437e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55daf22436c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55daf2243740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55daf22439f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55daf22438a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55daf2243928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55daf2243b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55daf2243ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55daf2243c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55daf2243d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55daf2243dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55daf2243ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55daf2243f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55daf2244100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/safe028_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55daf22441f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55daf22442b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55daf2244250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55daf2243db0 '__pthread_unwind_buf_t'
| |   `-Record 0x55daf2243d28 ''
| `-AlignedAttr 0x55daf2244308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55daf2244380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55daf22444e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55daf2244548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55daf22445b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55daf2244618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55daf2244820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55daf2244710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55daf2244a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55daf22448d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55daf2244bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55daf2244ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55daf2244c68 <line:488:22>
|-RecordDecl 0x55daf2244cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55daf2244fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55daf2244e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55daf2244eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55daf2245088 <col:86>
| `-ReturnsTwiceAttr 0x55daf22450e0 <col:12> Implicit
|-FunctionDecl 0x55daf2245408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55daf22451b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55daf22452c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55daf22454b8 <line:494:22>
| `-NonNullAttr 0x55daf2245510 <col:63, col:77> 1
|-FunctionDecl 0x55daf2245688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55daf2245558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55daf2245730 <line:496:22>
| `-NonNullAttr 0x55daf2245788 <col:63, col:77> 1
|-FunctionDecl 0x55daf2245890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55daf22457d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55daf2245938 <line:498:22>
| `-NonNullAttr 0x55daf2245990 <col:52, col:66> 1
|-FunctionDecl 0x55daf2246ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55daf2246a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55daf2246b80 <line:500:22>
| `-NonNullAttr 0x55daf2246bd8 <col:52, col:66> 1
|-FunctionDecl 0x55daf2246e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55daf2246c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55daf2246cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55daf2246ec8 <col:36>
| `-NonNullAttr 0x55daf2246f20 <col:66, col:83> 1 2
|-FunctionDecl 0x55daf2247020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55daf2246f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55daf22470c8 <line:505:22>
| `-NonNullAttr 0x55daf2247120 <col:52, col:66> 1
|-FunctionDecl 0x55daf22473b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf22471d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55daf2247250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55daf2247468 <line:509:22>
| `-NonNullAttr 0x55daf22474c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf2247788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55daf2247508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55daf2247588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55daf2247608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55daf2247840 <line:513:22>
| `-NonNullAttr 0x55daf2247898 <col:63, col:80> 1 3
|-FunctionDecl 0x55daf2247a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55daf22478e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55daf2247ad8 <line:515:22>
| `-NonNullAttr 0x55daf2247b30 <col:63, col:77> 1
|-FunctionDecl 0x55daf2247d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55daf2247be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55daf2247dc0 <line:517:22>
| `-NonNullAttr 0x55daf2247e18 <col:63, col:77> 1
|-FunctionDecl 0x55daf2247f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55daf2247e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55daf2247fc8 <line:519:22>
| `-NonNullAttr 0x55daf2248020 <col:63, col:77> 1
|-FunctionDecl 0x55daf2248248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf2248068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55daf22480e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55daf22482f8 <line:523:22>
| `-NonNullAttr 0x55daf2248350 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf2248558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55daf2248398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55daf2248418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55daf2248608 <line:526:22>
| `-NonNullAttr 0x55daf2248660 <col:63, col:77> 1
|-FunctionDecl 0x55daf2248808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf22486a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55daf2248728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55daf22488b8 <line:529:22>
| `-NonNullAttr 0x55daf2248910 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf2248b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55daf2248958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55daf2248a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55daf2248bb0 <line:531:22>
| `-NonNullAttr 0x55daf2248c08 <col:63, col:77> 1
|-FunctionDecl 0x55daf2248db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf2248c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55daf2248cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55daf2248e68 <line:535:22>
| `-NonNullAttr 0x55daf2248ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf2249048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55daf2248f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55daf2248f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55daf22490f8 <line:538:22>
| `-NonNullAttr 0x55daf2249150 <col:63, col:77> 1
|-FunctionDecl 0x55daf22492f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf2249198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55daf2249218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55daf22493a8 <line:542:22>
| `-NonNullAttr 0x55daf2249400 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf2249588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55daf2249448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55daf22494c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55daf2249638 <line:545:22>
| `-NonNullAttr 0x55daf2249690 <col:63, col:77> 1
|-FunctionDecl 0x55daf2249878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55daf22496d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55daf2249758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55daf2249928 <line:548:22>
| `-NonNullAttr 0x55daf2249980 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf224ab38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55daf22499c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55daf224aa78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55daf224abe8 <line:551:22>
| `-NonNullAttr 0x55daf224ac40 <col:63, col:77> 1
|-FunctionDecl 0x55daf224af78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55daf224ad20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55daf224ae30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55daf224b028 <col:29>
| `-NonNullAttr 0x55daf224b080 <col:70, col:84> 1
|-FunctionDecl 0x55daf224b1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55daf224b0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55daf224b2a0 <line:556:22>
| `-NonNullAttr 0x55daf224b2f8 <col:63, col:77> 1
|-FunctionDecl 0x55daf224b400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55daf224b348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55daf224b4a8 <line:558:22>
| `-NonNullAttr 0x55daf224b500 <col:52, col:66> 1
|-FunctionDecl 0x55daf224b600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55daf224b548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55daf224b6a8 <line:560:19>
| `-NonNullAttr 0x55daf224b700 <col:49, col:63> 1
|-FunctionDecl 0x55daf224b938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55daf224b748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55daf224b7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55daf224b9e8 <col:39>
| `-NonNullAttr 0x55daf224ba70 <col:69, col:86> 1 2
|-FunctionDecl 0x55daf224bb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55daf224bab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55daf224bc18 <line:565:22>
| `-NonNullAttr 0x55daf224bc70 <col:52, col:66> 1
|-FunctionDecl 0x55daf224bd70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55daf224bcb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55daf224be18 <line:567:22>
| `-NonNullAttr 0x55daf224be70 <col:52, col:66> 1
|-FunctionDecl 0x55daf224c028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55daf224beb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55daf224bf48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55daf224c0d8 <col:39>
| `-NonNullAttr 0x55daf224c130 <col:69, col:86> 1 2
|-FunctionDecl 0x55daf224c230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55daf224c178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55daf224c2d8 <line:572:22>
| `-NonNullAttr 0x55daf224c330 <col:52, col:66> 1
|-FunctionDecl 0x55daf224c518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55daf224c3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55daf224c5c0 <line:574:22>
| `-NonNullAttr 0x55daf224c618 <col:63, col:77> 1
|-FunctionDecl 0x55daf224c720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55daf224c668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55daf224c7c8 <line:576:22>
| `-NonNullAttr 0x55daf224c820 <col:63, col:77> 1
|-FunctionDecl 0x55daf224ca80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf224c868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55daf224c8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55daf224cb30 <line:580:22>
| `-NonNullAttr 0x55daf224cb88 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf224cd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55daf224cbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55daf224cc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55daf224ce48 <line:583:22>
| `-NonNullAttr 0x55daf224cea0 <col:63, col:77> 1
|-FunctionDecl 0x55daf224d048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf224cee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55daf224cf68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55daf224d0f8 <line:587:22>
| `-NonNullAttr 0x55daf224d150 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf224d2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55daf224d198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55daf224d218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55daf224d388 <col:36>
| `-NonNullAttr 0x55daf224d3e0 <col:77, col:91> 1
|-FunctionDecl 0x55daf224d718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55daf224d4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55daf224d5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55daf224d7c8 <line:592:22>
| `-NonNullAttr 0x55daf224d820 <col:63, col:77> 1
|-FunctionDecl 0x55daf224d998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55daf224d868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55daf224da40 <line:594:22>
| `-NonNullAttr 0x55daf224dac0 <col:63, col:77> 1
|-FunctionDecl 0x55daf224dbc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55daf224db08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55daf224dc68 <line:596:22>
| `-NonNullAttr 0x55daf224dcc0 <col:52, col:66> 1
|-FunctionDecl 0x55daf224ddc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55daf224dd08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55daf224de68 <line:598:22>
| `-NonNullAttr 0x55daf224dec0 <col:52, col:66> 1
|-FunctionDecl 0x55daf224e0e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55daf224df08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55daf224df80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55daf224e198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55daf224e4c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55daf224e218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55daf224e290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55daf224e320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55daf224e580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55daf224e798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55daf224e660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55daf224e840 <line:607:22>
| `-NonNullAttr 0x55daf224e898 <col:63, col:77> 1
|-FunctionDecl 0x55daf224e9a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55daf224e8e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55daf224ea48 <line:609:22>
| `-NonNullAttr 0x55daf224ead0 <col:63, col:77> 1
|-FunctionDecl 0x55daf224ecf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf224eb18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55daf224eb98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55daf224eda8 <line:613:22>
| `-NonNullAttr 0x55daf224ee00 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf224f008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55daf224ee48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55daf224eec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55daf224f0b8 <col:37>
| `-NonNullAttr 0x55daf224f110 <col:78, col:92> 1
|-FunctionDecl 0x55daf224f328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55daf224f158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55daf224f200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55daf224f3d8 <line:619:22>
| `-NonNullAttr 0x55daf224f430 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf224f5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55daf224f478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55daf224f4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55daf224f6a8 <line:622:22>
| `-NonNullAttr 0x55daf224f700 <col:63, col:77> 1
|-FunctionDecl 0x55daf224f9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55daf224f7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55daf224f860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55daf224fa58 <line:624:22>
| `-NonNullAttr 0x55daf224fae0 <col:63, col:77> 1
|-FunctionDecl 0x55daf224fc58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55daf224fb28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55daf224fd00 <line:626:22>
| `-NonNullAttr 0x55daf224fd58 <col:63, col:77> 1
|-FunctionDecl 0x55daf224fe60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55daf224fda8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55daf224ff08 <line:628:22>
| `-NonNullAttr 0x55daf224ff60 <col:52, col:66> 1
|-FunctionDecl 0x55daf2250060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55daf224ffa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55daf2250108 <line:630:22>
| `-NonNullAttr 0x55daf2250160 <col:52, col:66> 1
|-FunctionDecl 0x55daf2250260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55daf22501a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55daf2250308 <line:632:22>
| `-NonNullAttr 0x55daf2250360 <col:52, col:66> 1
|-FunctionDecl 0x55daf2250738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55daf2250440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55daf2250550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55daf22505d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55daf22507f0 <line:636:22>
| `-NonNullAttr 0x55daf2250848 <col:63, col:77> 1
|-FunctionDecl 0x55daf22509c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55daf2250898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55daf2250a70 <line:638:22>
| `-NonNullAttr 0x55daf2251b00 <col:63, col:77> 1
|-FunctionDecl 0x55daf2251c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55daf2251b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55daf2251ca8 <line:640:22>
| `-NonNullAttr 0x55daf2251d00 <col:52, col:66> 1
|-FunctionDecl 0x55daf2251ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55daf2251db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55daf2251f90 <line:642:22>
| `-NonNullAttr 0x55daf2251fe8 <col:63, col:77> 1
|-FunctionDecl 0x55daf22520f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55daf2252038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55daf2252198 <line:644:22>
| `-NonNullAttr 0x55daf22521f0 <col:63, col:77> 1
|-FunctionDecl 0x55daf2252418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55daf2252238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55daf22522b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55daf22524c8 <line:648:22>
| `-NonNullAttr 0x55daf2252520 <col:63, col:80> 1 2
|-FunctionDecl 0x55daf2252728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55daf2252568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55daf22525e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55daf22527d8 <line:651:22>
| `-NonNullAttr 0x55daf2252830 <col:63, col:77> 1
|-FunctionDecl 0x55daf2252b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55daf2252910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55daf2252a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55daf2252c48 <line:654:22>
| `-NonNullAttr 0x55daf2252ca0 <col:63, col:77> 1
|-FunctionDecl 0x55daf2252df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55daf2252ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55daf2252ea0 <col:69>
|-FunctionDecl 0x55daf2253018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55daf2252f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55daf22530c0 <col:72>
|-FunctionDecl 0x55daf22532f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55daf2253128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55daf22531d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55daf22533a8 <col:44>
|-FunctionDecl 0x55daf22535c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55daf2253410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55daf2253488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55daf2253678 <line:661:22>
| `-NonNullAttr 0x55daf22536d0 <col:63, col:77> 2
|-FunctionDecl 0x55daf2253b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55daf22537b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55daf22538c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55daf22539d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55daf2253be8 <col:47>
|-FunctionDecl 0x55daf2253cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55daf2253c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55daf2253e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55daf2253db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55daf2253fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55daf2253f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55daf2254068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55daf2254128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55daf22541e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55daf22542a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55daf2254320 prev 0x55daf22542a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55daf2254388 <col:24> 'int' 0
|-VarDecl 0x55daf22543c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55daf2254440 prev 0x55daf22543c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55daf22544a8 <col:27> 'int' 0
|-VarDecl 0x55daf22544e0 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55daf2254560 prev 0x55daf22544e0 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55daf22545c8 <col:27> 'int' 0
|-VarDecl 0x55daf22545f8 <line:678:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x55daf2254678 <line:679:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x55daf22546f0 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55daf2254768 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55daf22547e0 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55daf2254858 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55daf22548d0 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55daf2254948 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55daf22549c0 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55daf2254a38 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55daf2254b00 <line:688:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x55daf2254b80 <line:689:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x55daf2254c00 <line:690:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x55daf2254c78 <line:691:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55daf2254cf8 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x55daf2254d70 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55daf2254df0 <line:694:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55daf2254e70 prev 0x55daf2254df0 <line:695:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55daf2254ed8 <col:27> 'int' 0
|-VarDecl 0x55daf2254f08 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55daf2254f80 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55daf2255000 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x55daf2255080 prev 0x55daf2255000 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55daf22550e8 <col:9> 'int' 0
|-VarDecl 0x55daf2255118 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55daf2255198 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55daf2255210 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55daf2255288 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55daf2255300 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55daf2255378 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55daf22553f0 <line:706:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55daf2255468 <line:707:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55daf22554e0 <line:708:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55daf2255558 <line:709:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55daf22555d0 <line:710:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55daf2255650 <line:711:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55daf22556d0 <line:712:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55daf2255748 <line:713:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55daf22557c8 <line:714:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55daf2255840 <line:715:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55daf22558c0 <line:716:1, col:5> col:5 used y 'int'
|-VarDecl 0x55daf2255940 prev 0x55daf22558c0 <line:717:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55daf22559a8 <col:9> 'int' 0
|-VarDecl 0x55daf22559d8 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55daf2255a50 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55daf2256b20 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55daf2256c38 prev 0x55daf2253cf0 <line:721:1, line:750:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55daf2256ba0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55daf2259c88 <line:722:1, line:750:1>
|   |-CallExpr 0x55daf2256d48 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf2256d30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2256ce0 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55daf2256da8 <line:724:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55daf2256d68 <col:3> 'int' lvalue Var 0x55daf2255940 'y' 'int'
|   | `-IntegerLiteral 0x55daf2256d88 <col:7> 'int' 1
|   |-CallExpr 0x55daf2256e00 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf2256de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2256dc8 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55daf2256e58 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf2256e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2256e20 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55daf2256eb0 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf2256e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2256e78 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55daf2256f08 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf2256ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2256ed0 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55daf2256fd8 <line:729:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55daf2256f28 <col:3> '_Bool' lvalue Var 0x55daf22559d8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55daf2256fb8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55daf2256fa0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55daf2256f48 <col:19> '_Bool (void)' Function 0x55daf21fa770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55daf2257070 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55daf2256ff8 <col:3> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55daf2257050 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55daf2257038 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55daf2257018 <col:19> '_Bool (void)' Function 0x55daf21fa770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55daf22570e8 <line:731:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55daf2257090 <col:3> '_Bool' lvalue Var 0x55daf2255118 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55daf22570d0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf22570b0 <col:21> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55daf2257160 <line:732:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55daf2257108 <col:3> 'int' lvalue Var 0x55daf2255198 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55daf2257148 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf2257128 <col:15> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |-BinaryOperator 0x55daf2257598 <line:733:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55daf2257180 <col:3> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   | `-ConditionalOperator 0x55daf2257568 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55daf2257390 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55daf22572b0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55daf22571d8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55daf22571c0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55daf22571a0 <col:8> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55daf2257290 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55daf2257228 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55daf2257210 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55daf22571f0 <col:27> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55daf2257278 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55daf2257260 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55daf2257240 <col:46> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55daf2257370 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55daf2257308 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55daf22572f0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55daf22572d0 <col:65> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55daf2257358 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55daf2257340 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55daf2257320 <col:84> '_Bool' lvalue Var 0x55daf2255468 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55daf2257550 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf22573b0 <col:101> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |   `-ParenExpr 0x55daf2257530 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55daf2257500 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55daf2257470 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55daf2257428 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55daf2257410 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55daf22573d0 <col:106> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55daf2257458 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55daf2257440 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55daf22573f0 <col:124> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55daf22574d0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55daf2257490 <col:141> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55daf22574e8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55daf22574b0 <col:153> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55daf2257aa8 <line:734:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55daf22575b8 <col:3> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55daf2257a78 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55daf2257a48 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55daf2257a30 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55daf22575d8 <col:15> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55daf2257a60 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf22575f8 <col:31> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55daf2257a10 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55daf22579e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55daf2257808 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55daf2257728 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55daf2257650 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55daf2257638 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55daf2257618 <col:45> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55daf2257708 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55daf22576a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55daf2257688 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55daf2257668 <col:64> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55daf22576f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55daf22576d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55daf22576b8 <col:83> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55daf22577e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55daf2257780 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55daf2257768 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55daf2257748 <col:102> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55daf22577d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55daf22577b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55daf2257798 <col:121> '_Bool' lvalue Var 0x55daf2255468 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55daf22579c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55daf2257828 <col:138> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55daf22579a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55daf2257978 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55daf22578e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55daf22578a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55daf2257888 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55daf2257848 <col:151> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55daf22578d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55daf22578b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55daf2257868 <col:169> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55daf2257948 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55daf2257908 <col:186> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55daf2257960 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55daf2257928 <col:198> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55daf2257fe0 <line:735:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55daf2257ac8 <col:3> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55daf2257fb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55daf2257f80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55daf2257f68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55daf2257ae8 <col:15> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55daf2257f98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf2257b30 <col:31> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55daf2257f48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55daf2257f18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55daf2257d40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55daf2257c60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55daf2257b88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55daf2257b70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55daf2257b50 <col:45> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55daf2257c40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55daf2257bd8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55daf2257bc0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55daf2257ba0 <col:64> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55daf2257c28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55daf2257c10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55daf2257bf0 <col:83> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55daf2257d20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55daf2257cb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55daf2257ca0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55daf2257c80 <col:102> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55daf2257d08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55daf2257cf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55daf2257cd0 <col:121> '_Bool' lvalue Var 0x55daf2255468 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55daf2257f00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55daf2257d60 <col:138> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55daf2257ee0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55daf2257eb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55daf2257e20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55daf2257dd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55daf2257dc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55daf2257d80 <col:151> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55daf2257e08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55daf2257df0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55daf2257da0 <col:169> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55daf2257e80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55daf2257e40 <col:186> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55daf2257e98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55daf2257e60 <col:198> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55daf2258588 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55daf2258000 <col:3> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55daf2258570 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf2258540 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55daf22584f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf22584e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf2258020 <col:20> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf2258528 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf2258510 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf2258040 <col:36> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55daf22584c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55daf2258490 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55daf2258250 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55daf2258170 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55daf2258098 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55daf2258080 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55daf2258060 <col:55> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55daf2258150 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55daf22580e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55daf22580d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55daf22580b0 <col:74> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55daf2258138 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55daf2258120 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55daf2258100 <col:93> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55daf2258230 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55daf22581c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55daf22581b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55daf2258190 <col:112> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55daf2258218 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55daf2258200 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55daf22581e0 <col:131> '_Bool' lvalue Var 0x55daf2255468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55daf2258478 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55daf2258460 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf2258270 <col:148> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55daf2258440 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55daf2258410 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55daf2258330 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55daf22582e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55daf22582d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55daf2258290 <col:166> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55daf2258318 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55daf2258300 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55daf22582b0 <col:184> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55daf22583c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55daf2258380 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55daf2258350 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55daf22583f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55daf22583e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55daf22583a8 <col:212> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55daf2258b88 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55daf22585a8 <col:3> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55daf2258b70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf2258b40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55daf2258ac0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf2258aa8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf22585c8 <col:20> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf2258af0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf2258ad8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf22585e8 <col:36> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55daf2258a88 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55daf2258a58 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55daf22587f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55daf2258718 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55daf2258640 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55daf2258628 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55daf2258608 <col:55> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55daf22586f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55daf2258690 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55daf2258678 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55daf2258658 <col:74> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55daf22586e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55daf22586c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55daf22586a8 <col:93> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55daf22587d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55daf2258770 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55daf2258758 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55daf2258738 <col:112> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55daf22587c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55daf22587a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55daf2258788 <col:131> '_Bool' lvalue Var 0x55daf2255468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55daf2258a40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55daf2258a28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf2258818 <col:148> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55daf2258a08 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55daf22589d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55daf22588d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55daf2258890 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55daf2258878 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55daf2258838 <col:166> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55daf22588c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55daf22588a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55daf2258858 <col:184> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55daf22589a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55daf2258928 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55daf22588f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55daf22589c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55daf2258980 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55daf2258950 <col:219> 'int' 0
|   |-BinaryOperator 0x55daf2259130 <line:738:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55daf2258ba8 <col:3> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55daf2259118 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf22590e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55daf22590a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf2259088 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf2258bc8 <col:20> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf22590d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf22590b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf2258be8 <col:36> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55daf2259068 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55daf2259038 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55daf2258df8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55daf2258d18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55daf2258c40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55daf2258c28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55daf2258c08 <col:55> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55daf2258cf8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55daf2258c90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55daf2258c78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55daf2258c58 <col:74> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55daf2258ce0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55daf2258cc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55daf2258ca8 <col:93> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55daf2258dd8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55daf2258d70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55daf2258d58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55daf2258d38 <col:112> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55daf2258dc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55daf2258da8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55daf2258d88 <col:131> '_Bool' lvalue Var 0x55daf2255468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55daf2259020 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55daf2259008 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf2258e18 <col:148> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55daf2258fe8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55daf2258fb8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55daf2258ed8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55daf2258e90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55daf2258e78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55daf2258e38 <col:166> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55daf2258ec0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55daf2258ea8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55daf2258e58 <col:184> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55daf2258f70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55daf2258f28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55daf2258ef8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55daf2258fa0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55daf2258f88 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55daf2258f50 <col:212> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55daf22596f8 <line:739:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55daf2259150 <col:3> '_Bool' lvalue Var 0x55daf2255468 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55daf22596e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf22596b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55daf2259668 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf2259650 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf2259170 <col:20> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf2259698 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf2259680 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf2259190 <col:36> '_Bool' lvalue Var 0x55daf2255468 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55daf2259630 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55daf2259600 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55daf22593a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55daf22592c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55daf22591e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55daf22591d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55daf22591b0 <col:55> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55daf22592a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55daf2259238 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55daf2259220 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55daf2259200 <col:74> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55daf2259288 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55daf2259270 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55daf2259250 <col:93> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55daf2259380 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55daf2259318 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55daf2259300 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55daf22592e0 <col:112> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55daf2259368 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55daf2259350 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55daf2259330 <col:131> '_Bool' lvalue Var 0x55daf2255468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55daf22595e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55daf22595d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf22593c0 <col:148> '_Bool' lvalue Var 0x55daf2255468 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55daf22595b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55daf2259580 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55daf2259480 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55daf2259438 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55daf2259420 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55daf22593e0 <col:166> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55daf2259468 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55daf2259450 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55daf2259400 <col:184> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55daf2259550 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55daf22594d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55daf22594a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55daf2259568 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55daf2259528 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55daf22594f8 <col:219> 'int' 0
|   |-BinaryOperator 0x55daf2259770 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55daf2259718 <col:3> 'int' lvalue Var 0x55daf2254440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55daf2259758 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf2259738 <col:25> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |-BinaryOperator 0x55daf22598a0 <line:741:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55daf2259790 <col:3> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   | `-ConditionalOperator 0x55daf2259870 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55daf2259828 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55daf2259810 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55daf22597b0 <col:7> '_Bool' lvalue Var 0x55daf2255118 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55daf2259840 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf22597d0 <col:25> 'int' lvalue Var 0x55daf2255198 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55daf2259858 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55daf22597f0 <col:37> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |-BinaryOperator 0x55daf2259938 <line:742:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55daf22598c0 <col:3> '_Bool' lvalue Var 0x55daf2255118 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55daf2259910 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55daf22598e0 <col:28> 'int' 0
|   |-CallExpr 0x55daf2259990 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf2259978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2259958 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55daf22599e8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf22599d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf22599b0 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55daf2259a40 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf2259a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2259a08 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55daf2259a98 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf2259a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2259a60 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55daf2259b70 <line:747:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55daf2259ab8 <col:3> 'int' lvalue Var 0x55daf2254320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55daf2259b50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55daf2259b18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf2259ad8 <col:22> 'int' lvalue Var 0x55daf2254320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55daf2259af8 <col:41> 'int' 1
|   |-CallExpr 0x55daf2259bc8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf2259bb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2259b90 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55daf2259c78 <line:749:3, col:36>
|     `-CallExpr 0x55daf2259c58 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55daf2259c40 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55daf2259be8 <col:10> 'void *(void)' Function 0x55daf21faab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55daf2259e20 prev 0x55daf2253e48 <line:751:1, line:776:1> line:751:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55daf2259d88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55daf225b4b8 <line:752:1, line:776:1>
|   |-CallExpr 0x55daf2259f00 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf2259ee8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2259ec8 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55daf2259f78 <line:754:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55daf2259f20 <col:3> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55daf2259f60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf2259f40 <col:15> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55daf2259fd8 <line:755:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55daf2259f98 <col:3> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55daf2259fb8 <col:15> 'int' 1
|   |-BinaryOperator 0x55daf225a050 <line:756:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55daf2259ff8 <col:3> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225a038 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf225a018 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55daf225a0e8 <line:757:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225a070 <col:3> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55daf225a0c0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55daf225a090 <col:27> 'int' 1
|   |-CallExpr 0x55daf225a268 <line:758:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55daf225a250 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55daf225a108 <col:3> 'void (int)' Function 0x55daf21fad28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55daf225a208 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55daf225a1e8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55daf225a1c8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55daf225a180 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55daf225a168 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55daf225a128 <col:23> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55daf225a1b0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55daf225a198 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55daf225a148 <col:41> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55daf225a2e8 <line:759:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225a290 <col:3> '_Bool' lvalue Var 0x55daf22553f0 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225a2d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf225a2b0 <col:20> '_Bool' lvalue Var 0x55daf2255210 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55daf225a360 <line:760:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225a308 <col:3> '_Bool' lvalue Var 0x55daf2255468 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225a348 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf225a328 <col:20> '_Bool' lvalue Var 0x55daf2255288 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55daf225a3d8 <line:761:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225a380 <col:3> '_Bool' lvalue Var 0x55daf22554e0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225a3c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf225a3a0 <col:20> '_Bool' lvalue Var 0x55daf2255300 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55daf225a450 <line:762:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225a3f8 <col:3> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225a438 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf225a418 <col:20> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55daf225a4e8 <line:763:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225a470 <col:3> '_Bool' lvalue Var 0x55daf2255300 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55daf225a4c0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55daf225a490 <col:27> 'int' 1
|   |-CallExpr 0x55daf225a540 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf225a528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf225a508 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55daf225a598 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf225a580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf225a560 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55daf225a880 <line:766:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55daf225a5b8 <col:3> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   | `-ConditionalOperator 0x55daf225a850 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55daf225a678 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55daf225a630 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55daf225a618 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55daf225a5d8 <col:7> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55daf225a660 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55daf225a648 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55daf225a5f8 <col:25> '_Bool' lvalue Var 0x55daf2255300 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55daf225a838 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf225a698 <col:42> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55daf225a818 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55daf225a7e8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55daf225a758 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55daf225a710 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55daf225a6f8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55daf225a6b8 <col:55> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55daf225a740 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55daf225a728 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55daf225a6d8 <col:73> '_Bool' lvalue Var 0x55daf22554e0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55daf225a7b8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55daf225a778 <col:90> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55daf225a7d0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55daf225a798 <col:102> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |-BinaryOperator 0x55daf225aa88 <line:767:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225a8a0 <col:3> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225aa70 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf225aa40 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55daf225a960 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55daf225a918 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55daf225a900 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55daf225a8c0 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55daf225a948 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55daf225a930 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55daf225a8e0 <col:38> '_Bool' lvalue Var 0x55daf2255300 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf225a9f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55daf225a9b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55daf225a980 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55daf225aa28 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55daf225aa10 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55daf225a9d8 <col:66> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55daf225ad80 <line:768:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225aaa8 <col:3> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225ad68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf225ad38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55daf225ac58 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55daf225ab78 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55daf225ab20 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55daf225ab08 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55daf225aac8 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55daf225ab60 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55daf225ab38 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55daf225aae8 <col:38> '_Bool' lvalue Var 0x55daf2255300 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55daf225ac38 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55daf225abf0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55daf225abd8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55daf225ab98 <col:56> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55daf225ac20 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55daf225ac08 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55daf225abb8 <col:74> '_Bool' lvalue Var 0x55daf22554e0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf225acf0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55daf225aca8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55daf225ac78 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55daf225ad20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55daf225ad08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55daf225acd0 <col:102> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55daf225af88 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225ada0 <col:3> '_Bool' lvalue Var 0x55daf2255300 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225af70 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf225af40 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55daf225ae60 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55daf225ae18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55daf225ae00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55daf225adc0 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55daf225ae48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55daf225ae30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55daf225ade0 <col:38> '_Bool' lvalue Var 0x55daf2255300 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf225aef8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55daf225aeb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55daf225ae80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55daf225af28 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55daf225af10 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55daf225aed8 <col:66> '_Bool' lvalue Var 0x55daf2255300 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55daf225b270 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225afa8 <col:3> '_Bool' lvalue Var 0x55daf22554e0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225b258 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf225b228 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55daf225b148 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55daf225b068 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55daf225b020 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55daf225b008 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55daf225afc8 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55daf225b050 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55daf225b038 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55daf225afe8 <col:38> '_Bool' lvalue Var 0x55daf2255300 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55daf225b128 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55daf225b0e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55daf225b0c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55daf225b088 <col:56> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55daf225b110 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55daf225b0f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55daf225b0a8 <col:74> '_Bool' lvalue Var 0x55daf22554e0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf225b1e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55daf225b198 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55daf225b168 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55daf225b210 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55daf225b1f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55daf225b1c0 <col:102> '_Bool' lvalue Var 0x55daf22554e0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55daf225b2c8 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf225b2b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf225b290 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55daf225b320 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf225b308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf225b2e8 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55daf225b3d8 <line:773:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55daf225b340 <col:3> 'int' lvalue Var 0x55daf2254320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55daf225b3b8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55daf225b3a0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf225b360 <col:22> 'int' lvalue Var 0x55daf2254320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55daf225b380 <col:41> 'int' 1
|   |-CallExpr 0x55daf225b430 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf225b418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf225b3f8 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55daf225b4a8 <line:775:3, col:36>
|     `-CallExpr 0x55daf225b488 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55daf225b470 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55daf225b450 <col:10> 'void *(void)' Function 0x55daf21faab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55daf225b630 prev 0x55daf2253fa0 <line:777:1, line:812:1> line:777:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55daf225b598 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55daf2260c08 <line:778:1, line:812:1>
|   |-CallExpr 0x55daf225b710 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf225b6f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf225b6d8 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55daf225b7a8 <line:780:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225b730 <col:3> '_Bool' lvalue Var 0x55daf22559d8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55daf225b788 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55daf225b770 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55daf225b750 <col:19> '_Bool (void)' Function 0x55daf21fa770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55daf225b840 <line:781:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225b7c8 <col:3> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55daf225b820 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55daf225b808 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55daf225b7e8 <col:19> '_Bool (void)' Function 0x55daf21fa770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55daf225b8b8 <line:782:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225b860 <col:3> '_Bool' lvalue Var 0x55daf2255118 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225b8a0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf225b880 <col:21> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55daf225b930 <line:783:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55daf225b8d8 <col:3> 'int' lvalue Var 0x55daf2255198 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55daf225b918 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf225b8f8 <col:15> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |-BinaryOperator 0x55daf225b9c8 <line:784:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225b950 <col:3> '_Bool' lvalue Var 0x55daf2255a50 'weak$$choice1' '_Bool'
|   | `-CallExpr 0x55daf225b9a8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55daf225b990 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55daf225b970 <col:19> '_Bool (void)' Function 0x55daf21fa770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55daf225c408 <line:785:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x55daf225b9e8 <col:3> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   | `-ConditionalOperator 0x55daf225c3d8 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x55daf225ba40 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x55daf225ba28 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55daf225ba08 <col:8> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x55daf225c3c0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf225ba58 <col:25> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |   `-ParenExpr 0x55daf225c3a0 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x55daf225c370 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x55daf225bb18 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55daf225bad0 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55daf225bab8 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55daf225ba78 <col:30> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55daf225bb00 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55daf225bae8 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55daf225ba98 <col:48> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55daf225c358 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55daf225bb38 <col:65> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55daf225c338 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x55daf225c308 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x55daf225bcf0 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x55daf225bc80 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x55daf225bc10 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x55daf225bbf8 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x55daf225bbe0 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x55daf225bb70 <col:78> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x55daf225bbc8 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x55daf225bbb0 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x55daf225bb90 <col:97> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |           | | `-ImplicitCastExpr 0x55daf225bc68 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x55daf225bc50 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x55daf225bc30 <col:115> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x55daf225bcd8 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x55daf225bcc0 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55daf225bca0 <col:134> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |           |-ParenExpr 0x55daf225bed8 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x55daf225bea8 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x55daf225be78 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x55daf225be60 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x55daf225bd10 <col:152> '_Bool' lvalue Var 0x55daf22559d8 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x55daf225be90 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x55daf225bd30 <col:168> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |           |   `-ParenExpr 0x55daf225be40 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x55daf225be10 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x55daf225bdc8 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x55daf225bdb0 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x55daf225bd50 <col:173> '_Bool' lvalue Var 0x55daf2255a50 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x55daf225bde0 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x55daf225bd70 <col:189> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x55daf225bdf8 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x55daf225bd90 <col:201> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55daf225c2e8 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x55daf225c2b8 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x55daf225c078 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x55daf225c008 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x55daf225bf98 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55daf225bf50 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55daf225bf38 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55daf225bef8 <col:216> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x55daf225bf80 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x55daf225bf68 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55daf225bf18 <col:234> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55daf225bff0 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55daf225bfd8 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55daf225bfb8 <col:252> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55daf225c060 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55daf225c048 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55daf225c028 <col:271> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |               |-ParenExpr 0x55daf225c188 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x55daf225c158 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x55daf225c110 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x55daf225c0f8 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x55daf225c098 <col:289> '_Bool' lvalue Var 0x55daf22559d8 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x55daf225c128 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x55daf225c0b8 <col:305> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x55daf225c140 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55daf225c0d8 <col:317> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55daf225c298 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x55daf225c268 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x55daf225c220 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x55daf225c208 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x55daf225c1a8 <col:331> '_Bool' lvalue Var 0x55daf22559d8 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x55daf225c238 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55daf225c1c8 <col:347> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55daf225c250 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55daf225c1e8 <col:359> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |-BinaryOperator 0x55daf225cbc8 <line:786:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55daf225c428 <col:3> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55daf225cb98 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55daf225cb48 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55daf225cb30 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55daf225c448 <col:15> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55daf225cb80 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf225c468 <col:31> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55daf225cb10 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55daf225cae0 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55daf225c4c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55daf225c4a8 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55daf225c488 <col:45> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55daf225cac8 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55daf225c4d8 <col:62> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55daf225caa8 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55daf225ca78 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55daf225c598 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55daf225c550 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55daf225c538 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55daf225c4f8 <col:75> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55daf225c580 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55daf225c568 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55daf225c518 <col:93> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55daf225ca60 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55daf225c5b8 <col:110> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x55daf225ca40 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55daf225ca10 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55daf225c758 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55daf225c6e8 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55daf225c678 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55daf225c660 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55daf225c648 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55daf225c5d8 <col:123> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55daf225c630 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55daf225c618 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55daf225c5f8 <col:142> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55daf225c6d0 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55daf225c6b8 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55daf225c698 <col:160> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55daf225c740 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55daf225c728 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55daf225c708 <col:179> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x55daf225c9f8 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55daf225c778 <col:196> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55daf225c9d8 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55daf225c9a8 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55daf225c918 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55daf225c8a8 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55daf225c838 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55daf225c7f0 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55daf225c7d8 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55daf225c798 <col:209> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55daf225c820 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55daf225c808 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55daf225c7b8 <col:227> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55daf225c890 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55daf225c878 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55daf225c858 <col:245> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55daf225c900 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55daf225c8e8 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55daf225c8c8 <col:264> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x55daf225c978 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55daf225c938 <col:281> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55daf225c990 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55daf225c958 <col:293> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55daf225d368 <line:787:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55daf225cbe8 <col:3> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55daf225d338 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55daf225d308 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55daf225d2f0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55daf225cc08 <col:15> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55daf225d320 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf225cc28 <col:31> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55daf225d2d0 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55daf225d2a0 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55daf225cc80 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55daf225cc68 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55daf225cc48 <col:45> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55daf225d288 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55daf225cc98 <col:62> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55daf225d268 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55daf225d238 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55daf225cd58 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55daf225cd10 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55daf225ccf8 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55daf225ccb8 <col:75> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55daf225cd40 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55daf225cd28 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55daf225ccd8 <col:93> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55daf225d220 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55daf225cd78 <col:110> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55daf225d200 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55daf225d1d0 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55daf225cf18 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55daf225cea8 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55daf225ce38 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55daf225ce20 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55daf225ce08 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55daf225cd98 <col:123> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55daf225cdf0 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55daf225cdd8 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55daf225cdb8 <col:142> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55daf225ce90 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55daf225ce78 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55daf225ce58 <col:160> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55daf225cf00 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55daf225cee8 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55daf225cec8 <col:179> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x55daf225d1b8 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55daf225cf38 <col:196> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x55daf225d198 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55daf225d168 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55daf225d0d8 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55daf225d068 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55daf225cff8 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55daf225cfb0 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55daf225cf98 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55daf225cf58 <col:209> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55daf225cfe0 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55daf225cfc8 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55daf225cf78 <col:227> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55daf225d050 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55daf225d038 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55daf225d018 <col:245> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55daf225d0c0 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55daf225d0a8 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55daf225d088 <col:264> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x55daf225d138 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55daf225d0f8 <col:281> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x55daf225d150 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55daf225d118 <col:293> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55daf225dc58 <line:788:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225d388 <col:3> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225dc40 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf225dc10 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x55daf225dbc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf225dbb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf225d3a8 <col:20> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf225dbf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf225dbe0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf225d3c8 <col:36> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55daf225db90 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x55daf225db48 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x55daf225d420 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55daf225d408 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf225d3e8 <col:55> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55daf225db30 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55daf225db18 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf225d438 <col:72> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55daf225daf8 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x55daf225dac8 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x55daf225d4f8 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55daf225d4b0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55daf225d498 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55daf225d458 <col:90> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55daf225d4e0 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55daf225d4c8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55daf225d478 <col:108> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55daf225dab0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55daf225d548 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55daf225d518 <col:132> 'int' 0
|   |             `-ParenExpr 0x55daf225da90 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x55daf225da60 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x55daf225d6f0 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55daf225d680 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55daf225d610 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55daf225d5f8 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55daf225d5e0 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55daf225d570 <col:137> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55daf225d5c8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55daf225d5b0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55daf225d590 <col:156> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55daf225d668 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55daf225d650 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55daf225d630 <col:174> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55daf225d6d8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55daf225d6c0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55daf225d6a0 <col:193> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |                 |-BinaryOperator 0x55daf225d7b0 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x55daf225d798 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x55daf225d780 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x55daf225d710 <col:210> '_Bool' lvalue Var 0x55daf22559d8 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x55daf225d768 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55daf225d750 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55daf225d730 <col:228> '_Bool' lvalue Var 0x55daf2255a50 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x55daf225da40 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x55daf225da10 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x55daf225d950 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x55daf225d8e0 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55daf225d870 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55daf225d828 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55daf225d810 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55daf225d7d0 <col:245> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55daf225d858 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55daf225d840 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55daf225d7f0 <col:263> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55daf225d8c8 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55daf225d8b0 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55daf225d890 <col:281> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55daf225d938 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55daf225d920 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55daf225d900 <col:300> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55daf225d9c8 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x55daf225d9b0 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x55daf225d970 <col:317> '_Bool' lvalue Var 0x55daf22559d8 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x55daf225d9f8 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x55daf225d9e0 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x55daf225d990 <col:333> '_Bool' lvalue Var 0x55daf22559d8 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x55daf225e500 <line:789:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225dc78 <col:3> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225e4e8 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf225e4b8 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x55daf225e470 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf225e458 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf225dc98 <col:20> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf225e4a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf225e488 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf225dcb8 <col:36> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55daf225e438 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x55daf225e408 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x55daf225dd10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55daf225dcf8 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf225dcd8 <col:55> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55daf225e3f0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55daf225e3d8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf225dd28 <col:72> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55daf225e3b8 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x55daf225e388 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x55daf225dde8 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55daf225dda0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55daf225dd88 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55daf225dd48 <col:90> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55daf225ddd0 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55daf225ddb8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55daf225dd68 <col:108> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55daf225e370 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55daf225de38 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55daf225de08 <col:132> 'int' 0
|   |             `-ParenExpr 0x55daf225e350 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x55daf225e320 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x55daf225dfe0 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55daf225df70 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55daf225df00 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55daf225dee8 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55daf225ded0 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55daf225de60 <col:137> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55daf225deb8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55daf225dea0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55daf225de80 <col:156> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55daf225df58 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55daf225df40 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55daf225df20 <col:174> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55daf225dfc8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55daf225dfb0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55daf225df90 <col:193> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x55daf225e308 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55daf225e2f0 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55daf225e000 <col:210> '_Bool' lvalue Var 0x55daf22559d8 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x55daf225e2d0 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x55daf225e2a0 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x55daf225e1a0 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x55daf225e130 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55daf225e0c0 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55daf225e078 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55daf225e060 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55daf225e020 <col:227> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55daf225e0a8 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55daf225e090 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55daf225e040 <col:245> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55daf225e118 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55daf225e100 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55daf225e0e0 <col:263> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55daf225e188 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55daf225e170 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55daf225e150 <col:282> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55daf225e270 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55daf225e1f0 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55daf225e1c0 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x55daf225e288 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55daf225e248 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55daf225e218 <col:317> 'int' 0
|   |-BinaryOperator 0x55daf225edd0 <line:790:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225e520 <col:3> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225edb8 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf225ed88 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x55daf225ed40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf225ed28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf225e540 <col:20> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf225ed70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf225ed58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf225e560 <col:36> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55daf225ed08 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x55daf225ecd8 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x55daf225e5b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55daf225e5a0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf225e580 <col:55> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55daf225ecc0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55daf225eca8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf225e5d0 <col:72> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55daf225ec88 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x55daf225ec58 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x55daf225e690 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55daf225e648 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55daf225e630 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55daf225e5f0 <col:90> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55daf225e678 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55daf225e660 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55daf225e610 <col:108> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55daf225ec40 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55daf225e6e0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55daf225e6b0 <col:132> 'int' 0
|   |             `-ParenExpr 0x55daf225ec20 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x55daf225ebf0 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x55daf225e888 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55daf225e818 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55daf225e7a8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55daf225e790 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55daf225e778 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55daf225e708 <col:137> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55daf225e760 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55daf225e748 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55daf225e728 <col:156> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55daf225e800 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55daf225e7e8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55daf225e7c8 <col:174> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55daf225e870 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55daf225e858 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55daf225e838 <col:193> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x55daf225ebd8 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55daf225ebc0 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55daf225e8a8 <col:210> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |                 `-ParenExpr 0x55daf225eba0 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x55daf225eb48 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x55daf225ea48 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x55daf225e9d8 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55daf225e968 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55daf225e920 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55daf225e908 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55daf225e8c8 <col:228> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55daf225e950 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55daf225e938 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55daf225e8e8 <col:246> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55daf225e9c0 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55daf225e9a8 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55daf225e988 <col:264> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55daf225ea30 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55daf225ea18 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55daf225e9f8 <col:283> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55daf225eb18 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55daf225ea98 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55daf225ea68 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x55daf225eb30 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55daf225eaf0 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55daf225eac0 <col:318> 'int' 0
|   |-BinaryOperator 0x55daf225f788 <line:791:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225edf0 <col:3> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55daf225f770 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf225f740 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x55daf225f6f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf225f6e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf225ee10 <col:20> '_Bool' lvalue Var 0x55daf2256b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf225f728 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55daf225f710 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55daf225ee30 <col:36> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55daf225f6c0 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x55daf225f690 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x55daf225ee88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55daf225ee70 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf225ee50 <col:55> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55daf225f678 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55daf225f660 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55daf225eea0 <col:72> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55daf225f640 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x55daf225f610 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x55daf225ef60 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55daf225ef18 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55daf225ef00 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55daf225eec0 <col:90> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55daf225ef48 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55daf225ef30 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55daf225eee0 <col:108> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55daf225f5f8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55daf225efb0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55daf225ef80 <col:132> 'int' 0
|   |             `-ParenExpr 0x55daf225f5d8 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x55daf225f5a8 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x55daf225f158 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55daf225f0e8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55daf225f078 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55daf225f060 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55daf225f048 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55daf225efd8 <col:137> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55daf225f030 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55daf225f018 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55daf225eff8 <col:156> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55daf225f0d0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55daf225f0b8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55daf225f098 <col:174> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55daf225f140 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55daf225f128 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55daf225f108 <col:193> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |                 |-ParenExpr 0x55daf225f2b8 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x55daf225f288 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x55daf225f228 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55daf225f210 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55daf225f178 <col:211> '_Bool' lvalue Var 0x55daf22559d8 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x55daf225f258 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55daf225f240 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55daf225f198 <col:227> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x55daf225f270 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x55daf225f1e8 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x55daf225f1b8 <col:251> 'int' 0
|   |                 `-ParenExpr 0x55daf225f588 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x55daf225f558 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x55daf225f458 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x55daf225f3e8 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55daf225f378 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55daf225f330 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55daf225f318 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55daf225f2d8 <col:257> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55daf225f360 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55daf225f348 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55daf225f2f8 <col:275> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55daf225f3d0 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55daf225f3b8 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55daf225f398 <col:293> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55daf225f440 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55daf225f428 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55daf225f408 <col:312> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x55daf225f528 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55daf225f4a8 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55daf225f478 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x55daf225f540 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55daf225f500 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55daf225f4d0 <col:347> 'int' 0
|   |-BinaryOperator 0x55daf225f820 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225f7a8 <col:3> '_Bool' lvalue Var 0x55daf2254b00 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55daf225f7f8 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55daf225f7c8 <col:45> 'int' 1
|   |-BinaryOperator 0x55daf225f898 <line:793:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55daf225f840 <col:3> 'int *' lvalue Var 0x55daf2254b80 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55daf225f880 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55daf225f860 <col:43> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |-BinaryOperator 0x55daf225f910 <line:794:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55daf225f8b8 <col:3> 'int' lvalue Var 0x55daf2254560 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55daf225f8f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf225f8d8 <col:25> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |-BinaryOperator 0x55daf225fa40 <line:795:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55daf225f930 <col:3> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   | `-ConditionalOperator 0x55daf225fa10 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55daf225f9c8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55daf225f9b0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55daf225f950 <col:7> '_Bool' lvalue Var 0x55daf2255118 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55daf225f9e0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf225f970 <col:25> 'int' lvalue Var 0x55daf2255198 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55daf225f9f8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55daf225f990 <col:37> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |-BinaryOperator 0x55daf225fad8 <line:796:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225fa60 <col:3> '_Bool' lvalue Var 0x55daf2255118 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55daf225fab0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55daf225fa80 <col:28> 'int' 0
|   |-CallExpr 0x55daf225fb30 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf225fb18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf225faf8 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55daf225fbb0 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf225fb70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf225fb50 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55daf225fc28 <line:799:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55daf225fbd0 <col:3> 'int' lvalue Var 0x55daf2254e70 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55daf225fc10 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55daf225fbf0 <col:25> 'int' lvalue Var 0x55daf2255940 'y' 'int'
|   |-CallExpr 0x55daf225fc80 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf225fc68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf225fc48 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55daf225fcd8 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf225fcc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf225fca0 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55daf225ffc0 <line:802:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55daf225fcf8 <col:3> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   | `-ConditionalOperator 0x55daf225ff90 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55daf225fdb8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55daf225fd70 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55daf225fd58 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55daf225fd18 <col:7> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55daf225fda0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55daf225fd88 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55daf225fd38 <col:25> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55daf225ff78 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf225fdd8 <col:42> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55daf225ff58 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55daf225ff28 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55daf225fe98 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55daf225fe50 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55daf225fe38 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55daf225fdf8 <col:55> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55daf225fe80 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55daf225fe68 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55daf225fe18 <col:73> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55daf225fef8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55daf225feb8 <col:90> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55daf225ff10 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55daf225fed8 <col:102> 'int' lvalue Var 0x55daf2255080 'x' 'int'
|   |-BinaryOperator 0x55daf22601c8 <line:803:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55daf225ffe0 <col:3> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55daf22601b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf2260180 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55daf22600a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55daf2260058 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55daf2260040 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55daf2260000 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55daf2260088 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55daf2260070 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55daf2260020 <col:38> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf2260138 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55daf22600f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55daf22600c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55daf2260168 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55daf2260150 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55daf2260118 <col:66> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55daf22604b0 <line:804:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55daf22601e8 <col:3> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55daf2260498 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf2260468 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55daf2260388 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55daf22602a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55daf2260260 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55daf2260248 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55daf2260208 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55daf2260290 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55daf2260278 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55daf2260228 <col:38> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55daf2260368 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55daf2260320 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55daf2260308 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55daf22602c8 <col:56> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55daf2260350 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55daf2260338 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55daf22602e8 <col:74> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf2260420 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55daf22603d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55daf22603a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55daf2260450 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55daf2260438 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55daf2260400 <col:102> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55daf22606b8 <line:805:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55daf22604d0 <col:3> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55daf22606a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf2260670 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55daf2260590 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55daf2260548 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55daf2260530 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55daf22604f0 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55daf2260578 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55daf2260560 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55daf2260510 <col:38> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf2260628 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55daf22605e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55daf22605b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55daf2260658 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55daf2260640 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55daf2260608 <col:66> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55daf22609a0 <line:806:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55daf22606d8 <col:3> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55daf2260988 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55daf2260958 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55daf2260878 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55daf2260798 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55daf2260750 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55daf2260738 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55daf22606f8 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55daf2260780 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55daf2260768 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55daf2260718 <col:38> '_Bool' lvalue Var 0x55daf2255378 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55daf2260858 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55daf2260810 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55daf22607f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55daf22607b8 <col:56> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55daf2260840 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55daf2260828 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55daf22607d8 <col:74> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55daf2260910 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55daf22608c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55daf2260898 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55daf2260940 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55daf2260928 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55daf22608f0 <col:102> '_Bool' lvalue Var 0x55daf2255558 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55daf22609f8 <line:807:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf22609e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf22609c0 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55daf2260a50 <line:808:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55daf2260a38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2260a18 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55daf2260b08 <line:809:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55daf2260a70 <col:3> 'int' lvalue Var 0x55daf2254320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55daf2260ae8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55daf2260ad0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55daf2260a90 <col:22> 'int' lvalue Var 0x55daf2254320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55daf2260ab0 <col:41> 'int' 1
|   |-CallExpr 0x55daf2260b60 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55daf2260b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55daf2260b28 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55daf2260bf8 <line:811:3, col:36>
|     `-CallExpr 0x55daf2260bd8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55daf2260bc0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55daf2260b80 <col:10> 'void *(void)' Function 0x55daf21faab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55daf2260d40 prev 0x55daf2254068 <line:813:1, line:815:1> line:813:6 fence 'void ()'
| `-CompoundStmt 0x55daf2260de0 <line:814:1, line:815:1>
|-FunctionDecl 0x55daf2260e10 prev 0x55daf2254128 <line:816:1, line:818:1> line:816:6 isync 'void ()'
| `-CompoundStmt 0x55daf2260eb0 <line:817:1, line:818:1>
|-FunctionDecl 0x55daf2260ee0 prev 0x55daf22541e8 <line:819:1, line:821:1> line:819:6 lwfence 'void ()'
| `-CompoundStmt 0x55daf2260f80 <line:820:1, line:821:1>
`-FunctionDecl 0x55daf2260fe8 <line:822:1, line:848:1> line:822:5 main 'int ()'
  `-CompoundStmt 0x55daf2262f10 <line:823:1, line:848:1>
    |-DeclStmt 0x55daf2261100 <line:824:3, col:18>
    | `-VarDecl 0x55daf2261098 <col:3, col:13> col:13 used t2454 'pthread_t':'unsigned long'
    |-CallExpr 0x55daf2261308 <line:825:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55daf22612f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55daf2261118 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55daf223b5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55daf2261158 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55daf2261138 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55daf2261098 't2454' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55daf2261348 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55daf22611d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55daf22611a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55daf2261170 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55daf2261360 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55daf22611f0 <col:39> 'void *(void *)' Function 0x55daf2256c38 'P0' 'void *(void *)'
    | `-ParenExpr 0x55daf2261270 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55daf2261248 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55daf2261210 <col:52> 'int' 0
    |-DeclStmt 0x55daf22613f0 <line:826:3, col:18>
    | `-VarDecl 0x55daf2261388 <col:3, col:13> col:13 used t2455 'pthread_t':'unsigned long'
    |-CallExpr 0x55daf2261598 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55daf2261580 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55daf2261408 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55daf223b5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55daf2261448 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55daf2261428 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55daf2261388 't2455' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55daf22615d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55daf22614c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55daf2261498 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55daf2261460 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55daf22615f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55daf22614e0 <col:39> 'void *(void *)' Function 0x55daf2259e20 'P1' 'void *(void *)'
    | `-ParenExpr 0x55daf2261560 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55daf2261538 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55daf2261500 <col:52> 'int' 0
    |-DeclStmt 0x55daf2261680 <line:828:3, col:18>
    | `-VarDecl 0x55daf2261618 <col:3, col:13> col:13 used t2456 'pthread_t':'unsigned long'
    |-CallExpr 0x55daf2261828 <line:829:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55daf2261810 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55daf2261698 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55daf223b5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55daf22616d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55daf22616b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55daf2261618 't2456' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55daf2261868 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55daf2261750 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55daf2261728 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55daf22616f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55daf2261880 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55daf2261770 <col:39> 'void *(void *)' Function 0x55daf225b630 'P2' 'void *(void *)'
    | `-ParenExpr 0x55daf22617f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55daf22617c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55daf2261790 <col:52> 'int' 0
    |-CallExpr 0x55daf22618d0 <line:830:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55daf22618b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55daf2261898 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55daf22619a0 <line:831:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55daf22618f0 <col:3> '_Bool' lvalue Var 0x55daf2254f08 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55daf2261988 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55daf2261968 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55daf2261950 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55daf2261910 <col:21> 'int' lvalue Var 0x55daf2254320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55daf2261930 <col:41> 'int' 3
    |-CallExpr 0x55daf22619f8 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55daf22619e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55daf22619c0 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55daf2261a70 <line:833:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55daf2261a58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55daf2261a18 <col:3> 'void (int)' Function 0x55daf21fa940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55daf2261ab0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55daf2261a98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55daf2261a38 <col:21> '_Bool' lvalue Var 0x55daf2254f08 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55daf2261b00 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55daf2261ae8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55daf2261ac8 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55daf2261e08 <line:835:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55daf2261b20 <col:3> 'int' lvalue Var 0x55daf2255080 'x' 'int'
    | `-ConditionalOperator 0x55daf2261dd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55daf2261c00 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55daf2261b98 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55daf2261b80 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55daf2261b40 <col:7> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55daf2261be8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55daf2261bd0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55daf2261b60 <col:25> '_Bool' lvalue Var 0x55daf2255210 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55daf2261dc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55daf2261c20 <col:42> 'int' lvalue Var 0x55daf22556d0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55daf2261da0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55daf2261d70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55daf2261ce0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55daf2261c98 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55daf2261c80 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55daf2261c40 <col:55> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55daf2261cc8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55daf2261cb0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55daf2261c60 <col:73> '_Bool' lvalue Var 0x55daf22553f0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55daf2261d40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55daf2261d00 <col:90> 'int' lvalue Var 0x55daf22557c8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55daf2261d58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55daf2261d20 <col:102> 'int' lvalue Var 0x55daf2255080 'x' 'int'
    |-BinaryOperator 0x55daf2262010 <line:836:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55daf2261e28 <col:3> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55daf2261ff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55daf2261fc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55daf2261ee8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55daf2261ea0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55daf2261e88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55daf2261e48 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55daf2261ed0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55daf2261eb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55daf2261e68 <col:38> '_Bool' lvalue Var 0x55daf2255210 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55daf2261f80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55daf2261f38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55daf2261f08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55daf2261fb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55daf2261f98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55daf2261f60 <col:66> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55daf22622f8 <line:837:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55daf2262030 <col:3> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55daf22622e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55daf22622b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55daf22621d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55daf22620f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55daf22620a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55daf2262090 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55daf2262050 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55daf22620d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55daf22620c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55daf2262070 <col:38> '_Bool' lvalue Var 0x55daf2255210 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55daf22621b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55daf2262168 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55daf2262150 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55daf2262110 <col:56> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55daf2262198 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55daf2262180 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55daf2262130 <col:74> '_Bool' lvalue Var 0x55daf22553f0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55daf2262268 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55daf2262220 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55daf22621f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55daf2262298 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55daf2262280 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55daf2262248 <col:102> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55daf2262500 <line:838:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55daf2262318 <col:3> '_Bool' lvalue Var 0x55daf2255210 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55daf22624e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55daf22624b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55daf22623d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55daf2262390 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55daf2262378 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55daf2262338 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55daf22623c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55daf22623a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55daf2262358 <col:38> '_Bool' lvalue Var 0x55daf2255210 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55daf2262470 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55daf2262428 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55daf22623f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55daf22624a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55daf2262488 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55daf2262450 <col:66> '_Bool' lvalue Var 0x55daf2255210 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55daf22627e8 <line:839:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55daf2262520 <col:3> '_Bool' lvalue Var 0x55daf22553f0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55daf22627d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55daf22627a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55daf22626c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55daf22625e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55daf2262598 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55daf2262580 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55daf2262540 <col:20> '_Bool' lvalue Var 0x55daf2255748 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55daf22625c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55daf22625b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55daf2262560 <col:38> '_Bool' lvalue Var 0x55daf2255210 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55daf22626a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55daf2262658 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55daf2262640 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55daf2262600 <col:56> '_Bool' lvalue Var 0x55daf2255840 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55daf2262688 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55daf2262670 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55daf2262620 <col:74> '_Bool' lvalue Var 0x55daf22553f0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55daf2262758 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55daf2262710 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55daf22626e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55daf2262788 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55daf2262770 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55daf2262738 <col:102> '_Bool' lvalue Var 0x55daf22553f0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55daf2262840 <line:840:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55daf2262828 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55daf2262808 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55daf2262898 <line:841:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55daf2262880 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55daf2262860 <col:3> 'void ()' Function 0x55daf21fafa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55daf2262930 <line:842:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55daf22628b8 <col:3> '_Bool' lvalue Var 0x55daf2255a50 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55daf2262910 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55daf22628f8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55daf22628d8 <col:19> '_Bool (void)' Function 0x55daf21fa770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55daf2262b68 <line:843:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55daf2262950 <col:3> 'int' lvalue Var 0x55daf2254560 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x55daf2262b38 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55daf2262b08 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55daf2262af0 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55daf2262970 <col:25> '_Bool' lvalue Var 0x55daf2254b00 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55daf2262ab0 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55daf2262a80 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55daf2262a38 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55daf2262a20 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55daf2262990 <col:61> '_Bool' lvalue Var 0x55daf2255a50 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55daf2262a50 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55daf22629e8 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55daf22629d0 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55daf22629b0 <col:78> 'int *' lvalue Var 0x55daf2254b80 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55daf2262a68 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55daf2262a00 <col:117> 'int' lvalue Var 0x55daf2254560 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x55daf2262b20 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55daf2262ad0 <col:140> 'int' lvalue Var 0x55daf2254560 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x55daf2262db8 <line:844:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x55daf2262b88 <col:3> '_Bool' lvalue Var 0x55daf2254f80 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55daf2262da0 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55daf2262d88 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55daf2262d68 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x55daf2262d48 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x55daf2262cb0 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x55daf2262c18 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55daf2262c00 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55daf2262ba8 <col:23> 'int' lvalue Var 0x55daf2254440 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x55daf2262be0 <col:46> 'int' 0
    |         | `-BinaryOperator 0x55daf2262c90 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55daf2262c78 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55daf2262c38 <col:51> 'int' lvalue Var 0x55daf2254560 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55daf2262c58 <col:74> 'int' 1
    |         `-BinaryOperator 0x55daf2262d28 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x55daf2262d10 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55daf2262cd0 <col:79> 'int' lvalue Var 0x55daf2254e70 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55daf2262cf0 <col:102> 'int' 0
    |-CallExpr 0x55daf2262e10 <line:845:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55daf2262df8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55daf2262dd8 <col:3> 'void ()' Function 0x55daf21fb060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55daf2262e88 <line:846:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55daf2262e70 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55daf2262e30 <col:3> 'void (int)' Function 0x55daf21fad28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55daf2262ec8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55daf2262eb0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55daf2262e50 <col:21> '_Bool' lvalue Var 0x55daf2254f80 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55daf2262f00 <line:847:3, col:10>
      `-IntegerLiteral 0x55daf2262ee0 <col:10> 'int' 0
