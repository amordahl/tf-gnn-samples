TranslationUnitDecl 0x55bf88e24e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55bf88e256d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55bf88e253b0 '__int128'
|-TypedefDecl 0x55bf88e25748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55bf88e253d0 'unsigned __int128'
|-TypedefDecl 0x55bf88e25a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55bf88e25820 'struct __NSConstantString_tag'
|   `-Record 0x55bf88e257a0 '__NSConstantString_tag'
|-TypedefDecl 0x55bf88e25af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55bf88e25ab0 'char *'
|   `-BuiltinType 0x55bf88e24eb0 'char'
|-TypedefDecl 0x55bf88e64650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55bf88e25d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55bf88e25bd0 'struct __va_list_tag'
|     `-Record 0x55bf88e25b50 '__va_list_tag'
|-FunctionDecl 0x55bf88e64770 <./test/safe018_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55bf88e64940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55bf88e64870 <col:31> col:34 'int'
|-FunctionDecl 0x55bf88e64ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55bf88e64be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55bf88e64d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55bf88e64c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55bf88e64f58 <col:40, col:99>
|   |-IfStmt 0x55bf88e64f28 <col:42, col:88>
|   | |-UnaryOperator 0x55bf88e64e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55bf88e64df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55bf88e64dd0 <col:47> 'int' lvalue ParmVar 0x55bf88e64c98 'expression' 'int'
|   | `-CompoundStmt 0x55bf88e64f10 <col:59, col:88>
|   |   `-LabelStmt 0x55bf88e64ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55bf88e64e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55bf88e64e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55bf88e64e20 <col:68> 'void () __attribute__((noreturn))' Function 0x55bf88e64be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55bf88e64f40 <col:89>
|   `-ReturnStmt 0x55bf88e64f48 <col:91>
|-FunctionDecl 0x55bf88e64fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55bf88e65060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55bf88e653e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bf88e65118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55bf88e65198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55bf88e65218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55bf88e65298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55bf88e654a0 <line:11:22>
|-FunctionDecl 0x55bf88e8b520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bf88e65510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55bf88e65590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55bf88e8b350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55bf88e8b3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55bf88e8b5e0 <line:14:22>
|-FunctionDecl 0x55bf88e8b890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bf88e8b650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55bf88e8b6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55bf88e8b750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55bf88e8b948 <line:16:22>
|-TypedefDecl 0x55bf88e8b9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55bf88e24f70 'unsigned char'
|-TypedefDecl 0x55bf88e8ba28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55bf88e24f90 'unsigned short'
|-TypedefDecl 0x55bf88e8ba98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55bf88e24fb0 'unsigned int'
|-TypedefDecl 0x55bf88e8bb08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8bb78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55bf88e24ed0 'signed char'
|-TypedefDecl 0x55bf88e8bbe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55bf88e24f70 'unsigned char'
|-TypedefDecl 0x55bf88e8bc58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55bf88e24ef0 'short'
|-TypedefDecl 0x55bf88e8bcc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55bf88e24f90 'unsigned short'
|-TypedefDecl 0x55bf88e8bd38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55bf88e24f10 'int'
|-TypedefDecl 0x55bf88e8bda8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55bf88e24fb0 'unsigned int'
|-TypedefDecl 0x55bf88e8be18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8be88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8bef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8bf68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8bfd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8c048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55bf88e24fb0 'unsigned int'
|-TypedefDecl 0x55bf88e8c0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55bf88e24fb0 'unsigned int'
|-TypedefDecl 0x55bf88e8c128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8c198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8c208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55bf88e24fb0 'unsigned int'
|-TypedefDecl 0x55bf88e8c278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8c2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8c378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8c3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55bf88e24f10 'int'
|-RecordDecl 0x55bf88e8c440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55bf88e8c588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55bf88e8c640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55bf88e8c5e0 'struct __fsid_t' sugar
|   `-RecordType 0x55bf88e8c4c0 '__fsid_t'
|     `-Record 0x55bf88e8c440 ''
|-TypedefDecl 0x55bf88e8c6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8c738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8c7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8c818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55bf88e24fb0 'unsigned int'
|-TypedefDecl 0x55bf88e8c888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8c8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55bf88e24fb0 'unsigned int'
|-TypedefDecl 0x55bf88e8c968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8c9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55bf88e24f10 'int'
|-TypedefDecl 0x55bf88e8ca48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55bf88e24f10 'int'
|-TypedefDecl 0x55bf88e8cab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55bf88e24f10 'int'
|-TypedefDecl 0x55bf88e8cb28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55bf88e25630 'void *'
|   `-BuiltinType 0x55bf88e24e70 'void'
|-TypedefDecl 0x55bf88e8cb98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8cc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8cc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8cce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8cd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8cdc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8ce38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8cea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8cf18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8cf88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8cff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8d088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55bf88e8d050 '__off64_t' sugar
|   |-Typedef 0x55bf88e8c378 '__off64_t'
|   `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8d180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55bf88e8d140 '__quad_t *'
|   `-TypedefType 0x55bf88e8d0e0 '__quad_t' sugar
|     |-Typedef 0x55bf88e8bef8 '__quad_t'
|     `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8d1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55bf88e25ab0 'char *'
|   `-BuiltinType 0x55bf88e24eb0 'char'
|-TypedefDecl 0x55bf88e8d260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e8d2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55bf88e24fb0 'unsigned int'
|-FunctionDecl 0x55bf88e8e458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55bf88e8e380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55bf88e8e768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55bf88e8e758 <line:73:3, col:34>
|     `-CallExpr 0x55bf88e8e718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55bf88e8e700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55bf88e8e690 <col:10> '<builtin fn type>' Function 0x55bf88e8e500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55bf88e8e740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55bf88e8e6b0 <col:29> 'unsigned int' lvalue ParmVar 0x55bf88e8e380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55bf88e8e500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55bf88e8e5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55bf88e8e610 <col:10> Implicit
| `-ConstAttr 0x55bf88e8e668 <col:10> Implicit
|-FunctionDecl 0x55bf88e8e8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55bf88e8e7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55bf88e8ebd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55bf88e8ebc8 <line:78:3, col:34>
|     `-CallExpr 0x55bf88e8eb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55bf88e8eb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55bf88e8eaf8 <col:10> '<builtin fn type>' Function 0x55bf88e8e968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55bf88e8ebb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55bf88e8eb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55bf88e8e7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55bf88e8e968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55bf88e8ea08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55bf88e8ea78 <col:10> Implicit
| `-ConstAttr 0x55bf88e8ead0 <col:10> Implicit
|-TypedefDecl 0x55bf88e8ec08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-TypedefDecl 0x55bf88e8ec98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55bf88e8ec60 '__time_t' sugar
|   |-Typedef 0x55bf88e8c888 '__time_t'
|   `-BuiltinType 0x55bf88e24f30 'long'
|-RecordDecl 0x55bf88e8ecf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55bf88e8eda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55bf88e8ee38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55bf88e8eec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55bf88e8ee90 '__pid_t' sugar
|   |-Typedef 0x55bf88e8c3e8 '__pid_t'
|   `-BuiltinType 0x55bf88e24f10 'int'
|-RecordDecl 0x55bf88e8ef20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55bf88e8efe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55bf88e8f030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55bf88e8f0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55bf88e8f158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-RecordDecl 0x55bf88e8f1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55bf88e90480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55bf88e90530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55bf88e904d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55bf88e8f230 'cpu_set_t'
|     `-Record 0x55bf88e8f1b0 ''
|-FunctionDecl 0x55bf88e90808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55bf88e905d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55bf88e906e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55bf88e908b8 <line:108:19>
|-FunctionDecl 0x55bf88e90a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55bf88e90920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55bf88e90b38 <col:69>
|-FunctionDecl 0x55bf88e90cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55bf88e90ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55bf88e90d58 <col:64>
|-FunctionDecl 0x55bf88e91018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55bf88e90dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bf88e90ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55bf88e910c8 <line:114:22>
|-FunctionDecl 0x55bf88e913b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55bf88e91130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bf88e91228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55bf88e91460 <col:88>
|-FunctionDecl 0x55bf88e91718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55bf88e914c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bf88e91548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55bf88e915d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55bf88e917d0 <col:62>
|-FunctionDecl 0x55bf88e91948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55bf88e91838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55bf88e919f0 <col:63>
|-FunctionDecl 0x55bf88e91b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55bf88e91bb8 <col:47>
|-FunctionDecl 0x55bf88e91cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55bf88e91c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55bf88e91d68 <col:69>
|-FunctionDecl 0x55bf88e91e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55bf88e91dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55bf88e91f18 <col:69>
|-FunctionDecl 0x55bf88e921d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55bf88e91f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55bf88e920b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55bf88e92288 <col:88>
|-TypedefDecl 0x55bf88e92318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55bf88e922e0 '__clock_t' sugar
|   |-Typedef 0x55bf88e8c6c8 '__clock_t'
|   `-BuiltinType 0x55bf88e24f30 'long'
|-TypedefDecl 0x55bf88e923c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55bf88e92370 '__clockid_t' sugar
|   |-Typedef 0x55bf88e8cab8 '__clockid_t'
|   `-BuiltinType 0x55bf88e24f10 'int'
|-TypedefDecl 0x55bf88e92458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55bf88e92420 '__timer_t' sugar
|   |-Typedef 0x55bf88e8cb28 '__timer_t'
|   `-PointerType 0x55bf88e25630 'void *'
|     `-BuiltinType 0x55bf88e24e70 'void'
|-RecordDecl 0x55bf88e924b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55bf88e92570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55bf88e925d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55bf88e92640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55bf88e926a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55bf88e92710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55bf88e92778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55bf88e927e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55bf88e92848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55bf88e928b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55bf88e92918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55bf88e92980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55bf88e929d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55bf88e92a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55bf88e92b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55bf88e92bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55bf88e92d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55bf88e92e20 <col:45>
|-FunctionDecl 0x55bf88e93000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55bf88e92ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55bf88e930a8 <col:54>
|-FunctionDecl 0x55bf88e932a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55bf88e93110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55bf88e93188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55bf88e93358 <line:158:22>
| `-ConstAttr 0x55bf88e93ff0 <col:63>
|-FunctionDecl 0x55bf88e941f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55bf88e940e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55bf88e94298 <col:56>
|-FunctionDecl 0x55bf88e94640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55bf88e94308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55bf88e94380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55bf88e94400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55bf88e944f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55bf88e94700 <col:54>
|-RecordDecl 0x55bf88e94758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55bf88e94808 parent 0x55bf88e24e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55bf88e94a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55bf88e94b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55bf88e94b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55bf88e94bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55bf88e94cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55bf88e94de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55bf88e94d90 'struct __locale_struct *'
|   `-ElaboratedType 0x55bf88e94d20 'struct __locale_struct' sugar
|     `-RecordType 0x55bf88e947e0 'struct __locale_struct'
|       `-Record 0x55bf88e94758 '__locale_struct'
|-TypedefDecl 0x55bf88e94e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55bf88e94e60 '__locale_t' sugar
|   |-Typedef 0x55bf88e94de8 '__locale_t'
|   `-PointerType 0x55bf88e94d90 'struct __locale_struct *'
|     `-ElaboratedType 0x55bf88e94d20 'struct __locale_struct' sugar
|       `-RecordType 0x55bf88e947e0 'struct __locale_struct'
|         `-Record 0x55bf88e94758 '__locale_struct'
|-FunctionDecl 0x55bf88e962a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55bf88e94f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55bf88e94f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55bf88e96028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55bf88e960b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55bf88e96130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55bf88e96368 <col:40>
|-FunctionDecl 0x55bf88e96558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55bf88e96430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55bf88e96600 <col:66>
|-FunctionDecl 0x55bf88e96710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55bf88e96668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55bf88e967b8 <col:69>
|-FunctionDecl 0x55bf88e969e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55bf88e96820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55bf88e968b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55bf88e96a98 <col:52>
|-FunctionDecl 0x55bf88e96c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55bf88e96b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55bf88e96b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55bf88e96cf0 <col:55>
|-FunctionDecl 0x55bf88e96e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55bf88e96d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55bf88e96f30 <col:62>
|-FunctionDecl 0x55bf88e97168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55bf88e96f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55bf88e97210 <col:60>
|-FunctionDecl 0x55bf88e97438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55bf88e97290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55bf88e97310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55bf88e974e8 <col:44>
|-FunctionDecl 0x55bf88e976f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55bf88e97550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55bf88e975d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55bf88e977a8 <col:49>
|-VarDecl 0x55bf88e978a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55bf88e97928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55bf88e979a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55bf88e97a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55bf88e97ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55bf88e97c40 <col:42>
|-VarDecl 0x55bf88e97cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55bf88e97d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55bf88e97eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55bf88e97da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55bf88e97f60 <col:57>
|-FunctionDecl 0x55bf88e980d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55bf88e97fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55bf88e98178 <col:56>
|-FunctionDecl 0x55bf88e98288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55bf88e981f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55bf88e98330 <col:59>
|-FunctionDecl 0x55bf88e98438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55bf88e983a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55bf88e984e0 <col:48>
| `-ConstAttr 0x55bf88e98538 <col:89>
|-FunctionDecl 0x55bf88e98798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55bf88e985e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55bf88e98678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55bf88e989f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55bf88e98888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bf88e98918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55bf88e98aa8 <col:88>
|-FunctionDecl 0x55bf88e98c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55bf88e98b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bf88e98ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55bf88e98cf0 <col:88>
|-FunctionDecl 0x55bf88e98f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55bf88e98d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bf88e98de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55bf88e98fb8 <line:209:22>
|-FunctionDecl 0x55bf88e99358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55bf88e99020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bf88e990e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55bf88e99170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55bf88e99200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55bf88e99658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55bf88e99458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55bf88e99530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55bf88e99708 <col:85>
|-FunctionDecl 0x55bf88e99af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55bf88e99770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55bf88e998a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55bf88e999b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55bf88e99bb0 <col:52>
|-FunctionDecl 0x55bf88e99d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55bf88e99c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55bf88e99dd0 <col:61>
|-FunctionDecl 0x55bf88e9a248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55bf88e99e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55bf88e99eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55bf88e99fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55bf88e9a0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55bf88e9a308 <col:62>
|-FunctionDecl 0x55bf88e9a528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55bf88e9a370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55bf88e9a400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55bf88e9a5d8 <line:222:22>
|-FunctionDecl 0x55bf88e9a6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55bf88e9a640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55bf88e9a780 <col:65>
|-TypedefDecl 0x55bf88e9a7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55bf88e24fd0 'unsigned long'
|-RecordDecl 0x55bf88e9a848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55bf88e9a990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55bf88e9a9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bf88e9aaa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55bf88e9aa50 'union pthread_attr_t' sugar
|   `-RecordType 0x55bf88e9a8d0 'union pthread_attr_t'
|     `-Record 0x55bf88e9a848 'pthread_attr_t'
|-RecordDecl 0x55bf88e9ab00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55bf88e9ac78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55bf88e9acf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55bf88e9ada0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55bf88e9ad40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55bf88e9ab80 'struct __pthread_internal_list'
|     `-Record 0x55bf88e9ab00 '__pthread_internal_list'
|-RecordDecl 0x55bf88e9ae10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55bf88e9aeb8 parent 0x55bf88e24e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55bf88e9af90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55bf88e9aff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55bf88e9b060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55bf88e9f110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55bf88e9f178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55bf88e9f1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55bf88e9f268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55bf88e9f320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55bf88e9f410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55bf88e9f478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bf88e9f600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55bf88e9f5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55bf88e9ae90 'pthread_mutex_t'
|     `-Record 0x55bf88e9ae10 ''
|-RecordDecl 0x55bf88e9f670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55bf88e9f7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55bf88e9f818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55bf88e9f8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55bf88e9f870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55bf88e9f6f0 'pthread_mutexattr_t'
|     `-Record 0x55bf88e9f670 ''
|-RecordDecl 0x55bf88e9f940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55bf88e9f9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55bf88e9fab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55bf88e9fb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55bf88e9fb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55bf88e9fbe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55bf88e9fc50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55bf88e9fcb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55bf88e9fd20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55bf88e9fd88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55bf88e9fe40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./test/safe018_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./test/safe018_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55bf88e9ff30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55bf88e9ff98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55bf88ea1130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55bf88ea0070 'union pthread_cond_t' sugar
|   `-RecordType 0x55bf88e9f9c0 'pthread_cond_t'
|     `-Record 0x55bf88e9f940 ''
|-RecordDecl 0x55bf88ea11a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55bf88ea12a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55bf88ea1308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55bf88ea13c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55bf88ea1360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55bf88ea1220 'pthread_condattr_t'
|     `-Record 0x55bf88ea11a0 ''
|-TypedefDecl 0x55bf88ea1448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55bf88e24fb0 'unsigned int'
|-TypedefDecl 0x55bf88ea14b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55bf88e24f10 'int'
|-RecordDecl 0x55bf88ea1510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55bf88ea15b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55bf88ea1680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55bf88ea16e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55bf88ea1750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55bf88ea17b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55bf88ea1820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55bf88ea1888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55bf88ea18f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55bf88ea1958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55bf88ea19c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55bf88ea1a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55bf88ea1a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55bf88ea1b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./test/safe018_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./test/safe018_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55bf88ea1be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55bf88ea1c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bf88ea1da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55bf88ea1d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55bf88ea1590 'pthread_rwlock_t'
|     `-Record 0x55bf88ea1510 ''
|-RecordDecl 0x55bf88ea1e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55bf88ea1f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55bf88ea1fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bf88ea2070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55bf88ea2010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55bf88ea1e90 'pthread_rwlockattr_t'
|     `-Record 0x55bf88ea1e10 ''
|-TypedefDecl 0x55bf88ea3140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55bf88e24f14 'volatile int' volatile
|   `-BuiltinType 0x55bf88e24f10 'int'
|-RecordDecl 0x55bf88ea3198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55bf88ea32e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55bf88ea3348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55bf88ea3400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55bf88ea33a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55bf88ea3220 'pthread_barrier_t'
|     `-Record 0x55bf88ea3198 ''
|-RecordDecl 0x55bf88ea3470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55bf88ea3570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55bf88ea35d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55bf88ea3690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55bf88ea3630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55bf88ea34f0 'pthread_barrierattr_t'
|     `-Record 0x55bf88ea3470 ''
|-TypedefDecl 0x55bf88ea37a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55bf88ea3740 'long [8]' 8 
|   `-BuiltinType 0x55bf88e24f30 'long'
|-EnumDecl 0x55bf88ea3800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55bf88ea38c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55bf88ea3918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55bf88ea3968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55bf88ea3a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55bf88ea3a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55bf88ea3ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55bf88ea3b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55bf88ea3bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55bf88ea3b98 <col:26> 'int'
| |   `-DeclRefExpr 0x55bf88ea3b78 <col:26> 'int' EnumConstant 0x55bf88ea3a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55bf88ea3c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55bf88ea3c20 <col:29> 'int'
| |   `-DeclRefExpr 0x55bf88ea3c00 <col:29> 'int' EnumConstant 0x55bf88ea3a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55bf88ea3cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55bf88ea3ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55bf88ea3c88 <col:30> 'int' EnumConstant 0x55bf88ea3ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55bf88ea3d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55bf88ea3d30 <col:27> 'int'
|     `-DeclRefExpr 0x55bf88ea3d10 <col:27> 'int' EnumConstant 0x55bf88ea3bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55bf88ea3d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55bf88ea3e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55bf88ea3ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55bf88ea3ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x55bf88ea3eb8 <col:30> 'int' EnumConstant 0x55bf88ea3e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55bf88ea3f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55bf88ea3fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55bf88ea3fb0 <col:29> 'int'
|     `-DeclRefExpr 0x55bf88ea3f90 <col:29> 'int' EnumConstant 0x55bf88ea3f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55bf88ea4018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55bf88ea40e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55bf88ea4150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55bf88ea41a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55bf88ea41f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55bf88ea42b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55bf88ea4308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55bf88ea4358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55bf88ea43e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55bf88ea43c8 <col:31> 'int'
|     `-DeclRefExpr 0x55bf88ea43a8 <col:31> 'int' EnumConstant 0x55bf88ea42b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55bf88ea4430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55bf88ea44f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55bf88ea4548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55bf88ea4598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55bf88ea4668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55bf88ea46b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55bf88ea4708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55bf88ea47d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55bf88ea4828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55bf88ea4878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55bf88ea4ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55bf88ea4b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55bf88ea4b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55bf88ea4ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55bf88ea4cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55bf88ea4dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55bf88ea4e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55bf88ea4e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55bf88ea4f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55bf88ea4f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55bf88ea55b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55bf88ea5080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55bf88ea51a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bf88ea53a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55bf88ea5420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55bf88ea5678 <col:47>
| |-NonNullAttr 0x55bf88ea56d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55bf88ea5708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55bf88ea5830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55bf88ea5760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55bf88ea5a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55bf88ea58e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55bf88ea5968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55bf88ea5c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55bf88ea5b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55bf88ea5d00 <col:60>
|-FunctionDecl 0x55bf88ea5e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55bf88ea5ef0 <col:54>
| `-ConstAttr 0x55bf88ea5f48 <col:95>
|-FunctionDecl 0x55bf88ea7990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55bf88ea5f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bf88ea5ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55bf88ea7a40 <line:395:19>
| `-ConstAttr 0x55bf88ea7a98 <col:60>
|-FunctionDecl 0x55bf88ea7c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55bf88ea7b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55bf88ea7d10 <col:71>
| `-NonNullAttr 0x55bf88ea7d68 <col:112, col:126> 1
|-FunctionDecl 0x55bf88ea7e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55bf88ea7db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55bf88ea7f18 <line:398:22>
| `-NonNullAttr 0x55bf88ea7f70 <col:63, col:77> 1
|-FunctionDecl 0x55bf88ea8198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55bf88ea7fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55bf88ea8038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55bf88ea8248 <line:401:22>
| `-NonNullAttr 0x55bf88ea82a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88ea84a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bf88ea82e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bf88ea8368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55bf88ea8558 <line:404:22>
| `-NonNullAttr 0x55bf88ea85b0 <col:63, col:77> 1
|-FunctionDecl 0x55bf88ea8808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55bf88ea85f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55bf88ea86a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55bf88ea88b8 <line:407:22>
| `-NonNullAttr 0x55bf88ea8910 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88ea9b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55bf88ea99b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bf88ea9a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55bf88ea9c18 <line:410:22>
| `-NonNullAttr 0x55bf88ea9c70 <col:63, col:77> 1
|-FunctionDecl 0x55bf88ea9ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55bf88ea9cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bf88ea9d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55bf88ea9f58 <line:413:22>
| `-NonNullAttr 0x55bf88ea9fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eaa1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55bf88ea9ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bf88eaa088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55bf88eaa298 <col:37>
| `-NonNullAttr 0x55bf88eaa2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55bf88eaa4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eaa338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bf88eaa3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55bf88eaa588 <line:419:22>
| `-NonNullAttr 0x55bf88eaa5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eaa768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bf88eaa628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bf88eaa6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55bf88eaa818 <line:421:22>
| `-NonNullAttr 0x55bf88eaa870 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eaaa38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eaa8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bf88eaa938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55bf88eaaae8 <line:424:22>
| `-NonNullAttr 0x55bf88eaab40 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eaacc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bf88eaab88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bf88eaac08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55bf88eaad78 <line:427:22>
| `-NonNullAttr 0x55bf88eaadd0 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eaaf78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eaae18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bf88eaae98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55bf88eab028 <line:430:22>
| `-NonNullAttr 0x55bf88eab080 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eab208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55bf88eab0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bf88eab148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55bf88eab2b8 <line:432:22>
| `-NonNullAttr 0x55bf88eab310 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eab538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55bf88eab358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bf88eab3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55bf88eab5e8 <line:435:22>
| |-NonNullAttr 0x55bf88eab640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55bf88eab678 <col:100> "" ""
|-FunctionDecl 0x55bf88eab888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55bf88eab6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bf88eab748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55bf88eab938 <line:438:22>
| |-NonNullAttr 0x55bf88eab990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55bf88eab9d8 <col:97> "" ""
|-FunctionDecl 0x55bf88eabbc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55bf88eaba28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bf88eabaa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55bf88eabc78 <line:441:22>
| `-NonNullAttr 0x55bf88eabcd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eabe50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55bf88eabd18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bf88eabd90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55bf88eabf00 <line:444:22>
| `-NonNullAttr 0x55bf88eabf58 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eac248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55bf88eabfa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55bf88eac028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55bf88eac0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55bf88eac300 <line:448:22>
| `-NonNullAttr 0x55bf88eac358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55bf88eac608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55bf88eac3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55bf88eac430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55bf88eac4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55bf88eac6c0 <col:43>
| `-NonNullAttr 0x55bf88eac718 <col:84, col:98> 1
|-FunctionDecl 0x55bf88eaca20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55bf88eac768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bf88eac7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55bf88eac878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55bf88eacad8 <line:453:22>
| `-NonNullAttr 0x55bf88eacb30 <col:63, col:77> 3
|-FunctionDecl 0x55bf88eace08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55bf88eacb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bf88eacbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55bf88eacc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55bf88eacec0 <line:457:22>
| `-NonNullAttr 0x55bf88eacf18 <col:63, col:80> 2 3
|-FunctionDecl 0x55bf88ead108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55bf88eacf68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bf88eacfe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55bf88ead1b8 <line:459:22>
|-FunctionDecl 0x55bf88ead588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55bf88ead280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55bf88ead420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55bf88ead638 <col:52, col:69> 1 2
|-FunctionDecl 0x55bf88ead7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55bf88ead6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55bf88ead740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55bf88ead9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55bf88ead8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55bf88ead928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55bf88eadb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55bf88eadab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55bf88eadc88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55bf88eadd28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55bf88eaddd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55bf88eadec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55bf88eadf30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55bf88eae100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/safe018_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55bf88eae1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55bf88eae2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55bf88eae250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55bf88eaddb0 '__pthread_unwind_buf_t'
| |   `-Record 0x55bf88eadd28 ''
| `-AlignedAttr 0x55bf88eae308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55bf88eae380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55bf88eae4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55bf88eae548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55bf88eae5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55bf88eae618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55bf88eae820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55bf88eae710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55bf88eaea00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55bf88eae8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55bf88eaebc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55bf88eaeab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55bf88eaec68 <line:488:22>
|-RecordDecl 0x55bf88eaecc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55bf88eaefd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55bf88eaee38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55bf88eaeeb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55bf88eaf088 <col:86>
| `-ReturnsTwiceAttr 0x55bf88eaf0e0 <col:12> Implicit
|-FunctionDecl 0x55bf88eaf408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55bf88eaf1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55bf88eaf2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55bf88eaf4b8 <line:494:22>
| `-NonNullAttr 0x55bf88eaf510 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eaf688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bf88eaf558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bf88eaf730 <line:496:22>
| `-NonNullAttr 0x55bf88eaf788 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eaf890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bf88eaf7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bf88eaf938 <line:498:22>
| `-NonNullAttr 0x55bf88eaf990 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eb0ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bf88eb0a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bf88eb0b80 <line:500:22>
| `-NonNullAttr 0x55bf88eb0bd8 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eb0e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bf88eb0c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bf88eb0cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55bf88eb0ec8 <col:36>
| `-NonNullAttr 0x55bf88eb0f20 <col:66, col:83> 1 2
|-FunctionDecl 0x55bf88eb1020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bf88eb0f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bf88eb10c8 <line:505:22>
| `-NonNullAttr 0x55bf88eb1120 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eb13b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eb11d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bf88eb1250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55bf88eb1468 <line:509:22>
| `-NonNullAttr 0x55bf88eb14c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eb1788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eb1508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bf88eb1588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55bf88eb1608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55bf88eb1840 <line:513:22>
| `-NonNullAttr 0x55bf88eb1898 <col:63, col:80> 1 3
|-FunctionDecl 0x55bf88eb1a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55bf88eb18e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55bf88eb1ad8 <line:515:22>
| `-NonNullAttr 0x55bf88eb1b30 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb1d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55bf88eb1be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55bf88eb1dc0 <line:517:22>
| `-NonNullAttr 0x55bf88eb1e18 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb1f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55bf88eb1e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55bf88eb1fc8 <line:519:22>
| `-NonNullAttr 0x55bf88eb2020 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb2248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eb2068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bf88eb20e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bf88eb22f8 <line:523:22>
| `-NonNullAttr 0x55bf88eb2350 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eb2558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bf88eb2398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bf88eb2418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55bf88eb2608 <line:526:22>
| `-NonNullAttr 0x55bf88eb2660 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb2808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eb26a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bf88eb2728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55bf88eb28b8 <line:529:22>
| `-NonNullAttr 0x55bf88eb2910 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eb2b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bf88eb2958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bf88eb2a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55bf88eb2bb0 <line:531:22>
| `-NonNullAttr 0x55bf88eb2c08 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb2db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eb2c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bf88eb2cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55bf88eb2e68 <line:535:22>
| `-NonNullAttr 0x55bf88eb2ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eb3048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bf88eb2f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bf88eb2f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55bf88eb30f8 <line:538:22>
| `-NonNullAttr 0x55bf88eb3150 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb32f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eb3198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55bf88eb3218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55bf88eb33a8 <line:542:22>
| `-NonNullAttr 0x55bf88eb3400 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eb3588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bf88eb3448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bf88eb34c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55bf88eb3638 <line:545:22>
| `-NonNullAttr 0x55bf88eb3690 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb3878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55bf88eb36d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bf88eb3758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55bf88eb3928 <line:548:22>
| `-NonNullAttr 0x55bf88eb3980 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eb4b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55bf88eb39c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55bf88eb4a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55bf88eb4be8 <line:551:22>
| `-NonNullAttr 0x55bf88eb4c40 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb4f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55bf88eb4d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55bf88eb4e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55bf88eb5028 <col:29>
| `-NonNullAttr 0x55bf88eb5080 <col:70, col:84> 1
|-FunctionDecl 0x55bf88eb51f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bf88eb50c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bf88eb52a0 <line:556:22>
| `-NonNullAttr 0x55bf88eb52f8 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb5400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bf88eb5348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bf88eb54a8 <line:558:22>
| `-NonNullAttr 0x55bf88eb5500 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eb5600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bf88eb5548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bf88eb56a8 <line:560:19>
| `-NonNullAttr 0x55bf88eb5700 <col:49, col:63> 1
|-FunctionDecl 0x55bf88eb5938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bf88eb5748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55bf88eb57d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55bf88eb59e8 <col:39>
| `-NonNullAttr 0x55bf88eb5a70 <col:69, col:86> 1 2
|-FunctionDecl 0x55bf88eb5b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bf88eb5ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bf88eb5c18 <line:565:22>
| `-NonNullAttr 0x55bf88eb5c70 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eb5d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bf88eb5cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bf88eb5e18 <line:567:22>
| `-NonNullAttr 0x55bf88eb5e70 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eb6028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bf88eb5eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55bf88eb5f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55bf88eb60d8 <col:39>
| `-NonNullAttr 0x55bf88eb6130 <col:69, col:86> 1 2
|-FunctionDecl 0x55bf88eb6230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55bf88eb6178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55bf88eb62d8 <line:572:22>
| `-NonNullAttr 0x55bf88eb6330 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eb6518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55bf88eb63e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55bf88eb65c0 <line:574:22>
| `-NonNullAttr 0x55bf88eb6618 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb6720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55bf88eb6668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55bf88eb67c8 <line:576:22>
| `-NonNullAttr 0x55bf88eb6820 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb6a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eb6868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55bf88eb68e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bf88eb6b30 <line:580:22>
| `-NonNullAttr 0x55bf88eb6b88 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eb6d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55bf88eb6bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55bf88eb6c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55bf88eb6e48 <line:583:22>
| `-NonNullAttr 0x55bf88eb6ea0 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb7048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eb6ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55bf88eb6f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55bf88eb70f8 <line:587:22>
| `-NonNullAttr 0x55bf88eb7150 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eb72d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55bf88eb7198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55bf88eb7218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55bf88eb7388 <col:36>
| `-NonNullAttr 0x55bf88eb73e0 <col:77, col:91> 1
|-FunctionDecl 0x55bf88eb7718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55bf88eb74c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55bf88eb75d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55bf88eb77c8 <line:592:22>
| `-NonNullAttr 0x55bf88eb7820 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb7998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55bf88eb7868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55bf88eb7a40 <line:594:22>
| `-NonNullAttr 0x55bf88eb7ac0 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb7bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55bf88eb7b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55bf88eb7c68 <line:596:22>
| `-NonNullAttr 0x55bf88eb7cc0 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eb7dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55bf88eb7d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55bf88eb7e68 <line:598:22>
| `-NonNullAttr 0x55bf88eb7ec0 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eb80e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55bf88eb7f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55bf88eb7f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55bf88eb8198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55bf88eb84c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55bf88eb8218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55bf88eb8290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55bf88eb8320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55bf88eb8580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55bf88eb8798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55bf88eb8660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55bf88eb8840 <line:607:22>
| `-NonNullAttr 0x55bf88eb8898 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb89a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55bf88eb88e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55bf88eb8a48 <line:609:22>
| `-NonNullAttr 0x55bf88eb8ad0 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb8cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88eb8b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55bf88eb8b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bf88eb8da8 <line:613:22>
| `-NonNullAttr 0x55bf88eb8e00 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eb9008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55bf88eb8e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55bf88eb8ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55bf88eb90b8 <col:37>
| `-NonNullAttr 0x55bf88eb9110 <col:78, col:92> 1
|-FunctionDecl 0x55bf88eb9328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55bf88eb9158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55bf88eb9200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55bf88eb93d8 <line:619:22>
| `-NonNullAttr 0x55bf88eb9430 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88eb95f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55bf88eb9478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55bf88eb94f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55bf88eb96a8 <line:622:22>
| `-NonNullAttr 0x55bf88eb9700 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb99a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55bf88eb97e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55bf88eb9860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55bf88eb9a58 <line:624:22>
| `-NonNullAttr 0x55bf88eb9ae0 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb9c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bf88eb9b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bf88eb9d00 <line:626:22>
| `-NonNullAttr 0x55bf88eb9d58 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eb9e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bf88eb9da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bf88eb9f08 <line:628:22>
| `-NonNullAttr 0x55bf88eb9f60 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eba060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bf88eb9fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bf88eba108 <line:630:22>
| `-NonNullAttr 0x55bf88eba160 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eba260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55bf88eba1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55bf88eba308 <line:632:22>
| `-NonNullAttr 0x55bf88eba360 <col:52, col:66> 1
|-FunctionDecl 0x55bf88eba738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55bf88eba440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55bf88eba550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55bf88eba5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55bf88eba7f0 <line:636:22>
| `-NonNullAttr 0x55bf88eba848 <col:63, col:77> 1
|-FunctionDecl 0x55bf88eba9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55bf88eba898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55bf88ebaa70 <line:638:22>
| `-NonNullAttr 0x55bf88ebbb00 <col:63, col:77> 1
|-FunctionDecl 0x55bf88ebbc00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55bf88ebbb48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55bf88ebbca8 <line:640:22>
| `-NonNullAttr 0x55bf88ebbd00 <col:52, col:66> 1
|-FunctionDecl 0x55bf88ebbee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55bf88ebbdb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55bf88ebbf90 <line:642:22>
| `-NonNullAttr 0x55bf88ebbfe8 <col:63, col:77> 1
|-FunctionDecl 0x55bf88ebc0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55bf88ebc038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55bf88ebc198 <line:644:22>
| `-NonNullAttr 0x55bf88ebc1f0 <col:63, col:77> 1
|-FunctionDecl 0x55bf88ebc418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55bf88ebc238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55bf88ebc2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55bf88ebc4c8 <line:648:22>
| `-NonNullAttr 0x55bf88ebc520 <col:63, col:80> 1 2
|-FunctionDecl 0x55bf88ebc728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55bf88ebc568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55bf88ebc5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55bf88ebc7d8 <line:651:22>
| `-NonNullAttr 0x55bf88ebc830 <col:63, col:77> 1
|-FunctionDecl 0x55bf88ebcb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55bf88ebc910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55bf88ebca30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55bf88ebcc48 <line:654:22>
| `-NonNullAttr 0x55bf88ebcca0 <col:63, col:77> 1
|-FunctionDecl 0x55bf88ebcdf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55bf88ebcce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55bf88ebcea0 <col:69>
|-FunctionDecl 0x55bf88ebd018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55bf88ebcf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55bf88ebd0c0 <col:72>
|-FunctionDecl 0x55bf88ebd2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55bf88ebd128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55bf88ebd1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55bf88ebd3a8 <col:44>
|-FunctionDecl 0x55bf88ebd5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55bf88ebd410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55bf88ebd488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55bf88ebd678 <line:661:22>
| `-NonNullAttr 0x55bf88ebd6d0 <col:63, col:77> 2
|-FunctionDecl 0x55bf88ebdb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55bf88ebd7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55bf88ebd8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55bf88ebd9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55bf88ebdbe8 <col:47>
|-FunctionDecl 0x55bf88ebdcf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55bf88ebdc58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55bf88ebde48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55bf88ebddb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55bf88ebdfa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55bf88ebdf08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55bf88ebe068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55bf88ebe128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55bf88ebe1e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55bf88ebe2a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55bf88ebe320 prev 0x55bf88ebe2a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55bf88ebe388 <col:24> 'int' 0
|-VarDecl 0x55bf88ebe3c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55bf88ebe440 prev 0x55bf88ebe3c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55bf88ebe4a8 <col:27> 'int' 0
|-VarDecl 0x55bf88ebe4e0 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55bf88ebe560 prev 0x55bf88ebe4e0 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55bf88ebe5c8 <col:27> 'int' 0
|-VarDecl 0x55bf88ebe600 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55bf88ebe680 prev 0x55bf88ebe600 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55bf88ebe6e8 <col:27> 'int' 0
|-VarDecl 0x55bf88ebe718 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x55bf88ebe798 <line:681:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x55bf88ebe810 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55bf88ebe888 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55bf88ebe900 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55bf88ebe978 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55bf88ebe9f0 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55bf88ebea68 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55bf88ebeb00 <line:688:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55bf88ebeb78 <line:689:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55bf88ebebf0 <line:690:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x55bf88ebec70 <line:691:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x55bf88ebecf0 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x55bf88ebed68 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55bf88ebede8 <line:694:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x55bf88ebee60 <line:695:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55bf88ebeed8 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55bf88ebef50 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55bf88ebefd0 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x55bf88ebf050 prev 0x55bf88ebefd0 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55bf88ebf0b8 <col:9> 'int' 0
|-VarDecl 0x55bf88ebf0e8 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55bf88ebf168 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55bf88ebf1e0 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55bf88ebf258 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55bf88ebf2d0 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55bf88ebf348 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55bf88ebf3c0 <line:706:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55bf88ebf438 <line:707:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55bf88ebf4b0 <line:708:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55bf88ebf528 <line:709:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55bf88ebf5a0 <line:710:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55bf88ebf620 <line:711:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55bf88ebf6a0 <line:712:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55bf88ebf718 <line:713:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55bf88ebf798 <line:714:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55bf88ebf810 <line:715:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55bf88ebf890 <line:716:1, col:5> col:5 used y 'int'
|-VarDecl 0x55bf88ebf910 prev 0x55bf88ebf890 <line:717:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55bf88ebf978 <col:9> 'int' 0
|-VarDecl 0x55bf88ebf9a8 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55bf88ebfa20 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55bf88ebfa98 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55bf88ec0bd0 prev 0x55bf88ebdcf0 <line:721:1, line:748:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55bf88ec0b38 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55bf88ec3b50 <line:722:1, line:748:1>
|   |-CallExpr 0x55bf88ec0ce8 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec0cd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec0c78 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bf88ec0d60 <line:724:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec0d08 <col:3> 'int' lvalue Var 0x55bf88ebe440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55bf88ec0d48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bf88ec0d28 <col:25> 'int' lvalue Var 0x55bf88ebf910 'y' 'int'
|   |-CallExpr 0x55bf88ec0db8 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec0da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec0d80 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bf88ec0e10 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec0df8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec0dd8 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bf88ec0ed8 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec0e30 <col:3> '_Bool' lvalue Var 0x55bf88ebf9a8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55bf88ec0eb8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55bf88ec0ea0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55bf88ec0e50 <col:19> '_Bool (void)' Function 0x55bf88e64770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55bf88ec0f70 <line:728:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec0ef8 <col:3> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55bf88ec0f50 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55bf88ec0f38 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55bf88ec0f18 <col:19> '_Bool (void)' Function 0x55bf88e64770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55bf88ec0fe8 <line:729:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec0f90 <col:3> '_Bool' lvalue Var 0x55bf88ebf0e8 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec0fd0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bf88ec0fb0 <col:21> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55bf88ec1060 <line:730:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec1008 <col:3> 'int' lvalue Var 0x55bf88ebf168 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55bf88ec1048 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bf88ec1028 <col:15> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   |-BinaryOperator 0x55bf88ec1498 <line:731:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec1080 <col:3> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   | `-ConditionalOperator 0x55bf88ec1468 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55bf88ec1290 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55bf88ec11b0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55bf88ec10d8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55bf88ec10c0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55bf88ec10a0 <col:8> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55bf88ec1190 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55bf88ec1128 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55bf88ec1110 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55bf88ec10f0 <col:27> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55bf88ec1178 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55bf88ec1160 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55bf88ec1140 <col:46> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55bf88ec1270 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55bf88ec1208 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55bf88ec11f0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55bf88ec11d0 <col:65> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55bf88ec1258 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55bf88ec1240 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55bf88ec1220 <col:84> '_Bool' lvalue Var 0x55bf88ebf438 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55bf88ec1450 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec12b0 <col:101> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   |   `-ParenExpr 0x55bf88ec1430 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55bf88ec1400 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55bf88ec1370 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bf88ec1328 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bf88ec1310 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bf88ec12d0 <col:106> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bf88ec1358 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bf88ec1340 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bf88ec12f0 <col:124> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55bf88ec13d0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bf88ec1390 <col:141> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55bf88ec13e8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec13b0 <col:153> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55bf88ec19a8 <line:732:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec14b8 <col:3> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55bf88ec1978 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bf88ec1948 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bf88ec1930 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bf88ec14d8 <col:15> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bf88ec1960 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec14f8 <col:31> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55bf88ec1910 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bf88ec18e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bf88ec1708 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bf88ec1628 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bf88ec1550 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bf88ec1538 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bf88ec1518 <col:45> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bf88ec1608 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bf88ec15a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bf88ec1588 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bf88ec1568 <col:64> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55bf88ec15f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bf88ec15d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bf88ec15b8 <col:83> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bf88ec16e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bf88ec1680 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bf88ec1668 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bf88ec1648 <col:102> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55bf88ec16d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bf88ec16b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bf88ec1698 <col:121> '_Bool' lvalue Var 0x55bf88ebf438 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55bf88ec18c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bf88ec1728 <col:138> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55bf88ec18a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bf88ec1878 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bf88ec17e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bf88ec17a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bf88ec1788 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bf88ec1748 <col:151> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bf88ec17d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bf88ec17b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bf88ec1768 <col:169> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55bf88ec1848 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bf88ec1808 <col:186> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55bf88ec1860 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bf88ec1828 <col:198> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55bf88ec1ed0 <line:733:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec19c8 <col:3> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55bf88ec1ea0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bf88ec1e70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bf88ec1e58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bf88ec19e8 <col:15> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bf88ec1e88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec1a08 <col:31> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55bf88ec1e38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bf88ec1e08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bf88ec1c30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bf88ec1b50 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bf88ec1a60 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bf88ec1a48 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bf88ec1a28 <col:45> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bf88ec1b30 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bf88ec1ab0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bf88ec1a98 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bf88ec1a78 <col:64> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55bf88ec1b00 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bf88ec1ae8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bf88ec1ac8 <col:83> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bf88ec1c10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bf88ec1ba8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bf88ec1b90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bf88ec1b70 <col:102> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55bf88ec1bf8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bf88ec1be0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bf88ec1bc0 <col:121> '_Bool' lvalue Var 0x55bf88ebf438 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55bf88ec1df0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bf88ec1c50 <col:138> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55bf88ec1dd0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bf88ec1da0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bf88ec1d10 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bf88ec1cc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bf88ec1cb0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bf88ec1c70 <col:151> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bf88ec1cf8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bf88ec1ce0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bf88ec1c90 <col:169> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55bf88ec1d70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bf88ec1d30 <col:186> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55bf88ec1d88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bf88ec1d50 <col:198> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55bf88ec2478 <line:734:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec1ef0 <col:3> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec2460 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec2430 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bf88ec23e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec23d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec1f10 <col:20> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec2418 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec2400 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec1f30 <col:36> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55bf88ec23b0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bf88ec2380 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bf88ec2140 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bf88ec2060 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bf88ec1f88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bf88ec1f70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bf88ec1f50 <col:55> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bf88ec2040 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bf88ec1fd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bf88ec1fc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bf88ec1fa0 <col:74> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55bf88ec2028 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bf88ec2010 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bf88ec1ff0 <col:93> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bf88ec2120 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bf88ec20b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bf88ec20a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bf88ec2080 <col:112> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55bf88ec2108 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bf88ec20f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bf88ec20d0 <col:131> '_Bool' lvalue Var 0x55bf88ebf438 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55bf88ec2368 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bf88ec2350 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bf88ec2160 <col:148> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55bf88ec2330 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bf88ec2300 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bf88ec2220 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bf88ec21d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bf88ec21c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bf88ec2180 <col:166> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bf88ec2208 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bf88ec21f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bf88ec21a0 <col:184> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55bf88ec22b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bf88ec2270 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bf88ec2240 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bf88ec22e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bf88ec22d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bf88ec2298 <col:212> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bf88ec2a40 <line:735:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec2498 <col:3> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec2a28 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec29f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bf88ec29b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec2998 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec24b8 <col:20> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec29e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec29c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec24d8 <col:36> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55bf88ec2978 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bf88ec2948 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bf88ec26e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bf88ec2608 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bf88ec2530 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bf88ec2518 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bf88ec24f8 <col:55> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bf88ec25e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bf88ec2580 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bf88ec2568 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bf88ec2548 <col:74> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55bf88ec25d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bf88ec25b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bf88ec2598 <col:93> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bf88ec26c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bf88ec2660 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bf88ec2648 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bf88ec2628 <col:112> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55bf88ec26b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bf88ec2698 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bf88ec2678 <col:131> '_Bool' lvalue Var 0x55bf88ebf438 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55bf88ec2930 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bf88ec2918 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bf88ec2708 <col:148> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55bf88ec28f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bf88ec28c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bf88ec27c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bf88ec2780 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bf88ec2768 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bf88ec2728 <col:166> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bf88ec27b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bf88ec2798 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bf88ec2748 <col:184> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55bf88ec2898 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bf88ec2818 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bf88ec27e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bf88ec28b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bf88ec2870 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bf88ec2840 <col:219> 'int' 0
|   |-BinaryOperator 0x55bf88ec2ff8 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec2a60 <col:3> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec2fe0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec2fb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bf88ec2f68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec2f50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec2a80 <col:20> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec2f98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec2f80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec2aa0 <col:36> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55bf88ec2f30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bf88ec2f00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bf88ec2cc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bf88ec2be0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bf88ec2af8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bf88ec2ae0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bf88ec2ac0 <col:55> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bf88ec2bc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bf88ec2b58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bf88ec2b40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bf88ec2b10 <col:74> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55bf88ec2ba8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bf88ec2b90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bf88ec2b70 <col:93> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bf88ec2ca0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bf88ec2c38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bf88ec2c20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bf88ec2c00 <col:112> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55bf88ec2c88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bf88ec2c70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bf88ec2c50 <col:131> '_Bool' lvalue Var 0x55bf88ebf438 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55bf88ec2ee8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bf88ec2ed0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bf88ec2ce0 <col:148> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55bf88ec2eb0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bf88ec2e80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bf88ec2da0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bf88ec2d58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bf88ec2d40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bf88ec2d00 <col:166> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bf88ec2d88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bf88ec2d70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bf88ec2d20 <col:184> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55bf88ec2e38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bf88ec2df0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bf88ec2dc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bf88ec2e68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bf88ec2e50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bf88ec2e18 <col:212> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55bf88ec35c0 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec3018 <col:3> '_Bool' lvalue Var 0x55bf88ebf438 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec35a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec3578 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bf88ec3530 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec3518 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec3038 <col:20> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec3560 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec3548 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec3058 <col:36> '_Bool' lvalue Var 0x55bf88ebf438 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55bf88ec34f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bf88ec34c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bf88ec3268 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bf88ec3188 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bf88ec30b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bf88ec3098 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bf88ec3078 <col:55> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bf88ec3168 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bf88ec3100 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bf88ec30e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bf88ec30c8 <col:74> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55bf88ec3150 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bf88ec3138 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bf88ec3118 <col:93> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bf88ec3248 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bf88ec31e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bf88ec31c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bf88ec31a8 <col:112> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55bf88ec3230 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bf88ec3218 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bf88ec31f8 <col:131> '_Bool' lvalue Var 0x55bf88ebf438 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55bf88ec34b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bf88ec3498 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bf88ec3288 <col:148> '_Bool' lvalue Var 0x55bf88ebf438 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55bf88ec3478 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bf88ec3448 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bf88ec3348 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bf88ec3300 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bf88ec32e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bf88ec32a8 <col:166> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bf88ec3330 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bf88ec3318 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bf88ec32c8 <col:184> '_Bool' lvalue Var 0x55bf88ebf258 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55bf88ec3418 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bf88ec3398 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bf88ec3368 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bf88ec3430 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bf88ec33f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bf88ec33c0 <col:219> 'int' 0
|   |-BinaryOperator 0x55bf88ec3638 <line:738:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec35e0 <col:3> 'int' lvalue Var 0x55bf88ebe560 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55bf88ec3620 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bf88ec3600 <col:25> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   |-BinaryOperator 0x55bf88ec3768 <line:739:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec3658 <col:3> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   | `-ConditionalOperator 0x55bf88ec3738 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55bf88ec36f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bf88ec36d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bf88ec3678 <col:7> '_Bool' lvalue Var 0x55bf88ebf0e8 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55bf88ec3708 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec3698 <col:25> 'int' lvalue Var 0x55bf88ebf168 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55bf88ec3720 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55bf88ec36b8 <col:37> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   |-BinaryOperator 0x55bf88ec3800 <line:740:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec3788 <col:3> '_Bool' lvalue Var 0x55bf88ebf0e8 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55bf88ec37d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55bf88ec37a8 <col:28> 'int' 0
|   |-CallExpr 0x55bf88ec3858 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec3840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec3820 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bf88ec38b0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec3898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec3878 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55bf88ec3908 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec38f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec38d0 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bf88ec3960 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec3948 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec3928 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bf88ec3a18 <line:745:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec3980 <col:3> 'int' lvalue Var 0x55bf88ebe320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55bf88ec39f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55bf88ec39e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec39a0 <col:22> 'int' lvalue Var 0x55bf88ebe320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55bf88ec39c0 <col:41> 'int' 1
|   |-CallExpr 0x55bf88ec3a70 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec3a58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec3a38 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55bf88ec3b18 <line:747:3, col:36>
|     `-CallExpr 0x55bf88ec3af8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55bf88ec3ae0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55bf88ec3a90 <col:10> 'void *(void)' Function 0x55bf88e64ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55bf88ec3cd8 prev 0x55bf88ebde48 <line:749:1, line:765:1> line:749:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55bf88ec3c40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55bf88ec4df0 <line:750:1, line:765:1>
|   |-CallExpr 0x55bf88ec3db8 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec3da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec3d80 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bf88ec3e18 <line:752:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec3dd8 <col:3> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   | `-IntegerLiteral 0x55bf88ec3df8 <col:7> 'int' 1
|   |-CallExpr 0x55bf88ec3e70 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec3e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec3e38 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bf88ec3ec8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec3eb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec3e90 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bf88ec41b0 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec3ee8 <col:3> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   | `-ConditionalOperator 0x55bf88ec4180 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55bf88ec3fa8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55bf88ec3f60 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55bf88ec3f48 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55bf88ec3f08 <col:7> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55bf88ec3f90 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55bf88ec3f78 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55bf88ec3f28 <col:25> '_Bool' lvalue Var 0x55bf88ebf2d0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bf88ec4168 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec3fc8 <col:42> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55bf88ec4148 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55bf88ec4118 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55bf88ec4088 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bf88ec4040 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bf88ec4028 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bf88ec3fe8 <col:55> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bf88ec4070 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bf88ec4058 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bf88ec4008 <col:73> '_Bool' lvalue Var 0x55bf88ebf4b0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55bf88ec40e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bf88ec40a8 <col:90> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55bf88ec4100 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec40c8 <col:102> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   |-BinaryOperator 0x55bf88ec43b8 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec41d0 <col:3> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec43a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec4370 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bf88ec4290 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bf88ec4248 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bf88ec4230 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bf88ec41f0 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bf88ec4278 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bf88ec4260 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bf88ec4210 <col:38> '_Bool' lvalue Var 0x55bf88ebf2d0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec4328 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bf88ec42e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bf88ec42b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bf88ec4358 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bf88ec4340 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec4308 <col:66> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bf88ec46a0 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec43d8 <col:3> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec4688 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec4658 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bf88ec4578 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bf88ec4498 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bf88ec4450 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bf88ec4438 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bf88ec43f8 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bf88ec4480 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bf88ec4468 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bf88ec4418 <col:38> '_Bool' lvalue Var 0x55bf88ebf2d0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55bf88ec4558 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bf88ec4510 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bf88ec44f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bf88ec44b8 <col:56> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bf88ec4540 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bf88ec4528 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bf88ec44d8 <col:74> '_Bool' lvalue Var 0x55bf88ebf4b0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec4610 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bf88ec45c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bf88ec4598 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bf88ec4640 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bf88ec4628 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec45f0 <col:102> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55bf88ec48a8 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec46c0 <col:3> '_Bool' lvalue Var 0x55bf88ebf2d0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec4890 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec4860 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bf88ec4780 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bf88ec4738 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bf88ec4720 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bf88ec46e0 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bf88ec4768 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bf88ec4750 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bf88ec4700 <col:38> '_Bool' lvalue Var 0x55bf88ebf2d0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec4818 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bf88ec47d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bf88ec47a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bf88ec4848 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bf88ec4830 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec47f8 <col:66> '_Bool' lvalue Var 0x55bf88ebf2d0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55bf88ec4ba8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec48c8 <col:3> '_Bool' lvalue Var 0x55bf88ebf4b0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec4b90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec4b60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bf88ec4a68 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bf88ec4988 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bf88ec4940 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bf88ec4928 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bf88ec48e8 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bf88ec4970 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bf88ec4958 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bf88ec4908 <col:38> '_Bool' lvalue Var 0x55bf88ebf2d0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55bf88ec4a48 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bf88ec4a00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bf88ec49e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bf88ec49a8 <col:56> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bf88ec4a30 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bf88ec4a18 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bf88ec49c8 <col:74> '_Bool' lvalue Var 0x55bf88ebf4b0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec4b00 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bf88ec4ab8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bf88ec4a88 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bf88ec4b30 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bf88ec4b18 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec4ae0 <col:102> '_Bool' lvalue Var 0x55bf88ebf4b0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55bf88ec4c00 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec4be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec4bc8 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bf88ec4c58 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec4c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec4c20 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bf88ec4d10 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec4c78 <col:3> 'int' lvalue Var 0x55bf88ebe320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55bf88ec4cf0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55bf88ec4cd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec4c98 <col:22> 'int' lvalue Var 0x55bf88ebe320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55bf88ec4cb8 <col:41> 'int' 1
|   |-CallExpr 0x55bf88ec4d68 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec4d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec4d30 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55bf88ec4de0 <line:764:3, col:36>
|     `-CallExpr 0x55bf88ec4dc0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55bf88ec4da8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55bf88ec4d88 <col:10> 'void *(void)' Function 0x55bf88e64ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55bf88ec4f20 prev 0x55bf88ebdfa0 <line:766:1, line:800:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55bf88ec4e88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55bf88ec8c08 <line:767:1, line:800:1>
|   |-CallExpr 0x55bf88ec5000 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec4fe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec4fc8 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bf88ec5098 <line:769:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec5020 <col:3> '_Bool' lvalue Var 0x55bf88ebf9a8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55bf88ec5078 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55bf88ec5060 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55bf88ec5040 <col:19> '_Bool (void)' Function 0x55bf88e64770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55bf88ec5130 <line:770:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec50b8 <col:3> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55bf88ec5110 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55bf88ec50f8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55bf88ec50d8 <col:19> '_Bool (void)' Function 0x55bf88e64770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55bf88ec51a8 <line:771:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec5150 <col:3> '_Bool' lvalue Var 0x55bf88ebf0e8 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec5190 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bf88ec5170 <col:21> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55bf88ec5220 <line:772:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec51c8 <col:3> 'int' lvalue Var 0x55bf88ebf168 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55bf88ec5208 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bf88ec51e8 <col:15> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   |-BinaryOperator 0x55bf88ec5658 <line:773:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec5240 <col:3> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   | `-ConditionalOperator 0x55bf88ec5628 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55bf88ec5450 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55bf88ec5370 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55bf88ec5298 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55bf88ec5280 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55bf88ec5260 <col:8> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55bf88ec5350 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55bf88ec52e8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55bf88ec52d0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55bf88ec52b0 <col:27> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55bf88ec5338 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55bf88ec5320 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55bf88ec5300 <col:46> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55bf88ec5430 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55bf88ec53c8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55bf88ec53b0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55bf88ec5390 <col:65> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55bf88ec5418 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55bf88ec5400 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55bf88ec53e0 <col:84> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55bf88ec5610 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec5470 <col:101> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   |   `-ParenExpr 0x55bf88ec55f0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55bf88ec55c0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55bf88ec5530 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bf88ec54e8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bf88ec54d0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bf88ec5490 <col:106> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bf88ec5518 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bf88ec5500 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bf88ec54b0 <col:124> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55bf88ec5590 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bf88ec5550 <col:141> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55bf88ec55a8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec5570 <col:153> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55bf88ec5ba0 <line:774:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec5678 <col:3> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55bf88ec5b70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bf88ec5b08 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bf88ec5af0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bf88ec5698 <col:15> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bf88ec5b20 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec56b8 <col:31> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55bf88ec5ad0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bf88ec5aa0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bf88ec58c8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bf88ec57e8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bf88ec5710 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bf88ec56f8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bf88ec56d8 <col:45> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bf88ec57c8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bf88ec5760 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bf88ec5748 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bf88ec5728 <col:64> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55bf88ec57b0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bf88ec5798 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bf88ec5778 <col:83> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bf88ec58a8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bf88ec5840 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bf88ec5828 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bf88ec5808 <col:102> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55bf88ec5890 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bf88ec5878 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bf88ec5858 <col:121> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55bf88ec5a88 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bf88ec58e8 <col:138> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55bf88ec5a68 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bf88ec5a38 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bf88ec59a8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bf88ec5960 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bf88ec5948 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bf88ec5908 <col:151> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bf88ec5990 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bf88ec5978 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bf88ec5928 <col:169> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55bf88ec5a08 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bf88ec59c8 <col:186> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55bf88ec5a20 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bf88ec59e8 <col:198> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55bf88ec60b0 <line:775:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec5bc0 <col:3> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55bf88ec6080 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55bf88ec6050 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bf88ec6038 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bf88ec5be0 <col:15> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55bf88ec6068 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec5c00 <col:31> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55bf88ec6018 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55bf88ec5fe8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55bf88ec5e10 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55bf88ec5d30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55bf88ec5c58 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55bf88ec5c40 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55bf88ec5c20 <col:45> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55bf88ec5d10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55bf88ec5ca8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55bf88ec5c90 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55bf88ec5c70 <col:64> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55bf88ec5cf8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55bf88ec5ce0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55bf88ec5cc0 <col:83> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55bf88ec5df0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55bf88ec5d88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55bf88ec5d70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55bf88ec5d50 <col:102> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55bf88ec5dd8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55bf88ec5dc0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55bf88ec5da0 <col:121> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55bf88ec5fd0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bf88ec5e30 <col:138> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55bf88ec5fb0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55bf88ec5f80 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55bf88ec5ef0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55bf88ec5ea8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55bf88ec5e90 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55bf88ec5e50 <col:151> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55bf88ec5ed8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55bf88ec5ec0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55bf88ec5e70 <col:169> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55bf88ec5f50 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55bf88ec5f10 <col:186> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55bf88ec5f68 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55bf88ec5f30 <col:198> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55bf88ec6658 <line:776:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec60d0 <col:3> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec6640 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec6610 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bf88ec65c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec65b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec60f0 <col:20> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec65f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec65e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec6110 <col:36> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55bf88ec6590 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bf88ec6560 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bf88ec6320 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bf88ec6240 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bf88ec6168 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bf88ec6150 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bf88ec6130 <col:55> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bf88ec6220 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bf88ec61b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bf88ec61a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bf88ec6180 <col:74> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55bf88ec6208 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bf88ec61f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bf88ec61d0 <col:93> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bf88ec6300 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bf88ec6298 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bf88ec6280 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bf88ec6260 <col:112> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55bf88ec62e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bf88ec62d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bf88ec62b0 <col:131> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55bf88ec6548 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bf88ec6530 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bf88ec6340 <col:148> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55bf88ec6510 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bf88ec64e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bf88ec6400 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bf88ec63b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bf88ec63a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bf88ec6360 <col:166> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bf88ec63e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bf88ec63d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bf88ec6380 <col:184> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55bf88ec6498 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bf88ec6450 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bf88ec6420 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bf88ec64c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bf88ec64b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bf88ec6478 <col:212> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bf88ec6c48 <line:777:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec6678 <col:3> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec6c30 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec6c00 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bf88ec6bb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec6ba0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec6698 <col:20> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec6be8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec6bd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec66b8 <col:36> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55bf88ec6b80 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bf88ec6b28 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bf88ec68c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bf88ec67e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bf88ec6710 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bf88ec66f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bf88ec66d8 <col:55> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bf88ec67c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bf88ec6760 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bf88ec6748 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bf88ec6728 <col:74> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55bf88ec67b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bf88ec6798 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bf88ec6778 <col:93> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bf88ec68a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bf88ec6840 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bf88ec6828 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bf88ec6808 <col:112> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55bf88ec6890 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bf88ec6878 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bf88ec6858 <col:131> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55bf88ec6b10 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bf88ec6af8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bf88ec68e8 <col:148> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55bf88ec6ad8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bf88ec6aa8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bf88ec69a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bf88ec6960 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bf88ec6948 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bf88ec6908 <col:166> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bf88ec6990 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bf88ec6978 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bf88ec6928 <col:184> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55bf88ec6a78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bf88ec69f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bf88ec69c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bf88ec6a90 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bf88ec6a50 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bf88ec6a20 <col:219> 'int' 0
|   |-BinaryOperator 0x55bf88ec71f0 <line:778:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec6c68 <col:3> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec71d8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec71a8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55bf88ec7160 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec7148 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec6c88 <col:20> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec7190 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec7178 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec6ca8 <col:36> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55bf88ec7128 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55bf88ec70f8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55bf88ec6eb8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bf88ec6dd8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bf88ec6d00 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bf88ec6ce8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bf88ec6cc8 <col:55> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bf88ec6db8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bf88ec6d50 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bf88ec6d38 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bf88ec6d18 <col:74> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55bf88ec6da0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bf88ec6d88 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bf88ec6d68 <col:93> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bf88ec6e98 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bf88ec6e30 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bf88ec6e18 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bf88ec6df8 <col:112> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55bf88ec6e80 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bf88ec6e68 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bf88ec6e48 <col:131> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55bf88ec70e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bf88ec70c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bf88ec6ed8 <col:148> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55bf88ec70a8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55bf88ec7078 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55bf88ec6f98 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bf88ec6f50 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bf88ec6f38 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bf88ec6ef8 <col:166> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bf88ec6f80 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bf88ec6f68 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bf88ec6f18 <col:184> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55bf88ec7030 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bf88ec6fe8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bf88ec6fb8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bf88ec7060 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55bf88ec7048 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55bf88ec7010 <col:212> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55bf88ec77b8 <line:779:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec7210 <col:3> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec77a0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec7770 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55bf88ec7728 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec7710 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec7230 <col:20> '_Bool' lvalue Var 0x55bf88ebfa98 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec7758 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55bf88ec7740 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55bf88ec7250 <col:36> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55bf88ec76f0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55bf88ec76c0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55bf88ec7460 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55bf88ec7380 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55bf88ec72a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55bf88ec7290 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55bf88ec7270 <col:55> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55bf88ec7360 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55bf88ec72f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55bf88ec72e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55bf88ec72c0 <col:74> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55bf88ec7348 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55bf88ec7330 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55bf88ec7310 <col:93> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55bf88ec7440 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55bf88ec73d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55bf88ec73c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55bf88ec73a0 <col:112> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55bf88ec7428 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55bf88ec7410 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55bf88ec73f0 <col:131> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55bf88ec76a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55bf88ec7690 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55bf88ec7480 <col:148> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55bf88ec7670 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55bf88ec7640 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55bf88ec7540 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55bf88ec74f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55bf88ec74e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55bf88ec74a0 <col:166> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55bf88ec7528 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55bf88ec7510 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55bf88ec74c0 <col:184> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55bf88ec7610 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55bf88ec7590 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55bf88ec7560 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55bf88ec7628 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55bf88ec75e8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55bf88ec75b8 <col:219> 'int' 0
|   |-BinaryOperator 0x55bf88ec7850 <line:780:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec77d8 <col:3> '_Bool' lvalue Var 0x55bf88ebebf0 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55bf88ec7828 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55bf88ec77f8 <col:45> 'int' 1
|   |-BinaryOperator 0x55bf88ec78c8 <line:781:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55bf88ec7870 <col:3> 'int *' lvalue Var 0x55bf88ebec70 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55bf88ec78b0 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55bf88ec7890 <col:43> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   |-BinaryOperator 0x55bf88ec7940 <line:782:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec78e8 <col:3> 'int' lvalue Var 0x55bf88ebe680 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55bf88ec7928 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55bf88ec7908 <col:25> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   |-BinaryOperator 0x55bf88ec7a70 <line:783:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec7960 <col:3> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   | `-ConditionalOperator 0x55bf88ec7a40 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55bf88ec79f8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55bf88ec79e0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55bf88ec7980 <col:7> '_Bool' lvalue Var 0x55bf88ebf0e8 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55bf88ec7a10 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec79a0 <col:25> 'int' lvalue Var 0x55bf88ebf168 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55bf88ec7a28 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55bf88ec79c0 <col:37> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   |-BinaryOperator 0x55bf88ec7b08 <line:784:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec7a90 <col:3> '_Bool' lvalue Var 0x55bf88ebf0e8 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55bf88ec7ae0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55bf88ec7ab0 <col:28> 'int' 0
|   |-CallExpr 0x55bf88ec7b60 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec7b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec7b28 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bf88ec7bc8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec7bb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec7b90 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bf88ec7c28 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec7be8 <col:3> 'int' lvalue Var 0x55bf88ebf910 'y' 'int'
|   | `-IntegerLiteral 0x55bf88ec7c08 <col:7> 'int' 1
|   |-CallExpr 0x55bf88ec7c80 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec7c68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec7c48 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bf88ec7cd8 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec7cc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec7ca0 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bf88ec7fc0 <line:790:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec7cf8 <col:3> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   | `-ConditionalOperator 0x55bf88ec7f90 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55bf88ec7db8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55bf88ec7d70 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55bf88ec7d58 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55bf88ec7d18 <col:7> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55bf88ec7da0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55bf88ec7d88 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55bf88ec7d38 <col:25> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55bf88ec7f78 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec7dd8 <col:42> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55bf88ec7f58 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55bf88ec7f28 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55bf88ec7e98 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55bf88ec7e50 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55bf88ec7e38 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55bf88ec7df8 <col:55> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55bf88ec7e80 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55bf88ec7e68 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55bf88ec7e18 <col:73> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55bf88ec7ef8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55bf88ec7eb8 <col:90> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55bf88ec7f10 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec7ed8 <col:102> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
|   |-BinaryOperator 0x55bf88ec81c8 <line:791:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec7fe0 <col:3> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec81b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec8180 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bf88ec80a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bf88ec8058 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bf88ec8040 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bf88ec8000 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bf88ec8088 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bf88ec8070 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bf88ec8020 <col:38> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec8138 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bf88ec80f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bf88ec80c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bf88ec8168 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bf88ec8150 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec8118 <col:66> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55bf88ec84b0 <line:792:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec81e8 <col:3> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec8498 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec8468 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bf88ec8388 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bf88ec82a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bf88ec8260 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bf88ec8248 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bf88ec8208 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bf88ec8290 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bf88ec8278 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bf88ec8228 <col:38> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55bf88ec8368 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bf88ec8320 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bf88ec8308 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bf88ec82c8 <col:56> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bf88ec8350 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bf88ec8338 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bf88ec82e8 <col:74> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec8420 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bf88ec83d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bf88ec83a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bf88ec8450 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bf88ec8438 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec8400 <col:102> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55bf88ec86b8 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec84d0 <col:3> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec86a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec8670 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55bf88ec8590 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55bf88ec8548 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55bf88ec8530 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55bf88ec84f0 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55bf88ec8578 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55bf88ec8560 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55bf88ec8510 <col:38> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec8628 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bf88ec85e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bf88ec85b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55bf88ec8658 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bf88ec8640 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec8608 <col:66> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55bf88ec89a0 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55bf88ec86d8 <col:3> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55bf88ec8988 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55bf88ec8958 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55bf88ec8878 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55bf88ec8798 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55bf88ec8750 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55bf88ec8738 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55bf88ec86f8 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55bf88ec8780 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55bf88ec8768 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55bf88ec8718 <col:38> '_Bool' lvalue Var 0x55bf88ebf348 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55bf88ec8858 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55bf88ec8810 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55bf88ec87f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55bf88ec87b8 <col:56> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55bf88ec8840 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55bf88ec8828 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55bf88ec87d8 <col:74> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55bf88ec8910 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55bf88ec88c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55bf88ec8898 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55bf88ec8940 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55bf88ec8928 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55bf88ec88f0 <col:102> '_Bool' lvalue Var 0x55bf88ebf528 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55bf88ec89f8 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec89e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec89c0 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55bf88ec8a50 <line:796:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec8a38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec8a18 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55bf88ec8b08 <line:797:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55bf88ec8a70 <col:3> 'int' lvalue Var 0x55bf88ebe320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55bf88ec8ae8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55bf88ec8ad0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55bf88ec8a90 <col:22> 'int' lvalue Var 0x55bf88ebe320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55bf88ec8ab0 <col:41> 'int' 1
|   |-CallExpr 0x55bf88ec8b60 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55bf88ec8b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55bf88ec8b28 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55bf88ec8bf8 <line:799:3, col:36>
|     `-CallExpr 0x55bf88ec8bd8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55bf88ec8bc0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55bf88ec8ba0 <col:10> 'void *(void)' Function 0x55bf88e64ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55bf88ec8d38 prev 0x55bf88ebe068 <line:801:1, line:803:1> line:801:6 fence 'void ()'
| `-CompoundStmt 0x55bf88ec8dd8 <line:802:1, line:803:1>
|-FunctionDecl 0x55bf88ec8e08 prev 0x55bf88ebe128 <line:804:1, line:806:1> line:804:6 isync 'void ()'
| `-CompoundStmt 0x55bf88ec8ea8 <line:805:1, line:806:1>
|-FunctionDecl 0x55bf88ec8ed8 prev 0x55bf88ebe1e8 <line:807:1, line:809:1> line:807:6 lwfence 'void ()'
| `-CompoundStmt 0x55bf88ec8f78 <line:808:1, line:809:1>
`-FunctionDecl 0x55bf88ec8fe8 <line:810:1, line:836:1> line:810:5 main 'int ()'
  `-CompoundStmt 0x55bf88ecaf50 <line:811:1, line:836:1>
    |-DeclStmt 0x55bf88ec9100 <line:812:3, col:18>
    | `-VarDecl 0x55bf88ec9098 <col:3, col:13> col:13 used t2218 'pthread_t':'unsigned long'
    |-CallExpr 0x55bf88ec9308 <line:813:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55bf88ec92f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bf88ec9118 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55bf88ea55b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55bf88ec9158 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55bf88ec9138 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55bf88ec9098 't2218' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55bf88ec9348 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55bf88ec91d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55bf88ec91a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55bf88ec9170 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55bf88ec9360 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bf88ec91f0 <col:39> 'void *(void *)' Function 0x55bf88ec0bd0 'P0' 'void *(void *)'
    | `-ParenExpr 0x55bf88ec9270 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55bf88ec9248 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55bf88ec9210 <col:52> 'int' 0
    |-DeclStmt 0x55bf88ec93f0 <line:814:3, col:18>
    | `-VarDecl 0x55bf88ec9388 <col:3, col:13> col:13 used t2219 'pthread_t':'unsigned long'
    |-CallExpr 0x55bf88ec9598 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55bf88ec9580 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bf88ec9408 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55bf88ea55b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55bf88ec9448 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55bf88ec9428 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55bf88ec9388 't2219' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55bf88ec95d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55bf88ec94c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55bf88ec9498 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55bf88ec9460 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55bf88ec95f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bf88ec94e0 <col:39> 'void *(void *)' Function 0x55bf88ec3cd8 'P1' 'void *(void *)'
    | `-ParenExpr 0x55bf88ec9560 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55bf88ec9538 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55bf88ec9500 <col:52> 'int' 0
    |-DeclStmt 0x55bf88ec9680 <line:816:3, col:18>
    | `-VarDecl 0x55bf88ec9618 <col:3, col:13> col:13 used t2220 'pthread_t':'unsigned long'
    |-CallExpr 0x55bf88ec9828 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55bf88ec9810 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bf88ec9698 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55bf88ea55b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55bf88ec96d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55bf88ec96b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55bf88ec9618 't2220' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55bf88ec9868 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55bf88ec9750 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55bf88ec9728 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55bf88ec96f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55bf88ec9880 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bf88ec9770 <col:39> 'void *(void *)' Function 0x55bf88ec4f20 'P2' 'void *(void *)'
    | `-ParenExpr 0x55bf88ec97f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55bf88ec97c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55bf88ec9790 <col:52> 'int' 0
    |-CallExpr 0x55bf88ec98d0 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55bf88ec98b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bf88ec9898 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55bf88ec99a0 <line:819:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55bf88ec98f0 <col:3> '_Bool' lvalue Var 0x55bf88ebeed8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55bf88ec9988 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55bf88ec9968 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55bf88ec9950 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55bf88ec9910 <col:21> 'int' lvalue Var 0x55bf88ebe320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55bf88ec9930 <col:41> 'int' 3
    |-CallExpr 0x55bf88ec99f8 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55bf88ec99e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bf88ec99c0 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55bf88ec9aa8 <line:821:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55bf88ec9a90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bf88ec9a18 <col:3> 'void (int)' Function 0x55bf88e64940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55bf88ec9ae8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55bf88ec9ad0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55bf88ec9a38 <col:21> '_Bool' lvalue Var 0x55bf88ebeed8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55bf88ec9b38 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55bf88ec9b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bf88ec9b00 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55bf88ec9e38 <line:823:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55bf88ec9b58 <col:3> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
    | `-ConditionalOperator 0x55bf88ec9e08 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55bf88ec9c30 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55bf88ec9be8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55bf88ec9bd0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55bf88ec9b78 <col:7> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55bf88ec9c18 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55bf88ec9c00 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55bf88ec9bb0 <col:25> '_Bool' lvalue Var 0x55bf88ebf1e0 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55bf88ec9df0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55bf88ec9c50 <col:42> 'int' lvalue Var 0x55bf88ebf6a0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55bf88ec9dd0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55bf88ec9da0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55bf88ec9d10 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55bf88ec9cc8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55bf88ec9cb0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55bf88ec9c70 <col:55> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55bf88ec9cf8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55bf88ec9ce0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55bf88ec9c90 <col:73> '_Bool' lvalue Var 0x55bf88ebf3c0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55bf88ec9d70 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55bf88ec9d30 <col:90> 'int' lvalue Var 0x55bf88ebf798 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55bf88ec9d88 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55bf88ec9d50 <col:102> 'int' lvalue Var 0x55bf88ebf050 'x' 'int'
    |-BinaryOperator 0x55bf88eca040 <line:824:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55bf88ec9e58 <col:3> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55bf88eca028 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bf88ec9ff8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55bf88ec9f18 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55bf88ec9ed0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55bf88ec9eb8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55bf88ec9e78 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55bf88ec9f00 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55bf88ec9ee8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55bf88ec9e98 <col:38> '_Bool' lvalue Var 0x55bf88ebf1e0 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bf88ec9fb0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bf88ec9f68 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bf88ec9f38 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55bf88ec9fe0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bf88ec9fc8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bf88ec9f90 <col:66> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55bf88eca328 <line:825:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55bf88eca060 <col:3> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55bf88eca310 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bf88eca2e0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55bf88eca200 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55bf88eca120 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55bf88eca0d8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55bf88eca0c0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55bf88eca080 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55bf88eca108 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55bf88eca0f0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55bf88eca0a0 <col:38> '_Bool' lvalue Var 0x55bf88ebf1e0 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55bf88eca1e0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55bf88eca198 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55bf88eca180 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55bf88eca140 <col:56> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55bf88eca1c8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55bf88eca1b0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55bf88eca160 <col:74> '_Bool' lvalue Var 0x55bf88ebf3c0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bf88eca298 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bf88eca250 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bf88eca220 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55bf88eca2c8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bf88eca2b0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bf88eca278 <col:102> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55bf88eca530 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55bf88eca348 <col:3> '_Bool' lvalue Var 0x55bf88ebf1e0 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55bf88eca518 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bf88eca4e8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55bf88eca408 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55bf88eca3c0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55bf88eca3a8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55bf88eca368 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55bf88eca3f0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55bf88eca3d8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55bf88eca388 <col:38> '_Bool' lvalue Var 0x55bf88ebf1e0 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bf88eca4a0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bf88eca458 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bf88eca428 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55bf88eca4d0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bf88eca4b8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bf88eca480 <col:66> '_Bool' lvalue Var 0x55bf88ebf1e0 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55bf88eca818 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55bf88eca550 <col:3> '_Bool' lvalue Var 0x55bf88ebf3c0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55bf88eca800 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55bf88eca7d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55bf88eca6f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55bf88eca610 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55bf88eca5c8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55bf88eca5b0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55bf88eca570 <col:20> '_Bool' lvalue Var 0x55bf88ebf718 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55bf88eca5f8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55bf88eca5e0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55bf88eca590 <col:38> '_Bool' lvalue Var 0x55bf88ebf1e0 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55bf88eca6d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55bf88eca688 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55bf88eca670 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55bf88eca630 <col:56> '_Bool' lvalue Var 0x55bf88ebf810 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55bf88eca6b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55bf88eca6a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55bf88eca650 <col:74> '_Bool' lvalue Var 0x55bf88ebf3c0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55bf88eca788 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55bf88eca740 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55bf88eca710 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55bf88eca7b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55bf88eca7a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55bf88eca768 <col:102> '_Bool' lvalue Var 0x55bf88ebf3c0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55bf88eca870 <line:828:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55bf88eca858 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bf88eca838 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55bf88eca8c8 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55bf88eca8b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bf88eca890 <col:3> 'void ()' Function 0x55bf88e64fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55bf88eca960 <line:830:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55bf88eca8e8 <col:3> '_Bool' lvalue Var 0x55bf88ebfa20 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55bf88eca940 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55bf88eca928 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55bf88eca908 <col:19> '_Bool (void)' Function 0x55bf88e64770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55bf88ecabc0 <line:831:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55bf88eca980 <col:3> 'int' lvalue Var 0x55bf88ebe680 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x55bf88ecab68 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55bf88ecab38 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55bf88ecab20 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55bf88eca9a0 <col:25> '_Bool' lvalue Var 0x55bf88ebebf0 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55bf88ecaae0 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55bf88ecaab0 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55bf88ecaa68 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55bf88ecaa50 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55bf88eca9c0 <col:61> '_Bool' lvalue Var 0x55bf88ebfa20 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55bf88ecaa80 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55bf88ecaa18 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55bf88ecaa00 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55bf88eca9e0 <col:78> 'int *' lvalue Var 0x55bf88ebec70 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55bf88ecaa98 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55bf88ecaa30 <col:117> 'int' lvalue Var 0x55bf88ebe680 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x55bf88ecab50 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55bf88ecab00 <col:140> 'int' lvalue Var 0x55bf88ebe680 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x55bf88ecadf8 <line:832:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x55bf88ecabe0 <col:3> '_Bool' lvalue Var 0x55bf88ebef50 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55bf88ecade0 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55bf88ecadc8 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55bf88ecada8 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x55bf88ecad88 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x55bf88ecacf0 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x55bf88ecac58 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55bf88ecac40 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55bf88ecac00 <col:23> 'int' lvalue Var 0x55bf88ebe440 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x55bf88ecac20 <col:46> 'int' 1
    |         | `-BinaryOperator 0x55bf88ecacd0 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55bf88ecacb8 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55bf88ecac78 <col:51> 'int' lvalue Var 0x55bf88ebe560 '__unbuffered_p0_EBX' 'int'
    |         |   `-IntegerLiteral 0x55bf88ecac98 <col:74> 'int' 0
    |         `-BinaryOperator 0x55bf88ecad68 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x55bf88ecad50 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55bf88ecad10 <col:79> 'int' lvalue Var 0x55bf88ebe680 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55bf88ecad30 <col:102> 'int' 1
    |-CallExpr 0x55bf88ecae50 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55bf88ecae38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55bf88ecae18 <col:3> 'void ()' Function 0x55bf88e65060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55bf88ecaec8 <line:834:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55bf88ecaeb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55bf88ecae70 <col:3> 'void (int)' Function 0x55bf88e64d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55bf88ecaf08 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55bf88ecaef0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55bf88ecae90 <col:21> '_Bool' lvalue Var 0x55bf88ebef50 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55bf88ecaf40 <line:835:3, col:10>
      `-IntegerLiteral 0x55bf88ecaf20 <col:10> 'int' 0
