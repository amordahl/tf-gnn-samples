TranslationUnitDecl 0x55935725fe18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5593572606d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5593572603b0 '__int128'
|-TypedefDecl 0x559357260748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5593572603d0 'unsigned __int128'
|-TypedefDecl 0x559357260a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559357260820 'struct __NSConstantString_tag'
|   `-Record 0x5593572607a0 '__NSConstantString_tag'
|-TypedefDecl 0x559357260af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559357260ab0 'char *'
|   `-BuiltinType 0x55935725feb0 'char'
|-TypedefDecl 0x55935729f650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559357260d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559357260bd0 'struct __va_list_tag'
|     `-Record 0x559357260b50 '__va_list_tag'
|-FunctionDecl 0x55935729f790 <./test/mix011_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55935729f6c0 <col:31> col:34 'int'
|-FunctionDecl 0x55935729f958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55935729fa80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55935729fbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55935729fb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55935729fdf8 <col:40, col:99>
|   |-IfStmt 0x55935729fdc8 <col:42, col:88>
|   | |-UnaryOperator 0x55935729fca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55935729fc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55935729fc70 <col:47> 'int' lvalue ParmVar 0x55935729fb38 'expression' 'int'
|   | `-CompoundStmt 0x55935729fdb0 <col:59, col:88>
|   |   `-LabelStmt 0x55935729fd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55935729fd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55935729fd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55935729fcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55935729fa80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55935729fde0 <col:89>
|   `-ReturnStmt 0x55935729fde8 <col:91>
|-FunctionDecl 0x55935729fe40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55935729ff00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5593572a0280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55935729ffb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5593572a0038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5593572a00b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5593572a0138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5593572a0340 <line:10:22>
|-FunctionDecl 0x5593572c6390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5593572a03b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5593572a0430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5593572a04b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5593572a0530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5593572c6450 <line:13:22>
|-FunctionDecl 0x5593572c6700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5593572c64c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5593572c6540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5593572c65c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5593572c67b8 <line:15:22>
|-TypedefDecl 0x5593572c6828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55935725ff70 'unsigned char'
|-TypedefDecl 0x5593572c6898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55935725ff90 'unsigned short'
|-TypedefDecl 0x5593572c6908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55935725ffb0 'unsigned int'
|-TypedefDecl 0x5593572c6978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c69e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55935725fed0 'signed char'
|-TypedefDecl 0x5593572c6a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55935725ff70 'unsigned char'
|-TypedefDecl 0x5593572c6ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55935725fef0 'short'
|-TypedefDecl 0x5593572c6b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55935725ff90 'unsigned short'
|-TypedefDecl 0x5593572c6ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55935725ff10 'int'
|-TypedefDecl 0x5593572c6c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55935725ffb0 'unsigned int'
|-TypedefDecl 0x5593572c6c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c6cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c6d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c6dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c6e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c6eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55935725ffb0 'unsigned int'
|-TypedefDecl 0x5593572c6f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55935725ffb0 'unsigned int'
|-TypedefDecl 0x5593572c6f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c7008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c7078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55935725ffb0 'unsigned int'
|-TypedefDecl 0x5593572c70e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c7158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c71c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c7238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55935725ff10 'int'
|-RecordDecl 0x5593572c7290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5593572c7408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5593572c74c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5593572c7460 'struct __fsid_t' sugar
|   `-RecordType 0x5593572c7310 '__fsid_t'
|     `-Record 0x5593572c7290 ''
|-TypedefDecl 0x5593572c7548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c75b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c7628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c7698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55935725ffb0 'unsigned int'
|-TypedefDecl 0x5593572c7708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c7778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55935725ffb0 'unsigned int'
|-TypedefDecl 0x5593572c77e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c7858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55935725ff10 'int'
|-TypedefDecl 0x5593572c78c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55935725ff10 'int'
|-TypedefDecl 0x5593572c7938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55935725ff10 'int'
|-TypedefDecl 0x5593572c79a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559357260630 'void *'
|   `-BuiltinType 0x55935725fe70 'void'
|-TypedefDecl 0x5593572c7a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c7a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c7af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c7b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c7bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c7c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c7cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c7d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c7d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c7e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c7e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c7f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5593572c7ed0 '__off64_t' sugar
|   |-Typedef 0x5593572c71c8 '__off64_t'
|   `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c8000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5593572c7fc0 '__quad_t *'
|   `-TypedefType 0x5593572c7f60 '__quad_t' sugar
|     |-Typedef 0x5593572c6d68 '__quad_t'
|     `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c8070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559357260ab0 'char *'
|   `-BuiltinType 0x55935725feb0 'char'
|-TypedefDecl 0x5593572c80e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572c8150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55935725ffb0 'unsigned int'
|-FunctionDecl 0x5593572c8298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5593572c81c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5593572c95e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5593572c95d8 <line:72:3, col:34>
|     `-CallExpr 0x5593572c9598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5593572c9580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5593572c9510 <col:10> '<builtin fn type>' Function 0x5593572c9380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5593572c95c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5593572c9530 <col:29> 'unsigned int' lvalue ParmVar 0x5593572c81c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5593572c9380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5593572c9420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5593572c9490 <col:10> Implicit
| `-ConstAttr 0x5593572c94e8 <col:10> Implicit
|-FunctionDecl 0x5593572c9740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5593572c9638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5593572c9a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5593572c9a48 <line:77:3, col:34>
|     `-CallExpr 0x5593572c9a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5593572c99f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5593572c9978 <col:10> '<builtin fn type>' Function 0x5593572c97e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5593572c9a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5593572c9998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5593572c9638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5593572c97e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5593572c9888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5593572c98f8 <col:10> Implicit
| `-ConstAttr 0x5593572c9950 <col:10> Implicit
|-TypedefDecl 0x5593572c9a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-TypedefDecl 0x5593572c9b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5593572c9ae0 '__time_t' sugar
|   |-Typedef 0x5593572c7708 '__time_t'
|   `-BuiltinType 0x55935725ff30 'long'
|-RecordDecl 0x5593572c9b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5593572c9c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5593572c9cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5593572c9d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5593572c9d10 '__pid_t' sugar
|   |-Typedef 0x5593572c7238 '__pid_t'
|   `-BuiltinType 0x55935725ff10 'int'
|-RecordDecl 0x5593572c9da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5593572c9e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5593572c9eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5593572c9f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5593572c9fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-RecordDecl 0x5593572ca030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5593572ca2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5593572cb3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5593572ca310 'struct cpu_set_t' sugar
|   `-RecordType 0x5593572ca0b0 'cpu_set_t'
|     `-Record 0x5593572ca030 ''
|-FunctionDecl 0x5593572cb678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5593572cb448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5593572cb550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5593572cb728 <line:107:19>
|-FunctionDecl 0x5593572cb900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5593572cb790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5593572cb9a8 <col:69>
|-FunctionDecl 0x5593572cbb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5593572cba10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5593572cbbc8 <col:64>
|-FunctionDecl 0x5593572cbe88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5593572cbc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5593572cbd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5593572cbf38 <line:113:22>
|-FunctionDecl 0x5593572cc1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5593572cbfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5593572cc098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5593572cc268 <col:88>
|-FunctionDecl 0x5593572cc588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5593572cc2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5593572cc3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5593572cc440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5593572cc640 <col:62>
|-FunctionDecl 0x5593572cc7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5593572cc6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5593572cc860 <col:63>
|-FunctionDecl 0x5593572cc988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5593572cca28 <col:47>
|-FunctionDecl 0x5593572ccb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5593572cca98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5593572ccbd8 <col:69>
|-FunctionDecl 0x5593572ccce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5593572ccc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5593572ccd88 <col:69>
|-FunctionDecl 0x5593572cd048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5593572ccdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5593572ccf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5593572cd0f8 <col:88>
|-TypedefDecl 0x5593572cd188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5593572cd150 '__clock_t' sugar
|   |-Typedef 0x5593572c7548 '__clock_t'
|   `-BuiltinType 0x55935725ff30 'long'
|-TypedefDecl 0x5593572cd218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5593572cd1e0 '__clockid_t' sugar
|   |-Typedef 0x5593572c7938 '__clockid_t'
|   `-BuiltinType 0x55935725ff10 'int'
|-TypedefDecl 0x5593572cd2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5593572cd270 '__timer_t' sugar
|   |-Typedef 0x5593572c79a8 '__timer_t'
|   `-PointerType 0x559357260630 'void *'
|     `-BuiltinType 0x55935725fe70 'void'
|-RecordDecl 0x5593572cd300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5593572cd3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5593572cd440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5593572cd4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5593572cd510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5593572cd578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5593572cd5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5593572cd648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5593572cd6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5593572cd718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5593572cd780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5593572cd7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5593572cd838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5593572cd908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5593572cd978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5593572cda20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5593572cdbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5593572cdc90 <col:45>
|-FunctionDecl 0x5593572cde70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5593572cdd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5593572cdf18 <col:54>
|-FunctionDecl 0x5593572ce118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5593572cdf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5593572cdff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5593572ce1c8 <line:157:22>
| `-ConstAttr 0x5593572ce220 <col:63>
|-FunctionDecl 0x5593572cf050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5593572ce318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5593572cf0f8 <col:56>
|-FunctionDecl 0x5593572cf4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5593572cf168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5593572cf1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5593572cf260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5593572cf358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5593572cf560 <col:54>
|-RecordDecl 0x5593572cf5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5593572cf668 parent 0x55935725fe18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5593572cf8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5593572cf968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5593572cf9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5593572cfa38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5593572cfb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5593572cfc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5593572cfbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5593572cfb80 'struct __locale_struct' sugar
|     `-RecordType 0x5593572cf640 'struct __locale_struct'
|       `-Record 0x5593572cf5b8 '__locale_struct'
|-TypedefDecl 0x5593572cfcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5593572cfcc0 '__locale_t' sugar
|   |-Typedef 0x5593572cfc48 '__locale_t'
|   `-PointerType 0x5593572cfbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5593572cfb80 'struct __locale_struct' sugar
|       `-RecordType 0x5593572cf640 'struct __locale_struct'
|         `-Record 0x5593572cf5b8 '__locale_struct'
|-FunctionDecl 0x5593572d1110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5593572cfd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5593572cfde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5593572cfe60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5593572cfef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5593572cff68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5593572d11d8 <col:40>
|-FunctionDecl 0x5593572d13c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5593572d12a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5593572d1470 <col:66>
|-FunctionDecl 0x5593572d1580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5593572d14d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5593572d1628 <col:69>
|-FunctionDecl 0x5593572d1858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5593572d1690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5593572d1720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5593572d1908 <col:52>
|-FunctionDecl 0x5593572d1ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5593572d1970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5593572d1a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5593572d1b60 <col:55>
|-FunctionDecl 0x5593572d1cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5593572d1be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5593572d1da0 <col:62>
|-FunctionDecl 0x5593572d1f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5593572d1e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5593572d1fc0 <col:60>
|-FunctionDecl 0x5593572d22b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5593572d2118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5593572d2198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5593572d2368 <col:44>
|-FunctionDecl 0x5593572d2578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5593572d23d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5593572d2450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5593572d2628 <col:49>
|-VarDecl 0x5593572d2728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5593572d27a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5593572d2828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5593572d28f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5593572d2a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5593572d2ac0 <col:42>
|-VarDecl 0x5593572d2b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5593572d2bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5593572d2d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5593572d2c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5593572d2de0 <col:57>
|-FunctionDecl 0x5593572d2ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5593572d2e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5593572d2f98 <col:56>
|-FunctionDecl 0x5593572d30d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5593572d3018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5593572d3178 <col:59>
|-FunctionDecl 0x5593572d3280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5593572d31e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5593572d3328 <col:48>
| `-ConstAttr 0x5593572d3380 <col:89>
|-FunctionDecl 0x5593572d35e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5593572d3438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5593572d34c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5593572d3848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5593572d36d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5593572d3768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5593572d38f8 <col:88>
|-FunctionDecl 0x5593572d3a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5593572d3960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5593572d39f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5593572d3b40 <col:88>
|-FunctionDecl 0x5593572d3d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5593572d3ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5593572d3c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5593572d3e08 <line:208:22>
|-FunctionDecl 0x5593572d4178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5593572d3e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5593572d3ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5593572d3f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5593572d4010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5593572d4478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5593572d4278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5593572d4350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5593572d4528 <col:85>
|-FunctionDecl 0x5593572d4918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5593572d4590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5593572d46c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5593572d47d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5593572d49d0 <col:52>
|-FunctionDecl 0x5593572d4b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5593572d4a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5593572d4bf0 <col:61>
|-FunctionDecl 0x5593572d50f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5593572d4c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5593572d4cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5593572d4e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5593572d4ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5593572d51b0 <col:62>
|-FunctionDecl 0x5593572d53c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5593572d5218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5593572d52a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5593572d5478 <line:221:22>
|-FunctionDecl 0x5593572d5578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5593572d54e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5593572d5620 <col:65>
|-TypedefDecl 0x5593572d5690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55935725ffd0 'unsigned long'
|-RecordDecl 0x5593572d56e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5593572d5830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5593572d5898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5593572d5948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5593572d58f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5593572d5770 'union pthread_attr_t'
|     `-Record 0x5593572d56e8 'pthread_attr_t'
|-RecordDecl 0x5593572d59a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5593572d5b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5593572d5b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5593572d5c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5593572d5be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5593572d5a20 'struct __pthread_internal_list'
|     `-Record 0x5593572d59a0 '__pthread_internal_list'
|-RecordDecl 0x5593572d5cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5593572d5d58 parent 0x55935725fe18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5593572d5e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5593572d5e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5593572d5f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5593572d5f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5593572d5fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5593572d6038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5593572da110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5593572da1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5593572da2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5593572da318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5593572da4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5593572da440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5593572d5d30 'pthread_mutex_t'
|     `-Record 0x5593572d5cb0 ''
|-RecordDecl 0x5593572da510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5593572da650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5593572da6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5593572da770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5593572da710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5593572da590 'pthread_mutexattr_t'
|     `-Record 0x5593572da510 ''
|-RecordDecl 0x5593572da7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5593572da888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5593572da950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5593572da9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5593572daa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5593572daa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5593572daaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5593572dab58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5593572dabc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5593572dac28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5593572dace0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/mix011_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/mix011_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5593572dadd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5593572dae38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5593572daf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5593572daf10 'union pthread_cond_t' sugar
|   `-RecordType 0x5593572da860 'pthread_cond_t'
|     `-Record 0x5593572da7e0 ''
|-RecordDecl 0x5593572dafe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5593572dc130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5593572dc198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5593572dc250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5593572dc1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5593572db060 'pthread_condattr_t'
|     `-Record 0x5593572dafe0 ''
|-TypedefDecl 0x5593572dc2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55935725ffb0 'unsigned int'
|-TypedefDecl 0x5593572dc348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55935725ff10 'int'
|-RecordDecl 0x5593572dc3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5593572dc448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5593572dc510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5593572dc578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5593572dc5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5593572dc648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5593572dc6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5593572dc718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5593572dc780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5593572dc7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5593572dc850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5593572dc8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5593572dc920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5593572dc9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/mix011_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix011_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5593572dca78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5593572dcae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5593572dcc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5593572dcbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5593572dc420 'pthread_rwlock_t'
|     `-Record 0x5593572dc3a0 ''
|-RecordDecl 0x5593572dcca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5593572dcde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5593572dce48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5593572dcf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5593572dcea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5593572dcd20 'pthread_rwlockattr_t'
|     `-Record 0x5593572dcca0 ''
|-TypedefDecl 0x5593572dcf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55935725ff14 'volatile int' volatile
|   `-BuiltinType 0x55935725ff10 'int'
|-RecordDecl 0x5593572dcfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5593572de140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5593572de1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5593572de260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5593572de200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5593572dd060 'pthread_barrier_t'
|     `-Record 0x5593572dcfe0 ''
|-RecordDecl 0x5593572de2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5593572de3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5593572de438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5593572de4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5593572de490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5593572de350 'pthread_barrierattr_t'
|     `-Record 0x5593572de2d0 ''
|-TypedefDecl 0x5593572de608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5593572de5a0 'long [8]' 8 
|   `-BuiltinType 0x55935725ff30 'long'
|-EnumDecl 0x5593572de660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5593572de728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5593572de778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5593572de7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5593572de898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5593572de8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5593572de938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5593572de988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5593572dea10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5593572de9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5593572de9d8 <col:26> 'int' EnumConstant 0x5593572de898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5593572dea98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5593572dea80 <col:29> 'int'
| |   `-DeclRefExpr 0x5593572dea60 <col:29> 'int' EnumConstant 0x5593572de8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5593572deb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5593572deb08 <col:30> 'int'
| |   `-DeclRefExpr 0x5593572deae8 <col:30> 'int' EnumConstant 0x5593572de938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5593572deba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5593572deb90 <col:27> 'int'
|     `-DeclRefExpr 0x5593572deb70 <col:27> 'int' EnumConstant 0x5593572dea10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5593572debf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5593572decc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5593572ded50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5593572ded38 <col:30> 'int'
| |   `-DeclRefExpr 0x5593572ded18 <col:30> 'int' EnumConstant 0x5593572decc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5593572deda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5593572dee28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5593572dee10 <col:29> 'int'
|     `-DeclRefExpr 0x5593572dedf0 <col:29> 'int' EnumConstant 0x5593572deda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5593572dee78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5593572def48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5593572def98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5593572defe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5593572df038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5593572df150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5593572df1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5593572df1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5593572df278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5593572df260 <col:31> 'int'
|     `-DeclRefExpr 0x5593572df240 <col:31> 'int' EnumConstant 0x5593572df150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5593572df2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5593572df398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5593572df3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5593572df438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5593572df508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5593572df558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5593572df5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5593572df678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5593572df6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5593572df718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5593572df958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5593572df9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5593572dfa28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5593572dfb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5593572dfb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5593572dfc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5593572dfcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5593572dfd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5593572dfdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5593572dfe28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5593572e0488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5593572dff20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5593572e0030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593572e0270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5593572e02f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5593572e0548 <col:47>
| |-NonNullAttr 0x5593572e05a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5593572e05d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5593572e0700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5593572e0630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5593572e0958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5593572e07b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5593572e0838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5593572e0b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5593572e0a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5593572e0bd0 <col:60>
|-FunctionDecl 0x5593572e0d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5593572e0dc0 <col:54>
| `-ConstAttr 0x5593572e0e18 <col:95>
|-FunctionDecl 0x5593572e0fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5593572e0e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5593572e0ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5593572e1098 <line:394:19>
| `-ConstAttr 0x5593572e10f0 <col:60>
|-FunctionDecl 0x5593572e2b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5593572e29d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5593572e2bb0 <col:71>
| `-NonNullAttr 0x5593572e2c08 <col:112, col:126> 1
|-FunctionDecl 0x5593572e2d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5593572e2c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5593572e2db8 <line:397:22>
| `-NonNullAttr 0x5593572e2e10 <col:63, col:77> 1
|-FunctionDecl 0x5593572e3038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5593572e2e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5593572e2ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5593572e30e8 <line:400:22>
| `-NonNullAttr 0x5593572e3140 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572e3348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5593572e3188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593572e3208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5593572e33f8 <line:403:22>
| `-NonNullAttr 0x5593572e3450 <col:63, col:77> 1
|-FunctionDecl 0x5593572e36a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5593572e3498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5593572e3540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5593572e3758 <line:406:22>
| `-NonNullAttr 0x5593572e37b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572e49e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5593572e37f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593572e3870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5593572e4a98 <line:409:22>
| `-NonNullAttr 0x5593572e4af0 <col:63, col:77> 1
|-FunctionDecl 0x5593572e4d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5593572e4b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593572e4bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5593572e4dd8 <line:412:22>
| `-NonNullAttr 0x5593572e4e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572e5068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5593572e4e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593572e4f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5593572e5118 <col:37>
| `-NonNullAttr 0x5593572e5170 <col:78, col:95> 1 2
|-FunctionDecl 0x5593572e5358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572e51b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593572e5238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5593572e5408 <line:418:22>
| `-NonNullAttr 0x5593572e5460 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572e55e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5593572e54a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593572e5528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5593572e5698 <line:420:22>
| `-NonNullAttr 0x5593572e56f0 <col:63, col:77> 1
|-FunctionDecl 0x5593572e5898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572e5738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593572e57b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5593572e5948 <line:423:22>
| `-NonNullAttr 0x5593572e59c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572e5b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5593572e5a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593572e5a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5593572e5bf8 <line:426:22>
| `-NonNullAttr 0x5593572e5c50 <col:63, col:77> 1
|-FunctionDecl 0x5593572e5df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572e5c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593572e5d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5593572e5ea8 <line:429:22>
| `-NonNullAttr 0x5593572e5f00 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572e6088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5593572e5f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593572e5fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5593572e6138 <line:431:22>
| `-NonNullAttr 0x5593572e6190 <col:63, col:77> 1
|-FunctionDecl 0x5593572e63b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5593572e61d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593572e6258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5593572e6468 <line:434:22>
| |-NonNullAttr 0x5593572e64c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5593572e64f8 <col:100> "" ""
|-FunctionDecl 0x5593572e6708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5593572e6548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593572e65c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5593572e67b8 <line:437:22>
| |-NonNullAttr 0x5593572e6810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5593572e6848 <col:97> "" ""
|-FunctionDecl 0x5593572e6a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5593572e6898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593572e6910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5593572e6af8 <line:440:22>
| `-NonNullAttr 0x5593572e6b50 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572e6cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5593572e6b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593572e6c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5593572e6d80 <line:443:22>
| `-NonNullAttr 0x5593572e6dd8 <col:63, col:77> 1
|-FunctionDecl 0x5593572e70c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5593572e6e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5593572e6ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5593572e6f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5593572e7180 <line:447:22>
| `-NonNullAttr 0x5593572e71d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5593572e7488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5593572e7230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5593572e72b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5593572e7328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5593572e7540 <col:43>
| `-NonNullAttr 0x5593572e7598 <col:84, col:98> 1
|-FunctionDecl 0x5593572e7858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5593572e75e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5593572e7668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5593572e76f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5593572e7910 <line:452:22>
| `-NonNullAttr 0x5593572e7968 <col:63, col:77> 3
|-FunctionDecl 0x5593572e7c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5593572e79e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5593572e7a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5593572e7af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5593572e7d30 <line:456:22>
| `-NonNullAttr 0x5593572e7d88 <col:63, col:80> 2 3
|-FunctionDecl 0x5593572e7f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5593572e7dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5593572e7e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5593572e8028 <line:458:22>
|-FunctionDecl 0x5593572e83f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5593572e80f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5593572e8290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5593572e84a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5593572e8650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5593572e8530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5593572e85b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5593572e8838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5593572e8718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5593572e8798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5593572e89f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5593572e88f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5593572e8b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5593572e8bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5593572e8c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5593572e8d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5593572e8dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5593572e8fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix011_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5593572e9098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5593572e9150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5593572e90f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5593572e8c50 '__pthread_unwind_buf_t'
| |   `-Record 0x5593572e8bd0 ''
| `-AlignedAttr 0x5593572e91a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5593572e9220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5593572e9380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5593572e93e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5593572e9450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5593572e94b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5593572e96c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5593572e95b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5593572e9808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5593572e9778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5593572e9a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5593572e98c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5593572e9aa8 <line:487:22>
|-RecordDecl 0x5593572e9b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5593572e9e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5593572e9c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5593572e9cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5593572e9ec8 <col:86>
| `-ReturnsTwiceAttr 0x5593572e9f20 <col:12> Implicit
|-FunctionDecl 0x5593572ea248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5593572e9ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5593572ea100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5593572ea2f8 <line:493:22>
| `-NonNullAttr 0x5593572ea350 <col:63, col:77> 1
|-FunctionDecl 0x5593572ea4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5593572ea398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5593572ea570 <line:495:22>
| `-NonNullAttr 0x5593572ea5c8 <col:63, col:77> 1
|-FunctionDecl 0x5593572ea6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5593572ea618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5593572ea778 <line:497:22>
| `-NonNullAttr 0x5593572ea7d0 <col:52, col:66> 1
|-FunctionDecl 0x5593572ea8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5593572ea818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5593572ea978 <line:499:22>
| `-NonNullAttr 0x5593572ea9d0 <col:52, col:66> 1
|-FunctionDecl 0x5593572ebc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5593572eba38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5593572ebac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5593572ebcd8 <col:36>
| `-NonNullAttr 0x5593572ebd30 <col:66, col:83> 1 2
|-FunctionDecl 0x5593572ebe30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5593572ebd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5593572ebed8 <line:504:22>
| `-NonNullAttr 0x5593572ebf30 <col:52, col:66> 1
|-FunctionDecl 0x5593572ec1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572ebfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5593572ec060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5593572ec278 <line:508:22>
| `-NonNullAttr 0x5593572ec2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572ec598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5593572ec318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5593572ec398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5593572ec418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5593572ec650 <line:512:22>
| `-NonNullAttr 0x5593572ec6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5593572ec7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5593572ec6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5593572ec858 <line:514:22>
| `-NonNullAttr 0x5593572ec8b0 <col:63, col:77> 1
|-FunctionDecl 0x5593572ecad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5593572ec960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5593572ecb80 <line:516:22>
| `-NonNullAttr 0x5593572ecbd8 <col:63, col:77> 1
|-FunctionDecl 0x5593572ecce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5593572ecc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5593572ecd88 <line:518:22>
| `-NonNullAttr 0x5593572ecde0 <col:63, col:77> 1
|-FunctionDecl 0x5593572ed008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572ece28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5593572ecea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5593572ed0b8 <line:522:22>
| `-NonNullAttr 0x5593572ed110 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572ed318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5593572ed158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593572ed1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5593572ed3c8 <line:525:22>
| `-NonNullAttr 0x5593572ed420 <col:63, col:77> 1
|-FunctionDecl 0x5593572ed5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572ed468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5593572ed4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5593572ed678 <line:528:22>
| `-NonNullAttr 0x5593572ed6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572ed858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5593572ed718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593572ed798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5593572ed908 <line:530:22>
| `-NonNullAttr 0x5593572ed960 <col:63, col:77> 1
|-FunctionDecl 0x5593572edb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572ed9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5593572eda40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5593572edbd0 <line:534:22>
| `-NonNullAttr 0x5593572edc28 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572eddb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5593572edc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593572edcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5593572ede68 <line:537:22>
| `-NonNullAttr 0x5593572edec0 <col:63, col:77> 1
|-FunctionDecl 0x5593572ee068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572edf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5593572edf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5593572ee118 <line:541:22>
| `-NonNullAttr 0x5593572ee170 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572ee2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5593572ee1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593572ee238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5593572ee3a8 <line:544:22>
| `-NonNullAttr 0x5593572ee400 <col:63, col:77> 1
|-FunctionDecl 0x5593572ee5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5593572ee448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593572ee4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5593572ee698 <line:547:22>
| `-NonNullAttr 0x5593572ee6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572ee878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5593572ee738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5593572ee7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5593572ee928 <line:550:22>
| `-NonNullAttr 0x5593572ee980 <col:63, col:77> 1
|-FunctionDecl 0x5593572efcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5593572efaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5593572efbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5593572efda8 <col:29>
| `-NonNullAttr 0x5593572efe00 <col:70, col:84> 1
|-FunctionDecl 0x5593572eff78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593572efe48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593572f0020 <line:555:22>
| `-NonNullAttr 0x5593572f0078 <col:63, col:77> 1
|-FunctionDecl 0x5593572f0180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593572f00c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593572f0228 <line:557:22>
| `-NonNullAttr 0x5593572f0280 <col:52, col:66> 1
|-FunctionDecl 0x5593572f0380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593572f02c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593572f0428 <line:559:19>
| `-NonNullAttr 0x5593572f0480 <col:49, col:63> 1
|-FunctionDecl 0x5593572f06b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5593572f04c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5593572f0558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5593572f0768 <col:39>
| `-NonNullAttr 0x5593572f07c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5593572f08c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593572f0808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593572f0968 <line:564:22>
| `-NonNullAttr 0x5593572f09c0 <col:52, col:66> 1
|-FunctionDecl 0x5593572f0b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593572f0a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593572f0bd0 <line:566:22>
| `-NonNullAttr 0x5593572f0c28 <col:52, col:66> 1
|-FunctionDecl 0x5593572f0de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5593572f0c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5593572f0d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5593572f0e98 <col:39>
| `-NonNullAttr 0x5593572f0ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5593572f0ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5593572f0f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5593572f1098 <line:571:22>
| `-NonNullAttr 0x5593572f10f0 <col:52, col:66> 1
|-FunctionDecl 0x5593572f12d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5593572f11a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5593572f1380 <line:573:22>
| `-NonNullAttr 0x5593572f13d8 <col:63, col:77> 1
|-FunctionDecl 0x5593572f14e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5593572f1428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5593572f1588 <line:575:22>
| `-NonNullAttr 0x5593572f15e0 <col:63, col:77> 1
|-FunctionDecl 0x5593572f1808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572f1628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5593572f16a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5593572f18b8 <line:579:22>
| `-NonNullAttr 0x5593572f1910 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572f1b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5593572f1958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5593572f19d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5593572f1be8 <line:582:22>
| `-NonNullAttr 0x5593572f1c40 <col:63, col:77> 1
|-FunctionDecl 0x5593572f1de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572f1c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5593572f1d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5593572f1e98 <line:586:22>
| `-NonNullAttr 0x5593572f1ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572f2078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5593572f1f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5593572f1fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5593572f2128 <col:36>
| `-NonNullAttr 0x5593572f2180 <col:77, col:91> 1
|-FunctionDecl 0x5593572f24b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5593572f2260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5593572f2370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5593572f2568 <line:591:22>
| `-NonNullAttr 0x5593572f25c0 <col:63, col:77> 1
|-FunctionDecl 0x5593572f2738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5593572f2608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5593572f27e0 <line:593:22>
| `-NonNullAttr 0x5593572f2838 <col:63, col:77> 1
|-FunctionDecl 0x5593572f2940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5593572f2888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5593572f29e8 <line:595:22>
| `-NonNullAttr 0x5593572f2a40 <col:52, col:66> 1
|-FunctionDecl 0x5593572f2b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5593572f2aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5593572f2c00 <line:597:22>
| `-NonNullAttr 0x5593572f2c58 <col:52, col:66> 1
|-FunctionDecl 0x5593572f2e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5593572f2ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5593572f2d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5593572f2f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5593572f3268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5593572f2fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5593572f3030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5593572f30c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5593572f3320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5593572f3538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5593572f3400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5593572f35e0 <line:606:22>
| `-NonNullAttr 0x5593572f3638 <col:63, col:77> 1
|-FunctionDecl 0x5593572f3740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5593572f3688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5593572f37e8 <line:608:22>
| `-NonNullAttr 0x5593572f3840 <col:63, col:77> 1
|-FunctionDecl 0x5593572f3aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572f3888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5593572f3908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5593572f3b50 <line:612:22>
| `-NonNullAttr 0x5593572f3ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572f3db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5593572f3bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5593572f3c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5593572f3e68 <col:37>
| `-NonNullAttr 0x5593572f3ec0 <col:78, col:92> 1
|-FunctionDecl 0x5593572f40d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5593572f3f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5593572f3fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5593572f4188 <line:618:22>
| `-NonNullAttr 0x5593572f41e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572f43a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5593572f4228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5593572f42a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5593572f4458 <line:621:22>
| `-NonNullAttr 0x5593572f44b0 <col:63, col:77> 1
|-FunctionDecl 0x5593572f4758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5593572f4590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5593572f4610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5593572f4808 <line:623:22>
| `-NonNullAttr 0x5593572f4860 <col:63, col:77> 1
|-FunctionDecl 0x5593572f49d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5593572f48a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5593572f4ab0 <line:625:22>
| `-NonNullAttr 0x5593572f4b08 <col:63, col:77> 1
|-FunctionDecl 0x5593572f4c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5593572f4b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5593572f4cb8 <line:627:22>
| `-NonNullAttr 0x5593572f4d10 <col:52, col:66> 1
|-FunctionDecl 0x5593572f4e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5593572f4d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5593572f4eb8 <line:629:22>
| `-NonNullAttr 0x5593572f4f10 <col:52, col:66> 1
|-FunctionDecl 0x5593572f5010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5593572f4f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5593572f50b8 <line:631:22>
| `-NonNullAttr 0x5593572f5110 <col:52, col:66> 1
|-FunctionDecl 0x5593572f54e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5593572f51f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5593572f5300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5593572f5380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5593572f55a0 <line:635:22>
| `-NonNullAttr 0x5593572f55f8 <col:63, col:77> 1
|-FunctionDecl 0x5593572f5778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5593572f5648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5593572f5820 <line:637:22>
| `-NonNullAttr 0x5593572f5878 <col:63, col:77> 1
|-FunctionDecl 0x5593572f5980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5593572f58c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5593572f5a28 <line:639:22>
| `-NonNullAttr 0x5593572f5a80 <col:52, col:66> 1
|-FunctionDecl 0x5593572f6c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5593572f6b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5593572f6d30 <line:641:22>
| `-NonNullAttr 0x5593572f6d88 <col:63, col:77> 1
|-FunctionDecl 0x5593572f6e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5593572f6dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5593572f6f38 <line:643:22>
| `-NonNullAttr 0x5593572f6f90 <col:63, col:77> 1
|-FunctionDecl 0x5593572f71b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5593572f6fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5593572f7058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5593572f7268 <line:647:22>
| `-NonNullAttr 0x5593572f72c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5593572f74c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5593572f7308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5593572f7388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5593572f7578 <line:650:22>
| `-NonNullAttr 0x5593572f75d0 <col:63, col:77> 1
|-FunctionDecl 0x5593572f7918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5593572f76b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5593572f77d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5593572f79c8 <line:653:22>
| `-NonNullAttr 0x5593572f7a20 <col:63, col:77> 1
|-FunctionDecl 0x5593572f7b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5593572f7a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5593572f7c30 <col:69>
|-FunctionDecl 0x5593572f7da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5593572f7c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5593572f7e50 <col:72>
|-FunctionDecl 0x5593572f8088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5593572f7eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5593572f7f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5593572f8138 <col:44>
|-FunctionDecl 0x5593572f8358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5593572f81a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5593572f8218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5593572f8408 <line:660:22>
| `-NonNullAttr 0x5593572f8460 <col:63, col:77> 2
|-FunctionDecl 0x5593572f88a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5593572f8540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5593572f8650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5593572f8760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5593572f8960 <col:47>
|-FunctionDecl 0x5593572f8af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5593572f89d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5593572f8c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5593572f8bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5593572f8da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5593572f8d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5593572f8e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5593572f8f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5593572f8fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5593572f90a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5593572f9120 prev 0x5593572f90a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5593572f9188 <col:24> 'int' 0
|-VarDecl 0x5593572f91c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5593572f9240 prev 0x5593572f91c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5593572f92a8 <col:27> 'int' 0
|-VarDecl 0x5593572f92e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5593572f9360 prev 0x5593572f92e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5593572f93c8 <col:27> 'int' 0
|-VarDecl 0x5593572f9400 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5593572f9480 prev 0x5593572f9400 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5593572f94e8 <col:27> 'int' 0
|-VarDecl 0x5593572f9520 <line:679:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5593572f95a0 prev 0x5593572f9520 <line:680:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5593572f9608 <col:27> 'int' 0
|-VarDecl 0x5593572f9640 <line:681:1, col:5> col:5 used a 'int'
|-VarDecl 0x5593572f96c0 prev 0x5593572f9640 <line:682:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5593572f9728 <col:9> 'int' 0
|-VarDecl 0x5593572f9758 <line:683:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5593572f97d0 <line:684:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5593572f9850 <line:685:1, col:5> col:5 used x 'int'
|-VarDecl 0x5593572f98d0 prev 0x5593572f9850 <line:686:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5593572f9938 <col:9> 'int' 0
|-VarDecl 0x5593572f9970 <line:687:1, col:5> col:5 used y 'int'
|-VarDecl 0x5593572f99f0 prev 0x5593572f9970 <line:688:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5593572f9a58 <col:9> 'int' 0
|-VarDecl 0x5593572f9b00 <line:689:1, col:5> col:5 used z 'int'
|-VarDecl 0x5593572f9b80 prev 0x5593572f9b00 <line:690:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5593572f9be8 <col:9> 'int' 0
|-VarDecl 0x5593572f9c18 <line:691:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5593572f9c98 <line:692:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5593572f9d10 <line:693:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5593572f9d88 <line:694:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5593572f9e00 <line:695:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5593572f9e78 <line:696:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5593572f9ef0 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5593572f9f68 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5593572f9fe0 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5593572fa058 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5593572fa0d0 <line:701:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5593572fa150 <line:702:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5593572fa1d0 <line:703:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5593572fa248 <line:704:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5593572fa2c8 <line:705:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5593572fa340 <line:706:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5593572fa3b8 <line:707:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5593572fa430 <line:708:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5593572fa548 prev 0x5593572f8af0 <line:709:1, line:723:1> line:709:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5593572fa4b0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5593572fab10 <line:710:1, line:723:1>
|   |-CallExpr 0x5593572fa658 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572fa640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fa5f0 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593572fa6b8 <line:712:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5593572fa678 <col:3> 'int' lvalue Var 0x5593572f96c0 'a' 'int'
|   | `-IntegerLiteral 0x5593572fa698 <col:7> 'int' 1
|   |-CallExpr 0x5593572fa710 <line:713:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593572fa6f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fa6d8 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593572fa768 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572fa750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fa730 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593572fa7c8 <line:715:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5593572fa788 <col:3> 'int' lvalue Var 0x5593572f98d0 'x' 'int'
|   | `-IntegerLiteral 0x5593572fa7a8 <col:7> 'int' 1
|   |-CallExpr 0x5593572fa820 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593572fa808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fa7e8 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593572fa878 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572fa860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fa840 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5593572fa8d0 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593572fa8b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fa898 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593572fa928 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572fa910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fa8f0 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593572fa9e0 <line:720:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5593572fa948 <col:3> 'int' lvalue Var 0x5593572f9120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5593572fa9c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5593572fa9a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593572fa968 <col:22> 'int' lvalue Var 0x5593572f9120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5593572fa988 <col:41> 'int' 1
|   |-CallExpr 0x5593572faa38 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593572faa20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572faa00 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5593572faae8 <line:722:3, col:36>
|     `-CallExpr 0x5593572faac8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5593572faab0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5593572faa58 <col:10> 'void *(void)' Function 0x55935729f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5593572fac30 prev 0x5593572f8c48 <line:724:1, line:757:1> line:724:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5593572fab98 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5593572fdd68 <line:725:1, line:757:1>
|   |-CallExpr 0x5593572fad10 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572facf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572facd8 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593572fad70 <line:727:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5593572fad30 <col:3> 'int' lvalue Var 0x5593572f98d0 'x' 'int'
|   | `-IntegerLiteral 0x5593572fad50 <col:7> 'int' 2
|   |-CallExpr 0x5593572fadc8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593572fadb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fad90 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593572fae20 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572fae08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fade8 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593572fae80 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5593572fae40 <col:3> 'int' lvalue Var 0x5593572f99f0 'y' 'int'
|   | `-IntegerLiteral 0x5593572fae60 <col:7> 'int' 1
|   |-CallExpr 0x5593572faed8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593572faec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572faea0 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593572faf30 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572faf18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572faef8 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593572fafa8 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5593572faf50 <col:3> 'int' lvalue Var 0x5593572f9240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5593572faf90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572faf70 <col:25> 'int' lvalue Var 0x5593572f99f0 'y' 'int'
|   |-CallExpr 0x5593572fb000 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593572fafe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fafc8 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593572fb058 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572fb040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fb020 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593572fb108 <line:736:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fb078 <col:3> '_Bool' lvalue Var 0x5593572fa3b8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fb0f0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5593572fb0d0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5593572fb0b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5593572fb098 <col:19> 'void *(void)' Function 0x55935729f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5593572fb1b8 <line:737:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fb128 <col:3> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fb1a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5593572fb180 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5593572fb168 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5593572fb148 <col:19> 'void *(void)' Function 0x55935729f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5593572fb230 <line:738:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fb1d8 <col:3> '_Bool' lvalue Var 0x5593572f9c18 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fb218 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572fb1f8 <col:21> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5593572fb2a8 <line:739:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5593572fb250 <col:3> 'int' lvalue Var 0x5593572f9c98 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5593572fb290 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572fb270 <col:15> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   |-BinaryOperator 0x5593572fb6e0 <line:740:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5593572fb2c8 <col:3> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   | `-ConditionalOperator 0x5593572fb6b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5593572fb4d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5593572fb3f8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5593572fb320 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5593572fb308 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5593572fb2e8 <col:8> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5593572fb3d8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5593572fb370 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5593572fb358 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5593572fb338 <col:27> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5593572fb3c0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5593572fb3a8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5593572fb388 <col:46> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5593572fb4b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5593572fb450 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5593572fb438 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5593572fb418 <col:65> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5593572fb4a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5593572fb488 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5593572fb468 <col:84> '_Bool' lvalue Var 0x5593572f9fe0 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5593572fb698 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593572fb4f8 <col:101> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   |   `-ParenExpr 0x5593572fb678 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5593572fb648 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5593572fb5b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5593572fb570 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5593572fb558 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5593572fb518 <col:106> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5593572fb5a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5593572fb588 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5593572fb538 <col:124> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5593572fb618 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593572fb5d8 <col:141> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5593572fb630 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593572fb5f8 <col:153> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5593572fbc00 <line:741:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5593572fb700 <col:3> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5593572fbbd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5593572fbba0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5593572fbb88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5593572fb720 <col:15> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5593572fbbb8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593572fb740 <col:31> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5593572fbb68 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5593572fbb38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5593572fb950 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5593572fb870 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5593572fb798 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5593572fb780 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5593572fb760 <col:45> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5593572fb850 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5593572fb7e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5593572fb7d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5593572fb7b0 <col:64> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5593572fb838 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5593572fb820 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5593572fb800 <col:83> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5593572fb930 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5593572fb8c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5593572fb8b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5593572fb890 <col:102> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5593572fb918 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5593572fb900 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5593572fb8e0 <col:121> '_Bool' lvalue Var 0x5593572f9fe0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5593572fbb20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593572fb970 <col:138> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5593572fbaf0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5593572fbac0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5593572fba30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5593572fb9e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5593572fb9d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5593572fb990 <col:151> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5593572fba18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5593572fba00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5593572fb9b0 <col:169> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5593572fba90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5593572fba50 <col:186> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5593572fbaa8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5593572fba70 <col:198> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5593572fc110 <line:742:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5593572fbc20 <col:3> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5593572fc0e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5593572fc0b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5593572fc098 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5593572fbc40 <col:15> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5593572fc0c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593572fbc60 <col:31> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5593572fc078 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5593572fc048 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5593572fbe70 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5593572fbd90 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5593572fbcb8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5593572fbca0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5593572fbc80 <col:45> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5593572fbd70 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5593572fbd08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5593572fbcf0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5593572fbcd0 <col:64> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5593572fbd58 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5593572fbd40 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5593572fbd20 <col:83> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5593572fbe50 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5593572fbde8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5593572fbdd0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5593572fbdb0 <col:102> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5593572fbe38 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5593572fbe20 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5593572fbe00 <col:121> '_Bool' lvalue Var 0x5593572f9fe0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5593572fc030 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593572fbe90 <col:138> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5593572fc010 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5593572fbfe0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5593572fbf50 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5593572fbf08 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5593572fbef0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5593572fbeb0 <col:151> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5593572fbf38 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5593572fbf20 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5593572fbed0 <col:169> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5593572fbfb0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5593572fbf70 <col:186> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5593572fbfc8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5593572fbf90 <col:198> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5593572fc6b8 <line:743:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fc130 <col:3> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fc6a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593572fc670 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5593572fc628 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593572fc610 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572fc150 <col:20> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593572fc658 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593572fc640 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572fc170 <col:36> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5593572fc5f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5593572fc5c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5593572fc380 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5593572fc2a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5593572fc1c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5593572fc1b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5593572fc190 <col:55> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5593572fc280 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5593572fc218 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5593572fc200 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5593572fc1e0 <col:74> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5593572fc268 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5593572fc250 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5593572fc230 <col:93> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5593572fc360 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5593572fc2f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5593572fc2e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5593572fc2c0 <col:112> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5593572fc348 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5593572fc330 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5593572fc310 <col:131> '_Bool' lvalue Var 0x5593572f9fe0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5593572fc5a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5593572fc590 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5593572fc3a0 <col:148> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5593572fc570 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5593572fc540 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5593572fc460 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5593572fc418 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5593572fc400 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5593572fc3c0 <col:166> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5593572fc448 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5593572fc430 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5593572fc3e0 <col:184> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5593572fc4f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5593572fc4b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5593572fc480 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5593572fc528 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5593572fc510 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5593572fc4d8 <col:212> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5593572fcca8 <line:744:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fc6d8 <col:3> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fcc90 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593572fcc60 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5593572fcc18 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593572fcc00 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572fc6f8 <col:20> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593572fcc48 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593572fcc30 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572fc718 <col:36> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5593572fcbe0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5593572fcbb0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5593572fc928 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5593572fc848 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5593572fc770 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5593572fc758 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5593572fc738 <col:55> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5593572fc828 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5593572fc7c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5593572fc7a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5593572fc788 <col:74> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5593572fc810 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5593572fc7f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5593572fc7d8 <col:93> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5593572fc908 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5593572fc8a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5593572fc888 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5593572fc868 <col:112> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5593572fc8f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5593572fc8d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5593572fc8b8 <col:131> '_Bool' lvalue Var 0x5593572f9fe0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5593572fcb98 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5593572fcb80 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5593572fc948 <col:148> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5593572fcb60 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5593572fcb30 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5593572fca08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5593572fc9c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5593572fc9a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5593572fc968 <col:166> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5593572fc9f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5593572fc9d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5593572fc988 <col:184> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5593572fcad8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5593572fca58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5593572fca28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5593572fcaf0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5593572fcab0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5593572fca80 <col:219> 'int' 0
|   |-BinaryOperator 0x5593572fd250 <line:745:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fccc8 <col:3> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fd238 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593572fd208 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5593572fd1c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593572fd1a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572fcce8 <col:20> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593572fd1f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593572fd1d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572fcd08 <col:36> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5593572fd188 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5593572fd158 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5593572fcf18 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5593572fce38 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5593572fcd60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5593572fcd48 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5593572fcd28 <col:55> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5593572fce18 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5593572fcdb0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5593572fcd98 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5593572fcd78 <col:74> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5593572fce00 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5593572fcde8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5593572fcdc8 <col:93> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5593572fcef8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5593572fce90 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5593572fce78 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5593572fce58 <col:112> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5593572fcee0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5593572fcec8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5593572fcea8 <col:131> '_Bool' lvalue Var 0x5593572f9fe0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5593572fd140 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5593572fd128 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5593572fcf38 <col:148> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5593572fd108 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5593572fd0d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5593572fcff8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5593572fcfb0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5593572fcf98 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5593572fcf58 <col:166> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5593572fcfe0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5593572fcfc8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5593572fcf78 <col:184> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5593572fd090 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5593572fd048 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5593572fd018 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5593572fd0c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5593572fd0a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5593572fd070 <col:212> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5593572fd818 <line:746:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fd270 <col:3> '_Bool' lvalue Var 0x5593572f9fe0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fd800 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593572fd7d0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5593572fd788 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593572fd770 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572fd290 <col:20> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593572fd7b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593572fd7a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572fd2b0 <col:36> '_Bool' lvalue Var 0x5593572f9fe0 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5593572fd750 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5593572fd720 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5593572fd4c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5593572fd3e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5593572fd308 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5593572fd2f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5593572fd2d0 <col:55> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5593572fd3c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5593572fd358 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5593572fd340 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5593572fd320 <col:74> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5593572fd3a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5593572fd390 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5593572fd370 <col:93> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5593572fd4a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5593572fd438 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5593572fd420 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5593572fd400 <col:112> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5593572fd488 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5593572fd470 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5593572fd450 <col:131> '_Bool' lvalue Var 0x5593572f9fe0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5593572fd708 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5593572fd6f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5593572fd4e0 <col:148> '_Bool' lvalue Var 0x5593572f9fe0 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5593572fd6d0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5593572fd6a0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5593572fd5a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5593572fd558 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5593572fd540 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5593572fd500 <col:166> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5593572fd588 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5593572fd570 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5593572fd520 <col:184> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5593572fd670 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5593572fd5f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5593572fd5c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5593572fd688 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5593572fd648 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5593572fd618 <col:219> 'int' 0
|   |-BinaryOperator 0x5593572fd890 <line:747:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5593572fd838 <col:3> 'int' lvalue Var 0x5593572f9360 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5593572fd878 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572fd858 <col:25> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   |-BinaryOperator 0x5593572fd9c0 <line:748:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5593572fd8b0 <col:3> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   | `-ConditionalOperator 0x5593572fd990 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5593572fd948 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5593572fd930 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5593572fd8d0 <col:7> '_Bool' lvalue Var 0x5593572f9c18 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5593572fd960 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593572fd8f0 <col:25> 'int' lvalue Var 0x5593572f9c98 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5593572fd978 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5593572fd910 <col:37> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   |-BinaryOperator 0x5593572fda58 <line:749:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fd9e0 <col:3> '_Bool' lvalue Var 0x5593572f9c18 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5593572fda30 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5593572fda00 <col:28> 'int' 0
|   |-CallExpr 0x5593572fdab0 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593572fda98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fda78 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593572fdb08 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572fdaf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fdad0 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5593572fdb78 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593572fdb60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fdb40 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593572fdbd0 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572fdbb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fdb98 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593572fdc88 <line:754:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5593572fdbf0 <col:3> 'int' lvalue Var 0x5593572f9120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5593572fdc68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5593572fdc50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593572fdc10 <col:22> 'int' lvalue Var 0x5593572f9120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5593572fdc30 <col:41> 'int' 1
|   |-CallExpr 0x5593572fdce0 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593572fdcc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fdca8 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5593572fdd58 <line:756:3, col:36>
|     `-CallExpr 0x5593572fdd38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5593572fdd20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5593572fdd00 <col:10> 'void *(void)' Function 0x55935729f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5593572fdf20 prev 0x5593572f8da0 <line:758:1, line:802:1> line:758:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5593572fde88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5593573021b8 <line:759:1, line:802:1>
|   |-CallExpr 0x5593572fe000 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572fdfe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fdfc8 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593572fe078 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5593572fe020 <col:3> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5593572fe060 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572fe040 <col:15> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5593572fe0d8 <line:762:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5593572fe098 <col:3> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5593572fe0b8 <col:15> 'int' 1
|   |-BinaryOperator 0x5593572fe150 <line:763:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fe0f8 <col:3> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fe138 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572fe118 <col:20> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5593572fe1e8 <line:764:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fe170 <col:3> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5593572fe1c0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5593572fe190 <col:27> 'int' 1
|   |-CallExpr 0x5593572fe368 <line:765:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5593572fe350 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5593572fe208 <col:3> 'void (int)' Function 0x55935729fbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5593572fe308 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5593572fe2e8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5593572fe2c8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5593572fe280 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5593572fe268 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5593572fe228 <col:23> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5593572fe2b0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5593572fe298 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5593572fe248 <col:41> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5593572fe3e8 <line:766:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fe390 <col:3> '_Bool' lvalue Var 0x5593572f9ef0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fe3d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572fe3b0 <col:20> '_Bool' lvalue Var 0x5593572f9d10 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5593572fe460 <line:767:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fe408 <col:3> '_Bool' lvalue Var 0x5593572f9f68 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fe448 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572fe428 <col:20> '_Bool' lvalue Var 0x5593572f9d88 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5593572fe4d8 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fe480 <col:3> '_Bool' lvalue Var 0x5593572f9fe0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fe4c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572fe4a0 <col:20> '_Bool' lvalue Var 0x5593572f9e00 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5593572fe550 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fe4f8 <col:3> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fe538 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572fe518 <col:20> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5593572fe5e8 <line:770:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fe570 <col:3> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x5593572fe5c0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5593572fe590 <col:27> 'int' 1
|   |-CallExpr 0x5593572fe640 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593572fe628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fe608 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5593572fe698 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5593572fe680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593572fe660 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593572fe748 <line:773:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fe6b8 <col:3> '_Bool' lvalue Var 0x5593572fa3b8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fe730 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5593572fe710 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5593572fe6f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5593572fe6d8 <col:19> 'void *(void)' Function 0x55935729f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5593572fe7f8 <line:774:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fe768 <col:3> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fe7e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5593572fe7c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5593572fe7a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5593572fe788 <col:19> 'void *(void)' Function 0x55935729f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5593572fe870 <line:775:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5593572fe818 <col:3> '_Bool' lvalue Var 0x5593572f9c18 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5593572fe858 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572fe838 <col:21> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5593572fe8e8 <line:776:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5593572fe890 <col:3> 'int' lvalue Var 0x5593572f9c98 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5593572fe8d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5593572fe8b0 <col:15> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   |-BinaryOperator 0x5593572fed38 <line:777:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5593572fe908 <col:3> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   | `-ConditionalOperator 0x5593572fed08 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5593572feb18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5593572fea38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5593572fe960 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5593572fe948 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5593572fe928 <col:8> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5593572fea18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5593572fe9b0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5593572fe998 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5593572fe978 <col:27> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5593572fea00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5593572fe9e8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5593572fe9c8 <col:46> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5593572feaf8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5593572fea90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5593572fea78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5593572fea58 <col:65> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5593572feae0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5593572feac8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5593572feaa8 <col:84> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5593572fecf0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593572feb50 <col:101> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   |   `-ParenExpr 0x5593572fecd0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5593572feca0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5593572fec10 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5593572febc8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5593572febb0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5593572feb70 <col:106> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5593572febf8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5593572febe0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5593572feb90 <col:124> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5593572fec70 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593572fec30 <col:141> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5593572fec88 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593572fec50 <col:153> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5593572ff248 <line:778:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5593572fed58 <col:3> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5593572ff218 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5593572ff1e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5593572ff1d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5593572fed78 <col:15> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5593572ff200 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593572fed98 <col:31> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5593572ff1b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5593572ff180 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5593572fefa8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5593572feec8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5593572fedf0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5593572fedd8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5593572fedb8 <col:45> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5593572feea8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5593572fee40 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5593572fee28 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5593572fee08 <col:64> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5593572fee90 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5593572fee78 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5593572fee58 <col:83> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5593572fef88 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5593572fef20 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5593572fef08 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5593572feee8 <col:102> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5593572fef70 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5593572fef58 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5593572fef38 <col:121> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5593572ff168 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593572fefc8 <col:138> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5593572ff148 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5593572ff118 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5593572ff088 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5593572ff040 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5593572ff028 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5593572fefe8 <col:151> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5593572ff070 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5593572ff058 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5593572ff008 <col:169> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5593572ff0e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5593572ff0a8 <col:186> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5593572ff100 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5593572ff0c8 <col:198> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5593572ff758 <line:779:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5593572ff268 <col:3> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5593572ff728 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5593572ff6f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5593572ff6e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5593572ff288 <col:15> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5593572ff710 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5593572ff2a8 <col:31> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5593572ff6c0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5593572ff690 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5593572ff4b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5593572ff3d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5593572ff300 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5593572ff2e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5593572ff2c8 <col:45> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5593572ff3b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5593572ff350 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5593572ff338 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5593572ff318 <col:64> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5593572ff3a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5593572ff388 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5593572ff368 <col:83> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5593572ff498 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5593572ff430 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5593572ff418 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5593572ff3f8 <col:102> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5593572ff480 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5593572ff468 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5593572ff448 <col:121> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5593572ff678 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5593572ff4d8 <col:138> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5593572ff658 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5593572ff628 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5593572ff598 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5593572ff550 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5593572ff538 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5593572ff4f8 <col:151> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5593572ff580 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5593572ff568 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5593572ff518 <col:169> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5593572ff5f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5593572ff5b8 <col:186> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5593572ff610 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5593572ff5d8 <col:198> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5593572ffd20 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5593572ff778 <col:3> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593572ffd08 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593572ffcd8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5593572ffc90 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593572ffc78 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572ff798 <col:20> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5593572ffcc0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593572ffca8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572ff7b8 <col:36> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5593572ffc58 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5593572ffc28 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5593572ff9c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5593572ff8e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5593572ff810 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5593572ff7f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5593572ff7d8 <col:55> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5593572ff8c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5593572ff860 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5593572ff848 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5593572ff828 <col:74> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5593572ff8b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5593572ff898 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5593572ff878 <col:93> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5593572ff9a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5593572ff940 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5593572ff928 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5593572ff908 <col:112> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5593572ff990 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5593572ff978 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5593572ff958 <col:131> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5593572ffc10 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5593572ffbf8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5593572ff9e8 <col:148> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5593572ffbd8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5593572ffba8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5593572ffaa8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5593572ffa60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5593572ffa48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5593572ffa08 <col:166> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5593572ffa90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5593572ffa78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5593572ffa28 <col:184> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5593572ffb60 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5593572ffaf8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5593572ffac8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5593572ffb90 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5593572ffb78 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5593572ffb20 <col:212> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5593573002e8 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5593572ffd40 <col:3> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5593573002d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5593573002a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559357300258 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559357300240 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572ffd60 <col:20> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559357300288 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559357300270 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593572ffd80 <col:36> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559357300220 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5593573001f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5593572fff90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5593572ffeb0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5593572ffdd8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5593572ffdc0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5593572ffda0 <col:55> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5593572ffe90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5593572ffe28 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5593572ffe10 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5593572ffdf0 <col:74> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5593572ffe78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5593572ffe60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5593572ffe40 <col:93> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5593572fff70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5593572fff08 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5593572ffef0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5593572ffed0 <col:112> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5593572fff58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5593572fff40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5593572fff20 <col:131> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5593573001d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5593573001c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5593572fffb0 <col:148> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5593573001a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559357300170 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559357300070 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559357300028 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559357300010 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5593572fffd0 <col:166> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559357300058 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559357300040 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5593572ffff0 <col:184> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559357300140 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5593573000c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559357300090 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559357300158 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559357300118 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5593573000e8 <col:219> 'int' 0
|   |-BinaryOperator 0x559357300890 <line:782:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559357300308 <col:3> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559357300878 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559357300848 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559357300800 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5593573007e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559357300328 <col:20> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559357300830 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559357300818 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559357300348 <col:36> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5593573007c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559357300798 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559357300558 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559357300478 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5593573003a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559357300388 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559357300368 <col:55> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559357300458 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5593573003f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5593573003d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5593573003b8 <col:74> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x559357300440 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559357300428 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559357300408 <col:93> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559357300538 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5593573004d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5593573004b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559357300498 <col:112> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559357300520 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559357300508 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5593573004e8 <col:131> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559357300780 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559357300768 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559357300578 <col:148> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x559357300748 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559357300718 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559357300638 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5593573005f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5593573005d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559357300598 <col:166> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559357300620 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559357300608 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5593573005b8 <col:184> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5593573006d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559357300688 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559357300658 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559357300700 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5593573006e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5593573006b0 <col:212> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559357300e68 <line:783:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5593573008b0 <col:3> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559357300e50 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559357300e20 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559357300dd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559357300dc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593573008d0 <col:20> '_Bool' lvalue Var 0x5593572fa430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559357300e08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559357300df0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5593573008f0 <col:36> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x559357300da0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559357300d70 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559357300b00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559357300a20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559357300948 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559357300930 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559357300910 <col:55> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559357300a00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559357300998 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559357300980 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559357300960 <col:74> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5593573009e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5593573009d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5593573009b0 <col:93> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559357300ae0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559357300a78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559357300a60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559357300a40 <col:112> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x559357300ac8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559357300ab0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559357300a90 <col:131> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x559357300d58 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559357300d40 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559357300b20 <col:148> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x559357300d20 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559357300cf0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559357300bf0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559357300ba8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559357300b90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559357300b40 <col:166> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559357300bd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559357300bc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559357300b70 <col:184> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x559357300cc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559357300c40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559357300c10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559357300cd8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559357300c98 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559357300c68 <col:219> 'int' 0
|   |-BinaryOperator 0x559357300ee0 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559357300e88 <col:3> 'int' lvalue Var 0x5593572f9480 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x559357300ec8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559357300ea8 <col:25> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   |-BinaryOperator 0x559357301010 <line:785:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559357300f00 <col:3> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   | `-ConditionalOperator 0x559357300fe0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559357300f98 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559357300f80 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559357300f20 <col:7> '_Bool' lvalue Var 0x5593572f9c18 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559357300fb0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559357300f40 <col:25> 'int' lvalue Var 0x5593572f9c98 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559357300fc8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559357300f60 <col:37> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   |-BinaryOperator 0x5593573010a8 <line:786:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559357301030 <col:3> '_Bool' lvalue Var 0x5593572f9c18 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559357301080 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559357301050 <col:28> 'int' 0
|   |-CallExpr 0x559357301100 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5593573010e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593573010c8 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559357301158 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559357301140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559357301120 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593573011d0 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559357301178 <col:3> 'int' lvalue Var 0x5593572f95a0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5593573011b8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559357301198 <col:25> 'int' lvalue Var 0x5593572f96c0 'a' 'int'
|   |-CallExpr 0x559357301228 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559357301210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593573011f0 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559357301280 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559357301268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559357301248 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559357301568 <line:792:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5593573012a0 <col:3> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   | `-ConditionalOperator 0x559357301538 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559357301360 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559357301318 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559357301300 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5593573012c0 <col:7> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559357301348 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559357301330 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5593573012e0 <col:25> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559357301520 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559357301380 <col:42> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x559357301500 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5593573014d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559357301440 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5593573013f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5593573013e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5593573013a0 <col:55> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559357301428 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559357301410 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5593573013c0 <col:73> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5593573014a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559357301460 <col:90> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5593573014b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559357301480 <col:102> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
|   |-BinaryOperator 0x559357301770 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559357301588 <col:3> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559357301758 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559357301728 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559357301648 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559357301600 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5593573015e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5593573015a8 <col:20> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559357301630 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559357301618 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5593573015c8 <col:38> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5593573016e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559357301698 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559357301668 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559357301710 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593573016f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593573016c0 <col:66> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559357301a58 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559357301790 <col:3> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559357301a40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559357301a10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559357301930 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559357301850 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559357301808 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5593573017f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5593573017b0 <col:20> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559357301838 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559357301820 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5593573017d0 <col:38> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559357301910 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5593573018c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5593573018b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559357301870 <col:56> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5593573018f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5593573018e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559357301890 <col:74> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5593573019c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559357301980 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559357301950 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5593573019f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5593573019e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5593573019a8 <col:102> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559357301c88 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559357301a78 <col:3> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559357301c70 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559357301c40 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559357301b38 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559357301af0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559357301ad8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559357301a98 <col:20> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559357301b20 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559357301b08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559357301ab8 <col:38> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559357301bf8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559357301bb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559357301b80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559357301c28 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559357301c10 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559357301bd8 <col:66> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559357301f70 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559357301ca8 <col:3> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559357301f58 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559357301f28 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559357301e48 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559357301d68 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559357301d20 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559357301d08 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559357301cc8 <col:20> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559357301d50 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559357301d38 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559357301ce8 <col:38> '_Bool' lvalue Var 0x5593572f9e78 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559357301e28 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559357301de0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559357301dc8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559357301d88 <col:56> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559357301e10 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559357301df8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559357301da8 <col:74> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559357301ee0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559357301e98 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559357301e68 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559357301f10 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559357301ef8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559357301ec0 <col:102> '_Bool' lvalue Var 0x5593572fa058 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x559357301fc8 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559357301fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559357301f90 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559357302020 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559357302008 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559357301fe8 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5593573020d8 <line:799:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559357302040 <col:3> 'int' lvalue Var 0x5593572f9120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5593573020b8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5593573020a0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559357302060 <col:22> 'int' lvalue Var 0x5593572f9120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559357302080 <col:41> 'int' 1
|   |-CallExpr 0x559357302130 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559357302118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5593573020f8 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5593573021a8 <line:801:3, col:36>
|     `-CallExpr 0x559357302188 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559357302170 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559357302150 <col:10> 'void *(void)' Function 0x55935729f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559357302338 prev 0x5593572f8e68 <line:803:1, line:805:1> line:803:6 fence 'void ()'
| `-CompoundStmt 0x5593573023d8 <line:804:1, line:805:1>
|-FunctionDecl 0x559357302408 prev 0x5593572f8f28 <line:806:1, line:808:1> line:806:6 isync 'void ()'
| `-CompoundStmt 0x5593573024a8 <line:807:1, line:808:1>
|-FunctionDecl 0x5593573024d8 prev 0x5593572f8fe8 <line:809:1, line:811:1> line:809:6 lwfence 'void ()'
| `-CompoundStmt 0x559357302578 <line:810:1, line:811:1>
`-FunctionDecl 0x5593573025e8 <line:812:1, line:836:1> line:812:5 main 'int ()'
  `-CompoundStmt 0x559357304360 <line:813:1, line:836:1>
    |-DeclStmt 0x559357302700 <line:814:3, col:17>
    | `-VarDecl 0x559357302698 <col:3, col:13> col:13 used t292 'pthread_t':'unsigned long'
    |-CallExpr 0x559357302908 <line:815:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5593573028f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559357302718 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5593572e0488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559357302758 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559357302738 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559357302698 't292' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559357302948 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5593573027d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5593573027a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559357302770 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x559357302960 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5593573027f0 <col:38> 'void *(void *)' Function 0x5593572fa548 'P0' 'void *(void *)'
    | `-ParenExpr 0x559357302870 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x559357302848 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559357302810 <col:51> 'int' 0
    |-DeclStmt 0x5593573029f0 <line:816:3, col:17>
    | `-VarDecl 0x559357302988 <col:3, col:13> col:13 used t293 'pthread_t':'unsigned long'
    |-CallExpr 0x559357302ba8 <line:817:3, col:53> 'int'
    | |-ImplicitCastExpr 0x559357302b90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559357302a08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5593572e0488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559357302a48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559357302a28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559357302988 't293' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559357302be8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559357302ac0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x559357302a98 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559357302a60 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x559357302c00 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559357302ae0 <col:38> 'void *(void *)' Function 0x5593572fac30 'P1' 'void *(void *)'
    | `-ParenExpr 0x559357302b60 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x559357302b38 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559357302b00 <col:51> 'int' 0
    |-DeclStmt 0x559357302c90 <line:818:3, col:17>
    | `-VarDecl 0x559357302c28 <col:3, col:13> col:13 used t294 'pthread_t':'unsigned long'
    |-CallExpr 0x559357302e38 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x559357302e20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559357302ca8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5593572e0488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559357302ce8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559357302cc8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559357302c28 't294' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559357302e78 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559357302d60 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x559357302d38 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559357302d00 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x559357302e90 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559357302d80 <col:38> 'void *(void *)' Function 0x5593572fdf20 'P2' 'void *(void *)'
    | `-ParenExpr 0x559357302e00 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x559357302dd8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559357302da0 <col:51> 'int' 0
    |-CallExpr 0x559357302ee0 <line:820:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559357302ec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559357302ea8 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559357302fb0 <line:821:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559357302f00 <col:3> '_Bool' lvalue Var 0x5593572f9758 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559357302f98 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559357302f78 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559357302f60 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559357302f20 <col:21> 'int' lvalue Var 0x5593572f9120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559357302f40 <col:41> 'int' 3
    |-CallExpr 0x559357303008 <line:822:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559357302ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559357302fd0 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559357303080 <line:823:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559357303068 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559357303028 <col:3> 'void (int)' Function 0x55935729f790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5593573030c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5593573030a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559357303048 <col:21> '_Bool' lvalue Var 0x5593572f9758 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559357303110 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5593573030f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5593573030d8 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5593573033f8 <line:825:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559357303130 <col:3> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
    | `-ConditionalOperator 0x5593573033c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5593573031f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5593573031a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559357303190 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559357303150 <col:7> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5593573031d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5593573031c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559357303170 <col:25> '_Bool' lvalue Var 0x5593572f9d10 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5593573033b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559357303210 <col:42> 'int' lvalue Var 0x5593572fa1d0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x559357303390 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559357303360 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5593573032d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559357303288 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559357303270 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559357303230 <col:55> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5593573032b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5593573032a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559357303250 <col:73> '_Bool' lvalue Var 0x5593572f9ef0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559357303330 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5593573032f0 <col:90> 'int' lvalue Var 0x5593572fa2c8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559357303348 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559357303310 <col:102> 'int' lvalue Var 0x5593572f9b80 'z' 'int'
    |-BinaryOperator 0x559357303600 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559357303418 <col:3> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5593573035e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5593573035b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5593573034d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559357303490 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559357303478 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559357303438 <col:20> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5593573034c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5593573034a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559357303458 <col:38> '_Bool' lvalue Var 0x5593572f9d10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559357303570 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559357303528 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5593573034f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5593573035a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559357303588 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559357303550 <col:66> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5593573038e8 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559357303620 <col:3> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5593573038d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5593573038a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5593573037c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5593573036e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559357303698 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559357303680 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559357303640 <col:20> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5593573036c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5593573036b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559357303660 <col:38> '_Bool' lvalue Var 0x5593572f9d10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5593573037a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559357303758 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559357303740 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559357303700 <col:56> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559357303788 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559357303770 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559357303720 <col:74> '_Bool' lvalue Var 0x5593572f9ef0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559357303858 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559357303810 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5593573037e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559357303888 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559357303870 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559357303838 <col:102> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559357303af0 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559357303908 <col:3> '_Bool' lvalue Var 0x5593572f9d10 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559357303ad8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559357303aa8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5593573039c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559357303980 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559357303968 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559357303928 <col:20> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5593573039b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559357303998 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559357303948 <col:38> '_Bool' lvalue Var 0x5593572f9d10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559357303a60 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559357303a18 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5593573039e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559357303a90 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559357303a78 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559357303a40 <col:66> '_Bool' lvalue Var 0x5593572f9d10 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559357303df0 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559357303b10 <col:3> '_Bool' lvalue Var 0x5593572f9ef0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559357303dd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559357303da8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559357303cc8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559357303be8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559357303ba0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559357303b70 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559357303b30 <col:20> '_Bool' lvalue Var 0x5593572fa248 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559357303bd0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559357303bb8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559357303b50 <col:38> '_Bool' lvalue Var 0x5593572f9d10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559357303ca8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559357303c60 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559357303c48 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559357303c08 <col:56> '_Bool' lvalue Var 0x5593572fa340 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559357303c90 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559357303c78 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559357303c28 <col:74> '_Bool' lvalue Var 0x5593572f9ef0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559357303d60 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559357303d18 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559357303ce8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559357303d90 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559357303d78 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559357303d40 <col:102> '_Bool' lvalue Var 0x5593572f9ef0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559357303e48 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559357303e30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559357303e10 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559357303ea0 <line:831:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559357303e88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559357303e68 <col:3> 'void ()' Function 0x55935729fe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559357304208 <line:832:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x559357303ec0 <col:3> '_Bool' lvalue Var 0x5593572f97d0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5593573041f0 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5593573041d8 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5593573041b8 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x559357304198 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x559357304100 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x559357304068 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x559357303fd0 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x559357303f38 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x559357303f20 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x559357303ee0 <col:23> 'int' lvalue Var 0x5593572f98d0 'x' 'int'
    |         | | | | `-IntegerLiteral 0x559357303f00 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x559357303fb0 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x559357303f98 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x559357303f58 <col:33> 'int' lvalue Var 0x5593572f9240 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x559357303f78 <col:56> 'int' 1
    |         | | `-BinaryOperator 0x559357304048 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x559357304030 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x559357303ff0 <col:61> 'int' lvalue Var 0x5593572f9360 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x559357304010 <col:84> 'int' 0
    |         | `-BinaryOperator 0x5593573040e0 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5593573040c8 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559357304088 <col:89> 'int' lvalue Var 0x5593572f9480 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5593573040a8 <col:112> 'int' 1
    |         `-BinaryOperator 0x559357304178 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x559357304160 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559357304120 <col:117> 'int' lvalue Var 0x5593572f95a0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x559357304140 <col:140> 'int' 0
    |-CallExpr 0x559357304260 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559357304248 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559357304228 <col:3> 'void ()' Function 0x55935729ff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5593573042d8 <line:834:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5593573042c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559357304280 <col:3> 'void (int)' Function 0x55935729fbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559357304318 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559357304300 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5593573042a0 <col:21> '_Bool' lvalue Var 0x5593572f97d0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559357304350 <line:835:3, col:10>
      `-IntegerLiteral 0x559357304330 <col:10> 'int' 0
