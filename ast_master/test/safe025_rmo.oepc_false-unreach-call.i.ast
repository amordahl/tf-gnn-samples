TranslationUnitDecl 0x557571803e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5575718046d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5575718043b0 '__int128'
|-TypedefDecl 0x557571804748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5575718043d0 'unsigned __int128'
|-TypedefDecl 0x557571804a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x557571804820 'struct __NSConstantString_tag'
|   `-Record 0x5575718047a0 '__NSConstantString_tag'
|-TypedefDecl 0x557571804af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x557571804ab0 'char *'
|   `-BuiltinType 0x557571803eb0 'char'
|-TypedefDecl 0x557571843650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x557571804d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x557571804bd0 'struct __va_list_tag'
|     `-Record 0x557571804b50 '__va_list_tag'
|-FunctionDecl 0x557571843770 <./test/safe025_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x557571843940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x557571843870 <col:31> col:34 'int'
|-FunctionDecl 0x557571843ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x557571843be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x557571843d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x557571843c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x557571843f58 <col:40, col:99>
|   |-IfStmt 0x557571843f28 <col:42, col:88>
|   | |-UnaryOperator 0x557571843e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x557571843df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x557571843dd0 <col:47> 'int' lvalue ParmVar 0x557571843c98 'expression' 'int'
|   | `-CompoundStmt 0x557571843f10 <col:59, col:88>
|   |   `-LabelStmt 0x557571843ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x557571843e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x557571843e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x557571843e20 <col:68> 'void () __attribute__((noreturn))' Function 0x557571843be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x557571843f40 <col:89>
|   `-ReturnStmt 0x557571843f48 <col:91>
|-FunctionDecl 0x557571843fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x557571844060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5575718443e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557571844118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x557571844198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x557571844218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557571844298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5575718444a0 <line:11:22>
|-FunctionDecl 0x55757186a520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557571844510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x557571844590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55757186a350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55757186a3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55757186a5e0 <line:14:22>
|-FunctionDecl 0x55757186a890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55757186a650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55757186a6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55757186a750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55757186a948 <line:16:22>
|-TypedefDecl 0x55757186a9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x557571803f70 'unsigned char'
|-TypedefDecl 0x55757186aa28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x557571803f90 'unsigned short'
|-TypedefDecl 0x55757186aa98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x557571803fb0 'unsigned int'
|-TypedefDecl 0x55757186ab08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186ab78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x557571803ed0 'signed char'
|-TypedefDecl 0x55757186abe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x557571803f70 'unsigned char'
|-TypedefDecl 0x55757186ac58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x557571803ef0 'short'
|-TypedefDecl 0x55757186acc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x557571803f90 'unsigned short'
|-TypedefDecl 0x55757186ad38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x557571803f10 'int'
|-TypedefDecl 0x55757186ada8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x557571803fb0 'unsigned int'
|-TypedefDecl 0x55757186ae18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186ae88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186aef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186af68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186afd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186b048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x557571803fb0 'unsigned int'
|-TypedefDecl 0x55757186b0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x557571803fb0 'unsigned int'
|-TypedefDecl 0x55757186b128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186b198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186b208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x557571803fb0 'unsigned int'
|-TypedefDecl 0x55757186b278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186b2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186b378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186b3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x557571803f10 'int'
|-RecordDecl 0x55757186b440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55757186b588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55757186b640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55757186b5e0 'struct __fsid_t' sugar
|   `-RecordType 0x55757186b4c0 '__fsid_t'
|     `-Record 0x55757186b440 ''
|-TypedefDecl 0x55757186b6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186b738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186b7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186b818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x557571803fb0 'unsigned int'
|-TypedefDecl 0x55757186b888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186b8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x557571803fb0 'unsigned int'
|-TypedefDecl 0x55757186b968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186b9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x557571803f10 'int'
|-TypedefDecl 0x55757186ba48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x557571803f10 'int'
|-TypedefDecl 0x55757186bab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x557571803f10 'int'
|-TypedefDecl 0x55757186bb28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x557571804630 'void *'
|   `-BuiltinType 0x557571803e70 'void'
|-TypedefDecl 0x55757186bb98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186bc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186bc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186bce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186bd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186bdc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186be38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186bea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186bf18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186bf88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186bff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186c088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55757186c050 '__off64_t' sugar
|   |-Typedef 0x55757186b378 '__off64_t'
|   `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186c180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55757186c140 '__quad_t *'
|   `-TypedefType 0x55757186c0e0 '__quad_t' sugar
|     |-Typedef 0x55757186aef8 '__quad_t'
|     `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186c1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x557571804ab0 'char *'
|   `-BuiltinType 0x557571803eb0 'char'
|-TypedefDecl 0x55757186c260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x55757186c2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x557571803fb0 'unsigned int'
|-FunctionDecl 0x55757186d458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55757186d380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55757186d768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55757186d758 <line:73:3, col:34>
|     `-CallExpr 0x55757186d718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55757186d700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55757186d690 <col:10> '<builtin fn type>' Function 0x55757186d500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55757186d740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55757186d6b0 <col:29> 'unsigned int' lvalue ParmVar 0x55757186d380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55757186d500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55757186d5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55757186d610 <col:10> Implicit
| `-ConstAttr 0x55757186d668 <col:10> Implicit
|-FunctionDecl 0x55757186d8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55757186d7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55757186dbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55757186dbc8 <line:78:3, col:34>
|     `-CallExpr 0x55757186db88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55757186db70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55757186daf8 <col:10> '<builtin fn type>' Function 0x55757186d968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55757186dbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55757186db18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55757186d7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55757186d968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55757186da08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55757186da78 <col:10> Implicit
| `-ConstAttr 0x55757186dad0 <col:10> Implicit
|-TypedefDecl 0x55757186dc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-TypedefDecl 0x55757186dc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55757186dc60 '__time_t' sugar
|   |-Typedef 0x55757186b888 '__time_t'
|   `-BuiltinType 0x557571803f30 'long'
|-RecordDecl 0x55757186dcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55757186dda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55757186de38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55757186dec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55757186de90 '__pid_t' sugar
|   |-Typedef 0x55757186b3e8 '__pid_t'
|   `-BuiltinType 0x557571803f10 'int'
|-RecordDecl 0x55757186df20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55757186dfe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55757186e030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55757186e0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55757186e158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-RecordDecl 0x55757186e1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55757186f480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55757186f530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55757186f4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55757186e230 'cpu_set_t'
|     `-Record 0x55757186e1b0 ''
|-FunctionDecl 0x55757186f808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55757186f5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55757186f6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55757186f8b8 <line:108:19>
|-FunctionDecl 0x55757186fa90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55757186f920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55757186fb38 <col:69>
|-FunctionDecl 0x55757186fcb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55757186fba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55757186fd58 <col:64>
|-FunctionDecl 0x557571870018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55757186fdc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55757186fef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5575718700c8 <line:114:22>
|-FunctionDecl 0x5575718703b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x557571870130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557571870228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x557571870460 <col:88>
|-FunctionDecl 0x557571870718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5575718704c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557571870548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5575718705d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5575718707d0 <col:62>
|-FunctionDecl 0x557571870948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x557571870838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5575718709f0 <col:63>
|-FunctionDecl 0x557571870b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x557571870bb8 <col:47>
|-FunctionDecl 0x557571870cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x557571870c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557571870d68 <col:69>
|-FunctionDecl 0x557571870e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x557571870dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557571870f18 <col:69>
|-FunctionDecl 0x5575718711d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557571870f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5575718710b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x557571871288 <col:88>
|-TypedefDecl 0x557571871318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5575718712e0 '__clock_t' sugar
|   |-Typedef 0x55757186b6c8 '__clock_t'
|   `-BuiltinType 0x557571803f30 'long'
|-TypedefDecl 0x5575718713c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x557571871370 '__clockid_t' sugar
|   |-Typedef 0x55757186bab8 '__clockid_t'
|   `-BuiltinType 0x557571803f10 'int'
|-TypedefDecl 0x557571871458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x557571871420 '__timer_t' sugar
|   |-Typedef 0x55757186bb28 '__timer_t'
|   `-PointerType 0x557571804630 'void *'
|     `-BuiltinType 0x557571803e70 'void'
|-RecordDecl 0x5575718714b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x557571871570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5575718715d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x557571871640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5575718716a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x557571871710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x557571871778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5575718717e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x557571871848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5575718718b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x557571871918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x557571871980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5575718719d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x557571871a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x557571871b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x557571871bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x557571871d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x557571871e20 <col:45>
|-FunctionDecl 0x557571872000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x557571871ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5575718720a8 <col:54>
|-FunctionDecl 0x5575718722a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x557571872110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x557571872188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x557571872358 <line:158:22>
| `-ConstAttr 0x557571872ff0 <col:63>
|-FunctionDecl 0x5575718731f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5575718730e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557571873298 <col:56>
|-FunctionDecl 0x557571873640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x557571873308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x557571873380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557571873400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5575718734f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x557571873700 <col:54>
|-RecordDecl 0x557571873758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x557571873808 parent 0x557571803e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x557571873a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x557571873b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x557571873b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x557571873bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x557571873cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x557571873de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x557571873d90 'struct __locale_struct *'
|   `-ElaboratedType 0x557571873d20 'struct __locale_struct' sugar
|     `-RecordType 0x5575718737e0 'struct __locale_struct'
|       `-Record 0x557571873758 '__locale_struct'
|-TypedefDecl 0x557571873e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x557571873e60 '__locale_t' sugar
|   |-Typedef 0x557571873de8 '__locale_t'
|   `-PointerType 0x557571873d90 'struct __locale_struct *'
|     `-ElaboratedType 0x557571873d20 'struct __locale_struct' sugar
|       `-RecordType 0x5575718737e0 'struct __locale_struct'
|         `-Record 0x557571873758 '__locale_struct'
|-FunctionDecl 0x5575718752a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x557571873f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x557571873f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557571875028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5575718750b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557571875130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x557571875368 <col:40>
|-FunctionDecl 0x557571875558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557571875430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x557571875600 <col:66>
|-FunctionDecl 0x557571875710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557571875668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5575718757b8 <col:69>
|-FunctionDecl 0x5575718759e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557571875820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5575718758b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557571875a98 <col:52>
|-FunctionDecl 0x557571875c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557571875b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557571875b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557571875cf0 <col:55>
|-FunctionDecl 0x557571875e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x557571875d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x557571875f30 <col:62>
|-FunctionDecl 0x557571876168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x557571875f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x557571876210 <col:60>
|-FunctionDecl 0x557571876438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557571876290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557571876310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5575718764e8 <col:44>
|-FunctionDecl 0x5575718766f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557571876550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5575718765d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5575718767a8 <col:49>
|-VarDecl 0x5575718768a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x557571876928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5575718769a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x557571876a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x557571876ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x557571876c40 <col:42>
|-VarDecl 0x557571876cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x557571876d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x557571876eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x557571876da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x557571876f60 <col:57>
|-FunctionDecl 0x5575718770d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557571876fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557571877178 <col:56>
|-FunctionDecl 0x557571877288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5575718771f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x557571877330 <col:59>
|-FunctionDecl 0x557571877438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5575718773a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5575718774e0 <col:48>
| `-ConstAttr 0x557571877538 <col:89>
|-FunctionDecl 0x557571877798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5575718775e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x557571877678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5575718779f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557571877888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557571877918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x557571877aa8 <col:88>
|-FunctionDecl 0x557571877c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557571877b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557571877ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x557571877cf0 <col:88>
|-FunctionDecl 0x557571877f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x557571877d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557571877de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x557571877fb8 <line:209:22>
|-FunctionDecl 0x557571878358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557571878020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575718780e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x557571878170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x557571878200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x557571878658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x557571878458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x557571878530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x557571878708 <col:85>
|-FunctionDecl 0x557571878af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x557571878770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5575718788a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5575718789b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x557571878bb0 <col:52>
|-FunctionDecl 0x557571878d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x557571878c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557571878dd0 <col:61>
|-FunctionDecl 0x557571879248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x557571878e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557571878eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x557571878fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5575718790f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x557571879308 <col:62>
|-FunctionDecl 0x557571879528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x557571879370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557571879400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5575718795d8 <line:222:22>
|-FunctionDecl 0x5575718796d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x557571879640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557571879780 <col:65>
|-TypedefDecl 0x5575718797f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x557571803fd0 'unsigned long'
|-RecordDecl 0x557571879848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x557571879990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5575718799f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557571879aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x557571879a50 'union pthread_attr_t' sugar
|   `-RecordType 0x5575718798d0 'union pthread_attr_t'
|     `-Record 0x557571879848 'pthread_attr_t'
|-RecordDecl 0x557571879b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x557571879c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x557571879cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x557571879da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x557571879d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x557571879b80 'struct __pthread_internal_list'
|     `-Record 0x557571879b00 '__pthread_internal_list'
|-RecordDecl 0x557571879e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x557571879eb8 parent 0x557571803e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x557571879f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557571879ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55757187a060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55757187e110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55757187e178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55757187e1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55757187e268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55757187e320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55757187e410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55757187e478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55757187e600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55757187e5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x557571879e90 'pthread_mutex_t'
|     `-Record 0x557571879e10 ''
|-RecordDecl 0x55757187e670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55757187e7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55757187e818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55757187e8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55757187e870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55757187e6f0 'pthread_mutexattr_t'
|     `-Record 0x55757187e670 ''
|-RecordDecl 0x55757187e940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55757187e9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55757187eab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55757187eb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55757187eb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55757187ebe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55757187ec50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55757187ecb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55757187ed20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55757187ed88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55757187ee40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./test/safe025_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./test/safe025_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55757187ef30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55757187ef98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x557571880130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55757187f070 'union pthread_cond_t' sugar
|   `-RecordType 0x55757187e9c0 'pthread_cond_t'
|     `-Record 0x55757187e940 ''
|-RecordDecl 0x5575718801a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5575718802a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557571880308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5575718803c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x557571880360 'union pthread_condattr_t' sugar
|   `-RecordType 0x557571880220 'pthread_condattr_t'
|     `-Record 0x5575718801a0 ''
|-TypedefDecl 0x557571880448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x557571803fb0 'unsigned int'
|-TypedefDecl 0x5575718804b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x557571803f10 'int'
|-RecordDecl 0x557571880510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5575718805b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x557571880680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5575718806e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x557571880750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5575718807b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x557571880820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x557571880888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5575718808f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x557571880958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5575718809c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x557571880a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x557571880a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x557571880b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./test/safe025_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./test/safe025_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x557571880be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557571880c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557571880da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x557571880d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x557571880590 'pthread_rwlock_t'
|     `-Record 0x557571880510 ''
|-RecordDecl 0x557571880e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x557571880f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x557571880fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557571881070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x557571881010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x557571880e90 'pthread_rwlockattr_t'
|     `-Record 0x557571880e10 ''
|-TypedefDecl 0x557571882140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x557571803f14 'volatile int' volatile
|   `-BuiltinType 0x557571803f10 'int'
|-RecordDecl 0x557571882198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5575718822e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x557571882348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557571882400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5575718823a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x557571882220 'pthread_barrier_t'
|     `-Record 0x557571882198 ''
|-RecordDecl 0x557571882470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x557571882570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5575718825d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557571882690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x557571882630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5575718824f0 'pthread_barrierattr_t'
|     `-Record 0x557571882470 ''
|-TypedefDecl 0x5575718827a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x557571882740 'long [8]' 8 
|   `-BuiltinType 0x557571803f30 'long'
|-EnumDecl 0x557571882800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5575718828c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x557571882918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x557571882968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x557571882a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x557571882a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x557571882ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x557571882b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x557571882bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x557571882b98 <col:26> 'int'
| |   `-DeclRefExpr 0x557571882b78 <col:26> 'int' EnumConstant 0x557571882a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x557571882c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x557571882c20 <col:29> 'int'
| |   `-DeclRefExpr 0x557571882c00 <col:29> 'int' EnumConstant 0x557571882a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x557571882cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x557571882ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x557571882c88 <col:30> 'int' EnumConstant 0x557571882ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x557571882d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x557571882d30 <col:27> 'int'
|     `-DeclRefExpr 0x557571882d10 <col:27> 'int' EnumConstant 0x557571882bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x557571882d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x557571882e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x557571882ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x557571882ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x557571882eb8 <col:30> 'int' EnumConstant 0x557571882e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x557571882f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x557571882fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x557571882fb0 <col:29> 'int'
|     `-DeclRefExpr 0x557571882f90 <col:29> 'int' EnumConstant 0x557571882f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x557571883018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5575718830e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x557571883150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5575718831a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5575718831f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5575718832b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x557571883308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x557571883358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5575718833e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5575718833c8 <col:31> 'int'
|     `-DeclRefExpr 0x5575718833a8 <col:31> 'int' EnumConstant 0x5575718832b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x557571883430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5575718834f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x557571883548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x557571883598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x557571883668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5575718836b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x557571883708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5575718837d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x557571883828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x557571883878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x557571883ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x557571883b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x557571883b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x557571883ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x557571883cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x557571883dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x557571883e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x557571883e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x557571883f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x557571883f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5575718845b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x557571884080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5575718841a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575718843a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x557571884420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x557571884678 <col:47>
| |-NonNullAttr 0x5575718846d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x557571884708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x557571884830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x557571884760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x557571884a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5575718848e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x557571884968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x557571884c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x557571884b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x557571884d00 <col:60>
|-FunctionDecl 0x557571884e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x557571884ef0 <col:54>
| `-ConstAttr 0x557571884f48 <col:95>
|-FunctionDecl 0x557571886990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x557571884f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557571884ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x557571886a40 <line:395:19>
| `-ConstAttr 0x557571886a98 <col:60>
|-FunctionDecl 0x557571886c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557571886b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557571886d10 <col:71>
| `-NonNullAttr 0x557571886d68 <col:112, col:126> 1
|-FunctionDecl 0x557571886e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557571886db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557571886f18 <line:398:22>
| `-NonNullAttr 0x557571886f70 <col:63, col:77> 1
|-FunctionDecl 0x557571887198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x557571886fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557571887038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x557571887248 <line:401:22>
| `-NonNullAttr 0x5575718872a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575718874a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5575718872e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557571887368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x557571887558 <line:404:22>
| `-NonNullAttr 0x5575718875b0 <col:63, col:77> 1
|-FunctionDecl 0x557571887808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5575718875f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5575718876a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5575718878b8 <line:407:22>
| `-NonNullAttr 0x557571887910 <col:63, col:80> 1 2
|-FunctionDecl 0x557571888b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5575718889b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557571888a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557571888c18 <line:410:22>
| `-NonNullAttr 0x557571888c70 <col:63, col:77> 1
|-FunctionDecl 0x557571888ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557571888cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557571888d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557571888f58 <line:413:22>
| `-NonNullAttr 0x557571888fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x5575718891e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557571888ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x557571889088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x557571889298 <col:37>
| `-NonNullAttr 0x5575718892f0 <col:78, col:95> 1 2
|-FunctionDecl 0x5575718894d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557571889338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5575718893b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x557571889588 <line:419:22>
| `-NonNullAttr 0x5575718895e0 <col:63, col:80> 1 2
|-FunctionDecl 0x557571889768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557571889628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5575718896a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x557571889818 <line:421:22>
| `-NonNullAttr 0x557571889870 <col:63, col:77> 1
|-FunctionDecl 0x557571889a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575718898b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557571889938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x557571889ae8 <line:424:22>
| `-NonNullAttr 0x557571889b40 <col:63, col:80> 1 2
|-FunctionDecl 0x557571889cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557571889b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557571889c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x557571889d78 <line:427:22>
| `-NonNullAttr 0x557571889dd0 <col:63, col:77> 1
|-FunctionDecl 0x557571889f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557571889e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557571889e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55757188a028 <line:430:22>
| `-NonNullAttr 0x55757188a080 <col:63, col:80> 1 2
|-FunctionDecl 0x55757188a208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55757188a0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55757188a148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55757188a2b8 <line:432:22>
| `-NonNullAttr 0x55757188a310 <col:63, col:77> 1
|-FunctionDecl 0x55757188a538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55757188a358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55757188a3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55757188a5e8 <line:435:22>
| |-NonNullAttr 0x55757188a640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55757188a678 <col:100> "" ""
|-FunctionDecl 0x55757188a888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55757188a6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55757188a748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55757188a938 <line:438:22>
| |-NonNullAttr 0x55757188a990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55757188a9d8 <col:97> "" ""
|-FunctionDecl 0x55757188abc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55757188aa28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55757188aaa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55757188ac78 <line:441:22>
| `-NonNullAttr 0x55757188acd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55757188ae50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55757188ad18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55757188ad90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55757188af00 <line:444:22>
| `-NonNullAttr 0x55757188af58 <col:63, col:77> 1
|-FunctionDecl 0x55757188b248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55757188afa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55757188b028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55757188b0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55757188b300 <line:448:22>
| `-NonNullAttr 0x55757188b358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55757188b608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55757188b3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55757188b430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55757188b4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55757188b6c0 <col:43>
| `-NonNullAttr 0x55757188b718 <col:84, col:98> 1
|-FunctionDecl 0x55757188ba20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55757188b768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55757188b7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55757188b878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55757188bad8 <line:453:22>
| `-NonNullAttr 0x55757188bb30 <col:63, col:77> 3
|-FunctionDecl 0x55757188be08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55757188bb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55757188bbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55757188bc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55757188bec0 <line:457:22>
| `-NonNullAttr 0x55757188bf18 <col:63, col:80> 2 3
|-FunctionDecl 0x55757188c108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55757188bf68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55757188bfe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55757188c1b8 <line:459:22>
|-FunctionDecl 0x55757188c588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55757188c280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55757188c420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55757188c638 <col:52, col:69> 1 2
|-FunctionDecl 0x55757188c7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55757188c6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55757188c740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55757188c9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55757188c8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55757188c928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55757188cb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55757188cab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55757188cc88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55757188cd28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55757188cdd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55757188cec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55757188cf30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55757188d100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/safe025_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55757188d1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55757188d2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55757188d250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55757188cdb0 '__pthread_unwind_buf_t'
| |   `-Record 0x55757188cd28 ''
| `-AlignedAttr 0x55757188d308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55757188d380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55757188d4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55757188d548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55757188d5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55757188d618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55757188d820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55757188d710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55757188da00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55757188d8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55757188dbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55757188dab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55757188dc68 <line:488:22>
|-RecordDecl 0x55757188dcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55757188dfd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55757188de38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55757188deb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55757188e088 <col:86>
| `-ReturnsTwiceAttr 0x55757188e0e0 <col:12> Implicit
|-FunctionDecl 0x55757188e408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55757188e1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55757188e2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55757188e4b8 <line:494:22>
| `-NonNullAttr 0x55757188e510 <col:63, col:77> 1
|-FunctionDecl 0x55757188e688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55757188e558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55757188e730 <line:496:22>
| `-NonNullAttr 0x55757188e788 <col:63, col:77> 1
|-FunctionDecl 0x55757188e890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55757188e7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55757188e938 <line:498:22>
| `-NonNullAttr 0x55757188e990 <col:52, col:66> 1
|-FunctionDecl 0x55757188fad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55757188fa20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55757188fb80 <line:500:22>
| `-NonNullAttr 0x55757188fbd8 <col:52, col:66> 1
|-FunctionDecl 0x55757188fe18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55757188fc28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55757188fcb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55757188fec8 <col:36>
| `-NonNullAttr 0x55757188ff20 <col:66, col:83> 1 2
|-FunctionDecl 0x557571890020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55757188ff68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5575718900c8 <line:505:22>
| `-NonNullAttr 0x557571890120 <col:52, col:66> 1
|-FunctionDecl 0x5575718903b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575718901d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557571890250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557571890468 <line:509:22>
| `-NonNullAttr 0x5575718904c0 <col:63, col:80> 1 2
|-FunctionDecl 0x557571890788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x557571890508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557571890588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x557571890608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x557571890840 <line:513:22>
| `-NonNullAttr 0x557571890898 <col:63, col:80> 1 3
|-FunctionDecl 0x557571890a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5575718908e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557571890ad8 <line:515:22>
| `-NonNullAttr 0x557571890b30 <col:63, col:77> 1
|-FunctionDecl 0x557571890d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557571890be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557571890dc0 <line:517:22>
| `-NonNullAttr 0x557571890e18 <col:63, col:77> 1
|-FunctionDecl 0x557571890f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557571890e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557571890fc8 <line:519:22>
| `-NonNullAttr 0x557571891020 <col:63, col:77> 1
|-FunctionDecl 0x557571891248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557571891068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5575718910e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5575718912f8 <line:523:22>
| `-NonNullAttr 0x557571891350 <col:63, col:80> 1 2
|-FunctionDecl 0x557571891558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557571891398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557571891418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x557571891608 <line:526:22>
| `-NonNullAttr 0x557571891660 <col:63, col:77> 1
|-FunctionDecl 0x557571891808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5575718916a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557571891728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5575718918b8 <line:529:22>
| `-NonNullAttr 0x557571891910 <col:63, col:80> 1 2
|-FunctionDecl 0x557571891b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557571891958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557571891a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x557571891bb0 <line:531:22>
| `-NonNullAttr 0x557571891c08 <col:63, col:77> 1
|-FunctionDecl 0x557571891db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557571891c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557571891cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x557571891e68 <line:535:22>
| `-NonNullAttr 0x557571891ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x557571892048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557571891f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557571891f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5575718920f8 <line:538:22>
| `-NonNullAttr 0x557571892150 <col:63, col:77> 1
|-FunctionDecl 0x5575718922f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557571892198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557571892218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5575718923a8 <line:542:22>
| `-NonNullAttr 0x557571892400 <col:63, col:80> 1 2
|-FunctionDecl 0x557571892588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557571892448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5575718924c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x557571892638 <line:545:22>
| `-NonNullAttr 0x557571892690 <col:63, col:77> 1
|-FunctionDecl 0x557571892878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5575718926d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x557571892758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x557571892928 <line:548:22>
| `-NonNullAttr 0x557571892980 <col:63, col:80> 1 2
|-FunctionDecl 0x557571893b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5575718929c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557571893a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x557571893be8 <line:551:22>
| `-NonNullAttr 0x557571893c40 <col:63, col:77> 1
|-FunctionDecl 0x557571893f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x557571893d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557571893e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x557571894028 <col:29>
| `-NonNullAttr 0x557571894080 <col:70, col:84> 1
|-FunctionDecl 0x5575718941f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5575718940c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575718942a0 <line:556:22>
| `-NonNullAttr 0x5575718942f8 <col:63, col:77> 1
|-FunctionDecl 0x557571894400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557571894348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575718944a8 <line:558:22>
| `-NonNullAttr 0x557571894500 <col:52, col:66> 1
|-FunctionDecl 0x557571894600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557571894548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575718946a8 <line:560:19>
| `-NonNullAttr 0x557571894700 <col:49, col:63> 1
|-FunctionDecl 0x557571894938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557571894748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5575718947d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5575718949e8 <col:39>
| `-NonNullAttr 0x557571894a70 <col:69, col:86> 1 2
|-FunctionDecl 0x557571894b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557571894ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557571894c18 <line:565:22>
| `-NonNullAttr 0x557571894c70 <col:52, col:66> 1
|-FunctionDecl 0x557571894d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557571894cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557571894e18 <line:567:22>
| `-NonNullAttr 0x557571894e70 <col:52, col:66> 1
|-FunctionDecl 0x557571895028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557571894eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557571894f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5575718950d8 <col:39>
| `-NonNullAttr 0x557571895130 <col:69, col:86> 1 2
|-FunctionDecl 0x557571895230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557571895178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5575718952d8 <line:572:22>
| `-NonNullAttr 0x557571895330 <col:52, col:66> 1
|-FunctionDecl 0x557571895518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5575718953e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5575718955c0 <line:574:22>
| `-NonNullAttr 0x557571895618 <col:63, col:77> 1
|-FunctionDecl 0x557571895720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557571895668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5575718957c8 <line:576:22>
| `-NonNullAttr 0x557571895820 <col:63, col:77> 1
|-FunctionDecl 0x557571895a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557571895868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5575718958e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x557571895b30 <line:580:22>
| `-NonNullAttr 0x557571895b88 <col:63, col:80> 1 2
|-FunctionDecl 0x557571895d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557571895bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557571895c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x557571895e48 <line:583:22>
| `-NonNullAttr 0x557571895ea0 <col:63, col:77> 1
|-FunctionDecl 0x557571896048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557571895ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557571895f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5575718960f8 <line:587:22>
| `-NonNullAttr 0x557571896150 <col:63, col:80> 1 2
|-FunctionDecl 0x5575718962d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557571896198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557571896218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x557571896388 <col:36>
| `-NonNullAttr 0x5575718963e0 <col:77, col:91> 1
|-FunctionDecl 0x557571896718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5575718964c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5575718965d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5575718967c8 <line:592:22>
| `-NonNullAttr 0x557571896820 <col:63, col:77> 1
|-FunctionDecl 0x557571896998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557571896868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557571896a40 <line:594:22>
| `-NonNullAttr 0x557571896ac0 <col:63, col:77> 1
|-FunctionDecl 0x557571896bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557571896b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557571896c68 <line:596:22>
| `-NonNullAttr 0x557571896cc0 <col:52, col:66> 1
|-FunctionDecl 0x557571896dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557571896d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557571896e68 <line:598:22>
| `-NonNullAttr 0x557571896ec0 <col:52, col:66> 1
|-FunctionDecl 0x5575718970e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x557571896f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557571896f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x557571897198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5575718974c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557571897218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557571897290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557571897320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x557571897580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x557571897798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557571897660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557571897840 <line:607:22>
| `-NonNullAttr 0x557571897898 <col:63, col:77> 1
|-FunctionDecl 0x5575718979a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5575718978e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557571897a48 <line:609:22>
| `-NonNullAttr 0x557571897ad0 <col:63, col:77> 1
|-FunctionDecl 0x557571897cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557571897b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557571897b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x557571897da8 <line:613:22>
| `-NonNullAttr 0x557571897e00 <col:63, col:80> 1 2
|-FunctionDecl 0x557571898008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x557571897e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557571897ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5575718980b8 <col:37>
| `-NonNullAttr 0x557571898110 <col:78, col:92> 1
|-FunctionDecl 0x557571898328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x557571898158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557571898200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5575718983d8 <line:619:22>
| `-NonNullAttr 0x557571898430 <col:63, col:80> 1 2
|-FunctionDecl 0x5575718985f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x557571898478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5575718984f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5575718986a8 <line:622:22>
| `-NonNullAttr 0x557571898700 <col:63, col:77> 1
|-FunctionDecl 0x5575718989a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5575718987e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x557571898860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x557571898a58 <line:624:22>
| `-NonNullAttr 0x557571898ae0 <col:63, col:77> 1
|-FunctionDecl 0x557571898c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557571898b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557571898d00 <line:626:22>
| `-NonNullAttr 0x557571898d58 <col:63, col:77> 1
|-FunctionDecl 0x557571898e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557571898da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557571898f08 <line:628:22>
| `-NonNullAttr 0x557571898f60 <col:52, col:66> 1
|-FunctionDecl 0x557571899060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557571898fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557571899108 <line:630:22>
| `-NonNullAttr 0x557571899160 <col:52, col:66> 1
|-FunctionDecl 0x557571899260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5575718991a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557571899308 <line:632:22>
| `-NonNullAttr 0x557571899360 <col:52, col:66> 1
|-FunctionDecl 0x557571899738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x557571899440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x557571899550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5575718995d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5575718997f0 <line:636:22>
| `-NonNullAttr 0x557571899848 <col:63, col:77> 1
|-FunctionDecl 0x5575718999c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557571899898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557571899a70 <line:638:22>
| `-NonNullAttr 0x55757189ab00 <col:63, col:77> 1
|-FunctionDecl 0x55757189ac00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55757189ab48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55757189aca8 <line:640:22>
| `-NonNullAttr 0x55757189ad00 <col:52, col:66> 1
|-FunctionDecl 0x55757189aee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55757189adb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55757189af90 <line:642:22>
| `-NonNullAttr 0x55757189afe8 <col:63, col:77> 1
|-FunctionDecl 0x55757189b0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55757189b038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55757189b198 <line:644:22>
| `-NonNullAttr 0x55757189b1f0 <col:63, col:77> 1
|-FunctionDecl 0x55757189b418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55757189b238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55757189b2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55757189b4c8 <line:648:22>
| `-NonNullAttr 0x55757189b520 <col:63, col:80> 1 2
|-FunctionDecl 0x55757189b728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55757189b568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55757189b5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55757189b7d8 <line:651:22>
| `-NonNullAttr 0x55757189b830 <col:63, col:77> 1
|-FunctionDecl 0x55757189bb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55757189b910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55757189ba30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55757189bc48 <line:654:22>
| `-NonNullAttr 0x55757189bca0 <col:63, col:77> 1
|-FunctionDecl 0x55757189bdf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55757189bce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55757189bea0 <col:69>
|-FunctionDecl 0x55757189c018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55757189bf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55757189c0c0 <col:72>
|-FunctionDecl 0x55757189c2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55757189c128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55757189c1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55757189c3a8 <col:44>
|-FunctionDecl 0x55757189c5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55757189c410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55757189c488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55757189c678 <line:661:22>
| `-NonNullAttr 0x55757189c6d0 <col:63, col:77> 2
|-FunctionDecl 0x55757189cb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55757189c7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55757189c8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55757189c9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55757189cbe8 <col:47>
|-FunctionDecl 0x55757189ccf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55757189cc58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55757189ce48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55757189cdb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55757189cfa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55757189cf08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55757189d068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55757189d128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55757189d1e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55757189d2a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55757189d320 prev 0x55757189d2a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55757189d388 <col:24> 'int' 0
|-VarDecl 0x55757189d3c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55757189d440 prev 0x55757189d3c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55757189d4a8 <col:27> 'int' 0
|-VarDecl 0x55757189d4e0 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55757189d560 prev 0x55757189d4e0 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55757189d5c8 <col:27> 'int' 0
|-VarDecl 0x55757189d5f8 <line:678:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x55757189d678 <line:679:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x55757189d6f0 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55757189d768 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55757189d7e0 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55757189d858 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55757189d8d0 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55757189d948 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55757189d9c0 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55757189da38 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55757189db00 <line:688:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x55757189db80 <line:689:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x55757189dc00 <line:690:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x55757189dc78 <line:691:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55757189dcf8 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x55757189dd70 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55757189ddf0 <line:694:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55757189de70 prev 0x55757189ddf0 <line:695:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55757189ded8 <col:27> 'int' 0
|-VarDecl 0x55757189df08 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55757189df80 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55757189e000 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x55757189e080 prev 0x55757189e000 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55757189e0e8 <col:9> 'int' 0
|-VarDecl 0x55757189e118 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55757189e198 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55757189e210 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55757189e288 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55757189e300 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55757189e378 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55757189e3f0 <line:706:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55757189e468 <line:707:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55757189e4e0 <line:708:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55757189e558 <line:709:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55757189e5d0 <line:710:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55757189e650 <line:711:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55757189e6d0 <line:712:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55757189e748 <line:713:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55757189e7c8 <line:714:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55757189e840 <line:715:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55757189e8c0 <line:716:1, col:5> col:5 used y 'int'
|-VarDecl 0x55757189e940 prev 0x55757189e8c0 <line:717:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55757189e9a8 <col:9> 'int' 0
|-VarDecl 0x55757189e9d8 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55757189ea50 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55757189fb20 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55757189fc38 prev 0x55757189ccf0 <line:721:1, line:750:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55757189fba0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5575718a2c88 <line:722:1, line:750:1>
|   |-CallExpr 0x55757189fd48 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55757189fd30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55757189fce0 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55757189fda8 <line:724:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55757189fd68 <col:3> 'int' lvalue Var 0x55757189e940 'y' 'int'
|   | `-IntegerLiteral 0x55757189fd88 <col:7> 'int' 1
|   |-CallExpr 0x55757189fe00 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55757189fde8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55757189fdc8 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55757189fe58 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55757189fe40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55757189fe20 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55757189feb0 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55757189fe98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55757189fe78 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55757189ff08 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55757189fef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55757189fed0 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55757189ffd8 <line:729:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55757189ff28 <col:3> '_Bool' lvalue Var 0x55757189e9d8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55757189ffb8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55757189ffa0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55757189ff48 <col:19> '_Bool (void)' Function 0x557571843770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5575718a0070 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55757189fff8 <col:3> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5575718a0050 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5575718a0038 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5575718a0018 <col:19> '_Bool (void)' Function 0x557571843770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5575718a00e8 <line:731:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a0090 <col:3> '_Bool' lvalue Var 0x55757189e118 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a00d0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575718a00b0 <col:21> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5575718a0160 <line:732:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5575718a0108 <col:3> 'int' lvalue Var 0x55757189e198 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5575718a0148 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575718a0128 <col:15> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   |-BinaryOperator 0x5575718a0598 <line:733:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5575718a0180 <col:3> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   | `-ConditionalOperator 0x5575718a0568 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5575718a0390 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5575718a02b0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5575718a01d8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5575718a01c0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5575718a01a0 <col:8> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5575718a0290 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5575718a0228 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5575718a0210 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5575718a01f0 <col:27> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5575718a0278 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5575718a0260 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5575718a0240 <col:46> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5575718a0370 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5575718a0308 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5575718a02f0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5575718a02d0 <col:65> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5575718a0358 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5575718a0340 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5575718a0320 <col:84> '_Bool' lvalue Var 0x55757189e468 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5575718a0550 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a03b0 <col:101> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   |   `-ParenExpr 0x5575718a0530 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5575718a0500 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5575718a0470 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575718a0428 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575718a0410 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575718a03d0 <col:106> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575718a0458 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575718a0440 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575718a03f0 <col:124> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5575718a04d0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575718a0490 <col:141> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5575718a04e8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a04b0 <col:153> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5575718a0aa8 <line:734:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5575718a05b8 <col:3> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5575718a0a78 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5575718a0a48 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575718a0a30 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575718a05d8 <col:15> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575718a0a60 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a05f8 <col:31> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5575718a0a10 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5575718a09e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5575718a0808 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5575718a0728 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5575718a0650 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5575718a0638 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5575718a0618 <col:45> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5575718a0708 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5575718a06a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5575718a0688 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5575718a0668 <col:64> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5575718a06f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5575718a06d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5575718a06b8 <col:83> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5575718a07e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5575718a0780 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5575718a0768 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5575718a0748 <col:102> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5575718a07d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5575718a07b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5575718a0798 <col:121> '_Bool' lvalue Var 0x55757189e468 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5575718a09c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575718a0828 <col:138> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5575718a09a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5575718a0978 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5575718a08e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5575718a08a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5575718a0888 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5575718a0848 <col:151> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5575718a08d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5575718a08b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5575718a0868 <col:169> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5575718a0948 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5575718a0908 <col:186> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5575718a0960 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5575718a0928 <col:198> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5575718a0fe0 <line:735:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5575718a0ac8 <col:3> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5575718a0fb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5575718a0f80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575718a0f68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575718a0ae8 <col:15> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575718a0f98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a0b30 <col:31> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5575718a0f48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5575718a0f18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5575718a0d40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5575718a0c60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5575718a0b88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5575718a0b70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5575718a0b50 <col:45> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5575718a0c40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5575718a0bd8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5575718a0bc0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5575718a0ba0 <col:64> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5575718a0c28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5575718a0c10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5575718a0bf0 <col:83> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5575718a0d20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5575718a0cb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5575718a0ca0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5575718a0c80 <col:102> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5575718a0d08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5575718a0cf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5575718a0cd0 <col:121> '_Bool' lvalue Var 0x55757189e468 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5575718a0f00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575718a0d60 <col:138> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5575718a0ee0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5575718a0eb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5575718a0e20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5575718a0dd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5575718a0dc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5575718a0d80 <col:151> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5575718a0e08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5575718a0df0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5575718a0da0 <col:169> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5575718a0e80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5575718a0e40 <col:186> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5575718a0e98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5575718a0e60 <col:198> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5575718a1588 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a1000 <col:3> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a1570 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a1540 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5575718a14f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a14e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a1020 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a1528 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a1510 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a1040 <col:36> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5575718a14c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5575718a1490 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5575718a1250 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575718a1170 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575718a1098 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575718a1080 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575718a1060 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575718a1150 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575718a10e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575718a10d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575718a10b0 <col:74> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5575718a1138 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575718a1120 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575718a1100 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575718a1230 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575718a11c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575718a11b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575718a1190 <col:112> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5575718a1218 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575718a1200 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575718a11e0 <col:131> '_Bool' lvalue Var 0x55757189e468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5575718a1478 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575718a1460 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575718a1270 <col:148> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5575718a1440 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5575718a1410 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5575718a1330 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575718a12e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575718a12d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575718a1290 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575718a1318 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575718a1300 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575718a12b0 <col:184> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5575718a13c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575718a1380 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575718a1350 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575718a13f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5575718a13e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5575718a13a8 <col:212> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575718a1b88 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a15a8 <col:3> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a1b70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a1b40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5575718a1ac0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a1aa8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a15c8 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a1af0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a1ad8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a15e8 <col:36> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5575718a1a88 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5575718a1a58 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5575718a17f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575718a1718 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575718a1640 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575718a1628 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575718a1608 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575718a16f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575718a1690 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575718a1678 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575718a1658 <col:74> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5575718a16e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575718a16c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575718a16a8 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575718a17d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575718a1770 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575718a1758 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575718a1738 <col:112> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5575718a17c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575718a17a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575718a1788 <col:131> '_Bool' lvalue Var 0x55757189e468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5575718a1a40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575718a1a28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575718a1818 <col:148> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5575718a1a08 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5575718a19d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5575718a18d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575718a1890 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575718a1878 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575718a1838 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575718a18c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575718a18a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575718a1858 <col:184> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5575718a19a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575718a1928 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575718a18f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575718a19c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5575718a1980 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5575718a1950 <col:219> 'int' 0
|   |-BinaryOperator 0x5575718a2130 <line:738:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a1ba8 <col:3> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a2118 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a20e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5575718a20a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a2088 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a1bc8 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a20d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a20b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a1be8 <col:36> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5575718a2068 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5575718a2038 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5575718a1df8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575718a1d18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575718a1c40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575718a1c28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575718a1c08 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575718a1cf8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575718a1c90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575718a1c78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575718a1c58 <col:74> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5575718a1ce0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575718a1cc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575718a1ca8 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575718a1dd8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575718a1d70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575718a1d58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575718a1d38 <col:112> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5575718a1dc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575718a1da8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575718a1d88 <col:131> '_Bool' lvalue Var 0x55757189e468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5575718a2020 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575718a2008 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575718a1e18 <col:148> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5575718a1fe8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5575718a1fb8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5575718a1ed8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575718a1e90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575718a1e78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575718a1e38 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575718a1ec0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575718a1ea8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575718a1e58 <col:184> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5575718a1f70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575718a1f28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575718a1ef8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575718a1fa0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5575718a1f88 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5575718a1f50 <col:212> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5575718a26f8 <line:739:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a2150 <col:3> '_Bool' lvalue Var 0x55757189e468 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a26e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a26b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5575718a2668 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a2650 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a2170 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a2698 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a2680 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a2190 <col:36> '_Bool' lvalue Var 0x55757189e468 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5575718a2630 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5575718a2600 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5575718a23a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575718a22c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575718a21e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575718a21d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575718a21b0 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575718a22a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575718a2238 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575718a2220 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575718a2200 <col:74> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5575718a2288 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575718a2270 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575718a2250 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575718a2380 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575718a2318 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575718a2300 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575718a22e0 <col:112> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5575718a2368 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575718a2350 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575718a2330 <col:131> '_Bool' lvalue Var 0x55757189e468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5575718a25e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575718a25d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575718a23c0 <col:148> '_Bool' lvalue Var 0x55757189e468 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5575718a25b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5575718a2580 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5575718a2480 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575718a2438 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575718a2420 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575718a23e0 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575718a2468 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575718a2450 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575718a2400 <col:184> '_Bool' lvalue Var 0x55757189e288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5575718a2550 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575718a24d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575718a24a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575718a2568 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5575718a2528 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5575718a24f8 <col:219> 'int' 0
|   |-BinaryOperator 0x5575718a2770 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5575718a2718 <col:3> 'int' lvalue Var 0x55757189d440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5575718a2758 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575718a2738 <col:25> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   |-BinaryOperator 0x5575718a28a0 <line:741:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5575718a2790 <col:3> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   | `-ConditionalOperator 0x5575718a2870 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5575718a2828 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575718a2810 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575718a27b0 <col:7> '_Bool' lvalue Var 0x55757189e118 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5575718a2840 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a27d0 <col:25> 'int' lvalue Var 0x55757189e198 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5575718a2858 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5575718a27f0 <col:37> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   |-BinaryOperator 0x5575718a2938 <line:742:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a28c0 <col:3> '_Bool' lvalue Var 0x55757189e118 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5575718a2910 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5575718a28e0 <col:28> 'int' 0
|   |-CallExpr 0x5575718a2990 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575718a2978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a2958 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575718a29e8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575718a29d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a29b0 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5575718a2a40 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575718a2a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a2a08 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575718a2a98 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575718a2a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a2a60 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575718a2b70 <line:747:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5575718a2ab8 <col:3> 'int' lvalue Var 0x55757189d320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5575718a2b50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5575718a2b18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a2ad8 <col:22> 'int' lvalue Var 0x55757189d320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5575718a2af8 <col:41> 'int' 1
|   |-CallExpr 0x5575718a2bc8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575718a2bb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a2b90 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5575718a2c78 <line:749:3, col:36>
|     `-CallExpr 0x5575718a2c58 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5575718a2c40 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5575718a2be8 <col:10> 'void *(void)' Function 0x557571843ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5575718a2e20 prev 0x55757189ce48 <line:751:1, line:770:1> line:751:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5575718a2d88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5575718a4050 <line:752:1, line:770:1>
|   |-CallExpr 0x5575718a2f00 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575718a2ee8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a2ec8 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575718a2f60 <line:754:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5575718a2f20 <col:3> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   | `-IntegerLiteral 0x5575718a2f40 <col:7> 'int' 1
|   |-CallExpr 0x5575718a2fb8 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575718a2fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a2f80 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575718a3010 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575718a2ff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a2fd8 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575718a3070 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5575718a3030 <col:3> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   | `-IntegerLiteral 0x5575718a3050 <col:7> 'int' 2
|   |-CallExpr 0x5575718a30c8 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575718a30b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a3090 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575718a3120 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575718a3108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a30e8 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575718a3408 <line:760:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5575718a3140 <col:3> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   | `-ConditionalOperator 0x5575718a33d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5575718a3200 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5575718a31b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5575718a31a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5575718a3160 <col:7> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5575718a31e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5575718a31d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5575718a3180 <col:25> '_Bool' lvalue Var 0x55757189e300 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575718a33c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a3220 <col:42> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5575718a33a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5575718a3370 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5575718a32e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575718a3298 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575718a3280 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575718a3240 <col:55> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575718a32c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575718a32b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575718a3260 <col:73> '_Bool' lvalue Var 0x55757189e4e0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5575718a3340 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575718a3300 <col:90> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5575718a3358 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a3320 <col:102> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   |-BinaryOperator 0x5575718a3610 <line:761:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a3428 <col:3> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a35f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a35c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575718a34e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575718a34a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575718a3488 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575718a3448 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575718a34d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575718a34b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575718a3468 <col:38> '_Bool' lvalue Var 0x55757189e300 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a3580 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575718a3538 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575718a3508 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575718a35b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575718a3598 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a3560 <col:66> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575718a38f8 <line:762:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a3630 <col:3> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a38e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a38b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575718a37d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575718a36f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575718a36a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575718a3690 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575718a3650 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575718a36d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575718a36c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575718a3670 <col:38> '_Bool' lvalue Var 0x55757189e300 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5575718a37b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575718a3768 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575718a3750 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575718a3710 <col:56> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575718a3798 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575718a3780 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575718a3730 <col:74> '_Bool' lvalue Var 0x55757189e4e0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a3868 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575718a3820 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575718a37f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575718a3898 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575718a3880 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a3848 <col:102> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5575718a3b00 <line:763:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a3918 <col:3> '_Bool' lvalue Var 0x55757189e300 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a3ae8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a3ab8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575718a39d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575718a3990 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575718a3978 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575718a3938 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575718a39c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575718a39a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575718a3958 <col:38> '_Bool' lvalue Var 0x55757189e300 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a3a70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575718a3a28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575718a39f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575718a3aa0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575718a3a88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a3a50 <col:66> '_Bool' lvalue Var 0x55757189e300 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5575718a3e08 <line:764:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a3b20 <col:3> '_Bool' lvalue Var 0x55757189e4e0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a3df0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a3dc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575718a3ce0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575718a3c00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575718a3bb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575718a3ba0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575718a3b60 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575718a3be8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575718a3bd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575718a3b80 <col:38> '_Bool' lvalue Var 0x55757189e300 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5575718a3cc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575718a3c78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575718a3c60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575718a3c20 <col:56> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575718a3ca8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575718a3c90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575718a3c40 <col:74> '_Bool' lvalue Var 0x55757189e4e0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a3d78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575718a3d30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575718a3d00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575718a3da8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575718a3d90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a3d58 <col:102> '_Bool' lvalue Var 0x55757189e4e0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5575718a3e60 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575718a3e48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a3e28 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575718a3eb8 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575718a3ea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a3e80 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575718a3f70 <line:767:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5575718a3ed8 <col:3> 'int' lvalue Var 0x55757189d320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5575718a3f50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5575718a3f38 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a3ef8 <col:22> 'int' lvalue Var 0x55757189d320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5575718a3f18 <col:41> 'int' 1
|   |-CallExpr 0x5575718a3fc8 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575718a3fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a3f90 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5575718a4040 <line:769:3, col:36>
|     `-CallExpr 0x5575718a4020 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5575718a4008 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5575718a3fe8 <col:10> 'void *(void)' Function 0x557571843ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5575718a4198 prev 0x55757189cfa0 <line:771:1, line:805:1> line:771:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5575718a4100 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5575718a7e78 <line:772:1, line:805:1>
|   |-CallExpr 0x5575718a4278 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575718a4260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a4240 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575718a4310 <line:774:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a4298 <col:3> '_Bool' lvalue Var 0x55757189e9d8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5575718a42f0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5575718a42d8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5575718a42b8 <col:19> '_Bool (void)' Function 0x557571843770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5575718a43a8 <line:775:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a4330 <col:3> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5575718a4388 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5575718a4370 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5575718a4350 <col:19> '_Bool (void)' Function 0x557571843770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5575718a4420 <line:776:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a43c8 <col:3> '_Bool' lvalue Var 0x55757189e118 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a4408 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575718a43e8 <col:21> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5575718a4498 <line:777:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5575718a4440 <col:3> 'int' lvalue Var 0x55757189e198 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5575718a4480 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575718a4460 <col:15> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   |-BinaryOperator 0x5575718a48d0 <line:778:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5575718a44b8 <col:3> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   | `-ConditionalOperator 0x5575718a48a0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5575718a46c8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5575718a45e8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5575718a4510 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5575718a44f8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5575718a44d8 <col:8> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5575718a45c8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5575718a4560 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5575718a4548 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5575718a4528 <col:27> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5575718a45b0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5575718a4598 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5575718a4578 <col:46> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5575718a46a8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5575718a4640 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5575718a4628 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5575718a4608 <col:65> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5575718a4690 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5575718a4678 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5575718a4658 <col:84> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5575718a4888 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a46e8 <col:101> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   |   `-ParenExpr 0x5575718a4868 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5575718a4838 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5575718a47a8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575718a4760 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575718a4748 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575718a4708 <col:106> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575718a4790 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575718a4778 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575718a4728 <col:124> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575718a4808 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575718a47c8 <col:141> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5575718a4820 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a47e8 <col:153> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5575718a4df0 <line:779:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5575718a48f0 <col:3> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5575718a4dc0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5575718a4d90 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575718a4d78 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575718a4910 <col:15> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575718a4da8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a4930 <col:31> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5575718a4d58 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5575718a4d28 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5575718a4b40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5575718a4a60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5575718a4988 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5575718a4970 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5575718a4950 <col:45> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5575718a4a40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5575718a49d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5575718a49c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5575718a49a0 <col:64> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5575718a4a28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5575718a4a10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5575718a49f0 <col:83> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5575718a4b20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5575718a4ab8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5575718a4aa0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5575718a4a80 <col:102> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5575718a4b08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5575718a4af0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5575718a4ad0 <col:121> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575718a4d10 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575718a4b70 <col:138> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5575718a4cf0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5575718a4cc0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5575718a4c30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5575718a4be8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5575718a4bd0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5575718a4b90 <col:151> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5575718a4c18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5575718a4c00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5575718a4bb0 <col:169> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5575718a4c90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5575718a4c50 <col:186> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5575718a4ca8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5575718a4c70 <col:198> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5575718a5300 <line:780:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5575718a4e10 <col:3> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5575718a52d0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5575718a52a0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575718a5288 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575718a4e30 <col:15> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5575718a52b8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a4e50 <col:31> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5575718a5268 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5575718a5238 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5575718a5060 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5575718a4f80 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5575718a4ea8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5575718a4e90 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5575718a4e70 <col:45> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5575718a4f60 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5575718a4ef8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5575718a4ee0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5575718a4ec0 <col:64> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5575718a4f48 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5575718a4f30 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5575718a4f10 <col:83> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5575718a5040 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5575718a4fd8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5575718a4fc0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5575718a4fa0 <col:102> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5575718a5028 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5575718a5010 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5575718a4ff0 <col:121> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575718a5220 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575718a5080 <col:138> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5575718a5200 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5575718a51d0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5575718a5140 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5575718a50f8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5575718a50e0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5575718a50a0 <col:151> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5575718a5128 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5575718a5110 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5575718a50c0 <col:169> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5575718a51a0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5575718a5160 <col:186> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5575718a51b8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5575718a5180 <col:198> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5575718a58a8 <line:781:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a5320 <col:3> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a5890 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a5860 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5575718a5818 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a5800 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a5340 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a5848 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a5830 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a5360 <col:36> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5575718a57e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5575718a57b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5575718a5570 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575718a5490 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575718a53b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575718a53a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575718a5380 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575718a5470 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575718a5408 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575718a53f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575718a53d0 <col:74> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575718a5458 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575718a5440 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575718a5420 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575718a5550 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575718a54e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575718a54d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575718a54b0 <col:112> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575718a5538 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575718a5520 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575718a5500 <col:131> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575718a5798 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575718a5780 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575718a5590 <col:148> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5575718a5760 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5575718a5730 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5575718a5650 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575718a5608 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575718a55f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575718a55b0 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575718a5638 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575718a5620 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575718a55d0 <col:184> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575718a56e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575718a56a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575718a5670 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575718a5718 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5575718a5700 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5575718a56c8 <col:212> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575718a5e98 <line:782:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a58c8 <col:3> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a5e80 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a5e50 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5575718a5e08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a5df0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a58e8 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a5e38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a5e20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a5908 <col:36> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5575718a5dd0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5575718a5da0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5575718a5b18 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575718a5a38 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575718a5960 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575718a5948 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575718a5928 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575718a5a18 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575718a59b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575718a5998 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575718a5978 <col:74> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575718a5a00 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575718a59e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575718a59c8 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575718a5af8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575718a5a90 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575718a5a78 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575718a5a58 <col:112> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575718a5ae0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575718a5ac8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575718a5aa8 <col:131> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575718a5d88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575718a5d70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575718a5b38 <col:148> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5575718a5d50 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5575718a5d20 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5575718a5c20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575718a5bd8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575718a5bc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575718a5b80 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575718a5c08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575718a5bf0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575718a5ba0 <col:184> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575718a5cf0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575718a5c70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575718a5c40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575718a5d08 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5575718a5cc8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5575718a5c98 <col:219> 'int' 0
|   |-BinaryOperator 0x5575718a6440 <line:783:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a5eb8 <col:3> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a6428 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a63f8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5575718a63b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a6398 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a5ed8 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a63e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a63c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a5ef8 <col:36> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5575718a6378 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5575718a6348 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5575718a6108 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575718a6028 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575718a5f50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575718a5f38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575718a5f18 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575718a6008 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575718a5fa0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575718a5f88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575718a5f68 <col:74> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575718a5ff0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575718a5fd8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575718a5fb8 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575718a60e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575718a6080 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575718a6068 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575718a6048 <col:112> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575718a60d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575718a60b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575718a6098 <col:131> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575718a6330 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575718a6318 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575718a6128 <col:148> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5575718a62f8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5575718a62c8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5575718a61e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575718a61a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575718a6188 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575718a6148 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575718a61d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575718a61b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575718a6168 <col:184> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575718a6280 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575718a6238 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575718a6208 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575718a62b0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5575718a6298 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5575718a6260 <col:212> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5575718a6a08 <line:784:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a6460 <col:3> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a69f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a69c0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5575718a6978 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a6960 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a6480 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a69a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5575718a6990 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5575718a64a0 <col:36> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5575718a6940 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5575718a6910 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5575718a66b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5575718a65d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5575718a64f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5575718a64e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5575718a64c0 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5575718a65b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5575718a6548 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5575718a6530 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5575718a6510 <col:74> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5575718a6598 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5575718a6580 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5575718a6560 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5575718a6690 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5575718a6628 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5575718a6610 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5575718a65f0 <col:112> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5575718a6678 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5575718a6660 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5575718a6640 <col:131> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5575718a68f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5575718a68e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5575718a66d0 <col:148> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5575718a68c0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5575718a6890 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5575718a6790 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5575718a6748 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5575718a6730 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5575718a66f0 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5575718a6778 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5575718a6760 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5575718a6710 <col:184> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5575718a6860 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5575718a67e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5575718a67b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5575718a6878 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5575718a6838 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5575718a6808 <col:219> 'int' 0
|   |-BinaryOperator 0x5575718a6aa0 <line:785:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a6a28 <col:3> '_Bool' lvalue Var 0x55757189db00 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5575718a6a78 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5575718a6a48 <col:45> 'int' 1
|   |-BinaryOperator 0x5575718a6b18 <line:786:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x5575718a6ac0 <col:3> 'int *' lvalue Var 0x55757189db80 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x5575718a6b00 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x5575718a6ae0 <col:43> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   |-BinaryOperator 0x5575718a6ba8 <line:787:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5575718a6b38 <col:3> 'int' lvalue Var 0x55757189d560 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5575718a6b90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575718a6b58 <col:25> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   |-BinaryOperator 0x5575718a6cd8 <line:788:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5575718a6bc8 <col:3> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   | `-ConditionalOperator 0x5575718a6ca8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5575718a6c60 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5575718a6c48 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5575718a6be8 <col:7> '_Bool' lvalue Var 0x55757189e118 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5575718a6c78 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a6c08 <col:25> 'int' lvalue Var 0x55757189e198 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5575718a6c90 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5575718a6c28 <col:37> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   |-BinaryOperator 0x5575718a6d70 <line:789:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a6cf8 <col:3> '_Bool' lvalue Var 0x55757189e118 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5575718a6d48 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5575718a6d18 <col:28> 'int' 0
|   |-CallExpr 0x5575718a6dc8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575718a6db0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a6d90 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575718a6e20 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575718a6e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a6de8 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575718a6e98 <line:792:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5575718a6e40 <col:3> 'int' lvalue Var 0x55757189de70 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5575718a6e80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5575718a6e60 <col:25> 'int' lvalue Var 0x55757189e940 'y' 'int'
|   |-CallExpr 0x5575718a6ef0 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575718a6ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a6eb8 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575718a6f48 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575718a6f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a6f10 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575718a7230 <line:795:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5575718a6f68 <col:3> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   | `-ConditionalOperator 0x5575718a7200 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5575718a7028 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5575718a6fe0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5575718a6fc8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5575718a6f88 <col:7> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5575718a7010 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5575718a6ff8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5575718a6fa8 <col:25> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5575718a71e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a7048 <col:42> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5575718a71c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5575718a7198 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5575718a7108 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5575718a70c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5575718a70a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5575718a7068 <col:55> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5575718a70f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5575718a70d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5575718a7088 <col:73> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5575718a7168 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5575718a7128 <col:90> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5575718a7180 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a7148 <col:102> 'int' lvalue Var 0x55757189e080 'x' 'int'
|   |-BinaryOperator 0x5575718a7438 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a7250 <col:3> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a7420 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a73f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575718a7310 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575718a72c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575718a72b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575718a7270 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575718a72f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575718a72e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575718a7290 <col:38> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a73a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575718a7360 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575718a7330 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575718a73d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575718a73c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a7388 <col:66> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5575718a7720 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a7458 <col:3> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a7708 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a76d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575718a75f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575718a7518 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575718a74d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575718a74b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575718a7478 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575718a7500 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575718a74e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575718a7498 <col:38> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5575718a75d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575718a7590 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575718a7578 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575718a7538 <col:56> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575718a75c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575718a75a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575718a7558 <col:74> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a7690 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575718a7648 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575718a7618 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575718a76c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575718a76a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a7670 <col:102> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5575718a7928 <line:798:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a7740 <col:3> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a7910 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a78e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5575718a7800 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5575718a77b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5575718a77a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5575718a7760 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5575718a77e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5575718a77d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5575718a7780 <col:38> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a7898 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575718a7850 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575718a7820 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5575718a78c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575718a78b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a7878 <col:66> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5575718a7c30 <line:799:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5575718a7948 <col:3> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5575718a7c18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5575718a7be8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5575718a7ae8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5575718a7a08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5575718a79c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5575718a79a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5575718a7968 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5575718a79f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5575718a79d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5575718a7988 <col:38> '_Bool' lvalue Var 0x55757189e378 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5575718a7ac8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5575718a7a80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5575718a7a68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5575718a7a28 <col:56> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5575718a7ab0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5575718a7a98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5575718a7a48 <col:74> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5575718a7ba0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5575718a7b38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5575718a7b08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5575718a7bd0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5575718a7bb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5575718a7b60 <col:102> '_Bool' lvalue Var 0x55757189e558 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5575718a7c88 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575718a7c70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a7c50 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5575718a7ce0 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5575718a7cc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a7ca8 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5575718a7d98 <line:802:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5575718a7d00 <col:3> 'int' lvalue Var 0x55757189d320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5575718a7d78 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5575718a7d60 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5575718a7d20 <col:22> 'int' lvalue Var 0x55757189d320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5575718a7d40 <col:41> 'int' 1
|   |-CallExpr 0x5575718a7df0 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5575718a7dd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5575718a7db8 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5575718a7e68 <line:804:3, col:36>
|     `-CallExpr 0x5575718a7e48 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5575718a7e30 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5575718a7e10 <col:10> 'void *(void)' Function 0x557571843ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5575718a7fa8 prev 0x55757189d068 <line:806:1, line:808:1> line:806:6 fence 'void ()'
| `-CompoundStmt 0x5575718a8048 <line:807:1, line:808:1>
|-FunctionDecl 0x5575718a8078 prev 0x55757189d128 <line:809:1, line:811:1> line:809:6 isync 'void ()'
| `-CompoundStmt 0x5575718a8118 <line:810:1, line:811:1>
|-FunctionDecl 0x5575718a8148 prev 0x55757189d1e8 <line:812:1, line:814:1> line:812:6 lwfence 'void ()'
| `-CompoundStmt 0x5575718a81e8 <line:813:1, line:814:1>
`-FunctionDecl 0x5575718a8258 <line:815:1, line:854:1> line:815:5 main 'int ()'
  `-CompoundStmt 0x5575718acbf0 <line:816:1, line:854:1>
    |-DeclStmt 0x5575718a8370 <line:817:3, col:18>
    | `-VarDecl 0x5575718a8308 <col:3, col:13> col:13 used t2383 'pthread_t':'unsigned long'
    |-CallExpr 0x5575718a8578 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5575718a8560 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575718a8388 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5575718845b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5575718a83c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5575718a83a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5575718a8308 't2383' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5575718a85b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5575718a8440 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5575718a8418 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5575718a83e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5575718a85d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575718a8460 <col:39> 'void *(void *)' Function 0x55757189fc38 'P0' 'void *(void *)'
    | `-ParenExpr 0x5575718a84e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5575718a84b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5575718a8480 <col:52> 'int' 0
    |-DeclStmt 0x5575718a8660 <line:819:3, col:18>
    | `-VarDecl 0x5575718a85f8 <col:3, col:13> col:13 used t2384 'pthread_t':'unsigned long'
    |-CallExpr 0x5575718a8808 <line:820:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5575718a87f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575718a8678 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5575718845b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5575718a86b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5575718a8698 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5575718a85f8 't2384' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5575718a8848 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5575718a8730 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5575718a8708 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5575718a86d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5575718a8860 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575718a8750 <col:39> 'void *(void *)' Function 0x5575718a2e20 'P1' 'void *(void *)'
    | `-ParenExpr 0x5575718a87d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5575718a87a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5575718a8770 <col:52> 'int' 0
    |-DeclStmt 0x5575718a88f0 <line:821:3, col:18>
    | `-VarDecl 0x5575718a8888 <col:3, col:13> col:13 used t2385 'pthread_t':'unsigned long'
    |-CallExpr 0x5575718a8a98 <line:822:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5575718a8a80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575718a8908 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5575718845b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5575718a8948 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5575718a8928 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5575718a8888 't2385' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5575718a8ad8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5575718a89c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5575718a8998 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5575718a8960 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5575718a8af0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575718a89e0 <col:39> 'void *(void *)' Function 0x5575718a4198 'P2' 'void *(void *)'
    | `-ParenExpr 0x5575718a8a60 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5575718a8a38 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5575718a8a00 <col:52> 'int' 0
    |-CallExpr 0x5575718a8b40 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5575718a8b28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575718a8b08 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5575718a8c20 <line:824:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5575718a8b60 <col:3> '_Bool' lvalue Var 0x55757189df08 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5575718a8c08 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5575718a8be8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5575718a8bd0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5575718a8b80 <col:21> 'int' lvalue Var 0x55757189d320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5575718a8bb0 <col:41> 'int' 3
    |-CallExpr 0x5575718a8c78 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5575718a8c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575718a8c40 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5575718a8d28 <line:826:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5575718a8d10 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575718a8c98 <col:3> 'void (int)' Function 0x557571843940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5575718a8d68 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5575718a8d50 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5575718a8cb8 <col:21> '_Bool' lvalue Var 0x55757189df08 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5575718a8db8 <line:827:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5575718a8da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575718a8d80 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5575718a90a0 <line:828:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5575718a8dd8 <col:3> 'int' lvalue Var 0x55757189e080 'x' 'int'
    | `-ConditionalOperator 0x5575718a9070 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5575718a8e98 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5575718a8e50 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5575718a8e38 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5575718a8df8 <col:7> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5575718a8e80 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5575718a8e68 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5575718a8e18 <col:25> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5575718a9058 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5575718a8eb8 <col:42> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5575718a9038 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5575718a9008 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5575718a8f78 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5575718a8f30 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5575718a8f18 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5575718a8ed8 <col:55> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5575718a8f60 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5575718a8f48 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5575718a8ef8 <col:73> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5575718a8fd8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5575718a8f98 <col:90> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5575718a8ff0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5575718a8fb8 <col:102> 'int' lvalue Var 0x55757189e080 'x' 'int'
    |-BinaryOperator 0x5575718a92a8 <line:829:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5575718a90c0 <col:3> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5575718a9290 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575718a9260 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5575718a9180 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5575718a9138 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5575718a9120 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5575718a90e0 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5575718a9168 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5575718a9150 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5575718a9100 <col:38> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575718a9218 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575718a91d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575718a91a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5575718a9248 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575718a9230 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575718a91f8 <col:66> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5575718a9590 <line:830:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5575718a92c8 <col:3> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5575718a9578 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575718a9548 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5575718a9468 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5575718a9388 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5575718a9340 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5575718a9328 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5575718a92e8 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5575718a9370 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5575718a9358 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5575718a9308 <col:38> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5575718a9448 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5575718a9400 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5575718a93e8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5575718a93a8 <col:56> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5575718a9430 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5575718a9418 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5575718a93c8 <col:74> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575718a9500 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575718a94b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575718a9488 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5575718a9530 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575718a9518 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575718a94e0 <col:102> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5575718a9798 <line:831:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5575718a95b0 <col:3> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5575718a9780 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575718a9750 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5575718a9670 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5575718a9628 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5575718a9610 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5575718a95d0 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5575718a9658 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5575718a9640 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5575718a95f0 <col:38> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575718a9708 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575718a96c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575718a9690 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5575718a9738 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575718a9720 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575718a96e8 <col:66> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5575718a9a80 <line:832:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5575718a97b8 <col:3> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5575718a9a68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575718a9a38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5575718a9958 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5575718a9878 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5575718a9830 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5575718a9818 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5575718a97d8 <col:20> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5575718a9860 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5575718a9848 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5575718a97f8 <col:38> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5575718a9938 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5575718a98f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5575718a98d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5575718a9898 <col:56> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5575718a9920 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5575718a9908 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5575718a98b8 <col:74> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5575718a99f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5575718a99a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5575718a9978 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5575718a9a20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5575718a9a08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5575718a99d0 <col:102> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5575718a9ad8 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5575718a9ac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575718a9aa0 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5575718a9b30 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5575718a9b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575718a9af8 <col:3> 'void ()' Function 0x557571843fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5575718a9be0 <line:835:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5575718a9b50 <col:3> '_Bool' lvalue Var 0x55757189e9d8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x5575718a9bc0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5575718a9b90 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5575718a9b70 <col:19> '_Bool (void)' Function 0x557571843770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5575718a9c78 <line:836:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5575718a9c00 <col:3> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
    | `-CallExpr 0x5575718a9c58 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5575718a9c40 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5575718a9c20 <col:19> '_Bool (void)' Function 0x557571843770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5575718a9cf0 <line:837:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5575718a9c98 <col:3> '_Bool' lvalue Var 0x55757189e118 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5575718a9cd8 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5575718a9cb8 <col:21> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5575718a9d68 <line:838:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5575718a9d10 <col:3> 'int' lvalue Var 0x55757189e198 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5575718a9d50 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5575718a9d30 <col:15> 'int' lvalue Var 0x55757189e080 'x' 'int'
    |-BinaryOperator 0x5575718aa1a0 <line:839:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5575718a9d88 <col:3> 'int' lvalue Var 0x55757189e080 'x' 'int'
    | `-ConditionalOperator 0x5575718aa170 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5575718a9f98 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5575718a9eb8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5575718a9de0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5575718a9dc8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5575718a9da8 <col:8> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5575718a9e98 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5575718a9e30 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5575718a9e18 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5575718a9df8 <col:27> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5575718a9e80 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5575718a9e68 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5575718a9e48 <col:46> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5575718a9f78 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5575718a9f10 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5575718a9ef8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5575718a9ed8 <col:65> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5575718a9f60 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5575718a9f48 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5575718a9f28 <col:84> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5575718aa158 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5575718a9fb8 <col:101> 'int' lvalue Var 0x55757189e080 'x' 'int'
    |   `-ParenExpr 0x5575718aa138 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5575718aa108 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5575718aa078 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5575718aa030 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5575718aa018 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5575718a9fd8 <col:106> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5575718aa060 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5575718aa048 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5575718a9ff8 <col:124> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5575718aa0d8 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5575718aa098 <col:141> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5575718aa0f0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5575718aa0b8 <col:153> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
    |-BinaryOperator 0x5575718aa6b0 <line:840:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5575718aa1c0 <col:3> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x5575718aa680 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5575718aa650 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5575718aa638 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5575718aa1e0 <col:15> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5575718aa668 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5575718aa200 <col:31> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5575718aa618 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5575718aa5e8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5575718aa410 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5575718aa330 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5575718aa258 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5575718aa240 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5575718aa220 <col:45> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5575718aa310 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5575718aa2a8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5575718aa290 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5575718aa270 <col:64> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5575718aa2f8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5575718aa2e0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5575718aa2c0 <col:83> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5575718aa3f0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5575718aa388 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5575718aa370 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5575718aa350 <col:102> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5575718aa3d8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5575718aa3c0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5575718aa3a0 <col:121> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5575718aa5d0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5575718aa430 <col:138> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
    |       `-ParenExpr 0x5575718aa5b0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5575718aa580 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5575718aa4f0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5575718aa4a8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5575718aa490 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5575718aa450 <col:151> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5575718aa4d8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5575718aa4c0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5575718aa470 <col:169> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5575718aa550 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5575718aa510 <col:186> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5575718aa568 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5575718aa530 <col:198> 'int' lvalue Var 0x55757189e6d0 'x$w_buff0' 'int'
    |-BinaryOperator 0x5575718aabd0 <line:841:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5575718aa6d0 <col:3> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x5575718aab90 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5575718aab60 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5575718aab48 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5575718aa6f0 <col:15> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5575718aab78 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5575718aa710 <col:31> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x5575718aab28 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5575718aaaf8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5575718aa920 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5575718aa840 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5575718aa768 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5575718aa750 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5575718aa730 <col:45> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5575718aa820 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5575718aa7b8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5575718aa7a0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5575718aa780 <col:64> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5575718aa808 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5575718aa7f0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5575718aa7d0 <col:83> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5575718aa900 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5575718aa898 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5575718aa880 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5575718aa860 <col:102> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5575718aa8e8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5575718aa8d0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5575718aa8b0 <col:121> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5575718aaae0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5575718aa940 <col:138> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x5575718aaac0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5575718aaa90 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5575718aaa00 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5575718aa9b8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5575718aa9a0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5575718aa960 <col:151> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5575718aa9e8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5575718aa9d0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5575718aa980 <col:169> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5575718aaa60 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5575718aaa20 <col:186> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5575718aaa78 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5575718aaa40 <col:198> 'int' lvalue Var 0x55757189e7c8 'x$w_buff1' 'int'
    |-BinaryOperator 0x5575718ab178 <line:842:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5575718aabf0 <col:3> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5575718ab160 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575718ab130 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5575718ab0e8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5575718ab0d0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5575718aac10 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5575718ab118 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5575718ab100 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5575718aac30 <col:36> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5575718ab0b0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5575718ab080 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5575718aae40 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5575718aad60 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5575718aac88 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5575718aac70 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5575718aac50 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5575718aad40 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5575718aacd8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5575718aacc0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5575718aaca0 <col:74> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5575718aad28 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5575718aad10 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5575718aacf0 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5575718aae20 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5575718aadb8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5575718aada0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5575718aad80 <col:112> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5575718aae08 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5575718aadf0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5575718aadd0 <col:131> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5575718ab068 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5575718ab050 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5575718aae60 <col:148> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5575718ab030 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5575718ab000 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5575718aaf20 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5575718aaed8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5575718aaec0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5575718aae80 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5575718aaf08 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5575718aaef0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5575718aaea0 <col:184> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5575718aafb8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5575718aaf70 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5575718aaf40 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5575718aafe8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5575718aafd0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5575718aaf98 <col:212> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5575718ab740 <line:843:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5575718ab198 <col:3> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5575718ab728 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575718ab6f8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5575718ab6b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5575718ab698 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5575718ab1b8 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5575718ab6e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5575718ab6c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5575718ab1d8 <col:36> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5575718ab678 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5575718ab648 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5575718ab3e8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5575718ab308 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5575718ab230 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5575718ab218 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5575718ab1f8 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5575718ab2e8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5575718ab280 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5575718ab268 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5575718ab248 <col:74> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5575718ab2d0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5575718ab2b8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5575718ab298 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5575718ab3c8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5575718ab360 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5575718ab348 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5575718ab328 <col:112> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5575718ab3b0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5575718ab398 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5575718ab378 <col:131> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5575718ab630 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5575718ab618 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5575718ab408 <col:148> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5575718ab5f8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5575718ab5c8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5575718ab4c8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5575718ab480 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5575718ab468 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5575718ab428 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5575718ab4b0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5575718ab498 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5575718ab448 <col:184> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5575718ab598 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5575718ab518 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5575718ab4e8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5575718ab5b0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5575718ab570 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5575718ab540 <col:219> 'int' 0
    |-BinaryOperator 0x5575718abd08 <line:844:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5575718ab760 <col:3> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5575718abcf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575718abcc0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5575718abc78 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5575718abc60 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5575718ab780 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5575718abca8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5575718abc90 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5575718ab7a0 <col:36> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5575718abc40 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5575718abc10 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5575718ab9b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5575718ab8d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5575718ab7f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5575718ab7e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5575718ab7c0 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5575718ab8b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5575718ab848 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5575718ab830 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5575718ab810 <col:74> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5575718ab898 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5575718ab880 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5575718ab860 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5575718ab990 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5575718ab928 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5575718ab910 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5575718ab8f0 <col:112> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5575718ab978 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5575718ab960 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5575718ab940 <col:131> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5575718abbf8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5575718abbe0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5575718ab9d0 <col:148> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5575718abba0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5575718abb70 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5575718aba90 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5575718aba48 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5575718aba30 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5575718ab9f0 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5575718aba78 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5575718aba60 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5575718aba10 <col:184> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5575718abb28 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5575718abae0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5575718abab0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5575718abb58 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5575718abb40 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5575718abb08 <col:212> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5575718ac2d0 <line:845:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5575718abd28 <col:3> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5575718ac2b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5575718ac288 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5575718ac240 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5575718ac228 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5575718abd48 <col:20> '_Bool' lvalue Var 0x55757189fb20 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5575718ac270 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5575718ac258 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5575718abd68 <col:36> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5575718ac208 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5575718ac1d8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5575718abf78 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5575718abe98 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5575718abdc0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5575718abda8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5575718abd88 <col:55> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5575718abe78 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5575718abe10 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5575718abdf8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5575718abdd8 <col:74> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5575718abe60 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5575718abe48 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5575718abe28 <col:93> '_Bool' lvalue Var 0x55757189e840 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5575718abf58 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5575718abef0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5575718abed8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5575718abeb8 <col:112> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5575718abf40 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5575718abf28 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5575718abf08 <col:131> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5575718ac1c0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5575718ac1a8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5575718abf98 <col:148> '_Bool' lvalue Var 0x55757189e3f0 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5575718ac188 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5575718ac158 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5575718ac058 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5575718ac010 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5575718abff8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5575718abfb8 <col:166> '_Bool' lvalue Var 0x55757189e748 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5575718ac040 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5575718ac028 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5575718abfd8 <col:184> '_Bool' lvalue Var 0x55757189e210 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5575718ac128 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5575718ac0a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5575718ac078 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5575718ac140 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5575718ac100 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5575718ac0d0 <col:219> 'int' 0
    |-BinaryOperator 0x5575718ac368 <line:846:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5575718ac2f0 <col:3> '_Bool' lvalue Var 0x55757189ea50 'weak$$choice1' '_Bool'
    | `-CallExpr 0x5575718ac348 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5575718ac330 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5575718ac310 <col:19> '_Bool (void)' Function 0x557571843770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5575718ac5a0 <line:847:3, col:140> 'int' '='
    | |-DeclRefExpr 0x5575718ac388 <col:3> 'int' lvalue Var 0x55757189d560 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x5575718ac570 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x5575718ac540 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5575718ac528 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5575718ac3a8 <col:25> '_Bool' lvalue Var 0x55757189db00 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x5575718ac4e8 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x5575718ac4b8 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x5575718ac470 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x5575718ac458 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5575718ac3c8 <col:61> '_Bool' lvalue Var 0x55757189ea50 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x5575718ac488 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x5575718ac420 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x5575718ac408 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x5575718ac3e8 <col:78> 'int *' lvalue Var 0x55757189db80 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x5575718ac4a0 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5575718ac438 <col:117> 'int' lvalue Var 0x55757189d560 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x5575718ac558 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5575718ac508 <col:140> 'int' lvalue Var 0x55757189d560 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x5575718ac870 <line:848:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x5575718ac5c0 <col:3> '_Bool' lvalue Var 0x55757189df80 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5575718ac858 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5575718ac840 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5575718ac820 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x5575718ac800 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x5575718ac768 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x5575718ac6d0 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x5575718ac638 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5575718ac620 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5575718ac5e0 <col:23> 'int' lvalue Var 0x55757189e080 'x' 'int'
    |         | | | `-IntegerLiteral 0x5575718ac600 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x5575718ac6b0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5575718ac698 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5575718ac658 <col:33> 'int' lvalue Var 0x55757189d440 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5575718ac678 <col:56> 'int' 0
    |         | `-BinaryOperator 0x5575718ac748 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5575718ac730 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5575718ac6f0 <col:61> 'int' lvalue Var 0x55757189d560 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5575718ac710 <col:84> 'int' 2
    |         `-BinaryOperator 0x5575718ac7e0 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x5575718ac7c8 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5575718ac788 <col:89> 'int' lvalue Var 0x55757189de70 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5575718ac7a8 <col:112> 'int' 0
    |-BinaryOperator 0x5575718ac9a0 <line:849:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5575718ac890 <col:3> 'int' lvalue Var 0x55757189e080 'x' 'int'
    | `-ConditionalOperator 0x5575718ac970 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5575718ac928 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5575718ac910 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5575718ac8b0 <col:7> '_Bool' lvalue Var 0x55757189e118 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5575718ac940 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5575718ac8d0 <col:25> 'int' lvalue Var 0x55757189e198 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5575718ac958 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5575718ac8f0 <col:37> 'int' lvalue Var 0x55757189e080 'x' 'int'
    |-BinaryOperator 0x5575718aca38 <line:850:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5575718ac9c0 <col:3> '_Bool' lvalue Var 0x55757189e118 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5575718aca10 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5575718ac9e0 <col:28> 'int' 0
    |-CallExpr 0x5575718aca90 <line:851:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5575718aca78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5575718aca58 <col:3> 'void ()' Function 0x557571844060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5575718acb08 <line:852:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5575718acaf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5575718acab0 <col:3> 'void (int)' Function 0x557571843d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5575718acb48 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5575718acb30 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5575718acad0 <col:21> '_Bool' lvalue Var 0x55757189df80 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5575718acb80 <line:853:3, col:10>
      `-IntegerLiteral 0x5575718acb60 <col:10> 'int' 0
