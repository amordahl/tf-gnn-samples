TranslationUnitDecl 0x562404b42e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562404b436d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562404b433b0 '__int128'
|-TypedefDecl 0x562404b43748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562404b433d0 'unsigned __int128'
|-TypedefDecl 0x562404b43a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562404b43820 'struct __NSConstantString_tag'
|   `-Record 0x562404b437a0 '__NSConstantString_tag'
|-TypedefDecl 0x562404b43af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562404b43ab0 'char *'
|   `-BuiltinType 0x562404b42eb0 'char'
|-TypedefDecl 0x562404b82650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562404b43d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562404b43bd0 'struct __va_list_tag'
|     `-Record 0x562404b43b50 '__va_list_tag'
|-FunctionDecl 0x562404b82790 <./test/mix018_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x562404b826c0 <col:31> col:34 'int'
|-FunctionDecl 0x562404b82958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562404b82a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562404b82bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562404b82b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562404b82df8 <col:40, col:99>
|   |-IfStmt 0x562404b82dc8 <col:42, col:88>
|   | |-UnaryOperator 0x562404b82ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562404b82c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562404b82c70 <col:47> 'int' lvalue ParmVar 0x562404b82b38 'expression' 'int'
|   | `-CompoundStmt 0x562404b82db0 <col:59, col:88>
|   |   `-LabelStmt 0x562404b82d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562404b82d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562404b82d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562404b82cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x562404b82a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562404b82de0 <col:89>
|   `-ReturnStmt 0x562404b82de8 <col:91>
|-FunctionDecl 0x562404b82e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562404b82f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562404b83280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562404b82fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562404b83038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x562404b830b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562404b83138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562404b83340 <line:10:22>
|-FunctionDecl 0x562404ba9390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562404b833b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562404b83430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x562404b834b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562404b83530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562404ba9450 <line:13:22>
|-FunctionDecl 0x562404ba9700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562404ba94c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562404ba9540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x562404ba95c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x562404ba97b8 <line:15:22>
|-TypedefDecl 0x562404ba9828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562404b42f70 'unsigned char'
|-TypedefDecl 0x562404ba9898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562404b42f90 'unsigned short'
|-TypedefDecl 0x562404ba9908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562404b42fb0 'unsigned int'
|-TypedefDecl 0x562404ba9978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404ba99e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562404b42ed0 'signed char'
|-TypedefDecl 0x562404ba9a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562404b42f70 'unsigned char'
|-TypedefDecl 0x562404ba9ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562404b42ef0 'short'
|-TypedefDecl 0x562404ba9b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562404b42f90 'unsigned short'
|-TypedefDecl 0x562404ba9ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562404b42f10 'int'
|-TypedefDecl 0x562404ba9c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562404b42fb0 'unsigned int'
|-TypedefDecl 0x562404ba9c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404ba9cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404ba9d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404ba9dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404ba9e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404ba9eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562404b42fb0 'unsigned int'
|-TypedefDecl 0x562404ba9f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562404b42fb0 'unsigned int'
|-TypedefDecl 0x562404ba9f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404baa008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404baa078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562404b42fb0 'unsigned int'
|-TypedefDecl 0x562404baa0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404baa158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404baa1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404baa238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562404b42f10 'int'
|-RecordDecl 0x562404baa290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x562404baa408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x562404baa4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562404baa460 'struct __fsid_t' sugar
|   `-RecordType 0x562404baa310 '__fsid_t'
|     `-Record 0x562404baa290 ''
|-TypedefDecl 0x562404baa548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404baa5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404baa628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404baa698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562404b42fb0 'unsigned int'
|-TypedefDecl 0x562404baa708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404baa778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562404b42fb0 'unsigned int'
|-TypedefDecl 0x562404baa7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404baa858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562404b42f10 'int'
|-TypedefDecl 0x562404baa8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562404b42f10 'int'
|-TypedefDecl 0x562404baa938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562404b42f10 'int'
|-TypedefDecl 0x562404baa9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562404b43630 'void *'
|   `-BuiltinType 0x562404b42e70 'void'
|-TypedefDecl 0x562404baaa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404baaa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404baaaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404baab68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404baabd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404baac48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404baacb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404baad28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404baad98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404baae08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404baae78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404baaf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562404baaed0 '__off64_t' sugar
|   |-Typedef 0x562404baa1c8 '__off64_t'
|   `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404bab000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562404baafc0 '__quad_t *'
|   `-TypedefType 0x562404baaf60 '__quad_t' sugar
|     |-Typedef 0x562404ba9d68 '__quad_t'
|     `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404bab070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562404b43ab0 'char *'
|   `-BuiltinType 0x562404b42eb0 'char'
|-TypedefDecl 0x562404bab0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404bab150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562404b42fb0 'unsigned int'
|-FunctionDecl 0x562404bab298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x562404bab1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x562404bac5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x562404bac5d8 <line:72:3, col:34>
|     `-CallExpr 0x562404bac598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x562404bac580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562404bac510 <col:10> '<builtin fn type>' Function 0x562404bac380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x562404bac5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562404bac530 <col:29> 'unsigned int' lvalue ParmVar 0x562404bab1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x562404bac380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x562404bac420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x562404bac490 <col:10> Implicit
| `-ConstAttr 0x562404bac4e8 <col:10> Implicit
|-FunctionDecl 0x562404bac740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x562404bac638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x562404baca58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x562404baca48 <line:77:3, col:34>
|     `-CallExpr 0x562404baca08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x562404bac9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562404bac978 <col:10> '<builtin fn type>' Function 0x562404bac7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x562404baca30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x562404bac998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x562404bac638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x562404bac7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x562404bac888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x562404bac8f8 <col:10> Implicit
| `-ConstAttr 0x562404bac950 <col:10> Implicit
|-TypedefDecl 0x562404baca88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-TypedefDecl 0x562404bacb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x562404bacae0 '__time_t' sugar
|   |-Typedef 0x562404baa708 '__time_t'
|   `-BuiltinType 0x562404b42f30 'long'
|-RecordDecl 0x562404bacb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x562404bacc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x562404baccb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x562404bacd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x562404bacd10 '__pid_t' sugar
|   |-Typedef 0x562404baa238 '__pid_t'
|   `-BuiltinType 0x562404b42f10 'int'
|-RecordDecl 0x562404bacda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x562404bace60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x562404baceb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x562404bacf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x562404bacfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-RecordDecl 0x562404bad030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x562404bad2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x562404bae3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x562404bad310 'struct cpu_set_t' sugar
|   `-RecordType 0x562404bad0b0 'cpu_set_t'
|     `-Record 0x562404bad030 ''
|-FunctionDecl 0x562404bae678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x562404bae448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562404bae550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x562404bae728 <line:107:19>
|-FunctionDecl 0x562404bae900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x562404bae790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x562404bae9a8 <col:69>
|-FunctionDecl 0x562404baeb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x562404baea10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x562404baebc8 <col:64>
|-FunctionDecl 0x562404baee88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x562404baec30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562404baed68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562404baef38 <line:113:22>
|-FunctionDecl 0x562404baf1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562404baefa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562404baf098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562404baf268 <col:88>
|-FunctionDecl 0x562404baf588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562404baf2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562404baf3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x562404baf440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562404baf640 <col:62>
|-FunctionDecl 0x562404baf7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562404baf6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x562404baf860 <col:63>
|-FunctionDecl 0x562404baf988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562404bafa28 <col:47>
|-FunctionDecl 0x562404bafb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562404bafa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562404bafbd8 <col:69>
|-FunctionDecl 0x562404bafce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562404bafc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562404bafd88 <col:69>
|-FunctionDecl 0x562404bb0048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562404bafdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562404baff28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562404bb00f8 <col:88>
|-TypedefDecl 0x562404bb0188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x562404bb0150 '__clock_t' sugar
|   |-Typedef 0x562404baa548 '__clock_t'
|   `-BuiltinType 0x562404b42f30 'long'
|-TypedefDecl 0x562404bb0218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562404bb01e0 '__clockid_t' sugar
|   |-Typedef 0x562404baa938 '__clockid_t'
|   `-BuiltinType 0x562404b42f10 'int'
|-TypedefDecl 0x562404bb02a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562404bb0270 '__timer_t' sugar
|   |-Typedef 0x562404baa9a8 '__timer_t'
|   `-PointerType 0x562404b43630 'void *'
|     `-BuiltinType 0x562404b42e70 'void'
|-RecordDecl 0x562404bb0300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x562404bb03d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x562404bb0440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562404bb04a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x562404bb0510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562404bb0578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562404bb05e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x562404bb0648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562404bb06b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x562404bb0718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562404bb0780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562404bb07e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x562404bb0838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x562404bb0908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562404bb0978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562404bb0a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562404bb0bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562404bb0c90 <col:45>
|-FunctionDecl 0x562404bb0e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562404bb0d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x562404bb0f18 <col:54>
|-FunctionDecl 0x562404bb1118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562404bb0f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562404bb0ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562404bb11c8 <line:157:22>
| `-ConstAttr 0x562404bb1220 <col:63>
|-FunctionDecl 0x562404bb2050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562404bb1318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562404bb20f8 <col:56>
|-FunctionDecl 0x562404bb24a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562404bb2168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562404bb21e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562404bb2260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562404bb2358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562404bb2560 <col:54>
|-RecordDecl 0x562404bb25b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x562404bb2668 parent 0x562404b42e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562404bb28c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562404bb2968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562404bb29d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562404bb2a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562404bb2b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562404bb2c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562404bb2bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x562404bb2b80 'struct __locale_struct' sugar
|     `-RecordType 0x562404bb2640 'struct __locale_struct'
|       `-Record 0x562404bb25b8 '__locale_struct'
|-TypedefDecl 0x562404bb2cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562404bb2cc0 '__locale_t' sugar
|   |-Typedef 0x562404bb2c48 '__locale_t'
|   `-PointerType 0x562404bb2bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x562404bb2b80 'struct __locale_struct' sugar
|       `-RecordType 0x562404bb2640 'struct __locale_struct'
|         `-Record 0x562404bb25b8 '__locale_struct'
|-FunctionDecl 0x562404bb4110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562404bb2d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562404bb2de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562404bb2e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562404bb2ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562404bb2f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562404bb41d8 <col:40>
|-FunctionDecl 0x562404bb43c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562404bb42a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562404bb4470 <col:66>
|-FunctionDecl 0x562404bb4580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562404bb44d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562404bb4628 <col:69>
|-FunctionDecl 0x562404bb4858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562404bb4690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562404bb4720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562404bb4908 <col:52>
|-FunctionDecl 0x562404bb4ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562404bb4970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562404bb4a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562404bb4b60 <col:55>
|-FunctionDecl 0x562404bb4cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562404bb4be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562404bb4da0 <col:62>
|-FunctionDecl 0x562404bb4f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562404bb4e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562404bb4fc0 <col:60>
|-FunctionDecl 0x562404bb52b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562404bb5118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562404bb5198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562404bb5368 <col:44>
|-FunctionDecl 0x562404bb5578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562404bb53d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562404bb5450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562404bb5628 <col:49>
|-VarDecl 0x562404bb5728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562404bb57a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562404bb5828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562404bb58f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562404bb5a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562404bb5ac0 <col:42>
|-VarDecl 0x562404bb5b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562404bb5bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562404bb5d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562404bb5c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562404bb5de0 <col:57>
|-FunctionDecl 0x562404bb5ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562404bb5e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562404bb5f98 <col:56>
|-FunctionDecl 0x562404bb60d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562404bb6018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562404bb6178 <col:59>
|-FunctionDecl 0x562404bb6280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x562404bb61e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562404bb6328 <col:48>
| `-ConstAttr 0x562404bb6380 <col:89>
|-FunctionDecl 0x562404bb65e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562404bb6438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562404bb64c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562404bb6848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562404bb66d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562404bb6768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562404bb68f8 <col:88>
|-FunctionDecl 0x562404bb6a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562404bb6960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562404bb69f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562404bb6b40 <col:88>
|-FunctionDecl 0x562404bb6d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562404bb6ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562404bb6c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562404bb6e08 <line:208:22>
|-FunctionDecl 0x562404bb7178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562404bb6e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562404bb6ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562404bb6f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562404bb7010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562404bb7478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562404bb7278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562404bb7350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562404bb7528 <col:85>
|-FunctionDecl 0x562404bb7918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562404bb7590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562404bb76c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x562404bb77d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562404bb79d0 <col:52>
|-FunctionDecl 0x562404bb7b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562404bb7a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562404bb7bf0 <col:61>
|-FunctionDecl 0x562404bb80f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562404bb7c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562404bb7cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562404bb7e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562404bb7ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562404bb81b0 <col:62>
|-FunctionDecl 0x562404bb83c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562404bb8218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562404bb82a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562404bb8478 <line:221:22>
|-FunctionDecl 0x562404bb8578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562404bb84e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562404bb8620 <col:65>
|-TypedefDecl 0x562404bb8690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562404b42fd0 'unsigned long'
|-RecordDecl 0x562404bb86e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x562404bb8830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562404bb8898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562404bb8948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562404bb88f0 'union pthread_attr_t' sugar
|   `-RecordType 0x562404bb8770 'union pthread_attr_t'
|     `-Record 0x562404bb86e8 'pthread_attr_t'
|-RecordDecl 0x562404bb89a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562404bb8b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562404bb8b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562404bb8c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562404bb8be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562404bb8a20 'struct __pthread_internal_list'
|     `-Record 0x562404bb89a0 '__pthread_internal_list'
|-RecordDecl 0x562404bb8cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x562404bb8d58 parent 0x562404b42e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562404bb8e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562404bb8e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562404bb8f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562404bb8f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562404bb8fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562404bb9038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x562404bbd110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x562404bbd1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x562404bbd2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x562404bbd318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562404bbd4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x562404bbd440 'union pthread_mutex_t' sugar
|   `-RecordType 0x562404bb8d30 'pthread_mutex_t'
|     `-Record 0x562404bb8cb0 ''
|-RecordDecl 0x562404bbd510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x562404bbd650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562404bbd6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562404bbd770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x562404bbd710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x562404bbd590 'pthread_mutexattr_t'
|     `-Record 0x562404bbd510 ''
|-RecordDecl 0x562404bbd7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x562404bbd888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x562404bbd950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562404bbd9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x562404bbda20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x562404bbda88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x562404bbdaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x562404bbdb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562404bbdbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562404bbdc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562404bbdce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/mix018_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/mix018_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x562404bbddd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x562404bbde38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562404bbdf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562404bbdf10 'union pthread_cond_t' sugar
|   `-RecordType 0x562404bbd860 'pthread_cond_t'
|     `-Record 0x562404bbd7e0 ''
|-RecordDecl 0x562404bbdfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x562404bbf130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562404bbf198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562404bbf250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562404bbf1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x562404bbe060 'pthread_condattr_t'
|     `-Record 0x562404bbdfe0 ''
|-TypedefDecl 0x562404bbf2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562404b42fb0 'unsigned int'
|-TypedefDecl 0x562404bbf348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562404b42f10 'int'
|-RecordDecl 0x562404bbf3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x562404bbf448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x562404bbf510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562404bbf578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562404bbf5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562404bbf648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562404bbf6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562404bbf718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562404bbf780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562404bbf7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562404bbf850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562404bbf8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562404bbf920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562404bbf9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/mix018_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix018_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x562404bbfa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562404bbfae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562404bbfc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562404bbfbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562404bbf420 'pthread_rwlock_t'
|     `-Record 0x562404bbf3a0 ''
|-RecordDecl 0x562404bbfca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x562404bbfde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562404bbfe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562404bbff00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562404bbfea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562404bbfd20 'pthread_rwlockattr_t'
|     `-Record 0x562404bbfca0 ''
|-TypedefDecl 0x562404bbff88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562404b42f14 'volatile int' volatile
|   `-BuiltinType 0x562404b42f10 'int'
|-RecordDecl 0x562404bbffe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x562404bc1140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562404bc11a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562404bc1260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562404bc1200 'union pthread_barrier_t' sugar
|   `-RecordType 0x562404bc0060 'pthread_barrier_t'
|     `-Record 0x562404bbffe0 ''
|-RecordDecl 0x562404bc12d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x562404bc13d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562404bc1438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562404bc14f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562404bc1490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562404bc1350 'pthread_barrierattr_t'
|     `-Record 0x562404bc12d0 ''
|-TypedefDecl 0x562404bc1608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562404bc15a0 'long [8]' 8 
|   `-BuiltinType 0x562404b42f30 'long'
|-EnumDecl 0x562404bc1660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x562404bc1728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562404bc1778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562404bc17c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x562404bc1898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562404bc18e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562404bc1938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562404bc1988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562404bc1a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562404bc19f8 <col:26> 'int'
| |   `-DeclRefExpr 0x562404bc19d8 <col:26> 'int' EnumConstant 0x562404bc1898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562404bc1a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562404bc1a80 <col:29> 'int'
| |   `-DeclRefExpr 0x562404bc1a60 <col:29> 'int' EnumConstant 0x562404bc18e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562404bc1b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562404bc1b08 <col:30> 'int'
| |   `-DeclRefExpr 0x562404bc1ae8 <col:30> 'int' EnumConstant 0x562404bc1938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562404bc1ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562404bc1b90 <col:27> 'int'
|     `-DeclRefExpr 0x562404bc1b70 <col:27> 'int' EnumConstant 0x562404bc1a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562404bc1bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x562404bc1cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562404bc1d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562404bc1d38 <col:30> 'int'
| |   `-DeclRefExpr 0x562404bc1d18 <col:30> 'int' EnumConstant 0x562404bc1cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562404bc1da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562404bc1e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562404bc1e10 <col:29> 'int'
|     `-DeclRefExpr 0x562404bc1df0 <col:29> 'int' EnumConstant 0x562404bc1da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562404bc1e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x562404bc1f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562404bc1f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562404bc1fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562404bc2038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x562404bc2150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562404bc21a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562404bc21f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562404bc2278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562404bc2260 <col:31> 'int'
|     `-DeclRefExpr 0x562404bc2240 <col:31> 'int' EnumConstant 0x562404bc2150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562404bc22c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x562404bc2398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562404bc23e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562404bc2438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x562404bc2508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562404bc2558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562404bc25a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x562404bc2678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562404bc26c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562404bc2718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562404bc2958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562404bc29c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562404bc2a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562404bc2b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562404bc2b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x562404bc2c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562404bc2cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562404bc2d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x562404bc2dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562404bc2e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562404bc3488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562404bc2f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562404bc3030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562404bc3270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562404bc32f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562404bc3548 <col:47>
| |-NonNullAttr 0x562404bc35a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x562404bc35d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x562404bc3700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562404bc3630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562404bc3958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562404bc37b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562404bc3838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562404bc3b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562404bc3a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562404bc3bd0 <col:60>
|-FunctionDecl 0x562404bc3d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562404bc3dc0 <col:54>
| `-ConstAttr 0x562404bc3e18 <col:95>
|-FunctionDecl 0x562404bc3fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562404bc3e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562404bc3ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562404bc4098 <line:394:19>
| `-ConstAttr 0x562404bc40f0 <col:60>
|-FunctionDecl 0x562404bc5b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562404bc59d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562404bc5bb0 <col:71>
| `-NonNullAttr 0x562404bc5c08 <col:112, col:126> 1
|-FunctionDecl 0x562404bc5d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562404bc5c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562404bc5db8 <line:397:22>
| `-NonNullAttr 0x562404bc5e10 <col:63, col:77> 1
|-FunctionDecl 0x562404bc6038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562404bc5e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562404bc5ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562404bc60e8 <line:400:22>
| `-NonNullAttr 0x562404bc6140 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bc6348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562404bc6188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562404bc6208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562404bc63f8 <line:403:22>
| `-NonNullAttr 0x562404bc6450 <col:63, col:77> 1
|-FunctionDecl 0x562404bc66a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562404bc6498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562404bc6540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562404bc6758 <line:406:22>
| `-NonNullAttr 0x562404bc67b0 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bc79e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562404bc67f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562404bc6870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562404bc7a98 <line:409:22>
| `-NonNullAttr 0x562404bc7af0 <col:63, col:77> 1
|-FunctionDecl 0x562404bc7d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562404bc7b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562404bc7bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562404bc7dd8 <line:412:22>
| `-NonNullAttr 0x562404bc7e30 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bc8068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562404bc7e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562404bc7f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562404bc8118 <col:37>
| `-NonNullAttr 0x562404bc8170 <col:78, col:95> 1 2
|-FunctionDecl 0x562404bc8358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bc81b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562404bc8238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562404bc8408 <line:418:22>
| `-NonNullAttr 0x562404bc8460 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bc85e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562404bc84a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562404bc8528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562404bc8698 <line:420:22>
| `-NonNullAttr 0x562404bc86f0 <col:63, col:77> 1
|-FunctionDecl 0x562404bc8898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bc8738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562404bc87b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562404bc8948 <line:423:22>
| `-NonNullAttr 0x562404bc89c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bc8b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562404bc8a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562404bc8a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562404bc8bf8 <line:426:22>
| `-NonNullAttr 0x562404bc8c50 <col:63, col:77> 1
|-FunctionDecl 0x562404bc8df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bc8c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562404bc8d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562404bc8ea8 <line:429:22>
| `-NonNullAttr 0x562404bc8f00 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bc9088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562404bc8f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562404bc8fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562404bc9138 <line:431:22>
| `-NonNullAttr 0x562404bc9190 <col:63, col:77> 1
|-FunctionDecl 0x562404bc93b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x562404bc91d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562404bc9258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562404bc9468 <line:434:22>
| |-NonNullAttr 0x562404bc94c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x562404bc94f8 <col:100> "" ""
|-FunctionDecl 0x562404bc9708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562404bc9548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562404bc95c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x562404bc97b8 <line:437:22>
| |-NonNullAttr 0x562404bc9810 <col:63, col:77> 1
| `-DeprecatedAttr 0x562404bc9848 <col:97> "" ""
|-FunctionDecl 0x562404bc9a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562404bc9898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562404bc9910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562404bc9af8 <line:440:22>
| `-NonNullAttr 0x562404bc9b50 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bc9cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562404bc9b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562404bc9c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562404bc9d80 <line:443:22>
| `-NonNullAttr 0x562404bc9dd8 <col:63, col:77> 1
|-FunctionDecl 0x562404bca0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562404bc9e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562404bc9ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562404bc9f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562404bca180 <line:447:22>
| `-NonNullAttr 0x562404bca1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562404bca488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562404bca230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562404bca2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562404bca328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562404bca540 <col:43>
| `-NonNullAttr 0x562404bca598 <col:84, col:98> 1
|-FunctionDecl 0x562404bca858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562404bca5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562404bca668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x562404bca6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562404bca910 <line:452:22>
| `-NonNullAttr 0x562404bca968 <col:63, col:77> 3
|-FunctionDecl 0x562404bcac78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562404bca9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562404bcaa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562404bcaaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562404bcad30 <line:456:22>
| `-NonNullAttr 0x562404bcad88 <col:63, col:80> 2 3
|-FunctionDecl 0x562404bcaf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562404bcadd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562404bcae58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x562404bcb028 <line:458:22>
|-FunctionDecl 0x562404bcb3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x562404bcb0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x562404bcb290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x562404bcb4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x562404bcb650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x562404bcb530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x562404bcb5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x562404bcb838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x562404bcb718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x562404bcb798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x562404bcb9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x562404bcb8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x562404bcbb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x562404bcbbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x562404bcbc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x562404bcbd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x562404bcbdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x562404bcbfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix018_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x562404bcc098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x562404bcc150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x562404bcc0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x562404bcbc50 '__pthread_unwind_buf_t'
| |   `-Record 0x562404bcbbd0 ''
| `-AlignedAttr 0x562404bcc1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x562404bcc220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x562404bcc380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x562404bcc3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x562404bcc450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x562404bcc4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x562404bcc6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562404bcc5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562404bcc808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562404bcc778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562404bcca00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562404bcc8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x562404bccaa8 <line:487:22>
|-RecordDecl 0x562404bccb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x562404bcce18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x562404bccc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x562404bcccf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x562404bccec8 <col:86>
| `-ReturnsTwiceAttr 0x562404bccf20 <col:12> Implicit
|-FunctionDecl 0x562404bcd248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562404bccff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x562404bcd100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x562404bcd2f8 <line:493:22>
| `-NonNullAttr 0x562404bcd350 <col:63, col:77> 1
|-FunctionDecl 0x562404bcd4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562404bcd398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562404bcd570 <line:495:22>
| `-NonNullAttr 0x562404bcd5c8 <col:63, col:77> 1
|-FunctionDecl 0x562404bcd6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562404bcd618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562404bcd778 <line:497:22>
| `-NonNullAttr 0x562404bcd7d0 <col:52, col:66> 1
|-FunctionDecl 0x562404bcd8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562404bcd818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562404bcd978 <line:499:22>
| `-NonNullAttr 0x562404bcd9d0 <col:52, col:66> 1
|-FunctionDecl 0x562404bcec28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562404bcea38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562404bceac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562404bcecd8 <col:36>
| `-NonNullAttr 0x562404bced30 <col:66, col:83> 1 2
|-FunctionDecl 0x562404bcee30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562404bced78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562404bceed8 <line:504:22>
| `-NonNullAttr 0x562404bcef30 <col:52, col:66> 1
|-FunctionDecl 0x562404bcf1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bcefe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562404bcf060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562404bcf278 <line:508:22>
| `-NonNullAttr 0x562404bcf2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bcf598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562404bcf318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562404bcf398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562404bcf418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562404bcf650 <line:512:22>
| `-NonNullAttr 0x562404bcf6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x562404bcf7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562404bcf6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562404bcf858 <line:514:22>
| `-NonNullAttr 0x562404bcf8b0 <col:63, col:77> 1
|-FunctionDecl 0x562404bcfad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562404bcf960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562404bcfb80 <line:516:22>
| `-NonNullAttr 0x562404bcfbd8 <col:63, col:77> 1
|-FunctionDecl 0x562404bcfce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562404bcfc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562404bcfd88 <line:518:22>
| `-NonNullAttr 0x562404bcfde0 <col:63, col:77> 1
|-FunctionDecl 0x562404bd0008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bcfe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562404bcfea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562404bd00b8 <line:522:22>
| `-NonNullAttr 0x562404bd0110 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bd0318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562404bd0158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562404bd01d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562404bd03c8 <line:525:22>
| `-NonNullAttr 0x562404bd0420 <col:63, col:77> 1
|-FunctionDecl 0x562404bd05c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bd0468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562404bd04e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562404bd0678 <line:528:22>
| `-NonNullAttr 0x562404bd06d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bd0858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562404bd0718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562404bd0798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562404bd0908 <line:530:22>
| `-NonNullAttr 0x562404bd0960 <col:63, col:77> 1
|-FunctionDecl 0x562404bd0b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bd09a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562404bd0a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562404bd0bd0 <line:534:22>
| `-NonNullAttr 0x562404bd0c28 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bd0db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562404bd0c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562404bd0cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x562404bd0e68 <line:537:22>
| `-NonNullAttr 0x562404bd0ec0 <col:63, col:77> 1
|-FunctionDecl 0x562404bd1068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bd0f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562404bd0f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562404bd1118 <line:541:22>
| `-NonNullAttr 0x562404bd1170 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bd12f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562404bd11b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562404bd1238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562404bd13a8 <line:544:22>
| `-NonNullAttr 0x562404bd1400 <col:63, col:77> 1
|-FunctionDecl 0x562404bd15e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562404bd1448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562404bd14c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562404bd1698 <line:547:22>
| `-NonNullAttr 0x562404bd16f0 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bd1878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562404bd1738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562404bd17b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562404bd1928 <line:550:22>
| `-NonNullAttr 0x562404bd1980 <col:63, col:77> 1
|-FunctionDecl 0x562404bd2cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562404bd2aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562404bd2bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562404bd2da8 <col:29>
| `-NonNullAttr 0x562404bd2e00 <col:70, col:84> 1
|-FunctionDecl 0x562404bd2f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562404bd2e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562404bd3020 <line:555:22>
| `-NonNullAttr 0x562404bd3078 <col:63, col:77> 1
|-FunctionDecl 0x562404bd3180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562404bd30c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562404bd3228 <line:557:22>
| `-NonNullAttr 0x562404bd3280 <col:52, col:66> 1
|-FunctionDecl 0x562404bd3380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562404bd32c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562404bd3428 <line:559:19>
| `-NonNullAttr 0x562404bd3480 <col:49, col:63> 1
|-FunctionDecl 0x562404bd36b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562404bd34c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562404bd3558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562404bd3768 <col:39>
| `-NonNullAttr 0x562404bd37c0 <col:69, col:86> 1 2
|-FunctionDecl 0x562404bd38c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562404bd3808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562404bd3968 <line:564:22>
| `-NonNullAttr 0x562404bd39c0 <col:52, col:66> 1
|-FunctionDecl 0x562404bd3b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562404bd3a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562404bd3bd0 <line:566:22>
| `-NonNullAttr 0x562404bd3c28 <col:52, col:66> 1
|-FunctionDecl 0x562404bd3de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562404bd3c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562404bd3d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562404bd3e98 <col:39>
| `-NonNullAttr 0x562404bd3ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x562404bd3ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562404bd3f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562404bd4098 <line:571:22>
| `-NonNullAttr 0x562404bd40f0 <col:52, col:66> 1
|-FunctionDecl 0x562404bd42d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562404bd41a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562404bd4380 <line:573:22>
| `-NonNullAttr 0x562404bd43d8 <col:63, col:77> 1
|-FunctionDecl 0x562404bd44e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562404bd4428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562404bd4588 <line:575:22>
| `-NonNullAttr 0x562404bd45e0 <col:63, col:77> 1
|-FunctionDecl 0x562404bd4808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bd4628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562404bd46a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562404bd48b8 <line:579:22>
| `-NonNullAttr 0x562404bd4910 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bd4b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562404bd4958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562404bd49d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562404bd4be8 <line:582:22>
| `-NonNullAttr 0x562404bd4c40 <col:63, col:77> 1
|-FunctionDecl 0x562404bd4de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bd4c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562404bd4d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562404bd4e98 <line:586:22>
| `-NonNullAttr 0x562404bd4ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bd5078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562404bd4f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562404bd4fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562404bd5128 <col:36>
| `-NonNullAttr 0x562404bd5180 <col:77, col:91> 1
|-FunctionDecl 0x562404bd54b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562404bd5260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562404bd5370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562404bd5568 <line:591:22>
| `-NonNullAttr 0x562404bd55c0 <col:63, col:77> 1
|-FunctionDecl 0x562404bd5738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562404bd5608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562404bd57e0 <line:593:22>
| `-NonNullAttr 0x562404bd5838 <col:63, col:77> 1
|-FunctionDecl 0x562404bd5940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562404bd5888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562404bd59e8 <line:595:22>
| `-NonNullAttr 0x562404bd5a40 <col:52, col:66> 1
|-FunctionDecl 0x562404bd5b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562404bd5aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562404bd5c00 <line:597:22>
| `-NonNullAttr 0x562404bd5c58 <col:52, col:66> 1
|-FunctionDecl 0x562404bd5e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562404bd5ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562404bd5d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562404bd5f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x562404bd6268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562404bd5fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562404bd6030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562404bd60c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562404bd6320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x562404bd6538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562404bd6400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562404bd65e0 <line:606:22>
| `-NonNullAttr 0x562404bd6638 <col:63, col:77> 1
|-FunctionDecl 0x562404bd6740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562404bd6688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562404bd67e8 <line:608:22>
| `-NonNullAttr 0x562404bd6840 <col:63, col:77> 1
|-FunctionDecl 0x562404bd6aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bd6888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562404bd6908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562404bd6b50 <line:612:22>
| `-NonNullAttr 0x562404bd6ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bd6db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562404bd6bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562404bd6c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562404bd6e68 <col:37>
| `-NonNullAttr 0x562404bd6ec0 <col:78, col:92> 1
|-FunctionDecl 0x562404bd70d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562404bd6f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562404bd6fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562404bd7188 <line:618:22>
| `-NonNullAttr 0x562404bd71e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bd73a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562404bd7228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562404bd72a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562404bd7458 <line:621:22>
| `-NonNullAttr 0x562404bd74b0 <col:63, col:77> 1
|-FunctionDecl 0x562404bd7758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562404bd7590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562404bd7610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562404bd7808 <line:623:22>
| `-NonNullAttr 0x562404bd7860 <col:63, col:77> 1
|-FunctionDecl 0x562404bd79d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562404bd78a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562404bd7ab0 <line:625:22>
| `-NonNullAttr 0x562404bd7b08 <col:63, col:77> 1
|-FunctionDecl 0x562404bd7c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562404bd7b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562404bd7cb8 <line:627:22>
| `-NonNullAttr 0x562404bd7d10 <col:52, col:66> 1
|-FunctionDecl 0x562404bd7e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562404bd7d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562404bd7eb8 <line:629:22>
| `-NonNullAttr 0x562404bd7f10 <col:52, col:66> 1
|-FunctionDecl 0x562404bd8010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562404bd7f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562404bd80b8 <line:631:22>
| `-NonNullAttr 0x562404bd8110 <col:52, col:66> 1
|-FunctionDecl 0x562404bd84e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562404bd81f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562404bd8300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562404bd8380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x562404bd85a0 <line:635:22>
| `-NonNullAttr 0x562404bd85f8 <col:63, col:77> 1
|-FunctionDecl 0x562404bd8778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562404bd8648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562404bd8820 <line:637:22>
| `-NonNullAttr 0x562404bd8878 <col:63, col:77> 1
|-FunctionDecl 0x562404bd8980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562404bd88c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562404bd8a28 <line:639:22>
| `-NonNullAttr 0x562404bd8a80 <col:52, col:66> 1
|-FunctionDecl 0x562404bd9c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562404bd9b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562404bd9d30 <line:641:22>
| `-NonNullAttr 0x562404bd9d88 <col:63, col:77> 1
|-FunctionDecl 0x562404bd9e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562404bd9dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562404bd9f38 <line:643:22>
| `-NonNullAttr 0x562404bd9f90 <col:63, col:77> 1
|-FunctionDecl 0x562404bda1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562404bd9fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562404bda058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562404bda268 <line:647:22>
| `-NonNullAttr 0x562404bda2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562404bda4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562404bda308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562404bda388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562404bda578 <line:650:22>
| `-NonNullAttr 0x562404bda5d0 <col:63, col:77> 1
|-FunctionDecl 0x562404bda918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x562404bda6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x562404bda7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x562404bda9c8 <line:653:22>
| `-NonNullAttr 0x562404bdaa20 <col:63, col:77> 1
|-FunctionDecl 0x562404bdab88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562404bdaa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562404bdac30 <col:69>
|-FunctionDecl 0x562404bdada8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562404bdac98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562404bdae50 <col:72>
|-FunctionDecl 0x562404bdb088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562404bdaeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562404bdaf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562404bdb138 <col:44>
|-FunctionDecl 0x562404bdb358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x562404bdb1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562404bdb218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562404bdb408 <line:660:22>
| `-NonNullAttr 0x562404bdb460 <col:63, col:77> 2
|-FunctionDecl 0x562404bdb8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562404bdb540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562404bdb650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562404bdb760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562404bdb960 <col:47>
|-FunctionDecl 0x562404bdbaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x562404bdb9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562404bdbc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562404bdbbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562404bdbda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x562404bdbd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562404bdbef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x562404bdbe60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562404bdbfc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562404bdc080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562404bdc140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x562404bdc1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562404bdc278 prev 0x562404bdc1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x562404bdc2e0 <col:24> 'int' 0
|-VarDecl 0x562404bdc318 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x562404bdc398 prev 0x562404bdc318 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x562404bdc400 <col:27> 'int' 0
|-VarDecl 0x562404bdc438 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x562404bdc4b8 prev 0x562404bdc438 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x562404bdc520 <col:27> 'int' 0
|-VarDecl 0x562404bdc558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x562404bdc5d8 prev 0x562404bdc558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x562404bdc640 <col:27> 'int' 0
|-VarDecl 0x562404bdc678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x562404bdc6f8 prev 0x562404bdc678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x562404bdc760 <col:27> 'int' 0
|-VarDecl 0x562404bdc798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x562404bdc818 prev 0x562404bdc798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x562404bdc880 <col:9> 'int' 0
|-VarDecl 0x562404bdc8b0 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x562404bdc930 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x562404bdc9a8 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x562404bdca20 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x562404bdcb00 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x562404bdcb78 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x562404bdcbf0 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x562404bdcc68 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x562404bdcce0 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x562404bdcd58 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x562404bdcdd0 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x562404bdce48 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x562404bdcec0 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x562404bdcf40 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x562404bdcfc0 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x562404bdd038 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x562404bdd0b8 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x562404bdd130 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x562404bdd1a8 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562404bdd220 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562404bdd2a0 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x562404bdd320 prev 0x562404bdd2a0 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562404bdd388 <col:9> 'int' 0
|-VarDecl 0x562404bdd3c0 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x562404bdd440 prev 0x562404bdd3c0 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562404bdd4a8 <col:9> 'int' 0
|-VarDecl 0x562404bdd4e0 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x562404bdd560 prev 0x562404bdd4e0 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x562404bdd5c8 <col:9> 'int' 0
|-VarDecl 0x562404bdd5f8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562404bdd670 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562404bdd788 prev 0x562404bdbaf0 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x562404bdd6f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562404bdf028 <line:713:1, line:741:1>
|   |-CallExpr 0x562404bdd898 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404bdd880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bdd830 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404bdd910 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562404bdd8b8 <col:3> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562404bdd8f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404bdd8d8 <col:15> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x562404bdd970 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562404bdd930 <col:3> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x562404bdd950 <col:15> 'int' 1
|   |-BinaryOperator 0x562404bdd9e8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562404bdd990 <col:3> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562404bdd9d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404bdd9b0 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562404bdda80 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562404bdda08 <col:3> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562404bdda58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562404bdda28 <col:27> 'int' 1
|   |-CallExpr 0x562404bddc18 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562404bddc00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562404bddaa0 <col:3> 'void (int)' Function 0x562404b82bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562404bddbb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562404bddb90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562404bddb70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562404bddb28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562404bddb10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562404bddac0 <col:23> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562404bddb58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562404bddb40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562404bddae0 <col:41> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562404bddc98 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562404bddc40 <col:3> '_Bool' lvalue Var 0x562404bdcc68 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562404bddc80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404bddc60 <col:20> '_Bool' lvalue Var 0x562404bdc9a8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562404bddd10 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562404bddcb8 <col:3> '_Bool' lvalue Var 0x562404bdcce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562404bddcf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404bddcd8 <col:20> '_Bool' lvalue Var 0x562404bdca20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562404bddd88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562404bddd30 <col:3> '_Bool' lvalue Var 0x562404bdcd58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562404bddd70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404bddd50 <col:20> '_Bool' lvalue Var 0x562404bdcb00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562404bdde00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562404bddda8 <col:3> '_Bool' lvalue Var 0x562404bdcdd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562404bddde8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404bdddc8 <col:20> '_Bool' lvalue Var 0x562404bdcb78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562404bdde78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562404bdde20 <col:3> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562404bdde60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404bdde40 <col:20> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562404bddf10 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562404bdde98 <col:3> '_Bool' lvalue Var 0x562404bdca20 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x562404bddee8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562404bddeb8 <col:27> 'int' 1
|   |-CallExpr 0x562404bddf68 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404bddf50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bddf30 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404bddfc0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404bddfa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bddf88 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404bde020 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562404bddfe0 <col:3> 'int' lvalue Var 0x562404bdd320 'x' 'int'
|   | `-IntegerLiteral 0x562404bde000 <col:7> 'int' 1
|   |-CallExpr 0x562404bde078 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404bde060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bde040 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404bde0d0 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404bde0b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bde098 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404bde3b8 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562404bde0f0 <col:3> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   | `-ConditionalOperator 0x562404bde388 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562404bde1b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562404bde168 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562404bde150 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562404bde110 <col:7> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562404bde198 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562404bde180 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562404bde130 <col:25> '_Bool' lvalue Var 0x562404bdca20 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x562404bde370 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404bde1d0 <col:42> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562404bde350 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562404bde320 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562404bde290 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562404bde248 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562404bde230 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562404bde1f0 <col:55> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562404bde278 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562404bde260 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562404bde210 <col:73> '_Bool' lvalue Var 0x562404bdcce0 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562404bde2f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562404bde2b0 <col:90> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562404bde308 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404bde2d0 <col:102> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   |-BinaryOperator 0x562404bde5c0 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562404bde3d8 <col:3> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562404bde5a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404bde578 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562404bde498 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562404bde450 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562404bde438 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562404bde3f8 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562404bde480 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562404bde468 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562404bde418 <col:38> '_Bool' lvalue Var 0x562404bdca20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562404bde530 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404bde4e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404bde4b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562404bde560 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404bde548 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404bde510 <col:66> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562404bde8a8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562404bde5e0 <col:3> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562404bde890 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404bde860 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562404bde780 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562404bde6a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562404bde658 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562404bde640 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562404bde600 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562404bde688 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562404bde670 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562404bde620 <col:38> '_Bool' lvalue Var 0x562404bdca20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562404bde760 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562404bde718 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562404bde700 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562404bde6c0 <col:56> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562404bde748 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562404bde730 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562404bde6e0 <col:74> '_Bool' lvalue Var 0x562404bdcce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562404bde818 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404bde7d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404bde7a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562404bde848 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404bde830 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404bde7f8 <col:102> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562404bdeab0 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562404bde8c8 <col:3> '_Bool' lvalue Var 0x562404bdca20 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562404bdea98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404bdea68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562404bde988 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562404bde940 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562404bde928 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562404bde8e8 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562404bde970 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562404bde958 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562404bde908 <col:38> '_Bool' lvalue Var 0x562404bdca20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562404bdea20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404bde9d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404bde9a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562404bdea50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404bdea38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404bdea00 <col:66> '_Bool' lvalue Var 0x562404bdca20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562404bdeda8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562404bdead0 <col:3> '_Bool' lvalue Var 0x562404bdcce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562404bded90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404bded60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562404bdec80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562404bdeba0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562404bdeb58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562404bdeb40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562404bdeaf0 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562404bdeb88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562404bdeb70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562404bdeb20 <col:38> '_Bool' lvalue Var 0x562404bdca20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562404bdec60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562404bdec18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562404bdec00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562404bdebc0 <col:56> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562404bdec48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562404bdec30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562404bdebe0 <col:74> '_Bool' lvalue Var 0x562404bdcce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562404bded18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404bdecd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404bdeca0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562404bded48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404bded30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404bdecf8 <col:102> '_Bool' lvalue Var 0x562404bdcce0 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x562404bdee00 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404bdede8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bdedc8 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404bdee58 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404bdee40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bdee20 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404bdef10 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562404bdee78 <col:3> 'int' lvalue Var 0x562404bdc278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562404bdeef0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562404bdeed8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404bdee98 <col:22> 'int' lvalue Var 0x562404bdc278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562404bdeeb8 <col:41> 'int' 1
|   |-CallExpr 0x562404bdef68 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404bdef50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bdef30 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562404bdf018 <line:740:3, col:36>
|     `-CallExpr 0x562404bdeff8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562404bdefe0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562404bdef88 <col:10> 'void *(void)' Function 0x562404b82958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562404bdf1c0 prev 0x562404bdbc48 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562404bdf128 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562404be03f8 <line:743:1, line:761:1>
|   |-CallExpr 0x562404bdf2a0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404bdf288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bdf268 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404bdf300 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562404bdf2c0 <col:3> 'int' lvalue Var 0x562404bdd320 'x' 'int'
|   | `-IntegerLiteral 0x562404bdf2e0 <col:7> 'int' 2
|   |-CallExpr 0x562404bdf358 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404bdf340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bdf320 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404bdf3b0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404bdf398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bdf378 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404bdf428 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562404bdf3d0 <col:3> 'int' lvalue Var 0x562404bdc398 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562404bdf410 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404bdf3f0 <col:25> 'int' lvalue Var 0x562404bdd440 'y' 'int'
|   |-CallExpr 0x562404bdf480 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404bdf468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bdf448 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404bdf4d8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404bdf4c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404bdf4a0 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404bdf7c0 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562404bdf4f8 <col:3> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   | `-ConditionalOperator 0x562404bdf790 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562404bdf5b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562404bdf570 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562404bdf558 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562404bdf518 <col:7> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562404bdf5a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562404bdf588 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562404bdf538 <col:25> '_Bool' lvalue Var 0x562404bdcb00 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562404bdf778 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404bdf5d8 <col:42> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562404bdf758 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562404bdf728 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562404bdf698 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562404bdf650 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562404bdf638 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562404bdf5f8 <col:55> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562404bdf680 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562404bdf668 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562404bdf618 <col:73> '_Bool' lvalue Var 0x562404bdcd58 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562404bdf6f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562404bdf6b8 <col:90> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562404bdf710 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404bdf6d8 <col:102> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   |-BinaryOperator 0x562404bdf9c8 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562404bdf7e0 <col:3> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562404bdf9b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404bdf980 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562404bdf8a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562404bdf858 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562404bdf840 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562404bdf800 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562404bdf888 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562404bdf870 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562404bdf820 <col:38> '_Bool' lvalue Var 0x562404bdcb00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562404bdf938 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404bdf8f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404bdf8c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562404bdf968 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404bdf950 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404bdf918 <col:66> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562404bdfcc0 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562404bdf9e8 <col:3> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562404bdfca8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404bdfc78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562404bdfb98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562404bdfaa8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562404bdfa60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562404bdfa48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562404bdfa08 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562404bdfa90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562404bdfa78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562404bdfa28 <col:38> '_Bool' lvalue Var 0x562404bdcb00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562404bdfb78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562404bdfb30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562404bdfb08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562404bdfac8 <col:56> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562404bdfb60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562404bdfb48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562404bdfae8 <col:74> '_Bool' lvalue Var 0x562404bdcd58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562404bdfc30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404bdfbe8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404bdfbb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562404bdfc60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404bdfc48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404bdfc10 <col:102> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562404bdfec8 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562404bdfce0 <col:3> '_Bool' lvalue Var 0x562404bdcb00 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562404bdfeb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404bdfe80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562404bdfda0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562404bdfd58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562404bdfd40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562404bdfd00 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562404bdfd88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562404bdfd70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562404bdfd20 <col:38> '_Bool' lvalue Var 0x562404bdcb00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562404bdfe38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404bdfdf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404bdfdc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562404bdfe68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404bdfe50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404bdfe18 <col:66> '_Bool' lvalue Var 0x562404bdcb00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562404be01b0 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562404bdfee8 <col:3> '_Bool' lvalue Var 0x562404bdcd58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562404be0198 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be0168 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562404be0088 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562404bdffa8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562404bdff60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562404bdff48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562404bdff08 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562404bdff90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562404bdff78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562404bdff28 <col:38> '_Bool' lvalue Var 0x562404bdcb00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562404be0068 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562404be0020 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562404be0008 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562404bdffc8 <col:56> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562404be0050 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562404be0038 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562404bdffe8 <col:74> '_Bool' lvalue Var 0x562404bdcd58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be0120 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404be00d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404be00a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562404be0150 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404be0138 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be0100 <col:102> '_Bool' lvalue Var 0x562404bdcd58 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x562404be0208 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404be01f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be01d0 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404be0260 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404be0248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be0228 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404be0318 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562404be0280 <col:3> 'int' lvalue Var 0x562404bdc278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562404be02f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562404be02e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404be02a0 <col:22> 'int' lvalue Var 0x562404bdc278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562404be02c0 <col:41> 'int' 1
|   |-CallExpr 0x562404be0370 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404be0358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be0338 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562404be03e8 <line:760:3, col:36>
|     `-CallExpr 0x562404be03c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562404be03b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562404be0390 <col:10> 'void *(void)' Function 0x562404b82958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562404be0540 prev 0x562404bdbda0 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x562404be04a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562404be1798 <line:763:1, line:781:1>
|   |-CallExpr 0x562404be0620 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404be0608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be05e8 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404be0680 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562404be0640 <col:3> 'int' lvalue Var 0x562404bdd440 'y' 'int'
|   | `-IntegerLiteral 0x562404be0660 <col:7> 'int' 1
|   |-CallExpr 0x562404be06d8 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404be06c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be06a0 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404be0730 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404be0718 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be06f8 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404be07a8 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562404be0750 <col:3> 'int' lvalue Var 0x562404bdc4b8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x562404be0790 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404be0770 <col:25> 'int' lvalue Var 0x562404bdd560 'z' 'int'
|   |-CallExpr 0x562404be0800 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404be07e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be07c8 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404be0858 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404be0840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be0820 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404be0b70 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562404be0878 <col:3> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   | `-ConditionalOperator 0x562404be0b40 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562404be0938 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562404be08f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562404be08d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562404be0898 <col:7> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562404be0920 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562404be0908 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562404be08b8 <col:25> '_Bool' lvalue Var 0x562404bdcb78 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562404be0af8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404be0958 <col:42> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562404be0ad8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562404be0aa8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562404be0a18 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562404be09d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562404be09b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562404be0978 <col:55> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562404be0a00 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562404be09e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562404be0998 <col:73> '_Bool' lvalue Var 0x562404bdcdd0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562404be0a78 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562404be0a38 <col:90> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562404be0a90 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be0a58 <col:102> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   |-BinaryOperator 0x562404be0d78 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562404be0b90 <col:3> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562404be0d60 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be0d30 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562404be0c50 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562404be0c08 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562404be0bf0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562404be0bb0 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562404be0c38 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562404be0c20 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562404be0bd0 <col:38> '_Bool' lvalue Var 0x562404bdcb78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be0ce8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404be0ca0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404be0c70 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562404be0d18 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404be0d00 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be0cc8 <col:66> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562404be1060 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562404be0d98 <col:3> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562404be1048 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be1018 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562404be0f38 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562404be0e58 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562404be0e10 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562404be0df8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562404be0db8 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562404be0e40 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562404be0e28 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562404be0dd8 <col:38> '_Bool' lvalue Var 0x562404bdcb78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562404be0f18 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562404be0ed0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562404be0eb8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562404be0e78 <col:56> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562404be0f00 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562404be0ee8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562404be0e98 <col:74> '_Bool' lvalue Var 0x562404bdcdd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be0fd0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404be0f88 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404be0f58 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562404be1000 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404be0fe8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be0fb0 <col:102> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562404be1268 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562404be1080 <col:3> '_Bool' lvalue Var 0x562404bdcb78 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562404be1250 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be1220 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562404be1140 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562404be10f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562404be10e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562404be10a0 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562404be1128 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562404be1110 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562404be10c0 <col:38> '_Bool' lvalue Var 0x562404bdcb78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be11d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404be1190 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404be1160 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562404be1208 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404be11f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be11b8 <col:66> '_Bool' lvalue Var 0x562404bdcb78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562404be1550 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562404be1288 <col:3> '_Bool' lvalue Var 0x562404bdcdd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562404be1538 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be1508 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562404be1428 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562404be1348 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562404be1300 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562404be12e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562404be12a8 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562404be1330 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562404be1318 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562404be12c8 <col:38> '_Bool' lvalue Var 0x562404bdcb78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562404be1408 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562404be13c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562404be13a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562404be1368 <col:56> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562404be13f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562404be13d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562404be1388 <col:74> '_Bool' lvalue Var 0x562404bdcdd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be14c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404be1478 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404be1448 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562404be14f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404be14d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be14a0 <col:102> '_Bool' lvalue Var 0x562404bdcdd0 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x562404be15a8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404be1590 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be1570 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404be1600 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404be15e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be15c8 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404be16b8 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562404be1620 <col:3> 'int' lvalue Var 0x562404bdc278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562404be1698 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562404be1680 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404be1640 <col:22> 'int' lvalue Var 0x562404bdc278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562404be1660 <col:41> 'int' 1
|   |-CallExpr 0x562404be1710 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404be16f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be16d8 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562404be1788 <line:780:3, col:36>
|     `-CallExpr 0x562404be1768 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562404be1750 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562404be1730 <col:10> 'void *(void)' Function 0x562404b82958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562404be18e0 prev 0x562404bdbef8 <line:782:1, line:817:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x562404be1848 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562404be55e8 <line:783:1, line:817:1>
|   |-CallExpr 0x562404be19c0 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404be19a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be1988 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404be1a20 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562404be19e0 <col:3> 'int' lvalue Var 0x562404bdd560 'z' 'int'
|   | `-IntegerLiteral 0x562404be1a00 <col:7> 'int' 1
|   |-CallExpr 0x562404be1a78 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404be1a60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be1a40 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404be1ad0 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404be1ab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be1a98 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404be1b68 <line:788:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562404be1af0 <col:3> 'int' lvalue Var 0x562404bdc5d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x562404be1b50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404be1b10 <col:25> 'int' lvalue Var 0x562404bdd560 'z' 'int'
|   |-CallExpr 0x562404be1bc0 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404be1ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be1b88 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404be1c18 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404be1c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be1be0 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404be1cc8 <line:791:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562404be1c38 <col:3> '_Bool' lvalue Var 0x562404bdd5f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x562404be1cb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562404be1c90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562404be1c78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562404be1c58 <col:19> 'void *(void)' Function 0x562404b82958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562404be1d78 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562404be1ce8 <col:3> '_Bool' lvalue Var 0x562404bdd670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x562404be1d60 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562404be1d40 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562404be1d28 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562404be1d08 <col:19> 'void *(void)' Function 0x562404b82958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562404be1df0 <line:793:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562404be1d98 <col:3> '_Bool' lvalue Var 0x562404bdc8b0 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562404be1dd8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404be1db8 <col:21> '_Bool' lvalue Var 0x562404bdd670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562404be1e68 <line:794:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562404be1e10 <col:3> 'int' lvalue Var 0x562404bdc930 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562404be1e50 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404be1e30 <col:15> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   |-BinaryOperator 0x562404be22a0 <line:795:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562404be1e88 <col:3> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   | `-ConditionalOperator 0x562404be2270 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562404be2098 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562404be1fb8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562404be1ee0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562404be1ec8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562404be1ea8 <col:8> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562404be1f98 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562404be1f30 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562404be1f18 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562404be1ef8 <col:27> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x562404be1f80 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562404be1f68 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562404be1f48 <col:46> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562404be2078 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562404be2010 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562404be1ff8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562404be1fd8 <col:65> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x562404be2060 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562404be2048 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562404be2028 <col:84> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x562404be2258 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404be20b8 <col:101> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   |   `-ParenExpr 0x562404be2238 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562404be2208 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562404be2178 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562404be2130 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562404be2118 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562404be20d8 <col:106> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562404be2160 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562404be2148 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562404be20f8 <col:124> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562404be21d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562404be2198 <col:141> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562404be21f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be21b8 <col:153> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x562404be27b0 <line:796:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562404be22c0 <col:3> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x562404be2780 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562404be2750 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562404be2738 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562404be22e0 <col:15> '_Bool' lvalue Var 0x562404bdd670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562404be2768 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404be2300 <col:31> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562404be2718 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562404be26e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562404be2510 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562404be2430 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562404be2358 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562404be2340 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562404be2320 <col:45> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562404be2410 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562404be23a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562404be2390 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562404be2370 <col:64> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x562404be23f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562404be23e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562404be23c0 <col:83> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562404be24f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562404be2488 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562404be2470 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562404be2450 <col:102> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x562404be24d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562404be24c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562404be24a0 <col:121> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562404be26d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562404be2530 <col:138> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x562404be26b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562404be2680 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562404be25f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562404be25a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562404be2590 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562404be2550 <col:151> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562404be25d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562404be25c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562404be2570 <col:169> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x562404be2650 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562404be2610 <col:186> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562404be2668 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562404be2630 <col:198> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x562404be2ce0 <line:797:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562404be27d0 <col:3> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x562404be2cb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562404be2c80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562404be2c68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562404be27f0 <col:15> '_Bool' lvalue Var 0x562404bdd670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562404be2c98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404be2810 <col:31> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x562404be2c48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562404be2c18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562404be2a20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562404be2940 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562404be2868 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562404be2850 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562404be2830 <col:45> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562404be2920 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562404be28b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562404be28a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562404be2880 <col:64> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x562404be2908 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562404be28f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562404be28d0 <col:83> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562404be2a00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562404be2998 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562404be2980 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562404be2960 <col:102> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x562404be29e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562404be29d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562404be29b0 <col:121> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562404be2c00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562404be2a40 <col:138> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x562404be2be0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562404be2bb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562404be2b00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562404be2ab8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562404be2aa0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562404be2a60 <col:151> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562404be2ae8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562404be2ad0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562404be2a80 <col:169> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x562404be2b80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562404be2b20 <col:186> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562404be2b98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562404be2b60 <col:198> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x562404be3288 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562404be2d00 <col:3> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562404be3270 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be3240 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562404be31f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562404be31e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562404be2d20 <col:20> '_Bool' lvalue Var 0x562404bdd670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be3228 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562404be3210 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562404be2d40 <col:36> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562404be31c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562404be3190 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562404be2f50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562404be2e70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562404be2d98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562404be2d80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562404be2d60 <col:55> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562404be2e50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562404be2de8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562404be2dd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562404be2db0 <col:74> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562404be2e38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562404be2e20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562404be2e00 <col:93> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562404be2f30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562404be2ec8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562404be2eb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562404be2e90 <col:112> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562404be2f18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562404be2f00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562404be2ee0 <col:131> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562404be3178 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562404be3160 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562404be2f70 <col:148> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562404be3140 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562404be3110 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562404be3030 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562404be2fe8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562404be2fd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562404be2f90 <col:166> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562404be3018 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562404be3000 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562404be2fb0 <col:184> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562404be30c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562404be3080 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562404be3050 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562404be30f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562404be30e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562404be30a8 <col:212> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562404be3850 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562404be32a8 <col:3> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562404be3838 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be3808 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562404be37c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562404be37a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562404be32c8 <col:20> '_Bool' lvalue Var 0x562404bdd670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be37f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562404be37d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562404be32e8 <col:36> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562404be3788 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562404be3758 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562404be34f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562404be3418 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562404be3340 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562404be3328 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562404be3308 <col:55> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562404be33f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562404be3390 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562404be3378 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562404be3358 <col:74> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562404be33e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562404be33c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562404be33a8 <col:93> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562404be34d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562404be3470 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562404be3458 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562404be3438 <col:112> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562404be34c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562404be34a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562404be3488 <col:131> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562404be3740 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562404be3728 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562404be3518 <col:148> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562404be3708 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562404be36d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562404be35d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562404be3590 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562404be3578 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562404be3538 <col:166> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562404be35c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562404be35a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562404be3558 <col:184> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562404be36a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562404be3628 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562404be35f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562404be36c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562404be3680 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562404be3650 <col:219> 'int' 0
|   |-BinaryOperator 0x562404be3e10 <line:800:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562404be3870 <col:3> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562404be3df8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be3dc8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562404be3d80 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562404be3d68 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562404be3890 <col:20> '_Bool' lvalue Var 0x562404bdd670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be3db0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562404be3d98 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562404be38b0 <col:36> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x562404be3d48 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562404be3d18 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562404be3ac0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562404be39e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562404be3908 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562404be38f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562404be38d0 <col:55> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562404be39c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562404be3958 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562404be3940 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562404be3920 <col:74> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562404be39a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562404be3990 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562404be3970 <col:93> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562404be3aa0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562404be3a38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562404be3a20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562404be3a00 <col:112> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562404be3a88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562404be3a70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562404be3a50 <col:131> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562404be3d00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562404be3ce8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562404be3ae0 <col:148> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x562404be3cc8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562404be3c98 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562404be3bb8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562404be3b70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562404be3b40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562404be3b00 <col:166> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562404be3ba0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562404be3b88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562404be3b20 <col:184> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562404be3c50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562404be3c08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562404be3bd8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562404be3c80 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562404be3c68 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562404be3c30 <col:212> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562404be43d8 <line:801:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562404be3e30 <col:3> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562404be43c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be4390 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562404be4348 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562404be4330 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562404be3e50 <col:20> '_Bool' lvalue Var 0x562404bdd670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be4378 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562404be4360 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562404be3e70 <col:36> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x562404be4310 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562404be42e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562404be4080 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562404be3fa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562404be3ec8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562404be3eb0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562404be3e90 <col:55> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562404be3f80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562404be3f18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562404be3f00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562404be3ee0 <col:74> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x562404be3f68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562404be3f50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562404be3f30 <col:93> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562404be4060 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562404be3ff8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562404be3fe0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562404be3fc0 <col:112> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x562404be4048 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562404be4030 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562404be4010 <col:131> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x562404be42c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562404be42b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562404be40a0 <col:148> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x562404be4290 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562404be4260 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562404be4160 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562404be4118 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562404be4100 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562404be40c0 <col:166> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562404be4148 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562404be4130 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562404be40e0 <col:184> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x562404be4230 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562404be41b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562404be4180 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562404be4248 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562404be4208 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562404be41d8 <col:219> 'int' 0
|   |-BinaryOperator 0x562404be4450 <line:802:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562404be43f8 <col:3> 'int' lvalue Var 0x562404bdc6f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x562404be4438 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562404be4418 <col:25> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   |-BinaryOperator 0x562404be4580 <line:803:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562404be4470 <col:3> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   | `-ConditionalOperator 0x562404be4550 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562404be4508 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562404be44f0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562404be4490 <col:7> '_Bool' lvalue Var 0x562404bdc8b0 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562404be4520 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404be44b0 <col:25> 'int' lvalue Var 0x562404bdc930 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562404be4538 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562404be44d0 <col:37> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   |-BinaryOperator 0x562404be4618 <line:804:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562404be45a0 <col:3> '_Bool' lvalue Var 0x562404bdc8b0 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562404be45f0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562404be45c0 <col:28> 'int' 0
|   |-CallExpr 0x562404be4670 <line:805:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404be4658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be4638 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404be46c8 <line:806:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404be46b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be4690 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404be49b0 <line:807:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562404be46e8 <col:3> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   | `-ConditionalOperator 0x562404be4980 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562404be47a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562404be4760 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562404be4748 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562404be4708 <col:7> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562404be4790 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562404be4778 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562404be4728 <col:25> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x562404be4968 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404be47c8 <col:42> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x562404be4948 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562404be4918 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562404be4888 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562404be4840 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562404be4828 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562404be47e8 <col:55> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562404be4870 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562404be4858 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562404be4808 <col:73> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562404be48e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562404be48a8 <col:90> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562404be4900 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be48c8 <col:102> 'int' lvalue Var 0x562404bdc818 'a' 'int'
|   |-BinaryOperator 0x562404be4bc8 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562404be49d0 <col:3> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562404be4bb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be4b80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562404be4a90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562404be4a48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562404be4a30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562404be49f0 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562404be4a78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562404be4a60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562404be4a10 <col:38> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be4b28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404be4ae0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404be4ab0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562404be4b58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404be4b40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be4b08 <col:66> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562404be4eb0 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562404be4be8 <col:3> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562404be4e98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be4e68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562404be4d88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562404be4ca8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562404be4c60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562404be4c48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562404be4c08 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562404be4c90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562404be4c78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562404be4c28 <col:38> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x562404be4d68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562404be4d20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562404be4d08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562404be4cc8 <col:56> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562404be4d50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562404be4d38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562404be4ce8 <col:74> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be4e20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404be4dd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404be4da8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562404be4e50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404be4e38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be4e00 <col:102> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562404be50b8 <line:810:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562404be4ed0 <col:3> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562404be50a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be5070 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562404be4f90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562404be4f48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562404be4f30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562404be4ef0 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562404be4f78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562404be4f60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562404be4f10 <col:38> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be5028 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404be4fe0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404be4fb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562404be5058 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404be5040 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be5008 <col:66> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562404be53a0 <line:811:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562404be50d8 <col:3> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562404be5388 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562404be5358 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562404be5278 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562404be5198 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562404be5150 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562404be5138 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562404be50f8 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562404be5180 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562404be5168 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562404be5118 <col:38> '_Bool' lvalue Var 0x562404bdcbf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x562404be5258 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562404be5210 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562404be51f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562404be51b8 <col:56> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562404be5240 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562404be5228 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562404be51d8 <col:74> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562404be5310 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562404be52c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562404be5298 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562404be5340 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562404be5328 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562404be52f0 <col:102> '_Bool' lvalue Var 0x562404bdce48 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x562404be53f8 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404be53e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be53c0 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562404be5450 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562404be5438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be5418 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562404be5508 <line:814:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562404be5470 <col:3> 'int' lvalue Var 0x562404bdc278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562404be54e8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562404be54d0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562404be5490 <col:22> 'int' lvalue Var 0x562404bdc278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562404be54b0 <col:41> 'int' 1
|   |-CallExpr 0x562404be5560 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562404be5548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562404be5528 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562404be55d8 <line:816:3, col:36>
|     `-CallExpr 0x562404be55b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562404be55a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562404be5580 <col:10> 'void *(void)' Function 0x562404b82958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562404be5720 prev 0x562404bdbfc0 <line:818:1, line:820:1> line:818:6 fence 'void ()'
| `-CompoundStmt 0x562404be57c0 <line:819:1, line:820:1>
|-FunctionDecl 0x562404be57f0 prev 0x562404bdc080 <line:821:1, line:823:1> line:821:6 isync 'void ()'
| `-CompoundStmt 0x562404be5890 <line:822:1, line:823:1>
|-FunctionDecl 0x562404be58c0 prev 0x562404bdc140 <line:824:1, line:826:1> line:824:6 lwfence 'void ()'
| `-CompoundStmt 0x562404be5960 <line:825:1, line:826:1>
`-FunctionDecl 0x562404be59c8 <line:827:1, line:853:1> line:827:5 main 'int ()'
  `-CompoundStmt 0x562404be79f0 <line:828:1, line:853:1>
    |-DeclStmt 0x562404be5ae0 <line:829:3, col:17>
    | `-VarDecl 0x562404be5a78 <col:3, col:13> col:13 used t483 'pthread_t':'unsigned long'
    |-CallExpr 0x562404be5d08 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562404be5cf0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562404be5af8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562404bc3488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562404be5b38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562404be5b18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562404be5a78 't483' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562404be5d48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562404be5bd0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562404be5ba8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562404be5b50 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562404be5d60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562404be5bf0 <col:38> 'void *(void *)' Function 0x562404bdd788 'P0' 'void *(void *)'
    | `-ParenExpr 0x562404be5c70 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562404be5c48 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562404be5c10 <col:51> 'int' 0
    |-DeclStmt 0x562404be5df0 <line:831:3, col:17>
    | `-VarDecl 0x562404be5d88 <col:3, col:13> col:13 used t484 'pthread_t':'unsigned long'
    |-CallExpr 0x562404be5f98 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562404be5f80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562404be5e08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562404bc3488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562404be5e48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562404be5e28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562404be5d88 't484' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562404be5fd8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562404be5ec0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562404be5e98 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562404be5e60 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562404be5ff0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562404be5ee0 <col:38> 'void *(void *)' Function 0x562404bdf1c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x562404be5f60 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562404be5f38 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562404be5f00 <col:51> 'int' 0
    |-DeclStmt 0x562404be6080 <line:833:3, col:17>
    | `-VarDecl 0x562404be6018 <col:3, col:13> col:13 used t485 'pthread_t':'unsigned long'
    |-CallExpr 0x562404be6228 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562404be6210 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562404be6098 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562404bc3488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562404be60d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562404be60b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562404be6018 't485' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562404be6268 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562404be6150 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562404be6128 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562404be60f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562404be6280 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562404be6170 <col:38> 'void *(void *)' Function 0x562404be0540 'P2' 'void *(void *)'
    | `-ParenExpr 0x562404be61f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562404be61c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562404be6190 <col:51> 'int' 0
    |-DeclStmt 0x562404be6310 <line:835:3, col:17>
    | `-VarDecl 0x562404be62a8 <col:3, col:13> col:13 used t486 'pthread_t':'unsigned long'
    |-CallExpr 0x562404be64b8 <line:836:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562404be64a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562404be6328 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562404bc3488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562404be6368 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562404be6348 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562404be62a8 't486' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562404be64f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562404be63e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562404be63b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562404be6380 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562404be6510 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562404be6400 <col:38> 'void *(void *)' Function 0x562404be18e0 'P3' 'void *(void *)'
    | `-ParenExpr 0x562404be6480 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562404be6458 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562404be6420 <col:51> 'int' 0
    |-CallExpr 0x562404be6560 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562404be6548 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562404be6528 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562404be6630 <line:838:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562404be6580 <col:3> '_Bool' lvalue Var 0x562404bdd1a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562404be6618 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562404be65f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562404be65e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562404be65a0 <col:21> 'int' lvalue Var 0x562404bdc278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562404be65c0 <col:41> 'int' 4
    |-CallExpr 0x562404be6688 <line:839:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562404be6670 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562404be6650 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562404be6700 <line:840:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562404be66e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562404be66a8 <col:3> 'void (int)' Function 0x562404b82790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562404be6740 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562404be6728 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562404be66c8 <col:21> '_Bool' lvalue Var 0x562404bdd1a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562404be6790 <line:841:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562404be6778 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562404be6758 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562404be6a78 <line:842:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562404be67b0 <col:3> 'int' lvalue Var 0x562404bdc818 'a' 'int'
    | `-ConditionalOperator 0x562404be6a48 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562404be6870 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562404be6828 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562404be6810 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562404be67d0 <col:7> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562404be6858 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562404be6840 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562404be67f0 <col:25> '_Bool' lvalue Var 0x562404bdc9a8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562404be6a30 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562404be6890 <col:42> 'int' lvalue Var 0x562404bdcfc0 'a$w_buff0' 'int'
    |   `-ParenExpr 0x562404be6a10 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562404be69e0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562404be6950 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562404be6908 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562404be68f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562404be68b0 <col:55> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562404be6938 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562404be6920 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562404be68d0 <col:73> '_Bool' lvalue Var 0x562404bdcc68 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562404be69b0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562404be6970 <col:90> 'int' lvalue Var 0x562404bdd0b8 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562404be69c8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562404be6990 <col:102> 'int' lvalue Var 0x562404bdc818 'a' 'int'
    |-BinaryOperator 0x562404be6ca8 <line:843:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562404be6a98 <col:3> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562404be6c90 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562404be6c60 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562404be6b58 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562404be6b10 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562404be6af8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562404be6ab8 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562404be6b40 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562404be6b28 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562404be6ad8 <col:38> '_Bool' lvalue Var 0x562404bdc9a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562404be6c18 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562404be6bd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562404be6ba0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562404be6c48 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562404be6c30 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562404be6bf8 <col:66> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562404be6f90 <line:844:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562404be6cc8 <col:3> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562404be6f78 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562404be6f48 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562404be6e68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562404be6d88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562404be6d40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562404be6d28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562404be6ce8 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562404be6d70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562404be6d58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562404be6d08 <col:38> '_Bool' lvalue Var 0x562404bdc9a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562404be6e48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562404be6e00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562404be6de8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562404be6da8 <col:56> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562404be6e30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562404be6e18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562404be6dc8 <col:74> '_Bool' lvalue Var 0x562404bdcc68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562404be6f00 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562404be6eb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562404be6e88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562404be6f30 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562404be6f18 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562404be6ee0 <col:102> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562404be7198 <line:845:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562404be6fb0 <col:3> '_Bool' lvalue Var 0x562404bdc9a8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562404be7180 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562404be7150 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562404be7070 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562404be7028 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562404be7010 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562404be6fd0 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562404be7058 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562404be7040 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562404be6ff0 <col:38> '_Bool' lvalue Var 0x562404bdc9a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562404be7108 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562404be70c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562404be7090 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562404be7138 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562404be7120 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562404be70e8 <col:66> '_Bool' lvalue Var 0x562404bdc9a8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562404be7480 <line:846:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562404be71b8 <col:3> '_Bool' lvalue Var 0x562404bdcc68 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562404be7468 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562404be7438 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562404be7358 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562404be7278 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562404be7230 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562404be7218 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562404be71d8 <col:20> '_Bool' lvalue Var 0x562404bdd038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562404be7260 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562404be7248 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562404be71f8 <col:38> '_Bool' lvalue Var 0x562404bdc9a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562404be7338 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562404be72f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562404be72d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562404be7298 <col:56> '_Bool' lvalue Var 0x562404bdd130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562404be7320 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562404be7308 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562404be72b8 <col:74> '_Bool' lvalue Var 0x562404bdcc68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562404be73f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562404be73a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562404be7378 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562404be7420 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562404be7408 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562404be73d0 <col:102> '_Bool' lvalue Var 0x562404bdcc68 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562404be74d8 <line:847:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562404be74c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562404be74a0 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562404be7530 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562404be7518 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562404be74f8 <col:3> 'void ()' Function 0x562404b82e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562404be7898 <line:849:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x562404be7550 <col:3> '_Bool' lvalue Var 0x562404bdd220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562404be7880 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562404be7868 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562404be7848 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x562404be7828 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x562404be7790 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x562404be76f8 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x562404be7660 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x562404be75c8 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x562404be75b0 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x562404be7570 <col:23> 'int' lvalue Var 0x562404bdd320 'x' 'int'
    |         | | | | `-IntegerLiteral 0x562404be7590 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x562404be7640 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x562404be7628 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x562404be75e8 <col:33> 'int' lvalue Var 0x562404bdc398 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x562404be7608 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x562404be76d8 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x562404be76c0 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x562404be7680 <col:61> 'int' lvalue Var 0x562404bdc4b8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x562404be76a0 <col:84> 'int' 0
    |         | `-BinaryOperator 0x562404be7770 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562404be7758 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562404be7718 <col:89> 'int' lvalue Var 0x562404bdc5d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x562404be7738 <col:112> 'int' 1
    |         `-BinaryOperator 0x562404be7808 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x562404be77f0 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562404be77b0 <col:117> 'int' lvalue Var 0x562404bdc6f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x562404be77d0 <col:140> 'int' 0
    |-CallExpr 0x562404be78f0 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562404be78d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562404be78b8 <col:3> 'void ()' Function 0x562404b82f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562404be7968 <line:851:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562404be7950 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562404be7910 <col:3> 'void (int)' Function 0x562404b82bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562404be79a8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562404be7990 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562404be7930 <col:21> '_Bool' lvalue Var 0x562404bdd220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562404be79e0 <line:852:3, col:10>
      `-IntegerLiteral 0x562404be79c0 <col:10> 'int' 0
