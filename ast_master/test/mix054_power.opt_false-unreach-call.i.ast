TranslationUnitDecl 0x555923c0be18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x555923c0c6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x555923c0c3b0 '__int128'
|-TypedefDecl 0x555923c0c748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x555923c0c3d0 'unsigned __int128'
|-TypedefDecl 0x555923c0ca50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x555923c0c820 'struct __NSConstantString_tag'
|   `-Record 0x555923c0c7a0 '__NSConstantString_tag'
|-TypedefDecl 0x555923c0caf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x555923c0cab0 'char *'
|   `-BuiltinType 0x555923c0beb0 'char'
|-TypedefDecl 0x555923c4b650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x555923c0cd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x555923c0cbd0 'struct __va_list_tag'
|     `-Record 0x555923c0cb50 '__va_list_tag'
|-FunctionDecl 0x555923c4b790 <./test/mix054_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x555923c4b6c0 <col:31> col:34 'int'
|-FunctionDecl 0x555923c4b958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x555923c4ba80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x555923c4bbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x555923c4bb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x555923c4bdf8 <col:40, col:99>
|   |-IfStmt 0x555923c4bdc8 <col:42, col:88>
|   | |-UnaryOperator 0x555923c4bca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x555923c4bc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x555923c4bc70 <col:47> 'int' lvalue ParmVar 0x555923c4bb38 'expression' 'int'
|   | `-CompoundStmt 0x555923c4bdb0 <col:59, col:88>
|   |   `-LabelStmt 0x555923c4bd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x555923c4bd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x555923c4bd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x555923c4bcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x555923c4ba80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x555923c4bde0 <col:89>
|   `-ReturnStmt 0x555923c4bde8 <col:91>
|-FunctionDecl 0x555923c4be40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x555923c4bf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x555923c4c280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555923c4bfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x555923c4c038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x555923c4c0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555923c4c138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555923c4c340 <line:10:22>
|-FunctionDecl 0x555923c72390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555923c4c3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x555923c4c430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x555923c4c4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555923c4c530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555923c72450 <line:13:22>
|-FunctionDecl 0x555923c72700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555923c724c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x555923c72540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x555923c725c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x555923c727b8 <line:15:22>
|-TypedefDecl 0x555923c72828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x555923c0bf70 'unsigned char'
|-TypedefDecl 0x555923c72898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x555923c0bf90 'unsigned short'
|-TypedefDecl 0x555923c72908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x555923c0bfb0 'unsigned int'
|-TypedefDecl 0x555923c72978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c729e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x555923c0bed0 'signed char'
|-TypedefDecl 0x555923c72a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x555923c0bf70 'unsigned char'
|-TypedefDecl 0x555923c72ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x555923c0bef0 'short'
|-TypedefDecl 0x555923c72b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x555923c0bf90 'unsigned short'
|-TypedefDecl 0x555923c72ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x555923c0bf10 'int'
|-TypedefDecl 0x555923c72c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x555923c0bfb0 'unsigned int'
|-TypedefDecl 0x555923c72c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c72cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c72d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c72dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c72e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c72eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x555923c0bfb0 'unsigned int'
|-TypedefDecl 0x555923c72f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x555923c0bfb0 'unsigned int'
|-TypedefDecl 0x555923c72f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c73008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c73078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x555923c0bfb0 'unsigned int'
|-TypedefDecl 0x555923c730e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c73158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c731c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c73238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x555923c0bf10 'int'
|-RecordDecl 0x555923c73290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x555923c73408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x555923c734c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x555923c73460 'struct __fsid_t' sugar
|   `-RecordType 0x555923c73310 '__fsid_t'
|     `-Record 0x555923c73290 ''
|-TypedefDecl 0x555923c73548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c735b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c73628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c73698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x555923c0bfb0 'unsigned int'
|-TypedefDecl 0x555923c73708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c73778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x555923c0bfb0 'unsigned int'
|-TypedefDecl 0x555923c737e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c73858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x555923c0bf10 'int'
|-TypedefDecl 0x555923c738c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x555923c0bf10 'int'
|-TypedefDecl 0x555923c73938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x555923c0bf10 'int'
|-TypedefDecl 0x555923c739a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x555923c0c630 'void *'
|   `-BuiltinType 0x555923c0be70 'void'
|-TypedefDecl 0x555923c73a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c73a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c73af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c73b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c73bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c73c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c73cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c73d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c73d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c73e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c73e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c73f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x555923c73ed0 '__off64_t' sugar
|   |-Typedef 0x555923c731c8 '__off64_t'
|   `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c74000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x555923c73fc0 '__quad_t *'
|   `-TypedefType 0x555923c73f60 '__quad_t' sugar
|     |-Typedef 0x555923c72d68 '__quad_t'
|     `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c74070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x555923c0cab0 'char *'
|   `-BuiltinType 0x555923c0beb0 'char'
|-TypedefDecl 0x555923c740e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c74150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x555923c0bfb0 'unsigned int'
|-FunctionDecl 0x555923c74298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x555923c741c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x555923c755e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x555923c755d8 <line:72:3, col:34>
|     `-CallExpr 0x555923c75598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x555923c75580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555923c75510 <col:10> '<builtin fn type>' Function 0x555923c75380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x555923c755c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x555923c75530 <col:29> 'unsigned int' lvalue ParmVar 0x555923c741c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x555923c75380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x555923c75420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x555923c75490 <col:10> Implicit
| `-ConstAttr 0x555923c754e8 <col:10> Implicit
|-FunctionDecl 0x555923c75740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x555923c75638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x555923c75a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x555923c75a48 <line:77:3, col:34>
|     `-CallExpr 0x555923c75a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x555923c759f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555923c75978 <col:10> '<builtin fn type>' Function 0x555923c757e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x555923c75a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x555923c75998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x555923c75638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x555923c757e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x555923c75888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x555923c758f8 <col:10> Implicit
| `-ConstAttr 0x555923c75950 <col:10> Implicit
|-TypedefDecl 0x555923c75a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-TypedefDecl 0x555923c75b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x555923c75ae0 '__time_t' sugar
|   |-Typedef 0x555923c73708 '__time_t'
|   `-BuiltinType 0x555923c0bf30 'long'
|-RecordDecl 0x555923c75b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x555923c75c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x555923c75cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x555923c75d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x555923c75d10 '__pid_t' sugar
|   |-Typedef 0x555923c73238 '__pid_t'
|   `-BuiltinType 0x555923c0bf10 'int'
|-RecordDecl 0x555923c75da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x555923c75e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x555923c75eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x555923c75f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x555923c75fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-RecordDecl 0x555923c76030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x555923c762c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x555923c773a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x555923c76310 'struct cpu_set_t' sugar
|   `-RecordType 0x555923c760b0 'cpu_set_t'
|     `-Record 0x555923c76030 ''
|-FunctionDecl 0x555923c77678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x555923c77448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555923c77550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x555923c77728 <line:107:19>
|-FunctionDecl 0x555923c77900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x555923c77790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x555923c779a8 <col:69>
|-FunctionDecl 0x555923c77b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x555923c77a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x555923c77bc8 <col:64>
|-FunctionDecl 0x555923c77e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x555923c77c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555923c77d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555923c77f38 <line:113:22>
|-FunctionDecl 0x555923c781b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x555923c77fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555923c78098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x555923c78268 <col:88>
|-FunctionDecl 0x555923c78588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555923c782d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555923c783b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x555923c78440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x555923c78640 <col:62>
|-FunctionDecl 0x555923c787b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x555923c786a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x555923c78860 <col:63>
|-FunctionDecl 0x555923c78988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x555923c78a28 <col:47>
|-FunctionDecl 0x555923c78b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x555923c78a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555923c78bd8 <col:69>
|-FunctionDecl 0x555923c78ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x555923c78c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x555923c78d88 <col:69>
|-FunctionDecl 0x555923c79048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555923c78df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x555923c78f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x555923c790f8 <col:88>
|-TypedefDecl 0x555923c79188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x555923c79150 '__clock_t' sugar
|   |-Typedef 0x555923c73548 '__clock_t'
|   `-BuiltinType 0x555923c0bf30 'long'
|-TypedefDecl 0x555923c79218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x555923c791e0 '__clockid_t' sugar
|   |-Typedef 0x555923c73938 '__clockid_t'
|   `-BuiltinType 0x555923c0bf10 'int'
|-TypedefDecl 0x555923c792a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x555923c79270 '__timer_t' sugar
|   |-Typedef 0x555923c739a8 '__timer_t'
|   `-PointerType 0x555923c0c630 'void *'
|     `-BuiltinType 0x555923c0be70 'void'
|-RecordDecl 0x555923c79300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x555923c793d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x555923c79440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x555923c794a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x555923c79510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x555923c79578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x555923c795e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x555923c79648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x555923c796b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x555923c79718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x555923c79780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x555923c797e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x555923c79838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x555923c79908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x555923c79978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x555923c79a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x555923c79bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x555923c79c90 <col:45>
|-FunctionDecl 0x555923c79e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x555923c79d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x555923c79f18 <col:54>
|-FunctionDecl 0x555923c7a118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x555923c79f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x555923c79ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x555923c7a1c8 <line:157:22>
| `-ConstAttr 0x555923c7a220 <col:63>
|-FunctionDecl 0x555923c7b050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555923c7a318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555923c7b0f8 <col:56>
|-FunctionDecl 0x555923c7b4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x555923c7b168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x555923c7b1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555923c7b260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x555923c7b358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x555923c7b560 <col:54>
|-RecordDecl 0x555923c7b5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x555923c7b668 parent 0x555923c0be18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x555923c7b8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x555923c7b968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x555923c7b9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x555923c7ba38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x555923c7bb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x555923c7bc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x555923c7bbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x555923c7bb80 'struct __locale_struct' sugar
|     `-RecordType 0x555923c7b640 'struct __locale_struct'
|       `-Record 0x555923c7b5b8 '__locale_struct'
|-TypedefDecl 0x555923c7bcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x555923c7bcc0 '__locale_t' sugar
|   |-Typedef 0x555923c7bc48 '__locale_t'
|   `-PointerType 0x555923c7bbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x555923c7bb80 'struct __locale_struct' sugar
|       `-RecordType 0x555923c7b640 'struct __locale_struct'
|         `-Record 0x555923c7b5b8 '__locale_struct'
|-FunctionDecl 0x555923c7d110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x555923c7bd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x555923c7bde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555923c7be60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x555923c7bef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555923c7bf68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x555923c7d1d8 <col:40>
|-FunctionDecl 0x555923c7d3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555923c7d2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x555923c7d470 <col:66>
|-FunctionDecl 0x555923c7d580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x555923c7d4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x555923c7d628 <col:69>
|-FunctionDecl 0x555923c7d858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555923c7d690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555923c7d720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555923c7d908 <col:52>
|-FunctionDecl 0x555923c7dab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555923c7d970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555923c7da00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555923c7db60 <col:55>
|-FunctionDecl 0x555923c7dcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x555923c7dbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x555923c7dda0 <col:62>
|-FunctionDecl 0x555923c7df18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x555923c7de08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x555923c7dfc0 <col:60>
|-FunctionDecl 0x555923c7e2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555923c7e118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555923c7e198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x555923c7e368 <col:44>
|-FunctionDecl 0x555923c7e578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555923c7e3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555923c7e450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x555923c7e628 <col:49>
|-VarDecl 0x555923c7e728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x555923c7e7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x555923c7e828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x555923c7e8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x555923c7ea20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x555923c7eac0 <col:42>
|-VarDecl 0x555923c7eb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x555923c7ebb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x555923c7ed38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x555923c7ec28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x555923c7ede0 <col:57>
|-FunctionDecl 0x555923c7eef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555923c7ee60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555923c7ef98 <col:56>
|-FunctionDecl 0x555923c7f0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555923c7f018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x555923c7f178 <col:59>
|-FunctionDecl 0x555923c7f280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x555923c7f1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x555923c7f328 <col:48>
| `-ConstAttr 0x555923c7f380 <col:89>
|-FunctionDecl 0x555923c7f5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555923c7f438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x555923c7f4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x555923c7f848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555923c7f6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555923c7f768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x555923c7f8f8 <col:88>
|-FunctionDecl 0x555923c7fa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555923c7f960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555923c7f9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x555923c7fb40 <col:88>
|-FunctionDecl 0x555923c7fd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x555923c7fba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555923c7fc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x555923c7fe08 <line:208:22>
|-FunctionDecl 0x555923c80178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x555923c7fe70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555923c7fef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x555923c7ff80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x555923c80010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x555923c80478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x555923c80278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x555923c80350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x555923c80528 <col:85>
|-FunctionDecl 0x555923c80918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x555923c80590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555923c806c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x555923c807d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x555923c809d0 <col:52>
|-FunctionDecl 0x555923c80b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x555923c80a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555923c80bf0 <col:61>
|-FunctionDecl 0x555923c810f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x555923c80c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555923c80cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x555923c80e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x555923c80ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x555923c811b0 <col:62>
|-FunctionDecl 0x555923c813c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x555923c81218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555923c812a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x555923c81478 <line:221:22>
|-FunctionDecl 0x555923c81578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x555923c814e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555923c81620 <col:65>
|-TypedefDecl 0x555923c81690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x555923c0bfd0 'unsigned long'
|-RecordDecl 0x555923c816e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x555923c81830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555923c81898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555923c81948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x555923c818f0 'union pthread_attr_t' sugar
|   `-RecordType 0x555923c81770 'union pthread_attr_t'
|     `-Record 0x555923c816e8 'pthread_attr_t'
|-RecordDecl 0x555923c819a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x555923c81b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x555923c81b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x555923c81c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x555923c81be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x555923c81a20 'struct __pthread_internal_list'
|     `-Record 0x555923c819a0 '__pthread_internal_list'
|-RecordDecl 0x555923c81cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x555923c81d58 parent 0x555923c0be18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x555923c81e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555923c81e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x555923c81f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x555923c81f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x555923c81fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x555923c82038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x555923c86110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x555923c861c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x555923c862b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x555923c86318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555923c864a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x555923c86440 'union pthread_mutex_t' sugar
|   `-RecordType 0x555923c81d30 'pthread_mutex_t'
|     `-Record 0x555923c81cb0 ''
|-RecordDecl 0x555923c86510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x555923c86650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555923c866b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555923c86770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x555923c86710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x555923c86590 'pthread_mutexattr_t'
|     `-Record 0x555923c86510 ''
|-RecordDecl 0x555923c867e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x555923c86888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x555923c86950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555923c869b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x555923c86a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x555923c86a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x555923c86af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x555923c86b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x555923c86bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x555923c86c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x555923c86ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/mix054_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/mix054_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x555923c86dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x555923c86e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x555923c86f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x555923c86f10 'union pthread_cond_t' sugar
|   `-RecordType 0x555923c86860 'pthread_cond_t'
|     `-Record 0x555923c867e0 ''
|-RecordDecl 0x555923c86fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x555923c88130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555923c88198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555923c88250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x555923c881f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x555923c87060 'pthread_condattr_t'
|     `-Record 0x555923c86fe0 ''
|-TypedefDecl 0x555923c882d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x555923c0bfb0 'unsigned int'
|-TypedefDecl 0x555923c88348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x555923c0bf10 'int'
|-RecordDecl 0x555923c883a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x555923c88448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x555923c88510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555923c88578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x555923c885e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x555923c88648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x555923c886b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x555923c88718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x555923c88780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x555923c887e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x555923c88850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x555923c888b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x555923c88920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x555923c889d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/mix054_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix054_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x555923c88a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555923c88ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555923c88c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x555923c88bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x555923c88420 'pthread_rwlock_t'
|     `-Record 0x555923c883a0 ''
|-RecordDecl 0x555923c88ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x555923c88de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x555923c88e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555923c88f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x555923c88ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x555923c88d20 'pthread_rwlockattr_t'
|     `-Record 0x555923c88ca0 ''
|-TypedefDecl 0x555923c88f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x555923c0bf14 'volatile int' volatile
|   `-BuiltinType 0x555923c0bf10 'int'
|-RecordDecl 0x555923c88fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x555923c8a140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x555923c8a1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555923c8a260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x555923c8a200 'union pthread_barrier_t' sugar
|   `-RecordType 0x555923c89060 'pthread_barrier_t'
|     `-Record 0x555923c88fe0 ''
|-RecordDecl 0x555923c8a2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x555923c8a3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x555923c8a438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x555923c8a4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x555923c8a490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x555923c8a350 'pthread_barrierattr_t'
|     `-Record 0x555923c8a2d0 ''
|-TypedefDecl 0x555923c8a608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x555923c8a5a0 'long [8]' 8 
|   `-BuiltinType 0x555923c0bf30 'long'
|-EnumDecl 0x555923c8a660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x555923c8a728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x555923c8a778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x555923c8a7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x555923c8a898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x555923c8a8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x555923c8a938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x555923c8a988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x555923c8aa10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x555923c8a9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x555923c8a9d8 <col:26> 'int' EnumConstant 0x555923c8a898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x555923c8aa98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x555923c8aa80 <col:29> 'int'
| |   `-DeclRefExpr 0x555923c8aa60 <col:29> 'int' EnumConstant 0x555923c8a8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x555923c8ab20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x555923c8ab08 <col:30> 'int'
| |   `-DeclRefExpr 0x555923c8aae8 <col:30> 'int' EnumConstant 0x555923c8a938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x555923c8aba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x555923c8ab90 <col:27> 'int'
|     `-DeclRefExpr 0x555923c8ab70 <col:27> 'int' EnumConstant 0x555923c8aa10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x555923c8abf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x555923c8acc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x555923c8ad50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x555923c8ad38 <col:30> 'int'
| |   `-DeclRefExpr 0x555923c8ad18 <col:30> 'int' EnumConstant 0x555923c8acc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x555923c8ada0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x555923c8ae28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x555923c8ae10 <col:29> 'int'
|     `-DeclRefExpr 0x555923c8adf0 <col:29> 'int' EnumConstant 0x555923c8ada0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x555923c8ae78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x555923c8af48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x555923c8af98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x555923c8afe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x555923c8b038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x555923c8b150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x555923c8b1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x555923c8b1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x555923c8b278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x555923c8b260 <col:31> 'int'
|     `-DeclRefExpr 0x555923c8b240 <col:31> 'int' EnumConstant 0x555923c8b150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x555923c8b2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x555923c8b398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x555923c8b3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x555923c8b438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x555923c8b508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x555923c8b558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x555923c8b5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x555923c8b678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x555923c8b6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x555923c8b718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x555923c8b958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x555923c8b9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x555923c8ba28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x555923c8bb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x555923c8bb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x555923c8bc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x555923c8bcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x555923c8bd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x555923c8bdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x555923c8be28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x555923c8c488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x555923c8bf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x555923c8c030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555923c8c270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x555923c8c2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x555923c8c548 <col:47>
| |-NonNullAttr 0x555923c8c5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x555923c8c5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x555923c8c700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x555923c8c630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x555923c8c958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x555923c8c7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x555923c8c838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x555923c8cb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x555923c8ca18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x555923c8cbd0 <col:60>
|-FunctionDecl 0x555923c8cd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x555923c8cdc0 <col:54>
| `-ConstAttr 0x555923c8ce18 <col:95>
|-FunctionDecl 0x555923c8cfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x555923c8ce50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555923c8cec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x555923c8d098 <line:394:19>
| `-ConstAttr 0x555923c8d0f0 <col:60>
|-FunctionDecl 0x555923c8eb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555923c8e9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555923c8ebb0 <col:71>
| `-NonNullAttr 0x555923c8ec08 <col:112, col:126> 1
|-FunctionDecl 0x555923c8ed10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555923c8ec58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555923c8edb8 <line:397:22>
| `-NonNullAttr 0x555923c8ee10 <col:63, col:77> 1
|-FunctionDecl 0x555923c8f038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x555923c8ee58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555923c8eed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x555923c8f0e8 <line:400:22>
| `-NonNullAttr 0x555923c8f140 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c8f348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555923c8f188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555923c8f208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x555923c8f3f8 <line:403:22>
| `-NonNullAttr 0x555923c8f450 <col:63, col:77> 1
|-FunctionDecl 0x555923c8f6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x555923c8f498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555923c8f540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x555923c8f758 <line:406:22>
| `-NonNullAttr 0x555923c8f7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c909e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555923c8f7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555923c8f870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555923c90a98 <line:409:22>
| `-NonNullAttr 0x555923c90af0 <col:63, col:77> 1
|-FunctionDecl 0x555923c90d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555923c90b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555923c90bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555923c90dd8 <line:412:22>
| `-NonNullAttr 0x555923c90e30 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c91068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555923c90e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x555923c90f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x555923c91118 <col:37>
| `-NonNullAttr 0x555923c91170 <col:78, col:95> 1 2
|-FunctionDecl 0x555923c91358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923c911b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555923c91238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x555923c91408 <line:418:22>
| `-NonNullAttr 0x555923c91460 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c915e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555923c914a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555923c91528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x555923c91698 <line:420:22>
| `-NonNullAttr 0x555923c916f0 <col:63, col:77> 1
|-FunctionDecl 0x555923c91898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923c91738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555923c917b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x555923c91948 <line:423:22>
| `-NonNullAttr 0x555923c919c0 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c91b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555923c91a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555923c91a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x555923c91bf8 <line:426:22>
| `-NonNullAttr 0x555923c91c50 <col:63, col:77> 1
|-FunctionDecl 0x555923c91df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923c91c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555923c91d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x555923c91ea8 <line:429:22>
| `-NonNullAttr 0x555923c91f00 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c92088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555923c91f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555923c91fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x555923c92138 <line:431:22>
| `-NonNullAttr 0x555923c92190 <col:63, col:77> 1
|-FunctionDecl 0x555923c923b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x555923c921d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555923c92258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x555923c92468 <line:434:22>
| |-NonNullAttr 0x555923c924c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x555923c924f8 <col:100> "" ""
|-FunctionDecl 0x555923c92708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x555923c92548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555923c925c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x555923c927b8 <line:437:22>
| |-NonNullAttr 0x555923c92810 <col:63, col:77> 1
| `-DeprecatedAttr 0x555923c92848 <col:97> "" ""
|-FunctionDecl 0x555923c92a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555923c92898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555923c92910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555923c92af8 <line:440:22>
| `-NonNullAttr 0x555923c92b50 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c92cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555923c92b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555923c92c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555923c92d80 <line:443:22>
| `-NonNullAttr 0x555923c92dd8 <col:63, col:77> 1
|-FunctionDecl 0x555923c930c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555923c92e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555923c92ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x555923c92f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555923c93180 <line:447:22>
| `-NonNullAttr 0x555923c931d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x555923c93488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x555923c93230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555923c932b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x555923c93328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555923c93540 <col:43>
| `-NonNullAttr 0x555923c93598 <col:84, col:98> 1
|-FunctionDecl 0x555923c93858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555923c935e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555923c93668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x555923c936f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x555923c93910 <line:452:22>
| `-NonNullAttr 0x555923c93968 <col:63, col:77> 3
|-FunctionDecl 0x555923c93c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555923c939e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555923c93a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x555923c93af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555923c93d30 <line:456:22>
| `-NonNullAttr 0x555923c93d88 <col:63, col:80> 2 3
|-FunctionDecl 0x555923c93f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x555923c93dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555923c93e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x555923c94028 <line:458:22>
|-FunctionDecl 0x555923c943f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x555923c940f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x555923c94290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x555923c944a8 <col:52, col:69> 1 2
|-FunctionDecl 0x555923c94650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x555923c94530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x555923c945b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x555923c94838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x555923c94718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x555923c94798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x555923c949f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x555923c948f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x555923c94b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x555923c94bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x555923c94c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x555923c94d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x555923c94dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x555923c94fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix054_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x555923c95098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x555923c95150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x555923c950f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x555923c94c50 '__pthread_unwind_buf_t'
| |   `-Record 0x555923c94bd0 ''
| `-AlignedAttr 0x555923c951a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x555923c95220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x555923c95380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x555923c953e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x555923c95450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x555923c954b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x555923c956c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555923c955b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555923c95808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x555923c95778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x555923c95a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x555923c958c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x555923c95aa8 <line:487:22>
|-RecordDecl 0x555923c95b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x555923c95e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x555923c95c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x555923c95cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x555923c95ec8 <col:86>
| `-ReturnsTwiceAttr 0x555923c95f20 <col:12> Implicit
|-FunctionDecl 0x555923c96248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555923c95ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x555923c96100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x555923c962f8 <line:493:22>
| `-NonNullAttr 0x555923c96350 <col:63, col:77> 1
|-FunctionDecl 0x555923c964c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555923c96398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555923c96570 <line:495:22>
| `-NonNullAttr 0x555923c965c8 <col:63, col:77> 1
|-FunctionDecl 0x555923c966d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555923c96618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555923c96778 <line:497:22>
| `-NonNullAttr 0x555923c967d0 <col:52, col:66> 1
|-FunctionDecl 0x555923c968d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555923c96818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555923c96978 <line:499:22>
| `-NonNullAttr 0x555923c969d0 <col:52, col:66> 1
|-FunctionDecl 0x555923c97c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555923c97a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555923c97ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555923c97cd8 <col:36>
| `-NonNullAttr 0x555923c97d30 <col:66, col:83> 1 2
|-FunctionDecl 0x555923c97e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555923c97d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555923c97ed8 <line:504:22>
| `-NonNullAttr 0x555923c97f30 <col:52, col:66> 1
|-FunctionDecl 0x555923c981c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923c97fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555923c98060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555923c98278 <line:508:22>
| `-NonNullAttr 0x555923c982d0 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c98598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x555923c98318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555923c98398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x555923c98418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x555923c98650 <line:512:22>
| `-NonNullAttr 0x555923c986a8 <col:63, col:80> 1 3
|-FunctionDecl 0x555923c987b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x555923c986f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x555923c98858 <line:514:22>
| `-NonNullAttr 0x555923c988b0 <col:63, col:77> 1
|-FunctionDecl 0x555923c98ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555923c98960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555923c98b80 <line:516:22>
| `-NonNullAttr 0x555923c98bd8 <col:63, col:77> 1
|-FunctionDecl 0x555923c98ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x555923c98c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x555923c98d88 <line:518:22>
| `-NonNullAttr 0x555923c98de0 <col:63, col:77> 1
|-FunctionDecl 0x555923c99008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923c98e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555923c98ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x555923c990b8 <line:522:22>
| `-NonNullAttr 0x555923c99110 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c99318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555923c99158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555923c991d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x555923c993c8 <line:525:22>
| `-NonNullAttr 0x555923c99420 <col:63, col:77> 1
|-FunctionDecl 0x555923c995c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923c99468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555923c994e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x555923c99678 <line:528:22>
| `-NonNullAttr 0x555923c996d0 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c99858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555923c99718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555923c99798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x555923c99908 <line:530:22>
| `-NonNullAttr 0x555923c99960 <col:63, col:77> 1
|-FunctionDecl 0x555923c99b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923c999a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555923c99a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x555923c99bd0 <line:534:22>
| `-NonNullAttr 0x555923c99c28 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c99db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555923c99c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555923c99cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x555923c99e68 <line:537:22>
| `-NonNullAttr 0x555923c99ec0 <col:63, col:77> 1
|-FunctionDecl 0x555923c9a068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923c99f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x555923c99f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x555923c9a118 <line:541:22>
| `-NonNullAttr 0x555923c9a170 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c9a2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555923c9a1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555923c9a238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x555923c9a3a8 <line:544:22>
| `-NonNullAttr 0x555923c9a400 <col:63, col:77> 1
|-FunctionDecl 0x555923c9a5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x555923c9a448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x555923c9a4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x555923c9a698 <line:547:22>
| `-NonNullAttr 0x555923c9a6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c9a878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x555923c9a738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x555923c9a7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x555923c9a928 <line:550:22>
| `-NonNullAttr 0x555923c9a980 <col:63, col:77> 1
|-FunctionDecl 0x555923c9bcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x555923c9baa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555923c9bbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x555923c9bda8 <col:29>
| `-NonNullAttr 0x555923c9be00 <col:70, col:84> 1
|-FunctionDecl 0x555923c9bf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555923c9be48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555923c9c020 <line:555:22>
| `-NonNullAttr 0x555923c9c078 <col:63, col:77> 1
|-FunctionDecl 0x555923c9c180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555923c9c0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555923c9c228 <line:557:22>
| `-NonNullAttr 0x555923c9c280 <col:52, col:66> 1
|-FunctionDecl 0x555923c9c380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555923c9c2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555923c9c428 <line:559:19>
| `-NonNullAttr 0x555923c9c480 <col:49, col:63> 1
|-FunctionDecl 0x555923c9c6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555923c9c4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555923c9c558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555923c9c768 <col:39>
| `-NonNullAttr 0x555923c9c7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x555923c9c8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555923c9c808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555923c9c968 <line:564:22>
| `-NonNullAttr 0x555923c9c9c0 <col:52, col:66> 1
|-FunctionDecl 0x555923c9cb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555923c9ca70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555923c9cbd0 <line:566:22>
| `-NonNullAttr 0x555923c9cc28 <col:52, col:66> 1
|-FunctionDecl 0x555923c9cde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555923c9cc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555923c9cd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555923c9ce98 <col:39>
| `-NonNullAttr 0x555923c9cef0 <col:69, col:86> 1 2
|-FunctionDecl 0x555923c9cff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555923c9cf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555923c9d098 <line:571:22>
| `-NonNullAttr 0x555923c9d0f0 <col:52, col:66> 1
|-FunctionDecl 0x555923c9d2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555923c9d1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555923c9d380 <line:573:22>
| `-NonNullAttr 0x555923c9d3d8 <col:63, col:77> 1
|-FunctionDecl 0x555923c9d4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555923c9d428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x555923c9d588 <line:575:22>
| `-NonNullAttr 0x555923c9d5e0 <col:63, col:77> 1
|-FunctionDecl 0x555923c9d808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923c9d628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555923c9d6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x555923c9d8b8 <line:579:22>
| `-NonNullAttr 0x555923c9d910 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c9db38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555923c9d958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555923c9d9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x555923c9dbe8 <line:582:22>
| `-NonNullAttr 0x555923c9dc40 <col:63, col:77> 1
|-FunctionDecl 0x555923c9dde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923c9dc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555923c9dd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x555923c9de98 <line:586:22>
| `-NonNullAttr 0x555923c9def0 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c9e078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555923c9df38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555923c9dfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x555923c9e128 <col:36>
| `-NonNullAttr 0x555923c9e180 <col:77, col:91> 1
|-FunctionDecl 0x555923c9e4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x555923c9e260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555923c9e370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x555923c9e568 <line:591:22>
| `-NonNullAttr 0x555923c9e5c0 <col:63, col:77> 1
|-FunctionDecl 0x555923c9e738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555923c9e608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555923c9e7e0 <line:593:22>
| `-NonNullAttr 0x555923c9e838 <col:63, col:77> 1
|-FunctionDecl 0x555923c9e940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555923c9e888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555923c9e9e8 <line:595:22>
| `-NonNullAttr 0x555923c9ea40 <col:52, col:66> 1
|-FunctionDecl 0x555923c9eb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555923c9eaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555923c9ec00 <line:597:22>
| `-NonNullAttr 0x555923c9ec58 <col:52, col:66> 1
|-FunctionDecl 0x555923c9ee88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x555923c9eca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555923c9ed20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x555923c9ef38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x555923c9f268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555923c9efb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555923c9f030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555923c9f0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x555923c9f320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x555923c9f538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555923c9f400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555923c9f5e0 <line:606:22>
| `-NonNullAttr 0x555923c9f638 <col:63, col:77> 1
|-FunctionDecl 0x555923c9f740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555923c9f688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555923c9f7e8 <line:608:22>
| `-NonNullAttr 0x555923c9f840 <col:63, col:77> 1
|-FunctionDecl 0x555923c9faa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923c9f888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555923c9f908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x555923c9fb50 <line:612:22>
| `-NonNullAttr 0x555923c9fba8 <col:63, col:80> 1 2
|-FunctionDecl 0x555923c9fdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x555923c9fbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555923c9fc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x555923c9fe68 <col:37>
| `-NonNullAttr 0x555923c9fec0 <col:78, col:92> 1
|-FunctionDecl 0x555923ca00d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x555923c9ff08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555923c9ffb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x555923ca0188 <line:618:22>
| `-NonNullAttr 0x555923ca01e0 <col:63, col:80> 1 2
|-FunctionDecl 0x555923ca03a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x555923ca0228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555923ca02a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x555923ca0458 <line:621:22>
| `-NonNullAttr 0x555923ca04b0 <col:63, col:77> 1
|-FunctionDecl 0x555923ca0758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x555923ca0590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x555923ca0610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x555923ca0808 <line:623:22>
| `-NonNullAttr 0x555923ca0860 <col:63, col:77> 1
|-FunctionDecl 0x555923ca09d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555923ca08a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555923ca0ab0 <line:625:22>
| `-NonNullAttr 0x555923ca0b08 <col:63, col:77> 1
|-FunctionDecl 0x555923ca0c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555923ca0b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555923ca0cb8 <line:627:22>
| `-NonNullAttr 0x555923ca0d10 <col:52, col:66> 1
|-FunctionDecl 0x555923ca0e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555923ca0d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555923ca0eb8 <line:629:22>
| `-NonNullAttr 0x555923ca0f10 <col:52, col:66> 1
|-FunctionDecl 0x555923ca1010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555923ca0f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555923ca10b8 <line:631:22>
| `-NonNullAttr 0x555923ca1110 <col:52, col:66> 1
|-FunctionDecl 0x555923ca14e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x555923ca11f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x555923ca1300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555923ca1380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x555923ca15a0 <line:635:22>
| `-NonNullAttr 0x555923ca15f8 <col:63, col:77> 1
|-FunctionDecl 0x555923ca1778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555923ca1648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555923ca1820 <line:637:22>
| `-NonNullAttr 0x555923ca1878 <col:63, col:77> 1
|-FunctionDecl 0x555923ca1980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555923ca18c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555923ca1a28 <line:639:22>
| `-NonNullAttr 0x555923ca1a80 <col:52, col:66> 1
|-FunctionDecl 0x555923ca2c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555923ca2b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555923ca2d30 <line:641:22>
| `-NonNullAttr 0x555923ca2d88 <col:63, col:77> 1
|-FunctionDecl 0x555923ca2e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555923ca2dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555923ca2f38 <line:643:22>
| `-NonNullAttr 0x555923ca2f90 <col:63, col:77> 1
|-FunctionDecl 0x555923ca31b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555923ca2fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x555923ca3058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x555923ca3268 <line:647:22>
| `-NonNullAttr 0x555923ca32c0 <col:63, col:80> 1 2
|-FunctionDecl 0x555923ca34c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x555923ca3308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x555923ca3388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x555923ca3578 <line:650:22>
| `-NonNullAttr 0x555923ca35d0 <col:63, col:77> 1
|-FunctionDecl 0x555923ca3918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x555923ca36b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x555923ca37d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x555923ca39c8 <line:653:22>
| `-NonNullAttr 0x555923ca3a20 <col:63, col:77> 1
|-FunctionDecl 0x555923ca3b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x555923ca3a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555923ca3c30 <col:69>
|-FunctionDecl 0x555923ca3da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x555923ca3c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555923ca3e50 <col:72>
|-FunctionDecl 0x555923ca4088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x555923ca3eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x555923ca3f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x555923ca4138 <col:44>
|-FunctionDecl 0x555923ca4358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x555923ca41a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555923ca4218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x555923ca4408 <line:660:22>
| `-NonNullAttr 0x555923ca4460 <col:63, col:77> 2
|-FunctionDecl 0x555923ca48a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x555923ca4540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x555923ca4650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x555923ca4760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x555923ca4960 <col:47>
|-FunctionDecl 0x555923ca4af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x555923ca49d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555923ca4c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x555923ca4bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x555923ca4d10 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x555923ca4dd0 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x555923ca4e90 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x555923ca4f48 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x555923ca4fc8 prev 0x555923ca4f48 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x555923ca5030 <col:24> 'int' 0
|-VarDecl 0x555923ca5068 <line:672:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x555923ca50e8 prev 0x555923ca5068 <line:673:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x555923ca5150 <col:27> 'int' 0
|-VarDecl 0x555923ca5180 <line:674:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x555923ca51f8 <line:675:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x555923ca5278 <line:676:1, col:5> col:5 used x 'int'
|-VarDecl 0x555923ca52f8 prev 0x555923ca5278 <line:677:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x555923ca5360 <col:9> 'int' 0
|-VarDecl 0x555923ca5398 <line:678:1, col:5> col:5 used y 'int'
|-VarDecl 0x555923ca5418 prev 0x555923ca5398 <line:679:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x555923ca5480 <col:9> 'int' 0
|-VarDecl 0x555923ca54b0 <line:680:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x555923ca5530 <line:681:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x555923ca55a8 <line:682:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x555923ca5620 <line:683:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x555923ca5698 <line:684:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x555923ca5710 <line:685:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x555923ca5788 <line:686:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x555923ca5800 <line:687:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x555923ca5878 <line:688:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x555923ca58f8 <line:689:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x555923ca5978 <line:690:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x555923ca59f0 <line:691:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x555923ca5a70 <line:692:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x555923ca5b00 <line:693:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x555923ca5b78 <line:694:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x555923ca5bf0 <line:695:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x555923ca5d08 prev 0x555923ca4af0 <line:696:1, line:723:1> line:696:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x555923ca5c70 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555923ca74b8 <line:697:1, line:723:1>
|   |-CallExpr 0x555923ca5e18 <line:698:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555923ca5e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923ca5db0 <col:3> 'void ()' Function 0x555923c4be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555923ca5e90 <line:699:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555923ca5e38 <col:3> 'int' lvalue Var 0x555923ca5a70 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x555923ca5e78 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555923ca5e58 <col:15> 'int' lvalue Var 0x555923ca5978 'y$w_buff0' 'int'
|   |-BinaryOperator 0x555923ca5ef0 <line:700:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555923ca5eb0 <col:3> 'int' lvalue Var 0x555923ca5978 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x555923ca5ed0 <col:15> 'int' 1
|   |-BinaryOperator 0x555923ca5f68 <line:701:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca5f10 <col:3> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca5f50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555923ca5f30 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555923ca6000 <line:702:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca5f88 <col:3> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x555923ca5fd8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555923ca5fa8 <col:27> 'int' 1
|   |-CallExpr 0x555923ca6188 <line:703:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x555923ca6170 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x555923ca6020 <col:3> 'void (int)' Function 0x555923c4bbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x555923ca6120 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x555923ca6100 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x555923ca60e0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x555923ca6098 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x555923ca6080 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x555923ca6040 <col:23> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x555923ca60c8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x555923ca60b0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x555923ca6060 <col:41> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555923ca6208 <line:704:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca61b0 <col:3> '_Bool' lvalue Var 0x555923ca5710 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca61f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555923ca61d0 <col:20> '_Bool' lvalue Var 0x555923ca55a8 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x555923ca6280 <line:705:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca6228 <col:3> '_Bool' lvalue Var 0x555923ca5788 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca6268 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555923ca6248 <col:20> '_Bool' lvalue Var 0x555923ca5620 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555923ca62f8 <line:706:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca62a0 <col:3> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca62e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555923ca62c0 <col:20> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555923ca6390 <line:707:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca6318 <col:3> '_Bool' lvalue Var 0x555923ca5620 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x555923ca6368 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555923ca6338 <col:27> 'int' 1
|   |-CallExpr 0x555923ca63e8 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555923ca63d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923ca63b0 <col:3> 'void ()' Function 0x555923c4bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555923ca6440 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555923ca6428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923ca6408 <col:3> 'void ()' Function 0x555923c4be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555923ca64a0 <line:710:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555923ca6460 <col:3> 'int' lvalue Var 0x555923ca52f8 'x' 'int'
|   | `-IntegerLiteral 0x555923ca6480 <col:7> 'int' 1
|   |-CallExpr 0x555923ca64f8 <line:711:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555923ca64e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923ca64c0 <col:3> 'void ()' Function 0x555923c4bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555923ca6550 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555923ca6538 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923ca6518 <col:3> 'void ()' Function 0x555923c4be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555923ca6838 <line:713:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555923ca6570 <col:3> 'int' lvalue Var 0x555923ca5418 'y' 'int'
|   | `-ConditionalOperator 0x555923ca6808 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555923ca6630 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555923ca65e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555923ca65d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555923ca6590 <col:7> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555923ca6618 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555923ca6600 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555923ca65b0 <col:25> '_Bool' lvalue Var 0x555923ca5620 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x555923ca67f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555923ca6650 <col:42> 'int' lvalue Var 0x555923ca5978 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x555923ca67d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555923ca67a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555923ca6710 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555923ca66c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555923ca66b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555923ca6670 <col:55> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555923ca66f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555923ca66e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555923ca6690 <col:73> '_Bool' lvalue Var 0x555923ca5788 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x555923ca6770 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555923ca6730 <col:90> 'int' lvalue Var 0x555923ca5a70 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555923ca6788 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555923ca6750 <col:102> 'int' lvalue Var 0x555923ca5418 'y' 'int'
|   |-BinaryOperator 0x555923ca6a40 <line:714:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca6858 <col:3> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca6a28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923ca69f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555923ca6918 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555923ca68d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555923ca68b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555923ca6878 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555923ca6900 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555923ca68e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555923ca6898 <col:38> '_Bool' lvalue Var 0x555923ca5620 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555923ca69b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555923ca6968 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555923ca6938 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555923ca69e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555923ca69c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555923ca6990 <col:66> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555923ca6d48 <line:715:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca6a60 <col:3> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca6d30 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923ca6d00 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555923ca6c20 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555923ca6b40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555923ca6ad8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555923ca6ac0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555923ca6a80 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555923ca6b28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555923ca6b10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555923ca6aa0 <col:38> '_Bool' lvalue Var 0x555923ca5620 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x555923ca6c00 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555923ca6bb8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555923ca6ba0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555923ca6b60 <col:56> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555923ca6be8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555923ca6bd0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555923ca6b80 <col:74> '_Bool' lvalue Var 0x555923ca5788 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555923ca6cb8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555923ca6c70 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555923ca6c40 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555923ca6ce8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555923ca6cd0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555923ca6c98 <col:102> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555923ca6f50 <line:716:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca6d68 <col:3> '_Bool' lvalue Var 0x555923ca5620 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca6f38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923ca6f08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555923ca6e28 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555923ca6de0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555923ca6dc8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555923ca6d88 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555923ca6e10 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555923ca6df8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555923ca6da8 <col:38> '_Bool' lvalue Var 0x555923ca5620 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555923ca6ec0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555923ca6e78 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555923ca6e48 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555923ca6ef0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555923ca6ed8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555923ca6ea0 <col:66> '_Bool' lvalue Var 0x555923ca5620 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x555923ca7238 <line:717:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca6f70 <col:3> '_Bool' lvalue Var 0x555923ca5788 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca7220 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923ca71f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555923ca7110 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555923ca7030 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555923ca6fe8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555923ca6fd0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555923ca6f90 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555923ca7018 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555923ca7000 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555923ca6fb0 <col:38> '_Bool' lvalue Var 0x555923ca5620 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x555923ca70f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555923ca70a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555923ca7090 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555923ca7050 <col:56> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555923ca70d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555923ca70c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555923ca7070 <col:74> '_Bool' lvalue Var 0x555923ca5788 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x555923ca71a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555923ca7160 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555923ca7130 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555923ca71d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555923ca71c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555923ca7188 <col:102> '_Bool' lvalue Var 0x555923ca5788 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x555923ca7290 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555923ca7278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923ca7258 <col:3> 'void ()' Function 0x555923c4bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555923ca72e8 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555923ca72d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923ca72b0 <col:3> 'void ()' Function 0x555923c4be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555923ca73a0 <line:720:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555923ca7308 <col:3> 'int' lvalue Var 0x555923ca4fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555923ca7380 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555923ca7368 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555923ca7328 <col:22> 'int' lvalue Var 0x555923ca4fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555923ca7348 <col:41> 'int' 1
|   |-CallExpr 0x555923ca73f8 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555923ca73e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923ca73c0 <col:3> 'void ()' Function 0x555923c4bf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555923ca74a8 <line:722:3, col:36>
|     `-CallExpr 0x555923ca7488 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555923ca7470 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555923ca7418 <col:10> 'void *(void)' Function 0x555923c4b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555923ca7640 prev 0x555923ca4c48 <line:724:1, line:756:1> line:724:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x555923ca75a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555923cab208 <line:725:1, line:756:1>
|   |-CallExpr 0x555923ca7720 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555923ca7708 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923ca76e8 <col:3> 'void ()' Function 0x555923c4be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555923ca7780 <line:727:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x555923ca7740 <col:3> 'int' lvalue Var 0x555923ca52f8 'x' 'int'
|   | `-IntegerLiteral 0x555923ca7760 <col:7> 'int' 2
|   |-CallExpr 0x555923ca77d8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555923ca77c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923ca77a0 <col:3> 'void ()' Function 0x555923c4bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555923ca7830 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555923ca7818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923ca77f8 <col:3> 'void ()' Function 0x555923c4be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555923ca78e0 <line:730:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca7850 <col:3> '_Bool' lvalue Var 0x555923ca5b78 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca78c8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x555923ca78a8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x555923ca7890 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x555923ca7870 <col:19> 'void *(void)' Function 0x555923c4b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x555923ca7990 <line:731:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca7900 <col:3> '_Bool' lvalue Var 0x555923ca5bf0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca7978 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x555923ca7958 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x555923ca7940 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x555923ca7920 <col:19> 'void *(void)' Function 0x555923c4b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x555923ca7a08 <line:732:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca79b0 <col:3> '_Bool' lvalue Var 0x555923ca54b0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca79f0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x555923ca79d0 <col:21> '_Bool' lvalue Var 0x555923ca5bf0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x555923ca7a80 <line:733:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x555923ca7a28 <col:3> 'int' lvalue Var 0x555923ca5530 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x555923ca7a68 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555923ca7a48 <col:15> 'int' lvalue Var 0x555923ca5418 'y' 'int'
|   |-BinaryOperator 0x555923ca7ec8 <line:734:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x555923ca7aa0 <col:3> 'int' lvalue Var 0x555923ca5418 'y' 'int'
|   | `-ConditionalOperator 0x555923ca7e98 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x555923ca7cc0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x555923ca7be0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x555923ca7af8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x555923ca7ae0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x555923ca7ac0 <col:8> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x555923ca7bc0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x555923ca7b58 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x555923ca7b40 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x555923ca7b20 <col:27> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x555923ca7ba8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x555923ca7b90 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x555923ca7b70 <col:46> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x555923ca7ca0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x555923ca7c38 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x555923ca7c20 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x555923ca7c00 <col:65> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x555923ca7c88 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x555923ca7c70 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x555923ca7c50 <col:84> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x555923ca7e80 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555923ca7ce0 <col:101> 'int' lvalue Var 0x555923ca5418 'y' 'int'
|   |   `-ParenExpr 0x555923ca7e60 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x555923ca7e30 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x555923ca7da0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555923ca7d58 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555923ca7d40 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555923ca7d00 <col:106> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555923ca7d88 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555923ca7d70 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555923ca7d20 <col:124> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x555923ca7e00 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555923ca7dc0 <col:141> 'int' lvalue Var 0x555923ca5978 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x555923ca7e18 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555923ca7de0 <col:153> 'int' lvalue Var 0x555923ca5a70 'y$w_buff1' 'int'
|   |-BinaryOperator 0x555923ca83d8 <line:735:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555923ca7ee8 <col:3> 'int' lvalue Var 0x555923ca5978 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x555923ca83a8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555923ca8378 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555923ca8360 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555923ca7f08 <col:15> '_Bool' lvalue Var 0x555923ca5bf0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555923ca8390 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555923ca7f28 <col:31> 'int' lvalue Var 0x555923ca5978 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x555923ca8340 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555923ca8310 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555923ca8138 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555923ca8058 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555923ca7f80 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555923ca7f68 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555923ca7f48 <col:45> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555923ca8038 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555923ca7fd0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555923ca7fb8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555923ca7f98 <col:64> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x555923ca8020 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555923ca8008 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555923ca7fe8 <col:83> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555923ca8118 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555923ca80b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555923ca8098 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555923ca8078 <col:102> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x555923ca8100 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555923ca80e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555923ca80c8 <col:121> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x555923ca82f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555923ca8158 <col:138> 'int' lvalue Var 0x555923ca5978 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x555923ca82d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555923ca82a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555923ca8218 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555923ca81d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555923ca81b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555923ca8178 <col:151> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555923ca8200 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555923ca81e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555923ca8198 <col:169> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x555923ca8278 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555923ca8238 <col:186> 'int' lvalue Var 0x555923ca5978 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x555923ca8290 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555923ca8258 <col:198> 'int' lvalue Var 0x555923ca5978 'y$w_buff0' 'int'
|   |-BinaryOperator 0x555923ca88e8 <line:736:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x555923ca83f8 <col:3> 'int' lvalue Var 0x555923ca5a70 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x555923ca88b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x555923ca8888 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555923ca8870 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555923ca8418 <col:15> '_Bool' lvalue Var 0x555923ca5bf0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x555923ca88a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555923ca8438 <col:31> 'int' lvalue Var 0x555923ca5a70 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x555923ca8850 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x555923ca8820 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x555923ca8648 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x555923ca8568 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x555923ca8490 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x555923ca8478 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x555923ca8458 <col:45> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x555923ca8548 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x555923ca84e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x555923ca84c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x555923ca84a8 <col:64> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x555923ca8530 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x555923ca8518 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x555923ca84f8 <col:83> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x555923ca8628 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x555923ca85c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x555923ca85a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x555923ca8588 <col:102> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x555923ca8610 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x555923ca85f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x555923ca85d8 <col:121> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x555923ca8808 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555923ca8668 <col:138> 'int' lvalue Var 0x555923ca5a70 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x555923ca87e8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x555923ca87b8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x555923ca8728 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x555923ca86e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x555923ca86c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x555923ca8688 <col:151> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x555923ca8710 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x555923ca86f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x555923ca86a8 <col:169> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x555923ca8788 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x555923ca8748 <col:186> 'int' lvalue Var 0x555923ca5a70 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x555923ca87a0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x555923ca8768 <col:198> 'int' lvalue Var 0x555923ca5a70 'y$w_buff1' 'int'
|   |-BinaryOperator 0x555923ca8ea0 <line:737:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca8908 <col:3> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca8e88 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923ca8e58 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555923ca8e10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555923ca8df8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555923ca8928 <col:20> '_Bool' lvalue Var 0x555923ca5bf0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555923ca8e40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555923ca8e28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555923ca8948 <col:36> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x555923ca8dd8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555923ca8da8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555923ca8b68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555923ca8a78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555923ca89a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555923ca8988 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555923ca8968 <col:55> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555923ca8a58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555923ca89f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555923ca89d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555923ca89b8 <col:74> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x555923ca8a40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555923ca8a28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555923ca8a08 <col:93> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555923ca8b48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555923ca8ad0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555923ca8ab8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555923ca8a98 <col:112> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x555923ca8b30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555923ca8b08 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555923ca8ae8 <col:131> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x555923ca8d90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555923ca8d78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555923ca8b88 <col:148> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x555923ca8d58 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555923ca8d28 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555923ca8c48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555923ca8c00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555923ca8be8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555923ca8ba8 <col:166> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555923ca8c30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555923ca8c18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555923ca8bc8 <col:184> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x555923ca8ce0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555923ca8c98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555923ca8c68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555923ca8d10 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555923ca8cf8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555923ca8cc0 <col:212> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555923ca9468 <line:738:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca8ec0 <col:3> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca9450 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923ca9420 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555923ca93d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555923ca93c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555923ca8ee0 <col:20> '_Bool' lvalue Var 0x555923ca5bf0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555923ca9408 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555923ca93f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555923ca8f00 <col:36> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x555923ca93a0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555923ca9370 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555923ca9110 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555923ca9030 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555923ca8f58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555923ca8f40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555923ca8f20 <col:55> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555923ca9010 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555923ca8fa8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555923ca8f90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555923ca8f70 <col:74> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x555923ca8ff8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555923ca8fe0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555923ca8fc0 <col:93> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555923ca90f0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555923ca9088 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555923ca9070 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555923ca9050 <col:112> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x555923ca90d8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555923ca90c0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555923ca90a0 <col:131> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x555923ca9358 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555923ca9340 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555923ca9130 <col:148> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x555923ca9320 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555923ca92f0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555923ca91f0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555923ca91a8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555923ca9190 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555923ca9150 <col:166> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555923ca91d8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555923ca91c0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555923ca9170 <col:184> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x555923ca92c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555923ca9240 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555923ca9210 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555923ca92d8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555923ca9298 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555923ca9268 <col:219> 'int' 0
|   |-BinaryOperator 0x555923ca9a10 <line:739:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca9488 <col:3> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca99f8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923ca99c8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555923ca9980 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555923ca9968 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555923ca94a8 <col:20> '_Bool' lvalue Var 0x555923ca5bf0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555923ca99b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555923ca9998 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555923ca94c8 <col:36> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x555923ca9948 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555923ca9918 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555923ca96d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555923ca95f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555923ca9520 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555923ca9508 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555923ca94e8 <col:55> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555923ca95d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555923ca9570 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555923ca9558 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555923ca9538 <col:74> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x555923ca95c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555923ca95a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555923ca9588 <col:93> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555923ca96b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555923ca9650 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555923ca9638 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555923ca9618 <col:112> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x555923ca96a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555923ca9688 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555923ca9668 <col:131> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x555923ca9900 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555923ca98e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555923ca96f8 <col:148> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x555923ca98c8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555923ca9898 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555923ca97b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555923ca9770 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555923ca9758 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555923ca9718 <col:166> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555923ca97a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555923ca9788 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555923ca9738 <col:184> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x555923ca9850 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555923ca9808 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555923ca97d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555923ca9880 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x555923ca9868 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x555923ca9830 <col:212> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555923ca9fe8 <line:740:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x555923ca9a30 <col:3> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555923ca9fd0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923ca9fa0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555923ca9f58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555923ca9f40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555923ca9a50 <col:20> '_Bool' lvalue Var 0x555923ca5bf0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555923ca9f88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555923ca9f70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555923ca9a70 <col:36> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x555923ca9f20 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555923ca9ef0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555923ca9c90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555923ca9bb0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555923ca9ac8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555923ca9ab0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555923ca9a90 <col:55> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555923ca9b90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555923ca9b18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555923ca9b00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555923ca9ae0 <col:74> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x555923ca9b78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555923ca9b60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555923ca9b40 <col:93> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555923ca9c70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555923ca9c08 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555923ca9bf0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555923ca9bd0 <col:112> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x555923ca9c58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555923ca9c40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555923ca9c20 <col:131> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x555923ca9ed8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555923ca9ec0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555923ca9cb0 <col:148> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x555923ca9ea0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555923ca9e70 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555923ca9d70 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555923ca9d28 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555923ca9d10 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555923ca9cd0 <col:166> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555923ca9d58 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555923ca9d40 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555923ca9cf0 <col:184> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x555923ca9e40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555923ca9dc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555923ca9d90 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555923ca9e58 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555923ca9e18 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555923ca9de8 <col:219> 'int' 0
|   |-BinaryOperator 0x555923caa060 <line:741:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555923caa008 <col:3> 'int' lvalue Var 0x555923ca50e8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x555923caa048 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555923caa028 <col:25> 'int' lvalue Var 0x555923ca5418 'y' 'int'
|   |-BinaryOperator 0x555923caa190 <line:742:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x555923caa080 <col:3> 'int' lvalue Var 0x555923ca5418 'y' 'int'
|   | `-ConditionalOperator 0x555923caa160 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x555923caa118 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555923caa100 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555923caa0a0 <col:7> '_Bool' lvalue Var 0x555923ca54b0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x555923caa130 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555923caa0c0 <col:25> 'int' lvalue Var 0x555923ca5530 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x555923caa148 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x555923caa0e0 <col:37> 'int' lvalue Var 0x555923ca5418 'y' 'int'
|   |-BinaryOperator 0x555923caa228 <line:743:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x555923caa1b0 <col:3> '_Bool' lvalue Var 0x555923ca54b0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x555923caa200 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555923caa1d0 <col:28> 'int' 0
|   |-CallExpr 0x555923caa280 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555923caa268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923caa248 <col:3> 'void ()' Function 0x555923c4bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555923caa2d8 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555923caa2c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923caa2a0 <col:3> 'void ()' Function 0x555923c4be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555923caa5c0 <line:746:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555923caa2f8 <col:3> 'int' lvalue Var 0x555923ca5418 'y' 'int'
|   | `-ConditionalOperator 0x555923caa590 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555923caa3b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x555923caa370 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x555923caa358 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x555923caa318 <col:7> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555923caa3a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555923caa388 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x555923caa338 <col:25> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x555923caa578 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555923caa3d8 <col:42> 'int' lvalue Var 0x555923ca5978 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x555923caa558 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x555923caa528 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555923caa498 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x555923caa450 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x555923caa438 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555923caa3f8 <col:55> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555923caa480 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x555923caa468 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x555923caa418 <col:73> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x555923caa4f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555923caa4b8 <col:90> 'int' lvalue Var 0x555923ca5a70 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555923caa510 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555923caa4d8 <col:102> 'int' lvalue Var 0x555923ca5418 'y' 'int'
|   |-BinaryOperator 0x555923caa7c8 <line:747:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555923caa5e0 <col:3> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555923caa7b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923caa780 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555923caa6a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555923caa658 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555923caa640 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555923caa600 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555923caa688 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555923caa670 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555923caa620 <col:38> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555923caa738 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555923caa6f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555923caa6c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555923caa768 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555923caa750 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555923caa718 <col:66> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555923caaab0 <line:748:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555923caa7e8 <col:3> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555923caaa98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923caaa68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555923caa988 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555923caa8a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555923caa860 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555923caa848 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555923caa808 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555923caa890 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555923caa878 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555923caa828 <col:38> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x555923caa968 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555923caa920 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555923caa908 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555923caa8c8 <col:56> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555923caa950 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555923caa938 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555923caa8e8 <col:74> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555923caaa20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555923caa9d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555923caa9a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555923caaa50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555923caaa38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555923caaa00 <col:102> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555923caacd8 <line:749:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555923caaad0 <col:3> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555923caacc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923caac90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555923caabb0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x555923caab68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x555923caab50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555923caaaf0 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555923caab98 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x555923caab80 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555923caab10 <col:38> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555923caac48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555923caac00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555923caabd0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x555923caac78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555923caac60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555923caac28 <col:66> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x555923caafc0 <line:750:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555923caacf8 <col:3> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x555923caafa8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555923caaf78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555923caae98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555923caadb8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555923caad70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555923caad58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555923caad18 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555923caada0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555923caad88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555923caad38 <col:38> '_Bool' lvalue Var 0x555923ca5698 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x555923caae78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555923caae30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555923caae18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555923caadd8 <col:56> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555923caae60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555923caae48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555923caadf8 <col:74> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x555923caaf30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555923caaee8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555923caaeb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555923caaf60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555923caaf48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555923caaf10 <col:102> '_Bool' lvalue Var 0x555923ca5800 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x555923cab018 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555923cab000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923caafe0 <col:3> 'void ()' Function 0x555923c4bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555923cab070 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555923cab058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923cab038 <col:3> 'void ()' Function 0x555923c4be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555923cab128 <line:753:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555923cab090 <col:3> 'int' lvalue Var 0x555923ca4fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555923cab108 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555923cab0f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555923cab0b0 <col:22> 'int' lvalue Var 0x555923ca4fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555923cab0d0 <col:41> 'int' 1
|   |-CallExpr 0x555923cab180 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555923cab168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555923cab148 <col:3> 'void ()' Function 0x555923c4bf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555923cab1f8 <line:755:3, col:36>
|     `-CallExpr 0x555923cab1d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555923cab1c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555923cab1a0 <col:10> 'void *(void)' Function 0x555923c4b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555923cab328 prev 0x555923ca4d10 <line:757:1, line:759:1> line:757:6 fence 'void ()'
| `-CompoundStmt 0x555923cab3c8 <line:758:1, line:759:1>
|-FunctionDecl 0x555923cab3f8 prev 0x555923ca4dd0 <line:760:1, line:762:1> line:760:6 isync 'void ()'
| `-CompoundStmt 0x555923cab498 <line:761:1, line:762:1>
|-FunctionDecl 0x555923cab4c8 prev 0x555923ca4e90 <line:763:1, line:765:1> line:763:6 lwfence 'void ()'
| `-CompoundStmt 0x555923cab568 <line:764:1, line:765:1>
`-FunctionDecl 0x555923cab5d8 <line:766:1, line:788:1> line:766:5 main 'int ()'
  `-CompoundStmt 0x555923cacef8 <line:767:1, line:788:1>
    |-DeclStmt 0x555923cab6f0 <line:768:3, col:18>
    | `-VarDecl 0x555923cab688 <col:3, col:13> col:13 used t1445 'pthread_t':'unsigned long'
    |-CallExpr 0x555923cab8f8 <line:769:3, col:54> 'int'
    | |-ImplicitCastExpr 0x555923cab8e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555923cab708 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555923c8c488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555923cab748 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555923cab728 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555923cab688 't1445' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555923cab938 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555923cab7c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x555923cab798 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555923cab760 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x555923cab950 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555923cab7e0 <col:39> 'void *(void *)' Function 0x555923ca5d08 'P0' 'void *(void *)'
    | `-ParenExpr 0x555923cab860 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x555923cab838 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555923cab800 <col:52> 'int' 0
    |-DeclStmt 0x555923cab9e0 <line:770:3, col:18>
    | `-VarDecl 0x555923cab978 <col:3, col:13> col:13 used t1446 'pthread_t':'unsigned long'
    |-CallExpr 0x555923cabb98 <line:771:3, col:54> 'int'
    | |-ImplicitCastExpr 0x555923cabb80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555923cab9f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x555923c8c488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555923caba38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555923caba18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555923cab978 't1446' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555923cabbd8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555923cabab0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x555923caba88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555923caba50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x555923cabbf0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555923cabad0 <col:39> 'void *(void *)' Function 0x555923ca7640 'P1' 'void *(void *)'
    | `-ParenExpr 0x555923cabb60 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x555923cabb28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555923cabaf0 <col:52> 'int' 0
    |-CallExpr 0x555923cabc40 <line:772:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555923cabc28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555923cabc08 <col:3> 'void ()' Function 0x555923c4be40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555923cabd10 <line:773:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x555923cabc60 <col:3> '_Bool' lvalue Var 0x555923ca5180 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x555923cabcf8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x555923cabcd8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x555923cabcc0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x555923cabc80 <col:21> 'int' lvalue Var 0x555923ca4fc8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x555923cabca0 <col:41> 'int' 2
    |-CallExpr 0x555923cabd68 <line:774:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555923cabd50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555923cabd30 <col:3> 'void ()' Function 0x555923c4bf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555923cabde0 <line:775:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555923cabdc8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555923cabd88 <col:3> 'void (int)' Function 0x555923c4b790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x555923cabe20 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555923cabe08 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555923cabda8 <col:21> '_Bool' lvalue Var 0x555923ca5180 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x555923cabe70 <line:776:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555923cabe58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555923cabe38 <col:3> 'void ()' Function 0x555923c4be40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555923cac158 <line:777:3, col:103> 'int' '='
    | |-DeclRefExpr 0x555923cabe90 <col:3> 'int' lvalue Var 0x555923ca5418 'y' 'int'
    | `-ConditionalOperator 0x555923cac128 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x555923cabf50 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x555923cabf08 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x555923cabef0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x555923cabeb0 <col:7> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x555923cabf38 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x555923cabf20 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x555923cabed0 <col:25> '_Bool' lvalue Var 0x555923ca55a8 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x555923cac110 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x555923cabf70 <col:42> 'int' lvalue Var 0x555923ca5978 'y$w_buff0' 'int'
    |   `-ParenExpr 0x555923cac0f0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x555923cac0c0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x555923cac030 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x555923cabfe8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x555923cabfd0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x555923cabf90 <col:55> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x555923cac018 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x555923cac000 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x555923cabfb0 <col:73> '_Bool' lvalue Var 0x555923ca5710 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x555923cac090 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x555923cac050 <col:90> 'int' lvalue Var 0x555923ca5a70 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x555923cac0a8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x555923cac070 <col:102> 'int' lvalue Var 0x555923ca5418 'y' 'int'
    |-BinaryOperator 0x555923cac360 <line:778:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555923cac178 <col:3> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x555923cac348 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555923cac318 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555923cac238 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555923cac1f0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555923cac1d8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555923cac198 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555923cac220 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555923cac208 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555923cac1b8 <col:38> '_Bool' lvalue Var 0x555923ca55a8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555923cac2d0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555923cac288 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555923cac258 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555923cac300 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555923cac2e8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555923cac2b0 <col:66> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x555923cac648 <line:779:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555923cac380 <col:3> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x555923cac630 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555923cac600 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555923cac520 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555923cac440 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555923cac3f8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555923cac3e0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555923cac3a0 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555923cac428 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555923cac410 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555923cac3c0 <col:38> '_Bool' lvalue Var 0x555923ca55a8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555923cac500 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555923cac4b8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555923cac4a0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555923cac460 <col:56> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555923cac4e8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555923cac4d0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555923cac480 <col:74> '_Bool' lvalue Var 0x555923ca5710 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555923cac5b8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555923cac570 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555923cac540 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555923cac5e8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555923cac5d0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555923cac598 <col:102> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x555923cac850 <line:780:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x555923cac668 <col:3> '_Bool' lvalue Var 0x555923ca55a8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555923cac838 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555923cac808 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555923cac728 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555923cac6e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555923cac6c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x555923cac688 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555923cac710 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555923cac6f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555923cac6a8 <col:38> '_Bool' lvalue Var 0x555923ca55a8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555923cac7c0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555923cac778 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555923cac748 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555923cac7f0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555923cac7d8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555923cac7a0 <col:66> '_Bool' lvalue Var 0x555923ca55a8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x555923cacb38 <line:781:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x555923cac870 <col:3> '_Bool' lvalue Var 0x555923ca5710 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555923cacb20 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555923cacaf0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555923caca10 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555923cac930 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555923cac8e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555923cac8d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555923cac890 <col:20> '_Bool' lvalue Var 0x555923ca59f0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555923cac918 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555923cac900 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555923cac8b0 <col:38> '_Bool' lvalue Var 0x555923ca55a8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555923cac9f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555923cac9a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555923cac990 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x555923cac950 <col:56> '_Bool' lvalue Var 0x555923ca5b00 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555923cac9d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555923cac9c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x555923cac970 <col:74> '_Bool' lvalue Var 0x555923ca5710 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555923cacaa8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555923caca60 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555923caca30 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555923cacad8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555923cacac0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555923caca88 <col:102> '_Bool' lvalue Var 0x555923ca5710 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x555923cacba8 <line:782:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555923cacb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555923cacb70 <col:3> 'void ()' Function 0x555923c4bf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555923cacc00 <line:783:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555923cacbe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555923cacbc8 <col:3> 'void ()' Function 0x555923c4be40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555923cacda0 <line:784:3, col:57> '_Bool' '='
    | |-DeclRefExpr 0x555923cacc20 <col:3> '_Bool' lvalue Var 0x555923ca51f8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x555923cacd88 <col:21, col:57> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x555923cacd70 <col:21, col:57> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x555923cacd50 <col:22, col:57> 'int'
    |       `-BinaryOperator 0x555923cacd30 <col:23, col:56> 'int' '&&'
    |         |-BinaryOperator 0x555923cacc98 <col:23, col:28> 'int' '=='
    |         | |-ImplicitCastExpr 0x555923cacc80 <col:23> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x555923cacc40 <col:23> 'int' lvalue Var 0x555923ca52f8 'x' 'int'
    |         | `-IntegerLiteral 0x555923cacc60 <col:28> 'int' 2
    |         `-BinaryOperator 0x555923cacd10 <col:33, col:56> 'int' '=='
    |           |-ImplicitCastExpr 0x555923caccf8 <col:33> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x555923caccb8 <col:33> 'int' lvalue Var 0x555923ca50e8 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x555923caccd8 <col:56> 'int' 0
    |-CallExpr 0x555923cacdf8 <line:785:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555923cacde0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555923cacdc0 <col:3> 'void ()' Function 0x555923c4bf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555923cace70 <line:786:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555923cace58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555923cace18 <col:3> 'void (int)' Function 0x555923c4bbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x555923caceb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555923cace98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555923cace38 <col:21> '_Bool' lvalue Var 0x555923ca51f8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x555923cacee8 <line:787:3, col:10>
      `-IntegerLiteral 0x555923cacec8 <col:10> 'int' 0
