TranslationUnitDecl 0x56496afd8e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56496afd96d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56496afd93b0 '__int128'
|-TypedefDecl 0x56496afd9748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56496afd93d0 'unsigned __int128'
|-TypedefDecl 0x56496afd9a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56496afd9820 'struct __NSConstantString_tag'
|   `-Record 0x56496afd97a0 '__NSConstantString_tag'
|-TypedefDecl 0x56496afd9af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56496afd9ab0 'char *'
|   `-BuiltinType 0x56496afd8eb0 'char'
|-TypedefDecl 0x56496b018650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56496afd9d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56496afd9bd0 'struct __va_list_tag'
|     `-Record 0x56496afd9b50 '__va_list_tag'
|-FunctionDecl 0x56496b018790 <./test/mix007_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56496b0186c0 <col:31> col:34 'int'
|-FunctionDecl 0x56496b018958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56496b018a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56496b018bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56496b018b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56496b018df8 <col:40, col:99>
|   |-IfStmt 0x56496b018dc8 <col:42, col:88>
|   | |-UnaryOperator 0x56496b018ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56496b018c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56496b018c70 <col:47> 'int' lvalue ParmVar 0x56496b018b38 'expression' 'int'
|   | `-CompoundStmt 0x56496b018db0 <col:59, col:88>
|   |   `-LabelStmt 0x56496b018d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56496b018d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56496b018d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56496b018cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x56496b018a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56496b018de0 <col:89>
|   `-ReturnStmt 0x56496b018de8 <col:91>
|-FunctionDecl 0x56496b018e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56496b018f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56496b019280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56496b018fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56496b019038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56496b0190b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56496b019138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56496b019340 <line:10:22>
|-FunctionDecl 0x56496b03f390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56496b0193b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56496b019430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56496b0194b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56496b019530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56496b03f450 <line:13:22>
|-FunctionDecl 0x56496b03f700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56496b03f4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56496b03f540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56496b03f5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56496b03f7b8 <line:15:22>
|-TypedefDecl 0x56496b03f828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56496afd8f70 'unsigned char'
|-TypedefDecl 0x56496b03f898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56496afd8f90 'unsigned short'
|-TypedefDecl 0x56496b03f908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56496afd8fb0 'unsigned int'
|-TypedefDecl 0x56496b03f978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b03f9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56496afd8ed0 'signed char'
|-TypedefDecl 0x56496b03fa58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56496afd8f70 'unsigned char'
|-TypedefDecl 0x56496b03fac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56496afd8ef0 'short'
|-TypedefDecl 0x56496b03fb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56496afd8f90 'unsigned short'
|-TypedefDecl 0x56496b03fba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56496afd8f10 'int'
|-TypedefDecl 0x56496b03fc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56496afd8fb0 'unsigned int'
|-TypedefDecl 0x56496b03fc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b03fcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b03fd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b03fdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b03fe48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b03feb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56496afd8fb0 'unsigned int'
|-TypedefDecl 0x56496b03ff28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56496afd8fb0 'unsigned int'
|-TypedefDecl 0x56496b03ff98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b040008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b040078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56496afd8fb0 'unsigned int'
|-TypedefDecl 0x56496b0400e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b040158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b0401c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b040238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56496afd8f10 'int'
|-RecordDecl 0x56496b040290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56496b040408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56496b0404c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56496b040460 'struct __fsid_t' sugar
|   `-RecordType 0x56496b040310 '__fsid_t'
|     `-Record 0x56496b040290 ''
|-TypedefDecl 0x56496b040548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b0405b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b040628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b040698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56496afd8fb0 'unsigned int'
|-TypedefDecl 0x56496b040708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b040778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56496afd8fb0 'unsigned int'
|-TypedefDecl 0x56496b0407e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b040858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56496afd8f10 'int'
|-TypedefDecl 0x56496b0408c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56496afd8f10 'int'
|-TypedefDecl 0x56496b040938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56496afd8f10 'int'
|-TypedefDecl 0x56496b0409a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56496afd9630 'void *'
|   `-BuiltinType 0x56496afd8e70 'void'
|-TypedefDecl 0x56496b040a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b040a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b040af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b040b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b040bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b040c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b040cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b040d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b040d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b040e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b040e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b040f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56496b040ed0 '__off64_t' sugar
|   |-Typedef 0x56496b0401c8 '__off64_t'
|   `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b041000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56496b040fc0 '__quad_t *'
|   `-TypedefType 0x56496b040f60 '__quad_t' sugar
|     |-Typedef 0x56496b03fd68 '__quad_t'
|     `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b041070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56496afd9ab0 'char *'
|   `-BuiltinType 0x56496afd8eb0 'char'
|-TypedefDecl 0x56496b0410e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b041150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56496afd8fb0 'unsigned int'
|-FunctionDecl 0x56496b041298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56496b0411c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56496b0425e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56496b0425d8 <line:72:3, col:34>
|     `-CallExpr 0x56496b042598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56496b042580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56496b042510 <col:10> '<builtin fn type>' Function 0x56496b042380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56496b0425c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56496b042530 <col:29> 'unsigned int' lvalue ParmVar 0x56496b0411c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56496b042380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56496b042420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56496b042490 <col:10> Implicit
| `-ConstAttr 0x56496b0424e8 <col:10> Implicit
|-FunctionDecl 0x56496b042740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56496b042638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56496b042a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56496b042a48 <line:77:3, col:34>
|     `-CallExpr 0x56496b042a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56496b0429f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56496b042978 <col:10> '<builtin fn type>' Function 0x56496b0427e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56496b042a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56496b042998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56496b042638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56496b0427e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56496b042888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56496b0428f8 <col:10> Implicit
| `-ConstAttr 0x56496b042950 <col:10> Implicit
|-TypedefDecl 0x56496b042a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-TypedefDecl 0x56496b042b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56496b042ae0 '__time_t' sugar
|   |-Typedef 0x56496b040708 '__time_t'
|   `-BuiltinType 0x56496afd8f30 'long'
|-RecordDecl 0x56496b042b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56496b042c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56496b042cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56496b042d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56496b042d10 '__pid_t' sugar
|   |-Typedef 0x56496b040238 '__pid_t'
|   `-BuiltinType 0x56496afd8f10 'int'
|-RecordDecl 0x56496b042da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56496b042e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56496b042eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56496b042f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56496b042fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-RecordDecl 0x56496b043030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56496b0432c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56496b0443a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56496b043310 'struct cpu_set_t' sugar
|   `-RecordType 0x56496b0430b0 'cpu_set_t'
|     `-Record 0x56496b043030 ''
|-FunctionDecl 0x56496b044678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56496b044448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56496b044550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56496b044728 <line:107:19>
|-FunctionDecl 0x56496b044900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56496b044790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56496b0449a8 <col:69>
|-FunctionDecl 0x56496b044b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56496b044a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56496b044bc8 <col:64>
|-FunctionDecl 0x56496b044e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56496b044c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56496b044d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56496b044f38 <line:113:22>
|-FunctionDecl 0x56496b0451b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56496b044fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56496b045098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56496b045268 <col:88>
|-FunctionDecl 0x56496b045588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56496b0452d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56496b0453b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56496b045440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56496b045640 <col:62>
|-FunctionDecl 0x56496b0457b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56496b0456a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56496b045860 <col:63>
|-FunctionDecl 0x56496b045988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56496b045a28 <col:47>
|-FunctionDecl 0x56496b045b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56496b045a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56496b045bd8 <col:69>
|-FunctionDecl 0x56496b045ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56496b045c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56496b045d88 <col:69>
|-FunctionDecl 0x56496b046048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56496b045df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56496b045f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56496b0460f8 <col:88>
|-TypedefDecl 0x56496b046188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56496b046150 '__clock_t' sugar
|   |-Typedef 0x56496b040548 '__clock_t'
|   `-BuiltinType 0x56496afd8f30 'long'
|-TypedefDecl 0x56496b046218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56496b0461e0 '__clockid_t' sugar
|   |-Typedef 0x56496b040938 '__clockid_t'
|   `-BuiltinType 0x56496afd8f10 'int'
|-TypedefDecl 0x56496b0462a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56496b046270 '__timer_t' sugar
|   |-Typedef 0x56496b0409a8 '__timer_t'
|   `-PointerType 0x56496afd9630 'void *'
|     `-BuiltinType 0x56496afd8e70 'void'
|-RecordDecl 0x56496b046300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56496b0463d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56496b046440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56496b0464a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56496b046510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56496b046578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56496b0465e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56496b046648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56496b0466b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56496b046718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56496b046780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56496b0467e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56496b046838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56496b046908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56496b046978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56496b046a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56496b046bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56496b046c90 <col:45>
|-FunctionDecl 0x56496b046e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56496b046d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56496b046f18 <col:54>
|-FunctionDecl 0x56496b047118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56496b046f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56496b046ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56496b0471c8 <line:157:22>
| `-ConstAttr 0x56496b047220 <col:63>
|-FunctionDecl 0x56496b048050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56496b047318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56496b0480f8 <col:56>
|-FunctionDecl 0x56496b0484a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56496b048168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56496b0481e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56496b048260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56496b048358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56496b048560 <col:54>
|-RecordDecl 0x56496b0485b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56496b048668 parent 0x56496afd8e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56496b0488c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56496b048968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56496b0489d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56496b048a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56496b048b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56496b048c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56496b048bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x56496b048b80 'struct __locale_struct' sugar
|     `-RecordType 0x56496b048640 'struct __locale_struct'
|       `-Record 0x56496b0485b8 '__locale_struct'
|-TypedefDecl 0x56496b048cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56496b048cc0 '__locale_t' sugar
|   |-Typedef 0x56496b048c48 '__locale_t'
|   `-PointerType 0x56496b048bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x56496b048b80 'struct __locale_struct' sugar
|       `-RecordType 0x56496b048640 'struct __locale_struct'
|         `-Record 0x56496b0485b8 '__locale_struct'
|-FunctionDecl 0x56496b04a110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56496b048d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56496b048de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56496b048e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56496b048ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56496b048f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56496b04a1d8 <col:40>
|-FunctionDecl 0x56496b04a3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56496b04a2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56496b04a470 <col:66>
|-FunctionDecl 0x56496b04a580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56496b04a4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56496b04a628 <col:69>
|-FunctionDecl 0x56496b04a858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56496b04a690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56496b04a720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56496b04a908 <col:52>
|-FunctionDecl 0x56496b04aab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56496b04a970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56496b04aa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56496b04ab60 <col:55>
|-FunctionDecl 0x56496b04acf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56496b04abe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56496b04ada0 <col:62>
|-FunctionDecl 0x56496b04af18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56496b04ae08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56496b04afc0 <col:60>
|-FunctionDecl 0x56496b04b2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56496b04b118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56496b04b198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56496b04b368 <col:44>
|-FunctionDecl 0x56496b04b578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56496b04b3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56496b04b450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56496b04b628 <col:49>
|-VarDecl 0x56496b04b728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56496b04b7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56496b04b828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56496b04b8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56496b04ba20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56496b04bac0 <col:42>
|-VarDecl 0x56496b04bb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56496b04bbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56496b04bd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56496b04bc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56496b04bde0 <col:57>
|-FunctionDecl 0x56496b04bef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56496b04be60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56496b04bf98 <col:56>
|-FunctionDecl 0x56496b04c0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56496b04c018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56496b04c178 <col:59>
|-FunctionDecl 0x56496b04c280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56496b04c1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56496b04c328 <col:48>
| `-ConstAttr 0x56496b04c380 <col:89>
|-FunctionDecl 0x56496b04c5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56496b04c438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56496b04c4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56496b04c848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56496b04c6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56496b04c768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56496b04c8f8 <col:88>
|-FunctionDecl 0x56496b04ca90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56496b04c960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56496b04c9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56496b04cb40 <col:88>
|-FunctionDecl 0x56496b04cd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56496b04cba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56496b04cc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56496b04ce08 <line:208:22>
|-FunctionDecl 0x56496b04d178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56496b04ce70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56496b04cef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56496b04cf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56496b04d010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56496b04d478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56496b04d278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56496b04d350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56496b04d528 <col:85>
|-FunctionDecl 0x56496b04d918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56496b04d590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56496b04d6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56496b04d7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56496b04d9d0 <col:52>
|-FunctionDecl 0x56496b04db48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56496b04da38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56496b04dbf0 <col:61>
|-FunctionDecl 0x56496b04e0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56496b04dc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56496b04dcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56496b04de08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56496b04def8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56496b04e1b0 <col:62>
|-FunctionDecl 0x56496b04e3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56496b04e218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56496b04e2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56496b04e478 <line:221:22>
|-FunctionDecl 0x56496b04e578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56496b04e4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56496b04e620 <col:65>
|-TypedefDecl 0x56496b04e690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56496afd8fd0 'unsigned long'
|-RecordDecl 0x56496b04e6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56496b04e830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56496b04e898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56496b04e948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56496b04e8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56496b04e770 'union pthread_attr_t'
|     `-Record 0x56496b04e6e8 'pthread_attr_t'
|-RecordDecl 0x56496b04e9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56496b04eb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56496b04eb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56496b04ec40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56496b04ebe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56496b04ea20 'struct __pthread_internal_list'
|     `-Record 0x56496b04e9a0 '__pthread_internal_list'
|-RecordDecl 0x56496b04ecb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56496b04ed58 parent 0x56496afd8e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56496b04ee30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56496b04ee98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56496b04ef00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56496b04ef68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56496b04efd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56496b04f038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56496b053110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56496b0531c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56496b0532b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56496b053318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56496b0534a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56496b053440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56496b04ed30 'pthread_mutex_t'
|     `-Record 0x56496b04ecb0 ''
|-RecordDecl 0x56496b053510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56496b053650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56496b0536b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56496b053770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56496b053710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56496b053590 'pthread_mutexattr_t'
|     `-Record 0x56496b053510 ''
|-RecordDecl 0x56496b0537e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56496b053888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56496b053950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56496b0539b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56496b053a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56496b053a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56496b053af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56496b053b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56496b053bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56496b053c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56496b053ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/mix007_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/mix007_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56496b053dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56496b053e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56496b053f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56496b053f10 'union pthread_cond_t' sugar
|   `-RecordType 0x56496b053860 'pthread_cond_t'
|     `-Record 0x56496b0537e0 ''
|-RecordDecl 0x56496b053fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56496b055130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56496b055198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56496b055250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56496b0551f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56496b054060 'pthread_condattr_t'
|     `-Record 0x56496b053fe0 ''
|-TypedefDecl 0x56496b0552d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56496afd8fb0 'unsigned int'
|-TypedefDecl 0x56496b055348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56496afd8f10 'int'
|-RecordDecl 0x56496b0553a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56496b055448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56496b055510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56496b055578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56496b0555e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56496b055648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56496b0556b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56496b055718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56496b055780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56496b0557e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56496b055850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56496b0558b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56496b055920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56496b0559d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/mix007_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix007_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56496b055a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56496b055ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56496b055c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56496b055bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56496b055420 'pthread_rwlock_t'
|     `-Record 0x56496b0553a0 ''
|-RecordDecl 0x56496b055ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56496b055de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56496b055e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56496b055f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56496b055ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56496b055d20 'pthread_rwlockattr_t'
|     `-Record 0x56496b055ca0 ''
|-TypedefDecl 0x56496b055f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56496afd8f14 'volatile int' volatile
|   `-BuiltinType 0x56496afd8f10 'int'
|-RecordDecl 0x56496b055fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56496b057140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56496b0571a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56496b057260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56496b057200 'union pthread_barrier_t' sugar
|   `-RecordType 0x56496b056060 'pthread_barrier_t'
|     `-Record 0x56496b055fe0 ''
|-RecordDecl 0x56496b0572d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56496b0573d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56496b057438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56496b0574f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56496b057490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56496b057350 'pthread_barrierattr_t'
|     `-Record 0x56496b0572d0 ''
|-TypedefDecl 0x56496b057608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56496b0575a0 'long [8]' 8 
|   `-BuiltinType 0x56496afd8f30 'long'
|-EnumDecl 0x56496b057660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56496b057728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56496b057778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56496b0577c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56496b057898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56496b0578e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56496b057938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56496b057988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56496b057a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56496b0579f8 <col:26> 'int'
| |   `-DeclRefExpr 0x56496b0579d8 <col:26> 'int' EnumConstant 0x56496b057898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56496b057a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56496b057a80 <col:29> 'int'
| |   `-DeclRefExpr 0x56496b057a60 <col:29> 'int' EnumConstant 0x56496b0578e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56496b057b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56496b057b08 <col:30> 'int'
| |   `-DeclRefExpr 0x56496b057ae8 <col:30> 'int' EnumConstant 0x56496b057938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56496b057ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56496b057b90 <col:27> 'int'
|     `-DeclRefExpr 0x56496b057b70 <col:27> 'int' EnumConstant 0x56496b057a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56496b057bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56496b057cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56496b057d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56496b057d38 <col:30> 'int'
| |   `-DeclRefExpr 0x56496b057d18 <col:30> 'int' EnumConstant 0x56496b057cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56496b057da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56496b057e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56496b057e10 <col:29> 'int'
|     `-DeclRefExpr 0x56496b057df0 <col:29> 'int' EnumConstant 0x56496b057da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56496b057e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56496b057f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56496b057f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56496b057fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56496b058038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56496b058150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56496b0581a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56496b0581f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56496b058278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56496b058260 <col:31> 'int'
|     `-DeclRefExpr 0x56496b058240 <col:31> 'int' EnumConstant 0x56496b058150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56496b0582c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56496b058398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56496b0583e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56496b058438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56496b058508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56496b058558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56496b0585a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56496b058678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56496b0586c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56496b058718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56496b058958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56496b0589c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56496b058a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56496b058b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56496b058b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56496b058c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56496b058cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56496b058d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56496b058dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56496b058e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56496b059488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56496b058f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56496b059030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56496b059270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56496b0592f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56496b059548 <col:47>
| |-NonNullAttr 0x56496b0595a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56496b0595d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56496b059700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56496b059630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56496b059958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56496b0597b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56496b059838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56496b059b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56496b059a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56496b059bd0 <col:60>
|-FunctionDecl 0x56496b059d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56496b059dc0 <col:54>
| `-ConstAttr 0x56496b059e18 <col:95>
|-FunctionDecl 0x56496b059fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56496b059e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56496b059ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56496b05a098 <line:394:19>
| `-ConstAttr 0x56496b05a0f0 <col:60>
|-FunctionDecl 0x56496b05bb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56496b05b9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56496b05bbb0 <col:71>
| `-NonNullAttr 0x56496b05bc08 <col:112, col:126> 1
|-FunctionDecl 0x56496b05bd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56496b05bc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56496b05bdb8 <line:397:22>
| `-NonNullAttr 0x56496b05be10 <col:63, col:77> 1
|-FunctionDecl 0x56496b05c038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56496b05be58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56496b05bed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56496b05c0e8 <line:400:22>
| `-NonNullAttr 0x56496b05c140 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b05c348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56496b05c188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56496b05c208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56496b05c3f8 <line:403:22>
| `-NonNullAttr 0x56496b05c450 <col:63, col:77> 1
|-FunctionDecl 0x56496b05c6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56496b05c498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56496b05c540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56496b05c758 <line:406:22>
| `-NonNullAttr 0x56496b05c7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b05d9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56496b05c7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56496b05c870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56496b05da98 <line:409:22>
| `-NonNullAttr 0x56496b05daf0 <col:63, col:77> 1
|-FunctionDecl 0x56496b05dd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56496b05db38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56496b05dbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56496b05ddd8 <line:412:22>
| `-NonNullAttr 0x56496b05de30 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b05e068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56496b05de78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56496b05df08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56496b05e118 <col:37>
| `-NonNullAttr 0x56496b05e170 <col:78, col:95> 1 2
|-FunctionDecl 0x56496b05e358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b05e1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56496b05e238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56496b05e408 <line:418:22>
| `-NonNullAttr 0x56496b05e460 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b05e5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56496b05e4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56496b05e528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56496b05e698 <line:420:22>
| `-NonNullAttr 0x56496b05e6f0 <col:63, col:77> 1
|-FunctionDecl 0x56496b05e898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b05e738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56496b05e7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56496b05e948 <line:423:22>
| `-NonNullAttr 0x56496b05e9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b05eb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56496b05ea08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56496b05ea88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56496b05ebf8 <line:426:22>
| `-NonNullAttr 0x56496b05ec50 <col:63, col:77> 1
|-FunctionDecl 0x56496b05edf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b05ec98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56496b05ed18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56496b05eea8 <line:429:22>
| `-NonNullAttr 0x56496b05ef00 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b05f088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56496b05ef48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56496b05efc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56496b05f138 <line:431:22>
| `-NonNullAttr 0x56496b05f190 <col:63, col:77> 1
|-FunctionDecl 0x56496b05f3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56496b05f1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56496b05f258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56496b05f468 <line:434:22>
| |-NonNullAttr 0x56496b05f4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56496b05f4f8 <col:100> "" ""
|-FunctionDecl 0x56496b05f708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56496b05f548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56496b05f5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56496b05f7b8 <line:437:22>
| |-NonNullAttr 0x56496b05f810 <col:63, col:77> 1
| `-DeprecatedAttr 0x56496b05f848 <col:97> "" ""
|-FunctionDecl 0x56496b05fa48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56496b05f898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56496b05f910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56496b05faf8 <line:440:22>
| `-NonNullAttr 0x56496b05fb50 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b05fcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56496b05fb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56496b05fc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56496b05fd80 <line:443:22>
| `-NonNullAttr 0x56496b05fdd8 <col:63, col:77> 1
|-FunctionDecl 0x56496b0600c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56496b05fe28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56496b05fea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56496b05ff20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56496b060180 <line:447:22>
| `-NonNullAttr 0x56496b0601d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56496b060488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56496b060230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56496b0602b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56496b060328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56496b060540 <col:43>
| `-NonNullAttr 0x56496b060598 <col:84, col:98> 1
|-FunctionDecl 0x56496b060858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56496b0605e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56496b060668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56496b0606f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56496b060910 <line:452:22>
| `-NonNullAttr 0x56496b060968 <col:63, col:77> 3
|-FunctionDecl 0x56496b060c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56496b0609e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56496b060a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56496b060af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56496b060d30 <line:456:22>
| `-NonNullAttr 0x56496b060d88 <col:63, col:80> 2 3
|-FunctionDecl 0x56496b060f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56496b060dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56496b060e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56496b061028 <line:458:22>
|-FunctionDecl 0x56496b0613f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56496b0610f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56496b061290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56496b0614a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56496b061650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56496b061530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56496b0615b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56496b061838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56496b061718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56496b061798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56496b0619f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56496b0618f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56496b061b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56496b061bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56496b061c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56496b061d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56496b061dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56496b061fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix007_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56496b062098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56496b062150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56496b0620f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56496b061c50 '__pthread_unwind_buf_t'
| |   `-Record 0x56496b061bd0 ''
| `-AlignedAttr 0x56496b0621a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56496b062220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56496b062380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56496b0623e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56496b062450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56496b0624b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56496b0626c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56496b0625b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56496b062808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56496b062778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56496b062a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56496b0628c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56496b062aa8 <line:487:22>
|-RecordDecl 0x56496b062b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56496b062e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56496b062c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56496b062cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56496b062ec8 <col:86>
| `-ReturnsTwiceAttr 0x56496b062f20 <col:12> Implicit
|-FunctionDecl 0x56496b063248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56496b062ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56496b063100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56496b0632f8 <line:493:22>
| `-NonNullAttr 0x56496b063350 <col:63, col:77> 1
|-FunctionDecl 0x56496b0634c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56496b063398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56496b063570 <line:495:22>
| `-NonNullAttr 0x56496b0635c8 <col:63, col:77> 1
|-FunctionDecl 0x56496b0636d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56496b063618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56496b063778 <line:497:22>
| `-NonNullAttr 0x56496b0637d0 <col:52, col:66> 1
|-FunctionDecl 0x56496b0638d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56496b063818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56496b063978 <line:499:22>
| `-NonNullAttr 0x56496b0639d0 <col:52, col:66> 1
|-FunctionDecl 0x56496b064c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56496b064a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56496b064ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56496b064cd8 <col:36>
| `-NonNullAttr 0x56496b064d30 <col:66, col:83> 1 2
|-FunctionDecl 0x56496b064e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56496b064d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56496b064ed8 <line:504:22>
| `-NonNullAttr 0x56496b064f30 <col:52, col:66> 1
|-FunctionDecl 0x56496b0651c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b064fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56496b065060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56496b065278 <line:508:22>
| `-NonNullAttr 0x56496b0652d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b065598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56496b065318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56496b065398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56496b065418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56496b065650 <line:512:22>
| `-NonNullAttr 0x56496b0656a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56496b0657b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56496b0656f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56496b065858 <line:514:22>
| `-NonNullAttr 0x56496b0658b0 <col:63, col:77> 1
|-FunctionDecl 0x56496b065ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56496b065960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56496b065b80 <line:516:22>
| `-NonNullAttr 0x56496b065bd8 <col:63, col:77> 1
|-FunctionDecl 0x56496b065ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56496b065c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56496b065d88 <line:518:22>
| `-NonNullAttr 0x56496b065de0 <col:63, col:77> 1
|-FunctionDecl 0x56496b066008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b065e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56496b065ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56496b0660b8 <line:522:22>
| `-NonNullAttr 0x56496b066110 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b066318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56496b066158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56496b0661d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56496b0663c8 <line:525:22>
| `-NonNullAttr 0x56496b066420 <col:63, col:77> 1
|-FunctionDecl 0x56496b0665c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b066468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56496b0664e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56496b066678 <line:528:22>
| `-NonNullAttr 0x56496b0666d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b066858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56496b066718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56496b066798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56496b066908 <line:530:22>
| `-NonNullAttr 0x56496b066960 <col:63, col:77> 1
|-FunctionDecl 0x56496b066b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b0669a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56496b066a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56496b066bd0 <line:534:22>
| `-NonNullAttr 0x56496b066c28 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b066db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56496b066c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56496b066cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56496b066e68 <line:537:22>
| `-NonNullAttr 0x56496b066ec0 <col:63, col:77> 1
|-FunctionDecl 0x56496b067068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b066f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56496b066f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56496b067118 <line:541:22>
| `-NonNullAttr 0x56496b067170 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b0672f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56496b0671b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56496b067238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56496b0673a8 <line:544:22>
| `-NonNullAttr 0x56496b067400 <col:63, col:77> 1
|-FunctionDecl 0x56496b0675e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56496b067448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56496b0674c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56496b067698 <line:547:22>
| `-NonNullAttr 0x56496b0676f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b067878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56496b067738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56496b0677b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56496b067928 <line:550:22>
| `-NonNullAttr 0x56496b067980 <col:63, col:77> 1
|-FunctionDecl 0x56496b068cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56496b068aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56496b068bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56496b068da8 <col:29>
| `-NonNullAttr 0x56496b068e00 <col:70, col:84> 1
|-FunctionDecl 0x56496b068f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56496b068e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56496b069020 <line:555:22>
| `-NonNullAttr 0x56496b069078 <col:63, col:77> 1
|-FunctionDecl 0x56496b069180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56496b0690c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56496b069228 <line:557:22>
| `-NonNullAttr 0x56496b069280 <col:52, col:66> 1
|-FunctionDecl 0x56496b069380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56496b0692c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56496b069428 <line:559:19>
| `-NonNullAttr 0x56496b069480 <col:49, col:63> 1
|-FunctionDecl 0x56496b0696b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56496b0694c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56496b069558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56496b069768 <col:39>
| `-NonNullAttr 0x56496b0697c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56496b0698c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56496b069808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56496b069968 <line:564:22>
| `-NonNullAttr 0x56496b0699c0 <col:52, col:66> 1
|-FunctionDecl 0x56496b069b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56496b069a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56496b069bd0 <line:566:22>
| `-NonNullAttr 0x56496b069c28 <col:52, col:66> 1
|-FunctionDecl 0x56496b069de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56496b069c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56496b069d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56496b069e98 <col:39>
| `-NonNullAttr 0x56496b069ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56496b069ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56496b069f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56496b06a098 <line:571:22>
| `-NonNullAttr 0x56496b06a0f0 <col:52, col:66> 1
|-FunctionDecl 0x56496b06a2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56496b06a1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56496b06a380 <line:573:22>
| `-NonNullAttr 0x56496b06a3d8 <col:63, col:77> 1
|-FunctionDecl 0x56496b06a4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56496b06a428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56496b06a588 <line:575:22>
| `-NonNullAttr 0x56496b06a5e0 <col:63, col:77> 1
|-FunctionDecl 0x56496b06a808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b06a628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56496b06a6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56496b06a8b8 <line:579:22>
| `-NonNullAttr 0x56496b06a910 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b06ab38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56496b06a958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56496b06a9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56496b06abe8 <line:582:22>
| `-NonNullAttr 0x56496b06ac40 <col:63, col:77> 1
|-FunctionDecl 0x56496b06ade8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b06ac88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56496b06ad08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56496b06ae98 <line:586:22>
| `-NonNullAttr 0x56496b06aef0 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b06b078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56496b06af38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56496b06afb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56496b06b128 <col:36>
| `-NonNullAttr 0x56496b06b180 <col:77, col:91> 1
|-FunctionDecl 0x56496b06b4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56496b06b260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56496b06b370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56496b06b568 <line:591:22>
| `-NonNullAttr 0x56496b06b5c0 <col:63, col:77> 1
|-FunctionDecl 0x56496b06b738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56496b06b608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56496b06b7e0 <line:593:22>
| `-NonNullAttr 0x56496b06b838 <col:63, col:77> 1
|-FunctionDecl 0x56496b06b940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56496b06b888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56496b06b9e8 <line:595:22>
| `-NonNullAttr 0x56496b06ba40 <col:52, col:66> 1
|-FunctionDecl 0x56496b06bb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56496b06baa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56496b06bc00 <line:597:22>
| `-NonNullAttr 0x56496b06bc58 <col:52, col:66> 1
|-FunctionDecl 0x56496b06be88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56496b06bca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56496b06bd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56496b06bf38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56496b06c268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56496b06bfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56496b06c030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56496b06c0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56496b06c320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56496b06c538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56496b06c400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56496b06c5e0 <line:606:22>
| `-NonNullAttr 0x56496b06c638 <col:63, col:77> 1
|-FunctionDecl 0x56496b06c740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56496b06c688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56496b06c7e8 <line:608:22>
| `-NonNullAttr 0x56496b06c840 <col:63, col:77> 1
|-FunctionDecl 0x56496b06caa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b06c888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56496b06c908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56496b06cb50 <line:612:22>
| `-NonNullAttr 0x56496b06cba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b06cdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56496b06cbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56496b06cc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56496b06ce68 <col:37>
| `-NonNullAttr 0x56496b06cec0 <col:78, col:92> 1
|-FunctionDecl 0x56496b06d0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56496b06cf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56496b06cfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56496b06d188 <line:618:22>
| `-NonNullAttr 0x56496b06d1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b06d3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56496b06d228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56496b06d2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56496b06d458 <line:621:22>
| `-NonNullAttr 0x56496b06d4b0 <col:63, col:77> 1
|-FunctionDecl 0x56496b06d758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56496b06d590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56496b06d610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56496b06d808 <line:623:22>
| `-NonNullAttr 0x56496b06d860 <col:63, col:77> 1
|-FunctionDecl 0x56496b06d9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56496b06d8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56496b06dab0 <line:625:22>
| `-NonNullAttr 0x56496b06db08 <col:63, col:77> 1
|-FunctionDecl 0x56496b06dc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56496b06db58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56496b06dcb8 <line:627:22>
| `-NonNullAttr 0x56496b06dd10 <col:52, col:66> 1
|-FunctionDecl 0x56496b06de10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56496b06dd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56496b06deb8 <line:629:22>
| `-NonNullAttr 0x56496b06df10 <col:52, col:66> 1
|-FunctionDecl 0x56496b06e010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56496b06df58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56496b06e0b8 <line:631:22>
| `-NonNullAttr 0x56496b06e110 <col:52, col:66> 1
|-FunctionDecl 0x56496b06e4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56496b06e1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56496b06e300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56496b06e380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56496b06e5a0 <line:635:22>
| `-NonNullAttr 0x56496b06e5f8 <col:63, col:77> 1
|-FunctionDecl 0x56496b06e778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56496b06e648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56496b06e820 <line:637:22>
| `-NonNullAttr 0x56496b06e878 <col:63, col:77> 1
|-FunctionDecl 0x56496b06e980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56496b06e8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56496b06ea28 <line:639:22>
| `-NonNullAttr 0x56496b06ea80 <col:52, col:66> 1
|-FunctionDecl 0x56496b06fc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56496b06fb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56496b06fd30 <line:641:22>
| `-NonNullAttr 0x56496b06fd88 <col:63, col:77> 1
|-FunctionDecl 0x56496b06fe90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56496b06fdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56496b06ff38 <line:643:22>
| `-NonNullAttr 0x56496b06ff90 <col:63, col:77> 1
|-FunctionDecl 0x56496b0701b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56496b06ffd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56496b070058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56496b070268 <line:647:22>
| `-NonNullAttr 0x56496b0702c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56496b0704c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56496b070308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56496b070388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56496b070578 <line:650:22>
| `-NonNullAttr 0x56496b0705d0 <col:63, col:77> 1
|-FunctionDecl 0x56496b070918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56496b0706b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56496b0707d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56496b0709c8 <line:653:22>
| `-NonNullAttr 0x56496b070a20 <col:63, col:77> 1
|-FunctionDecl 0x56496b070b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56496b070a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56496b070c30 <col:69>
|-FunctionDecl 0x56496b070da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56496b070c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56496b070e50 <col:72>
|-FunctionDecl 0x56496b071088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56496b070eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56496b070f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56496b071138 <col:44>
|-FunctionDecl 0x56496b071358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56496b0711a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56496b071218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56496b071408 <line:660:22>
| `-NonNullAttr 0x56496b071460 <col:63, col:77> 2
|-FunctionDecl 0x56496b0718a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56496b071540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56496b071650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56496b071760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56496b071960 <col:47>
|-FunctionDecl 0x56496b071af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56496b0719d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56496b071c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56496b071bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56496b071da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56496b071d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56496b071ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56496b071e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56496b071fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56496b072080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56496b072140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56496b0721f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56496b072278 prev 0x56496b0721f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56496b0722e0 <col:24> 'int' 0
|-VarDecl 0x56496b072318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56496b072398 prev 0x56496b072318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56496b072400 <col:27> 'int' 0
|-VarDecl 0x56496b072438 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56496b0724b8 prev 0x56496b072438 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56496b072520 <col:27> 'int' 0
|-VarDecl 0x56496b072558 <line:678:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x56496b0725d8 prev 0x56496b072558 <line:679:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x56496b072640 <col:27> 'int' 0
|-VarDecl 0x56496b072678 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56496b0726f8 prev 0x56496b072678 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56496b072760 <col:27> 'int' 0
|-VarDecl 0x56496b072798 <line:682:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x56496b072818 prev 0x56496b072798 <line:683:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x56496b072880 <col:27> 'int' 0
|-VarDecl 0x56496b0728b8 <line:684:1, col:5> col:5 used a 'int'
|-VarDecl 0x56496b072938 prev 0x56496b0728b8 <line:685:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56496b0729a0 <col:9> 'int' 0
|-VarDecl 0x56496b0729d0 <line:686:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56496b072a48 <line:687:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56496b072b00 <line:688:1, col:5> col:5 used x 'int'
|-VarDecl 0x56496b072b80 prev 0x56496b072b00 <line:689:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56496b072be8 <col:9> 'int' 0
|-VarDecl 0x56496b072c20 <line:690:1, col:5> col:5 used y 'int'
|-VarDecl 0x56496b072ca0 prev 0x56496b072c20 <line:691:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56496b072d08 <col:9> 'int' 0
|-VarDecl 0x56496b072d40 <line:692:1, col:5> col:5 used z 'int'
|-VarDecl 0x56496b072dc0 prev 0x56496b072d40 <line:693:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56496b072e28 <col:9> 'int' 0
|-VarDecl 0x56496b072e58 <line:694:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x56496b072ed8 <line:695:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x56496b072f50 <line:696:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x56496b072fc8 <line:697:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x56496b073040 <line:698:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x56496b0730b8 <line:699:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x56496b073130 <line:700:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x56496b0731a8 <line:701:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x56496b073220 <line:702:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x56496b073298 <line:703:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x56496b073310 <line:704:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x56496b073388 <line:705:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x56496b073400 <line:706:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x56496b073480 <line:707:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x56496b073500 <line:708:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x56496b073578 <line:709:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x56496b0735f8 <line:710:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x56496b073670 <line:711:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x56496b0736e8 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56496b073760 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56496b073878 prev 0x56496b071af0 <line:714:1, line:728:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56496b0737e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56496b073e58 <line:715:1, line:728:1>
|   |-CallExpr 0x56496b073988 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b073970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b073920 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b0739e8 <line:717:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56496b0739a8 <col:3> 'int' lvalue Var 0x56496b072938 'a' 'int'
|   | `-IntegerLiteral 0x56496b0739c8 <col:7> 'int' 1
|   |-CallExpr 0x56496b073a40 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b073a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b073a08 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b073a98 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b073a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b073a60 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b073b28 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56496b073ab8 <col:3> 'int' lvalue Var 0x56496b072398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56496b073b10 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b073ad8 <col:25> 'int' lvalue Var 0x56496b072b80 'x' 'int'
|   |-CallExpr 0x56496b073b80 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b073b68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b073b48 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b073bd8 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b073bc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b073ba0 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56496b073c30 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b073c18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b073bf8 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b073c88 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b073c70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b073c50 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b073d40 <line:725:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56496b073ca8 <col:3> 'int' lvalue Var 0x56496b072278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56496b073d20 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56496b073d08 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b073cc8 <col:22> 'int' lvalue Var 0x56496b072278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56496b073ce8 <col:41> 'int' 1
|   |-CallExpr 0x56496b073d98 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b073d80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b073d60 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56496b073e48 <line:727:3, col:36>
|     `-CallExpr 0x56496b073e28 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56496b073e10 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56496b073db8 <col:10> 'void *(void)' Function 0x56496b018958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56496b073f78 prev 0x56496b071c48 <line:729:1, line:743:1> line:729:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56496b073ee0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56496b0744c0 <line:730:1, line:743:1>
|   |-CallExpr 0x56496b074058 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b074040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b074020 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b0740b8 <line:732:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56496b074078 <col:3> 'int' lvalue Var 0x56496b072b80 'x' 'int'
|   | `-IntegerLiteral 0x56496b074098 <col:7> 'int' 1
|   |-CallExpr 0x56496b074110 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b0740f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b0740d8 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b074168 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b074150 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b074130 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b0741c8 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56496b074188 <col:3> 'int' lvalue Var 0x56496b072ca0 'y' 'int'
|   | `-IntegerLiteral 0x56496b0741a8 <col:7> 'int' 1
|   |-CallExpr 0x56496b074220 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b074208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b0741e8 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b074278 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b074260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b074240 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56496b0742d0 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b0742b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b074298 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b074328 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b074310 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b0742f0 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b0743e0 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56496b074348 <col:3> 'int' lvalue Var 0x56496b072278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56496b0743c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56496b0743a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b074368 <col:22> 'int' lvalue Var 0x56496b072278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56496b074388 <col:41> 'int' 1
|   |-CallExpr 0x56496b074438 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b074420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b074400 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56496b0744b0 <line:742:3, col:36>
|     `-CallExpr 0x56496b074490 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56496b074478 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56496b074458 <col:10> 'void *(void)' Function 0x56496b018958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56496b0745e0 prev 0x56496b071da0 <line:744:1, line:774:1> line:744:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56496b074548 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56496b077600 <line:745:1, line:774:1>
|   |-CallExpr 0x56496b0746c0 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b0746a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b074688 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b074720 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56496b0746e0 <col:3> 'int' lvalue Var 0x56496b072ca0 'y' 'int'
|   | `-IntegerLiteral 0x56496b074700 <col:7> 'int' 2
|   |-CallExpr 0x56496b074778 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b074760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b074740 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b0747d0 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b0747b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b074798 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b074848 <line:750:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56496b0747f0 <col:3> 'int' lvalue Var 0x56496b0724b8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56496b074830 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b074810 <col:25> 'int' lvalue Var 0x56496b072ca0 'y' 'int'
|   |-CallExpr 0x56496b0748a0 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b074888 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b074868 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b0748f8 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b0748e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b0748c0 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b0749a8 <line:753:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56496b074918 <col:3> '_Bool' lvalue Var 0x56496b0736e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56496b074990 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56496b074970 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56496b074958 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56496b074938 <col:19> 'void *(void)' Function 0x56496b018958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56496b074a58 <line:754:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56496b0749c8 <col:3> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56496b074a40 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56496b074a20 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56496b074a08 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56496b0749e8 <col:19> 'void *(void)' Function 0x56496b018958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56496b074ad0 <line:755:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56496b074a78 <col:3> '_Bool' lvalue Var 0x56496b072e58 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56496b074ab8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b074a98 <col:21> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56496b074b58 <line:756:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56496b074af0 <col:3> 'int' lvalue Var 0x56496b072ed8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56496b074b40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b074b20 <col:15> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   |-BinaryOperator 0x56496b074f90 <line:757:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56496b074b78 <col:3> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   | `-ConditionalOperator 0x56496b074f60 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56496b074d88 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56496b074ca8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56496b074bd0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56496b074bb8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56496b074b98 <col:8> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56496b074c88 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56496b074c20 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56496b074c08 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56496b074be8 <col:27> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56496b074c70 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56496b074c58 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56496b074c38 <col:46> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56496b074d68 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56496b074d00 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56496b074ce8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56496b074cc8 <col:65> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56496b074d50 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56496b074d38 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56496b074d18 <col:84> '_Bool' lvalue Var 0x56496b073310 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56496b074f48 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b074da8 <col:101> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   |   `-ParenExpr 0x56496b074f28 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56496b074ef8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56496b074e68 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56496b074e20 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56496b074e08 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56496b074dc8 <col:106> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56496b074e50 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56496b074e38 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56496b074de8 <col:124> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56496b074ec8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56496b074e88 <col:141> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56496b074ee0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56496b074ea8 <col:153> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56496b0754a0 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56496b074fb0 <col:3> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x56496b075470 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56496b075440 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56496b075428 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56496b074fd0 <col:15> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56496b075458 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b074ff0 <col:31> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56496b075408 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56496b0753d8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56496b075200 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56496b075120 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56496b075048 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56496b075030 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56496b075010 <col:45> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56496b075100 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56496b075098 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56496b075080 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56496b075060 <col:64> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56496b0750e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56496b0750d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56496b0750b0 <col:83> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56496b0751e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56496b075178 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56496b075160 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56496b075140 <col:102> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56496b0751c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56496b0751b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56496b075190 <col:121> '_Bool' lvalue Var 0x56496b073310 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56496b0753c0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56496b075220 <col:138> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x56496b0753a0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56496b075370 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56496b0752e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56496b075298 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56496b075280 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56496b075240 <col:151> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56496b0752c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56496b0752b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56496b075260 <col:169> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56496b075340 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56496b075300 <col:186> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56496b075358 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56496b075320 <col:198> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56496b0759b0 <line:759:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56496b0754c0 <col:3> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x56496b075980 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56496b075950 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56496b075938 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56496b0754e0 <col:15> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56496b075968 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b075500 <col:31> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x56496b075918 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56496b0758e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56496b075710 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56496b075630 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56496b075558 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56496b075540 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56496b075520 <col:45> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56496b075610 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56496b0755a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56496b075590 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56496b075570 <col:64> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56496b0755f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56496b0755e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56496b0755c0 <col:83> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56496b0756f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56496b075688 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56496b075670 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56496b075650 <col:102> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56496b0756d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56496b0756c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56496b0756a0 <col:121> '_Bool' lvalue Var 0x56496b073310 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56496b0758d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56496b075730 <col:138> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x56496b0758b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56496b075880 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56496b0757f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56496b0757a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56496b075790 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56496b075750 <col:151> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56496b0757d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56496b0757c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56496b075770 <col:169> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56496b075850 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56496b075810 <col:186> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56496b075868 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56496b075830 <col:198> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56496b075f68 <line:760:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56496b0759d0 <col:3> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56496b075f50 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b075f20 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56496b075ed8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b075ec0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b0759f0 <col:20> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b075f08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b075ef0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b075a10 <col:36> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56496b075ea0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56496b075e70 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56496b075c30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56496b075b50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56496b075a68 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56496b075a50 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56496b075a30 <col:55> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56496b075b30 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56496b075ab8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56496b075aa0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56496b075a80 <col:74> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56496b075b08 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56496b075af0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56496b075ad0 <col:93> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56496b075c10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56496b075ba8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56496b075b90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56496b075b70 <col:112> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56496b075bf8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56496b075be0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56496b075bc0 <col:131> '_Bool' lvalue Var 0x56496b073310 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56496b075e58 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56496b075e40 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56496b075c50 <col:148> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56496b075e20 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56496b075df0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56496b075d10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56496b075cc8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56496b075cb0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56496b075c70 <col:166> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56496b075cf8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56496b075ce0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56496b075c90 <col:184> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56496b075da8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56496b075d60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56496b075d30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56496b075dd8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56496b075dc0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56496b075d88 <col:212> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56496b076530 <line:761:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56496b075f88 <col:3> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56496b076518 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b0764e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56496b0764a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b076488 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b075fa8 <col:20> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b0764d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b0764b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b075fc8 <col:36> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56496b076468 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56496b076438 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56496b0761d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56496b0760f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56496b076020 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56496b076008 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56496b075fe8 <col:55> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56496b0760d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56496b076070 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56496b076058 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56496b076038 <col:74> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56496b0760c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56496b0760a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56496b076088 <col:93> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56496b0761b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56496b076150 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56496b076138 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56496b076118 <col:112> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56496b0761a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56496b076188 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56496b076168 <col:131> '_Bool' lvalue Var 0x56496b073310 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56496b076420 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56496b076408 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56496b0761f8 <col:148> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56496b0763e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56496b0763b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56496b0762b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56496b076270 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56496b076258 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56496b076218 <col:166> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56496b0762a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56496b076288 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56496b076238 <col:184> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56496b076388 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56496b076308 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56496b0762d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56496b0763a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56496b076360 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56496b076330 <col:219> 'int' 0
|   |-BinaryOperator 0x56496b076ad8 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56496b076550 <col:3> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56496b076ac0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b076a90 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56496b076a48 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b076a30 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b076570 <col:20> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b076a78 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b076a60 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b076590 <col:36> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56496b076a10 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56496b0769e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56496b0767a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56496b0766c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56496b0765e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56496b0765d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56496b0765b0 <col:55> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56496b0766a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56496b076638 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56496b076620 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56496b076600 <col:74> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56496b076688 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56496b076670 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56496b076650 <col:93> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56496b076780 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56496b076718 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56496b076700 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56496b0766e0 <col:112> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56496b076768 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56496b076750 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56496b076730 <col:131> '_Bool' lvalue Var 0x56496b073310 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56496b0769c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56496b0769b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56496b0767c0 <col:148> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56496b076990 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56496b076960 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56496b076880 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56496b076838 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56496b076820 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56496b0767e0 <col:166> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56496b076868 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56496b076850 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56496b076800 <col:184> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56496b076918 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56496b0768d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56496b0768a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56496b076948 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56496b076930 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56496b0768f8 <col:212> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56496b0770c8 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56496b076af8 <col:3> '_Bool' lvalue Var 0x56496b073310 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56496b0770b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b077080 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56496b077038 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b077020 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b076b40 <col:20> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b077068 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b077050 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b076b60 <col:36> '_Bool' lvalue Var 0x56496b073310 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56496b077000 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56496b076fd0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56496b076d70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56496b076c90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56496b076bb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56496b076ba0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56496b076b80 <col:55> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56496b076c70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56496b076c08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56496b076bf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56496b076bd0 <col:74> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56496b076c58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56496b076c40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56496b076c20 <col:93> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56496b076d50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56496b076ce8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56496b076cd0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56496b076cb0 <col:112> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56496b076d38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56496b076d20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56496b076d00 <col:131> '_Bool' lvalue Var 0x56496b073310 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56496b076fb8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56496b076fa0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56496b076d90 <col:148> '_Bool' lvalue Var 0x56496b073310 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56496b076f80 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56496b076f50 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56496b076e50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56496b076e08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56496b076df0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56496b076db0 <col:166> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56496b076e38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56496b076e20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56496b076dd0 <col:184> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56496b076f20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56496b076ea0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56496b076e70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56496b076f38 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56496b076ef8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56496b076ec8 <col:219> 'int' 0
|   |-BinaryOperator 0x56496b077140 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56496b0770e8 <col:3> 'int' lvalue Var 0x56496b0725d8 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x56496b077128 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b077108 <col:25> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   |-BinaryOperator 0x56496b077270 <line:765:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56496b077160 <col:3> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   | `-ConditionalOperator 0x56496b077240 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56496b0771f8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56496b0771e0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56496b077180 <col:7> '_Bool' lvalue Var 0x56496b072e58 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56496b077210 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b0771a0 <col:25> 'int' lvalue Var 0x56496b072ed8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56496b077228 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56496b0771c0 <col:37> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   |-BinaryOperator 0x56496b077308 <line:766:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56496b077290 <col:3> '_Bool' lvalue Var 0x56496b072e58 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56496b0772e0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56496b0772b0 <col:28> 'int' 0
|   |-CallExpr 0x56496b077360 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b077348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b077328 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b0773b8 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b0773a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b077380 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56496b077410 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b0773f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b0773d8 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b077468 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b077450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b077430 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b077520 <line:771:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56496b077488 <col:3> 'int' lvalue Var 0x56496b072278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56496b077500 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56496b0774e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b0774a8 <col:22> 'int' lvalue Var 0x56496b072278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56496b0774c8 <col:41> 'int' 1
|   |-CallExpr 0x56496b077578 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b077560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b077540 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56496b0775f0 <line:773:3, col:36>
|     `-CallExpr 0x56496b0775d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56496b0775b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56496b077598 <col:10> 'void *(void)' Function 0x56496b018958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56496b0777a0 prev 0x56496b071ef8 <line:775:1, line:820:1> line:775:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x56496b077708 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56496b07bb90 <line:776:1, line:820:1>
|   |-CallExpr 0x56496b077880 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b077868 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b077848 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b0778f8 <line:778:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56496b0778a0 <col:3> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56496b0778e0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b0778c0 <col:15> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56496b077958 <line:779:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56496b077918 <col:3> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x56496b077938 <col:15> 'int' 1
|   |-BinaryOperator 0x56496b0779d0 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56496b077978 <col:3> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56496b0779b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b077998 <col:20> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56496b077a68 <line:781:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56496b0779f0 <col:3> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56496b077a40 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56496b077a10 <col:27> 'int' 1
|   |-CallExpr 0x56496b077c08 <line:782:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56496b077bf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56496b077a88 <col:3> 'void (int)' Function 0x56496b018bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56496b077ba8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56496b077b88 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56496b077b68 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56496b077b00 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56496b077ae8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56496b077aa8 <col:23> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56496b077b50 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56496b077b18 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56496b077ac8 <col:41> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56496b077c88 <line:783:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56496b077c30 <col:3> '_Bool' lvalue Var 0x56496b0731a8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56496b077c70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b077c50 <col:20> '_Bool' lvalue Var 0x56496b072f50 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56496b077d00 <line:784:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56496b077ca8 <col:3> '_Bool' lvalue Var 0x56496b073220 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56496b077ce8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b077cc8 <col:20> '_Bool' lvalue Var 0x56496b072fc8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56496b077d78 <line:785:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56496b077d20 <col:3> '_Bool' lvalue Var 0x56496b073298 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56496b077d60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b077d40 <col:20> '_Bool' lvalue Var 0x56496b073040 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56496b077df0 <line:786:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56496b077d98 <col:3> '_Bool' lvalue Var 0x56496b073310 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56496b077dd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b077db8 <col:20> '_Bool' lvalue Var 0x56496b0730b8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56496b077e68 <line:787:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56496b077e10 <col:3> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56496b077e50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b077e30 <col:20> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56496b077f00 <line:788:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56496b077e88 <col:3> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x56496b077ed8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56496b077ea8 <col:27> 'int' 1
|   |-CallExpr 0x56496b077f58 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b077f40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b077f20 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b077fb0 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b077f98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b077f78 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b078060 <line:791:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56496b077fd0 <col:3> '_Bool' lvalue Var 0x56496b0736e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56496b078048 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56496b078028 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56496b078010 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56496b077ff0 <col:19> 'void *(void)' Function 0x56496b018958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56496b078110 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56496b078080 <col:3> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56496b0780f8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56496b0780d8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56496b0780c0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56496b0780a0 <col:19> 'void *(void)' Function 0x56496b018958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56496b078188 <line:793:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56496b078130 <col:3> '_Bool' lvalue Var 0x56496b072e58 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56496b078170 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b078150 <col:21> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56496b078200 <line:794:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56496b0781a8 <col:3> 'int' lvalue Var 0x56496b072ed8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56496b0781e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b0781c8 <col:15> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   |-BinaryOperator 0x56496b078638 <line:795:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56496b078220 <col:3> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   | `-ConditionalOperator 0x56496b078608 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56496b078430 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56496b078350 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56496b078278 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56496b078260 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56496b078240 <col:8> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56496b078330 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56496b0782c8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56496b0782b0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56496b078290 <col:27> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x56496b078318 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56496b078300 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56496b0782e0 <col:46> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56496b078410 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56496b0783a8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56496b078390 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56496b078370 <col:65> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x56496b0783f8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56496b0783e0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56496b0783c0 <col:84> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56496b0785f0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b078450 <col:101> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   |   `-ParenExpr 0x56496b0785d0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56496b0785a0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56496b078510 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56496b0784c8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56496b0784b0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56496b078470 <col:106> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56496b0784f8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56496b0784e0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56496b078490 <col:124> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56496b078570 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56496b078530 <col:141> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56496b078588 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56496b078550 <col:153> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56496b078b60 <line:796:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56496b078658 <col:3> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x56496b078b18 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56496b078ae8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56496b078ad0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56496b078678 <col:15> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56496b078b00 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b078698 <col:31> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56496b078ab0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56496b078a80 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56496b0788a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56496b0787c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56496b0786f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56496b0786d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56496b0786b8 <col:45> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56496b0787a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56496b078740 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56496b078728 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56496b078708 <col:64> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56496b078790 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56496b078778 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56496b078758 <col:83> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56496b078888 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56496b078820 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56496b078808 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56496b0787e8 <col:102> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56496b078870 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56496b078858 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56496b078838 <col:121> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56496b078a68 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56496b0788c8 <col:138> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x56496b078a48 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56496b078a18 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56496b078988 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56496b078940 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56496b078928 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56496b0788e8 <col:151> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56496b078970 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56496b078958 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56496b078908 <col:169> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56496b0789e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56496b0789a8 <col:186> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56496b078a00 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56496b0789c8 <col:198> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56496b079070 <line:797:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56496b078b80 <col:3> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x56496b079040 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56496b079010 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56496b078ff8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56496b078ba0 <col:15> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56496b079028 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b078bc0 <col:31> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x56496b078fd8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56496b078fa8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56496b078dd0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56496b078cf0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56496b078c18 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56496b078c00 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56496b078be0 <col:45> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56496b078cd0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56496b078c68 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56496b078c50 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56496b078c30 <col:64> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56496b078cb8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56496b078ca0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56496b078c80 <col:83> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56496b078db0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56496b078d48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56496b078d30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56496b078d10 <col:102> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56496b078d98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56496b078d80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56496b078d60 <col:121> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56496b078f90 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56496b078df0 <col:138> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x56496b078f70 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56496b078f40 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56496b078eb0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56496b078e68 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56496b078e50 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56496b078e10 <col:151> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56496b078e98 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56496b078e80 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56496b078e30 <col:169> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56496b078f10 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56496b078ed0 <col:186> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56496b078f28 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56496b078ef0 <col:198> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56496b079618 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56496b079090 <col:3> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56496b079600 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b0795d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56496b079588 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b079570 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b0790b0 <col:20> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b0795b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b0795a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b0790d0 <col:36> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56496b079550 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56496b079520 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56496b0792e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56496b079200 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56496b079128 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56496b079110 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56496b0790f0 <col:55> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56496b0791e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56496b079178 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56496b079160 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56496b079140 <col:74> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56496b0791c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56496b0791b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56496b079190 <col:93> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56496b0792c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56496b079258 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56496b079240 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56496b079220 <col:112> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56496b0792a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56496b079290 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56496b079270 <col:131> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56496b079508 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56496b0794f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56496b079300 <col:148> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56496b0794d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56496b0794a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56496b0793c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56496b079378 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56496b079360 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56496b079320 <col:166> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56496b0793a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56496b079390 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56496b079340 <col:184> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56496b079458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56496b079410 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56496b0793e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56496b079488 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56496b079470 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56496b079438 <col:212> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56496b079c00 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56496b079638 <col:3> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56496b079be8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b079bb8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56496b079b70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b079b38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b079658 <col:20> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b079ba0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b079b88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b079678 <col:36> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56496b079b18 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56496b079ae8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56496b079888 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56496b0797a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56496b0796d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56496b0796b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56496b079698 <col:55> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56496b079788 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56496b079720 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56496b079708 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56496b0796e8 <col:74> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56496b079770 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56496b079758 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56496b079738 <col:93> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56496b079868 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56496b079800 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56496b0797e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56496b0797c8 <col:112> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56496b079850 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56496b079838 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56496b079818 <col:131> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56496b079ad0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56496b079ab8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56496b0798a8 <col:148> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56496b079a98 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56496b079a68 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56496b079968 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56496b079920 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56496b079908 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56496b0798c8 <col:166> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56496b079950 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56496b079938 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56496b0798e8 <col:184> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56496b079a38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56496b0799b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56496b079988 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56496b079a50 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56496b079a10 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56496b0799e0 <col:219> 'int' 0
|   |-BinaryOperator 0x56496b07a1a8 <line:800:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56496b079c20 <col:3> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56496b07a190 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b07a160 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56496b07a118 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b07a100 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b079c40 <col:20> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b07a148 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b07a130 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b079c60 <col:36> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x56496b07a0e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56496b07a0b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56496b079e70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56496b079d90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56496b079cb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56496b079ca0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56496b079c80 <col:55> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56496b079d70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56496b079d08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56496b079cf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56496b079cd0 <col:74> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56496b079d58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56496b079d40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56496b079d20 <col:93> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56496b079e50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56496b079de8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56496b079dd0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56496b079db0 <col:112> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56496b079e38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56496b079e20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56496b079e00 <col:131> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56496b07a098 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56496b07a080 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56496b079e90 <col:148> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x56496b07a060 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56496b07a030 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56496b079f50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56496b079f08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56496b079ef0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56496b079eb0 <col:166> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56496b079f38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56496b079f20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56496b079ed0 <col:184> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56496b079fe8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56496b079fa0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56496b079f70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56496b07a018 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56496b07a000 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56496b079fc8 <col:212> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56496b07a770 <line:801:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56496b07a1c8 <col:3> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56496b07a758 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b07a728 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56496b07a6e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b07a6c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b07a1e8 <col:20> '_Bool' lvalue Var 0x56496b073760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b07a710 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56496b07a6f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56496b07a208 <col:36> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x56496b07a6a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56496b07a678 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56496b07a418 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56496b07a338 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56496b07a260 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56496b07a248 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56496b07a228 <col:55> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56496b07a318 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56496b07a2b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56496b07a298 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56496b07a278 <col:74> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56496b07a300 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56496b07a2e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56496b07a2c8 <col:93> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56496b07a3f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56496b07a390 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56496b07a378 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56496b07a358 <col:112> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56496b07a3e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56496b07a3c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56496b07a3a8 <col:131> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56496b07a660 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56496b07a648 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56496b07a438 <col:148> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x56496b07a628 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56496b07a5f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56496b07a4f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56496b07a4b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56496b07a498 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56496b07a458 <col:166> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56496b07a4e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56496b07a4c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56496b07a478 <col:184> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56496b07a5c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56496b07a548 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56496b07a518 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56496b07a5e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56496b07a5a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56496b07a570 <col:219> 'int' 0
|   |-BinaryOperator 0x56496b07a7e8 <line:802:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56496b07a790 <col:3> 'int' lvalue Var 0x56496b0726f8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x56496b07a7d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b07a7b0 <col:25> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   |-BinaryOperator 0x56496b07a918 <line:803:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56496b07a808 <col:3> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   | `-ConditionalOperator 0x56496b07a8e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56496b07a8a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56496b07a888 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56496b07a828 <col:7> '_Bool' lvalue Var 0x56496b072e58 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56496b07a8b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b07a848 <col:25> 'int' lvalue Var 0x56496b072ed8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56496b07a8d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56496b07a868 <col:37> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   |-BinaryOperator 0x56496b07a9b0 <line:804:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56496b07a938 <col:3> '_Bool' lvalue Var 0x56496b072e58 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56496b07a988 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56496b07a958 <col:28> 'int' 0
|   |-CallExpr 0x56496b07aa08 <line:805:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b07a9f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b07a9d0 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b07aa60 <line:806:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b07aa48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b07aa28 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b07aad8 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56496b07aa80 <col:3> 'int' lvalue Var 0x56496b072818 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x56496b07aac0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56496b07aaa0 <col:25> 'int' lvalue Var 0x56496b072938 'a' 'int'
|   |-CallExpr 0x56496b07ab30 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b07ab18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b07aaf8 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b07ab98 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b07ab80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b07ab50 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b07ae80 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56496b07abb8 <col:3> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   | `-ConditionalOperator 0x56496b07ae50 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56496b07ac78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56496b07ac30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56496b07ac18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56496b07abd8 <col:7> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56496b07ac60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56496b07ac48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56496b07abf8 <col:25> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56496b07ae38 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b07ac98 <col:42> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56496b07ae18 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56496b07ade8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56496b07ad58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56496b07ad10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56496b07acf8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56496b07acb8 <col:55> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56496b07ad40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56496b07ad28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56496b07acd8 <col:73> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56496b07adb8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56496b07ad78 <col:90> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56496b07add0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56496b07ad98 <col:102> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
|   |-BinaryOperator 0x56496b07b088 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56496b07aea0 <col:3> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56496b07b070 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b07b040 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56496b07af60 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56496b07af18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56496b07af00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56496b07aec0 <col:20> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56496b07af48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56496b07af30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56496b07aee0 <col:38> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b07aff8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56496b07afb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56496b07af80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56496b07b028 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56496b07b010 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56496b07afd8 <col:66> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56496b07b370 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56496b07b0a8 <col:3> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56496b07b358 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b07b328 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56496b07b248 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56496b07b168 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56496b07b120 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56496b07b108 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56496b07b0c8 <col:20> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56496b07b150 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56496b07b138 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56496b07b0e8 <col:38> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56496b07b228 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56496b07b1e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56496b07b1c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56496b07b188 <col:56> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56496b07b210 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56496b07b1f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56496b07b1a8 <col:74> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b07b2e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56496b07b298 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56496b07b268 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56496b07b310 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56496b07b2f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56496b07b2c0 <col:102> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56496b07b578 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56496b07b390 <col:3> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56496b07b560 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b07b530 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56496b07b450 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56496b07b408 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56496b07b3f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56496b07b3b0 <col:20> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56496b07b438 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56496b07b420 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56496b07b3d0 <col:38> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b07b4e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56496b07b4a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56496b07b470 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56496b07b518 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56496b07b500 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56496b07b4c8 <col:66> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56496b07b860 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56496b07b598 <col:3> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56496b07b848 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56496b07b818 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56496b07b738 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56496b07b658 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56496b07b610 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56496b07b5f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56496b07b5b8 <col:20> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56496b07b640 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56496b07b628 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56496b07b5d8 <col:38> '_Bool' lvalue Var 0x56496b073130 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56496b07b718 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56496b07b6d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56496b07b6b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56496b07b678 <col:56> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56496b07b700 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56496b07b6e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56496b07b698 <col:74> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56496b07b7d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56496b07b788 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56496b07b758 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56496b07b800 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56496b07b7e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56496b07b7b0 <col:102> '_Bool' lvalue Var 0x56496b073388 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x56496b07b8b8 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b07b8a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b07b880 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56496b07b910 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56496b07b8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b07b8d8 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56496b07b9c8 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56496b07b930 <col:3> 'int' lvalue Var 0x56496b072278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56496b07b9a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56496b07b990 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56496b07b950 <col:22> 'int' lvalue Var 0x56496b072278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56496b07b970 <col:41> 'int' 1
|   |-CallExpr 0x56496b07ba20 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56496b07ba08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56496b07b9e8 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56496b07ba98 <line:819:3, col:36>
|     `-CallExpr 0x56496b07ba78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56496b07ba60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56496b07ba40 <col:10> 'void *(void)' Function 0x56496b018958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56496b07bd18 prev 0x56496b071fc0 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x56496b07bdb8 <line:822:1, line:823:1>
|-FunctionDecl 0x56496b07bde8 prev 0x56496b072080 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x56496b07be88 <line:825:1, line:826:1>
|-FunctionDecl 0x56496b07beb8 prev 0x56496b072140 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x56496b07bf58 <line:828:1, line:829:1>
`-FunctionDecl 0x56496b07bfc8 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x56496b07e070 <line:831:1, line:856:1>
    |-DeclStmt 0x56496b07c0e0 <line:832:3, col:17>
    | `-VarDecl 0x56496b07c078 <col:3, col:13> col:13 used t199 'pthread_t':'unsigned long'
    |-CallExpr 0x56496b07c2e8 <line:833:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56496b07c2d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56496b07c0f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56496b059488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56496b07c138 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56496b07c118 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56496b07c078 't199' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56496b07c328 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56496b07c1b0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56496b07c188 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56496b07c150 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56496b07c340 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56496b07c1d0 <col:38> 'void *(void *)' Function 0x56496b073878 'P0' 'void *(void *)'
    | `-ParenExpr 0x56496b07c250 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56496b07c228 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56496b07c1f0 <col:51> 'int' 0
    |-DeclStmt 0x56496b07c3d0 <line:834:3, col:17>
    | `-VarDecl 0x56496b07c368 <col:3, col:13> col:13 used t200 'pthread_t':'unsigned long'
    |-CallExpr 0x56496b07c578 <line:835:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56496b07c560 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56496b07c3e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56496b059488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56496b07c428 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56496b07c408 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56496b07c368 't200' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56496b07c5b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56496b07c4a0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56496b07c478 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56496b07c440 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56496b07c5d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56496b07c4c0 <col:38> 'void *(void *)' Function 0x56496b073f78 'P1' 'void *(void *)'
    | `-ParenExpr 0x56496b07c540 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56496b07c518 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56496b07c4e0 <col:51> 'int' 0
    |-DeclStmt 0x56496b07c660 <line:836:3, col:17>
    | `-VarDecl 0x56496b07c5f8 <col:3, col:13> col:13 used t201 'pthread_t':'unsigned long'
    |-CallExpr 0x56496b07c808 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56496b07c7f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56496b07c678 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56496b059488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56496b07c6b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56496b07c698 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56496b07c5f8 't201' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56496b07c848 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56496b07c730 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56496b07c708 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56496b07c6d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56496b07c860 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56496b07c750 <col:38> 'void *(void *)' Function 0x56496b0745e0 'P2' 'void *(void *)'
    | `-ParenExpr 0x56496b07c7d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56496b07c7a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56496b07c770 <col:51> 'int' 0
    |-DeclStmt 0x56496b07c8f0 <line:838:3, col:17>
    | `-VarDecl 0x56496b07c888 <col:3, col:13> col:13 used t202 'pthread_t':'unsigned long'
    |-CallExpr 0x56496b07ca98 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56496b07ca80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56496b07c908 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56496b059488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56496b07c948 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56496b07c928 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56496b07c888 't202' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56496b07cad8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56496b07c9c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56496b07c998 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56496b07c960 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56496b07caf0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56496b07c9e0 <col:38> 'void *(void *)' Function 0x56496b0777a0 'P3' 'void *(void *)'
    | `-ParenExpr 0x56496b07ca60 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56496b07ca38 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56496b07ca00 <col:51> 'int' 0
    |-CallExpr 0x56496b07cb40 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56496b07cb28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56496b07cb08 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56496b07cc30 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56496b07cb60 <col:3> '_Bool' lvalue Var 0x56496b0729d0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56496b07cc18 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56496b07cbf8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56496b07cbe0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56496b07cba0 <col:21> 'int' lvalue Var 0x56496b072278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56496b07cbc0 <col:41> 'int' 4
    |-CallExpr 0x56496b07cc88 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56496b07cc70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56496b07cc50 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56496b07cd00 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56496b07cce8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56496b07cca8 <col:3> 'void (int)' Function 0x56496b018790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56496b07cd40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56496b07cd28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56496b07ccc8 <col:21> '_Bool' lvalue Var 0x56496b0729d0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56496b07cd90 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56496b07cd78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56496b07cd58 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56496b07d078 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56496b07cdb0 <col:3> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
    | `-ConditionalOperator 0x56496b07d048 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56496b07ce70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56496b07ce28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56496b07ce10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56496b07cdd0 <col:7> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56496b07ce58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56496b07ce40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56496b07cdf0 <col:25> '_Bool' lvalue Var 0x56496b072f50 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56496b07d030 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56496b07ce90 <col:42> 'int' lvalue Var 0x56496b073500 'z$w_buff0' 'int'
    |   `-ParenExpr 0x56496b07d010 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56496b07cfe0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56496b07cf50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56496b07cf08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56496b07cef0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56496b07ceb0 <col:55> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56496b07cf38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56496b07cf20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56496b07ced0 <col:73> '_Bool' lvalue Var 0x56496b0731a8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56496b07cfb0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56496b07cf70 <col:90> 'int' lvalue Var 0x56496b0735f8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56496b07cfc8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56496b07cf90 <col:102> 'int' lvalue Var 0x56496b072dc0 'z' 'int'
    |-BinaryOperator 0x56496b07d280 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56496b07d098 <col:3> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56496b07d268 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56496b07d238 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56496b07d158 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56496b07d110 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56496b07d0f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56496b07d0b8 <col:20> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56496b07d140 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56496b07d128 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56496b07d0d8 <col:38> '_Bool' lvalue Var 0x56496b072f50 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56496b07d1f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56496b07d1a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56496b07d178 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56496b07d220 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56496b07d208 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56496b07d1d0 <col:66> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56496b07d568 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56496b07d2a0 <col:3> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56496b07d550 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56496b07d520 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56496b07d440 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56496b07d360 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56496b07d318 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56496b07d300 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56496b07d2c0 <col:20> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56496b07d348 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56496b07d330 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56496b07d2e0 <col:38> '_Bool' lvalue Var 0x56496b072f50 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56496b07d420 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56496b07d3d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56496b07d3c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56496b07d380 <col:56> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56496b07d408 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56496b07d3f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56496b07d3a0 <col:74> '_Bool' lvalue Var 0x56496b0731a8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56496b07d4d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56496b07d490 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56496b07d460 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56496b07d508 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56496b07d4f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56496b07d4b8 <col:102> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56496b07d770 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56496b07d588 <col:3> '_Bool' lvalue Var 0x56496b072f50 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56496b07d758 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56496b07d728 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56496b07d648 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56496b07d600 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56496b07d5e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56496b07d5a8 <col:20> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56496b07d630 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56496b07d618 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56496b07d5c8 <col:38> '_Bool' lvalue Var 0x56496b072f50 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56496b07d6e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56496b07d698 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56496b07d668 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56496b07d710 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56496b07d6f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56496b07d6c0 <col:66> '_Bool' lvalue Var 0x56496b072f50 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56496b07da58 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56496b07d790 <col:3> '_Bool' lvalue Var 0x56496b0731a8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56496b07da40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56496b07da10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56496b07d930 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56496b07d850 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56496b07d808 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56496b07d7f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56496b07d7b0 <col:20> '_Bool' lvalue Var 0x56496b073578 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56496b07d838 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56496b07d820 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56496b07d7d0 <col:38> '_Bool' lvalue Var 0x56496b072f50 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56496b07d910 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56496b07d8c8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56496b07d8b0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56496b07d870 <col:56> '_Bool' lvalue Var 0x56496b073670 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56496b07d8f8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56496b07d8e0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56496b07d890 <col:74> '_Bool' lvalue Var 0x56496b0731a8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56496b07d9c8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56496b07d980 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56496b07d950 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56496b07d9f8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56496b07d9e0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56496b07d9a8 <col:102> '_Bool' lvalue Var 0x56496b0731a8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56496b07dab0 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56496b07da98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56496b07da78 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56496b07db08 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56496b07daf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56496b07dad0 <col:3> 'void ()' Function 0x56496b018e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56496b07df18 <line:852:3, col:169> '_Bool' '='
    | |-DeclRefExpr 0x56496b07db28 <col:3> '_Bool' lvalue Var 0x56496b072a48 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56496b07df00 <col:21, col:169> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56496b07dee8 <col:21, col:169> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56496b07dec8 <col:22, col:169> 'int'
    |       `-BinaryOperator 0x56496b07dea8 <col:23, col:168> 'int' '&&'
    |         |-BinaryOperator 0x56496b07de10 <col:23, col:140> 'int' '&&'
    |         | |-BinaryOperator 0x56496b07dd78 <col:23, col:112> 'int' '&&'
    |         | | |-BinaryOperator 0x56496b07dce0 <col:23, col:84> 'int' '&&'
    |         | | | |-BinaryOperator 0x56496b07dc48 <col:23, col:56> 'int' '&&'
    |         | | | | |-BinaryOperator 0x56496b07dbb0 <col:23, col:28> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x56496b07db88 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x56496b07db48 <col:23> 'int' lvalue Var 0x56496b072ca0 'y' 'int'
    |         | | | | | `-IntegerLiteral 0x56496b07db68 <col:28> 'int' 2
    |         | | | | `-BinaryOperator 0x56496b07dc28 <col:33, col:56> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x56496b07dc10 <col:33> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x56496b07dbd0 <col:33> 'int' lvalue Var 0x56496b072398 '__unbuffered_p0_EAX' 'int'
    |         | | | |   `-IntegerLiteral 0x56496b07dbf0 <col:56> 'int' 0
    |         | | | `-BinaryOperator 0x56496b07dcc0 <col:61, col:84> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x56496b07dca8 <col:61> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x56496b07dc68 <col:61> 'int' lvalue Var 0x56496b0724b8 '__unbuffered_p2_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x56496b07dc88 <col:84> 'int' 2
    |         | | `-BinaryOperator 0x56496b07dd58 <col:89, col:112> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56496b07dd40 <col:89> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56496b07dd00 <col:89> 'int' lvalue Var 0x56496b0725d8 '__unbuffered_p2_EBX' 'int'
    |         | |   `-IntegerLiteral 0x56496b07dd20 <col:112> 'int' 0
    |         | `-BinaryOperator 0x56496b07ddf0 <col:117, col:140> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56496b07ddd8 <col:117> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56496b07dd98 <col:117> 'int' lvalue Var 0x56496b0726f8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x56496b07ddb8 <col:140> 'int' 1
    |         `-BinaryOperator 0x56496b07de88 <col:145, col:168> 'int' '=='
    |           |-ImplicitCastExpr 0x56496b07de70 <col:145> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56496b07de30 <col:145> 'int' lvalue Var 0x56496b072818 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x56496b07de50 <col:168> 'int' 0
    |-CallExpr 0x56496b07df70 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56496b07df58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56496b07df38 <col:3> 'void ()' Function 0x56496b018f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56496b07dfe8 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56496b07dfd0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56496b07df90 <col:3> 'void (int)' Function 0x56496b018bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56496b07e028 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56496b07e010 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56496b07dfb0 <col:21> '_Bool' lvalue Var 0x56496b072a48 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56496b07e060 <line:855:3, col:10>
      `-IntegerLiteral 0x56496b07e040 <col:10> 'int' 0
