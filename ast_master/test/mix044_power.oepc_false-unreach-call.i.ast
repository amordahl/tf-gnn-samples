TranslationUnitDecl 0x5609f979fe18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5609f97a06d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5609f97a03b0 '__int128'
|-TypedefDecl 0x5609f97a0748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5609f97a03d0 'unsigned __int128'
|-TypedefDecl 0x5609f97a0a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5609f97a0820 'struct __NSConstantString_tag'
|   `-Record 0x5609f97a07a0 '__NSConstantString_tag'
|-TypedefDecl 0x5609f97a0af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5609f97a0ab0 'char *'
|   `-BuiltinType 0x5609f979feb0 'char'
|-TypedefDecl 0x5609f97df650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5609f97a0d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5609f97a0bd0 'struct __va_list_tag'
|     `-Record 0x5609f97a0b50 '__va_list_tag'
|-FunctionDecl 0x5609f97df790 <./test/mix044_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5609f97df6c0 <col:31> col:34 'int'
|-FunctionDecl 0x5609f97df958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5609f97dfa80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5609f97dfbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5609f97dfb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5609f97dfdf8 <col:40, col:99>
|   |-IfStmt 0x5609f97dfdc8 <col:42, col:88>
|   | |-UnaryOperator 0x5609f97dfca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5609f97dfc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5609f97dfc70 <col:47> 'int' lvalue ParmVar 0x5609f97dfb38 'expression' 'int'
|   | `-CompoundStmt 0x5609f97dfdb0 <col:59, col:88>
|   |   `-LabelStmt 0x5609f97dfd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5609f97dfd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5609f97dfd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5609f97dfcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5609f97dfa80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5609f97dfde0 <col:89>
|   `-ReturnStmt 0x5609f97dfde8 <col:91>
|-FunctionDecl 0x5609f97dfe40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5609f97dff00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5609f97e0280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609f97dffb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5609f97e0038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5609f97e00b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5609f97e0138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5609f97e0340 <line:10:22>
|-FunctionDecl 0x5609f9806390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609f97e03b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5609f97e0430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5609f97e04b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5609f97e0530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5609f9806450 <line:13:22>
|-FunctionDecl 0x5609f9806700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609f98064c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5609f9806540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5609f98065c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5609f98067b8 <line:15:22>
|-TypedefDecl 0x5609f9806828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5609f979ff70 'unsigned char'
|-TypedefDecl 0x5609f9806898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5609f979ff90 'unsigned short'
|-TypedefDecl 0x5609f9806908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5609f979ffb0 'unsigned int'
|-TypedefDecl 0x5609f9806978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f98069e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5609f979fed0 'signed char'
|-TypedefDecl 0x5609f9806a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5609f979ff70 'unsigned char'
|-TypedefDecl 0x5609f9806ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5609f979fef0 'short'
|-TypedefDecl 0x5609f9806b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5609f979ff90 'unsigned short'
|-TypedefDecl 0x5609f9806ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5609f979ff10 'int'
|-TypedefDecl 0x5609f9806c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5609f979ffb0 'unsigned int'
|-TypedefDecl 0x5609f9806c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9806cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9806d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9806dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9806e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9806eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5609f979ffb0 'unsigned int'
|-TypedefDecl 0x5609f9806f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5609f979ffb0 'unsigned int'
|-TypedefDecl 0x5609f9806f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9807008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9807078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5609f979ffb0 'unsigned int'
|-TypedefDecl 0x5609f98070e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9807158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f98071c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9807238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5609f979ff10 'int'
|-RecordDecl 0x5609f9807290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5609f9807408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5609f98074c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5609f9807460 'struct __fsid_t' sugar
|   `-RecordType 0x5609f9807310 '__fsid_t'
|     `-Record 0x5609f9807290 ''
|-TypedefDecl 0x5609f9807548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f98075b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9807628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9807698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5609f979ffb0 'unsigned int'
|-TypedefDecl 0x5609f9807708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9807778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5609f979ffb0 'unsigned int'
|-TypedefDecl 0x5609f98077e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9807858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5609f979ff10 'int'
|-TypedefDecl 0x5609f98078c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5609f979ff10 'int'
|-TypedefDecl 0x5609f9807938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5609f979ff10 'int'
|-TypedefDecl 0x5609f98079a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5609f97a0630 'void *'
|   `-BuiltinType 0x5609f979fe70 'void'
|-TypedefDecl 0x5609f9807a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9807a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9807af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9807b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9807bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9807c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9807cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9807d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9807d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9807e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9807e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9807f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5609f9807ed0 '__off64_t' sugar
|   |-Typedef 0x5609f98071c8 '__off64_t'
|   `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9808000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5609f9807fc0 '__quad_t *'
|   `-TypedefType 0x5609f9807f60 '__quad_t' sugar
|     |-Typedef 0x5609f9806d68 '__quad_t'
|     `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9808070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5609f97a0ab0 'char *'
|   `-BuiltinType 0x5609f979feb0 'char'
|-TypedefDecl 0x5609f98080e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f9808150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5609f979ffb0 'unsigned int'
|-FunctionDecl 0x5609f9808298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5609f98081c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5609f98095e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5609f98095d8 <line:72:3, col:34>
|     `-CallExpr 0x5609f9809598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5609f9809580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5609f9809510 <col:10> '<builtin fn type>' Function 0x5609f9809380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5609f98095c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5609f9809530 <col:29> 'unsigned int' lvalue ParmVar 0x5609f98081c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5609f9809380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5609f9809420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5609f9809490 <col:10> Implicit
| `-ConstAttr 0x5609f98094e8 <col:10> Implicit
|-FunctionDecl 0x5609f9809740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5609f9809638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5609f9809a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5609f9809a48 <line:77:3, col:34>
|     `-CallExpr 0x5609f9809a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5609f98099f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5609f9809978 <col:10> '<builtin fn type>' Function 0x5609f98097e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5609f9809a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5609f9809998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5609f9809638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5609f98097e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5609f9809888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5609f98098f8 <col:10> Implicit
| `-ConstAttr 0x5609f9809950 <col:10> Implicit
|-TypedefDecl 0x5609f9809a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-TypedefDecl 0x5609f9809b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5609f9809ae0 '__time_t' sugar
|   |-Typedef 0x5609f9807708 '__time_t'
|   `-BuiltinType 0x5609f979ff30 'long'
|-RecordDecl 0x5609f9809b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5609f9809c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5609f9809cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5609f9809d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5609f9809d10 '__pid_t' sugar
|   |-Typedef 0x5609f9807238 '__pid_t'
|   `-BuiltinType 0x5609f979ff10 'int'
|-RecordDecl 0x5609f9809da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5609f9809e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5609f9809eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5609f9809f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5609f9809fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-RecordDecl 0x5609f980a030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5609f980a2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5609f980b3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5609f980a310 'struct cpu_set_t' sugar
|   `-RecordType 0x5609f980a0b0 'cpu_set_t'
|     `-Record 0x5609f980a030 ''
|-FunctionDecl 0x5609f980b678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5609f980b448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5609f980b550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5609f980b728 <line:107:19>
|-FunctionDecl 0x5609f980b900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5609f980b790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5609f980b9a8 <col:69>
|-FunctionDecl 0x5609f980bb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5609f980ba10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5609f980bbc8 <col:64>
|-FunctionDecl 0x5609f980be88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5609f980bc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609f980bd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5609f980bf38 <line:113:22>
|-FunctionDecl 0x5609f980c1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5609f980bfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609f980c098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5609f980c268 <col:88>
|-FunctionDecl 0x5609f980c588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5609f980c2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609f980c3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5609f980c440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5609f980c640 <col:62>
|-FunctionDecl 0x5609f980c7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5609f980c6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5609f980c860 <col:63>
|-FunctionDecl 0x5609f980c988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5609f980ca28 <col:47>
|-FunctionDecl 0x5609f980cb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5609f980ca98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5609f980cbd8 <col:69>
|-FunctionDecl 0x5609f980cce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5609f980cc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5609f980cd88 <col:69>
|-FunctionDecl 0x5609f980d048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5609f980cdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609f980cf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5609f980d0f8 <col:88>
|-TypedefDecl 0x5609f980d188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5609f980d150 '__clock_t' sugar
|   |-Typedef 0x5609f9807548 '__clock_t'
|   `-BuiltinType 0x5609f979ff30 'long'
|-TypedefDecl 0x5609f980d218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5609f980d1e0 '__clockid_t' sugar
|   |-Typedef 0x5609f9807938 '__clockid_t'
|   `-BuiltinType 0x5609f979ff10 'int'
|-TypedefDecl 0x5609f980d2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5609f980d270 '__timer_t' sugar
|   |-Typedef 0x5609f98079a8 '__timer_t'
|   `-PointerType 0x5609f97a0630 'void *'
|     `-BuiltinType 0x5609f979fe70 'void'
|-RecordDecl 0x5609f980d300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5609f980d3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5609f980d440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5609f980d4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5609f980d510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5609f980d578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5609f980d5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5609f980d648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5609f980d6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5609f980d718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5609f980d780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5609f980d7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5609f980d838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5609f980d908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5609f980d978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5609f980da20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5609f980dbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5609f980dc90 <col:45>
|-FunctionDecl 0x5609f980de70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5609f980dd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5609f980df18 <col:54>
|-FunctionDecl 0x5609f980e118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5609f980df80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5609f980dff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5609f980e1c8 <line:157:22>
| `-ConstAttr 0x5609f980e220 <col:63>
|-FunctionDecl 0x5609f980f050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5609f980e318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5609f980f0f8 <col:56>
|-FunctionDecl 0x5609f980f4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5609f980f168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5609f980f1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5609f980f260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5609f980f358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5609f980f560 <col:54>
|-RecordDecl 0x5609f980f5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5609f980f668 parent 0x5609f979fe18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5609f980f8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5609f980f968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5609f980f9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5609f980fa38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5609f980fb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5609f980fc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5609f980fbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5609f980fb80 'struct __locale_struct' sugar
|     `-RecordType 0x5609f980f640 'struct __locale_struct'
|       `-Record 0x5609f980f5b8 '__locale_struct'
|-TypedefDecl 0x5609f980fcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5609f980fcc0 '__locale_t' sugar
|   |-Typedef 0x5609f980fc48 '__locale_t'
|   `-PointerType 0x5609f980fbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5609f980fb80 'struct __locale_struct' sugar
|       `-RecordType 0x5609f980f640 'struct __locale_struct'
|         `-Record 0x5609f980f5b8 '__locale_struct'
|-FunctionDecl 0x5609f9811110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5609f980fd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5609f980fde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5609f980fe60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5609f980fef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5609f980ff68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5609f98111d8 <col:40>
|-FunctionDecl 0x5609f98113c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5609f98112a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5609f9811470 <col:66>
|-FunctionDecl 0x5609f9811580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5609f98114d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5609f9811628 <col:69>
|-FunctionDecl 0x5609f9811858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5609f9811690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5609f9811720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5609f9811908 <col:52>
|-FunctionDecl 0x5609f9811ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5609f9811970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5609f9811a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5609f9811b60 <col:55>
|-FunctionDecl 0x5609f9811cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5609f9811be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5609f9811da0 <col:62>
|-FunctionDecl 0x5609f9811f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5609f9811e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5609f9811fc0 <col:60>
|-FunctionDecl 0x5609f98122b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5609f9812118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5609f9812198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5609f9812368 <col:44>
|-FunctionDecl 0x5609f9812578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5609f98123d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5609f9812450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5609f9812628 <col:49>
|-VarDecl 0x5609f9812728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5609f98127a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5609f9812828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5609f98128f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5609f9812a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5609f9812ac0 <col:42>
|-VarDecl 0x5609f9812b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5609f9812bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5609f9812d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5609f9812c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5609f9812de0 <col:57>
|-FunctionDecl 0x5609f9812ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5609f9812e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5609f9812f98 <col:56>
|-FunctionDecl 0x5609f98130d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5609f9813018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5609f9813178 <col:59>
|-FunctionDecl 0x5609f9813280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5609f98131e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5609f9813328 <col:48>
| `-ConstAttr 0x5609f9813380 <col:89>
|-FunctionDecl 0x5609f98135e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5609f9813438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5609f98134c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5609f9813848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5609f98136d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609f9813768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5609f98138f8 <col:88>
|-FunctionDecl 0x5609f9813a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5609f9813960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609f98139f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5609f9813b40 <col:88>
|-FunctionDecl 0x5609f9813d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5609f9813ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609f9813c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5609f9813e08 <line:208:22>
|-FunctionDecl 0x5609f9814178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5609f9813e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609f9813ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5609f9813f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5609f9814010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5609f9814478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5609f9814278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5609f9814350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5609f9814528 <col:85>
|-FunctionDecl 0x5609f9814918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5609f9814590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609f98146c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5609f98147d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5609f98149d0 <col:52>
|-FunctionDecl 0x5609f9814b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5609f9814a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5609f9814bf0 <col:61>
|-FunctionDecl 0x5609f98150f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5609f9814c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5609f9814cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5609f9814e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5609f9814ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5609f98151b0 <col:62>
|-FunctionDecl 0x5609f98153c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5609f9815218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5609f98152a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5609f9815478 <line:221:22>
|-FunctionDecl 0x5609f9815578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5609f98154e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5609f9815620 <col:65>
|-TypedefDecl 0x5609f9815690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5609f979ffd0 'unsigned long'
|-RecordDecl 0x5609f98156e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5609f9815830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5609f9815898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609f9815948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5609f98158f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5609f9815770 'union pthread_attr_t'
|     `-Record 0x5609f98156e8 'pthread_attr_t'
|-RecordDecl 0x5609f98159a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5609f9815b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5609f9815b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5609f9815c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5609f9815be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5609f9815a20 'struct __pthread_internal_list'
|     `-Record 0x5609f98159a0 '__pthread_internal_list'
|-RecordDecl 0x5609f9815cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5609f9815d58 parent 0x5609f979fe18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5609f9815e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5609f9815e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5609f9815f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5609f9815f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5609f9815fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5609f9816038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5609f981a110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5609f981a1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5609f981a2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5609f981a318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609f981a4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5609f981a440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5609f9815d30 'pthread_mutex_t'
|     `-Record 0x5609f9815cb0 ''
|-RecordDecl 0x5609f981a510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5609f981a650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5609f981a6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5609f981a770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5609f981a710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5609f981a590 'pthread_mutexattr_t'
|     `-Record 0x5609f981a510 ''
|-RecordDecl 0x5609f981a7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5609f981a888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5609f981a950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5609f981a9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5609f981aa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5609f981aa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5609f981aaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5609f981ab58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5609f981abc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5609f981ac28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5609f981ace0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/mix044_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/mix044_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5609f981add0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5609f981ae38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5609f981af70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5609f981af10 'union pthread_cond_t' sugar
|   `-RecordType 0x5609f981a860 'pthread_cond_t'
|     `-Record 0x5609f981a7e0 ''
|-RecordDecl 0x5609f981afe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5609f981c130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5609f981c198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5609f981c250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5609f981c1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5609f981b060 'pthread_condattr_t'
|     `-Record 0x5609f981afe0 ''
|-TypedefDecl 0x5609f981c2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5609f979ffb0 'unsigned int'
|-TypedefDecl 0x5609f981c348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5609f979ff10 'int'
|-RecordDecl 0x5609f981c3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5609f981c448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5609f981c510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5609f981c578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5609f981c5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5609f981c648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5609f981c6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5609f981c718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5609f981c780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5609f981c7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5609f981c850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5609f981c8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5609f981c920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5609f981c9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/mix044_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix044_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5609f981ca78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5609f981cae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609f981cc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5609f981cbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5609f981c420 'pthread_rwlock_t'
|     `-Record 0x5609f981c3a0 ''
|-RecordDecl 0x5609f981cca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5609f981cde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5609f981ce48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609f981cf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5609f981cea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5609f981cd20 'pthread_rwlockattr_t'
|     `-Record 0x5609f981cca0 ''
|-TypedefDecl 0x5609f981cf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5609f979ff14 'volatile int' volatile
|   `-BuiltinType 0x5609f979ff10 'int'
|-RecordDecl 0x5609f981cfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5609f981e140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5609f981e1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609f981e260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5609f981e200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5609f981d060 'pthread_barrier_t'
|     `-Record 0x5609f981cfe0 ''
|-RecordDecl 0x5609f981e2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5609f981e3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5609f981e438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5609f981e4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5609f981e490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5609f981e350 'pthread_barrierattr_t'
|     `-Record 0x5609f981e2d0 ''
|-TypedefDecl 0x5609f981e608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5609f981e5a0 'long [8]' 8 
|   `-BuiltinType 0x5609f979ff30 'long'
|-EnumDecl 0x5609f981e660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5609f981e728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5609f981e778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5609f981e7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5609f981e898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5609f981e8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5609f981e938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5609f981e988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5609f981ea10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5609f981e9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5609f981e9d8 <col:26> 'int' EnumConstant 0x5609f981e898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5609f981ea98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5609f981ea80 <col:29> 'int'
| |   `-DeclRefExpr 0x5609f981ea60 <col:29> 'int' EnumConstant 0x5609f981e8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5609f981eb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5609f981eb08 <col:30> 'int'
| |   `-DeclRefExpr 0x5609f981eae8 <col:30> 'int' EnumConstant 0x5609f981e938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5609f981eba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5609f981eb90 <col:27> 'int'
|     `-DeclRefExpr 0x5609f981eb70 <col:27> 'int' EnumConstant 0x5609f981ea10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5609f981ebf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5609f981ecc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5609f981ed50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5609f981ed38 <col:30> 'int'
| |   `-DeclRefExpr 0x5609f981ed18 <col:30> 'int' EnumConstant 0x5609f981ecc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5609f981eda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5609f981ee28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5609f981ee10 <col:29> 'int'
|     `-DeclRefExpr 0x5609f981edf0 <col:29> 'int' EnumConstant 0x5609f981eda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5609f981ee78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5609f981ef48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5609f981ef98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5609f981efe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5609f981f038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5609f981f150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5609f981f1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5609f981f1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5609f981f278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5609f981f260 <col:31> 'int'
|     `-DeclRefExpr 0x5609f981f240 <col:31> 'int' EnumConstant 0x5609f981f150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5609f981f2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5609f981f398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5609f981f3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5609f981f438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5609f981f508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5609f981f558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5609f981f5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5609f981f678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5609f981f6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5609f981f718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5609f981f958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5609f981f9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5609f981fa28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5609f981fb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5609f981fb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5609f981fc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5609f981fcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5609f981fd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5609f981fdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5609f981fe28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5609f9820488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5609f981ff20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5609f9820030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609f9820270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5609f98202f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5609f9820548 <col:47>
| |-NonNullAttr 0x5609f98205a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5609f98205d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5609f9820700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5609f9820630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5609f9820958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5609f98207b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5609f9820838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5609f9820b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5609f9820a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5609f9820bd0 <col:60>
|-FunctionDecl 0x5609f9820d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5609f9820dc0 <col:54>
| `-ConstAttr 0x5609f9820e18 <col:95>
|-FunctionDecl 0x5609f9820fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5609f9820e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609f9820ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5609f9821098 <line:394:19>
| `-ConstAttr 0x5609f98210f0 <col:60>
|-FunctionDecl 0x5609f9822b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5609f98229d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5609f9822bb0 <col:71>
| `-NonNullAttr 0x5609f9822c08 <col:112, col:126> 1
|-FunctionDecl 0x5609f9822d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5609f9822c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5609f9822db8 <line:397:22>
| `-NonNullAttr 0x5609f9822e10 <col:63, col:77> 1
|-FunctionDecl 0x5609f9823038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5609f9822e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5609f9822ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5609f98230e8 <line:400:22>
| `-NonNullAttr 0x5609f9823140 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f9823348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609f9823188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609f9823208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5609f98233f8 <line:403:22>
| `-NonNullAttr 0x5609f9823450 <col:63, col:77> 1
|-FunctionDecl 0x5609f98236a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5609f9823498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5609f9823540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5609f9823758 <line:406:22>
| `-NonNullAttr 0x5609f98237b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f98249e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5609f98237f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609f9823870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5609f9824a98 <line:409:22>
| `-NonNullAttr 0x5609f9824af0 <col:63, col:77> 1
|-FunctionDecl 0x5609f9824d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5609f9824b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609f9824bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5609f9824dd8 <line:412:22>
| `-NonNullAttr 0x5609f9824e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f9825068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5609f9824e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609f9824f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5609f9825118 <col:37>
| `-NonNullAttr 0x5609f9825170 <col:78, col:95> 1 2
|-FunctionDecl 0x5609f9825358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f98251b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609f9825238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5609f9825408 <line:418:22>
| `-NonNullAttr 0x5609f9825460 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f98255e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609f98254a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609f9825528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5609f9825698 <line:420:22>
| `-NonNullAttr 0x5609f98256f0 <col:63, col:77> 1
|-FunctionDecl 0x5609f9825898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f9825738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609f98257b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5609f9825948 <line:423:22>
| `-NonNullAttr 0x5609f98259c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f9825b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609f9825a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609f9825a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5609f9825bf8 <line:426:22>
| `-NonNullAttr 0x5609f9825c50 <col:63, col:77> 1
|-FunctionDecl 0x5609f9825df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f9825c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609f9825d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5609f9825ea8 <line:429:22>
| `-NonNullAttr 0x5609f9825f00 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f9826088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609f9825f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609f9825fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5609f9826138 <line:431:22>
| `-NonNullAttr 0x5609f9826190 <col:63, col:77> 1
|-FunctionDecl 0x5609f98263b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5609f98261d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609f9826258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5609f9826468 <line:434:22>
| |-NonNullAttr 0x5609f98264c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5609f98264f8 <col:100> "" ""
|-FunctionDecl 0x5609f9826708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5609f9826548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609f98265c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5609f98267b8 <line:437:22>
| |-NonNullAttr 0x5609f9826810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5609f9826848 <col:97> "" ""
|-FunctionDecl 0x5609f9826a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5609f9826898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609f9826910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5609f9826af8 <line:440:22>
| `-NonNullAttr 0x5609f9826b50 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f9826cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5609f9826b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609f9826c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5609f9826d80 <line:443:22>
| `-NonNullAttr 0x5609f9826dd8 <col:63, col:77> 1
|-FunctionDecl 0x5609f98270c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5609f9826e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609f9826ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5609f9826f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5609f9827180 <line:447:22>
| `-NonNullAttr 0x5609f98271d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5609f9827488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5609f9827230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609f98272b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5609f9827328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5609f9827540 <col:43>
| `-NonNullAttr 0x5609f9827598 <col:84, col:98> 1
|-FunctionDecl 0x5609f9827858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5609f98275e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609f9827668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5609f98276f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5609f9827910 <line:452:22>
| `-NonNullAttr 0x5609f9827968 <col:63, col:77> 3
|-FunctionDecl 0x5609f9827c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5609f98279e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609f9827a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5609f9827af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5609f9827d30 <line:456:22>
| `-NonNullAttr 0x5609f9827d88 <col:63, col:80> 2 3
|-FunctionDecl 0x5609f9827f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5609f9827dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609f9827e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5609f9828028 <line:458:22>
|-FunctionDecl 0x5609f98283f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5609f98280f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5609f9828290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5609f98284a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5609f9828650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5609f9828530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5609f98285b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5609f9828838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5609f9828718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5609f9828798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5609f98289f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5609f98288f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5609f9828b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5609f9828bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5609f9828c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5609f9828d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5609f9828dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5609f9828fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix044_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5609f9829098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5609f9829150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5609f98290f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5609f9828c50 '__pthread_unwind_buf_t'
| |   `-Record 0x5609f9828bd0 ''
| `-AlignedAttr 0x5609f98291a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5609f9829220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5609f9829380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5609f98293e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5609f9829450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5609f98294b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5609f98296c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5609f98295b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5609f9829808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5609f9829778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5609f9829a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609f98298c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5609f9829aa8 <line:487:22>
|-RecordDecl 0x5609f9829b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5609f9829e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5609f9829c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5609f9829cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5609f9829ec8 <col:86>
| `-ReturnsTwiceAttr 0x5609f9829f20 <col:12> Implicit
|-FunctionDecl 0x5609f982a248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5609f9829ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5609f982a100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5609f982a2f8 <line:493:22>
| `-NonNullAttr 0x5609f982a350 <col:63, col:77> 1
|-FunctionDecl 0x5609f982a4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609f982a398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609f982a570 <line:495:22>
| `-NonNullAttr 0x5609f982a5c8 <col:63, col:77> 1
|-FunctionDecl 0x5609f982a6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609f982a618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609f982a778 <line:497:22>
| `-NonNullAttr 0x5609f982a7d0 <col:52, col:66> 1
|-FunctionDecl 0x5609f982a8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609f982a818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609f982a978 <line:499:22>
| `-NonNullAttr 0x5609f982a9d0 <col:52, col:66> 1
|-FunctionDecl 0x5609f982bc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609f982ba38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609f982bac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5609f982bcd8 <col:36>
| `-NonNullAttr 0x5609f982bd30 <col:66, col:83> 1 2
|-FunctionDecl 0x5609f982be30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609f982bd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609f982bed8 <line:504:22>
| `-NonNullAttr 0x5609f982bf30 <col:52, col:66> 1
|-FunctionDecl 0x5609f982c1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f982bfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609f982c060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5609f982c278 <line:508:22>
| `-NonNullAttr 0x5609f982c2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f982c598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5609f982c318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609f982c398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5609f982c418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5609f982c650 <line:512:22>
| `-NonNullAttr 0x5609f982c6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5609f982c7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609f982c6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609f982c858 <line:514:22>
| `-NonNullAttr 0x5609f982c8b0 <col:63, col:77> 1
|-FunctionDecl 0x5609f982cad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5609f982c960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5609f982cb80 <line:516:22>
| `-NonNullAttr 0x5609f982cbd8 <col:63, col:77> 1
|-FunctionDecl 0x5609f982cce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5609f982cc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5609f982cd88 <line:518:22>
| `-NonNullAttr 0x5609f982cde0 <col:63, col:77> 1
|-FunctionDecl 0x5609f982d008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f982ce28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609f982cea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609f982d0b8 <line:522:22>
| `-NonNullAttr 0x5609f982d110 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f982d318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609f982d158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609f982d1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5609f982d3c8 <line:525:22>
| `-NonNullAttr 0x5609f982d420 <col:63, col:77> 1
|-FunctionDecl 0x5609f982d5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f982d468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609f982d4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5609f982d678 <line:528:22>
| `-NonNullAttr 0x5609f982d6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f982d858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609f982d718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609f982d798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5609f982d908 <line:530:22>
| `-NonNullAttr 0x5609f982d960 <col:63, col:77> 1
|-FunctionDecl 0x5609f982db20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f982d9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609f982da40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5609f982dbd0 <line:534:22>
| `-NonNullAttr 0x5609f982dc28 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f982ddb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609f982dc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609f982dcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5609f982de68 <line:537:22>
| `-NonNullAttr 0x5609f982dec0 <col:63, col:77> 1
|-FunctionDecl 0x5609f982e068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f982df08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609f982df88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5609f982e118 <line:541:22>
| `-NonNullAttr 0x5609f982e170 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f982e2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609f982e1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609f982e238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5609f982e3a8 <line:544:22>
| `-NonNullAttr 0x5609f982e400 <col:63, col:77> 1
|-FunctionDecl 0x5609f982e5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5609f982e448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609f982e4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5609f982e698 <line:547:22>
| `-NonNullAttr 0x5609f982e6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f982e878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609f982e738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609f982e7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5609f982e928 <line:550:22>
| `-NonNullAttr 0x5609f982e980 <col:63, col:77> 1
|-FunctionDecl 0x5609f982fcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5609f982faa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5609f982fbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5609f982fda8 <col:29>
| `-NonNullAttr 0x5609f982fe00 <col:70, col:84> 1
|-FunctionDecl 0x5609f982ff78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609f982fe48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609f9830020 <line:555:22>
| `-NonNullAttr 0x5609f9830078 <col:63, col:77> 1
|-FunctionDecl 0x5609f9830180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609f98300c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609f9830228 <line:557:22>
| `-NonNullAttr 0x5609f9830280 <col:52, col:66> 1
|-FunctionDecl 0x5609f9830380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609f98302c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609f9830428 <line:559:19>
| `-NonNullAttr 0x5609f9830480 <col:49, col:63> 1
|-FunctionDecl 0x5609f98306b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609f98304c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5609f9830558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5609f9830768 <col:39>
| `-NonNullAttr 0x5609f98307c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5609f98308c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609f9830808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609f9830968 <line:564:22>
| `-NonNullAttr 0x5609f98309c0 <col:52, col:66> 1
|-FunctionDecl 0x5609f9830b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609f9830a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609f9830bd0 <line:566:22>
| `-NonNullAttr 0x5609f9830c28 <col:52, col:66> 1
|-FunctionDecl 0x5609f9830de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609f9830c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5609f9830d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5609f9830e98 <col:39>
| `-NonNullAttr 0x5609f9830ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5609f9830ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609f9830f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609f9831098 <line:571:22>
| `-NonNullAttr 0x5609f98310f0 <col:52, col:66> 1
|-FunctionDecl 0x5609f98312d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5609f98311a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5609f9831380 <line:573:22>
| `-NonNullAttr 0x5609f98313d8 <col:63, col:77> 1
|-FunctionDecl 0x5609f98314e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5609f9831428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5609f9831588 <line:575:22>
| `-NonNullAttr 0x5609f98315e0 <col:63, col:77> 1
|-FunctionDecl 0x5609f9831808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f9831628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5609f98316a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609f98318b8 <line:579:22>
| `-NonNullAttr 0x5609f9831910 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f9831b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5609f9831958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5609f98319d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5609f9831be8 <line:582:22>
| `-NonNullAttr 0x5609f9831c40 <col:63, col:77> 1
|-FunctionDecl 0x5609f9831de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f9831c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5609f9831d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5609f9831e98 <line:586:22>
| `-NonNullAttr 0x5609f9831ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f9832078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5609f9831f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5609f9831fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5609f9832128 <col:36>
| `-NonNullAttr 0x5609f9832180 <col:77, col:91> 1
|-FunctionDecl 0x5609f98324b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5609f9832260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5609f9832370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5609f9832568 <line:591:22>
| `-NonNullAttr 0x5609f98325c0 <col:63, col:77> 1
|-FunctionDecl 0x5609f9832738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5609f9832608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5609f98327e0 <line:593:22>
| `-NonNullAttr 0x5609f9832838 <col:63, col:77> 1
|-FunctionDecl 0x5609f9832940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5609f9832888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5609f98329e8 <line:595:22>
| `-NonNullAttr 0x5609f9832a40 <col:52, col:66> 1
|-FunctionDecl 0x5609f9832b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5609f9832aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5609f9832c00 <line:597:22>
| `-NonNullAttr 0x5609f9832c58 <col:52, col:66> 1
|-FunctionDecl 0x5609f9832e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5609f9832ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5609f9832d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5609f9832f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5609f9833268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609f9832fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5609f9833030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609f98330c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5609f9833320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5609f9833538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5609f9833400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5609f98335e0 <line:606:22>
| `-NonNullAttr 0x5609f9833638 <col:63, col:77> 1
|-FunctionDecl 0x5609f9833740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5609f9833688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5609f98337e8 <line:608:22>
| `-NonNullAttr 0x5609f9833840 <col:63, col:77> 1
|-FunctionDecl 0x5609f9833aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f9833888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5609f9833908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609f9833b50 <line:612:22>
| `-NonNullAttr 0x5609f9833ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f9833db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5609f9833bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5609f9833c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5609f9833e68 <col:37>
| `-NonNullAttr 0x5609f9833ec0 <col:78, col:92> 1
|-FunctionDecl 0x5609f98340d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5609f9833f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5609f9833fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5609f9834188 <line:618:22>
| `-NonNullAttr 0x5609f98341e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f98343a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5609f9834228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5609f98342a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5609f9834458 <line:621:22>
| `-NonNullAttr 0x5609f98344b0 <col:63, col:77> 1
|-FunctionDecl 0x5609f9834758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5609f9834590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5609f9834610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5609f9834808 <line:623:22>
| `-NonNullAttr 0x5609f9834860 <col:63, col:77> 1
|-FunctionDecl 0x5609f98349d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609f98348a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609f9834ab0 <line:625:22>
| `-NonNullAttr 0x5609f9834b08 <col:63, col:77> 1
|-FunctionDecl 0x5609f9834c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609f9834b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609f9834cb8 <line:627:22>
| `-NonNullAttr 0x5609f9834d10 <col:52, col:66> 1
|-FunctionDecl 0x5609f9834e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609f9834d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609f9834eb8 <line:629:22>
| `-NonNullAttr 0x5609f9834f10 <col:52, col:66> 1
|-FunctionDecl 0x5609f9835010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609f9834f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609f98350b8 <line:631:22>
| `-NonNullAttr 0x5609f9835110 <col:52, col:66> 1
|-FunctionDecl 0x5609f98354e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5609f98351f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5609f9835300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5609f9835380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5609f98355a0 <line:635:22>
| `-NonNullAttr 0x5609f98355f8 <col:63, col:77> 1
|-FunctionDecl 0x5609f9835778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5609f9835648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5609f9835820 <line:637:22>
| `-NonNullAttr 0x5609f9835878 <col:63, col:77> 1
|-FunctionDecl 0x5609f9835980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5609f98358c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5609f9835a28 <line:639:22>
| `-NonNullAttr 0x5609f9835a80 <col:52, col:66> 1
|-FunctionDecl 0x5609f9836c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5609f9836b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5609f9836d30 <line:641:22>
| `-NonNullAttr 0x5609f9836d88 <col:63, col:77> 1
|-FunctionDecl 0x5609f9836e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5609f9836dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5609f9836f38 <line:643:22>
| `-NonNullAttr 0x5609f9836f90 <col:63, col:77> 1
|-FunctionDecl 0x5609f98371b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609f9836fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5609f9837058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609f9837268 <line:647:22>
| `-NonNullAttr 0x5609f98372c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609f98374c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5609f9837308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5609f9837388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5609f9837578 <line:650:22>
| `-NonNullAttr 0x5609f98375d0 <col:63, col:77> 1
|-FunctionDecl 0x5609f9837918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5609f98376b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5609f98377d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5609f98379c8 <line:653:22>
| `-NonNullAttr 0x5609f9837a20 <col:63, col:77> 1
|-FunctionDecl 0x5609f9837b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5609f9837a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5609f9837c30 <col:69>
|-FunctionDecl 0x5609f9837da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5609f9837c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5609f9837e50 <col:72>
|-FunctionDecl 0x5609f9838088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5609f9837eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5609f9837f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5609f9838138 <col:44>
|-FunctionDecl 0x5609f9838358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5609f98381a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609f9838218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5609f9838408 <line:660:22>
| `-NonNullAttr 0x5609f9838460 <col:63, col:77> 2
|-FunctionDecl 0x5609f98388a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5609f9838540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5609f9838650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5609f9838760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5609f9838960 <col:47>
|-FunctionDecl 0x5609f9838af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5609f98389d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5609f9838c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5609f9838bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5609f9838da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5609f9838d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5609f9838ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5609f9838e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5609f9838fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5609f9839080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5609f9839140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5609f98391f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5609f9839278 prev 0x5609f98391f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5609f98392e0 <col:24> 'int' 0
|-VarDecl 0x5609f9839318 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5609f9839398 prev 0x5609f9839318 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5609f9839400 <col:27> 'int' 0
|-VarDecl 0x5609f9839438 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5609f98394b8 prev 0x5609f9839438 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5609f9839520 <col:27> 'int' 0
|-VarDecl 0x5609f9839558 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5609f98395d8 prev 0x5609f9839558 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5609f9839640 <col:27> 'int' 0
|-VarDecl 0x5609f9839678 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x5609f98396f8 prev 0x5609f9839678 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5609f9839760 <col:9> 'int' 0
|-VarDecl 0x5609f9839798 <line:682:1, col:5> col:5 used b 'int'
|-VarDecl 0x5609f9839818 prev 0x5609f9839798 <line:683:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x5609f9839880 <col:9> 'int' 0
|-VarDecl 0x5609f98398b0 <line:684:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x5609f9839930 <line:685:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x5609f98399a8 <line:686:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x5609f9839a20 <line:687:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x5609f9839b00 <line:688:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x5609f9839b78 <line:689:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x5609f9839bf0 <line:690:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x5609f9839c68 <line:691:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x5609f9839ce0 <line:692:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x5609f9839d58 <line:693:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x5609f9839dd0 <line:694:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x5609f9839e48 <line:695:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x5609f9839ec0 <line:696:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x5609f9839f40 <line:697:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x5609f9839fc0 <line:698:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x5609f983a038 <line:699:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x5609f983a0b8 <line:700:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x5609f983a130 <line:701:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x5609f983a1a8 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5609f983a220 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5609f983a2a0 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x5609f983a320 prev 0x5609f983a2a0 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5609f983a388 <col:9> 'int' 0
|-VarDecl 0x5609f983a3c0 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x5609f983a440 prev 0x5609f983a3c0 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5609f983a4a8 <col:9> 'int' 0
|-VarDecl 0x5609f983a4e0 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x5609f983a560 prev 0x5609f983a4e0 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5609f983a5c8 <col:9> 'int' 0
|-VarDecl 0x5609f983a5f8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5609f983a670 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5609f983a788 prev 0x5609f9838af0 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5609f983a6f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5609f983c028 <line:713:1, line:741:1>
|   |-CallExpr 0x5609f983a898 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983a880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983a830 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983a910 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5609f983a8b8 <col:3> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5609f983a8f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f983a8d8 <col:15> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x5609f983a970 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5609f983a930 <col:3> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x5609f983a950 <col:15> 'int' 1
|   |-BinaryOperator 0x5609f983a9e8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983a990 <col:3> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983a9d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f983a9b0 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609f983aa80 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983aa08 <col:3> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5609f983aa58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609f983aa28 <col:27> 'int' 1
|   |-CallExpr 0x5609f983ac18 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5609f983ac00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5609f983aaa0 <col:3> 'void (int)' Function 0x5609f97dfbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5609f983abb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5609f983ab90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5609f983ab70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5609f983ab28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5609f983ab10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5609f983aac0 <col:23> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5609f983ab58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5609f983ab40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5609f983aae0 <col:41> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609f983ac98 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983ac40 <col:3> '_Bool' lvalue Var 0x5609f9839c68 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983ac80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f983ac60 <col:20> '_Bool' lvalue Var 0x5609f98399a8 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5609f983ad10 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983acb8 <col:3> '_Bool' lvalue Var 0x5609f9839ce0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983acf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f983acd8 <col:20> '_Bool' lvalue Var 0x5609f9839a20 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5609f983ad88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983ad30 <col:3> '_Bool' lvalue Var 0x5609f9839d58 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983ad70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f983ad50 <col:20> '_Bool' lvalue Var 0x5609f9839b00 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5609f983ae00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983ada8 <col:3> '_Bool' lvalue Var 0x5609f9839dd0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983ade8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f983adc8 <col:20> '_Bool' lvalue Var 0x5609f9839b78 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5609f983ae78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983ae20 <col:3> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983ae60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f983ae40 <col:20> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5609f983af10 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983ae98 <col:3> '_Bool' lvalue Var 0x5609f9839a20 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5609f983aee8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609f983aeb8 <col:27> 'int' 1
|   |-CallExpr 0x5609f983af68 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983af50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983af30 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983afc0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983afa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983af88 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983b020 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5609f983afe0 <col:3> 'int' lvalue Var 0x5609f983a320 'x' 'int'
|   | `-IntegerLiteral 0x5609f983b000 <col:7> 'int' 1
|   |-CallExpr 0x5609f983b078 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983b060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983b040 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983b0d0 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983b0b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983b098 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983b3b8 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5609f983b0f0 <col:3> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   | `-ConditionalOperator 0x5609f983b388 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5609f983b1b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5609f983b168 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5609f983b150 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5609f983b110 <col:7> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5609f983b198 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5609f983b180 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5609f983b130 <col:25> '_Bool' lvalue Var 0x5609f9839a20 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5609f983b370 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f983b1d0 <col:42> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5609f983b350 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5609f983b320 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5609f983b290 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609f983b248 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609f983b230 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609f983b1f0 <col:55> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609f983b278 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609f983b260 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609f983b210 <col:73> '_Bool' lvalue Var 0x5609f9839ce0 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5609f983b2f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609f983b2b0 <col:90> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5609f983b308 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983b2d0 <col:102> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   |-BinaryOperator 0x5609f983b5c0 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983b3d8 <col:3> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983b5a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983b578 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609f983b498 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609f983b450 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609f983b438 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609f983b3f8 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609f983b480 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609f983b468 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609f983b418 <col:38> '_Bool' lvalue Var 0x5609f9839a20 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983b530 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983b4e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983b4b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983b560 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983b548 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983b510 <col:66> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609f983b8a8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983b5e0 <col:3> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983b890 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983b860 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609f983b780 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609f983b6a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609f983b658 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609f983b640 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609f983b600 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609f983b688 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609f983b670 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609f983b620 <col:38> '_Bool' lvalue Var 0x5609f9839a20 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5609f983b760 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609f983b718 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609f983b700 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609f983b6c0 <col:56> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609f983b748 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609f983b730 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609f983b6e0 <col:74> '_Bool' lvalue Var 0x5609f9839ce0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983b818 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983b7d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983b7a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983b848 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983b830 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983b7f8 <col:102> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5609f983bab0 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983b8c8 <col:3> '_Bool' lvalue Var 0x5609f9839a20 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983ba98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983ba68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609f983b988 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609f983b940 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609f983b928 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609f983b8e8 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609f983b970 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609f983b958 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609f983b908 <col:38> '_Bool' lvalue Var 0x5609f9839a20 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983ba20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983b9d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983b9a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983ba50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983ba38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983ba00 <col:66> '_Bool' lvalue Var 0x5609f9839a20 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5609f983bda8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983bad0 <col:3> '_Bool' lvalue Var 0x5609f9839ce0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983bd90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983bd60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609f983bc80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609f983bba0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609f983bb58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609f983bb40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609f983baf0 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609f983bb88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609f983bb70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609f983bb20 <col:38> '_Bool' lvalue Var 0x5609f9839a20 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5609f983bc60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609f983bc18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609f983bc00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609f983bbc0 <col:56> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609f983bc48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609f983bc30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609f983bbe0 <col:74> '_Bool' lvalue Var 0x5609f9839ce0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983bd18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983bcd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983bca0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983bd48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983bd30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983bcf8 <col:102> '_Bool' lvalue Var 0x5609f9839ce0 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5609f983be00 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983bde8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983bdc8 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983be58 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983be40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983be20 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983bf10 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5609f983be78 <col:3> 'int' lvalue Var 0x5609f9839278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5609f983bef0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5609f983bed8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f983be98 <col:22> 'int' lvalue Var 0x5609f9839278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5609f983beb8 <col:41> 'int' 1
|   |-CallExpr 0x5609f983bf68 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983bf50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983bf30 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5609f983c018 <line:740:3, col:36>
|     `-CallExpr 0x5609f983bff8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5609f983bfe0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5609f983bf88 <col:10> 'void *(void)' Function 0x5609f97df958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5609f983c1c0 prev 0x5609f9838c48 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5609f983c128 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5609f983d3f8 <line:743:1, line:761:1>
|   |-CallExpr 0x5609f983c2a0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983c288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983c268 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983c300 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5609f983c2c0 <col:3> 'int' lvalue Var 0x5609f983a320 'x' 'int'
|   | `-IntegerLiteral 0x5609f983c2e0 <col:7> 'int' 2
|   |-CallExpr 0x5609f983c358 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983c340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983c320 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983c3b0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983c398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983c378 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983c428 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5609f983c3d0 <col:3> 'int' lvalue Var 0x5609f9839398 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5609f983c410 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f983c3f0 <col:25> 'int' lvalue Var 0x5609f983a440 'y' 'int'
|   |-CallExpr 0x5609f983c480 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983c468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983c448 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983c4d8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983c4c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983c4a0 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983c7c0 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5609f983c4f8 <col:3> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   | `-ConditionalOperator 0x5609f983c790 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5609f983c5b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5609f983c570 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5609f983c558 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5609f983c518 <col:7> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5609f983c5a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5609f983c588 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5609f983c538 <col:25> '_Bool' lvalue Var 0x5609f9839b00 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609f983c778 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f983c5d8 <col:42> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5609f983c758 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5609f983c728 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5609f983c698 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609f983c650 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609f983c638 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609f983c5f8 <col:55> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609f983c680 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609f983c668 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609f983c618 <col:73> '_Bool' lvalue Var 0x5609f9839d58 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5609f983c6f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609f983c6b8 <col:90> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5609f983c710 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983c6d8 <col:102> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   |-BinaryOperator 0x5609f983c9c8 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983c7e0 <col:3> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983c9b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983c980 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609f983c8a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609f983c858 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609f983c840 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609f983c800 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609f983c888 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609f983c870 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609f983c820 <col:38> '_Bool' lvalue Var 0x5609f9839b00 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983c938 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983c8f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983c8c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983c968 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983c950 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983c918 <col:66> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609f983ccc0 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983c9e8 <col:3> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983cca8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983cc78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609f983cb98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609f983caa8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609f983ca60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609f983ca48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609f983ca08 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609f983ca90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609f983ca78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609f983ca28 <col:38> '_Bool' lvalue Var 0x5609f9839b00 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5609f983cb78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609f983cb30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609f983cb08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609f983cac8 <col:56> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609f983cb60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609f983cb48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609f983cae8 <col:74> '_Bool' lvalue Var 0x5609f9839d58 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983cc30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983cbe8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983cbb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983cc60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983cc48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983cc10 <col:102> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5609f983cec8 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983cce0 <col:3> '_Bool' lvalue Var 0x5609f9839b00 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983ceb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983ce80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609f983cda0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609f983cd58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609f983cd40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609f983cd00 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609f983cd88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609f983cd70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609f983cd20 <col:38> '_Bool' lvalue Var 0x5609f9839b00 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983ce38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983cdf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983cdc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983ce68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983ce50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983ce18 <col:66> '_Bool' lvalue Var 0x5609f9839b00 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5609f983d1b0 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983cee8 <col:3> '_Bool' lvalue Var 0x5609f9839d58 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983d198 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983d168 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609f983d088 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609f983cfa8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609f983cf60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609f983cf48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609f983cf08 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609f983cf90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609f983cf78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609f983cf28 <col:38> '_Bool' lvalue Var 0x5609f9839b00 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5609f983d068 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609f983d020 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609f983d008 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609f983cfc8 <col:56> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609f983d050 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609f983d038 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609f983cfe8 <col:74> '_Bool' lvalue Var 0x5609f9839d58 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983d120 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983d0d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983d0a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983d150 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983d138 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983d100 <col:102> '_Bool' lvalue Var 0x5609f9839d58 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5609f983d208 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983d1f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983d1d0 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983d260 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983d248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983d228 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983d318 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5609f983d280 <col:3> 'int' lvalue Var 0x5609f9839278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5609f983d2f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5609f983d2e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f983d2a0 <col:22> 'int' lvalue Var 0x5609f9839278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5609f983d2c0 <col:41> 'int' 1
|   |-CallExpr 0x5609f983d370 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983d358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983d338 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5609f983d3e8 <line:760:3, col:36>
|     `-CallExpr 0x5609f983d3c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5609f983d3b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5609f983d390 <col:10> 'void *(void)' Function 0x5609f97df958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5609f983d540 prev 0x5609f9838da0 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5609f983d4a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5609f983e768 <line:763:1, line:781:1>
|   |-CallExpr 0x5609f983d620 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983d608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983d5e8 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983d680 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5609f983d640 <col:3> 'int' lvalue Var 0x5609f983a440 'y' 'int'
|   | `-IntegerLiteral 0x5609f983d660 <col:7> 'int' 1
|   |-CallExpr 0x5609f983d6d8 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983d6c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983d6a0 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983d730 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983d718 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983d6f8 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983d790 <line:768:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5609f983d750 <col:3> 'int' lvalue Var 0x5609f983a560 'z' 'int'
|   | `-IntegerLiteral 0x5609f983d770 <col:7> 'int' 1
|   |-CallExpr 0x5609f983d7e8 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983d7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983d7b0 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983d840 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983d828 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983d808 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983db40 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5609f983d860 <col:3> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   | `-ConditionalOperator 0x5609f983daf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5609f983d920 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5609f983d8d8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5609f983d8c0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5609f983d880 <col:7> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5609f983d908 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5609f983d8f0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5609f983d8a0 <col:25> '_Bool' lvalue Var 0x5609f9839b78 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5609f983dae0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f983d940 <col:42> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5609f983dac0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5609f983da90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5609f983da00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609f983d9b8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609f983d9a0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609f983d960 <col:55> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609f983d9e8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609f983d9d0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609f983d980 <col:73> '_Bool' lvalue Var 0x5609f9839dd0 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5609f983da60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609f983da20 <col:90> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5609f983da78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983da40 <col:102> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   |-BinaryOperator 0x5609f983dd48 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983db60 <col:3> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983dd30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983dd00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609f983dc20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609f983dbd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609f983dbc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609f983db80 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609f983dc08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609f983dbf0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609f983dba0 <col:38> '_Bool' lvalue Var 0x5609f9839b78 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983dcb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983dc70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983dc40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983dce8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983dcd0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983dc98 <col:66> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609f983e030 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983dd68 <col:3> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983e018 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983dfe8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609f983df08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609f983de28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609f983dde0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609f983ddc8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609f983dd88 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609f983de10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609f983ddf8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609f983dda8 <col:38> '_Bool' lvalue Var 0x5609f9839b78 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5609f983dee8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609f983dea0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609f983de88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609f983de48 <col:56> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609f983ded0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609f983deb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609f983de68 <col:74> '_Bool' lvalue Var 0x5609f9839dd0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983dfa0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983df58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983df28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983dfd0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983dfb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983df80 <col:102> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5609f983e238 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983e050 <col:3> '_Bool' lvalue Var 0x5609f9839b78 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983e220 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983e1f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609f983e110 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609f983e0c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609f983e0b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609f983e070 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609f983e0f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609f983e0e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609f983e090 <col:38> '_Bool' lvalue Var 0x5609f9839b78 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983e1a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983e160 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983e130 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983e1d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983e1c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983e188 <col:66> '_Bool' lvalue Var 0x5609f9839b78 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5609f983e520 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983e258 <col:3> '_Bool' lvalue Var 0x5609f9839dd0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983e508 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f983e4d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609f983e3f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609f983e318 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609f983e2d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609f983e2b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609f983e278 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609f983e300 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609f983e2e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609f983e298 <col:38> '_Bool' lvalue Var 0x5609f9839b78 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5609f983e3d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609f983e390 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609f983e378 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609f983e338 <col:56> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609f983e3c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609f983e3a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609f983e358 <col:74> '_Bool' lvalue Var 0x5609f9839dd0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f983e490 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f983e448 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f983e418 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f983e4c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f983e4a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983e470 <col:102> '_Bool' lvalue Var 0x5609f9839dd0 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5609f983e578 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983e560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983e540 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983e5d0 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983e5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983e598 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983e688 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5609f983e5f0 <col:3> 'int' lvalue Var 0x5609f9839278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5609f983e668 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5609f983e650 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f983e610 <col:22> 'int' lvalue Var 0x5609f9839278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5609f983e630 <col:41> 'int' 1
|   |-CallExpr 0x5609f983e6e0 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983e6c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983e6a8 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5609f983e758 <line:780:3, col:36>
|     `-CallExpr 0x5609f983e738 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5609f983e720 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5609f983e700 <col:10> 'void *(void)' Function 0x5609f97df958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5609f983e8b0 prev 0x5609f9838ef8 <line:782:1, line:820:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5609f983e818 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5609f98426a8 <line:783:1, line:820:1>
|   |-CallExpr 0x5609f983e990 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983e978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983e958 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983e9f0 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5609f983e9b0 <col:3> 'int' lvalue Var 0x5609f983a560 'z' 'int'
|   | `-IntegerLiteral 0x5609f983e9d0 <col:7> 'int' 2
|   |-CallExpr 0x5609f983ea48 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983ea30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983ea10 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983eaa0 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983ea88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983ea68 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983eb00 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5609f983eac0 <col:3> 'int' lvalue Var 0x5609f98396f8 'a' 'int'
|   | `-IntegerLiteral 0x5609f983eae0 <col:7> 'int' 1
|   |-CallExpr 0x5609f983eb68 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983eb50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983eb20 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983ebc0 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983eba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983eb88 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983ec38 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5609f983ebe0 <col:3> 'int' lvalue Var 0x5609f98394b8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5609f983ec20 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f983ec00 <col:25> 'int' lvalue Var 0x5609f98396f8 'a' 'int'
|   |-CallExpr 0x5609f983ec90 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f983ec78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983ec58 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f983ece8 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f983ecd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f983ecb0 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f983ed98 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983ed08 <col:3> '_Bool' lvalue Var 0x5609f983a5f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983ed80 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5609f983ed60 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5609f983ed48 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5609f983ed28 <col:19> 'void *(void)' Function 0x5609f97df958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5609f983ee48 <line:795:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983edb8 <col:3> '_Bool' lvalue Var 0x5609f983a670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983ee30 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5609f983ee10 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5609f983edf8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5609f983edd8 <col:19> 'void *(void)' Function 0x5609f97df958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5609f983eec0 <line:796:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983ee68 <col:3> '_Bool' lvalue Var 0x5609f98398b0 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5609f983eea8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f983ee88 <col:21> '_Bool' lvalue Var 0x5609f983a670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5609f983ef38 <line:797:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5609f983eee0 <col:3> 'int' lvalue Var 0x5609f9839930 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5609f983ef20 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f983ef00 <col:15> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   |-BinaryOperator 0x5609f983f370 <line:798:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5609f983ef58 <col:3> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   | `-ConditionalOperator 0x5609f983f340 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5609f983f168 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5609f983f088 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5609f983efb0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5609f983ef98 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5609f983ef78 <col:8> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5609f983f068 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5609f983f000 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5609f983efe8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5609f983efc8 <col:27> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x5609f983f050 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5609f983f038 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5609f983f018 <col:46> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5609f983f148 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5609f983f0e0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5609f983f0c8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5609f983f0a8 <col:65> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x5609f983f130 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5609f983f118 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5609f983f0f8 <col:84> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5609f983f328 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f983f188 <col:101> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   |   `-ParenExpr 0x5609f983f308 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5609f983f2d8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5609f983f248 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609f983f200 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609f983f1e8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609f983f1a8 <col:106> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609f983f230 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609f983f218 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609f983f1c8 <col:124> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5609f983f2a8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609f983f268 <col:141> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5609f983f2c0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f983f288 <col:153> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5609f983f880 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5609f983f390 <col:3> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x5609f983f850 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5609f983f820 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609f983f808 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609f983f3b0 <col:15> '_Bool' lvalue Var 0x5609f983a670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609f983f838 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f983f3d0 <col:31> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5609f983f7e8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5609f983f7b8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5609f983f5e0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5609f983f500 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5609f983f428 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5609f983f410 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5609f983f3f0 <col:45> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5609f983f4e0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5609f983f478 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5609f983f460 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5609f983f440 <col:64> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5609f983f4c8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5609f983f4b0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5609f983f490 <col:83> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5609f983f5c0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5609f983f558 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5609f983f540 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5609f983f520 <col:102> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5609f983f5a8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5609f983f590 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5609f983f570 <col:121> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5609f983f7a0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609f983f600 <col:138> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x5609f983f780 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5609f983f750 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5609f983f6c0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5609f983f678 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5609f983f660 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5609f983f620 <col:151> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5609f983f6a8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5609f983f690 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5609f983f640 <col:169> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5609f983f720 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5609f983f6e0 <col:186> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5609f983f738 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5609f983f700 <col:198> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x5609f983fda0 <line:800:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5609f983f8a0 <col:3> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x5609f983fd70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5609f983fd40 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609f983fd28 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609f983f8c0 <col:15> '_Bool' lvalue Var 0x5609f983a670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609f983fd58 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f983f8e0 <col:31> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x5609f983fd08 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5609f983fcd8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5609f983faf0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5609f983fa10 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5609f983f938 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5609f983f920 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5609f983f900 <col:45> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5609f983f9f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5609f983f988 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5609f983f970 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5609f983f950 <col:64> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5609f983f9d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5609f983f9c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5609f983f9a0 <col:83> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5609f983fad0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5609f983fa68 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5609f983fa50 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5609f983fa30 <col:102> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5609f983fab8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5609f983faa0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5609f983fa80 <col:121> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5609f983fcc0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609f983fb10 <col:138> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x5609f983fca0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5609f983fc70 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5609f983fbe0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5609f983fb98 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5609f983fb80 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5609f983fb30 <col:151> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5609f983fbc8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5609f983fbb0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5609f983fb60 <col:169> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5609f983fc40 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5609f983fc00 <col:186> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5609f983fc58 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5609f983fc20 <col:198> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5609f9840348 <line:801:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5609f983fdc0 <col:3> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609f9840330 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f9840300 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5609f98402b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609f98402a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609f983fde0 <col:20> '_Bool' lvalue Var 0x5609f983a670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f98402e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609f98402d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609f983fe00 <col:36> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5609f9840280 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5609f9840250 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5609f9840010 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609f983ff30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609f983fe58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609f983fe40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609f983fe20 <col:55> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609f983ff10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609f983fea8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609f983fe90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609f983fe70 <col:74> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5609f983fef8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609f983fee0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609f983fec0 <col:93> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609f983fff0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609f983ff88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609f983ff70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609f983ff50 <col:112> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5609f983ffd8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609f983ffc0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609f983ffa0 <col:131> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5609f9840238 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609f9840220 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609f9840030 <col:148> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5609f9840200 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5609f98401d0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5609f98400f0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609f98400a8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609f9840090 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609f9840050 <col:166> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609f98400d8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609f98400c0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609f9840070 <col:184> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5609f9840188 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609f9840140 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609f9840110 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609f98401b8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5609f98401a0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5609f9840168 <col:212> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609f9840910 <line:802:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5609f9840368 <col:3> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609f98408f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f98408c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5609f9840880 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609f9840868 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609f9840388 <col:20> '_Bool' lvalue Var 0x5609f983a670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f98408b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609f9840898 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609f98403a8 <col:36> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5609f9840848 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5609f9840818 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5609f98405b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609f98404d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609f9840400 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609f98403e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609f98403c8 <col:55> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609f98404b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609f9840450 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609f9840438 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609f9840418 <col:74> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5609f98404a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609f9840488 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609f9840468 <col:93> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609f9840598 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609f9840530 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609f9840518 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609f98404f8 <col:112> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5609f9840580 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609f9840568 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609f9840548 <col:131> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5609f9840800 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609f98407e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609f98405d8 <col:148> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5609f98407c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5609f9840798 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5609f9840698 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609f9840650 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609f9840638 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609f98405f8 <col:166> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609f9840680 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609f9840668 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609f9840618 <col:184> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5609f9840768 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609f98406e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609f98406b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609f9840780 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5609f9840740 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5609f9840710 <col:219> 'int' 0
|   |-BinaryOperator 0x5609f9840ec8 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5609f9840930 <col:3> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5609f9840eb0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f9840e80 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5609f9840e38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609f9840e20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609f9840950 <col:20> '_Bool' lvalue Var 0x5609f983a670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f9840e68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609f9840e50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609f9840970 <col:36> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x5609f9840e00 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5609f9840dd0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5609f9840b90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609f9840aa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609f98409c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609f98409b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609f9840990 <col:55> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609f9840a80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609f9840a18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609f9840a00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609f98409e0 <col:74> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5609f9840a68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609f9840a50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609f9840a30 <col:93> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609f9840b70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609f9840af8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609f9840ae0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609f9840ac0 <col:112> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5609f9840b48 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609f9840b30 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609f9840b10 <col:131> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5609f9840db8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609f9840da0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609f9840bb0 <col:148> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x5609f9840d80 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5609f9840d50 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5609f9840c70 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609f9840c28 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609f9840c10 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609f9840bd0 <col:166> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609f9840c58 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609f9840c40 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609f9840bf0 <col:184> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5609f9840d08 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609f9840cc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609f9840c90 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609f9840d38 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5609f9840d20 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5609f9840ce8 <col:212> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5609f9841490 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5609f9840ee8 <col:3> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5609f9841478 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f9841448 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5609f9841400 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609f98413e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609f9840f08 <col:20> '_Bool' lvalue Var 0x5609f983a670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f9841430 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609f9841418 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609f9840f28 <col:36> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x5609f98413c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5609f9841398 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5609f9841138 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609f9841058 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609f9840f80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609f9840f68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609f9840f48 <col:55> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609f9841038 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609f9840fd0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609f9840fb8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609f9840f98 <col:74> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5609f9841020 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609f9841008 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609f9840fe8 <col:93> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609f9841118 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609f98410b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609f9841098 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609f9841078 <col:112> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5609f9841100 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609f98410e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609f98410c8 <col:131> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5609f9841380 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609f9841368 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609f9841158 <col:148> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x5609f9841348 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5609f9841318 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5609f9841218 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609f98411d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609f98411b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609f9841178 <col:166> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609f9841200 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609f98411e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609f9841198 <col:184> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5609f98412e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609f9841268 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609f9841238 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609f9841300 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5609f98412c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5609f9841290 <col:219> 'int' 0
|   |-BinaryOperator 0x5609f9841508 <line:805:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5609f98414b0 <col:3> 'int' lvalue Var 0x5609f98395d8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5609f98414f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609f98414d0 <col:25> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   |-BinaryOperator 0x5609f9841638 <line:806:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5609f9841528 <col:3> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   | `-ConditionalOperator 0x5609f9841608 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5609f98415c0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609f98415a8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609f9841548 <col:7> '_Bool' lvalue Var 0x5609f98398b0 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5609f98415d8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f9841568 <col:25> 'int' lvalue Var 0x5609f9839930 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5609f98415f0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5609f9841588 <col:37> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   |-BinaryOperator 0x5609f98416d0 <line:807:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5609f9841658 <col:3> '_Bool' lvalue Var 0x5609f98398b0 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5609f98416a8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609f9841678 <col:28> 'int' 0
|   |-CallExpr 0x5609f9841728 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f9841710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f98416f0 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f9841780 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f9841768 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f9841748 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f9841a68 <line:810:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5609f98417a0 <col:3> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   | `-ConditionalOperator 0x5609f9841a38 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5609f9841860 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5609f9841818 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5609f9841800 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5609f98417c0 <col:7> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5609f9841848 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5609f9841830 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5609f98417e0 <col:25> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5609f9841a20 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f9841880 <col:42> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5609f9841a00 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5609f98419d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5609f9841940 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609f98418f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609f98418e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609f98418a0 <col:55> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609f9841928 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609f9841910 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609f98418c0 <col:73> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5609f98419a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609f9841960 <col:90> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5609f98419b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f9841980 <col:102> 'int' lvalue Var 0x5609f9839818 'b' 'int'
|   |-BinaryOperator 0x5609f9841c88 <line:811:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609f9841a88 <col:3> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609f9841c70 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f9841c40 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609f9841b48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609f9841b00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609f9841ae8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609f9841aa8 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609f9841b30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609f9841b18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609f9841ac8 <col:38> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f9841bf8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f9841bb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f9841b80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f9841c28 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f9841c10 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f9841bd8 <col:66> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609f9841f70 <line:812:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609f9841ca8 <col:3> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609f9841f58 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f9841f28 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609f9841e48 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609f9841d68 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609f9841d20 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609f9841d08 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609f9841cc8 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609f9841d50 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609f9841d38 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609f9841ce8 <col:38> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5609f9841e28 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609f9841de0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609f9841dc8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609f9841d88 <col:56> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609f9841e10 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609f9841df8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609f9841da8 <col:74> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f9841ee0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f9841e98 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f9841e68 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f9841f10 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f9841ef8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f9841ec0 <col:102> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5609f9842178 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609f9841f90 <col:3> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5609f9842160 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f9842130 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609f9842050 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609f9842008 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609f9841ff0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609f9841fb0 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609f9842038 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609f9842020 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609f9841fd0 <col:38> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f98420e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f98420a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f9842070 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f9842118 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f9842100 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f98420c8 <col:66> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5609f9842460 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609f9842198 <col:3> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5609f9842448 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609f9842418 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609f9842338 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609f9842258 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609f9842210 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609f98421f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609f98421b8 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609f9842240 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609f9842228 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609f98421d8 <col:38> '_Bool' lvalue Var 0x5609f9839bf0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5609f9842318 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609f98422d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609f98422b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609f9842278 <col:56> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609f9842300 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609f98422e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609f9842298 <col:74> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5609f98423d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609f9842388 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609f9842358 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609f9842400 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609f98423e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609f98423b0 <col:102> '_Bool' lvalue Var 0x5609f9839e48 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5609f98424b8 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f98424a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f9842480 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609f9842510 <line:816:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609f98424f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f98424d8 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609f98425c8 <line:817:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5609f9842530 <col:3> 'int' lvalue Var 0x5609f9839278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5609f98425a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5609f9842590 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609f9842550 <col:22> 'int' lvalue Var 0x5609f9839278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5609f9842570 <col:41> 'int' 1
|   |-CallExpr 0x5609f9842620 <line:818:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609f9842608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609f98425e8 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5609f9842698 <line:819:3, col:36>
|     `-CallExpr 0x5609f9842678 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5609f9842660 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5609f9842640 <col:10> 'void *(void)' Function 0x5609f97df958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5609f98427f8 prev 0x5609f9838fc0 <line:821:1, line:823:1> line:821:6 fence 'void ()'
| `-CompoundStmt 0x5609f9842898 <line:822:1, line:823:1>
|-FunctionDecl 0x5609f98428c8 prev 0x5609f9839080 <line:824:1, line:826:1> line:824:6 isync 'void ()'
| `-CompoundStmt 0x5609f9842968 <line:825:1, line:826:1>
|-FunctionDecl 0x5609f9842998 prev 0x5609f9839140 <line:827:1, line:829:1> line:827:6 lwfence 'void ()'
| `-CompoundStmt 0x5609f9842a38 <line:828:1, line:829:1>
`-FunctionDecl 0x5609f9842aa8 <line:830:1, line:856:1> line:830:5 main 'int ()'
  `-CompoundStmt 0x5609f9844bb0 <line:831:1, line:856:1>
    |-DeclStmt 0x5609f9842bf8 <line:832:3, col:18>
    | `-VarDecl 0x5609f9842b90 <col:3, col:13> col:13 used t1163 'pthread_t':'unsigned long'
    |-CallExpr 0x5609f9842e08 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5609f9842df0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609f9842c10 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5609f9820488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5609f9842c50 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5609f9842c30 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5609f9842b90 't1163' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5609f9842e48 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5609f9842cc8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5609f9842ca0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5609f9842c68 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5609f9842e60 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609f9842ce8 <col:39> 'void *(void *)' Function 0x5609f983a788 'P0' 'void *(void *)'
    | `-ParenExpr 0x5609f9842d68 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5609f9842d40 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5609f9842d08 <col:52> 'int' 0
    |-DeclStmt 0x5609f9842ef0 <line:834:3, col:18>
    | `-VarDecl 0x5609f9842e88 <col:3, col:13> col:13 used t1164 'pthread_t':'unsigned long'
    |-CallExpr 0x5609f9843098 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5609f9843080 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609f9842f08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5609f9820488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5609f9842f48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5609f9842f28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5609f9842e88 't1164' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5609f98430d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5609f9842fc0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5609f9842f98 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5609f9842f60 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5609f98430f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609f9842fe0 <col:39> 'void *(void *)' Function 0x5609f983c1c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5609f9843060 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5609f9843038 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5609f9843000 <col:52> 'int' 0
    |-DeclStmt 0x5609f9843180 <line:836:3, col:18>
    | `-VarDecl 0x5609f9843118 <col:3, col:13> col:13 used t1165 'pthread_t':'unsigned long'
    |-CallExpr 0x5609f9843328 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5609f9843310 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609f9843198 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5609f9820488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5609f98431d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5609f98431b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5609f9843118 't1165' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5609f9843368 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5609f9843250 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5609f9843228 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5609f98431f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5609f9843380 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609f9843270 <col:39> 'void *(void *)' Function 0x5609f983d540 'P2' 'void *(void *)'
    | `-ParenExpr 0x5609f98432f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5609f98432c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5609f9843290 <col:52> 'int' 0
    |-DeclStmt 0x5609f9843410 <line:838:3, col:18>
    | `-VarDecl 0x5609f98433a8 <col:3, col:13> col:13 used t1166 'pthread_t':'unsigned long'
    |-CallExpr 0x5609f98435b8 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5609f98435a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609f9843428 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5609f9820488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5609f9843468 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5609f9843448 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5609f98433a8 't1166' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5609f98435f8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5609f98434e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5609f98434b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5609f9843480 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5609f9843610 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609f9843500 <col:39> 'void *(void *)' Function 0x5609f983e8b0 'P3' 'void *(void *)'
    | `-ParenExpr 0x5609f9843580 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5609f9843558 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5609f9843520 <col:52> 'int' 0
    |-CallExpr 0x5609f9843660 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5609f9843648 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609f9843628 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5609f9843730 <line:841:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5609f9843680 <col:3> '_Bool' lvalue Var 0x5609f983a1a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5609f9843718 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5609f98436f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5609f98436e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5609f98436a0 <col:21> 'int' lvalue Var 0x5609f9839278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5609f98436c0 <col:41> 'int' 4
    |-CallExpr 0x5609f9843788 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5609f9843770 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609f9843750 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5609f9843800 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5609f98437e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609f98437a8 <col:3> 'void (int)' Function 0x5609f97df790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5609f9843840 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5609f9843828 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5609f98437c8 <col:21> '_Bool' lvalue Var 0x5609f983a1a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5609f9843890 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5609f9843878 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609f9843858 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5609f9843ba0 <line:845:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5609f98438b0 <col:3> 'int' lvalue Var 0x5609f9839818 'b' 'int'
    | `-ConditionalOperator 0x5609f9843b48 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5609f9843970 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5609f9843928 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5609f9843910 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5609f98438d0 <col:7> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5609f9843958 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5609f9843940 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5609f98438f0 <col:25> '_Bool' lvalue Var 0x5609f98399a8 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5609f9843b30 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5609f9843990 <col:42> 'int' lvalue Var 0x5609f9839fc0 'b$w_buff0' 'int'
    |   `-ParenExpr 0x5609f9843b10 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5609f9843ae0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5609f9843a50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5609f9843a08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5609f98439f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5609f98439b0 <col:55> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5609f9843a38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5609f9843a20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5609f98439d0 <col:73> '_Bool' lvalue Var 0x5609f9839c68 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5609f9843ab0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5609f9843a70 <col:90> 'int' lvalue Var 0x5609f983a0b8 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5609f9843ac8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5609f9843a90 <col:102> 'int' lvalue Var 0x5609f9839818 'b' 'int'
    |-BinaryOperator 0x5609f9843da8 <line:846:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5609f9843bc0 <col:3> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5609f9843d90 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609f9843d60 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5609f9843c80 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5609f9843c38 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5609f9843c20 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5609f9843be0 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5609f9843c68 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5609f9843c50 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5609f9843c00 <col:38> '_Bool' lvalue Var 0x5609f98399a8 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609f9843d18 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609f9843cd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609f9843ca0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5609f9843d48 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609f9843d30 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609f9843cf8 <col:66> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5609f9844090 <line:847:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5609f9843dc8 <col:3> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5609f9844078 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609f9844048 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5609f9843f68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5609f9843e88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5609f9843e40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5609f9843e28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5609f9843de8 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5609f9843e70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5609f9843e58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5609f9843e08 <col:38> '_Bool' lvalue Var 0x5609f98399a8 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5609f9843f48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5609f9843f00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5609f9843ee8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5609f9843ea8 <col:56> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5609f9843f30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5609f9843f18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5609f9843ec8 <col:74> '_Bool' lvalue Var 0x5609f9839c68 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609f9844000 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609f9843fb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609f9843f88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5609f9844030 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609f9844018 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609f9843fe0 <col:102> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5609f9844298 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5609f98440b0 <col:3> '_Bool' lvalue Var 0x5609f98399a8 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5609f9844280 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609f9844250 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5609f9844170 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5609f9844128 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5609f9844110 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5609f98440d0 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5609f9844158 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5609f9844140 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5609f98440f0 <col:38> '_Bool' lvalue Var 0x5609f98399a8 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609f9844208 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609f98441c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609f9844190 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5609f9844238 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609f9844220 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609f98441e8 <col:66> '_Bool' lvalue Var 0x5609f98399a8 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5609f9844580 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5609f98442b8 <col:3> '_Bool' lvalue Var 0x5609f9839c68 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5609f9844568 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609f9844538 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5609f9844458 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5609f9844378 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5609f9844330 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5609f9844318 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5609f98442d8 <col:20> '_Bool' lvalue Var 0x5609f983a038 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5609f9844360 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5609f9844348 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5609f98442f8 <col:38> '_Bool' lvalue Var 0x5609f98399a8 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5609f9844438 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5609f98443f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5609f98443d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5609f9844398 <col:56> '_Bool' lvalue Var 0x5609f983a130 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5609f9844420 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5609f9844408 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5609f98443b8 <col:74> '_Bool' lvalue Var 0x5609f9839c68 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609f98444f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609f98444a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609f9844478 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5609f9844520 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609f9844508 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609f98444d0 <col:102> '_Bool' lvalue Var 0x5609f9839c68 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5609f98445d8 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5609f98445c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609f98445a0 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5609f9844630 <line:851:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5609f9844618 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609f98445f8 <col:3> 'void ()' Function 0x5609f97dfe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5609f9844998 <line:852:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x5609f9844650 <col:3> '_Bool' lvalue Var 0x5609f983a220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5609f9844980 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5609f9844968 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5609f9844948 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x5609f9844928 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x5609f9844890 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x5609f98447f8 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x5609f9844760 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x5609f98446c8 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5609f98446b0 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5609f9844670 <col:23> 'int' lvalue Var 0x5609f983a320 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5609f9844690 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5609f9844740 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5609f9844728 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5609f98446e8 <col:33> 'int' lvalue Var 0x5609f983a560 'z' 'int'
    |         | | |   `-IntegerLiteral 0x5609f9844708 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x5609f98447d8 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5609f98447c0 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5609f9844780 <col:43> 'int' lvalue Var 0x5609f9839398 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5609f98447a0 <col:66> 'int' 0
    |         | `-BinaryOperator 0x5609f9844870 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5609f9844858 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5609f9844818 <col:71> 'int' lvalue Var 0x5609f98394b8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5609f9844838 <col:94> 'int' 1
    |         `-BinaryOperator 0x5609f9844908 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x5609f98448f0 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5609f98448b0 <col:99> 'int' lvalue Var 0x5609f98395d8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5609f98448d0 <col:122> 'int' 0
    |-CallExpr 0x5609f98449f0 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5609f98449d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609f98449b8 <col:3> 'void ()' Function 0x5609f97dff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5609f9844a68 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5609f9844a50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609f9844a10 <col:3> 'void (int)' Function 0x5609f97dfbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5609f9844aa8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5609f9844a90 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5609f9844a30 <col:21> '_Bool' lvalue Var 0x5609f983a220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5609f9844ae0 <line:855:3, col:10>
      `-IntegerLiteral 0x5609f9844ac0 <col:10> 'int' 0
