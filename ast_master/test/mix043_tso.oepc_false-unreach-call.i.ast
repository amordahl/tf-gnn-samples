TranslationUnitDecl 0x561ed2e8ce18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561ed2e8d6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561ed2e8d3b0 '__int128'
|-TypedefDecl 0x561ed2e8d748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561ed2e8d3d0 'unsigned __int128'
|-TypedefDecl 0x561ed2e8da50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561ed2e8d820 'struct __NSConstantString_tag'
|   `-Record 0x561ed2e8d7a0 '__NSConstantString_tag'
|-TypedefDecl 0x561ed2e8daf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561ed2e8dab0 'char *'
|   `-BuiltinType 0x561ed2e8ceb0 'char'
|-TypedefDecl 0x561ed2ecc650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561ed2e8dd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561ed2e8dbd0 'struct __va_list_tag'
|     `-Record 0x561ed2e8db50 '__va_list_tag'
|-FunctionDecl 0x561ed2ecc790 <./test/mix043_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561ed2ecc6c0 <col:31> col:34 'int'
|-FunctionDecl 0x561ed2ecc958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561ed2ecca80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561ed2eccbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561ed2eccb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561ed2eccdf8 <col:40, col:99>
|   |-IfStmt 0x561ed2eccdc8 <col:42, col:88>
|   | |-UnaryOperator 0x561ed2eccca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561ed2eccc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561ed2eccc70 <col:47> 'int' lvalue ParmVar 0x561ed2eccb38 'expression' 'int'
|   | `-CompoundStmt 0x561ed2eccdb0 <col:59, col:88>
|   |   `-LabelStmt 0x561ed2eccd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561ed2eccd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561ed2eccd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561ed2ecccc0 <col:68> 'void () __attribute__((noreturn))' Function 0x561ed2ecca80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561ed2eccde0 <col:89>
|   `-ReturnStmt 0x561ed2eccde8 <col:91>
|-FunctionDecl 0x561ed2ecce40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561ed2eccf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x561ed2ecd280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561ed2eccfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x561ed2ecd038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x561ed2ecd0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561ed2ecd138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561ed2ecd340 <line:10:22>
|-FunctionDecl 0x561ed2ef3390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561ed2ecd3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x561ed2ecd430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x561ed2ecd4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561ed2ecd530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561ed2ef3450 <line:13:22>
|-FunctionDecl 0x561ed2ef3700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561ed2ef34c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561ed2ef3540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x561ed2ef35c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x561ed2ef37b8 <line:15:22>
|-TypedefDecl 0x561ed2ef3828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561ed2e8cf70 'unsigned char'
|-TypedefDecl 0x561ed2ef3898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561ed2e8cf90 'unsigned short'
|-TypedefDecl 0x561ed2ef3908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561ed2e8cfb0 'unsigned int'
|-TypedefDecl 0x561ed2ef3978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef39e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561ed2e8ced0 'signed char'
|-TypedefDecl 0x561ed2ef3a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561ed2e8cf70 'unsigned char'
|-TypedefDecl 0x561ed2ef3ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561ed2e8cef0 'short'
|-TypedefDecl 0x561ed2ef3b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561ed2e8cf90 'unsigned short'
|-TypedefDecl 0x561ed2ef3ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561ed2e8cf10 'int'
|-TypedefDecl 0x561ed2ef3c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561ed2e8cfb0 'unsigned int'
|-TypedefDecl 0x561ed2ef3c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef3cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef3d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef3dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef3e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef3eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561ed2e8cfb0 'unsigned int'
|-TypedefDecl 0x561ed2ef3f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561ed2e8cfb0 'unsigned int'
|-TypedefDecl 0x561ed2ef3f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef4008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef4078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561ed2e8cfb0 'unsigned int'
|-TypedefDecl 0x561ed2ef40e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef4158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef41c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef4238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561ed2e8cf10 'int'
|-RecordDecl 0x561ed2ef4290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x561ed2ef4408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x561ed2ef44c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561ed2ef4460 'struct __fsid_t' sugar
|   `-RecordType 0x561ed2ef4310 '__fsid_t'
|     `-Record 0x561ed2ef4290 ''
|-TypedefDecl 0x561ed2ef4548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef45b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef4628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef4698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561ed2e8cfb0 'unsigned int'
|-TypedefDecl 0x561ed2ef4708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef4778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561ed2e8cfb0 'unsigned int'
|-TypedefDecl 0x561ed2ef47e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef4858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561ed2e8cf10 'int'
|-TypedefDecl 0x561ed2ef48c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561ed2e8cf10 'int'
|-TypedefDecl 0x561ed2ef4938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561ed2e8cf10 'int'
|-TypedefDecl 0x561ed2ef49a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x561ed2e8d630 'void *'
|   `-BuiltinType 0x561ed2e8ce70 'void'
|-TypedefDecl 0x561ed2ef4a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef4a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef4af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef4b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef4bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef4c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef4cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef4d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef4d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef4e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef4e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef4f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561ed2ef4ed0 '__off64_t' sugar
|   |-Typedef 0x561ed2ef41c8 '__off64_t'
|   `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef5000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561ed2ef4fc0 '__quad_t *'
|   `-TypedefType 0x561ed2ef4f60 '__quad_t' sugar
|     |-Typedef 0x561ed2ef3d68 '__quad_t'
|     `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef5070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561ed2e8dab0 'char *'
|   `-BuiltinType 0x561ed2e8ceb0 'char'
|-TypedefDecl 0x561ed2ef50e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2ef5150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561ed2e8cfb0 'unsigned int'
|-FunctionDecl 0x561ed2ef5298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x561ed2ef51c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561ed2ef65e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x561ed2ef65d8 <line:72:3, col:34>
|     `-CallExpr 0x561ed2ef6598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561ed2ef6580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561ed2ef6510 <col:10> '<builtin fn type>' Function 0x561ed2ef6380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561ed2ef65c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561ed2ef6530 <col:29> 'unsigned int' lvalue ParmVar 0x561ed2ef51c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x561ed2ef6380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561ed2ef6420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561ed2ef6490 <col:10> Implicit
| `-ConstAttr 0x561ed2ef64e8 <col:10> Implicit
|-FunctionDecl 0x561ed2ef6740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561ed2ef6638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561ed2ef6a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x561ed2ef6a48 <line:77:3, col:34>
|     `-CallExpr 0x561ed2ef6a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561ed2ef69f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561ed2ef6978 <col:10> '<builtin fn type>' Function 0x561ed2ef67e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561ed2ef6a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561ed2ef6998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561ed2ef6638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561ed2ef67e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561ed2ef6888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561ed2ef68f8 <col:10> Implicit
| `-ConstAttr 0x561ed2ef6950 <col:10> Implicit
|-TypedefDecl 0x561ed2ef6a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-TypedefDecl 0x561ed2ef6b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561ed2ef6ae0 '__time_t' sugar
|   |-Typedef 0x561ed2ef4708 '__time_t'
|   `-BuiltinType 0x561ed2e8cf30 'long'
|-RecordDecl 0x561ed2ef6b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x561ed2ef6c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561ed2ef6cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561ed2ef6d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561ed2ef6d10 '__pid_t' sugar
|   |-Typedef 0x561ed2ef4238 '__pid_t'
|   `-BuiltinType 0x561ed2e8cf10 'int'
|-RecordDecl 0x561ed2ef6da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x561ed2ef6e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561ed2ef6eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x561ed2ef6f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561ed2ef6fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-RecordDecl 0x561ed2ef7030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x561ed2ef72c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x561ed2ef83a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561ed2ef7310 'struct cpu_set_t' sugar
|   `-RecordType 0x561ed2ef70b0 'cpu_set_t'
|     `-Record 0x561ed2ef7030 ''
|-FunctionDecl 0x561ed2ef8678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561ed2ef8448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561ed2ef8550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561ed2ef8728 <line:107:19>
|-FunctionDecl 0x561ed2ef8900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561ed2ef8790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561ed2ef89a8 <col:69>
|-FunctionDecl 0x561ed2ef8b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561ed2ef8a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561ed2ef8bc8 <col:64>
|-FunctionDecl 0x561ed2ef8e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561ed2ef8c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561ed2ef8d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561ed2ef8f38 <line:113:22>
|-FunctionDecl 0x561ed2ef91b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561ed2ef8fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561ed2ef9098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561ed2ef9268 <col:88>
|-FunctionDecl 0x561ed2ef9588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561ed2ef92d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561ed2ef93b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561ed2ef9440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561ed2ef9640 <col:62>
|-FunctionDecl 0x561ed2ef97b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561ed2ef96a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561ed2ef9860 <col:63>
|-FunctionDecl 0x561ed2ef9988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561ed2ef9a28 <col:47>
|-FunctionDecl 0x561ed2ef9b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561ed2ef9a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561ed2ef9bd8 <col:69>
|-FunctionDecl 0x561ed2ef9ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561ed2ef9c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561ed2ef9d88 <col:69>
|-FunctionDecl 0x561ed2efa048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561ed2ef9df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561ed2ef9f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561ed2efa0f8 <col:88>
|-TypedefDecl 0x561ed2efa188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561ed2efa150 '__clock_t' sugar
|   |-Typedef 0x561ed2ef4548 '__clock_t'
|   `-BuiltinType 0x561ed2e8cf30 'long'
|-TypedefDecl 0x561ed2efa218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x561ed2efa1e0 '__clockid_t' sugar
|   |-Typedef 0x561ed2ef4938 '__clockid_t'
|   `-BuiltinType 0x561ed2e8cf10 'int'
|-TypedefDecl 0x561ed2efa2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561ed2efa270 '__timer_t' sugar
|   |-Typedef 0x561ed2ef49a8 '__timer_t'
|   `-PointerType 0x561ed2e8d630 'void *'
|     `-BuiltinType 0x561ed2e8ce70 'void'
|-RecordDecl 0x561ed2efa300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x561ed2efa3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561ed2efa440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x561ed2efa4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561ed2efa510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561ed2efa578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561ed2efa5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561ed2efa648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561ed2efa6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561ed2efa718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561ed2efa780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561ed2efa7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561ed2efa838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x561ed2efa908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561ed2efa978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561ed2efaa20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561ed2efabf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561ed2efac90 <col:45>
|-FunctionDecl 0x561ed2efae70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561ed2efad60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561ed2efaf18 <col:54>
|-FunctionDecl 0x561ed2efb118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561ed2efaf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561ed2efaff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x561ed2efb1c8 <line:157:22>
| `-ConstAttr 0x561ed2efb220 <col:63>
|-FunctionDecl 0x561ed2efc050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561ed2efb318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561ed2efc0f8 <col:56>
|-FunctionDecl 0x561ed2efc4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561ed2efc168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x561ed2efc1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561ed2efc260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561ed2efc358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561ed2efc560 <col:54>
|-RecordDecl 0x561ed2efc5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x561ed2efc668 parent 0x561ed2e8ce18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561ed2efc8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561ed2efc968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561ed2efc9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561ed2efca38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561ed2efcb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561ed2efcc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561ed2efcbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x561ed2efcb80 'struct __locale_struct' sugar
|     `-RecordType 0x561ed2efc640 'struct __locale_struct'
|       `-Record 0x561ed2efc5b8 '__locale_struct'
|-TypedefDecl 0x561ed2efccf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561ed2efccc0 '__locale_t' sugar
|   |-Typedef 0x561ed2efcc48 '__locale_t'
|   `-PointerType 0x561ed2efcbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x561ed2efcb80 'struct __locale_struct' sugar
|       `-RecordType 0x561ed2efc640 'struct __locale_struct'
|         `-Record 0x561ed2efc5b8 '__locale_struct'
|-FunctionDecl 0x561ed2efe110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561ed2efcd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561ed2efcde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561ed2efce60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561ed2efcef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561ed2efcf68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x561ed2efe1d8 <col:40>
|-FunctionDecl 0x561ed2efe3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561ed2efe2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561ed2efe470 <col:66>
|-FunctionDecl 0x561ed2efe580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561ed2efe4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561ed2efe628 <col:69>
|-FunctionDecl 0x561ed2efe858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561ed2efe690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561ed2efe720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561ed2efe908 <col:52>
|-FunctionDecl 0x561ed2efeab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561ed2efe970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561ed2efea00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561ed2efeb60 <col:55>
|-FunctionDecl 0x561ed2efecf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x561ed2efebe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x561ed2efeda0 <col:62>
|-FunctionDecl 0x561ed2efef18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561ed2efee08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x561ed2efefc0 <col:60>
|-FunctionDecl 0x561ed2eff2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561ed2eff118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561ed2eff198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x561ed2eff368 <col:44>
|-FunctionDecl 0x561ed2eff578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561ed2eff3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561ed2eff450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561ed2eff628 <col:49>
|-VarDecl 0x561ed2eff728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561ed2eff7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561ed2eff828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561ed2eff8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561ed2effa20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561ed2effac0 <col:42>
|-VarDecl 0x561ed2effb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561ed2effbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561ed2effd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561ed2effc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561ed2effde0 <col:57>
|-FunctionDecl 0x561ed2effef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561ed2effe60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561ed2efff98 <col:56>
|-FunctionDecl 0x561ed2f000d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561ed2f00018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x561ed2f00178 <col:59>
|-FunctionDecl 0x561ed2f00280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561ed2f001e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561ed2f00328 <col:48>
| `-ConstAttr 0x561ed2f00380 <col:89>
|-FunctionDecl 0x561ed2f005e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561ed2f00438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561ed2f004c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561ed2f00848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561ed2f006d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561ed2f00768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561ed2f008f8 <col:88>
|-FunctionDecl 0x561ed2f00a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561ed2f00960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561ed2f009f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561ed2f00b40 <col:88>
|-FunctionDecl 0x561ed2f00d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561ed2f00ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561ed2f00c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561ed2f00e08 <line:208:22>
|-FunctionDecl 0x561ed2f01178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561ed2f00e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561ed2f00ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x561ed2f00f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561ed2f01010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x561ed2f01478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x561ed2f01278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x561ed2f01350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561ed2f01528 <col:85>
|-FunctionDecl 0x561ed2f01918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561ed2f01590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561ed2f016c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561ed2f017d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561ed2f019d0 <col:52>
|-FunctionDecl 0x561ed2f01b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561ed2f01a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561ed2f01bf0 <col:61>
|-FunctionDecl 0x561ed2f020f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x561ed2f01c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561ed2f01cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561ed2f01e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561ed2f01ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561ed2f021b0 <col:62>
|-FunctionDecl 0x561ed2f023c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561ed2f02218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561ed2f022a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x561ed2f02478 <line:221:22>
|-FunctionDecl 0x561ed2f02578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561ed2f024e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561ed2f02620 <col:65>
|-TypedefDecl 0x561ed2f02690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561ed2e8cfd0 'unsigned long'
|-RecordDecl 0x561ed2f026e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x561ed2f02830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561ed2f02898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561ed2f02948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561ed2f028f0 'union pthread_attr_t' sugar
|   `-RecordType 0x561ed2f02770 'union pthread_attr_t'
|     `-Record 0x561ed2f026e8 'pthread_attr_t'
|-RecordDecl 0x561ed2f029a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561ed2f02b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x561ed2f02b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x561ed2f02c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x561ed2f02be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561ed2f02a20 'struct __pthread_internal_list'
|     `-Record 0x561ed2f029a0 '__pthread_internal_list'
|-RecordDecl 0x561ed2f02cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x561ed2f02d58 parent 0x561ed2e8ce18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x561ed2f02e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561ed2f02e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x561ed2f02f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x561ed2f02f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x561ed2f02fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561ed2f03038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561ed2f07110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561ed2f071c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561ed2f072b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561ed2f07318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561ed2f074a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561ed2f07440 'union pthread_mutex_t' sugar
|   `-RecordType 0x561ed2f02d30 'pthread_mutex_t'
|     `-Record 0x561ed2f02cb0 ''
|-RecordDecl 0x561ed2f07510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x561ed2f07650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561ed2f076b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561ed2f07770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561ed2f07710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561ed2f07590 'pthread_mutexattr_t'
|     `-Record 0x561ed2f07510 ''
|-RecordDecl 0x561ed2f077e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x561ed2f07888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x561ed2f07950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561ed2f079b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561ed2f07a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561ed2f07a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561ed2f07af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561ed2f07b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561ed2f07bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561ed2f07c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561ed2f07ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/mix043_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/mix043_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x561ed2f07dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561ed2f07e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561ed2f07f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561ed2f07f10 'union pthread_cond_t' sugar
|   `-RecordType 0x561ed2f07860 'pthread_cond_t'
|     `-Record 0x561ed2f077e0 ''
|-RecordDecl 0x561ed2f07fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x561ed2f09130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561ed2f09198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561ed2f09250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561ed2f091f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x561ed2f08060 'pthread_condattr_t'
|     `-Record 0x561ed2f07fe0 ''
|-TypedefDecl 0x561ed2f092d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561ed2e8cfb0 'unsigned int'
|-TypedefDecl 0x561ed2f09348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561ed2e8cf10 'int'
|-RecordDecl 0x561ed2f093a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x561ed2f09448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x561ed2f09510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561ed2f09578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561ed2f095e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561ed2f09648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561ed2f096b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561ed2f09718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561ed2f09780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561ed2f097e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561ed2f09850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561ed2f098b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561ed2f09920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561ed2f099d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/mix043_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix043_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x561ed2f09a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561ed2f09ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561ed2f09c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561ed2f09bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561ed2f09420 'pthread_rwlock_t'
|     `-Record 0x561ed2f093a0 ''
|-RecordDecl 0x561ed2f09ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x561ed2f09de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561ed2f09e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561ed2f09f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561ed2f09ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561ed2f09d20 'pthread_rwlockattr_t'
|     `-Record 0x561ed2f09ca0 ''
|-TypedefDecl 0x561ed2f09f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561ed2e8cf14 'volatile int' volatile
|   `-BuiltinType 0x561ed2e8cf10 'int'
|-RecordDecl 0x561ed2f09fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x561ed2f0b140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561ed2f0b1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561ed2f0b260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561ed2f0b200 'union pthread_barrier_t' sugar
|   `-RecordType 0x561ed2f0a060 'pthread_barrier_t'
|     `-Record 0x561ed2f09fe0 ''
|-RecordDecl 0x561ed2f0b2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x561ed2f0b3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561ed2f0b438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561ed2f0b4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561ed2f0b490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561ed2f0b350 'pthread_barrierattr_t'
|     `-Record 0x561ed2f0b2d0 ''
|-TypedefDecl 0x561ed2f0b608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561ed2f0b5a0 'long [8]' 8 
|   `-BuiltinType 0x561ed2e8cf30 'long'
|-EnumDecl 0x561ed2f0b660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x561ed2f0b728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561ed2f0b778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561ed2f0b7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x561ed2f0b898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561ed2f0b8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561ed2f0b938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561ed2f0b988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561ed2f0ba10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561ed2f0b9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x561ed2f0b9d8 <col:26> 'int' EnumConstant 0x561ed2f0b898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561ed2f0ba98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561ed2f0ba80 <col:29> 'int'
| |   `-DeclRefExpr 0x561ed2f0ba60 <col:29> 'int' EnumConstant 0x561ed2f0b8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561ed2f0bb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561ed2f0bb08 <col:30> 'int'
| |   `-DeclRefExpr 0x561ed2f0bae8 <col:30> 'int' EnumConstant 0x561ed2f0b938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561ed2f0bba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561ed2f0bb90 <col:27> 'int'
|     `-DeclRefExpr 0x561ed2f0bb70 <col:27> 'int' EnumConstant 0x561ed2f0ba10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561ed2f0bbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x561ed2f0bcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561ed2f0bd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561ed2f0bd38 <col:30> 'int'
| |   `-DeclRefExpr 0x561ed2f0bd18 <col:30> 'int' EnumConstant 0x561ed2f0bcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561ed2f0bda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561ed2f0be28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561ed2f0be10 <col:29> 'int'
|     `-DeclRefExpr 0x561ed2f0bdf0 <col:29> 'int' EnumConstant 0x561ed2f0bda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561ed2f0be78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x561ed2f0bf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561ed2f0bf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561ed2f0bfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561ed2f0c038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x561ed2f0c150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561ed2f0c1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561ed2f0c1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561ed2f0c278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561ed2f0c260 <col:31> 'int'
|     `-DeclRefExpr 0x561ed2f0c240 <col:31> 'int' EnumConstant 0x561ed2f0c150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561ed2f0c2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x561ed2f0c398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561ed2f0c3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561ed2f0c438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x561ed2f0c508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561ed2f0c558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561ed2f0c5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x561ed2f0c678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561ed2f0c6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561ed2f0c718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561ed2f0c958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561ed2f0c9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561ed2f0ca28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561ed2f0cb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561ed2f0cb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x561ed2f0cc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561ed2f0ccb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561ed2f0cd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x561ed2f0cdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561ed2f0ce28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x561ed2f0d488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561ed2f0cf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x561ed2f0d030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ed2f0d270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561ed2f0d2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x561ed2f0d548 <col:47>
| |-NonNullAttr 0x561ed2f0d5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x561ed2f0d5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x561ed2f0d700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561ed2f0d630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561ed2f0d958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561ed2f0d7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561ed2f0d838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561ed2f0db28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561ed2f0da18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561ed2f0dbd0 <col:60>
|-FunctionDecl 0x561ed2f0dd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561ed2f0ddc0 <col:54>
| `-ConstAttr 0x561ed2f0de18 <col:95>
|-FunctionDecl 0x561ed2f0dfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x561ed2f0de50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561ed2f0dec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561ed2f0e098 <line:394:19>
| `-ConstAttr 0x561ed2f0e0f0 <col:60>
|-FunctionDecl 0x561ed2f0fb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561ed2f0f9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561ed2f0fbb0 <col:71>
| `-NonNullAttr 0x561ed2f0fc08 <col:112, col:126> 1
|-FunctionDecl 0x561ed2f0fd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561ed2f0fc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561ed2f0fdb8 <line:397:22>
| `-NonNullAttr 0x561ed2f0fe10 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f10038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x561ed2f0fe58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561ed2f0fed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561ed2f100e8 <line:400:22>
| `-NonNullAttr 0x561ed2f10140 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f10348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f10188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ed2f10208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561ed2f103f8 <line:403:22>
| `-NonNullAttr 0x561ed2f10450 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f106a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x561ed2f10498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561ed2f10540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561ed2f10758 <line:406:22>
| `-NonNullAttr 0x561ed2f107b0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f119e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561ed2f107f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ed2f10870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561ed2f11a98 <line:409:22>
| `-NonNullAttr 0x561ed2f11af0 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f11d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561ed2f11b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ed2f11bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561ed2f11dd8 <line:412:22>
| `-NonNullAttr 0x561ed2f11e30 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f12068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561ed2f11e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ed2f11f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561ed2f12118 <col:37>
| `-NonNullAttr 0x561ed2f12170 <col:78, col:95> 1 2
|-FunctionDecl 0x561ed2f12358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f121b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ed2f12238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561ed2f12408 <line:418:22>
| `-NonNullAttr 0x561ed2f12460 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f125e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f124a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ed2f12528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561ed2f12698 <line:420:22>
| `-NonNullAttr 0x561ed2f126f0 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f12898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f12738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ed2f127b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561ed2f12948 <line:423:22>
| `-NonNullAttr 0x561ed2f129c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f12b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f12a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ed2f12a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x561ed2f12bf8 <line:426:22>
| `-NonNullAttr 0x561ed2f12c50 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f12df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f12c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ed2f12d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x561ed2f12ea8 <line:429:22>
| `-NonNullAttr 0x561ed2f12f00 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f13088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f12f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ed2f12fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561ed2f13138 <line:431:22>
| `-NonNullAttr 0x561ed2f13190 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f133b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x561ed2f131d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ed2f13258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561ed2f13468 <line:434:22>
| |-NonNullAttr 0x561ed2f134c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x561ed2f134f8 <col:100> "" ""
|-FunctionDecl 0x561ed2f13708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561ed2f13548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ed2f135c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x561ed2f137b8 <line:437:22>
| |-NonNullAttr 0x561ed2f13810 <col:63, col:77> 1
| `-DeprecatedAttr 0x561ed2f13848 <col:97> "" ""
|-FunctionDecl 0x561ed2f13a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561ed2f13898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ed2f13910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561ed2f13af8 <line:440:22>
| `-NonNullAttr 0x561ed2f13b50 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f13cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561ed2f13b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ed2f13c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561ed2f13d80 <line:443:22>
| `-NonNullAttr 0x561ed2f13dd8 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f140c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561ed2f13e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561ed2f13ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561ed2f13f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561ed2f14180 <line:447:22>
| `-NonNullAttr 0x561ed2f141d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561ed2f14488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561ed2f14230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561ed2f142b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561ed2f14328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561ed2f14540 <col:43>
| `-NonNullAttr 0x561ed2f14598 <col:84, col:98> 1
|-FunctionDecl 0x561ed2f14858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561ed2f145e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561ed2f14668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561ed2f146f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561ed2f14910 <line:452:22>
| `-NonNullAttr 0x561ed2f14968 <col:63, col:77> 3
|-FunctionDecl 0x561ed2f14c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561ed2f149e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561ed2f14a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561ed2f14af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561ed2f14d30 <line:456:22>
| `-NonNullAttr 0x561ed2f14d88 <col:63, col:80> 2 3
|-FunctionDecl 0x561ed2f14f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561ed2f14dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561ed2f14e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561ed2f15028 <line:458:22>
|-FunctionDecl 0x561ed2f153f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561ed2f150f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561ed2f15290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561ed2f154a8 <col:52, col:69> 1 2
|-FunctionDecl 0x561ed2f15650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561ed2f15530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561ed2f155b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561ed2f15838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561ed2f15718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561ed2f15798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561ed2f159f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561ed2f158f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561ed2f15b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561ed2f15bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x561ed2f15c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x561ed2f15d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561ed2f15dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561ed2f15fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix043_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x561ed2f16098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561ed2f16150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561ed2f160f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561ed2f15c50 '__pthread_unwind_buf_t'
| |   `-Record 0x561ed2f15bd0 ''
| `-AlignedAttr 0x561ed2f161a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561ed2f16220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561ed2f16380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561ed2f163e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561ed2f16450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561ed2f164b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561ed2f166c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561ed2f165b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561ed2f16808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561ed2f16778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561ed2f16a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561ed2f168c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561ed2f16aa8 <line:487:22>
|-RecordDecl 0x561ed2f16b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561ed2f16e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561ed2f16c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561ed2f16cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561ed2f16ec8 <col:86>
| `-ReturnsTwiceAttr 0x561ed2f16f20 <col:12> Implicit
|-FunctionDecl 0x561ed2f17248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561ed2f16ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561ed2f17100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561ed2f172f8 <line:493:22>
| `-NonNullAttr 0x561ed2f17350 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f174c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561ed2f17398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561ed2f17570 <line:495:22>
| `-NonNullAttr 0x561ed2f175c8 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f176d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561ed2f17618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561ed2f17778 <line:497:22>
| `-NonNullAttr 0x561ed2f177d0 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f178d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561ed2f17818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561ed2f17978 <line:499:22>
| `-NonNullAttr 0x561ed2f179d0 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f18c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561ed2f18a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561ed2f18ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561ed2f18cd8 <col:36>
| `-NonNullAttr 0x561ed2f18d30 <col:66, col:83> 1 2
|-FunctionDecl 0x561ed2f18e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561ed2f18d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561ed2f18ed8 <line:504:22>
| `-NonNullAttr 0x561ed2f18f30 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f191c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f18fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561ed2f19060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561ed2f19278 <line:508:22>
| `-NonNullAttr 0x561ed2f192d0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f19598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f19318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561ed2f19398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561ed2f19418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561ed2f19650 <line:512:22>
| `-NonNullAttr 0x561ed2f196a8 <col:63, col:80> 1 3
|-FunctionDecl 0x561ed2f197b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561ed2f196f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561ed2f19858 <line:514:22>
| `-NonNullAttr 0x561ed2f198b0 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f19ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561ed2f19960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561ed2f19b80 <line:516:22>
| `-NonNullAttr 0x561ed2f19bd8 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f19ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561ed2f19c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561ed2f19d88 <line:518:22>
| `-NonNullAttr 0x561ed2f19de0 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1a008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f19e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561ed2f19ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561ed2f1a0b8 <line:522:22>
| `-NonNullAttr 0x561ed2f1a110 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f1a318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f1a158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ed2f1a1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561ed2f1a3c8 <line:525:22>
| `-NonNullAttr 0x561ed2f1a420 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1a5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f1a468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561ed2f1a4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561ed2f1a678 <line:528:22>
| `-NonNullAttr 0x561ed2f1a6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f1a858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f1a718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ed2f1a798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561ed2f1a908 <line:530:22>
| `-NonNullAttr 0x561ed2f1a960 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1ab20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f1a9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561ed2f1aa40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561ed2f1abd0 <line:534:22>
| `-NonNullAttr 0x561ed2f1ac28 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f1adb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f1ac78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ed2f1acf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561ed2f1ae68 <line:537:22>
| `-NonNullAttr 0x561ed2f1aec0 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1b068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f1af08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561ed2f1af88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561ed2f1b118 <line:541:22>
| `-NonNullAttr 0x561ed2f1b170 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f1b2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f1b1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ed2f1b238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561ed2f1b3a8 <line:544:22>
| `-NonNullAttr 0x561ed2f1b400 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1b5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561ed2f1b448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ed2f1b4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561ed2f1b698 <line:547:22>
| `-NonNullAttr 0x561ed2f1b6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f1b878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f1b738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561ed2f1b7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561ed2f1b928 <line:550:22>
| `-NonNullAttr 0x561ed2f1b980 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1ccf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561ed2f1caa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561ed2f1cbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561ed2f1cda8 <col:29>
| `-NonNullAttr 0x561ed2f1ce00 <col:70, col:84> 1
|-FunctionDecl 0x561ed2f1cf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ed2f1ce48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ed2f1d020 <line:555:22>
| `-NonNullAttr 0x561ed2f1d078 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1d180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ed2f1d0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ed2f1d228 <line:557:22>
| `-NonNullAttr 0x561ed2f1d280 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f1d380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ed2f1d2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ed2f1d428 <line:559:19>
| `-NonNullAttr 0x561ed2f1d480 <col:49, col:63> 1
|-FunctionDecl 0x561ed2f1d6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561ed2f1d4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561ed2f1d558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561ed2f1d768 <col:39>
| `-NonNullAttr 0x561ed2f1d7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x561ed2f1d8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ed2f1d808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ed2f1d968 <line:564:22>
| `-NonNullAttr 0x561ed2f1d9c0 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f1db28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ed2f1da70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ed2f1dbd0 <line:566:22>
| `-NonNullAttr 0x561ed2f1dc28 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f1dde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561ed2f1dc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561ed2f1dd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561ed2f1de98 <col:39>
| `-NonNullAttr 0x561ed2f1def0 <col:69, col:86> 1 2
|-FunctionDecl 0x561ed2f1dff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561ed2f1df38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561ed2f1e098 <line:571:22>
| `-NonNullAttr 0x561ed2f1e0f0 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f1e2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561ed2f1e1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561ed2f1e380 <line:573:22>
| `-NonNullAttr 0x561ed2f1e3d8 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1e4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561ed2f1e428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561ed2f1e588 <line:575:22>
| `-NonNullAttr 0x561ed2f1e5e0 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1e808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f1e628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561ed2f1e6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561ed2f1e8b8 <line:579:22>
| `-NonNullAttr 0x561ed2f1e910 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f1eb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f1e958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561ed2f1e9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561ed2f1ebe8 <line:582:22>
| `-NonNullAttr 0x561ed2f1ec40 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1ede8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f1ec88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561ed2f1ed08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561ed2f1ee98 <line:586:22>
| `-NonNullAttr 0x561ed2f1eef0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f1f078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f1ef38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561ed2f1efb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561ed2f1f128 <col:36>
| `-NonNullAttr 0x561ed2f1f180 <col:77, col:91> 1
|-FunctionDecl 0x561ed2f1f4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x561ed2f1f260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561ed2f1f370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x561ed2f1f568 <line:591:22>
| `-NonNullAttr 0x561ed2f1f5c0 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1f738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561ed2f1f608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561ed2f1f7e0 <line:593:22>
| `-NonNullAttr 0x561ed2f1f838 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f1f940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561ed2f1f888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561ed2f1f9e8 <line:595:22>
| `-NonNullAttr 0x561ed2f1fa40 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f1fb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561ed2f1faa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561ed2f1fc00 <line:597:22>
| `-NonNullAttr 0x561ed2f1fc58 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f1fe88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561ed2f1fca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561ed2f1fd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x561ed2f1ff38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x561ed2f20268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561ed2f1ffb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561ed2f20030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561ed2f200c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561ed2f20320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x561ed2f20538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561ed2f20400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561ed2f205e0 <line:606:22>
| `-NonNullAttr 0x561ed2f20638 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f20740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561ed2f20688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561ed2f207e8 <line:608:22>
| `-NonNullAttr 0x561ed2f20840 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f20aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f20888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561ed2f20908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561ed2f20b50 <line:612:22>
| `-NonNullAttr 0x561ed2f20ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f20db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f20bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561ed2f20c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x561ed2f20e68 <col:37>
| `-NonNullAttr 0x561ed2f20ec0 <col:78, col:92> 1
|-FunctionDecl 0x561ed2f210d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561ed2f20f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561ed2f20fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x561ed2f21188 <line:618:22>
| `-NonNullAttr 0x561ed2f211e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f213a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561ed2f21228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561ed2f212a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x561ed2f21458 <line:621:22>
| `-NonNullAttr 0x561ed2f214b0 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f21758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561ed2f21590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561ed2f21610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561ed2f21808 <line:623:22>
| `-NonNullAttr 0x561ed2f21860 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f219d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561ed2f218a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561ed2f21ab0 <line:625:22>
| `-NonNullAttr 0x561ed2f21b08 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f21c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561ed2f21b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561ed2f21cb8 <line:627:22>
| `-NonNullAttr 0x561ed2f21d10 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f21e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561ed2f21d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561ed2f21eb8 <line:629:22>
| `-NonNullAttr 0x561ed2f21f10 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f22010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561ed2f21f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561ed2f220b8 <line:631:22>
| `-NonNullAttr 0x561ed2f22110 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f224e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561ed2f221f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561ed2f22300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561ed2f22380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561ed2f225a0 <line:635:22>
| `-NonNullAttr 0x561ed2f225f8 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f22778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561ed2f22648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561ed2f22820 <line:637:22>
| `-NonNullAttr 0x561ed2f22878 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f22980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561ed2f228c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561ed2f22a28 <line:639:22>
| `-NonNullAttr 0x561ed2f22a80 <col:52, col:66> 1
|-FunctionDecl 0x561ed2f23c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561ed2f23b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561ed2f23d30 <line:641:22>
| `-NonNullAttr 0x561ed2f23d88 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f23e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561ed2f23dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561ed2f23f38 <line:643:22>
| `-NonNullAttr 0x561ed2f23f90 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f241b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561ed2f23fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561ed2f24058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x561ed2f24268 <line:647:22>
| `-NonNullAttr 0x561ed2f242c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561ed2f244c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x561ed2f24308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x561ed2f24388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x561ed2f24578 <line:650:22>
| `-NonNullAttr 0x561ed2f245d0 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f24918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x561ed2f246b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x561ed2f247d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x561ed2f249c8 <line:653:22>
| `-NonNullAttr 0x561ed2f24a20 <col:63, col:77> 1
|-FunctionDecl 0x561ed2f24b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x561ed2f24a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561ed2f24c30 <col:69>
|-FunctionDecl 0x561ed2f24da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x561ed2f24c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561ed2f24e50 <col:72>
|-FunctionDecl 0x561ed2f25088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561ed2f24eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x561ed2f24f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561ed2f25138 <col:44>
|-FunctionDecl 0x561ed2f25358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561ed2f251a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561ed2f25218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561ed2f25408 <line:660:22>
| `-NonNullAttr 0x561ed2f25460 <col:63, col:77> 2
|-FunctionDecl 0x561ed2f258a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x561ed2f25540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561ed2f25650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561ed2f25760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561ed2f25960 <col:47>
|-FunctionDecl 0x561ed2f25af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561ed2f259d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561ed2f25c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561ed2f25bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561ed2f25da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x561ed2f25d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561ed2f25ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x561ed2f25e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561ed2f25fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x561ed2f26080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x561ed2f26140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561ed2f261f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x561ed2f26278 prev 0x561ed2f261f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561ed2f262e0 <col:24> 'int' 0
|-VarDecl 0x561ed2f26318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x561ed2f26398 prev 0x561ed2f26318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x561ed2f26400 <col:27> 'int' 0
|-VarDecl 0x561ed2f26438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x561ed2f264b8 prev 0x561ed2f26438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x561ed2f26520 <col:27> 'int' 0
|-VarDecl 0x561ed2f26558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x561ed2f265d8 prev 0x561ed2f26558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x561ed2f26640 <col:27> 'int' 0
|-VarDecl 0x561ed2f26678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x561ed2f266f8 prev 0x561ed2f26678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x561ed2f26760 <col:27> 'int' 0
|-VarDecl 0x561ed2f26798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x561ed2f26818 prev 0x561ed2f26798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x561ed2f26880 <col:9> 'int' 0
|-VarDecl 0x561ed2f268b8 <line:684:1, col:5> col:5 used b 'int'
|-VarDecl 0x561ed2f26938 prev 0x561ed2f268b8 <line:685:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x561ed2f269a0 <col:9> 'int' 0
|-VarDecl 0x561ed2f269d0 <line:686:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x561ed2f26a50 <line:687:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x561ed2f26b00 <line:688:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x561ed2f26b78 <line:689:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x561ed2f26bf0 <line:690:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x561ed2f26c68 <line:691:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x561ed2f26ce0 <line:692:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x561ed2f26d58 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x561ed2f26dd0 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x561ed2f26e48 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x561ed2f26ec0 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x561ed2f26f38 <line:697:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x561ed2f26fb0 <line:698:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x561ed2f27030 <line:699:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x561ed2f270b0 <line:700:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x561ed2f27128 <line:701:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x561ed2f271a8 <line:702:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x561ed2f27220 <line:703:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x561ed2f27298 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561ed2f27310 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561ed2f27390 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x561ed2f27410 prev 0x561ed2f27390 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x561ed2f27478 <col:9> 'int' 0
|-VarDecl 0x561ed2f274b0 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x561ed2f27530 prev 0x561ed2f274b0 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561ed2f27598 <col:9> 'int' 0
|-VarDecl 0x561ed2f275d0 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x561ed2f27650 prev 0x561ed2f275d0 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x561ed2f276b8 <col:9> 'int' 0
|-VarDecl 0x561ed2f276e8 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561ed2f27760 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561ed2f27878 prev 0x561ed2f25af0 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561ed2f277e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561ed2f29138 <line:715:1, line:743:1>
|   |-CallExpr 0x561ed2f27988 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f27970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f27920 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f27a00 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561ed2f279a8 <col:3> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x561ed2f279e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f279c8 <col:15> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x561ed2f27a60 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561ed2f27a20 <col:3> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x561ed2f27a40 <col:15> 'int' 1
|   |-BinaryOperator 0x561ed2f27ad8 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f27a80 <col:3> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f27ac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f27aa0 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ed2f27b88 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f27b10 <col:3> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x561ed2f27b60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561ed2f27b30 <col:27> 'int' 1
|   |-CallExpr 0x561ed2f27d08 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x561ed2f27cf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x561ed2f27ba8 <col:3> 'void (int)' Function 0x561ed2eccbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x561ed2f27ca8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x561ed2f27c88 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x561ed2f27c68 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x561ed2f27c20 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x561ed2f27c08 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x561ed2f27bc8 <col:23> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x561ed2f27c50 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x561ed2f27c38 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x561ed2f27be8 <col:41> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ed2f27d88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f27d30 <col:3> '_Bool' lvalue Var 0x561ed2f26d58 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f27d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f27d50 <col:20> '_Bool' lvalue Var 0x561ed2f26b00 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x561ed2f27e00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f27da8 <col:3> '_Bool' lvalue Var 0x561ed2f26dd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f27de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f27dc8 <col:20> '_Bool' lvalue Var 0x561ed2f26b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561ed2f27e78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f27e20 <col:3> '_Bool' lvalue Var 0x561ed2f26e48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f27e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f27e40 <col:20> '_Bool' lvalue Var 0x561ed2f26bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561ed2f27ef0 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f27e98 <col:3> '_Bool' lvalue Var 0x561ed2f26ec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f27ed8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f27eb8 <col:20> '_Bool' lvalue Var 0x561ed2f26c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561ed2f27f68 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f27f10 <col:3> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f27f50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f27f30 <col:20> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561ed2f28000 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f27f88 <col:3> '_Bool' lvalue Var 0x561ed2f26b78 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x561ed2f27fd8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561ed2f27fa8 <col:27> 'int' 1
|   |-CallExpr 0x561ed2f28058 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f28040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f28020 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f280b0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f28098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f28078 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f28128 <line:730:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561ed2f280d0 <col:3> 'int' lvalue Var 0x561ed2f26398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x561ed2f28110 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f280f0 <col:25> 'int' lvalue Var 0x561ed2f27410 'x' 'int'
|   |-CallExpr 0x561ed2f28180 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f28168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f28148 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f281d8 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f281c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f281a0 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f284c0 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561ed2f281f8 <col:3> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   | `-ConditionalOperator 0x561ed2f28490 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561ed2f282b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561ed2f28270 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561ed2f28258 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561ed2f28218 <col:7> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561ed2f282a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561ed2f28288 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561ed2f28238 <col:25> '_Bool' lvalue Var 0x561ed2f26b78 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x561ed2f28478 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f282d8 <col:42> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x561ed2f28458 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561ed2f28428 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561ed2f28398 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561ed2f28350 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561ed2f28338 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561ed2f282f8 <col:55> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561ed2f28380 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561ed2f28368 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561ed2f28318 <col:73> '_Bool' lvalue Var 0x561ed2f26dd0 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561ed2f283f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ed2f283b8 <col:90> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561ed2f28410 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f283d8 <col:102> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   |-BinaryOperator 0x561ed2f286c8 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f284e0 <col:3> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f286b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f28680 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ed2f285a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ed2f28558 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ed2f28540 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ed2f28500 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ed2f28588 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ed2f28570 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ed2f28520 <col:38> '_Bool' lvalue Var 0x561ed2f26b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f28638 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f285f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f285c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f28668 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f28650 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f28618 <col:66> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ed2f289b0 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f286e8 <col:3> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f28998 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f28968 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ed2f28888 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ed2f287a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ed2f28760 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ed2f28748 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ed2f28708 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ed2f28790 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ed2f28778 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ed2f28728 <col:38> '_Bool' lvalue Var 0x561ed2f26b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561ed2f28868 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ed2f28820 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ed2f28808 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ed2f287c8 <col:56> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ed2f28850 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ed2f28838 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ed2f287e8 <col:74> '_Bool' lvalue Var 0x561ed2f26dd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f28920 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f288d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f288a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f28950 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f28938 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f28900 <col:102> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561ed2f28bd0 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f289d0 <col:3> '_Bool' lvalue Var 0x561ed2f26b78 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f28bb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f28b88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ed2f28a90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ed2f28a48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ed2f28a30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ed2f289f0 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ed2f28a78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ed2f28a60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ed2f28a10 <col:38> '_Bool' lvalue Var 0x561ed2f26b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f28b40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f28ae0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f28ab0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f28b70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f28b58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f28b20 <col:66> '_Bool' lvalue Var 0x561ed2f26b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561ed2f28eb8 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f28bf0 <col:3> '_Bool' lvalue Var 0x561ed2f26dd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f28ea0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f28e70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ed2f28d90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ed2f28cb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ed2f28c68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ed2f28c50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ed2f28c10 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ed2f28c98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ed2f28c80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ed2f28c30 <col:38> '_Bool' lvalue Var 0x561ed2f26b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561ed2f28d70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ed2f28d28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ed2f28d10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ed2f28cd0 <col:56> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ed2f28d58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ed2f28d40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ed2f28cf0 <col:74> '_Bool' lvalue Var 0x561ed2f26dd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f28e28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f28de0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f28db0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f28e58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f28e40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f28e08 <col:102> '_Bool' lvalue Var 0x561ed2f26dd0 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x561ed2f28f10 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f28ef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f28ed8 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f28f68 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f28f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f28f30 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f29020 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561ed2f28f88 <col:3> 'int' lvalue Var 0x561ed2f26278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561ed2f29000 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561ed2f28fe8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f28fa8 <col:22> 'int' lvalue Var 0x561ed2f26278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561ed2f28fc8 <col:41> 'int' 1
|   |-CallExpr 0x561ed2f29078 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f29060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f29040 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561ed2f29128 <line:742:3, col:36>
|     `-CallExpr 0x561ed2f29108 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561ed2f290f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561ed2f29098 <col:10> 'void *(void)' Function 0x561ed2ecc958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561ed2f292d0 prev 0x561ed2f25c48 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561ed2f29238 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561ed2f2a510 <line:745:1, line:763:1>
|   |-CallExpr 0x561ed2f293b0 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f29398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f29378 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f29410 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561ed2f293d0 <col:3> 'int' lvalue Var 0x561ed2f27410 'x' 'int'
|   | `-IntegerLiteral 0x561ed2f293f0 <col:7> 'int' 1
|   |-CallExpr 0x561ed2f29468 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f29450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f29430 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f294c0 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f294a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f29488 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f29538 <line:750:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561ed2f294e0 <col:3> 'int' lvalue Var 0x561ed2f264b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x561ed2f29520 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f29500 <col:25> 'int' lvalue Var 0x561ed2f27530 'y' 'int'
|   |-CallExpr 0x561ed2f29590 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f29578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f29558 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f295e8 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f295d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f295b0 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f298d0 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561ed2f29608 <col:3> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   | `-ConditionalOperator 0x561ed2f298a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561ed2f296c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561ed2f29680 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561ed2f29668 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561ed2f29628 <col:7> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561ed2f296b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561ed2f29698 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561ed2f29648 <col:25> '_Bool' lvalue Var 0x561ed2f26bf0 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561ed2f29888 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f296e8 <col:42> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x561ed2f29868 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561ed2f29838 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561ed2f297a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561ed2f29760 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561ed2f29748 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561ed2f29708 <col:55> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561ed2f29790 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561ed2f29778 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561ed2f29728 <col:73> '_Bool' lvalue Var 0x561ed2f26e48 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561ed2f29808 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ed2f297c8 <col:90> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561ed2f29820 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f297e8 <col:102> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   |-BinaryOperator 0x561ed2f29ad8 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f298f0 <col:3> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f29ac0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f29a90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ed2f299b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ed2f29968 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ed2f29950 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ed2f29910 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ed2f29998 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ed2f29980 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ed2f29930 <col:38> '_Bool' lvalue Var 0x561ed2f26bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f29a48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f29a00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f299d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f29a78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f29a60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f29a28 <col:66> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ed2f29dd8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f29af8 <col:3> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f29dc0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f29d90 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ed2f29cb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ed2f29bd0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ed2f29b88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ed2f29b70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ed2f29b30 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ed2f29bb8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ed2f29ba0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ed2f29b50 <col:38> '_Bool' lvalue Var 0x561ed2f26bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561ed2f29c90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ed2f29c48 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ed2f29c30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ed2f29bf0 <col:56> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ed2f29c78 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ed2f29c60 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ed2f29c10 <col:74> '_Bool' lvalue Var 0x561ed2f26e48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f29d48 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f29d00 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f29cd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f29d78 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f29d60 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f29d28 <col:102> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561ed2f29fe0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f29df8 <col:3> '_Bool' lvalue Var 0x561ed2f26bf0 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f29fc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f29f98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ed2f29eb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ed2f29e70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ed2f29e58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ed2f29e18 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ed2f29ea0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ed2f29e88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ed2f29e38 <col:38> '_Bool' lvalue Var 0x561ed2f26bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f29f50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f29f08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f29ed8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f29f80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f29f68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f29f30 <col:66> '_Bool' lvalue Var 0x561ed2f26bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561ed2f2a2c8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2a000 <col:3> '_Bool' lvalue Var 0x561ed2f26e48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2a2b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2a280 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ed2f2a1a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ed2f2a0c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ed2f2a078 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ed2f2a060 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ed2f2a020 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ed2f2a0a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ed2f2a090 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ed2f2a040 <col:38> '_Bool' lvalue Var 0x561ed2f26bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561ed2f2a180 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ed2f2a138 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ed2f2a120 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ed2f2a0e0 <col:56> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ed2f2a168 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ed2f2a150 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ed2f2a100 <col:74> '_Bool' lvalue Var 0x561ed2f26e48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2a238 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f2a1f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f2a1c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f2a268 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f2a250 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2a218 <col:102> '_Bool' lvalue Var 0x561ed2f26e48 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x561ed2f2a320 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2a308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2a2e8 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f2a378 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2a360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2a340 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f2a430 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2a398 <col:3> 'int' lvalue Var 0x561ed2f26278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561ed2f2a410 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561ed2f2a3f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f2a3b8 <col:22> 'int' lvalue Var 0x561ed2f26278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561ed2f2a3d8 <col:41> 'int' 1
|   |-CallExpr 0x561ed2f2a488 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2a470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2a450 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561ed2f2a500 <line:762:3, col:36>
|     `-CallExpr 0x561ed2f2a4e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561ed2f2a4c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561ed2f2a4a8 <col:10> 'void *(void)' Function 0x561ed2ecc958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561ed2f2a658 prev 0x561ed2f25da0 <line:764:1, line:783:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x561ed2f2a5c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561ed2f2b890 <line:765:1, line:783:1>
|   |-CallExpr 0x561ed2f2a738 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2a720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2a700 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f2a798 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2a758 <col:3> 'int' lvalue Var 0x561ed2f27530 'y' 'int'
|   | `-IntegerLiteral 0x561ed2f2a778 <col:7> 'int' 1
|   |-CallExpr 0x561ed2f2a7f0 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2a7d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2a7b8 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f2a848 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2a830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2a810 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f2a8a8 <line:770:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2a868 <col:3> 'int' lvalue Var 0x561ed2f27650 'z' 'int'
|   | `-IntegerLiteral 0x561ed2f2a888 <col:7> 'int' 1
|   |-CallExpr 0x561ed2f2a900 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2a8e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2a8c8 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f2a958 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2a940 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2a920 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f2ac68 <line:773:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2a978 <col:3> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   | `-ConditionalOperator 0x561ed2f2ac38 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561ed2f2aa38 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561ed2f2a9f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561ed2f2a9d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561ed2f2a998 <col:7> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561ed2f2aa20 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561ed2f2aa08 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561ed2f2a9b8 <col:25> '_Bool' lvalue Var 0x561ed2f26c68 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x561ed2f2ac20 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f2aa58 <col:42> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x561ed2f2ac00 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561ed2f2abd0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561ed2f2ab40 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561ed2f2aad0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561ed2f2aab8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561ed2f2aa78 <col:55> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561ed2f2ab00 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561ed2f2aae8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561ed2f2aa98 <col:73> '_Bool' lvalue Var 0x561ed2f26ec0 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x561ed2f2aba0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ed2f2ab60 <col:90> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561ed2f2abb8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2ab80 <col:102> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   |-BinaryOperator 0x561ed2f2ae70 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2ac88 <col:3> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2ae58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2ae28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ed2f2ad48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ed2f2ad00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ed2f2ace8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ed2f2aca8 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ed2f2ad30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ed2f2ad18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ed2f2acc8 <col:38> '_Bool' lvalue Var 0x561ed2f26c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2ade0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f2ad98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f2ad68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f2ae10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f2adf8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2adc0 <col:66> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ed2f2b158 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2ae90 <col:3> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2b140 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2b110 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ed2f2b030 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ed2f2af50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ed2f2af08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ed2f2aef0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ed2f2aeb0 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ed2f2af38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ed2f2af20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ed2f2aed0 <col:38> '_Bool' lvalue Var 0x561ed2f26c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561ed2f2b010 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ed2f2afc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ed2f2afb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ed2f2af70 <col:56> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ed2f2aff8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ed2f2afe0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ed2f2af90 <col:74> '_Bool' lvalue Var 0x561ed2f26ec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2b0c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f2b080 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f2b050 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f2b0f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f2b0e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2b0a8 <col:102> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561ed2f2b360 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2b178 <col:3> '_Bool' lvalue Var 0x561ed2f26c68 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2b348 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2b318 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ed2f2b238 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ed2f2b1f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ed2f2b1d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ed2f2b198 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ed2f2b220 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ed2f2b208 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ed2f2b1b8 <col:38> '_Bool' lvalue Var 0x561ed2f26c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2b2d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f2b288 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f2b258 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f2b300 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f2b2e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2b2b0 <col:66> '_Bool' lvalue Var 0x561ed2f26c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561ed2f2b648 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2b380 <col:3> '_Bool' lvalue Var 0x561ed2f26ec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2b630 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2b600 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ed2f2b520 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ed2f2b440 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ed2f2b3f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ed2f2b3e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ed2f2b3a0 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ed2f2b428 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ed2f2b410 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ed2f2b3c0 <col:38> '_Bool' lvalue Var 0x561ed2f26c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561ed2f2b500 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ed2f2b4b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ed2f2b4a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ed2f2b460 <col:56> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ed2f2b4e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ed2f2b4d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ed2f2b480 <col:74> '_Bool' lvalue Var 0x561ed2f26ec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2b5b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f2b570 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f2b540 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f2b5e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f2b5d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2b598 <col:102> '_Bool' lvalue Var 0x561ed2f26ec0 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x561ed2f2b6a0 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2b688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2b668 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f2b6f8 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2b6e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2b6c0 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f2b7b0 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2b718 <col:3> 'int' lvalue Var 0x561ed2f26278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561ed2f2b790 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561ed2f2b778 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f2b738 <col:22> 'int' lvalue Var 0x561ed2f26278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561ed2f2b758 <col:41> 'int' 1
|   |-CallExpr 0x561ed2f2b808 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2b7f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2b7d0 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561ed2f2b880 <line:782:3, col:36>
|     `-CallExpr 0x561ed2f2b860 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561ed2f2b848 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561ed2f2b828 <col:10> 'void *(void)' Function 0x561ed2ecc958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561ed2f2b9d8 prev 0x561ed2f25ef8 <line:784:1, line:822:1> line:784:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x561ed2f2b940 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561ed2f2f7f0 <line:785:1, line:822:1>
|   |-CallExpr 0x561ed2f2bab8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2baa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2ba80 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f2bb18 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2bad8 <col:3> 'int' lvalue Var 0x561ed2f27650 'z' 'int'
|   | `-IntegerLiteral 0x561ed2f2baf8 <col:7> 'int' 2
|   |-CallExpr 0x561ed2f2bb88 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2bb70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2bb50 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f2bbe0 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2bbc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2bba8 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f2bc40 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2bc00 <col:3> 'int' lvalue Var 0x561ed2f26818 'a' 'int'
|   | `-IntegerLiteral 0x561ed2f2bc20 <col:7> 'int' 1
|   |-CallExpr 0x561ed2f2bc98 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2bc80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2bc60 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f2bcf0 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2bcd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2bcb8 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f2bd68 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2bd10 <col:3> 'int' lvalue Var 0x561ed2f265d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x561ed2f2bd50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f2bd30 <col:25> 'int' lvalue Var 0x561ed2f26818 'a' 'int'
|   |-CallExpr 0x561ed2f2bdc0 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2bda8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2bd88 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f2be18 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2be00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2bde0 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f2bec8 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2be38 <col:3> '_Bool' lvalue Var 0x561ed2f276e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2beb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561ed2f2be90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561ed2f2be78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561ed2f2be58 <col:19> 'void *(void)' Function 0x561ed2ecc958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561ed2f2bf78 <line:797:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2bee8 <col:3> '_Bool' lvalue Var 0x561ed2f27760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2bf60 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561ed2f2bf40 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561ed2f2bf28 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561ed2f2bf08 <col:19> 'void *(void)' Function 0x561ed2ecc958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561ed2f2bff0 <line:798:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2bf98 <col:3> '_Bool' lvalue Var 0x561ed2f269d0 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2bfd8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f2bfb8 <col:21> '_Bool' lvalue Var 0x561ed2f27760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x561ed2f2c068 <line:799:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2c010 <col:3> 'int' lvalue Var 0x561ed2f26a50 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x561ed2f2c050 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f2c030 <col:15> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   |-BinaryOperator 0x561ed2f2c4a0 <line:800:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2c088 <col:3> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   | `-ConditionalOperator 0x561ed2f2c470 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x561ed2f2c298 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x561ed2f2c1b8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x561ed2f2c0e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x561ed2f2c0c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x561ed2f2c0a8 <col:8> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x561ed2f2c198 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x561ed2f2c130 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x561ed2f2c118 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561ed2f2c0f8 <col:27> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x561ed2f2c180 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x561ed2f2c168 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x561ed2f2c148 <col:46> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x561ed2f2c278 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x561ed2f2c210 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561ed2f2c1f8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x561ed2f2c1d8 <col:65> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x561ed2f2c260 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x561ed2f2c248 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x561ed2f2c228 <col:84> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x561ed2f2c458 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f2c2b8 <col:101> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   |   `-ParenExpr 0x561ed2f2c438 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x561ed2f2c408 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x561ed2f2c378 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561ed2f2c330 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561ed2f2c318 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561ed2f2c2d8 <col:106> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561ed2f2c360 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561ed2f2c348 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561ed2f2c2f8 <col:124> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561ed2f2c3d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ed2f2c398 <col:141> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561ed2f2c3f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2c3b8 <col:153> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x561ed2f2c9b0 <line:801:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2c4c0 <col:3> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x561ed2f2c980 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561ed2f2c950 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561ed2f2c938 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561ed2f2c4e0 <col:15> '_Bool' lvalue Var 0x561ed2f27760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561ed2f2c968 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f2c500 <col:31> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x561ed2f2c918 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561ed2f2c8e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561ed2f2c710 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561ed2f2c630 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561ed2f2c558 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561ed2f2c540 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561ed2f2c520 <col:45> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561ed2f2c610 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561ed2f2c5a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561ed2f2c590 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561ed2f2c570 <col:64> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561ed2f2c5f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561ed2f2c5e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561ed2f2c5c0 <col:83> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561ed2f2c6f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561ed2f2c688 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561ed2f2c670 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561ed2f2c650 <col:102> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x561ed2f2c6d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561ed2f2c6c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561ed2f2c6a0 <col:121> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561ed2f2c8d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ed2f2c730 <col:138> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x561ed2f2c8b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561ed2f2c880 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561ed2f2c7f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561ed2f2c7a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561ed2f2c790 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561ed2f2c750 <col:151> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561ed2f2c7d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561ed2f2c7c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561ed2f2c770 <col:169> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x561ed2f2c850 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561ed2f2c810 <col:186> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561ed2f2c868 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561ed2f2c830 <col:198> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x561ed2f2cee0 <line:802:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2c9d0 <col:3> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x561ed2f2ceb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561ed2f2ce80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561ed2f2ce68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561ed2f2c9f0 <col:15> '_Bool' lvalue Var 0x561ed2f27760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561ed2f2ce98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f2ca10 <col:31> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x561ed2f2ce48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561ed2f2ce18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561ed2f2cc40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561ed2f2cb60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561ed2f2ca68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561ed2f2ca50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561ed2f2ca30 <col:45> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561ed2f2cb20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561ed2f2cab8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561ed2f2caa0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561ed2f2ca80 <col:64> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561ed2f2cb08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561ed2f2caf0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561ed2f2cad0 <col:83> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561ed2f2cc20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561ed2f2cbb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561ed2f2cba0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561ed2f2cb80 <col:102> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x561ed2f2cc08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561ed2f2cbf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561ed2f2cbd0 <col:121> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561ed2f2ce00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ed2f2cc60 <col:138> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x561ed2f2cde0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561ed2f2cdb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561ed2f2cd20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561ed2f2ccd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561ed2f2ccc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561ed2f2cc80 <col:151> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561ed2f2cd08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561ed2f2ccf0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561ed2f2cca0 <col:169> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x561ed2f2cd80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561ed2f2cd40 <col:186> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x561ed2f2cd98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561ed2f2cd60 <col:198> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x561ed2f2d488 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2cf00 <col:3> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2d470 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2d440 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561ed2f2d3f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ed2f2d3e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ed2f2cf20 <col:20> '_Bool' lvalue Var 0x561ed2f27760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2d428 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ed2f2d410 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ed2f2cf40 <col:36> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x561ed2f2d3c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561ed2f2d390 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561ed2f2d150 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ed2f2d070 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ed2f2cf98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ed2f2cf80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ed2f2cf60 <col:55> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ed2f2d050 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ed2f2cfe8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ed2f2cfd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ed2f2cfb0 <col:74> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561ed2f2d038 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ed2f2d020 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ed2f2d000 <col:93> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ed2f2d130 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ed2f2d0c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ed2f2d0b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ed2f2d090 <col:112> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561ed2f2d118 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ed2f2d100 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ed2f2d0e0 <col:131> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561ed2f2d378 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ed2f2d360 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ed2f2d170 <col:148> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x561ed2f2d340 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561ed2f2d310 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561ed2f2d230 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ed2f2d1e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ed2f2d1d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ed2f2d190 <col:166> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ed2f2d218 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ed2f2d200 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ed2f2d1b0 <col:184> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561ed2f2d2c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ed2f2d280 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ed2f2d250 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ed2f2d2f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561ed2f2d2e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561ed2f2d2a8 <col:212> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ed2f2da50 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2d4a8 <col:3> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2da38 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2da08 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561ed2f2d9c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ed2f2d9a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ed2f2d4c8 <col:20> '_Bool' lvalue Var 0x561ed2f27760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2d9f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ed2f2d9d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ed2f2d4e8 <col:36> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561ed2f2d988 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561ed2f2d958 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561ed2f2d6f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ed2f2d618 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ed2f2d540 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ed2f2d528 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ed2f2d508 <col:55> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ed2f2d5f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ed2f2d590 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ed2f2d578 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ed2f2d558 <col:74> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561ed2f2d5e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ed2f2d5c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ed2f2d5a8 <col:93> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ed2f2d6d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ed2f2d670 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ed2f2d658 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ed2f2d638 <col:112> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561ed2f2d6c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ed2f2d6a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ed2f2d688 <col:131> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561ed2f2d940 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ed2f2d928 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ed2f2d718 <col:148> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561ed2f2d908 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561ed2f2d8d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561ed2f2d7d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ed2f2d790 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ed2f2d778 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ed2f2d738 <col:166> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ed2f2d7c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ed2f2d7a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ed2f2d758 <col:184> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561ed2f2d8a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ed2f2d828 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ed2f2d7f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ed2f2d8c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561ed2f2d880 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561ed2f2d850 <col:219> 'int' 0
|   |-BinaryOperator 0x561ed2f2e010 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2da70 <col:3> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2dff8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2dfc8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561ed2f2df80 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ed2f2df68 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ed2f2da90 <col:20> '_Bool' lvalue Var 0x561ed2f27760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2dfb0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ed2f2df98 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ed2f2dab0 <col:36> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x561ed2f2df48 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561ed2f2df18 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561ed2f2dcd8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ed2f2dbf8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ed2f2db08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ed2f2daf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ed2f2dad0 <col:55> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ed2f2dbd8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ed2f2db70 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ed2f2db40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ed2f2db20 <col:74> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561ed2f2dbc0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ed2f2dba8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ed2f2db88 <col:93> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ed2f2dcb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ed2f2dc50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ed2f2dc38 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ed2f2dc18 <col:112> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561ed2f2dca0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ed2f2dc88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ed2f2dc68 <col:131> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561ed2f2df00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ed2f2dee8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ed2f2dcf8 <col:148> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x561ed2f2dec8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561ed2f2de98 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561ed2f2ddb8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ed2f2dd70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ed2f2dd58 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ed2f2dd18 <col:166> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ed2f2dda0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ed2f2dd88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ed2f2dd38 <col:184> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561ed2f2de50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ed2f2de08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ed2f2ddd8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ed2f2de80 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561ed2f2de68 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561ed2f2de30 <col:212> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561ed2f2e5d8 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2e030 <col:3> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2e5c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2e590 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561ed2f2e548 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ed2f2e530 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ed2f2e050 <col:20> '_Bool' lvalue Var 0x561ed2f27760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2e578 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561ed2f2e560 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561ed2f2e070 <col:36> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x561ed2f2e510 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561ed2f2e4e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561ed2f2e280 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561ed2f2e1a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561ed2f2e0c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561ed2f2e0b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561ed2f2e090 <col:55> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561ed2f2e180 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561ed2f2e118 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561ed2f2e100 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561ed2f2e0e0 <col:74> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561ed2f2e168 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561ed2f2e150 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561ed2f2e130 <col:93> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561ed2f2e260 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561ed2f2e1f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561ed2f2e1e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561ed2f2e1c0 <col:112> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561ed2f2e248 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561ed2f2e230 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561ed2f2e210 <col:131> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561ed2f2e4c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561ed2f2e4b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561ed2f2e2a0 <col:148> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x561ed2f2e490 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561ed2f2e460 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561ed2f2e360 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561ed2f2e318 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561ed2f2e300 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561ed2f2e2c0 <col:166> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561ed2f2e348 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561ed2f2e330 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561ed2f2e2e0 <col:184> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561ed2f2e430 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561ed2f2e3b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561ed2f2e380 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561ed2f2e448 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561ed2f2e408 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561ed2f2e3d8 <col:219> 'int' 0
|   |-BinaryOperator 0x561ed2f2e650 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2e5f8 <col:3> 'int' lvalue Var 0x561ed2f266f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x561ed2f2e638 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561ed2f2e618 <col:25> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   |-BinaryOperator 0x561ed2f2e780 <line:808:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2e670 <col:3> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   | `-ConditionalOperator 0x561ed2f2e750 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x561ed2f2e708 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561ed2f2e6f0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561ed2f2e690 <col:7> '_Bool' lvalue Var 0x561ed2f269d0 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x561ed2f2e720 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f2e6b0 <col:25> 'int' lvalue Var 0x561ed2f26a50 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x561ed2f2e738 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x561ed2f2e6d0 <col:37> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   |-BinaryOperator 0x561ed2f2e818 <line:809:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2e7a0 <col:3> '_Bool' lvalue Var 0x561ed2f269d0 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561ed2f2e7f0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561ed2f2e7c0 <col:28> 'int' 0
|   |-CallExpr 0x561ed2f2e870 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2e858 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2e838 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f2e8c8 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2e8b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2e890 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f2ebc8 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2e8e8 <col:3> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   | `-ConditionalOperator 0x561ed2f2eb98 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561ed2f2e9a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561ed2f2e960 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561ed2f2e948 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561ed2f2e908 <col:7> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561ed2f2e990 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561ed2f2e978 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561ed2f2e928 <col:25> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x561ed2f2eb80 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f2e9c8 <col:42> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x561ed2f2eb48 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561ed2f2eb18 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561ed2f2ea88 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561ed2f2ea40 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561ed2f2ea28 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561ed2f2e9e8 <col:55> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561ed2f2ea70 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561ed2f2ea58 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561ed2f2ea08 <col:73> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561ed2f2eae8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561ed2f2eaa8 <col:90> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561ed2f2eb00 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2eac8 <col:102> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
|   |-BinaryOperator 0x561ed2f2edd0 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2ebe8 <col:3> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2edb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2ed88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ed2f2eca8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ed2f2ec60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ed2f2ec48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ed2f2ec08 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ed2f2ec90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ed2f2ec78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ed2f2ec28 <col:38> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2ed40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f2ecf8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f2ecc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f2ed70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f2ed58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2ed20 <col:66> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561ed2f2f0b8 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2edf0 <col:3> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2f0a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2f070 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ed2f2ef90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ed2f2eeb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ed2f2ee68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ed2f2ee50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ed2f2ee10 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ed2f2ee98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ed2f2ee80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ed2f2ee30 <col:38> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x561ed2f2ef70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ed2f2ef28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ed2f2ef10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ed2f2eed0 <col:56> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ed2f2ef58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ed2f2ef40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ed2f2eef0 <col:74> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2f028 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f2efe0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f2efb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f2f058 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f2f040 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2f008 <col:102> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561ed2f2f2c0 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2f0d8 <col:3> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2f2a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2f278 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561ed2f2f198 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561ed2f2f150 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561ed2f2f138 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561ed2f2f0f8 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561ed2f2f180 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561ed2f2f168 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561ed2f2f118 <col:38> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2f230 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f2f1e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f2f1b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f2f260 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f2f248 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2f210 <col:66> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561ed2f2f5a8 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561ed2f2f2e0 <col:3> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x561ed2f2f590 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561ed2f2f560 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561ed2f2f480 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561ed2f2f3a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561ed2f2f358 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561ed2f2f340 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561ed2f2f300 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561ed2f2f388 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561ed2f2f370 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561ed2f2f320 <col:38> '_Bool' lvalue Var 0x561ed2f26ce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x561ed2f2f460 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561ed2f2f418 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561ed2f2f400 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561ed2f2f3c0 <col:56> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561ed2f2f448 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561ed2f2f430 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561ed2f2f3e0 <col:74> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x561ed2f2f518 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561ed2f2f4d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561ed2f2f4a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561ed2f2f548 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561ed2f2f530 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561ed2f2f4f8 <col:102> '_Bool' lvalue Var 0x561ed2f26f38 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x561ed2f2f600 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2f5e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2f5c8 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561ed2f2f658 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2f640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2f620 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561ed2f2f710 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561ed2f2f678 <col:3> 'int' lvalue Var 0x561ed2f26278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561ed2f2f6f0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561ed2f2f6d8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561ed2f2f698 <col:22> 'int' lvalue Var 0x561ed2f26278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561ed2f2f6b8 <col:41> 'int' 1
|   |-CallExpr 0x561ed2f2f768 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561ed2f2f750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561ed2f2f730 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561ed2f2f7e0 <line:821:3, col:36>
|     `-CallExpr 0x561ed2f2f7c0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561ed2f2f7a8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561ed2f2f788 <col:10> 'void *(void)' Function 0x561ed2ecc958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561ed2f2f940 prev 0x561ed2f25fc0 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x561ed2f2f9e0 <line:824:1, line:825:1>
|-FunctionDecl 0x561ed2f2fa10 prev 0x561ed2f26080 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x561ed2f2fab0 <line:827:1, line:828:1>
|-FunctionDecl 0x561ed2f2fae0 prev 0x561ed2f26140 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x561ed2f2fb90 <line:830:1, line:831:1>
`-FunctionDecl 0x561ed2f2fbf8 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x561ed2f31c10 <line:833:1, line:858:1>
    |-DeclStmt 0x561ed2f2fd10 <line:834:3, col:18>
    | `-VarDecl 0x561ed2f2fca8 <col:3, col:13> col:13 used t1155 'pthread_t':'unsigned long'
    |-CallExpr 0x561ed2f2ff18 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561ed2f2ff00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ed2f2fd28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561ed2f0d488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561ed2f2fd68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561ed2f2fd48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561ed2f2fca8 't1155' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561ed2f2ff58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561ed2f2fde0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561ed2f2fdb8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561ed2f2fd80 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561ed2f2ff70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ed2f2fe00 <col:39> 'void *(void *)' Function 0x561ed2f27878 'P0' 'void *(void *)'
    | `-ParenExpr 0x561ed2f2fe80 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561ed2f2fe58 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561ed2f2fe20 <col:52> 'int' 0
    |-DeclStmt 0x561ed2f30000 <line:836:3, col:18>
    | `-VarDecl 0x561ed2f2ff98 <col:3, col:13> col:13 used t1156 'pthread_t':'unsigned long'
    |-CallExpr 0x561ed2f301a8 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561ed2f30190 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ed2f30018 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561ed2f0d488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561ed2f30058 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561ed2f30038 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561ed2f2ff98 't1156' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561ed2f301e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561ed2f300d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561ed2f300a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561ed2f30070 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561ed2f30200 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ed2f300f0 <col:39> 'void *(void *)' Function 0x561ed2f292d0 'P1' 'void *(void *)'
    | `-ParenExpr 0x561ed2f30170 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561ed2f30148 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561ed2f30110 <col:52> 'int' 0
    |-DeclStmt 0x561ed2f30290 <line:838:3, col:18>
    | `-VarDecl 0x561ed2f30228 <col:3, col:13> col:13 used t1157 'pthread_t':'unsigned long'
    |-CallExpr 0x561ed2f30438 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561ed2f30420 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ed2f302a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561ed2f0d488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561ed2f302e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561ed2f302c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561ed2f30228 't1157' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561ed2f30478 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561ed2f30360 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561ed2f30338 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561ed2f30300 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561ed2f30490 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ed2f30380 <col:39> 'void *(void *)' Function 0x561ed2f2a658 'P2' 'void *(void *)'
    | `-ParenExpr 0x561ed2f30400 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561ed2f303d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561ed2f303a0 <col:52> 'int' 0
    |-DeclStmt 0x561ed2f30520 <line:840:3, col:18>
    | `-VarDecl 0x561ed2f304b8 <col:3, col:13> col:13 used t1158 'pthread_t':'unsigned long'
    |-CallExpr 0x561ed2f306c8 <line:841:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561ed2f306b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ed2f30538 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561ed2f0d488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561ed2f30578 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561ed2f30558 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561ed2f304b8 't1158' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561ed2f30708 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561ed2f305f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561ed2f305c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561ed2f30590 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561ed2f30720 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ed2f30610 <col:39> 'void *(void *)' Function 0x561ed2f2b9d8 'P3' 'void *(void *)'
    | `-ParenExpr 0x561ed2f30690 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561ed2f30668 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561ed2f30630 <col:52> 'int' 0
    |-CallExpr 0x561ed2f30770 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561ed2f30758 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ed2f30738 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561ed2f30840 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561ed2f30790 <col:3> '_Bool' lvalue Var 0x561ed2f27298 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561ed2f30828 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561ed2f30808 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561ed2f307f0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561ed2f307b0 <col:21> 'int' lvalue Var 0x561ed2f26278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561ed2f307d0 <col:41> 'int' 4
    |-CallExpr 0x561ed2f30898 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561ed2f30880 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ed2f30860 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561ed2f30910 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561ed2f308f8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ed2f308b8 <col:3> 'void (int)' Function 0x561ed2ecc790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561ed2f30950 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561ed2f30938 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561ed2f308d8 <col:21> '_Bool' lvalue Var 0x561ed2f27298 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561ed2f309a0 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561ed2f30988 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ed2f30968 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561ed2f30ca8 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561ed2f309c0 <col:3> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
    | `-ConditionalOperator 0x561ed2f30c78 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561ed2f30a80 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561ed2f30a38 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561ed2f30a20 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561ed2f309e0 <col:7> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561ed2f30a68 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561ed2f30a50 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561ed2f30a00 <col:25> '_Bool' lvalue Var 0x561ed2f26b00 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561ed2f30c60 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561ed2f30aa0 <col:42> 'int' lvalue Var 0x561ed2f270b0 'b$w_buff0' 'int'
    |   `-ParenExpr 0x561ed2f30c40 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561ed2f30c10 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561ed2f30b60 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561ed2f30b18 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561ed2f30b00 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561ed2f30ac0 <col:55> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561ed2f30b48 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561ed2f30b30 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561ed2f30ae0 <col:73> '_Bool' lvalue Var 0x561ed2f26d58 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561ed2f30be0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561ed2f30ba0 <col:90> 'int' lvalue Var 0x561ed2f271a8 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561ed2f30bf8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561ed2f30bc0 <col:102> 'int' lvalue Var 0x561ed2f26938 'b' 'int'
    |-BinaryOperator 0x561ed2f30eb0 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561ed2f30cc8 <col:3> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561ed2f30e98 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561ed2f30e68 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561ed2f30d88 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561ed2f30d40 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561ed2f30d28 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561ed2f30ce8 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561ed2f30d70 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561ed2f30d58 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561ed2f30d08 <col:38> '_Bool' lvalue Var 0x561ed2f26b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561ed2f30e20 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561ed2f30dd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561ed2f30da8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561ed2f30e50 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561ed2f30e38 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561ed2f30e00 <col:66> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561ed2f31198 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561ed2f30ed0 <col:3> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561ed2f31180 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561ed2f31150 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561ed2f31070 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561ed2f30f90 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561ed2f30f48 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561ed2f30f30 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561ed2f30ef0 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561ed2f30f78 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561ed2f30f60 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561ed2f30f10 <col:38> '_Bool' lvalue Var 0x561ed2f26b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561ed2f31050 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561ed2f31008 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561ed2f30ff0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561ed2f30fb0 <col:56> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561ed2f31038 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561ed2f31020 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561ed2f30fd0 <col:74> '_Bool' lvalue Var 0x561ed2f26d58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561ed2f31108 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561ed2f310c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561ed2f31090 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561ed2f31138 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561ed2f31120 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561ed2f310e8 <col:102> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x561ed2f313a0 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561ed2f311b8 <col:3> '_Bool' lvalue Var 0x561ed2f26b00 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561ed2f31388 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561ed2f31358 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561ed2f31278 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561ed2f31230 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561ed2f31218 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561ed2f311d8 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561ed2f31260 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561ed2f31248 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561ed2f311f8 <col:38> '_Bool' lvalue Var 0x561ed2f26b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561ed2f31310 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561ed2f312c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561ed2f31298 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561ed2f31340 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561ed2f31328 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561ed2f312f0 <col:66> '_Bool' lvalue Var 0x561ed2f26b00 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561ed2f31688 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561ed2f313c0 <col:3> '_Bool' lvalue Var 0x561ed2f26d58 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561ed2f31670 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561ed2f31640 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561ed2f31560 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561ed2f31480 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561ed2f31438 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561ed2f31420 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561ed2f313e0 <col:20> '_Bool' lvalue Var 0x561ed2f27128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561ed2f31468 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561ed2f31450 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561ed2f31400 <col:38> '_Bool' lvalue Var 0x561ed2f26b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561ed2f31540 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561ed2f314f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561ed2f314e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561ed2f314a0 <col:56> '_Bool' lvalue Var 0x561ed2f27220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561ed2f31528 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561ed2f31510 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561ed2f314c0 <col:74> '_Bool' lvalue Var 0x561ed2f26d58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561ed2f315f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561ed2f315b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561ed2f31580 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561ed2f31628 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561ed2f31610 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561ed2f315d8 <col:102> '_Bool' lvalue Var 0x561ed2f26d58 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561ed2f316e0 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561ed2f316c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ed2f316a8 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561ed2f31738 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561ed2f31720 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ed2f31700 <col:3> 'void ()' Function 0x561ed2ecce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561ed2f31aa0 <line:854:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x561ed2f31758 <col:3> '_Bool' lvalue Var 0x561ed2f27310 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561ed2f31a88 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561ed2f31a70 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561ed2f31a50 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x561ed2f31a30 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x561ed2f31998 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x561ed2f31900 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x561ed2f31868 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x561ed2f317d0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x561ed2f317b8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x561ed2f31778 <col:23> 'int' lvalue Var 0x561ed2f27650 'z' 'int'
    |         | | | | `-IntegerLiteral 0x561ed2f31798 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x561ed2f31848 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x561ed2f31830 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x561ed2f317f0 <col:33> 'int' lvalue Var 0x561ed2f26398 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x561ed2f31810 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x561ed2f318e0 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x561ed2f318c8 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x561ed2f31888 <col:61> 'int' lvalue Var 0x561ed2f264b8 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x561ed2f318a8 <col:84> 'int' 0
    |         | `-BinaryOperator 0x561ed2f31978 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561ed2f31960 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561ed2f31920 <col:89> 'int' lvalue Var 0x561ed2f265d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x561ed2f31940 <col:112> 'int' 1
    |         `-BinaryOperator 0x561ed2f31a10 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x561ed2f319f8 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561ed2f319b8 <col:117> 'int' lvalue Var 0x561ed2f266f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x561ed2f319d8 <col:140> 'int' 0
    |-CallExpr 0x561ed2f31af8 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561ed2f31ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561ed2f31ac0 <col:3> 'void ()' Function 0x561ed2eccf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561ed2f31b70 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561ed2f31b58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561ed2f31b18 <col:3> 'void (int)' Function 0x561ed2eccbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561ed2f31bc8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561ed2f31bb0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561ed2f31b38 <col:21> '_Bool' lvalue Var 0x561ed2f27310 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561ed2f31c00 <line:857:3, col:10>
      `-IntegerLiteral 0x561ed2f31be0 <col:10> 'int' 0
