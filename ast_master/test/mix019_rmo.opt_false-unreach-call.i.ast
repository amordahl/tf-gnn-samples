TranslationUnitDecl 0x556dacd2de18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x556dacd2e6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x556dacd2e3b0 '__int128'
|-TypedefDecl 0x556dacd2e748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x556dacd2e3d0 'unsigned __int128'
|-TypedefDecl 0x556dacd2ea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x556dacd2e820 'struct __NSConstantString_tag'
|   `-Record 0x556dacd2e7a0 '__NSConstantString_tag'
|-TypedefDecl 0x556dacd2eaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x556dacd2eab0 'char *'
|   `-BuiltinType 0x556dacd2deb0 'char'
|-TypedefDecl 0x556dacd6d650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x556dacd2ed90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x556dacd2ebd0 'struct __va_list_tag'
|     `-Record 0x556dacd2eb50 '__va_list_tag'
|-FunctionDecl 0x556dacd6d790 <./test/mix019_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x556dacd6d6c0 <col:31> col:34 'int'
|-FunctionDecl 0x556dacd6d958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x556dacd6da80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x556dacd6dbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x556dacd6db38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x556dacd6ddf8 <col:40, col:99>
|   |-IfStmt 0x556dacd6ddc8 <col:42, col:88>
|   | |-UnaryOperator 0x556dacd6dca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x556dacd6dc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x556dacd6dc70 <col:47> 'int' lvalue ParmVar 0x556dacd6db38 'expression' 'int'
|   | `-CompoundStmt 0x556dacd6ddb0 <col:59, col:88>
|   |   `-LabelStmt 0x556dacd6dd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x556dacd6dd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x556dacd6dd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x556dacd6dcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x556dacd6da80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x556dacd6dde0 <col:89>
|   `-ReturnStmt 0x556dacd6dde8 <col:91>
|-FunctionDecl 0x556dacd6de40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x556dacd6df00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x556dacd6e280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556dacd6dfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x556dacd6e038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x556dacd6e0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556dacd6e138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556dacd6e340 <line:10:22>
|-FunctionDecl 0x556dacd94390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556dacd6e3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x556dacd6e430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x556dacd6e4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556dacd6e530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556dacd94450 <line:13:22>
|-FunctionDecl 0x556dacd94700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556dacd944c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x556dacd94540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x556dacd945c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x556dacd947b8 <line:15:22>
|-TypedefDecl 0x556dacd94828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x556dacd2df70 'unsigned char'
|-TypedefDecl 0x556dacd94898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x556dacd2df90 'unsigned short'
|-TypedefDecl 0x556dacd94908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x556dacd2dfb0 'unsigned int'
|-TypedefDecl 0x556dacd94978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd949e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x556dacd2ded0 'signed char'
|-TypedefDecl 0x556dacd94a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x556dacd2df70 'unsigned char'
|-TypedefDecl 0x556dacd94ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x556dacd2def0 'short'
|-TypedefDecl 0x556dacd94b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x556dacd2df90 'unsigned short'
|-TypedefDecl 0x556dacd94ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x556dacd2df10 'int'
|-TypedefDecl 0x556dacd94c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x556dacd2dfb0 'unsigned int'
|-TypedefDecl 0x556dacd94c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd94cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd94d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd94dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd94e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd94eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x556dacd2dfb0 'unsigned int'
|-TypedefDecl 0x556dacd94f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x556dacd2dfb0 'unsigned int'
|-TypedefDecl 0x556dacd94f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd95008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd95078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x556dacd2dfb0 'unsigned int'
|-TypedefDecl 0x556dacd950e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd95158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd951c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd95238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x556dacd2df10 'int'
|-RecordDecl 0x556dacd95290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x556dacd95408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x556dacd954c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x556dacd95460 'struct __fsid_t' sugar
|   `-RecordType 0x556dacd95310 '__fsid_t'
|     `-Record 0x556dacd95290 ''
|-TypedefDecl 0x556dacd95548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd955b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd95628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd95698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x556dacd2dfb0 'unsigned int'
|-TypedefDecl 0x556dacd95708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd95778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x556dacd2dfb0 'unsigned int'
|-TypedefDecl 0x556dacd957e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd95858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x556dacd2df10 'int'
|-TypedefDecl 0x556dacd958c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x556dacd2df10 'int'
|-TypedefDecl 0x556dacd95938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x556dacd2df10 'int'
|-TypedefDecl 0x556dacd959a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x556dacd2e630 'void *'
|   `-BuiltinType 0x556dacd2de70 'void'
|-TypedefDecl 0x556dacd95a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd95a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd95af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd95b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd95bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd95c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd95cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd95d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd95d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd95e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd95e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd95f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x556dacd95ed0 '__off64_t' sugar
|   |-Typedef 0x556dacd951c8 '__off64_t'
|   `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd96000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x556dacd95fc0 '__quad_t *'
|   `-TypedefType 0x556dacd95f60 '__quad_t' sugar
|     |-Typedef 0x556dacd94d68 '__quad_t'
|     `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd96070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x556dacd2eab0 'char *'
|   `-BuiltinType 0x556dacd2deb0 'char'
|-TypedefDecl 0x556dacd960e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd96150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x556dacd2dfb0 'unsigned int'
|-FunctionDecl 0x556dacd96298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x556dacd961c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x556dacd975e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x556dacd975d8 <line:72:3, col:34>
|     `-CallExpr 0x556dacd97598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x556dacd97580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556dacd97510 <col:10> '<builtin fn type>' Function 0x556dacd97380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x556dacd975c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x556dacd97530 <col:29> 'unsigned int' lvalue ParmVar 0x556dacd961c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x556dacd97380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x556dacd97420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x556dacd97490 <col:10> Implicit
| `-ConstAttr 0x556dacd974e8 <col:10> Implicit
|-FunctionDecl 0x556dacd97740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x556dacd97638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x556dacd97a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x556dacd97a48 <line:77:3, col:34>
|     `-CallExpr 0x556dacd97a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x556dacd979f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556dacd97978 <col:10> '<builtin fn type>' Function 0x556dacd977e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x556dacd97a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x556dacd97998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x556dacd97638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x556dacd977e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x556dacd97888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x556dacd978f8 <col:10> Implicit
| `-ConstAttr 0x556dacd97950 <col:10> Implicit
|-TypedefDecl 0x556dacd97a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-TypedefDecl 0x556dacd97b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x556dacd97ae0 '__time_t' sugar
|   |-Typedef 0x556dacd95708 '__time_t'
|   `-BuiltinType 0x556dacd2df30 'long'
|-RecordDecl 0x556dacd97b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x556dacd97c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x556dacd97cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x556dacd97d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x556dacd97d10 '__pid_t' sugar
|   |-Typedef 0x556dacd95238 '__pid_t'
|   `-BuiltinType 0x556dacd2df10 'int'
|-RecordDecl 0x556dacd97da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x556dacd97e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x556dacd97eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x556dacd97f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x556dacd97fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-RecordDecl 0x556dacd98030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x556dacd982c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x556dacd993a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x556dacd98310 'struct cpu_set_t' sugar
|   `-RecordType 0x556dacd980b0 'cpu_set_t'
|     `-Record 0x556dacd98030 ''
|-FunctionDecl 0x556dacd99678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x556dacd99448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556dacd99550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x556dacd99728 <line:107:19>
|-FunctionDecl 0x556dacd99900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x556dacd99790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x556dacd999a8 <col:69>
|-FunctionDecl 0x556dacd99b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x556dacd99a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x556dacd99bc8 <col:64>
|-FunctionDecl 0x556dacd99e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x556dacd99c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556dacd99d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556dacd99f38 <line:113:22>
|-FunctionDecl 0x556dacd9a1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x556dacd99fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556dacd9a098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x556dacd9a268 <col:88>
|-FunctionDecl 0x556dacd9a588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556dacd9a2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556dacd9a3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x556dacd9a440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556dacd9a640 <col:62>
|-FunctionDecl 0x556dacd9a7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x556dacd9a6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x556dacd9a860 <col:63>
|-FunctionDecl 0x556dacd9a988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x556dacd9aa28 <col:47>
|-FunctionDecl 0x556dacd9ab30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x556dacd9aa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556dacd9abd8 <col:69>
|-FunctionDecl 0x556dacd9ace0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x556dacd9ac48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556dacd9ad88 <col:69>
|-FunctionDecl 0x556dacd9b048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556dacd9adf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556dacd9af28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x556dacd9b0f8 <col:88>
|-TypedefDecl 0x556dacd9b188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x556dacd9b150 '__clock_t' sugar
|   |-Typedef 0x556dacd95548 '__clock_t'
|   `-BuiltinType 0x556dacd2df30 'long'
|-TypedefDecl 0x556dacd9b218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x556dacd9b1e0 '__clockid_t' sugar
|   |-Typedef 0x556dacd95938 '__clockid_t'
|   `-BuiltinType 0x556dacd2df10 'int'
|-TypedefDecl 0x556dacd9b2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x556dacd9b270 '__timer_t' sugar
|   |-Typedef 0x556dacd959a8 '__timer_t'
|   `-PointerType 0x556dacd2e630 'void *'
|     `-BuiltinType 0x556dacd2de70 'void'
|-RecordDecl 0x556dacd9b300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x556dacd9b3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x556dacd9b440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x556dacd9b4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x556dacd9b510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x556dacd9b578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x556dacd9b5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x556dacd9b648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x556dacd9b6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x556dacd9b718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x556dacd9b780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x556dacd9b7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x556dacd9b838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x556dacd9b908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x556dacd9b978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x556dacd9ba20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x556dacd9bbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x556dacd9bc90 <col:45>
|-FunctionDecl 0x556dacd9be70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x556dacd9bd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x556dacd9bf18 <col:54>
|-FunctionDecl 0x556dacd9c118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x556dacd9bf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x556dacd9bff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x556dacd9c1c8 <line:157:22>
| `-ConstAttr 0x556dacd9c220 <col:63>
|-FunctionDecl 0x556dacd9d050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556dacd9c318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556dacd9d0f8 <col:56>
|-FunctionDecl 0x556dacd9d4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x556dacd9d168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x556dacd9d1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556dacd9d260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x556dacd9d358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x556dacd9d560 <col:54>
|-RecordDecl 0x556dacd9d5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x556dacd9d668 parent 0x556dacd2de18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x556dacd9d8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x556dacd9d968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x556dacd9d9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x556dacd9da38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x556dacd9db28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x556dacd9dc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x556dacd9dbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x556dacd9db80 'struct __locale_struct' sugar
|     `-RecordType 0x556dacd9d640 'struct __locale_struct'
|       `-Record 0x556dacd9d5b8 '__locale_struct'
|-TypedefDecl 0x556dacd9dcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x556dacd9dcc0 '__locale_t' sugar
|   |-Typedef 0x556dacd9dc48 '__locale_t'
|   `-PointerType 0x556dacd9dbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x556dacd9db80 'struct __locale_struct' sugar
|       `-RecordType 0x556dacd9d640 'struct __locale_struct'
|         `-Record 0x556dacd9d5b8 '__locale_struct'
|-FunctionDecl 0x556dacd9f110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x556dacd9dd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x556dacd9dde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556dacd9de60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x556dacd9def0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556dacd9df68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x556dacd9f1d8 <col:40>
|-FunctionDecl 0x556dacd9f3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556dacd9f2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x556dacd9f470 <col:66>
|-FunctionDecl 0x556dacd9f580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556dacd9f4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x556dacd9f628 <col:69>
|-FunctionDecl 0x556dacd9f858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556dacd9f690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556dacd9f720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556dacd9f908 <col:52>
|-FunctionDecl 0x556dacd9fab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556dacd9f970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556dacd9fa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556dacd9fb60 <col:55>
|-FunctionDecl 0x556dacd9fcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x556dacd9fbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x556dacd9fda0 <col:62>
|-FunctionDecl 0x556dacd9ff18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x556dacd9fe08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x556dacd9ffc0 <col:60>
|-FunctionDecl 0x556dacda02b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556dacda0118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556dacda0198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x556dacda0368 <col:44>
|-FunctionDecl 0x556dacda0578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556dacda03d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556dacda0450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x556dacda0628 <col:49>
|-VarDecl 0x556dacda0728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x556dacda07a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x556dacda0828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x556dacda08f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x556dacda0a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x556dacda0ac0 <col:42>
|-VarDecl 0x556dacda0b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x556dacda0bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x556dacda0d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x556dacda0c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x556dacda0de0 <col:57>
|-FunctionDecl 0x556dacda0ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556dacda0e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556dacda0f98 <col:56>
|-FunctionDecl 0x556dacda10d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556dacda1018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x556dacda1178 <col:59>
|-FunctionDecl 0x556dacda1280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x556dacda11e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x556dacda1328 <col:48>
| `-ConstAttr 0x556dacda1380 <col:89>
|-FunctionDecl 0x556dacda15e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556dacda1438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x556dacda14c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x556dacda1848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556dacda16d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556dacda1768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x556dacda18f8 <col:88>
|-FunctionDecl 0x556dacda1a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556dacda1960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556dacda19f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x556dacda1b40 <col:88>
|-FunctionDecl 0x556dacda1d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x556dacda1ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556dacda1c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x556dacda1e08 <line:208:22>
|-FunctionDecl 0x556dacda2178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556dacda1e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556dacda1ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x556dacda1f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x556dacda2010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x556dacda2478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x556dacda2278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x556dacda2350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x556dacda2528 <col:85>
|-FunctionDecl 0x556dacda2918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x556dacda2590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556dacda26c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x556dacda27d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x556dacda29d0 <col:52>
|-FunctionDecl 0x556dacda2b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x556dacda2a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556dacda2bf0 <col:61>
|-FunctionDecl 0x556dacda30f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x556dacda2c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556dacda2cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x556dacda2e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x556dacda2ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x556dacda31b0 <col:62>
|-FunctionDecl 0x556dacda33c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x556dacda3218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556dacda32a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x556dacda3478 <line:221:22>
|-FunctionDecl 0x556dacda3578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x556dacda34e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556dacda3620 <col:65>
|-TypedefDecl 0x556dacda3690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x556dacd2dfd0 'unsigned long'
|-RecordDecl 0x556dacda36e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x556dacda3830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556dacda3898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556dacda3948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x556dacda38f0 'union pthread_attr_t' sugar
|   `-RecordType 0x556dacda3770 'union pthread_attr_t'
|     `-Record 0x556dacda36e8 'pthread_attr_t'
|-RecordDecl 0x556dacda39a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x556dacda3b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x556dacda3b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x556dacda3c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x556dacda3be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x556dacda3a20 'struct __pthread_internal_list'
|     `-Record 0x556dacda39a0 '__pthread_internal_list'
|-RecordDecl 0x556dacda3cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x556dacda3d58 parent 0x556dacd2de18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x556dacda3e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556dacda3e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x556dacda3f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x556dacda3f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x556dacda3fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x556dacda4038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x556dacda8110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x556dacda81c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x556dacda82b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x556dacda8318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556dacda84a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x556dacda8440 'union pthread_mutex_t' sugar
|   `-RecordType 0x556dacda3d30 'pthread_mutex_t'
|     `-Record 0x556dacda3cb0 ''
|-RecordDecl 0x556dacda8510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x556dacda8650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556dacda86b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556dacda8770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x556dacda8710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x556dacda8590 'pthread_mutexattr_t'
|     `-Record 0x556dacda8510 ''
|-RecordDecl 0x556dacda87e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x556dacda8888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x556dacda8950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556dacda89b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x556dacda8a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x556dacda8a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x556dacda8af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x556dacda8b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x556dacda8bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x556dacda8c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x556dacda8ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/mix019_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/mix019_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x556dacda8dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x556dacda8e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x556dacda8f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x556dacda8f10 'union pthread_cond_t' sugar
|   `-RecordType 0x556dacda8860 'pthread_cond_t'
|     `-Record 0x556dacda87e0 ''
|-RecordDecl 0x556dacda8fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x556dacdaa130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556dacdaa198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556dacdaa250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x556dacdaa1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x556dacda9060 'pthread_condattr_t'
|     `-Record 0x556dacda8fe0 ''
|-TypedefDecl 0x556dacdaa2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x556dacd2dfb0 'unsigned int'
|-TypedefDecl 0x556dacdaa348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x556dacd2df10 'int'
|-RecordDecl 0x556dacdaa3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x556dacdaa448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x556dacdaa510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556dacdaa578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x556dacdaa5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x556dacdaa648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x556dacdaa6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x556dacdaa718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x556dacdaa780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x556dacdaa7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x556dacdaa850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x556dacdaa8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x556dacdaa920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x556dacdaa9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/mix019_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix019_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x556dacdaaa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556dacdaaae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556dacdaac30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x556dacdaabd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x556dacdaa420 'pthread_rwlock_t'
|     `-Record 0x556dacdaa3a0 ''
|-RecordDecl 0x556dacdaaca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x556dacdaade0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x556dacdaae48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556dacdaaf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x556dacdaaea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x556dacdaad20 'pthread_rwlockattr_t'
|     `-Record 0x556dacdaaca0 ''
|-TypedefDecl 0x556dacdaaf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x556dacd2df14 'volatile int' volatile
|   `-BuiltinType 0x556dacd2df10 'int'
|-RecordDecl 0x556dacdaafe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x556dacdac140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x556dacdac1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556dacdac260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x556dacdac200 'union pthread_barrier_t' sugar
|   `-RecordType 0x556dacdab060 'pthread_barrier_t'
|     `-Record 0x556dacdaafe0 ''
|-RecordDecl 0x556dacdac2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x556dacdac3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556dacdac438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556dacdac4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x556dacdac490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x556dacdac350 'pthread_barrierattr_t'
|     `-Record 0x556dacdac2d0 ''
|-TypedefDecl 0x556dacdac608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x556dacdac5a0 'long [8]' 8 
|   `-BuiltinType 0x556dacd2df30 'long'
|-EnumDecl 0x556dacdac660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x556dacdac728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x556dacdac778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x556dacdac7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x556dacdac898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x556dacdac8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x556dacdac938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x556dacdac988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x556dacdaca10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x556dacdac9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x556dacdac9d8 <col:26> 'int' EnumConstant 0x556dacdac898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x556dacdaca98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x556dacdaca80 <col:29> 'int'
| |   `-DeclRefExpr 0x556dacdaca60 <col:29> 'int' EnumConstant 0x556dacdac8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x556dacdacb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x556dacdacb08 <col:30> 'int'
| |   `-DeclRefExpr 0x556dacdacae8 <col:30> 'int' EnumConstant 0x556dacdac938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x556dacdacba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x556dacdacb90 <col:27> 'int'
|     `-DeclRefExpr 0x556dacdacb70 <col:27> 'int' EnumConstant 0x556dacdaca10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x556dacdacbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x556dacdaccc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x556dacdacd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x556dacdacd38 <col:30> 'int'
| |   `-DeclRefExpr 0x556dacdacd18 <col:30> 'int' EnumConstant 0x556dacdaccc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x556dacdacda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x556dacdace28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x556dacdace10 <col:29> 'int'
|     `-DeclRefExpr 0x556dacdacdf0 <col:29> 'int' EnumConstant 0x556dacdacda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x556dacdace78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x556dacdacf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x556dacdacf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x556dacdacfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x556dacdad038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x556dacdad150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x556dacdad1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x556dacdad1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x556dacdad278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x556dacdad260 <col:31> 'int'
|     `-DeclRefExpr 0x556dacdad240 <col:31> 'int' EnumConstant 0x556dacdad150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x556dacdad2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x556dacdad398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x556dacdad3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x556dacdad438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x556dacdad508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x556dacdad558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x556dacdad5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x556dacdad678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x556dacdad6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x556dacdad718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x556dacdad958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x556dacdad9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x556dacdada28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x556dacdadb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x556dacdadb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x556dacdadc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x556dacdadcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x556dacdadd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x556dacdaddd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x556dacdade28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x556dacdae488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x556dacdadf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x556dacdae030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dacdae270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x556dacdae2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x556dacdae548 <col:47>
| |-NonNullAttr 0x556dacdae5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x556dacdae5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x556dacdae700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x556dacdae630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x556dacdae958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x556dacdae7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x556dacdae838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x556dacdaeb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x556dacdaea18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x556dacdaebd0 <col:60>
|-FunctionDecl 0x556dacdaed20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x556dacdaedc0 <col:54>
| `-ConstAttr 0x556dacdaee18 <col:95>
|-FunctionDecl 0x556dacdaefe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x556dacdaee50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556dacdaeec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x556dacdaf098 <line:394:19>
| `-ConstAttr 0x556dacdaf0f0 <col:60>
|-FunctionDecl 0x556dacdb0b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556dacdb09d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556dacdb0bb0 <col:71>
| `-NonNullAttr 0x556dacdb0c08 <col:112, col:126> 1
|-FunctionDecl 0x556dacdb0d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556dacdb0c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556dacdb0db8 <line:397:22>
| `-NonNullAttr 0x556dacdb0e10 <col:63, col:77> 1
|-FunctionDecl 0x556dacdb1038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x556dacdb0e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556dacdb0ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x556dacdb10e8 <line:400:22>
| `-NonNullAttr 0x556dacdb1140 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdb1348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556dacdb1188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dacdb1208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x556dacdb13f8 <line:403:22>
| `-NonNullAttr 0x556dacdb1450 <col:63, col:77> 1
|-FunctionDecl 0x556dacdb16a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x556dacdb1498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556dacdb1540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x556dacdb1758 <line:406:22>
| `-NonNullAttr 0x556dacdb17b0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdb29e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556dacdb17f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dacdb1870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556dacdb2a98 <line:409:22>
| `-NonNullAttr 0x556dacdb2af0 <col:63, col:77> 1
|-FunctionDecl 0x556dacdb2d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556dacdb2b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dacdb2bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556dacdb2dd8 <line:412:22>
| `-NonNullAttr 0x556dacdb2e30 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdb3068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556dacdb2e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dacdb2f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x556dacdb3118 <col:37>
| `-NonNullAttr 0x556dacdb3170 <col:78, col:95> 1 2
|-FunctionDecl 0x556dacdb3358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdb31b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dacdb3238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x556dacdb3408 <line:418:22>
| `-NonNullAttr 0x556dacdb3460 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdb35e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556dacdb34a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dacdb3528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x556dacdb3698 <line:420:22>
| `-NonNullAttr 0x556dacdb36f0 <col:63, col:77> 1
|-FunctionDecl 0x556dacdb3898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdb3738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dacdb37b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x556dacdb3948 <line:423:22>
| `-NonNullAttr 0x556dacdb39c0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdb3b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556dacdb3a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dacdb3a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x556dacdb3bf8 <line:426:22>
| `-NonNullAttr 0x556dacdb3c50 <col:63, col:77> 1
|-FunctionDecl 0x556dacdb3df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdb3c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dacdb3d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x556dacdb3ea8 <line:429:22>
| `-NonNullAttr 0x556dacdb3f00 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdb4088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556dacdb3f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dacdb3fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x556dacdb4138 <line:431:22>
| `-NonNullAttr 0x556dacdb4190 <col:63, col:77> 1
|-FunctionDecl 0x556dacdb43b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x556dacdb41d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dacdb4258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x556dacdb4468 <line:434:22>
| |-NonNullAttr 0x556dacdb44c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x556dacdb44f8 <col:100> "" ""
|-FunctionDecl 0x556dacdb4708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x556dacdb4548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dacdb45c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x556dacdb47b8 <line:437:22>
| |-NonNullAttr 0x556dacdb4810 <col:63, col:77> 1
| `-DeprecatedAttr 0x556dacdb4848 <col:97> "" ""
|-FunctionDecl 0x556dacdb4a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556dacdb4898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dacdb4910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556dacdb4af8 <line:440:22>
| `-NonNullAttr 0x556dacdb4b50 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdb4cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556dacdb4b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dacdb4c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556dacdb4d80 <line:443:22>
| `-NonNullAttr 0x556dacdb4dd8 <col:63, col:77> 1
|-FunctionDecl 0x556dacdb50c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556dacdb4e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dacdb4ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x556dacdb4f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556dacdb5180 <line:447:22>
| `-NonNullAttr 0x556dacdb51d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x556dacdb5488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x556dacdb5230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dacdb52b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x556dacdb5328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556dacdb5540 <col:43>
| `-NonNullAttr 0x556dacdb5598 <col:84, col:98> 1
|-FunctionDecl 0x556dacdb5858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556dacdb55e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556dacdb5668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x556dacdb56f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x556dacdb5910 <line:452:22>
| `-NonNullAttr 0x556dacdb5968 <col:63, col:77> 3
|-FunctionDecl 0x556dacdb5c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556dacdb59e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556dacdb5a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x556dacdb5af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556dacdb5d30 <line:456:22>
| `-NonNullAttr 0x556dacdb5d88 <col:63, col:80> 2 3
|-FunctionDecl 0x556dacdb5f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x556dacdb5dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556dacdb5e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x556dacdb6028 <line:458:22>
|-FunctionDecl 0x556dacdb63f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x556dacdb60f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x556dacdb6290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x556dacdb64a8 <col:52, col:69> 1 2
|-FunctionDecl 0x556dacdb6650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x556dacdb6530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x556dacdb65b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x556dacdb6838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x556dacdb6718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x556dacdb6798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x556dacdb69f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x556dacdb68f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x556dacdb6b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x556dacdb6bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x556dacdb6c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x556dacdb6d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x556dacdb6dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x556dacdb6fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix019_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x556dacdb7098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x556dacdb7150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x556dacdb70f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x556dacdb6c50 '__pthread_unwind_buf_t'
| |   `-Record 0x556dacdb6bd0 ''
| `-AlignedAttr 0x556dacdb71a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x556dacdb7220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x556dacdb7380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x556dacdb73e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x556dacdb7450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x556dacdb74b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x556dacdb76c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556dacdb75b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556dacdb7808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556dacdb7778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556dacdb7a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556dacdb78c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x556dacdb7aa8 <line:487:22>
|-RecordDecl 0x556dacdb7b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x556dacdb7e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x556dacdb7c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x556dacdb7cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x556dacdb7ec8 <col:86>
| `-ReturnsTwiceAttr 0x556dacdb7f20 <col:12> Implicit
|-FunctionDecl 0x556dacdb8248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556dacdb7ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x556dacdb8100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x556dacdb82f8 <line:493:22>
| `-NonNullAttr 0x556dacdb8350 <col:63, col:77> 1
|-FunctionDecl 0x556dacdb84c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556dacdb8398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556dacdb8570 <line:495:22>
| `-NonNullAttr 0x556dacdb85c8 <col:63, col:77> 1
|-FunctionDecl 0x556dacdb86d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556dacdb8618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556dacdb8778 <line:497:22>
| `-NonNullAttr 0x556dacdb87d0 <col:52, col:66> 1
|-FunctionDecl 0x556dacdb88d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556dacdb8818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556dacdb8978 <line:499:22>
| `-NonNullAttr 0x556dacdb89d0 <col:52, col:66> 1
|-FunctionDecl 0x556dacdb9c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556dacdb9a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556dacdb9ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556dacdb9cd8 <col:36>
| `-NonNullAttr 0x556dacdb9d30 <col:66, col:83> 1 2
|-FunctionDecl 0x556dacdb9e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556dacdb9d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556dacdb9ed8 <line:504:22>
| `-NonNullAttr 0x556dacdb9f30 <col:52, col:66> 1
|-FunctionDecl 0x556dacdba1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdb9fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556dacdba060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556dacdba278 <line:508:22>
| `-NonNullAttr 0x556dacdba2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdba598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x556dacdba318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556dacdba398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x556dacdba418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x556dacdba650 <line:512:22>
| `-NonNullAttr 0x556dacdba6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x556dacdba7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556dacdba6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556dacdba858 <line:514:22>
| `-NonNullAttr 0x556dacdba8b0 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbaad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556dacdba960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556dacdbab80 <line:516:22>
| `-NonNullAttr 0x556dacdbabd8 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbace0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556dacdbac28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556dacdbad88 <line:518:22>
| `-NonNullAttr 0x556dacdbade0 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbb008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdbae28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556dacdbaea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x556dacdbb0b8 <line:522:22>
| `-NonNullAttr 0x556dacdbb110 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdbb318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556dacdbb158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dacdbb1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x556dacdbb3c8 <line:525:22>
| `-NonNullAttr 0x556dacdbb420 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbb5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdbb468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556dacdbb4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x556dacdbb678 <line:528:22>
| `-NonNullAttr 0x556dacdbb6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdbb858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556dacdbb718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dacdbb798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x556dacdbb908 <line:530:22>
| `-NonNullAttr 0x556dacdbb960 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbbb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdbb9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556dacdbba40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x556dacdbbbd0 <line:534:22>
| `-NonNullAttr 0x556dacdbbc28 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdbbdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556dacdbbc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dacdbbcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x556dacdbbe68 <line:537:22>
| `-NonNullAttr 0x556dacdbbec0 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbc068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdbbf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556dacdbbf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556dacdbc118 <line:541:22>
| `-NonNullAttr 0x556dacdbc170 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdbc2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556dacdbc1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dacdbc238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x556dacdbc3a8 <line:544:22>
| `-NonNullAttr 0x556dacdbc400 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbc5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x556dacdbc448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dacdbc4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x556dacdbc698 <line:547:22>
| `-NonNullAttr 0x556dacdbc6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdbc878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556dacdbc738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dacdbc7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x556dacdbc928 <line:550:22>
| `-NonNullAttr 0x556dacdbc980 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbdcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x556dacdbdaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556dacdbdbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x556dacdbdda8 <col:29>
| `-NonNullAttr 0x556dacdbde00 <col:70, col:84> 1
|-FunctionDecl 0x556dacdbdf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dacdbde48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dacdbe020 <line:555:22>
| `-NonNullAttr 0x556dacdbe078 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbe180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dacdbe0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dacdbe228 <line:557:22>
| `-NonNullAttr 0x556dacdbe280 <col:52, col:66> 1
|-FunctionDecl 0x556dacdbe380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dacdbe2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dacdbe428 <line:559:19>
| `-NonNullAttr 0x556dacdbe480 <col:49, col:63> 1
|-FunctionDecl 0x556dacdbe6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556dacdbe4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556dacdbe558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556dacdbe768 <col:39>
| `-NonNullAttr 0x556dacdbe7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x556dacdbe8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dacdbe808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dacdbe968 <line:564:22>
| `-NonNullAttr 0x556dacdbe9c0 <col:52, col:66> 1
|-FunctionDecl 0x556dacdbeb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dacdbea70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dacdbebd0 <line:566:22>
| `-NonNullAttr 0x556dacdbec28 <col:52, col:66> 1
|-FunctionDecl 0x556dacdbede8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556dacdbec78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556dacdbed08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556dacdbee98 <col:39>
| `-NonNullAttr 0x556dacdbeef0 <col:69, col:86> 1 2
|-FunctionDecl 0x556dacdbeff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dacdbef38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dacdbf098 <line:571:22>
| `-NonNullAttr 0x556dacdbf0f0 <col:52, col:66> 1
|-FunctionDecl 0x556dacdbf2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556dacdbf1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556dacdbf380 <line:573:22>
| `-NonNullAttr 0x556dacdbf3d8 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbf4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556dacdbf428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556dacdbf588 <line:575:22>
| `-NonNullAttr 0x556dacdbf5e0 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbf808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdbf628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556dacdbf6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x556dacdbf8b8 <line:579:22>
| `-NonNullAttr 0x556dacdbf910 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdbfb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556dacdbf958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556dacdbf9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x556dacdbfbe8 <line:582:22>
| `-NonNullAttr 0x556dacdbfc40 <col:63, col:77> 1
|-FunctionDecl 0x556dacdbfde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdbfc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556dacdbfd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x556dacdbfe98 <line:586:22>
| `-NonNullAttr 0x556dacdbfef0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdc0078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556dacdbff38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556dacdbffb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x556dacdc0128 <col:36>
| `-NonNullAttr 0x556dacdc0180 <col:77, col:91> 1
|-FunctionDecl 0x556dacdc04b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x556dacdc0260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556dacdc0370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x556dacdc0568 <line:591:22>
| `-NonNullAttr 0x556dacdc05c0 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc0738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556dacdc0608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556dacdc07e0 <line:593:22>
| `-NonNullAttr 0x556dacdc0838 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc0940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556dacdc0888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556dacdc09e8 <line:595:22>
| `-NonNullAttr 0x556dacdc0a40 <col:52, col:66> 1
|-FunctionDecl 0x556dacdc0b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556dacdc0aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556dacdc0c00 <line:597:22>
| `-NonNullAttr 0x556dacdc0c58 <col:52, col:66> 1
|-FunctionDecl 0x556dacdc0e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x556dacdc0ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556dacdc0d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x556dacdc0f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x556dacdc1268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556dacdc0fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556dacdc1030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556dacdc10c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x556dacdc1320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x556dacdc1538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556dacdc1400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556dacdc15e0 <line:606:22>
| `-NonNullAttr 0x556dacdc1638 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc1740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556dacdc1688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556dacdc17e8 <line:608:22>
| `-NonNullAttr 0x556dacdc1840 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc1aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdc1888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556dacdc1908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x556dacdc1b50 <line:612:22>
| `-NonNullAttr 0x556dacdc1ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdc1db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x556dacdc1bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556dacdc1c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x556dacdc1e68 <col:37>
| `-NonNullAttr 0x556dacdc1ec0 <col:78, col:92> 1
|-FunctionDecl 0x556dacdc20d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x556dacdc1f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556dacdc1fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x556dacdc2188 <line:618:22>
| `-NonNullAttr 0x556dacdc21e0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdc23a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x556dacdc2228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556dacdc22a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x556dacdc2458 <line:621:22>
| `-NonNullAttr 0x556dacdc24b0 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc2758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x556dacdc2590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x556dacdc2610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x556dacdc2808 <line:623:22>
| `-NonNullAttr 0x556dacdc2860 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc29d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556dacdc28a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556dacdc2ab0 <line:625:22>
| `-NonNullAttr 0x556dacdc2b08 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc2c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556dacdc2b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556dacdc2cb8 <line:627:22>
| `-NonNullAttr 0x556dacdc2d10 <col:52, col:66> 1
|-FunctionDecl 0x556dacdc2e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556dacdc2d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556dacdc2eb8 <line:629:22>
| `-NonNullAttr 0x556dacdc2f10 <col:52, col:66> 1
|-FunctionDecl 0x556dacdc3010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556dacdc2f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556dacdc30b8 <line:631:22>
| `-NonNullAttr 0x556dacdc3110 <col:52, col:66> 1
|-FunctionDecl 0x556dacdc34e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x556dacdc31f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x556dacdc3300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556dacdc3380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x556dacdc35a0 <line:635:22>
| `-NonNullAttr 0x556dacdc35f8 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc3778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556dacdc3648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556dacdc3820 <line:637:22>
| `-NonNullAttr 0x556dacdc3878 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc3980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556dacdc38c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556dacdc3a28 <line:639:22>
| `-NonNullAttr 0x556dacdc3a80 <col:52, col:66> 1
|-FunctionDecl 0x556dacdc4c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556dacdc4b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556dacdc4d30 <line:641:22>
| `-NonNullAttr 0x556dacdc4d88 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc4e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556dacdc4dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556dacdc4f38 <line:643:22>
| `-NonNullAttr 0x556dacdc4f90 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc51b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dacdc4fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556dacdc5058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x556dacdc5268 <line:647:22>
| `-NonNullAttr 0x556dacdc52c0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dacdc54c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x556dacdc5308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x556dacdc5388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x556dacdc5578 <line:650:22>
| `-NonNullAttr 0x556dacdc55d0 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc5918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x556dacdc56b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x556dacdc57d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x556dacdc59c8 <line:653:22>
| `-NonNullAttr 0x556dacdc5a20 <col:63, col:77> 1
|-FunctionDecl 0x556dacdc5b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x556dacdc5a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556dacdc5c30 <col:69>
|-FunctionDecl 0x556dacdc5da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x556dacdc5c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556dacdc5e50 <col:72>
|-FunctionDecl 0x556dacdc6088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x556dacdc5eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x556dacdc5f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x556dacdc6138 <col:44>
|-FunctionDecl 0x556dacdc6358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x556dacdc61a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556dacdc6218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x556dacdc6408 <line:660:22>
| `-NonNullAttr 0x556dacdc6460 <col:63, col:77> 2
|-FunctionDecl 0x556dacdc68a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x556dacdc6540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x556dacdc6650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x556dacdc6760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x556dacdc6960 <col:47>
|-FunctionDecl 0x556dacdc6af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x556dacdc69d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556dacdc6c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x556dacdc6bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556dacdc6da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x556dacdc6d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556dacdc6e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x556dacdc6f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x556dacdc6fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x556dacdc70a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x556dacdc7120 prev 0x556dacdc70a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x556dacdc7188 <col:24> 'int' 0
|-VarDecl 0x556dacdc71c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x556dacdc7240 prev 0x556dacdc71c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x556dacdc72a8 <col:27> 'int' 0
|-VarDecl 0x556dacdc72e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x556dacdc7360 prev 0x556dacdc72e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x556dacdc73c8 <col:27> 'int' 0
|-VarDecl 0x556dacdc7400 <line:677:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x556dacdc7480 prev 0x556dacdc7400 <line:678:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x556dacdc74e8 <col:27> 'int' 0
|-VarDecl 0x556dacdc7518 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x556dacdc7590 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x556dacdc7610 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x556dacdc7690 prev 0x556dacdc7610 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x556dacdc76f8 <col:9> 'int' 0
|-VarDecl 0x556dacdc7730 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x556dacdc77b0 prev 0x556dacdc7730 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x556dacdc7818 <col:9> 'int' 0
|-VarDecl 0x556dacdc7848 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x556dacdc78c8 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x556dacdc7940 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x556dacdc79b8 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x556dacdc7a30 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x556dacdc7b00 <line:690:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x556dacdc7b78 <line:691:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x556dacdc7bf0 <line:692:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x556dacdc7c68 <line:693:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x556dacdc7ce0 <line:694:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x556dacdc7d58 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x556dacdc7dd8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x556dacdc7e58 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x556dacdc7ed0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x556dacdc7f50 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x556dacdc7fc8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x556dacdc8048 <line:701:1, col:5> col:5 used z 'int'
|-VarDecl 0x556dacdc80c8 prev 0x556dacdc8048 <line:702:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x556dacdc8130 <col:9> 'int' 0
|-VarDecl 0x556dacdc8160 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x556dacdc81d8 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x556dacdc82f0 prev 0x556dacdc6af0 <line:705:1, line:719:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x556dacdc8258 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556dacdc88a8 <line:706:1, line:719:1>
|   |-CallExpr 0x556dacdc8408 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdc83f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdc8398 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dacdc8468 <line:708:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556dacdc8428 <col:3> 'int' lvalue Var 0x556dacdc80c8 'z' 'int'
|   | `-IntegerLiteral 0x556dacdc8448 <col:7> 'int' 1
|   |-CallExpr 0x556dacdc84c0 <line:709:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdc84a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdc8488 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dacdc8518 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdc8500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdc84e0 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dacdc8578 <line:711:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556dacdc8538 <col:3> 'int' lvalue Var 0x556dacdc7690 'x' 'int'
|   | `-IntegerLiteral 0x556dacdc8558 <col:7> 'int' 1
|   |-CallExpr 0x556dacdc85d0 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdc85b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdc8598 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dacdc8628 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdc8610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdc85f0 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x556dacdc8680 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdc8668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdc8648 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dacdc86d8 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdc86c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdc86a0 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dacdc8790 <line:716:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556dacdc86f8 <col:3> 'int' lvalue Var 0x556dacdc7120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556dacdc8770 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556dacdc8758 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdc8718 <col:22> 'int' lvalue Var 0x556dacdc7120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556dacdc8738 <col:41> 'int' 1
|   |-CallExpr 0x556dacdc87e8 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdc87d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdc87b0 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556dacdc8898 <line:718:3, col:36>
|     `-CallExpr 0x556dacdc8878 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556dacdc8860 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556dacdc8808 <col:10> 'void *(void)' Function 0x556dacd6d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556dacdc89c8 prev 0x556dacdc6c48 <line:720:1, line:747:1> line:720:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x556dacdc8930 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556dacdcb8d0 <line:721:1, line:747:1>
|   |-CallExpr 0x556dacdc8aa8 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdc8a90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdc8a70 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dacdc8b30 <line:723:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556dacdc8ac8 <col:3> 'int' lvalue Var 0x556dacdc7690 'x' 'int'
|   | `-IntegerLiteral 0x556dacdc8b10 <col:7> 'int' 2
|   |-CallExpr 0x556dacdc8b88 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdc8b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdc8b50 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dacdc8be0 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdc8bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdc8ba8 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dacdc8c90 <line:726:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdc8c00 <col:3> '_Bool' lvalue Var 0x556dacdc8160 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdc8c78 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x556dacdc8c58 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x556dacdc8c40 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x556dacdc8c20 <col:19> 'void *(void)' Function 0x556dacd6d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x556dacdc8d40 <line:727:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdc8cb0 <col:3> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdc8d28 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x556dacdc8d08 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x556dacdc8cf0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x556dacdc8cd0 <col:19> 'void *(void)' Function 0x556dacd6d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x556dacdc8db8 <line:728:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdc8d60 <col:3> '_Bool' lvalue Var 0x556dacdc7848 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdc8da0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdc8d80 <col:21> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x556dacdc8e30 <line:729:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556dacdc8dd8 <col:3> 'int' lvalue Var 0x556dacdc78c8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556dacdc8e18 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdc8df8 <col:15> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   |-BinaryOperator 0x556dacdc9268 <line:730:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x556dacdc8e50 <col:3> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   | `-ConditionalOperator 0x556dacdc9238 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556dacdc9060 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556dacdc8f80 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556dacdc8ea8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556dacdc8e90 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556dacdc8e70 <col:8> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556dacdc8f60 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556dacdc8ef8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556dacdc8ee0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556dacdc8ec0 <col:27> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x556dacdc8f48 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x556dacdc8f30 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556dacdc8f10 <col:46> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x556dacdc9040 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556dacdc8fd8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556dacdc8fc0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556dacdc8fa0 <col:65> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x556dacdc9028 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556dacdc9010 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556dacdc8ff0 <col:84> '_Bool' lvalue Var 0x556dacdc7c68 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dacdc9220 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdc9080 <col:101> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   |   `-ParenExpr 0x556dacdc9200 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556dacdc91d0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x556dacdc9140 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556dacdc90f8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556dacdc90e0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556dacdc90a0 <col:106> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556dacdc9128 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556dacdc9110 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556dacdc90c0 <col:124> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556dacdc91a0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dacdc9160 <col:141> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556dacdc91b8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dacdc9180 <col:153> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x556dacdc9778 <line:731:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556dacdc9288 <col:3> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x556dacdc9748 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556dacdc9718 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dacdc9700 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dacdc92a8 <col:15> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dacdc9730 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdc92c8 <col:31> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x556dacdc96e0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556dacdc96b0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556dacdc94d8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556dacdc93f8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556dacdc9320 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556dacdc9308 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556dacdc92e8 <col:45> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556dacdc93d8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556dacdc9370 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556dacdc9358 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556dacdc9338 <col:64> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x556dacdc93c0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556dacdc93a8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556dacdc9388 <col:83> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556dacdc94b8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556dacdc9450 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556dacdc9438 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556dacdc9418 <col:102> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x556dacdc94a0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556dacdc9488 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556dacdc9468 <col:121> '_Bool' lvalue Var 0x556dacdc7c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556dacdc9698 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dacdc94f8 <col:138> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x556dacdc9678 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556dacdc9648 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556dacdc95b8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556dacdc9570 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556dacdc9558 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556dacdc9518 <col:151> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556dacdc95a0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556dacdc9588 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556dacdc9538 <col:169> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x556dacdc9618 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556dacdc95d8 <col:186> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556dacdc9630 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556dacdc95f8 <col:198> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x556dacdc9ca0 <line:732:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556dacdc9798 <col:3> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x556dacdc9c70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556dacdc9c40 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dacdc9c28 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dacdc97b8 <col:15> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dacdc9c58 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdc97d8 <col:31> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x556dacdc9c08 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556dacdc9bd8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556dacdc99e8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556dacdc9908 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556dacdc9830 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556dacdc9818 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556dacdc97f8 <col:45> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556dacdc98e8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556dacdc9880 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556dacdc9868 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556dacdc9848 <col:64> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x556dacdc98d0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556dacdc98b8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556dacdc9898 <col:83> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556dacdc99c8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556dacdc9960 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556dacdc9948 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556dacdc9928 <col:102> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x556dacdc99b0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556dacdc9998 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556dacdc9978 <col:121> '_Bool' lvalue Var 0x556dacdc7c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556dacdc9bc0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dacdc9a08 <col:138> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x556dacdc9ba0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556dacdc9b70 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556dacdc9ac8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556dacdc9a80 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556dacdc9a68 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556dacdc9a28 <col:151> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556dacdc9ab0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556dacdc9a98 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556dacdc9a48 <col:169> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x556dacdc9b40 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556dacdc9ae8 <col:186> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556dacdc9b58 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556dacdc9b20 <col:198> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x556dacdca248 <line:733:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdc9cc0 <col:3> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdca230 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdca200 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556dacdca1b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdca1a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdc9ce0 <col:20> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdca1e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdca1d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdc9d00 <col:36> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556dacdca180 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556dacdca150 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556dacdc9f10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dacdc9e30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dacdc9d58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dacdc9d40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dacdc9d20 <col:55> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dacdc9e10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dacdc9da8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dacdc9d90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dacdc9d70 <col:74> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556dacdc9df8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dacdc9de0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dacdc9dc0 <col:93> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dacdc9ef0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dacdc9e88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dacdc9e70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dacdc9e50 <col:112> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556dacdc9ed8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dacdc9ec0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dacdc9ea0 <col:131> '_Bool' lvalue Var 0x556dacdc7c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556dacdca138 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dacdca120 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dacdc9f30 <col:148> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556dacdca100 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556dacdca0d0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556dacdc9ff0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dacdc9fa8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dacdc9f90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dacdc9f50 <col:166> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dacdc9fd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dacdc9fc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dacdc9f70 <col:184> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556dacdca088 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dacdca040 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dacdca010 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dacdca0b8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556dacdca0a0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556dacdca068 <col:212> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dacdca810 <line:734:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdca268 <col:3> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdca7f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdca7c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556dacdca780 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdca768 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdca288 <col:20> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdca7b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdca798 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdca2a8 <col:36> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556dacdca748 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556dacdca718 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556dacdca4b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dacdca3d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dacdca300 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dacdca2e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dacdca2c8 <col:55> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dacdca3b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dacdca350 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dacdca338 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dacdca318 <col:74> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556dacdca3a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dacdca388 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dacdca368 <col:93> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dacdca498 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dacdca430 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dacdca418 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dacdca3f8 <col:112> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556dacdca480 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dacdca468 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dacdca448 <col:131> '_Bool' lvalue Var 0x556dacdc7c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556dacdca700 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dacdca6e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dacdca4d8 <col:148> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556dacdca6c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556dacdca698 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556dacdca598 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dacdca550 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dacdca538 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dacdca4f8 <col:166> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dacdca580 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dacdca568 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dacdca518 <col:184> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556dacdca668 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dacdca5e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dacdca5b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dacdca680 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556dacdca640 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556dacdca610 <col:219> 'int' 0
|   |-BinaryOperator 0x556dacdcadd0 <line:735:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdca830 <col:3> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcadb8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdcad88 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556dacdcad40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdcad28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdca850 <col:20> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdcad70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdcad58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdca870 <col:36> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x556dacdcad08 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556dacdcacd8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556dacdcaa80 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dacdca9a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dacdca8c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dacdca8b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dacdca890 <col:55> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dacdca980 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dacdca918 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dacdca900 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dacdca8e0 <col:74> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556dacdca968 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dacdca950 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dacdca930 <col:93> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dacdcaa60 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dacdca9f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dacdca9e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dacdca9c0 <col:112> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556dacdcaa48 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dacdcaa30 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dacdcaa10 <col:131> '_Bool' lvalue Var 0x556dacdc7c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556dacdcacc0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dacdcaca8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dacdcaaa0 <col:148> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x556dacdcac88 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556dacdcac58 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556dacdcab78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dacdcab30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dacdcab00 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dacdcaac0 <col:166> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dacdcab60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dacdcab48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dacdcaae0 <col:184> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556dacdcac10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dacdcabc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dacdcab98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dacdcac40 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556dacdcac28 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556dacdcabf0 <col:212> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556dacdcb398 <line:736:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcadf0 <col:3> '_Bool' lvalue Var 0x556dacdc7c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcb380 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdcb350 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556dacdcb308 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdcb2f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdcae10 <col:20> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdcb338 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdcb320 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdcae30 <col:36> '_Bool' lvalue Var 0x556dacdc7c68 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x556dacdcb2d0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556dacdcb2a0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556dacdcb040 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dacdcaf60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dacdcae88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dacdcae70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dacdcae50 <col:55> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dacdcaf40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dacdcaed8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dacdcaec0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dacdcaea0 <col:74> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556dacdcaf28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dacdcaf10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dacdcaef0 <col:93> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dacdcb020 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dacdcafb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dacdcafa0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dacdcaf80 <col:112> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556dacdcb008 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dacdcaff0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dacdcafd0 <col:131> '_Bool' lvalue Var 0x556dacdc7c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556dacdcb288 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dacdcb270 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dacdcb060 <col:148> '_Bool' lvalue Var 0x556dacdc7c68 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x556dacdcb250 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556dacdcb220 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556dacdcb120 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dacdcb0d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dacdcb0c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dacdcb080 <col:166> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dacdcb108 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dacdcb0f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dacdcb0a0 <col:184> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556dacdcb1f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dacdcb170 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dacdcb140 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dacdcb208 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556dacdcb1c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556dacdcb198 <col:219> 'int' 0
|   |-BinaryOperator 0x556dacdcb410 <line:737:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556dacdcb3b8 <col:3> 'int' lvalue Var 0x556dacdc7240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x556dacdcb3f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdcb3d8 <col:25> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   |-BinaryOperator 0x556dacdcb540 <line:738:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556dacdcb430 <col:3> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   | `-ConditionalOperator 0x556dacdcb510 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556dacdcb4c8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dacdcb4b0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dacdcb450 <col:7> '_Bool' lvalue Var 0x556dacdc7848 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556dacdcb4e0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdcb470 <col:25> 'int' lvalue Var 0x556dacdc78c8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556dacdcb4f8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556dacdcb490 <col:37> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   |-BinaryOperator 0x556dacdcb5d8 <line:739:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcb560 <col:3> '_Bool' lvalue Var 0x556dacdc7848 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556dacdcb5b0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556dacdcb580 <col:28> 'int' 0
|   |-CallExpr 0x556dacdcb630 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdcb618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcb5f8 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dacdcb688 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdcb670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcb650 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x556dacdcb6e0 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdcb6c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcb6a8 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dacdcb738 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdcb720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcb700 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dacdcb7f0 <line:744:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556dacdcb758 <col:3> 'int' lvalue Var 0x556dacdc7120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556dacdcb7d0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556dacdcb7b8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdcb778 <col:22> 'int' lvalue Var 0x556dacdc7120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556dacdcb798 <col:41> 'int' 1
|   |-CallExpr 0x556dacdcb848 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdcb830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcb810 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556dacdcb8c0 <line:746:3, col:36>
|     `-CallExpr 0x556dacdcb8a0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556dacdcb888 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556dacdcb868 <col:10> 'void *(void)' Function 0x556dacd6d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556dacdcba58 prev 0x556dacdc6da0 <line:748:1, line:792:1> line:748:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x556dacdcb9c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556dacdcfd30 <line:749:1, line:792:1>
|   |-CallExpr 0x556dacdcbb58 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdcbb40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcbb00 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dacdcbbd0 <line:751:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556dacdcbb78 <col:3> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x556dacdcbbb8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdcbb98 <col:15> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x556dacdcbc30 <line:752:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556dacdcbbf0 <col:3> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x556dacdcbc10 <col:15> 'int' 1
|   |-BinaryOperator 0x556dacdcbca8 <line:753:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcbc50 <col:3> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcbc90 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdcbc70 <col:20> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dacdcbd40 <line:754:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcbcc8 <col:3> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x556dacdcbd18 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556dacdcbce8 <col:27> 'int' 1
|   |-CallExpr 0x556dacdcbec8 <line:755:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x556dacdcbeb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x556dacdcbd60 <col:3> 'void (int)' Function 0x556dacd6dbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x556dacdcbe60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x556dacdcbe40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x556dacdcbe20 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x556dacdcbdd8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x556dacdcbdc0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x556dacdcbd80 <col:23> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x556dacdcbe08 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x556dacdcbdf0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x556dacdcbda0 <col:41> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dacdcbf48 <line:756:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcbef0 <col:3> '_Bool' lvalue Var 0x556dacdc7b78 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcbf30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdcbf10 <col:20> '_Bool' lvalue Var 0x556dacdc7940 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x556dacdcbfc0 <line:757:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcbf68 <col:3> '_Bool' lvalue Var 0x556dacdc7bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcbfa8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdcbf88 <col:20> '_Bool' lvalue Var 0x556dacdc79b8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556dacdcc038 <line:758:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcbfe0 <col:3> '_Bool' lvalue Var 0x556dacdc7c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcc020 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdcc000 <col:20> '_Bool' lvalue Var 0x556dacdc7a30 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556dacdcc0b0 <line:759:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcc058 <col:3> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcc098 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdcc078 <col:20> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556dacdcc148 <line:760:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcc0d0 <col:3> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x556dacdcc120 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556dacdcc0f0 <col:27> 'int' 1
|   |-CallExpr 0x556dacdcc1a0 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdcc188 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcc168 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dacdcc1f8 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdcc1e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcc1c0 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dacdcc2a8 <line:763:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcc218 <col:3> '_Bool' lvalue Var 0x556dacdc8160 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcc290 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x556dacdcc270 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x556dacdcc258 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x556dacdcc238 <col:19> 'void *(void)' Function 0x556dacd6d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x556dacdcc358 <line:764:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcc2c8 <col:3> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcc340 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x556dacdcc320 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x556dacdcc308 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x556dacdcc2e8 <col:19> 'void *(void)' Function 0x556dacd6d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x556dacdcc3d0 <line:765:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcc378 <col:3> '_Bool' lvalue Var 0x556dacdc7848 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcc3b8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdcc398 <col:21> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x556dacdcc448 <line:766:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556dacdcc3f0 <col:3> 'int' lvalue Var 0x556dacdc78c8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556dacdcc430 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdcc410 <col:15> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   |-BinaryOperator 0x556dacdcc880 <line:767:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x556dacdcc468 <col:3> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   | `-ConditionalOperator 0x556dacdcc850 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556dacdcc678 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556dacdcc598 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556dacdcc4c0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556dacdcc4a8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556dacdcc488 <col:8> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556dacdcc578 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556dacdcc510 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556dacdcc4f8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556dacdcc4d8 <col:27> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x556dacdcc560 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x556dacdcc548 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556dacdcc528 <col:46> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x556dacdcc658 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556dacdcc5f0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556dacdcc5d8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556dacdcc5b8 <col:65> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x556dacdcc640 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556dacdcc628 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556dacdcc608 <col:84> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556dacdcc838 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdcc698 <col:101> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   |   `-ParenExpr 0x556dacdcc818 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556dacdcc7e8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x556dacdcc758 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556dacdcc710 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556dacdcc6f8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556dacdcc6b8 <col:106> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556dacdcc740 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556dacdcc728 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556dacdcc6d8 <col:124> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556dacdcc7b8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dacdcc778 <col:141> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556dacdcc7d0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dacdcc798 <col:153> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x556dacdccdb0 <line:768:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556dacdcc8a0 <col:3> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x556dacdccd80 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556dacdccd50 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dacdccd38 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dacdcc8c0 <col:15> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dacdccd68 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdcc8e0 <col:31> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x556dacdccd18 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556dacdccce8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556dacdccaf0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556dacdcca10 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556dacdcc938 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556dacdcc920 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556dacdcc900 <col:45> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556dacdcc9f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556dacdcc988 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556dacdcc970 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556dacdcc950 <col:64> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x556dacdcc9d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556dacdcc9c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556dacdcc9a0 <col:83> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556dacdccad0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556dacdcca68 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556dacdcca50 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556dacdcca30 <col:102> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556dacdccab8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556dacdccaa0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556dacdcca80 <col:121> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556dacdcccd0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dacdccb10 <col:138> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x556dacdcccb0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556dacdccc80 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556dacdccbf0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556dacdccba8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556dacdccb90 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556dacdccb50 <col:151> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556dacdccbd8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556dacdccbc0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556dacdccb70 <col:169> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x556dacdccc50 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556dacdccc10 <col:186> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556dacdccc68 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556dacdccc30 <col:198> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x556dacdcd2c0 <line:769:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556dacdccdd0 <col:3> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x556dacdcd290 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556dacdcd260 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dacdcd248 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dacdccdf0 <col:15> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dacdcd278 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdcce10 <col:31> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x556dacdcd228 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556dacdcd1f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556dacdcd020 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556dacdccf40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556dacdcce68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556dacdcce50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556dacdcce30 <col:45> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556dacdccf20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556dacdcceb8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556dacdccea0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556dacdcce80 <col:64> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x556dacdccf08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556dacdccef0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556dacdcced0 <col:83> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556dacdcd000 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556dacdccf98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556dacdccf80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556dacdccf60 <col:102> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556dacdccfe8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556dacdccfd0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556dacdccfb0 <col:121> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556dacdcd1e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dacdcd040 <col:138> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x556dacdcd1c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556dacdcd190 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556dacdcd100 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556dacdcd0b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556dacdcd0a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556dacdcd060 <col:151> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556dacdcd0e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556dacdcd0d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556dacdcd080 <col:169> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x556dacdcd160 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556dacdcd120 <col:186> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556dacdcd178 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556dacdcd140 <col:198> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x556dacdcd868 <line:770:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcd2e0 <col:3> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcd850 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdcd820 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556dacdcd7d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdcd7c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdcd300 <col:20> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdcd808 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdcd7f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdcd320 <col:36> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556dacdcd7a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556dacdcd770 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556dacdcd530 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dacdcd450 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dacdcd378 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dacdcd360 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dacdcd340 <col:55> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dacdcd430 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dacdcd3c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dacdcd3b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dacdcd390 <col:74> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556dacdcd418 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dacdcd400 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dacdcd3e0 <col:93> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dacdcd510 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dacdcd4a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dacdcd490 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dacdcd470 <col:112> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556dacdcd4f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dacdcd4e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dacdcd4c0 <col:131> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556dacdcd758 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dacdcd740 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dacdcd550 <col:148> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556dacdcd720 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556dacdcd6f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556dacdcd610 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dacdcd5c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dacdcd5b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dacdcd570 <col:166> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dacdcd5f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dacdcd5e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dacdcd590 <col:184> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556dacdcd6a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dacdcd660 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dacdcd630 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dacdcd6d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556dacdcd6c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556dacdcd688 <col:212> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dacdcde58 <line:771:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcd888 <col:3> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcde40 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdcde10 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556dacdcddc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdcddb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdcd8a8 <col:20> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdcddf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdcdde0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdcd8c8 <col:36> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556dacdcdd90 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556dacdcdd60 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556dacdcdad8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dacdcd9f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dacdcd920 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dacdcd908 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dacdcd8e8 <col:55> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dacdcd9d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dacdcd970 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dacdcd958 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dacdcd938 <col:74> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556dacdcd9c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dacdcd9a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dacdcd988 <col:93> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dacdcdab8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dacdcda50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dacdcda38 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dacdcda18 <col:112> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556dacdcdaa0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dacdcda88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dacdcda68 <col:131> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556dacdcdd48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dacdcdd30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dacdcdaf8 <col:148> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556dacdcdd10 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556dacdcdce0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556dacdcdbe0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dacdcdb98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dacdcdb80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dacdcdb18 <col:166> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dacdcdbc8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dacdcdbb0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dacdcdb60 <col:184> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556dacdcdcb0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dacdcdc30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dacdcdc00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dacdcdcc8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556dacdcdc88 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556dacdcdc58 <col:219> 'int' 0
|   |-BinaryOperator 0x556dacdce400 <line:772:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcde78 <col:3> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdce3e8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdce3b8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556dacdce370 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdce358 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdcde98 <col:20> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdce3a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdce388 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdcdeb8 <col:36> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x556dacdce338 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556dacdce308 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556dacdce0c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dacdcdfe8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dacdcdf10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dacdcdef8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dacdcded8 <col:55> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dacdcdfc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dacdcdf60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dacdcdf48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dacdcdf28 <col:74> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556dacdcdfb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dacdcdf98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dacdcdf78 <col:93> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dacdce0a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dacdce040 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dacdce028 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dacdce008 <col:112> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556dacdce090 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dacdce078 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dacdce058 <col:131> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556dacdce2f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dacdce2d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dacdce0e8 <col:148> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x556dacdce2b8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556dacdce288 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556dacdce1a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dacdce160 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dacdce148 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dacdce108 <col:166> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dacdce190 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dacdce178 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dacdce128 <col:184> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556dacdce240 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dacdce1f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dacdce1c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dacdce270 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556dacdce258 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556dacdce220 <col:212> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556dacdce9c8 <line:773:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdce420 <col:3> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdce9b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdce980 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556dacdce938 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdce920 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdce440 <col:20> '_Bool' lvalue Var 0x556dacdc81d8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdce968 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dacdce950 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dacdce460 <col:36> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x556dacdce900 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556dacdce8d0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556dacdce670 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dacdce590 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dacdce4b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dacdce4a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dacdce480 <col:55> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dacdce570 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dacdce508 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dacdce4f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dacdce4d0 <col:74> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556dacdce558 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dacdce540 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dacdce520 <col:93> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dacdce650 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dacdce5e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dacdce5d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dacdce5b0 <col:112> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556dacdce638 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dacdce620 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dacdce600 <col:131> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556dacdce8b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dacdce8a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dacdce690 <col:148> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x556dacdce880 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556dacdce850 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556dacdce750 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dacdce708 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dacdce6f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dacdce6b0 <col:166> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dacdce738 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dacdce720 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dacdce6d0 <col:184> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556dacdce820 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dacdce7a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dacdce770 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dacdce838 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556dacdce7f8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556dacdce7c8 <col:219> 'int' 0
|   |-BinaryOperator 0x556dacdcea40 <line:774:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556dacdce9e8 <col:3> 'int' lvalue Var 0x556dacdc7360 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x556dacdcea28 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdcea08 <col:25> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   |-BinaryOperator 0x556dacdceba0 <line:775:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556dacdcea60 <col:3> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   | `-ConditionalOperator 0x556dacdceb70 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556dacdceaf8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dacdceae0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dacdcea80 <col:7> '_Bool' lvalue Var 0x556dacdc7848 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556dacdceb10 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdceaa0 <col:25> 'int' lvalue Var 0x556dacdc78c8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556dacdceb28 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556dacdceac0 <col:37> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   |-BinaryOperator 0x556dacdcec38 <line:776:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcebc0 <col:3> '_Bool' lvalue Var 0x556dacdc7848 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556dacdcec10 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556dacdcebe0 <col:28> 'int' 0
|   |-CallExpr 0x556dacdcec90 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdcec78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcec58 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dacdcece8 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdcecd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcecb0 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dacdced60 <line:779:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556dacdced08 <col:3> 'int' lvalue Var 0x556dacdc7480 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x556dacdced48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dacdced28 <col:25> 'int' lvalue Var 0x556dacdc80c8 'z' 'int'
|   |-CallExpr 0x556dacdcedb8 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdceda0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdced80 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dacdcee10 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdcedf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcedd8 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dacdcf0f8 <line:782:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556dacdcee30 <col:3> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   | `-ConditionalOperator 0x556dacdcf0c8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556dacdceef0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556dacdceea8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556dacdcee90 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556dacdcee50 <col:7> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556dacdceed8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556dacdceec0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556dacdcee70 <col:25> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556dacdcf0b0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdcef10 <col:42> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x556dacdcf090 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556dacdcf060 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556dacdcefd0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556dacdcef88 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556dacdcef70 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556dacdcef30 <col:55> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556dacdcefb8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556dacdcefa0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556dacdcef50 <col:73> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556dacdcf030 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dacdceff0 <col:90> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556dacdcf048 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dacdcf010 <col:102> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
|   |-BinaryOperator 0x556dacdcf300 <line:783:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcf118 <col:3> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcf2e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdcf2b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556dacdcf1d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556dacdcf190 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556dacdcf178 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556dacdcf138 <col:20> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556dacdcf1c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556dacdcf1a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556dacdcf158 <col:38> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdcf270 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dacdcf228 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dacdcf1f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556dacdcf2a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dacdcf288 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dacdcf250 <col:66> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dacdcf5e8 <line:784:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcf320 <col:3> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcf5d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdcf5a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556dacdcf4c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556dacdcf3e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556dacdcf398 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556dacdcf380 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556dacdcf340 <col:20> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556dacdcf3c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556dacdcf3b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556dacdcf360 <col:38> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556dacdcf4a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556dacdcf458 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556dacdcf440 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556dacdcf400 <col:56> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556dacdcf488 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556dacdcf470 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556dacdcf420 <col:74> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdcf558 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dacdcf510 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dacdcf4e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556dacdcf588 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dacdcf570 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dacdcf538 <col:102> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556dacdcf7f0 <line:785:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcf608 <col:3> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcf7d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdcf7a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556dacdcf6c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556dacdcf680 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556dacdcf668 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556dacdcf628 <col:20> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556dacdcf6b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556dacdcf698 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556dacdcf648 <col:38> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdcf760 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dacdcf718 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dacdcf6e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556dacdcf790 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dacdcf778 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dacdcf740 <col:66> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556dacdcfad8 <line:786:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556dacdcf810 <col:3> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556dacdcfac0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dacdcfa90 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556dacdcf9b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556dacdcf8d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556dacdcf888 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556dacdcf870 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556dacdcf830 <col:20> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556dacdcf8b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556dacdcf8a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556dacdcf850 <col:38> '_Bool' lvalue Var 0x556dacdc7b00 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556dacdcf990 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556dacdcf948 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556dacdcf930 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556dacdcf8f0 <col:56> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556dacdcf978 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556dacdcf960 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556dacdcf910 <col:74> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556dacdcfa48 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dacdcfa00 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dacdcf9d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556dacdcfa78 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dacdcfa60 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dacdcfa28 <col:102> '_Bool' lvalue Var 0x556dacdc7ce0 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x556dacdcfb30 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdcfb18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcfaf8 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dacdcfb98 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dacdcfb80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcfb50 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dacdcfc50 <line:789:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556dacdcfbb8 <col:3> 'int' lvalue Var 0x556dacdc7120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556dacdcfc30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556dacdcfc18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dacdcfbd8 <col:22> 'int' lvalue Var 0x556dacdc7120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556dacdcfbf8 <col:41> 'int' 1
|   |-CallExpr 0x556dacdcfca8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dacdcfc90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dacdcfc70 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556dacdcfd20 <line:791:3, col:36>
|     `-CallExpr 0x556dacdcfd00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556dacdcfce8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556dacdcfcc8 <col:10> 'void *(void)' Function 0x556dacd6d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556dacdcfeb0 prev 0x556dacdc6e68 <line:793:1, line:795:1> line:793:6 fence 'void ()'
| `-CompoundStmt 0x556dacdcff50 <line:794:1, line:795:1>
|-FunctionDecl 0x556dacdcff80 prev 0x556dacdc6f28 <line:796:1, line:798:1> line:796:6 isync 'void ()'
| `-CompoundStmt 0x556dacdd0020 <line:797:1, line:798:1>
|-FunctionDecl 0x556dacdd0050 prev 0x556dacdc6fe8 <line:799:1, line:801:1> line:799:6 lwfence 'void ()'
| `-CompoundStmt 0x556dacdd00f0 <line:800:1, line:801:1>
`-FunctionDecl 0x556dacdd0158 <line:802:1, line:826:1> line:802:5 main 'int ()'
  `-CompoundStmt 0x556dacdd1e58 <line:803:1, line:826:1>
    |-DeclStmt 0x556dacdd0270 <line:804:3, col:17>
    | `-VarDecl 0x556dacdd0208 <col:3, col:13> col:13 used t514 'pthread_t':'unsigned long'
    |-CallExpr 0x556dacdd0478 <line:805:3, col:53> 'int'
    | |-ImplicitCastExpr 0x556dacdd0460 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dacdd0288 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556dacdae488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556dacdd02c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556dacdd02a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556dacdd0208 't514' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556dacdd04b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556dacdd0340 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x556dacdd0318 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556dacdd02e0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x556dacdd04d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dacdd0360 <col:38> 'void *(void *)' Function 0x556dacdc82f0 'P0' 'void *(void *)'
    | `-ParenExpr 0x556dacdd03e0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x556dacdd03b8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556dacdd0380 <col:51> 'int' 0
    |-DeclStmt 0x556dacdd0560 <line:806:3, col:17>
    | `-VarDecl 0x556dacdd04f8 <col:3, col:13> col:13 used t515 'pthread_t':'unsigned long'
    |-CallExpr 0x556dacdd0708 <line:807:3, col:53> 'int'
    | |-ImplicitCastExpr 0x556dacdd06f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dacdd0578 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556dacdae488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556dacdd05b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556dacdd0598 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556dacdd04f8 't515' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556dacdd0748 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556dacdd0630 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x556dacdd0608 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556dacdd05d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x556dacdd0760 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dacdd0650 <col:38> 'void *(void *)' Function 0x556dacdc89c8 'P1' 'void *(void *)'
    | `-ParenExpr 0x556dacdd06d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x556dacdd06a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556dacdd0670 <col:51> 'int' 0
    |-DeclStmt 0x556dacdd07f0 <line:808:3, col:17>
    | `-VarDecl 0x556dacdd0788 <col:3, col:13> col:13 used t516 'pthread_t':'unsigned long'
    |-CallExpr 0x556dacdd0998 <line:809:3, col:53> 'int'
    | |-ImplicitCastExpr 0x556dacdd0980 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dacdd0808 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556dacdae488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556dacdd0848 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556dacdd0828 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556dacdd0788 't516' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556dacdd09d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556dacdd08c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x556dacdd0898 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556dacdd0860 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x556dacdd09f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dacdd08e0 <col:38> 'void *(void *)' Function 0x556dacdcba58 'P2' 'void *(void *)'
    | `-ParenExpr 0x556dacdd0960 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x556dacdd0938 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556dacdd0900 <col:51> 'int' 0
    |-CallExpr 0x556dacdd0a40 <line:810:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556dacdd0a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dacdd0a08 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556dacdd0b10 <line:811:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x556dacdd0a60 <col:3> '_Bool' lvalue Var 0x556dacdc7518 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x556dacdd0af8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x556dacdd0ad8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x556dacdd0ac0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x556dacdd0a80 <col:21> 'int' lvalue Var 0x556dacdc7120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x556dacdd0aa0 <col:41> 'int' 3
    |-CallExpr 0x556dacdd0b90 <line:812:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556dacdd0b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dacdd0b30 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556dacdd0c08 <line:813:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556dacdd0bf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dacdd0bb0 <col:3> 'void (int)' Function 0x556dacd6d790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x556dacdd0c48 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556dacdd0c30 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556dacdd0bd0 <col:21> '_Bool' lvalue Var 0x556dacdc7518 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x556dacdd0c98 <line:814:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556dacdd0c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dacdd0c60 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556dacdd0f80 <line:815:3, col:103> 'int' '='
    | |-DeclRefExpr 0x556dacdd0cb8 <col:3> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
    | `-ConditionalOperator 0x556dacdd0f50 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x556dacdd0d78 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x556dacdd0d30 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x556dacdd0d18 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x556dacdd0cd8 <col:7> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x556dacdd0d60 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x556dacdd0d48 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x556dacdd0cf8 <col:25> '_Bool' lvalue Var 0x556dacdc7940 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x556dacdd0f38 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556dacdd0d98 <col:42> 'int' lvalue Var 0x556dacdc7e58 'y$w_buff0' 'int'
    |   `-ParenExpr 0x556dacdd0f18 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x556dacdd0ee8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x556dacdd0e58 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x556dacdd0e10 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x556dacdd0df8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x556dacdd0db8 <col:55> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x556dacdd0e40 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x556dacdd0e28 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x556dacdd0dd8 <col:73> '_Bool' lvalue Var 0x556dacdc7b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x556dacdd0eb8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x556dacdd0e78 <col:90> 'int' lvalue Var 0x556dacdc7f50 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x556dacdd0ed0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x556dacdd0e98 <col:102> 'int' lvalue Var 0x556dacdc77b0 'y' 'int'
    |-BinaryOperator 0x556dacdd1188 <line:816:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556dacdd0fa0 <col:3> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x556dacdd1170 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dacdd1140 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556dacdd1060 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556dacdd1018 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556dacdd1000 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556dacdd0fc0 <col:20> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556dacdd1048 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556dacdd1030 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556dacdd0fe0 <col:38> '_Bool' lvalue Var 0x556dacdc7940 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556dacdd10f8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556dacdd10b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556dacdd1080 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556dacdd1128 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556dacdd1110 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556dacdd10d8 <col:66> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x556dacdd1470 <line:817:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556dacdd11a8 <col:3> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x556dacdd1458 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dacdd1428 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556dacdd1348 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556dacdd1268 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556dacdd1220 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556dacdd1208 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556dacdd11c8 <col:20> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556dacdd1250 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556dacdd1238 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556dacdd11e8 <col:38> '_Bool' lvalue Var 0x556dacdc7940 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556dacdd1328 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556dacdd12e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556dacdd12c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556dacdd1288 <col:56> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556dacdd1310 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556dacdd12f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556dacdd12a8 <col:74> '_Bool' lvalue Var 0x556dacdc7b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556dacdd13e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556dacdd1398 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556dacdd1368 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556dacdd1410 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556dacdd13f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556dacdd13c0 <col:102> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x556dacdd1678 <line:818:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556dacdd1490 <col:3> '_Bool' lvalue Var 0x556dacdc7940 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556dacdd1660 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dacdd1630 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556dacdd1550 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556dacdd1508 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556dacdd14f0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556dacdd14b0 <col:20> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556dacdd1538 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556dacdd1520 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556dacdd14d0 <col:38> '_Bool' lvalue Var 0x556dacdc7940 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556dacdd15e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556dacdd15a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556dacdd1570 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556dacdd1618 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556dacdd1600 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556dacdd15c8 <col:66> '_Bool' lvalue Var 0x556dacdc7940 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x556dacdd1960 <line:819:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556dacdd1698 <col:3> '_Bool' lvalue Var 0x556dacdc7b78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556dacdd1948 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dacdd1918 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556dacdd1838 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556dacdd1758 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556dacdd1710 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556dacdd16f8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556dacdd16b8 <col:20> '_Bool' lvalue Var 0x556dacdc7ed0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556dacdd1740 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556dacdd1728 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556dacdd16d8 <col:38> '_Bool' lvalue Var 0x556dacdc7940 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556dacdd1818 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556dacdd17d0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556dacdd17b8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556dacdd1778 <col:56> '_Bool' lvalue Var 0x556dacdc7fc8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556dacdd1800 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556dacdd17e8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556dacdd1798 <col:74> '_Bool' lvalue Var 0x556dacdc7b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556dacdd18d0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556dacdd1888 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556dacdd1858 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556dacdd1900 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556dacdd18e8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556dacdd18b0 <col:102> '_Bool' lvalue Var 0x556dacdc7b78 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x556dacdd19b8 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556dacdd19a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dacdd1980 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556dacdd1a10 <line:821:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556dacdd19f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dacdd19d8 <col:3> 'void ()' Function 0x556dacd6de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556dacdd1d00 <line:822:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x556dacdd1a30 <col:3> '_Bool' lvalue Var 0x556dacdc7590 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x556dacdd1ce8 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x556dacdd1cd0 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x556dacdd1cb0 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x556dacdd1c90 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x556dacdd1bf8 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x556dacdd1b40 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x556dacdd1aa8 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x556dacdd1a90 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x556dacdd1a50 <col:23> 'int' lvalue Var 0x556dacdc7690 'x' 'int'
    |         | | | `-IntegerLiteral 0x556dacdd1a70 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x556dacdd1b20 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x556dacdd1b08 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x556dacdd1ac8 <col:33> 'int' lvalue Var 0x556dacdc7240 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x556dacdd1ae8 <col:56> 'int' 0
    |         | `-BinaryOperator 0x556dacdd1bd8 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x556dacdd1bc0 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x556dacdd1b60 <col:61> 'int' lvalue Var 0x556dacdc7360 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x556dacdd1ba0 <col:84> 'int' 1
    |         `-BinaryOperator 0x556dacdd1c70 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x556dacdd1c58 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x556dacdd1c18 <col:89> 'int' lvalue Var 0x556dacdc7480 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x556dacdd1c38 <col:112> 'int' 0
    |-CallExpr 0x556dacdd1d58 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556dacdd1d40 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dacdd1d20 <col:3> 'void ()' Function 0x556dacd6df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556dacdd1dd0 <line:824:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556dacdd1db8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dacdd1d78 <col:3> 'void (int)' Function 0x556dacd6dbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x556dacdd1e10 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556dacdd1df8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556dacdd1d98 <col:21> '_Bool' lvalue Var 0x556dacdc7590 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x556dacdd1e48 <line:825:3, col:10>
      `-IntegerLiteral 0x556dacdd1e28 <col:10> 'int' 0
