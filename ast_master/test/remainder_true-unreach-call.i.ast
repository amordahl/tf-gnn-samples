TranslationUnitDecl 0x563567ae8df8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x563567ae96b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x563567ae9390 '__int128'
|-TypedefDecl 0x563567ae9728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x563567ae93b0 'unsigned __int128'
|-TypedefDecl 0x563567ae9a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x563567ae9800 'struct __NSConstantString_tag'
|   `-Record 0x563567ae9780 '__NSConstantString_tag'
|-TypedefDecl 0x563567ae9ad8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x563567ae9a90 'char *'
|   `-BuiltinType 0x563567ae8e90 'char'
|-TypedefDecl 0x563567b28690 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x563567ae9d70 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x563567ae9bb0 'struct __va_list_tag'
|     `-Record 0x563567ae9b30 '__va_list_tag'
|-TypedefDecl 0x563567b28700 <./test/remainder_true-unreach-call.i:22:1, col:15> col:15 float_t 'float'
| `-BuiltinType 0x563567ae8ff0 'float'
|-TypedefDecl 0x563567b28770 <line:23:1, col:16> col:16 double_t 'double'
| `-BuiltinType 0x563567ae9010 'double'
|-FunctionDecl 0x563567b288b8 <line:24:15> col:15 implicit acos 'double (double)' extern
| |-ParmVarDecl 0x563567b28958 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b289c8 <col:15> Implicit
|-FunctionDecl 0x563567b28a20 prev 0x563567b288b8 <col:1, col:62> col:15 acos 'double (double)' extern
| |-ParmVarDecl 0x563567b287e0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b28ac8 <col:49>
|-FunctionDecl 0x563567b28bd0 <col:65, col:128> col:79 __acos 'double (double)' extern
| |-ParmVarDecl 0x563567b28b38 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b28c78 <col:115>
|-FunctionDecl 0x563567b28dc8 <line:26:15> col:15 implicit asin 'double (double)' extern
| |-ParmVarDecl 0x563567b28e68 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b28ed8 <col:15> Implicit
|-FunctionDecl 0x563567b28f30 prev 0x563567b28dc8 <col:1, col:62> col:15 asin 'double (double)' extern
| |-ParmVarDecl 0x563567b28d30 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b28fd8 <col:49>
|-FunctionDecl 0x563567b290e0 <col:65, col:128> col:79 __asin 'double (double)' extern
| |-ParmVarDecl 0x563567b29048 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b29188 <col:115>
|-FunctionDecl 0x563567b29290 <line:28:15> col:15 implicit atan 'double (double)' extern
| |-ParmVarDecl 0x563567b29330 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b293a0 <col:15> Implicit
|-FunctionDecl 0x563567b293f8 prev 0x563567b29290 <col:1, col:62> col:15 atan 'double (double)' extern
| |-ParmVarDecl 0x563567b291f8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b294a0 <col:49>
|-FunctionDecl 0x563567b295a8 <col:65, col:128> col:79 __atan 'double (double)' extern
| |-ParmVarDecl 0x563567b29510 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b29650 <col:115>
|-FunctionDecl 0x563567b4d508 <line:30:15> col:15 implicit atan2 'double (double, double)' extern
| |-ParmVarDecl 0x563567b4d5a8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b4d610 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b4d688 <col:15> Implicit
|-FunctionDecl 0x563567b4d6e0 prev 0x563567b4d508 <col:1, col:75> col:15 atan2 'double (double, double)' extern
| |-ParmVarDecl 0x563567b4d3a8 <col:22, col:29> col:29 __y 'double'
| |-ParmVarDecl 0x563567b4d428 <col:34, col:41> col:41 __x 'double'
| `-NoThrowAttr 0x563567b4d790 <col:62>
|-FunctionDecl 0x563567b4d920 <col:78, col:154> col:92 __atan2 'double (double, double)' extern
| |-ParmVarDecl 0x563567b4d800 <col:101, col:108> col:108 __y 'double'
| |-ParmVarDecl 0x563567b4d880 <col:113, col:120> col:120 __x 'double'
| `-NoThrowAttr 0x563567b4d9d0 <col:141>
|-FunctionDecl 0x563567b4dad8 <line:33:16> col:16 implicit cos 'double (double)' extern
| |-ParmVarDecl 0x563567b4db78 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b4dbe8 <col:16> Implicit
|-FunctionDecl 0x563567b4dc40 prev 0x563567b4dad8 <col:2, col:62> col:16 cos 'double (double)' extern
| |-ParmVarDecl 0x563567b4da40 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b4dce8 <col:49>
|-FunctionDecl 0x563567b4ddf0 <col:65, col:127> col:79 __cos 'double (double)' extern
| |-ParmVarDecl 0x563567b4dd58 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x563567b4de98 <col:114>
|-FunctionDecl 0x563567b4dfa0 <line:35:16> col:16 implicit sin 'double (double)' extern
| |-ParmVarDecl 0x563567b4e040 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b4e0b0 <col:16> Implicit
|-FunctionDecl 0x563567b4e108 prev 0x563567b4dfa0 <col:2, col:62> col:16 sin 'double (double)' extern
| |-ParmVarDecl 0x563567b4df08 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b4e1b0 <col:49>
|-FunctionDecl 0x563567b4e2b8 <col:65, col:127> col:79 __sin 'double (double)' extern
| |-ParmVarDecl 0x563567b4e220 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x563567b4f390 <col:114>
|-FunctionDecl 0x563567b4f498 <line:37:15> col:15 implicit tan 'double (double)' extern
| |-ParmVarDecl 0x563567b4f538 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b4f5a8 <col:15> Implicit
|-FunctionDecl 0x563567b4f600 prev 0x563567b4f498 <col:1, col:61> col:15 tan 'double (double)' extern
| |-ParmVarDecl 0x563567b4f400 <col:20, col:27> col:27 __x 'double'
| `-NoThrowAttr 0x563567b4f6a8 <col:48>
|-FunctionDecl 0x563567b4f7b0 <col:64, col:126> col:78 __tan 'double (double)' extern
| |-ParmVarDecl 0x563567b4f718 <col:85, col:92> col:92 __x 'double'
| `-NoThrowAttr 0x563567b4f858 <col:113>
|-FunctionDecl 0x563567b4f960 <line:42:15> col:15 implicit cosh 'double (double)' extern
| |-ParmVarDecl 0x563567b4fa00 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b4fa70 <col:15> Implicit
|-FunctionDecl 0x563567b4fac8 prev 0x563567b4f960 <col:1, col:62> col:15 cosh 'double (double)' extern
| |-ParmVarDecl 0x563567b4f8c8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b4fb70 <col:49>
|-FunctionDecl 0x563567b4fc78 <col:65, col:128> col:79 __cosh 'double (double)' extern
| |-ParmVarDecl 0x563567b4fbe0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b4fd20 <col:115>
|-FunctionDecl 0x563567b4fe28 <line:44:15> col:15 implicit sinh 'double (double)' extern
| |-ParmVarDecl 0x563567b4fec8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b4ff38 <col:15> Implicit
|-FunctionDecl 0x563567b4ff90 prev 0x563567b4fe28 <col:1, col:62> col:15 sinh 'double (double)' extern
| |-ParmVarDecl 0x563567b4fd90 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b50038 <col:49>
|-FunctionDecl 0x563567b50140 <col:65, col:128> col:79 __sinh 'double (double)' extern
| |-ParmVarDecl 0x563567b500a8 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b501e8 <col:115>
|-FunctionDecl 0x563567b502f0 <line:46:15> col:15 implicit tanh 'double (double)' extern
| |-ParmVarDecl 0x563567b503a0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b50410 <col:15> Implicit
|-FunctionDecl 0x563567b50468 prev 0x563567b502f0 <col:1, col:62> col:15 tanh 'double (double)' extern
| |-ParmVarDecl 0x563567b50258 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b50510 <col:49>
|-FunctionDecl 0x563567b50618 <col:65, col:128> col:79 __tanh 'double (double)' extern
| |-ParmVarDecl 0x563567b50580 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b506c0 <col:115>
|-FunctionDecl 0x563567b507c8 <line:47:15> col:15 implicit acosh 'double (double)' extern
| |-ParmVarDecl 0x563567b50868 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b508d8 <col:15> Implicit
|-FunctionDecl 0x563567b50930 prev 0x563567b507c8 <col:1, col:63> col:15 acosh 'double (double)' extern
| |-ParmVarDecl 0x563567b50730 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x563567b509d8 <col:50>
|-FunctionDecl 0x563567b50ae0 <col:66, col:130> col:80 __acosh 'double (double)' extern
| |-ParmVarDecl 0x563567b50a48 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x563567b50b88 <col:117>
|-FunctionDecl 0x563567b50c90 <line:49:15> col:15 implicit asinh 'double (double)' extern
| |-ParmVarDecl 0x563567b50d30 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b50da0 <col:15> Implicit
|-FunctionDecl 0x563567b50df8 prev 0x563567b50c90 <col:1, col:63> col:15 asinh 'double (double)' extern
| |-ParmVarDecl 0x563567b50bf8 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x563567b50ea0 <col:50>
|-FunctionDecl 0x563567b50fa8 <col:66, col:130> col:80 __asinh 'double (double)' extern
| |-ParmVarDecl 0x563567b50f10 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x563567b51050 <col:117>
|-FunctionDecl 0x563567b51158 <line:51:15> col:15 implicit atanh 'double (double)' extern
| |-ParmVarDecl 0x563567b511f8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b51268 <col:15> Implicit
|-FunctionDecl 0x563567b512c0 prev 0x563567b51158 <col:1, col:63> col:15 atanh 'double (double)' extern
| |-ParmVarDecl 0x563567b510c0 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x563567b51368 <col:50>
|-FunctionDecl 0x563567b51490 <col:66, col:130> col:80 __atanh 'double (double)' extern
| |-ParmVarDecl 0x563567b513f8 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x563567b51538 <col:117>
|-FunctionDecl 0x563567b51640 <line:59:16> col:16 implicit exp 'double (double)' extern
| |-ParmVarDecl 0x563567b516e0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b51750 <col:16> Implicit
|-FunctionDecl 0x563567b517a8 prev 0x563567b51640 <col:2, col:62> col:16 exp 'double (double)' extern
| |-ParmVarDecl 0x563567b515a8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b51850 <col:49>
|-FunctionDecl 0x563567b51958 <col:65, col:127> col:79 __exp 'double (double)' extern
| |-ParmVarDecl 0x563567b518c0 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x563567b51a00 <col:114>
|-FunctionDecl 0x563567b51c08 <line:62:15> col:15 implicit frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x563567b51ca8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b51d10 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x563567b51d88 <col:15> Implicit
|-FunctionDecl 0x563567b51de0 prev 0x563567b51c08 <col:1, col:80> col:15 frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x563567b51a70 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x563567b51b28 <col:34, col:39> col:39 __exponent 'int *'
| `-NoThrowAttr 0x563567b51e90 <col:67>
|-FunctionDecl 0x563567b52020 <col:83, col:164> col:97 __frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x563567b51f00 <col:106, col:113> col:113 __x 'double'
| |-ParmVarDecl 0x563567b51f80 <col:118, col:123> col:123 __exponent 'int *'
| `-NoThrowAttr 0x563567b520d0 <col:151>
|-FunctionDecl 0x563567b522a8 <line:65:15> col:15 implicit ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x563567b52348 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b523c0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x563567b52438 <col:15> Implicit
|-FunctionDecl 0x563567b52490 prev 0x563567b522a8 <col:1, col:79> col:15 ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x563567b52140 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x563567b521c0 <col:34, col:38> col:38 __exponent 'int'
| `-NoThrowAttr 0x563567b52540 <col:66>
|-FunctionDecl 0x563567b526d0 <col:82, col:162> col:96 __ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x563567b525b0 <col:105, col:112> col:112 __x 'double'
| |-ParmVarDecl 0x563567b52630 <col:117, col:121> col:121 __exponent 'int'
| `-NoThrowAttr 0x563567b52780 <col:149>
|-FunctionDecl 0x563567b52888 <line:68:16> col:16 implicit log 'double (double)' extern
| |-ParmVarDecl 0x563567b52928 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b52998 <col:16> Implicit
|-FunctionDecl 0x563567b529f0 prev 0x563567b52888 <col:2, col:62> col:16 log 'double (double)' extern
| |-ParmVarDecl 0x563567b527f0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b52a98 <col:49>
|-FunctionDecl 0x563567b52ba0 <col:65, col:127> col:79 __log 'double (double)' extern
| |-ParmVarDecl 0x563567b52b08 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x563567b52c48 <col:114>
|-FunctionDecl 0x563567b52d50 <line:71:15> col:15 implicit log10 'double (double)' extern
| |-ParmVarDecl 0x563567b52df0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b52e60 <col:15> Implicit
|-FunctionDecl 0x563567b52eb8 prev 0x563567b52d50 <col:1, col:63> col:15 log10 'double (double)' extern
| |-ParmVarDecl 0x563567b52cb8 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x563567b52f60 <col:50>
|-FunctionDecl 0x563567b53068 <col:66, col:130> col:80 __log10 'double (double)' extern
| |-ParmVarDecl 0x563567b52fd0 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x563567b53110 <col:117>
|-FunctionDecl 0x563567b53318 <line:74:15> col:15 implicit modf 'double (double, double *)' extern
| |-ParmVarDecl 0x563567b53be0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b53c48 <<invalid sloc>> <invalid sloc> 'double *'
| `-NoThrowAttr 0x563567b53cc0 <col:15> Implicit
|-FunctionDecl 0x563567b53d18 prev 0x563567b53318 <col:1, col:78> col:15 modf 'double (double, double *)' extern
| |-ParmVarDecl 0x563567b53180 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x563567b53238 <col:33, col:41> col:41 __iptr 'double *'
| `-NoThrowAttr 0x563567b53dc8 <col:65>
|-FunctionDecl 0x563567b53f78 <col:81, col:194> col:95 __modf 'double (double, double *)' extern
| |-ParmVarDecl 0x563567b53e38 <col:103, col:110> col:110 __x 'double'
| |-ParmVarDecl 0x563567b53eb8 <col:115, col:123> col:123 __iptr 'double *'
| |-NoThrowAttr 0x563567b54028 <col:147>
| `-NonNullAttr 0x563567b54080 <col:178, col:192> 2
|-FunctionDecl 0x563567b54168 <line:75:15> col:15 implicit expm1 'double (double)' extern
| |-ParmVarDecl 0x563567b54208 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b54278 <col:15> Implicit
|-FunctionDecl 0x563567b542d0 prev 0x563567b54168 <col:1, col:63> col:15 expm1 'double (double)' extern
| |-ParmVarDecl 0x563567b540d0 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x563567b54378 <col:50>
|-FunctionDecl 0x563567b54480 <col:66, col:130> col:80 __expm1 'double (double)' extern
| |-ParmVarDecl 0x563567b543e8 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x563567b54528 <col:117>
|-FunctionDecl 0x563567b54630 <line:78:15> col:15 implicit log1p 'double (double)' extern
| |-ParmVarDecl 0x563567b546d0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b54740 <col:15> Implicit
|-FunctionDecl 0x563567b54798 prev 0x563567b54630 <col:1, col:63> col:15 log1p 'double (double)' extern
| |-ParmVarDecl 0x563567b54598 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x563567b54840 <col:50>
|-FunctionDecl 0x563567b54948 <col:66, col:130> col:80 __log1p 'double (double)' extern
| |-ParmVarDecl 0x563567b548b0 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x563567b549f0 <col:117>
|-FunctionDecl 0x563567b54af8 <line:81:15> col:15 implicit logb 'double (double)' extern
| |-ParmVarDecl 0x563567b54bf0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b54c60 <col:15> Implicit
|-FunctionDecl 0x563567b54cb8 prev 0x563567b54af8 <col:1, col:62> col:15 logb 'double (double)' extern
| |-ParmVarDecl 0x563567b54a60 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b54d60 <col:49>
|-FunctionDecl 0x563567b54e68 <col:65, col:128> col:79 __logb 'double (double)' extern
| |-ParmVarDecl 0x563567b54dd0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b54f10 <col:115>
|-FunctionDecl 0x563567b55018 <line:88:15> col:15 implicit exp2 'double (double)' extern
| |-ParmVarDecl 0x563567b550b8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b55128 <col:15> Implicit
|-FunctionDecl 0x563567b55180 prev 0x563567b55018 <col:1, col:62> col:15 exp2 'double (double)' extern
| |-ParmVarDecl 0x563567b54f80 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b55228 <col:49>
|-FunctionDecl 0x563567b55330 <col:65, col:128> col:79 __exp2 'double (double)' extern
| |-ParmVarDecl 0x563567b55298 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b553d8 <col:115>
|-FunctionDecl 0x563567b554e0 <line:91:15> col:15 implicit log2 'double (double)' extern
| |-ParmVarDecl 0x563567b55580 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b555f0 <col:15> Implicit
|-FunctionDecl 0x563567b55648 prev 0x563567b554e0 <col:1, col:62> col:15 log2 'double (double)' extern
| |-ParmVarDecl 0x563567b55448 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b556f0 <col:49>
|-FunctionDecl 0x563567b557f8 <col:65, col:128> col:79 __log2 'double (double)' extern
| |-ParmVarDecl 0x563567b55760 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b558a0 <col:115>
|-FunctionDecl 0x563567b55a30 <line:92:16> col:16 implicit pow 'double (double, double)' extern
| |-ParmVarDecl 0x563567b55ad0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b55b38 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b55bb0 <col:16> Implicit
|-FunctionDecl 0x563567b55c30 prev 0x563567b55a30 <col:2, col:74> col:16 pow 'double (double, double)' extern
| |-ParmVarDecl 0x563567b55910 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x563567b55990 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x563567b55ce0 <col:61>
|-FunctionDecl 0x563567b55e70 <col:77, col:151> col:91 __pow 'double (double, double)' extern
| |-ParmVarDecl 0x563567b55d50 <col:98, col:105> col:105 __x 'double'
| |-ParmVarDecl 0x563567b55dd0 <col:110, col:117> col:117 __y 'double'
| `-NoThrowAttr 0x563567b55f20 <col:138>
|-FunctionDecl 0x563567b56028 <line:95:15> col:15 implicit sqrt 'double (double)' extern
| |-ParmVarDecl 0x563567b560c8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b56138 <col:15> Implicit
|-FunctionDecl 0x563567b56190 prev 0x563567b56028 <col:1, col:62> col:15 sqrt 'double (double)' extern
| |-ParmVarDecl 0x563567b55f90 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x563567b56238 <col:49>
|-FunctionDecl 0x563567b56340 <col:65, col:128> col:79 __sqrt 'double (double)' extern
| |-ParmVarDecl 0x563567b562a8 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b563e8 <col:115>
|-FunctionDecl 0x563567b56578 <line:101:15> col:15 implicit hypot 'double (double, double)' extern
| |-ParmVarDecl 0x563567b56618 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b56680 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b566f8 <col:15> Implicit
|-FunctionDecl 0x563567b56750 prev 0x563567b56578 <col:1, col:75> col:15 hypot 'double (double, double)' extern
| |-ParmVarDecl 0x563567b56458 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x563567b564d8 <col:34, col:41> col:41 __y 'double'
| `-NoThrowAttr 0x563567b56800 <col:62>
|-FunctionDecl 0x563567b56990 <col:78, col:154> col:92 __hypot 'double (double, double)' extern
| |-ParmVarDecl 0x563567b56870 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x563567b568f0 <col:113, col:120> col:120 __y 'double'
| `-NoThrowAttr 0x563567b56a40 <col:141>
|-FunctionDecl 0x563567b56b48 <line:108:15> col:15 implicit cbrt 'double (double)' extern
| |-ParmVarDecl 0x563567b56c10 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b56c80 <col:15> Implicit
| `-ConstAttr 0x563567b56cd8 <col:15> Implicit
|-FunctionDecl 0x563567b56d00 prev 0x563567b56b48 <col:1, col:62> col:15 cbrt 'double (double)' extern
| |-ParmVarDecl 0x563567b56ab0 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x563567b56e00 <col:15> Inherited Implicit
| `-NoThrowAttr 0x563567b56da8 <col:49>
|-FunctionDecl 0x563567b56ed8 <col:65, col:128> col:79 __cbrt 'double (double)' extern
| |-ParmVarDecl 0x563567b56e40 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b56f80 <col:115>
|-FunctionDecl 0x563567b57088 <line:109:15> col:15 implicit ceil 'double (double)' extern
| |-ParmVarDecl 0x563567b57128 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b57198 <col:15> Implicit
| `-ConstAttr 0x563567b571f0 <col:15> Implicit
|-FunctionDecl 0x563567b57218 prev 0x563567b57088 <col:1, col:90> col:15 ceil 'double (double)' extern
| |-ParmVarDecl 0x563567b56ff0 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x563567b572c0 <col:49>
| `-ConstAttr 0x563567b57318 <col:80>
|-FunctionDecl 0x563567b573f0 <col:93, col:184> col:107 __ceil 'double (double)' extern
| |-ParmVarDecl 0x563567b57358 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x563567b57498 <col:143>
| `-ConstAttr 0x563567b574f0 <col:174>
|-FunctionDecl 0x563567b575c8 <line:112:15> col:15 implicit fabs 'double (double)' extern
| |-ParmVarDecl 0x563567b57668 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b576d8 <col:15> Implicit
| `-ConstAttr 0x563567b57730 <col:15> Implicit
|-FunctionDecl 0x563567b57758 prev 0x563567b575c8 <col:1, col:90> col:15 fabs 'double (double)' extern
| |-ParmVarDecl 0x563567b57530 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x563567b57800 <col:49>
| `-ConstAttr 0x563567b57858 <col:80>
|-FunctionDecl 0x563567b57930 <col:93, col:184> col:107 __fabs 'double (double)' extern
| |-ParmVarDecl 0x563567b57898 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x563567b579d8 <col:143>
| `-ConstAttr 0x563567b57a30 <col:174>
|-FunctionDecl 0x563567b57b08 <line:115:15> col:15 implicit floor 'double (double)' extern
| |-ParmVarDecl 0x563567b57ba8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b57c28 <col:15> Implicit
| `-ConstAttr 0x563567b57c80 <col:15> Implicit
|-FunctionDecl 0x563567b57ca8 prev 0x563567b57b08 <col:1, col:91> col:15 floor 'double (double)' extern
| |-ParmVarDecl 0x563567b57a70 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x563567b57d50 <col:50>
| `-ConstAttr 0x563567b57da8 <col:81>
|-FunctionDecl 0x563567b57e80 <col:94, col:186> col:108 __floor 'double (double)' extern
| |-ParmVarDecl 0x563567b57de8 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x563567b57f28 <col:145>
| `-ConstAttr 0x563567b57f80 <col:176>
|-FunctionDecl 0x563567b580e0 <line:118:15> col:15 implicit fmod 'double (double, double)' extern
| |-ParmVarDecl 0x563567b58180 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b581e8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b58260 <col:15> Implicit
|-FunctionDecl 0x563567b582b8 prev 0x563567b580e0 <col:1, col:74> col:15 fmod 'double (double, double)' extern
| |-ParmVarDecl 0x563567b57fc0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x563567b58040 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x563567b58368 <col:61>
|-FunctionDecl 0x563567b584f8 <col:77, col:152> col:91 __fmod 'double (double, double)' extern
| |-ParmVarDecl 0x563567b583d8 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x563567b58458 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x563567b585a8 <col:139>
|-FunctionDecl 0x563567b586e8 <line:123:1, col:94> col:12 __isinf 'int (double)' extern
| |-ParmVarDecl 0x563567b58618 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x563567b58790 <col:53>
| `-ConstAttr 0x563567b587e8 <col:84>
|-FunctionDecl 0x563567b588c0 <line:126:12> col:12 implicit __finite 'int (double)' extern
| |-ParmVarDecl 0x563567b58960 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b589d0 <col:12> Implicit
| `-ConstAttr 0x563567b58a28 <col:12> Implicit
|-FunctionDecl 0x563567b58a50 prev 0x563567b588c0 <col:1, col:95> col:12 __finite 'int (double)' extern
| |-ParmVarDecl 0x563567b58828 <col:22, col:29> col:29 __value 'double'
| |-NoThrowAttr 0x563567b58af8 <col:54>
| `-ConstAttr 0x563567b58b50 <col:85>
|-FunctionDecl 0x563567b59c70 <line:132:1, col:92> col:12 isinf 'int (double)' extern
| |-ParmVarDecl 0x563567b58b90 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x563567b59d18 <col:51>
| `-ConstAttr 0x563567b59d70 <col:82>
|-FunctionDecl 0x563567b59e48 <line:135:12> col:12 implicit finite 'int (double)' extern
| |-ParmVarDecl 0x563567b59ee8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b59f58 <col:12> Implicit
| `-ConstAttr 0x563567b59fb0 <col:12> Implicit
|-FunctionDecl 0x563567b59fd8 prev 0x563567b59e48 <col:1, col:93> col:12 finite 'int (double)' extern
| |-ParmVarDecl 0x563567b59db0 <col:20, col:27> col:27 __value 'double'
| |-NoThrowAttr 0x563567b5a080 <col:52>
| `-ConstAttr 0x563567b5a0d8 <col:83>
|-FunctionDecl 0x563567b5a238 <line:138:1, col:74> col:15 drem 'double (double, double)' extern
| |-ParmVarDecl 0x563567b5a118 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x563567b5a198 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x563567b5a2e8 <col:61>
|-FunctionDecl 0x563567b5a478 <col:77, col:152> col:91 __drem 'double (double, double)' extern
| |-ParmVarDecl 0x563567b5a358 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x563567b5a3d8 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x563567b5a528 <col:139>
|-FunctionDecl 0x563567b5a630 <line:142:1, col:69> col:15 significand 'double (double)' extern
| |-ParmVarDecl 0x563567b5a598 <col:28, col:35> col:35 __x 'double'
| `-NoThrowAttr 0x563567b5a6d8 <col:56>
|-FunctionDecl 0x563567b5a7e0 <col:72, col:142> col:86 __significand 'double (double)' extern
| |-ParmVarDecl 0x563567b5a748 <col:101, col:108> col:108 __x 'double'
| `-NoThrowAttr 0x563567b5a888 <col:129>
|-FunctionDecl 0x563567b5aa18 <line:148:15> col:15 implicit copysign 'double (double, double)' extern
| |-ParmVarDecl 0x563567b5aab8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b5ab20 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b5ab98 <col:15> Implicit
| `-ConstAttr 0x563567b5abf0 <col:15> Implicit
|-FunctionDecl 0x563567b5ac50 prev 0x563567b5aa18 <col:1, col:106> col:15 copysign 'double (double, double)' extern
| |-ParmVarDecl 0x563567b5a8f8 <col:25, col:32> col:32 __x 'double'
| |-ParmVarDecl 0x563567b5a978 <col:37, col:44> col:44 __y 'double'
| |-NoThrowAttr 0x563567b5ad00 <col:65>
| `-ConstAttr 0x563567b5ad58 <col:96>
|-FunctionDecl 0x563567b5aeb8 <col:109, col:216> col:123 __copysign 'double (double, double)' extern
| |-ParmVarDecl 0x563567b5ad98 <col:135, col:142> col:142 __x 'double'
| |-ParmVarDecl 0x563567b5ae18 <col:147, col:154> col:154 __y 'double'
| |-NoThrowAttr 0x563567b5af68 <col:175>
| `-ConstAttr 0x563567b5afc0 <col:206>
|-FunctionDecl 0x563567b5b0d8 <line:155:15> col:15 implicit nan 'double (const char *)' extern
| |-ParmVarDecl 0x563567b5b178 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x563567b5b1e8 <col:15> Implicit
| `-PureAttr 0x563567b5b240 <col:15> Implicit
|-FunctionDecl 0x563567b5b268 prev 0x563567b5b0d8 <col:1, col:97> col:15 nan 'double (const char *)' extern
| |-ParmVarDecl 0x563567b5b000 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x563567b5b390 <col:15> Inherited Implicit
| |-NoThrowAttr 0x563567b5b310 <col:56>
| `-ConstAttr 0x563567b5b368 <col:87>
|-FunctionDecl 0x563567b5b468 <col:100, col:198> col:114 __nan 'double (const char *)' extern
| |-ParmVarDecl 0x563567b5b3d0 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x563567b5b510 <col:157>
| `-ConstAttr 0x563567b5b568 <col:188>
|-FunctionDecl 0x563567b5b640 <line:161:1, col:94> col:12 used __isnan 'int (double)' extern
| |-ParmVarDecl 0x563567b5b5a8 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x563567b5b6e8 <col:53>
| `-ConstAttr 0x563567b5b740 <col:84>
|-FunctionDecl 0x563567b5b818 <line:165:1, col:92> col:12 isnan 'int (double)' extern
| |-ParmVarDecl 0x563567b5b780 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x563567b5b8c0 <col:51>
| `-ConstAttr 0x563567b5b918 <col:82>
|-FunctionDecl 0x563567b5b9f0 <line:168:1, col:56> col:15 j0 'double (double)' extern
| |-ParmVarDecl 0x563567b5b958 <col:19> col:25 'double'
| `-NoThrowAttr 0x563567b5ba98 <col:43>
|-FunctionDecl 0x563567b5bba0 <col:59, col:116> col:73 __j0 'double (double)' extern
| |-ParmVarDecl 0x563567b5bb08 <col:79> col:85 'double'
| `-NoThrowAttr 0x563567b5bc60 <col:103>
|-FunctionDecl 0x563567b5bd68 <line:169:1, col:56> col:15 j1 'double (double)' extern
| |-ParmVarDecl 0x563567b5bcd0 <col:19> col:25 'double'
| `-NoThrowAttr 0x563567b5be10 <col:43>
|-FunctionDecl 0x563567b5bf18 <col:59, col:116> col:73 __j1 'double (double)' extern
| |-ParmVarDecl 0x563567b5be80 <col:79> col:85 'double'
| `-NoThrowAttr 0x563567b5bfc0 <col:103>
|-FunctionDecl 0x563567b5c198 <line:170:1, col:61> col:15 jn 'double (int, double)' extern
| |-ParmVarDecl 0x563567b5c030 <col:19> col:22 'int'
| |-ParmVarDecl 0x563567b5c0b0 <col:24> col:30 'double'
| `-NoThrowAttr 0x563567b5c248 <col:48>
|-FunctionDecl 0x563567b5c3d8 <col:64, col:126> col:78 __jn 'double (int, double)' extern
| |-ParmVarDecl 0x563567b5c2b8 <col:84> col:87 'int'
| |-ParmVarDecl 0x563567b5c338 <col:89> col:95 'double'
| `-NoThrowAttr 0x563567b5c488 <col:113>
|-FunctionDecl 0x563567b5c590 <line:171:1, col:56> col:15 y0 'double (double)' extern
| |-ParmVarDecl 0x563567b5c4f8 <col:19> col:25 'double'
| `-NoThrowAttr 0x563567b5c638 <col:43>
|-FunctionDecl 0x563567b5c740 <col:59, col:116> col:73 __y0 'double (double)' extern
| |-ParmVarDecl 0x563567b5c6a8 <col:79> col:85 'double'
| `-NoThrowAttr 0x563567b5c7e8 <col:103>
|-FunctionDecl 0x563567b5c8f0 <line:172:1, col:56> col:15 y1 'double (double)' extern
| |-ParmVarDecl 0x563567b5c858 <col:19> col:25 'double'
| `-NoThrowAttr 0x563567b5c998 <col:43>
|-FunctionDecl 0x563567b5caa0 <col:59, col:116> col:73 __y1 'double (double)' extern
| |-ParmVarDecl 0x563567b5ca08 <col:79> col:85 'double'
| `-NoThrowAttr 0x563567b5cb48 <col:103>
|-FunctionDecl 0x563567b5cd10 <line:173:1, col:61> col:15 yn 'double (int, double)' extern
| |-ParmVarDecl 0x563567b5cbb8 <col:19> col:22 'int'
| |-ParmVarDecl 0x563567b5cc70 <col:24> col:30 'double'
| `-NoThrowAttr 0x563567b5cdc0 <col:48>
|-FunctionDecl 0x563567b5cf50 <col:64, col:126> col:78 __yn 'double (int, double)' extern
| |-ParmVarDecl 0x563567b5ce30 <col:84> col:87 'int'
| |-ParmVarDecl 0x563567b5ceb0 <col:89> col:95 'double'
| `-NoThrowAttr 0x563567b5d000 <col:113>
|-FunctionDecl 0x563567b5d108 <line:180:15> col:15 implicit erf 'double (double)' extern
| |-ParmVarDecl 0x563567b5d1a8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b5d218 <col:15> Implicit
|-FunctionDecl 0x563567b5d270 prev 0x563567b5d108 <col:1, col:57> col:15 erf 'double (double)' extern
| |-ParmVarDecl 0x563567b5d070 <col:20> col:26 'double'
| `-NoThrowAttr 0x563567b5d318 <col:44>
|-FunctionDecl 0x563567b5d420 <col:60, col:118> col:74 __erf 'double (double)' extern
| |-ParmVarDecl 0x563567b5d388 <col:81> col:87 'double'
| `-NoThrowAttr 0x563567b5d4c8 <col:105>
|-FunctionDecl 0x563567b5d5d0 <line:181:15> col:15 implicit erfc 'double (double)' extern
| |-ParmVarDecl 0x563567b5d670 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b5d6e0 <col:15> Implicit
|-FunctionDecl 0x563567b5d738 prev 0x563567b5d5d0 <col:1, col:58> col:15 erfc 'double (double)' extern
| |-ParmVarDecl 0x563567b5d538 <col:21> col:27 'double'
| `-NoThrowAttr 0x563567b5d7e0 <col:45>
|-FunctionDecl 0x563567b5d8e8 <col:61, col:120> col:75 __erfc 'double (double)' extern
| |-ParmVarDecl 0x563567b5d850 <col:83> col:89 'double'
| `-NoThrowAttr 0x563567b5d990 <col:107>
|-FunctionDecl 0x563567b5da98 <line:182:15> col:15 implicit lgamma 'double (double)' extern
| |-ParmVarDecl 0x563567b5db38 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b5dba8 <col:15> Implicit
|-FunctionDecl 0x563567b5dc80 prev 0x563567b5da98 <col:1, col:60> col:15 lgamma 'double (double)' extern
| |-ParmVarDecl 0x563567b5da00 <col:23> col:29 'double'
| `-NoThrowAttr 0x563567b5dd28 <col:47>
|-FunctionDecl 0x563567b5de30 <col:63, col:124> col:77 __lgamma 'double (double)' extern
| |-ParmVarDecl 0x563567b5dd98 <col:87> col:93 'double'
| `-NoThrowAttr 0x563567b5ded8 <col:111>
|-FunctionDecl 0x563567b5dfe0 <line:189:15> col:15 implicit tgamma 'double (double)' extern
| |-ParmVarDecl 0x563567b5e080 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b5e0f0 <col:15> Implicit
|-FunctionDecl 0x563567b5e148 prev 0x563567b5dfe0 <col:1, col:60> col:15 tgamma 'double (double)' extern
| |-ParmVarDecl 0x563567b5df48 <col:23> col:29 'double'
| `-NoThrowAttr 0x563567b5e1f0 <col:47>
|-FunctionDecl 0x563567b5e2f8 <col:63, col:124> col:77 __tgamma 'double (double)' extern
| |-ParmVarDecl 0x563567b5e260 <col:87> col:93 'double'
| `-NoThrowAttr 0x563567b5e3a0 <col:111>
|-FunctionDecl 0x563567b5e4a8 <line:195:1, col:59> col:15 gamma 'double (double)' extern
| |-ParmVarDecl 0x563567b5e410 <col:22> col:28 'double'
| `-NoThrowAttr 0x563567b5e550 <col:46>
|-FunctionDecl 0x563567b5e658 <col:62, col:122> col:76 __gamma 'double (double)' extern
| |-ParmVarDecl 0x563567b5e5c0 <col:85> col:91 'double'
| `-NoThrowAttr 0x563567b5e700 <col:109>
|-FunctionDecl 0x563567b5e890 <line:202:1, col:79> col:15 lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x563567b5e770 <col:25> col:31 'double'
| |-ParmVarDecl 0x563567b5e7f0 <col:33, col:38> col:38 __signgamp 'int *'
| `-NoThrowAttr 0x563567b5e940 <col:66>
|-FunctionDecl 0x563567b5ead0 <col:82, col:162> col:96 __lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x563567b5e9b0 <col:108> col:114 'double'
| |-ParmVarDecl 0x563567b5ea30 <col:116, col:121> col:121 __signgamp 'int *'
| `-NoThrowAttr 0x563567b5eb80 <col:149>
|-FunctionDecl 0x563567b5ecc0 <line:210:15> col:15 implicit rint 'double (double)' extern
| |-ParmVarDecl 0x563567b5ed60 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b5edd0 <col:15> Implicit
| `-ConstAttr 0x563567b5ee28 <col:15> Implicit
|-FunctionDecl 0x563567b5ee50 prev 0x563567b5ecc0 <col:1, col:62> col:15 rint 'double (double)' extern
| |-ParmVarDecl 0x563567b5ebf0 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x563567b5ef50 <col:15> Inherited Implicit
| `-NoThrowAttr 0x563567b5eef8 <col:49>
|-FunctionDecl 0x563567b5f028 <col:65, col:128> col:79 __rint 'double (double)' extern
| |-ParmVarDecl 0x563567b5ef90 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x563567b5f0d0 <col:115>
|-FunctionDecl 0x563567b5f260 <line:213:15> col:15 implicit nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x563567b5f300 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b5f368 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b5f3e0 <col:15> Implicit
|-FunctionDecl 0x563567b5f438 prev 0x563567b5f260 <col:1, col:107> col:15 nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x563567b5f140 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x563567b5f1c0 <col:38, col:45> col:45 __y 'double'
| |-NoThrowAttr 0x563567b5f4e8 <col:66>
| `-ConstAttr 0x563567b5f540 <col:97>
|-FunctionDecl 0x563567b5f6a0 <col:110, col:218> col:124 __nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x563567b5f580 <col:137, col:144> col:144 __x 'double'
| |-ParmVarDecl 0x563567b5f600 <col:149, col:156> col:156 __y 'double'
| |-NoThrowAttr 0x563567b5f750 <col:177>
| `-ConstAttr 0x563567b5f7a8 <col:208>
|-FunctionDecl 0x563567b5f948 <line:215:15> col:15 implicit nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x563567b5f9e8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b5fa50 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b5fac8 <col:15> Implicit
|-FunctionDecl 0x563567b5fb20 prev 0x563567b5f948 <col:1, col:113> col:15 nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x563567b5f7e8 <col:27, col:34> col:34 __x 'double'
| |-ParmVarDecl 0x563567b5f868 <col:39, col:51> col:51 __y 'long double'
| |-NoThrowAttr 0x563567b5fbd0 <col:72>
| `-ConstAttr 0x563567b5fc28 <col:103>
|-FunctionDecl 0x563567b60dd0 <col:116, col:230> col:130 __nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x563567b60cb0 <col:144, col:151> col:151 __x 'double'
| |-ParmVarDecl 0x563567b60d30 <col:156, col:168> col:168 __y 'long double'
| |-NoThrowAttr 0x563567b60e80 <col:189>
| `-ConstAttr 0x563567b60ed8 <col:220>
|-FunctionDecl 0x563567b61038 <line:219:15> col:15 implicit used remainder 'double (double, double)' extern
| |-ParmVarDecl 0x563567b610d8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b61140 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b611b8 <col:15> Implicit
|-FunctionDecl 0x563567b61210 prev 0x563567b61038 <col:1, col:79> col:15 used remainder 'double (double, double)' extern
| |-ParmVarDecl 0x563567b60f18 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x563567b60f98 <col:38, col:45> col:45 __y 'double'
| `-NoThrowAttr 0x563567b612c0 <col:66>
|-FunctionDecl 0x563567b61450 <col:82, col:162> col:96 __remainder 'double (double, double)' extern
| |-ParmVarDecl 0x563567b61330 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x563567b613b0 <col:121, col:128> col:128 __y 'double'
| `-NoThrowAttr 0x563567b61500 <col:149>
|-FunctionDecl 0x563567b61690 <line:223:15> col:15 implicit scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x563567b61730 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b61798 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x563567b61810 <col:15> Implicit
|-FunctionDecl 0x563567b61868 prev 0x563567b61690 <col:1, col:73> col:15 scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x563567b61570 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x563567b615f0 <col:35, col:39> col:39 __n 'int'
| `-NoThrowAttr 0x563567b61918 <col:60>
|-FunctionDecl 0x563567b61aa8 <col:76, col:150> col:90 __scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x563567b61988 <col:100, col:107> col:107 __x 'double'
| |-ParmVarDecl 0x563567b61a08 <col:112, col:116> col:116 __n 'int'
| `-NoThrowAttr 0x563567b61b58 <col:137>
|-FunctionDecl 0x563567b61cc0 <line:227:12> col:12 implicit ilogb 'int (double)' extern
| |-ParmVarDecl 0x563567b61d60 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b61dd0 <col:12> Implicit
|-FunctionDecl 0x563567b61e28 prev 0x563567b61cc0 <col:1, col:60> col:12 ilogb 'int (double)' extern
| |-ParmVarDecl 0x563567b61bc8 <col:19, col:26> col:26 __x 'double'
| `-NoThrowAttr 0x563567b61ed0 <col:47>
|-FunctionDecl 0x563567b61fd8 <col:63, col:124> col:74 __ilogb 'int (double)' extern
| |-ParmVarDecl 0x563567b61f40 <col:83, col:90> col:90 __x 'double'
| `-NoThrowAttr 0x563567b62080 <col:111>
|-FunctionDecl 0x563567b62258 <line:232:15> col:15 implicit scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x563567b622f8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b62360 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x563567b623d8 <col:15> Implicit
|-FunctionDecl 0x563567b62430 prev 0x563567b62258 <col:1, col:79> col:15 scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x563567b620f0 <col:24, col:31> col:31 __x 'double'
| |-ParmVarDecl 0x563567b62170 <col:36, col:45> col:45 __n 'long'
| `-NoThrowAttr 0x563567b624e0 <col:66>
|-FunctionDecl 0x563567b62670 <col:82, col:162> col:96 __scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x563567b62550 <col:107, col:114> col:114 __x 'double'
| |-ParmVarDecl 0x563567b625d0 <col:119, col:128> col:128 __n 'long'
| `-NoThrowAttr 0x563567b62720 <col:149>
|-FunctionDecl 0x563567b62828 <line:236:15> col:15 implicit nearbyint 'double (double)' extern
| |-ParmVarDecl 0x563567b628c8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b62938 <col:15> Implicit
| `-ConstAttr 0x563567b62990 <col:15> Implicit
|-FunctionDecl 0x563567b629b8 prev 0x563567b62828 <col:1, col:67> col:15 nearbyint 'double (double)' extern
| |-ParmVarDecl 0x563567b62790 <col:26, col:33> col:33 __x 'double'
| |-ConstAttr 0x563567b62ab8 <col:15> Inherited Implicit
| `-NoThrowAttr 0x563567b62a60 <col:54>
|-FunctionDecl 0x563567b62b90 <col:70, col:138> col:84 __nearbyint 'double (double)' extern
| |-ParmVarDecl 0x563567b62af8 <col:97, col:104> col:104 __x 'double'
| `-NoThrowAttr 0x563567b62c38 <col:125>
|-FunctionDecl 0x563567b62d68 <line:240:15> col:15 implicit round 'double (double)' extern
| |-ParmVarDecl 0x563567b62e08 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b62e78 <col:15> Implicit
| `-ConstAttr 0x563567b62ed0 <col:15> Implicit
|-FunctionDecl 0x563567b62ef8 prev 0x563567b62d68 <col:1, col:91> col:15 round 'double (double)' extern
| |-ParmVarDecl 0x563567b62cd0 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x563567b62fa0 <col:50>
| `-ConstAttr 0x563567b62ff8 <col:81>
|-FunctionDecl 0x563567b630d0 <col:94, col:186> col:108 __round 'double (double)' extern
| |-ParmVarDecl 0x563567b63038 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x563567b63178 <col:145>
| `-ConstAttr 0x563567b631d0 <col:176>
|-FunctionDecl 0x563567b632a8 <line:244:15> col:15 implicit trunc 'double (double)' extern
| |-ParmVarDecl 0x563567b63348 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b633b8 <col:15> Implicit
| `-ConstAttr 0x563567b63410 <col:15> Implicit
|-FunctionDecl 0x563567b63438 prev 0x563567b632a8 <col:1, col:91> col:15 trunc 'double (double)' extern
| |-ParmVarDecl 0x563567b63210 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x563567b634e0 <col:50>
| `-ConstAttr 0x563567b63538 <col:81>
|-FunctionDecl 0x563567b63610 <col:94, col:186> col:108 __trunc 'double (double)' extern
| |-ParmVarDecl 0x563567b63578 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x563567b636b8 <col:145>
| `-ConstAttr 0x563567b63710 <col:176>
|-FunctionDecl 0x563567b63948 <line:249:15> col:15 implicit remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x563567b639e8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b63a50 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b63ab8 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x563567b63b38 <col:15> Implicit
|-FunctionDecl 0x563567b63b90 prev 0x563567b63948 <col:1, col:88> col:15 remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x563567b63750 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x563567b637d0 <col:35, col:42> col:42 __y 'double'
| |-ParmVarDecl 0x563567b63850 <col:47, col:52> col:52 __quo 'int *'
| `-NoThrowAttr 0x563567b63c48 <col:75>
|-FunctionDecl 0x563567b63e88 <col:91, col:180> col:105 __remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x563567b63ce0 <col:115, col:122> col:122 __x 'double'
| |-ParmVarDecl 0x563567b63d60 <col:127, col:134> col:134 __y 'double'
| |-ParmVarDecl 0x563567b63de0 <col:139, col:144> col:144 __quo 'int *'
| `-NoThrowAttr 0x563567b63f40 <col:167>
|-FunctionDecl 0x563567b64088 <line:256:17> col:17 implicit lrint 'long (double)' extern
| |-ParmVarDecl 0x563567b64128 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b64198 <col:17> Implicit
|-FunctionDecl 0x563567b641f0 prev 0x563567b64088 <col:1, col:65> col:17 lrint 'long (double)' extern
| |-ParmVarDecl 0x563567b63fb0 <col:24, col:31> col:31 __x 'double'
| `-NoThrowAttr 0x563567b64298 <col:52>
|-FunctionDecl 0x563567b643a0 <col:68, col:134> col:84 __lrint 'long (double)' extern
| |-ParmVarDecl 0x563567b64308 <col:93, col:100> col:100 __x 'double'
| `-NoThrowAttr 0x563567b64448 <col:121>
|-FunctionDecl 0x563567b64588 <line:258:22> col:22 implicit llrint 'long long (double)' extern
| |-ParmVarDecl 0x563567b64628 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b64698 <col:22> Implicit
|-FunctionDecl 0x563567b646f0 prev 0x563567b64588 <col:1, col:71> col:22 llrint 'long long (double)' extern
| |-ParmVarDecl 0x563567b644b8 <col:30, col:37> col:37 __x 'double'
| `-NoThrowAttr 0x563567b64798 <col:58>
|-FunctionDecl 0x563567b648a0 <col:74, col:146> col:95 __llrint 'long long (double)' extern
| |-ParmVarDecl 0x563567b64808 <col:105, col:112> col:112 __x 'double'
| `-NoThrowAttr 0x563567b64948 <col:133>
|-FunctionDecl 0x563567b64a50 <line:262:17> col:17 implicit lround 'long (double)' extern
| |-ParmVarDecl 0x563567b64af0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b64b60 <col:17> Implicit
|-FunctionDecl 0x563567b64bb8 prev 0x563567b64a50 <col:1, col:66> col:17 lround 'long (double)' extern
| |-ParmVarDecl 0x563567b649b8 <col:25, col:32> col:32 __x 'double'
| `-NoThrowAttr 0x563567b64c60 <col:53>
|-FunctionDecl 0x563567b64d88 <col:69, col:136> col:85 __lround 'long (double)' extern
| |-ParmVarDecl 0x563567b64cf0 <col:95, col:102> col:102 __x 'double'
| `-NoThrowAttr 0x563567b64e30 <col:123>
|-FunctionDecl 0x563567b64f38 <line:264:22> col:22 implicit llround 'long long (double)' extern
| |-ParmVarDecl 0x563567b64fd8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b65048 <col:22> Implicit
|-FunctionDecl 0x563567b650a0 prev 0x563567b64f38 <col:1, col:72> col:22 llround 'long long (double)' extern
| |-ParmVarDecl 0x563567b64ea0 <col:31, col:38> col:38 __x 'double'
| `-NoThrowAttr 0x563567b65148 <col:59>
|-FunctionDecl 0x563567b65250 <col:75, col:148> col:96 __llround 'long long (double)' extern
| |-ParmVarDecl 0x563567b651b8 <col:107, col:114> col:114 __x 'double'
| `-NoThrowAttr 0x563567b652f8 <col:135>
|-FunctionDecl 0x563567b65488 <line:268:15> col:15 implicit fdim 'double (double, double)' extern
| |-ParmVarDecl 0x563567b65528 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b65590 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x563567b65608 <col:15> Implicit
|-FunctionDecl 0x563567b65660 prev 0x563567b65488 <col:1, col:74> col:15 fdim 'double (double, double)' extern
| |-ParmVarDecl 0x563567b65368 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x563567b653e8 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x563567b65710 <col:61>
|-FunctionDecl 0x563567b658a0 <col:77, col:152> col:91 __fdim 'double (double, double)' extern
| |-ParmVarDecl 0x563567b65780 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x563567b65800 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x563567b65950 <col:139>
|-FunctionDecl 0x563567b65ae0 <line:271:15> col:15 implicit fmax 'double (double, double)' extern
| |-ParmVarDecl 0x563567b65b80 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b65be8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b65c60 <col:15> Implicit
| `-ConstAttr 0x563567b65cb8 <col:15> Implicit
|-FunctionDecl 0x563567b58c30 prev 0x563567b65ae0 <col:1, col:102> col:15 fmax 'double (double, double)' extern
| |-ParmVarDecl 0x563567b659c0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x563567b65a40 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x563567b58ce0 <col:61>
| `-ConstAttr 0x563567b58d38 <col:92>
|-FunctionDecl 0x563567b58e98 <col:105, col:208> col:119 __fmax 'double (double, double)' extern
| |-ParmVarDecl 0x563567b58d78 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x563567b58df8 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x563567b58f48 <col:167>
| `-ConstAttr 0x563567b58fa0 <col:198>
|-FunctionDecl 0x563567b59100 <line:274:15> col:15 implicit fmin 'double (double, double)' extern
| |-ParmVarDecl 0x563567b591a0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b59208 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x563567b59280 <col:15> Implicit
| `-ConstAttr 0x563567b592d8 <col:15> Implicit
|-FunctionDecl 0x563567b59300 prev 0x563567b59100 <col:1, col:102> col:15 fmin 'double (double, double)' extern
| |-ParmVarDecl 0x563567b58fe0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x563567b59060 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x563567b593b0 <col:61>
| `-ConstAttr 0x563567b59408 <col:92>
|-FunctionDecl 0x563567b59568 <col:105, col:208> col:119 __fmin 'double (double, double)' extern
| |-ParmVarDecl 0x563567b59448 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x563567b594c8 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x563567b59618 <col:167>
| `-ConstAttr 0x563567b59670 <col:198>
|-FunctionDecl 0x563567b59748 <line:278:1, line:279:32> line:278:12 __fpclassify 'int (double)' extern
| |-ParmVarDecl 0x563567b596b0 <col:26, col:33> col:33 __value 'double'
| |-NoThrowAttr 0x563567b597f0 <col:58>
| `-ConstAttr 0x563567b59848 <line:279:22>
|-FunctionDecl 0x563567b59920 <line:282:1, line:283:32> line:282:12 used __signbit 'int (double)' extern
| |-ParmVarDecl 0x563567b59888 <col:23, col:30> col:30 __value 'double'
| |-NoThrowAttr 0x563567b599c8 <col:55>
| `-ConstAttr 0x563567b59a20 <line:283:22>
|-FunctionDecl 0x563567b67d50 <line:287:15> col:15 implicit fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x563567b67df0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b67e58 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x563567b67ec0 <<invalid sloc>> <invalid sloc> 'double'
| |-ConstAttr 0x563567b67f40 <col:15> Implicit
| `-NoThrowAttr 0x563567b67f98 <col:15> Implicit
|-FunctionDecl 0x563567b67fc0 prev 0x563567b67d50 <col:1, col:85> col:15 fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x563567b59a60 <col:20, col:27> col:27 __x 'double'
| |-ParmVarDecl 0x563567b59ae0 <col:32, col:39> col:39 __y 'double'
| |-ParmVarDecl 0x563567b59b60 <col:44, col:51> col:51 __z 'double'
| |-ConstAttr 0x563567b680d0 <col:15> Inherited Implicit
| `-NoThrowAttr 0x563567b68078 <col:72>
|-FunctionDecl 0x563567b682b8 <col:88, col:174> col:102 __fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x563567b68110 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x563567b68190 <col:121, col:128> col:128 __y 'double'
| |-ParmVarDecl 0x563567b68210 <col:133, col:140> col:140 __z 'double'
| `-NoThrowAttr 0x563567b68370 <col:161>
|-FunctionDecl 0x563567b68500 <line:288:1, col:75> col:15 scalb 'double (double, double)' extern
| |-ParmVarDecl 0x563567b683e0 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x563567b68460 <col:34, col:41> col:41 __n 'double'
| `-NoThrowAttr 0x563567b685b0 <col:62>
|-FunctionDecl 0x563567b68740 <col:78, col:154> col:92 __scalb 'double (double, double)' extern
| |-ParmVarDecl 0x563567b68620 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x563567b686a0 <col:113, col:120> col:120 __n 'double'
| `-NoThrowAttr 0x563567b687f0 <col:141>
|-FunctionDecl 0x563567b68938 <line:289:14> col:14 implicit acosf 'float (float)' extern
| |-ParmVarDecl 0x563567b689d8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b68a48 <col:14> Implicit
|-FunctionDecl 0x563567b68aa0 prev 0x563567b68938 <col:1, col:61> col:14 acosf 'float (float)' extern
| |-ParmVarDecl 0x563567b68860 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b68b48 <col:48>
|-FunctionDecl 0x563567b68c50 <col:64, col:126> col:77 __acosf 'float (float)' extern
| |-ParmVarDecl 0x563567b68bb8 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b68d20 <col:113>
|-FunctionDecl 0x563567b68e28 <line:291:14> col:14 implicit asinf 'float (float)' extern
| |-ParmVarDecl 0x563567b68ec8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b68f38 <col:14> Implicit
|-FunctionDecl 0x563567b68f90 prev 0x563567b68e28 <col:1, col:61> col:14 asinf 'float (float)' extern
| |-ParmVarDecl 0x563567b68d90 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b69038 <col:48>
|-FunctionDecl 0x563567b69140 <col:64, col:126> col:77 __asinf 'float (float)' extern
| |-ParmVarDecl 0x563567b690a8 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b691e8 <col:113>
|-FunctionDecl 0x563567b692f0 <line:293:14> col:14 implicit atanf 'float (float)' extern
| |-ParmVarDecl 0x563567b69390 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b69400 <col:14> Implicit
|-FunctionDecl 0x563567b69458 prev 0x563567b692f0 <col:1, col:61> col:14 atanf 'float (float)' extern
| |-ParmVarDecl 0x563567b69258 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b69500 <col:48>
|-FunctionDecl 0x563567b69608 <col:64, col:126> col:77 __atanf 'float (float)' extern
| |-ParmVarDecl 0x563567b69570 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b696b0 <col:113>
|-FunctionDecl 0x563567b69888 <line:295:14> col:14 implicit atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x563567b69928 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b69990 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b69a08 <col:14> Implicit
|-FunctionDecl 0x563567b69a60 prev 0x563567b69888 <col:1, col:73> col:14 atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x563567b69720 <col:22, col:28> col:28 __y 'float'
| |-ParmVarDecl 0x563567b697a0 <col:33, col:39> col:39 __x 'float'
| `-NoThrowAttr 0x563567b69b10 <col:60>
|-FunctionDecl 0x563567b69d30 <col:76, col:150> col:89 __atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x563567b69b80 <col:99, col:105> col:105 __y 'float'
| |-ParmVarDecl 0x563567b69c00 <col:110, col:116> col:116 __x 'float'
| `-NoThrowAttr 0x563567b69de0 <col:137>
|-FunctionDecl 0x563567b69ee8 <line:298:15> col:15 implicit cosf 'float (float)' extern
| |-ParmVarDecl 0x563567b69f88 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b69ff8 <col:15> Implicit
|-FunctionDecl 0x563567b6a050 prev 0x563567b69ee8 <col:2, col:61> col:15 cosf 'float (float)' extern
| |-ParmVarDecl 0x563567b69e50 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b6a0f8 <col:48>
|-FunctionDecl 0x563567b6a200 <col:64, col:125> col:77 __cosf 'float (float)' extern
| |-ParmVarDecl 0x563567b6a168 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x563567b6a2a8 <col:112>
|-FunctionDecl 0x563567b6a3b0 <line:300:15> col:15 implicit sinf 'float (float)' extern
| |-ParmVarDecl 0x563567b6a450 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6a4c0 <col:15> Implicit
|-FunctionDecl 0x563567b6a518 prev 0x563567b6a3b0 <col:2, col:61> col:15 sinf 'float (float)' extern
| |-ParmVarDecl 0x563567b6a318 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b6a5c0 <col:48>
|-FunctionDecl 0x563567b6a6c8 <col:64, col:125> col:77 __sinf 'float (float)' extern
| |-ParmVarDecl 0x563567b6a630 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x563567b6a770 <col:112>
|-FunctionDecl 0x563567b6a878 <line:302:14> col:14 implicit tanf 'float (float)' extern
| |-ParmVarDecl 0x563567b6a918 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6a988 <col:14> Implicit
|-FunctionDecl 0x563567b6a9e0 prev 0x563567b6a878 <col:1, col:60> col:14 tanf 'float (float)' extern
| |-ParmVarDecl 0x563567b6a7e0 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x563567b6aa88 <col:47>
|-FunctionDecl 0x563567b6ab90 <col:63, col:124> col:76 __tanf 'float (float)' extern
| |-ParmVarDecl 0x563567b6aaf8 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x563567b6ac38 <col:111>
|-FunctionDecl 0x563567b6ad70 <line:307:14> col:14 implicit coshf 'float (float)' extern
| |-ParmVarDecl 0x563567b6ae10 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6ae80 <col:14> Implicit
|-FunctionDecl 0x563567b6aed8 prev 0x563567b6ad70 <col:1, col:61> col:14 coshf 'float (float)' extern
| |-ParmVarDecl 0x563567b6aca8 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b6af80 <col:48>
|-FunctionDecl 0x563567b6b088 <col:64, col:126> col:77 __coshf 'float (float)' extern
| |-ParmVarDecl 0x563567b6aff0 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b6b130 <col:113>
|-FunctionDecl 0x563567b6b238 <line:309:14> col:14 implicit sinhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6b2d8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6b348 <col:14> Implicit
|-FunctionDecl 0x563567b6b3a0 prev 0x563567b6b238 <col:1, col:61> col:14 sinhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6b1a0 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b6b448 <col:48>
|-FunctionDecl 0x563567b6b550 <col:64, col:126> col:77 __sinhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6b4b8 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b6b5f8 <col:113>
|-FunctionDecl 0x563567b6b700 <line:311:14> col:14 implicit tanhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6b7a0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6b810 <col:14> Implicit
|-FunctionDecl 0x563567b6b868 prev 0x563567b6b700 <col:1, col:61> col:14 tanhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6b668 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b6b910 <col:48>
|-FunctionDecl 0x563567b6ba18 <col:64, col:126> col:77 __tanhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6b980 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b6bac0 <col:113>
|-FunctionDecl 0x563567b6bbc8 <line:312:14> col:14 implicit acoshf 'float (float)' extern
| |-ParmVarDecl 0x563567b6bc68 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6bcd8 <col:14> Implicit
|-FunctionDecl 0x563567b6bd50 prev 0x563567b6bbc8 <col:1, col:62> col:14 acoshf 'float (float)' extern
| |-ParmVarDecl 0x563567b6bb30 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x563567b6bdf8 <col:49>
|-FunctionDecl 0x563567b6bf00 <col:65, col:128> col:78 __acoshf 'float (float)' extern
| |-ParmVarDecl 0x563567b6be68 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x563567b6bfa8 <col:115>
|-FunctionDecl 0x563567b6c0b0 <line:314:14> col:14 implicit asinhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6c150 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6c1c0 <col:14> Implicit
|-FunctionDecl 0x563567b6c218 prev 0x563567b6c0b0 <col:1, col:62> col:14 asinhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6c018 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x563567b6c2c0 <col:49>
|-FunctionDecl 0x563567b6c3c8 <col:65, col:128> col:78 __asinhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6c330 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x563567b6c470 <col:115>
|-FunctionDecl 0x563567b6c578 <line:316:14> col:14 implicit atanhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6c618 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6c688 <col:14> Implicit
|-FunctionDecl 0x563567b6c6e0 prev 0x563567b6c578 <col:1, col:62> col:14 atanhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6c4e0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x563567b6c788 <col:49>
|-FunctionDecl 0x563567b6c890 <col:65, col:128> col:78 __atanhf 'float (float)' extern
| |-ParmVarDecl 0x563567b6c7f8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x563567b6c938 <col:115>
|-FunctionDecl 0x563567b6ca40 <line:324:15> col:15 implicit expf 'float (float)' extern
| |-ParmVarDecl 0x563567b6cae0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6cb50 <col:15> Implicit
|-FunctionDecl 0x563567b6cba8 prev 0x563567b6ca40 <col:2, col:61> col:15 expf 'float (float)' extern
| |-ParmVarDecl 0x563567b6c9a8 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b6cc50 <col:48>
|-FunctionDecl 0x563567b6cd90 <col:64, col:125> col:77 __expf 'float (float)' extern
| |-ParmVarDecl 0x563567b6ccc0 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x563567b6ce38 <col:112>
|-FunctionDecl 0x563567b6d008 <line:327:14> col:14 implicit frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x563567b6d0a8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b6d110 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x563567b6d188 <col:14> Implicit
|-FunctionDecl 0x563567b6d1e0 prev 0x563567b6d008 <col:1, col:79> col:14 frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x563567b6cea8 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x563567b6cf28 <col:33, col:38> col:38 __exponent 'int *'
| `-NoThrowAttr 0x563567b6d290 <col:66>
|-FunctionDecl 0x563567b6d420 <col:82, col:162> col:95 __frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x563567b6d300 <col:105, col:111> col:111 __x 'float'
| |-ParmVarDecl 0x563567b6d380 <col:116, col:121> col:121 __exponent 'int *'
| `-NoThrowAttr 0x563567b6d4d0 <col:149>
|-FunctionDecl 0x563567b6d6a8 <line:330:14> col:14 implicit ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x563567b6d748 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b6d7b0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x563567b6d828 <col:14> Implicit
|-FunctionDecl 0x563567b6d880 prev 0x563567b6d6a8 <col:1, col:78> col:14 ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x563567b6d540 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x563567b6d5c0 <col:33, col:37> col:37 __exponent 'int'
| `-NoThrowAttr 0x563567b6d930 <col:65>
|-FunctionDecl 0x563567b6dac0 <col:81, col:160> col:94 __ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x563567b6d9a0 <col:104, col:110> col:110 __x 'float'
| |-ParmVarDecl 0x563567b6da20 <col:115, col:119> col:119 __exponent 'int'
| `-NoThrowAttr 0x563567b6db70 <col:147>
|-FunctionDecl 0x563567b6dc78 <line:333:15> col:15 implicit logf 'float (float)' extern
| |-ParmVarDecl 0x563567b6dd70 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6dde0 <col:15> Implicit
|-FunctionDecl 0x563567b6de38 prev 0x563567b6dc78 <col:2, col:61> col:15 logf 'float (float)' extern
| |-ParmVarDecl 0x563567b6dbe0 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b6dee0 <col:48>
|-FunctionDecl 0x563567b6dfe8 <col:64, col:125> col:77 __logf 'float (float)' extern
| |-ParmVarDecl 0x563567b6df50 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x563567b6e090 <col:112>
|-FunctionDecl 0x563567b6e198 <line:336:14> col:14 implicit log10f 'float (float)' extern
| |-ParmVarDecl 0x563567b6e238 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6e2a8 <col:14> Implicit
|-FunctionDecl 0x563567b6e300 prev 0x563567b6e198 <col:1, col:62> col:14 log10f 'float (float)' extern
| |-ParmVarDecl 0x563567b6e100 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x563567b6e3a8 <col:49>
|-FunctionDecl 0x563567b6e4b0 <col:65, col:128> col:78 __log10f 'float (float)' extern
| |-ParmVarDecl 0x563567b6e418 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x563567b6e558 <col:115>
|-FunctionDecl 0x563567b6e758 <line:339:14> col:14 implicit modff 'float (float, float *)' extern
| |-ParmVarDecl 0x563567b6e7f8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b6e860 <<invalid sloc>> <invalid sloc> 'float *'
| `-NoThrowAttr 0x563567b6e8d8 <col:14> Implicit
|-FunctionDecl 0x563567b6e930 prev 0x563567b6e758 <col:1, col:76> col:14 modff 'float (float, float *)' extern
| |-ParmVarDecl 0x563567b6e5c8 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x563567b6e678 <col:32, col:39> col:39 __iptr 'float *'
| `-NoThrowAttr 0x563567b6e9e0 <col:63>
|-FunctionDecl 0x563567b6eb90 <col:79, col:190> col:92 __modff 'float (float, float *)' extern
| |-ParmVarDecl 0x563567b6ea50 <col:101, col:107> col:107 __x 'float'
| |-ParmVarDecl 0x563567b6ead0 <col:112, col:119> col:119 __iptr 'float *'
| |-NoThrowAttr 0x563567b6ec40 <col:143>
| `-NonNullAttr 0x563567b6ec98 <col:174, col:188> 2
|-FunctionDecl 0x563567b6edb0 <line:340:14> col:14 implicit expm1f 'float (float)' extern
| |-ParmVarDecl 0x563567b6ee50 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6eec0 <col:14> Implicit
|-FunctionDecl 0x563567b6ef18 prev 0x563567b6edb0 <col:1, col:62> col:14 expm1f 'float (float)' extern
| |-ParmVarDecl 0x563567b6ecf0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x563567b6efc0 <col:49>
|-FunctionDecl 0x563567b6f0c8 <col:65, col:128> col:78 __expm1f 'float (float)' extern
| |-ParmVarDecl 0x563567b6f030 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x563567b6f170 <col:115>
|-FunctionDecl 0x563567b6f278 <line:343:14> col:14 implicit log1pf 'float (float)' extern
| |-ParmVarDecl 0x563567b6f318 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6f388 <col:14> Implicit
|-FunctionDecl 0x563567b6f3e0 prev 0x563567b6f278 <col:1, col:62> col:14 log1pf 'float (float)' extern
| |-ParmVarDecl 0x563567b6f1e0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x563567b6f488 <col:49>
|-FunctionDecl 0x563567b6f590 <col:65, col:128> col:78 __log1pf 'float (float)' extern
| |-ParmVarDecl 0x563567b6f4f8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x563567b6f638 <col:115>
|-FunctionDecl 0x563567b6f740 <line:346:14> col:14 implicit logbf 'float (float)' extern
| |-ParmVarDecl 0x563567b6f7e0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6f850 <col:14> Implicit
|-FunctionDecl 0x563567b6f8a8 prev 0x563567b6f740 <col:1, col:61> col:14 logbf 'float (float)' extern
| |-ParmVarDecl 0x563567b6f6a8 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b6f950 <col:48>
|-FunctionDecl 0x563567b6fa58 <col:64, col:126> col:77 __logbf 'float (float)' extern
| |-ParmVarDecl 0x563567b6f9c0 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b6fb00 <col:113>
|-FunctionDecl 0x563567b6fc08 <line:353:14> col:14 implicit exp2f 'float (float)' extern
| |-ParmVarDecl 0x563567b6fca8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b6fd18 <col:14> Implicit
|-FunctionDecl 0x563567b70da0 prev 0x563567b6fc08 <col:1, col:61> col:14 exp2f 'float (float)' extern
| |-ParmVarDecl 0x563567b6fb70 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b70e48 <col:48>
|-FunctionDecl 0x563567b70f50 <col:64, col:126> col:77 __exp2f 'float (float)' extern
| |-ParmVarDecl 0x563567b70eb8 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b70ff8 <col:113>
|-FunctionDecl 0x563567b71100 <line:356:14> col:14 implicit log2f 'float (float)' extern
| |-ParmVarDecl 0x563567b711a0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b71210 <col:14> Implicit
|-FunctionDecl 0x563567b71268 prev 0x563567b71100 <col:1, col:61> col:14 log2f 'float (float)' extern
| |-ParmVarDecl 0x563567b71068 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b71310 <col:48>
|-FunctionDecl 0x563567b71418 <col:64, col:126> col:77 __log2f 'float (float)' extern
| |-ParmVarDecl 0x563567b71380 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b714c0 <col:113>
|-FunctionDecl 0x563567b71650 <line:357:15> col:15 implicit powf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b716f0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b71758 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b717d0 <col:15> Implicit
|-FunctionDecl 0x563567b71828 prev 0x563567b71650 <col:2, col:72> col:15 powf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b71530 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x563567b715b0 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x563567b718d8 <col:59>
|-FunctionDecl 0x563567b71a68 <col:75, col:147> col:88 __powf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b71948 <col:96, col:102> col:102 __x 'float'
| |-ParmVarDecl 0x563567b719c8 <col:107, col:113> col:113 __y 'float'
| `-NoThrowAttr 0x563567b71b18 <col:134>
|-FunctionDecl 0x563567b71c20 <line:360:14> col:14 implicit sqrtf 'float (float)' extern
| |-ParmVarDecl 0x563567b71cc0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b71d30 <col:14> Implicit
|-FunctionDecl 0x563567b71db0 prev 0x563567b71c20 <col:1, col:61> col:14 sqrtf 'float (float)' extern
| |-ParmVarDecl 0x563567b71b88 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x563567b71e58 <col:48>
|-FunctionDecl 0x563567b71f60 <col:64, col:126> col:77 __sqrtf 'float (float)' extern
| |-ParmVarDecl 0x563567b71ec8 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b72008 <col:113>
|-FunctionDecl 0x563567b72198 <line:366:14> col:14 implicit hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b72238 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b722a0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b72318 <col:14> Implicit
|-FunctionDecl 0x563567b72370 prev 0x563567b72198 <col:1, col:73> col:14 hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b72078 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x563567b720f8 <col:33, col:39> col:39 __y 'float'
| `-NoThrowAttr 0x563567b72420 <col:60>
|-FunctionDecl 0x563567b725b0 <col:76, col:150> col:89 __hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b72490 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x563567b72510 <col:110, col:116> col:116 __y 'float'
| `-NoThrowAttr 0x563567b72660 <col:137>
|-FunctionDecl 0x563567b72768 <line:373:14> col:14 implicit cbrtf 'float (float)' extern
| |-ParmVarDecl 0x563567b72808 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b72878 <col:14> Implicit
| `-ConstAttr 0x563567b728d0 <col:14> Implicit
|-FunctionDecl 0x563567b728f8 prev 0x563567b72768 <col:1, col:61> col:14 cbrtf 'float (float)' extern
| |-ParmVarDecl 0x563567b726d0 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x563567b729f8 <col:14> Inherited Implicit
| `-NoThrowAttr 0x563567b729a0 <col:48>
|-FunctionDecl 0x563567b72ad0 <col:64, col:126> col:77 __cbrtf 'float (float)' extern
| |-ParmVarDecl 0x563567b72a38 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b72b78 <col:113>
|-FunctionDecl 0x563567b72c80 <line:374:14> col:14 implicit ceilf 'float (float)' extern
| |-ParmVarDecl 0x563567b72d20 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b72dc0 <col:14> Implicit
| `-ConstAttr 0x563567b72e18 <col:14> Implicit
|-FunctionDecl 0x563567b72e40 prev 0x563567b72c80 <col:1, col:89> col:14 ceilf 'float (float)' extern
| |-ParmVarDecl 0x563567b72be8 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x563567b72ee8 <col:48>
| `-ConstAttr 0x563567b72f40 <col:79>
|-FunctionDecl 0x563567b73018 <col:92, col:182> col:105 __ceilf 'float (float)' extern
| |-ParmVarDecl 0x563567b72f80 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x563567b730c0 <col:141>
| `-ConstAttr 0x563567b73118 <col:172>
|-FunctionDecl 0x563567b731f0 <line:377:14> col:14 implicit fabsf 'float (float)' extern
| |-ParmVarDecl 0x563567b73290 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b73300 <col:14> Implicit
| `-ConstAttr 0x563567b73358 <col:14> Implicit
|-FunctionDecl 0x563567b73380 prev 0x563567b731f0 <col:1, col:89> col:14 fabsf 'float (float)' extern
| |-ParmVarDecl 0x563567b73158 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x563567b73428 <col:48>
| `-ConstAttr 0x563567b73480 <col:79>
|-FunctionDecl 0x563567b73558 <col:92, col:182> col:105 __fabsf 'float (float)' extern
| |-ParmVarDecl 0x563567b734c0 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x563567b73600 <col:141>
| `-ConstAttr 0x563567b73658 <col:172>
|-FunctionDecl 0x563567b73730 <line:380:14> col:14 implicit floorf 'float (float)' extern
| |-ParmVarDecl 0x563567b737d0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b73840 <col:14> Implicit
| `-ConstAttr 0x563567b73898 <col:14> Implicit
|-FunctionDecl 0x563567b738c0 prev 0x563567b73730 <col:1, col:90> col:14 floorf 'float (float)' extern
| |-ParmVarDecl 0x563567b73698 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x563567b73968 <col:49>
| `-ConstAttr 0x563567b739c0 <col:80>
|-FunctionDecl 0x563567b73a98 <col:93, col:184> col:106 __floorf 'float (float)' extern
| |-ParmVarDecl 0x563567b73a00 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x563567b73b40 <col:143>
| `-ConstAttr 0x563567b73b98 <col:174>
|-FunctionDecl 0x563567b73cf8 <line:383:14> col:14 implicit fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b73dd0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b73e38 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b73eb0 <col:14> Implicit
|-FunctionDecl 0x563567b73f08 prev 0x563567b73cf8 <col:1, col:72> col:14 fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b73bd8 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x563567b73c58 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x563567b73fb8 <col:59>
|-FunctionDecl 0x563567b74148 <col:75, col:148> col:88 __fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b74028 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x563567b740a8 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x563567b741f8 <col:135>
|-FunctionDecl 0x563567b74338 <line:388:1, col:94> col:12 __isinff 'int (float)' extern
| |-ParmVarDecl 0x563567b74268 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x563567b743e0 <col:53>
| `-ConstAttr 0x563567b74438 <col:84>
|-FunctionDecl 0x563567b74510 <line:391:12> col:12 implicit __finitef 'int (float)' extern
| |-ParmVarDecl 0x563567b745b0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b74620 <col:12> Implicit
| `-ConstAttr 0x563567b74678 <col:12> Implicit
|-FunctionDecl 0x563567b746a0 prev 0x563567b74510 <col:1, col:95> col:12 __finitef 'int (float)' extern
| |-ParmVarDecl 0x563567b74478 <col:23, col:29> col:29 __value 'float'
| |-NoThrowAttr 0x563567b74748 <col:54>
| `-ConstAttr 0x563567b747a0 <col:85>
|-FunctionDecl 0x563567b74878 <line:397:1, col:92> col:12 isinff 'int (float)' extern
| |-ParmVarDecl 0x563567b747e0 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x563567b74920 <col:51>
| `-ConstAttr 0x563567b74978 <col:82>
|-FunctionDecl 0x563567b74a50 <line:400:12> col:12 implicit finitef 'int (float)' extern
| |-ParmVarDecl 0x563567b74af0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b74b60 <col:12> Implicit
| `-ConstAttr 0x563567b74bb8 <col:12> Implicit
|-FunctionDecl 0x563567b74be0 prev 0x563567b74a50 <col:1, col:93> col:12 finitef 'int (float)' extern
| |-ParmVarDecl 0x563567b749b8 <col:21, col:27> col:27 __value 'float'
| |-NoThrowAttr 0x563567b74c88 <col:52>
| `-ConstAttr 0x563567b74ce0 <col:83>
|-FunctionDecl 0x563567b74e80 <line:403:1, col:72> col:14 dremf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b74d20 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x563567b74de0 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x563567b74f30 <col:59>
|-FunctionDecl 0x563567b750c0 <col:75, col:148> col:88 __dremf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b74fa0 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x563567b75020 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x563567b75170 <col:135>
|-FunctionDecl 0x563567b75278 <line:407:1, col:68> col:14 significandf 'float (float)' extern
| |-ParmVarDecl 0x563567b751e0 <col:28, col:34> col:34 __x 'float'
| `-NoThrowAttr 0x563567b75320 <col:55>
|-FunctionDecl 0x563567b75428 <col:71, col:140> col:84 __significandf 'float (float)' extern
| |-ParmVarDecl 0x563567b75390 <col:100, col:106> col:106 __x 'float'
| `-NoThrowAttr 0x563567b754d0 <col:127>
|-FunctionDecl 0x563567b75660 <line:413:14> col:14 implicit copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b75700 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b75768 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b757e0 <col:14> Implicit
| `-ConstAttr 0x563567b75838 <col:14> Implicit
|-FunctionDecl 0x563567b75860 prev 0x563567b75660 <col:1, col:104> col:14 copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b75540 <col:25, col:31> col:31 __x 'float'
| |-ParmVarDecl 0x563567b755c0 <col:36, col:42> col:42 __y 'float'
| |-NoThrowAttr 0x563567b75910 <col:63>
| `-ConstAttr 0x563567b75968 <col:94>
|-FunctionDecl 0x563567b75ac8 <col:107, col:212> col:120 __copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b759a8 <col:133, col:139> col:139 __x 'float'
| |-ParmVarDecl 0x563567b75a28 <col:144, col:150> col:150 __y 'float'
| |-NoThrowAttr 0x563567b75b78 <col:171>
| `-ConstAttr 0x563567b75bd0 <col:202>
|-FunctionDecl 0x563567b75ce8 <line:420:14> col:14 implicit nanf 'float (const char *)' extern
| |-ParmVarDecl 0x563567b75df0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x563567b75e60 <col:14> Implicit
| `-PureAttr 0x563567b75eb8 <col:14> Implicit
|-FunctionDecl 0x563567b75ee0 prev 0x563567b75ce8 <col:1, col:97> col:14 nanf 'float (const char *)' extern
| |-ParmVarDecl 0x563567b75c10 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x563567b76008 <col:14> Inherited Implicit
| |-NoThrowAttr 0x563567b75f88 <col:56>
| `-ConstAttr 0x563567b75fe0 <col:87>
|-FunctionDecl 0x563567b760e0 <col:100, col:198> col:113 __nanf 'float (const char *)' extern
| |-ParmVarDecl 0x563567b76048 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x563567b76188 <col:157>
| `-ConstAttr 0x563567b761e0 <col:188>
|-FunctionDecl 0x563567b762b8 <line:426:1, col:94> col:12 used __isnanf 'int (float)' extern
| |-ParmVarDecl 0x563567b76220 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x563567b76360 <col:53>
| `-ConstAttr 0x563567b763b8 <col:84>
|-FunctionDecl 0x563567b76490 <line:430:1, col:92> col:12 isnanf 'int (float)' extern
| |-ParmVarDecl 0x563567b763f8 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x563567b76538 <col:51>
| `-ConstAttr 0x563567b76590 <col:82>
|-FunctionDecl 0x563567b76668 <line:433:1, col:55> col:14 j0f 'float (float)' extern
| |-ParmVarDecl 0x563567b765d0 <col:19> col:24 'float'
| `-NoThrowAttr 0x563567b76710 <col:42>
|-FunctionDecl 0x563567b76818 <col:58, col:114> col:71 __j0f 'float (float)' extern
| |-ParmVarDecl 0x563567b76780 <col:78> col:83 'float'
| `-NoThrowAttr 0x563567b768c0 <col:101>
|-FunctionDecl 0x563567b769c8 <line:434:1, col:55> col:14 j1f 'float (float)' extern
| |-ParmVarDecl 0x563567b76930 <col:19> col:24 'float'
| `-NoThrowAttr 0x563567b76a70 <col:42>
|-FunctionDecl 0x563567b76b78 <col:58, col:114> col:71 __j1f 'float (float)' extern
| |-ParmVarDecl 0x563567b76ae0 <col:78> col:83 'float'
| `-NoThrowAttr 0x563567b76c20 <col:101>
|-FunctionDecl 0x563567b76e38 <line:435:1, col:60> col:14 jnf 'float (int, float)' extern
| |-ParmVarDecl 0x563567b76c90 <col:19> col:22 'int'
| |-ParmVarDecl 0x563567b76d10 <col:24> col:29 'float'
| `-NoThrowAttr 0x563567b76ee8 <col:47>
|-FunctionDecl 0x563567b77078 <col:63, col:124> col:76 __jnf 'float (int, float)' extern
| |-ParmVarDecl 0x563567b76f58 <col:83> col:86 'int'
| |-ParmVarDecl 0x563567b76fd8 <col:88> col:93 'float'
| `-NoThrowAttr 0x563567b77128 <col:111>
|-FunctionDecl 0x563567b77230 <line:436:1, col:55> col:14 y0f 'float (float)' extern
| |-ParmVarDecl 0x563567b77198 <col:19> col:24 'float'
| `-NoThrowAttr 0x563567b772d8 <col:42>
|-FunctionDecl 0x563567b773e0 <col:58, col:114> col:71 __y0f 'float (float)' extern
| |-ParmVarDecl 0x563567b77348 <col:78> col:83 'float'
| `-NoThrowAttr 0x563567b77488 <col:101>
|-FunctionDecl 0x563567b77590 <line:437:1, col:55> col:14 y1f 'float (float)' extern
| |-ParmVarDecl 0x563567b774f8 <col:19> col:24 'float'
| `-NoThrowAttr 0x563567b77638 <col:42>
|-FunctionDecl 0x563567b77740 <col:58, col:114> col:71 __y1f 'float (float)' extern
| |-ParmVarDecl 0x563567b776a8 <col:78> col:83 'float'
| `-NoThrowAttr 0x563567b777e8 <col:101>
|-FunctionDecl 0x563567b77978 <line:438:1, col:60> col:14 ynf 'float (int, float)' extern
| |-ParmVarDecl 0x563567b77858 <col:19> col:22 'int'
| |-ParmVarDecl 0x563567b778d8 <col:24> col:29 'float'
| `-NoThrowAttr 0x563567b77a28 <col:47>
|-FunctionDecl 0x563567b77bb8 <col:63, col:124> col:76 __ynf 'float (int, float)' extern
| |-ParmVarDecl 0x563567b77a98 <col:83> col:86 'int'
| |-ParmVarDecl 0x563567b77b18 <col:88> col:93 'float'
| `-NoThrowAttr 0x563567b77c68 <col:111>
|-FunctionDecl 0x563567b77e10 <line:445:14> col:14 implicit erff 'float (float)' extern
| |-ParmVarDecl 0x563567b77eb0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b77f20 <col:14> Implicit
|-FunctionDecl 0x563567b77f78 prev 0x563567b77e10 <col:1, col:56> col:14 erff 'float (float)' extern
| |-ParmVarDecl 0x563567b77cd8 <col:20> col:25 'float'
| `-NoThrowAttr 0x563567b78020 <col:43>
|-FunctionDecl 0x563567b78128 <col:59, col:116> col:72 __erff 'float (float)' extern
| |-ParmVarDecl 0x563567b78090 <col:80> col:85 'float'
| `-NoThrowAttr 0x563567b781d0 <col:103>
|-FunctionDecl 0x563567b782d8 <line:446:14> col:14 implicit erfcf 'float (float)' extern
| |-ParmVarDecl 0x563567b78378 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b783e8 <col:14> Implicit
|-FunctionDecl 0x563567b78440 prev 0x563567b782d8 <col:1, col:57> col:14 erfcf 'float (float)' extern
| |-ParmVarDecl 0x563567b78240 <col:21> col:26 'float'
| `-NoThrowAttr 0x563567b784e8 <col:44>
|-FunctionDecl 0x563567b785f0 <col:60, col:118> col:73 __erfcf 'float (float)' extern
| |-ParmVarDecl 0x563567b78558 <col:82> col:87 'float'
| `-NoThrowAttr 0x563567b78698 <col:105>
|-FunctionDecl 0x563567b787a0 <line:447:14> col:14 implicit lgammaf 'float (float)' extern
| |-ParmVarDecl 0x563567b78840 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b788b0 <col:14> Implicit
|-FunctionDecl 0x563567b78908 prev 0x563567b787a0 <col:1, col:59> col:14 lgammaf 'float (float)' extern
| |-ParmVarDecl 0x563567b78708 <col:23> col:28 'float'
| `-NoThrowAttr 0x563567b789b0 <col:46>
|-FunctionDecl 0x563567b78ab8 <col:62, col:122> col:75 __lgammaf 'float (float)' extern
| |-ParmVarDecl 0x563567b78a20 <col:86> col:91 'float'
| `-NoThrowAttr 0x563567b78b60 <col:109>
|-FunctionDecl 0x563567b78c68 <line:454:14> col:14 implicit tgammaf 'float (float)' extern
| |-ParmVarDecl 0x563567b78d08 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b78d78 <col:14> Implicit
|-FunctionDecl 0x563567b79e30 prev 0x563567b78c68 <col:1, col:59> col:14 tgammaf 'float (float)' extern
| |-ParmVarDecl 0x563567b78bd0 <col:23> col:28 'float'
| `-NoThrowAttr 0x563567b79ed8 <col:46>
|-FunctionDecl 0x563567b79fe0 <col:62, col:122> col:75 __tgammaf 'float (float)' extern
| |-ParmVarDecl 0x563567b79f48 <col:86> col:91 'float'
| `-NoThrowAttr 0x563567b7a088 <col:109>
|-FunctionDecl 0x563567b7a190 <line:460:1, col:58> col:14 gammaf 'float (float)' extern
| |-ParmVarDecl 0x563567b7a0f8 <col:22> col:27 'float'
| `-NoThrowAttr 0x563567b7a238 <col:45>
|-FunctionDecl 0x563567b7a340 <col:61, col:120> col:74 __gammaf 'float (float)' extern
| |-ParmVarDecl 0x563567b7a2a8 <col:84> col:89 'float'
| `-NoThrowAttr 0x563567b7a3e8 <col:107>
|-FunctionDecl 0x563567b7a578 <line:467:1, col:78> col:14 lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x563567b7a458 <col:25> col:30 'float'
| |-ParmVarDecl 0x563567b7a4d8 <col:32, col:37> col:37 __signgamp 'int *'
| `-NoThrowAttr 0x563567b7a628 <col:65>
|-FunctionDecl 0x563567b7a7b8 <col:81, col:160> col:94 __lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x563567b7a698 <col:107> col:112 'float'
| |-ParmVarDecl 0x563567b7a718 <col:114, col:119> col:119 __signgamp 'int *'
| `-NoThrowAttr 0x563567b7a868 <col:147>
|-FunctionDecl 0x563567b7a970 <line:475:14> col:14 implicit rintf 'float (float)' extern
| |-ParmVarDecl 0x563567b7aa10 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b7aa80 <col:14> Implicit
| `-ConstAttr 0x563567b7aad8 <col:14> Implicit
|-FunctionDecl 0x563567b7ab00 prev 0x563567b7a970 <col:1, col:61> col:14 rintf 'float (float)' extern
| |-ParmVarDecl 0x563567b7a8d8 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x563567b7ac00 <col:14> Inherited Implicit
| `-NoThrowAttr 0x563567b7aba8 <col:48>
|-FunctionDecl 0x563567b7acd8 <col:64, col:126> col:77 __rintf 'float (float)' extern
| |-ParmVarDecl 0x563567b7ac40 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x563567b7ad80 <col:113>
|-FunctionDecl 0x563567b7af60 <line:478:14> col:14 implicit nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b7b000 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b7b068 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b7b0e0 <col:14> Implicit
|-FunctionDecl 0x563567b7b138 prev 0x563567b7af60 <col:1, col:105> col:14 nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b7ae40 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x563567b7aec0 <col:37, col:43> col:43 __y 'float'
| |-NoThrowAttr 0x563567b7b1e8 <col:64>
| `-ConstAttr 0x563567b7b240 <col:95>
|-FunctionDecl 0x563567b7b3a0 <col:108, col:214> col:121 __nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b7b280 <col:135, col:141> col:141 __x 'float'
| |-ParmVarDecl 0x563567b7b300 <col:146, col:152> col:152 __y 'float'
| |-NoThrowAttr 0x563567b7b450 <col:173>
| `-ConstAttr 0x563567b7b4a8 <col:204>
|-FunctionDecl 0x563567b7b648 <line:480:14> col:14 implicit nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x563567b7b6e8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b7b750 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b7b7c8 <col:14> Implicit
|-FunctionDecl 0x563567b7b820 prev 0x563567b7b648 <col:1, col:112> col:14 nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x563567b7b4e8 <col:27, col:33> col:33 __x 'float'
| |-ParmVarDecl 0x563567b7b568 <col:38, col:50> col:50 __y 'long double'
| |-NoThrowAttr 0x563567b7b8d0 <col:71>
| `-ConstAttr 0x563567b7b928 <col:102>
|-FunctionDecl 0x563567b7ba88 <col:115, col:228> col:128 __nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x563567b7b968 <col:143, col:149> col:149 __x 'float'
| |-ParmVarDecl 0x563567b7b9e8 <col:154, col:166> col:166 __y 'long double'
| |-NoThrowAttr 0x563567b7bb38 <col:187>
| `-ConstAttr 0x563567b7bb90 <col:218>
|-FunctionDecl 0x563567b7bcf0 <line:484:14> col:14 implicit remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b7bd90 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b7be50 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b7bec8 <col:14> Implicit
|-FunctionDecl 0x563567b7bf20 prev 0x563567b7bcf0 <col:1, col:77> col:14 remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b7bbd0 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x563567b7bc50 <col:37, col:43> col:43 __y 'float'
| `-NoThrowAttr 0x563567b7bfd0 <col:64>
|-FunctionDecl 0x563567b7c160 <col:80, col:158> col:93 __remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b7c040 <col:107, col:113> col:113 __x 'float'
| |-ParmVarDecl 0x563567b7c0c0 <col:118, col:124> col:124 __y 'float'
| `-NoThrowAttr 0x563567b7c210 <col:145>
|-FunctionDecl 0x563567b7c3a0 <line:488:14> col:14 implicit scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x563567b7c440 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b7c4a8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x563567b7c520 <col:14> Implicit
|-FunctionDecl 0x563567b7c578 prev 0x563567b7c3a0 <col:1, col:72> col:14 scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x563567b7c280 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x563567b7c300 <col:34, col:38> col:38 __n 'int'
| `-NoThrowAttr 0x563567b7c628 <col:59>
|-FunctionDecl 0x563567b7c7b8 <col:75, col:148> col:88 __scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x563567b7c698 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x563567b7c718 <col:110, col:114> col:114 __n 'int'
| `-NoThrowAttr 0x563567b7c868 <col:135>
|-FunctionDecl 0x563567b7c970 <line:492:12> col:12 implicit ilogbf 'int (float)' extern
| |-ParmVarDecl 0x563567b7ca10 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b7ca80 <col:12> Implicit
|-FunctionDecl 0x563567b7cad8 prev 0x563567b7c970 <col:1, col:60> col:12 ilogbf 'int (float)' extern
| |-ParmVarDecl 0x563567b7c8d8 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x563567b7cb80 <col:47>
|-FunctionDecl 0x563567b7cc88 <col:63, col:124> col:74 __ilogbf 'int (float)' extern
| |-ParmVarDecl 0x563567b7cbf0 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x563567b7cd30 <col:111>
|-FunctionDecl 0x563567b7cf48 <line:497:14> col:14 implicit scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x563567b7cfe8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b7d050 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x563567b7d0c8 <col:14> Implicit
|-FunctionDecl 0x563567b7d120 prev 0x563567b7cf48 <col:1, col:78> col:14 scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x563567b7cda0 <col:24, col:30> col:30 __x 'float'
| |-ParmVarDecl 0x563567b7ce60 <col:35, col:44> col:44 __n 'long'
| `-NoThrowAttr 0x563567b7d1d0 <col:65>
|-FunctionDecl 0x563567b7d360 <col:81, col:160> col:94 __scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x563567b7d240 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x563567b7d2c0 <col:117, col:126> col:126 __n 'long'
| `-NoThrowAttr 0x563567b7d410 <col:147>
|-FunctionDecl 0x563567b7d518 <line:501:14> col:14 implicit nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x563567b7d5b8 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b7d628 <col:14> Implicit
| `-ConstAttr 0x563567b7d680 <col:14> Implicit
|-FunctionDecl 0x563567b7d6a8 prev 0x563567b7d518 <col:1, col:66> col:14 nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x563567b7d480 <col:26, col:32> col:32 __x 'float'
| |-ConstAttr 0x563567b7d7a8 <col:14> Inherited Implicit
| `-NoThrowAttr 0x563567b7d750 <col:53>
|-FunctionDecl 0x563567b7d880 <col:69, col:136> col:82 __nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x563567b7d7e8 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x563567b7d928 <col:123>
|-FunctionDecl 0x563567b7da30 <line:505:14> col:14 implicit roundf 'float (float)' extern
| |-ParmVarDecl 0x563567b7dad0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b7db40 <col:14> Implicit
| `-ConstAttr 0x563567b7db98 <col:14> Implicit
|-FunctionDecl 0x563567b7dbc0 prev 0x563567b7da30 <col:1, col:90> col:14 roundf 'float (float)' extern
| |-ParmVarDecl 0x563567b7d998 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x563567b7dc68 <col:49>
| `-ConstAttr 0x563567b7dcc0 <col:80>
|-FunctionDecl 0x563567b7dd98 <col:93, col:184> col:106 __roundf 'float (float)' extern
| |-ParmVarDecl 0x563567b7dd00 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x563567b7de70 <col:143>
| `-ConstAttr 0x563567b7dec8 <col:174>
|-FunctionDecl 0x563567b7dfa0 <line:509:14> col:14 implicit truncf 'float (float)' extern
| |-ParmVarDecl 0x563567b7e040 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b7e0b0 <col:14> Implicit
| `-ConstAttr 0x563567b7e108 <col:14> Implicit
|-FunctionDecl 0x563567b7e130 prev 0x563567b7dfa0 <col:1, col:90> col:14 truncf 'float (float)' extern
| |-ParmVarDecl 0x563567b7df08 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x563567b7e1d8 <col:49>
| `-ConstAttr 0x563567b7e230 <col:80>
|-FunctionDecl 0x563567b7e308 <col:93, col:184> col:106 __truncf 'float (float)' extern
| |-ParmVarDecl 0x563567b7e270 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x563567b7e3b0 <col:143>
| `-ConstAttr 0x563567b7e408 <col:174>
|-FunctionDecl 0x563567b7e638 <line:514:14> col:14 implicit remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x563567b7e6d8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b7e740 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b7e7a8 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x563567b7e828 <col:14> Implicit
|-FunctionDecl 0x563567b7e880 prev 0x563567b7e638 <col:1, col:86> col:14 remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x563567b7e448 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x563567b7e4c8 <col:34, col:40> col:40 __y 'float'
| |-ParmVarDecl 0x563567b7e548 <col:45, col:50> col:50 __quo 'int *'
| `-NoThrowAttr 0x563567b7e938 <col:73>
|-FunctionDecl 0x563567b7eb50 <col:89, col:176> col:102 __remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x563567b7e9a8 <col:113, col:119> col:119 __x 'float'
| |-ParmVarDecl 0x563567b7ea28 <col:124, col:130> col:130 __y 'float'
| |-ParmVarDecl 0x563567b7eaa8 <col:135, col:140> col:140 __quo 'int *'
| `-NoThrowAttr 0x563567b7ec08 <col:163>
|-FunctionDecl 0x563567b7ed48 <line:521:17> col:17 implicit lrintf 'long (float)' extern
| |-ParmVarDecl 0x563567b7ede8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b7ee80 <col:17> Implicit
|-FunctionDecl 0x563567b7eed8 prev 0x563567b7ed48 <col:1, col:65> col:17 lrintf 'long (float)' extern
| |-ParmVarDecl 0x563567b7ec78 <col:25, col:31> col:31 __x 'float'
| `-NoThrowAttr 0x563567b7ef80 <col:52>
|-FunctionDecl 0x563567b7f088 <col:68, col:134> col:84 __lrintf 'long (float)' extern
| |-ParmVarDecl 0x563567b7eff0 <col:94, col:100> col:100 __x 'float'
| `-NoThrowAttr 0x563567b7f130 <col:121>
|-FunctionDecl 0x563567b7f278 <line:523:22> col:22 implicit llrintf 'long long (float)' extern
| |-ParmVarDecl 0x563567b7f318 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b7f388 <col:22> Implicit
|-FunctionDecl 0x563567b7f3e0 prev 0x563567b7f278 <col:1, col:71> col:22 llrintf 'long long (float)' extern
| |-ParmVarDecl 0x563567b7f1a0 <col:31, col:37> col:37 __x 'float'
| `-NoThrowAttr 0x563567b7f488 <col:58>
|-FunctionDecl 0x563567b7f590 <col:74, col:146> col:95 __llrintf 'long long (float)' extern
| |-ParmVarDecl 0x563567b7f4f8 <col:106, col:112> col:112 __x 'float'
| `-NoThrowAttr 0x563567b7f638 <col:133>
|-FunctionDecl 0x563567b7f740 <line:527:17> col:17 implicit lroundf 'long (float)' extern
| |-ParmVarDecl 0x563567b7f7e0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b7f850 <col:17> Implicit
|-FunctionDecl 0x563567b7f8a8 prev 0x563567b7f740 <col:1, col:66> col:17 lroundf 'long (float)' extern
| |-ParmVarDecl 0x563567b7f6a8 <col:26, col:32> col:32 __x 'float'
| `-NoThrowAttr 0x563567b7f950 <col:53>
|-FunctionDecl 0x563567b7fa58 <col:69, col:136> col:85 __lroundf 'long (float)' extern
| |-ParmVarDecl 0x563567b7f9c0 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x563567b7fb00 <col:123>
|-FunctionDecl 0x563567b7fc08 <line:529:22> col:22 implicit llroundf 'long long (float)' extern
| |-ParmVarDecl 0x563567b7fca8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b7fd18 <col:22> Implicit
|-FunctionDecl 0x563567b7fd70 prev 0x563567b7fc08 <col:1, col:72> col:22 llroundf 'long long (float)' extern
| |-ParmVarDecl 0x563567b7fb70 <col:32, col:38> col:38 __x 'float'
| `-NoThrowAttr 0x563567b7fe18 <col:59>
|-FunctionDecl 0x563567b65db0 <col:75, col:148> col:96 __llroundf 'long long (float)' extern
| |-ParmVarDecl 0x563567b65d18 <col:108, col:114> col:114 __x 'float'
| `-NoThrowAttr 0x563567b65e58 <col:135>
|-FunctionDecl 0x563567b65fe8 <line:533:14> col:14 implicit fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b66088 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b660f0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x563567b66168 <col:14> Implicit
|-FunctionDecl 0x563567b661c0 prev 0x563567b65fe8 <col:1, col:72> col:14 fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b65ec8 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x563567b65f48 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x563567b66270 <col:59>
|-FunctionDecl 0x563567b66400 <col:75, col:148> col:88 __fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b662e0 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x563567b66360 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x563567b664b0 <col:135>
|-FunctionDecl 0x563567b66640 <line:536:14> col:14 implicit fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b666e0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b66748 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b667c0 <col:14> Implicit
| `-ConstAttr 0x563567b66818 <col:14> Implicit
|-FunctionDecl 0x563567b66840 prev 0x563567b66640 <col:1, col:100> col:14 fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b66520 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x563567b665a0 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x563567b668f0 <col:59>
| `-ConstAttr 0x563567b66948 <col:90>
|-FunctionDecl 0x563567b66aa8 <col:103, col:204> col:116 __fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b66988 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x563567b66a08 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x563567b66b58 <col:163>
| `-ConstAttr 0x563567b66bb0 <col:194>
|-FunctionDecl 0x563567b83ed8 <line:539:14> col:14 implicit fminf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b83f78 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b83fe0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x563567b84058 <col:14> Implicit
| `-ConstAttr 0x563567b840b0 <col:14> Implicit
|-FunctionDecl 0x563567b840d8 prev 0x563567b83ed8 <col:1, col:100> col:14 fminf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b66bf0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x563567b66c70 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x563567b84188 <col:59>
| `-ConstAttr 0x563567b841e0 <col:90>
|-FunctionDecl 0x563567b84340 <col:103, col:204> col:116 __fminf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b84220 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x563567b842a0 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x563567b843f0 <col:163>
| `-ConstAttr 0x563567b84448 <col:194>
|-FunctionDecl 0x563567b84520 <line:543:1, line:544:32> line:543:12 __fpclassifyf 'int (float)' extern
| |-ParmVarDecl 0x563567b84488 <col:27, col:33> col:33 __value 'float'
| |-NoThrowAttr 0x563567b845c8 <col:58>
| `-ConstAttr 0x563567b84620 <line:544:22>
|-FunctionDecl 0x563567b846f8 <line:547:1, line:548:32> line:547:12 used __signbitf 'int (float)' extern
| |-ParmVarDecl 0x563567b84660 <col:24, col:30> col:30 __value 'float'
| |-NoThrowAttr 0x563567b847a0 <col:55>
| `-ConstAttr 0x563567b847f8 <line:548:22>
|-FunctionDecl 0x563567b84a28 <line:552:14> col:14 implicit fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x563567b84ac8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b84b30 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x563567b84b98 <<invalid sloc>> <invalid sloc> 'float'
| |-ConstAttr 0x563567b84c18 <col:14> Implicit
| `-NoThrowAttr 0x563567b84c70 <col:14> Implicit
|-FunctionDecl 0x563567b84c98 prev 0x563567b84a28 <col:1, col:82> col:14 fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x563567b84838 <col:20, col:26> col:26 __x 'float'
| |-ParmVarDecl 0x563567b848b8 <col:31, col:37> col:37 __y 'float'
| |-ParmVarDecl 0x563567b84938 <col:42, col:48> col:48 __z 'float'
| |-ConstAttr 0x563567b84da8 <col:14> Inherited Implicit
| `-NoThrowAttr 0x563567b84d50 <col:69>
|-FunctionDecl 0x563567b84fd8 <col:85, col:168> col:98 __fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x563567b84de8 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x563567b84eb0 <col:117, col:123> col:123 __y 'float'
| |-ParmVarDecl 0x563567b84f30 <col:128, col:134> col:134 __z 'float'
| `-NoThrowAttr 0x563567b85090 <col:155>
|-FunctionDecl 0x563567b85220 <line:553:1, col:73> col:14 scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b85100 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x563567b85180 <col:33, col:39> col:39 __n 'float'
| `-NoThrowAttr 0x563567b852d0 <col:60>
|-FunctionDecl 0x563567b85460 <col:76, col:150> col:89 __scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x563567b85340 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x563567b853c0 <col:110, col:116> col:116 __n 'float'
| `-NoThrowAttr 0x563567b85510 <col:137>
|-FunctionDecl 0x563567b85658 <line:554:20> col:20 implicit acosl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b856f8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b85768 <col:20> Implicit
|-FunctionDecl 0x563567b857c0 prev 0x563567b85658 <col:1, col:73> col:20 acosl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b85580 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b85868 <col:60>
|-FunctionDecl 0x563567b85970 <col:76, col:150> col:95 __acosl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b858d8 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b85a18 <col:137>
|-FunctionDecl 0x563567b85b20 <line:556:20> col:20 implicit asinl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b85bc0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b85c30 <col:20> Implicit
|-FunctionDecl 0x563567b85c88 prev 0x563567b85b20 <col:1, col:73> col:20 asinl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b85a88 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b85d30 <col:60>
|-FunctionDecl 0x563567b85ec0 <col:76, col:150> col:95 __asinl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b85da0 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b85f68 <col:137>
|-FunctionDecl 0x563567b86070 <line:558:20> col:20 implicit atanl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b86110 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b86180 <col:20> Implicit
|-FunctionDecl 0x563567b861d8 prev 0x563567b86070 <col:1, col:73> col:20 atanl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b85fd8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b86280 <col:60>
|-FunctionDecl 0x563567b86388 <col:76, col:150> col:95 __atanl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b862f0 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b86430 <col:137>
|-FunctionDecl 0x563567b86608 <line:560:20> col:20 implicit atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b866a8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b86710 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b86788 <col:20> Implicit
|-FunctionDecl 0x563567b867e0 prev 0x563567b86608 <col:1, col:91> col:20 atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b864a0 <col:28, col:40> col:40 __y 'long double'
| |-ParmVarDecl 0x563567b86520 <col:45, col:57> col:57 __x 'long double'
| `-NoThrowAttr 0x563567b86890 <col:78>
|-FunctionDecl 0x563567b86a20 <col:94, col:186> col:113 __atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b86900 <col:123, col:135> col:135 __y 'long double'
| |-ParmVarDecl 0x563567b86980 <col:140, col:152> col:152 __x 'long double'
| `-NoThrowAttr 0x563567b86ad0 <col:173>
|-FunctionDecl 0x563567b86bd8 <line:563:21> col:21 implicit cosl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b86c78 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b86ce8 <col:21> Implicit
|-FunctionDecl 0x563567b86d40 prev 0x563567b86bd8 <col:2, col:73> col:21 cosl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b86b40 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b86de8 <col:60>
|-FunctionDecl 0x563567b86f00 <col:76, col:149> col:95 __cosl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b86e58 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x563567b86fa8 <col:136>
|-FunctionDecl 0x563567b870b0 <line:565:21> col:21 implicit sinl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b87150 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b871c0 <col:21> Implicit
|-FunctionDecl 0x563567b87218 prev 0x563567b870b0 <col:2, col:73> col:21 sinl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b87018 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b872c0 <col:60>
|-FunctionDecl 0x563567b873c8 <col:76, col:149> col:95 __sinl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b87330 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x563567b87470 <col:136>
|-FunctionDecl 0x563567b87578 <line:567:20> col:20 implicit tanl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b87618 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b87688 <col:20> Implicit
|-FunctionDecl 0x563567b876e0 prev 0x563567b87578 <col:1, col:72> col:20 tanl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b874e0 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x563567b87788 <col:59>
|-FunctionDecl 0x563567b87890 <col:75, col:148> col:94 __tanl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b877f8 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x563567b87938 <col:135>
|-FunctionDecl 0x563567b87a40 <line:572:20> col:20 implicit coshl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b87ae0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b87b50 <col:20> Implicit
|-FunctionDecl 0x563567b87ba8 prev 0x563567b87a40 <col:1, col:73> col:20 coshl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b879a8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b87c50 <col:60>
|-FunctionDecl 0x563567b87d58 <col:76, col:150> col:95 __coshl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b87cc0 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b87e00 <col:137>
|-FunctionDecl 0x563567b87f78 <line:574:20> col:20 implicit sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b88018 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b88088 <col:20> Implicit
|-FunctionDecl 0x563567b880e0 prev 0x563567b87f78 <col:1, col:73> col:20 sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b87ee0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b88188 <col:60>
|-FunctionDecl 0x563567b88290 <col:76, col:150> col:95 __sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b881f8 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b88338 <col:137>
|-FunctionDecl 0x563567b88440 <line:576:20> col:20 implicit tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b884e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b88550 <col:20> Implicit
|-FunctionDecl 0x563567b885a8 prev 0x563567b88440 <col:1, col:73> col:20 tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b883a8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b88650 <col:60>
|-FunctionDecl 0x563567b88758 <col:76, col:150> col:95 __tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b886c0 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b88800 <col:137>
|-FunctionDecl 0x563567b88908 <line:577:20> col:20 implicit acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b889a8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b88a18 <col:20> Implicit
|-FunctionDecl 0x563567b88a70 prev 0x563567b88908 <col:1, col:74> col:20 acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b88870 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x563567b88b18 <col:61>
|-FunctionDecl 0x563567b88c20 <col:77, col:152> col:96 __acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b88b88 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x563567b88cc8 <col:139>
|-FunctionDecl 0x563567b88dd0 <line:579:20> col:20 implicit asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b88e70 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b88ef0 <col:20> Implicit
|-FunctionDecl 0x563567b88f48 prev 0x563567b88dd0 <col:1, col:74> col:20 asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b88d38 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x563567b88ff0 <col:61>
|-FunctionDecl 0x563567b890f8 <col:77, col:152> col:96 __asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b89060 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x563567b891a0 <col:139>
|-FunctionDecl 0x563567b892a8 <line:581:20> col:20 implicit atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b89348 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b893b8 <col:20> Implicit
|-FunctionDecl 0x563567b89410 prev 0x563567b892a8 <col:1, col:74> col:20 atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b89210 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x563567b894b8 <col:61>
|-FunctionDecl 0x563567b895c0 <col:77, col:152> col:96 __atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b89528 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x563567b89668 <col:139>
|-FunctionDecl 0x563567b89770 <line:589:21> col:21 implicit expl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b89810 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b89880 <col:21> Implicit
|-FunctionDecl 0x563567b898d8 prev 0x563567b89770 <col:2, col:73> col:21 expl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b896d8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b89980 <col:60>
|-FunctionDecl 0x563567b89a88 <col:76, col:149> col:95 __expl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b899f0 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x563567b89b30 <col:136>
|-FunctionDecl 0x563567b89d08 <line:592:20> col:20 implicit frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x563567b89da8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b89e10 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x563567b89e88 <col:20> Implicit
|-FunctionDecl 0x563567b89f00 prev 0x563567b89d08 <col:1, col:91> col:20 frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x563567b89ba0 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x563567b89c20 <col:45, col:50> col:50 __exponent 'int *'
| `-NoThrowAttr 0x563567b89fb0 <col:78>
|-FunctionDecl 0x563567b8a140 <col:94, col:186> col:113 __frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x563567b8a020 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x563567b8a0a0 <col:140, col:145> col:145 __exponent 'int *'
| `-NoThrowAttr 0x563567b8a1f0 <col:173>
|-FunctionDecl 0x563567b8a3c8 <line:595:20> col:20 implicit ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x563567b8a468 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b8a4d0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x563567b8a548 <col:20> Implicit
|-FunctionDecl 0x563567b8a5a0 prev 0x563567b8a3c8 <col:1, col:90> col:20 ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x563567b8a260 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x563567b8a2e0 <col:45, col:49> col:49 __exponent 'int'
| `-NoThrowAttr 0x563567b8a650 <col:77>
|-FunctionDecl 0x563567b8a7e0 <col:93, col:184> col:112 __ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x563567b8a6c0 <col:122, col:134> col:134 __x 'long double'
| |-ParmVarDecl 0x563567b8a740 <col:139, col:143> col:143 __exponent 'int'
| `-NoThrowAttr 0x563567b8a890 <col:171>
|-FunctionDecl 0x563567b8a998 <line:598:21> col:21 implicit logl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8aa38 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b8aaa8 <col:21> Implicit
|-FunctionDecl 0x563567b8ab00 prev 0x563567b8a998 <col:2, col:73> col:21 logl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8a900 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b8aba8 <col:60>
|-FunctionDecl 0x563567b8acb0 <col:76, col:149> col:95 __logl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8ac18 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x563567b8ad58 <col:136>
|-FunctionDecl 0x563567b8ae60 <line:601:20> col:20 implicit log10l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8af10 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b8af80 <col:20> Implicit
|-FunctionDecl 0x563567b8afd8 prev 0x563567b8ae60 <col:1, col:74> col:20 log10l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8adc8 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x563567b8b080 <col:61>
|-FunctionDecl 0x563567b8b188 <col:77, col:152> col:96 __log10l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8b0f0 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x563567b8b230 <col:139>
|-FunctionDecl 0x563567b8b438 <line:604:20> col:20 implicit modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x563567b8b4d8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b8b540 <<invalid sloc>> <invalid sloc> 'long double *'
| `-NoThrowAttr 0x563567b8b5b8 <col:20> Implicit
|-FunctionDecl 0x563567b8b610 prev 0x563567b8b438 <col:1, col:94> col:20 modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x563567b8b2a0 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x563567b8b358 <col:44, col:57> col:57 __iptr 'long double *'
| `-NoThrowAttr 0x563567b8b6c0 <col:81>
|-FunctionDecl 0x563567b8b870 <col:97, col:226> col:116 __modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x563567b8b730 <col:125, col:137> col:137 __x 'long double'
| |-ParmVarDecl 0x563567b8b7b0 <col:142, col:155> col:155 __iptr 'long double *'
| |-NoThrowAttr 0x563567b8b920 <col:179>
| `-NonNullAttr 0x563567b8b978 <col:210, col:224> 2
|-FunctionDecl 0x563567b8ba68 <line:605:20> col:20 implicit expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8bb08 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b8bb78 <col:20> Implicit
|-FunctionDecl 0x563567b8bbd0 prev 0x563567b8ba68 <col:1, col:74> col:20 expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8b9d0 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x563567b8bc78 <col:61>
|-FunctionDecl 0x563567b8bd80 <col:77, col:152> col:96 __expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8bce8 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x563567b8be28 <col:139>
|-FunctionDecl 0x563567b8bf50 <line:608:20> col:20 implicit log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8bff0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b8c060 <col:20> Implicit
|-FunctionDecl 0x563567b8c0b8 prev 0x563567b8bf50 <col:1, col:74> col:20 log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8be98 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x563567b8c160 <col:61>
|-FunctionDecl 0x563567b8c268 <col:77, col:152> col:96 __log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8c1d0 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x563567b8c310 <col:139>
|-FunctionDecl 0x563567b8c418 <line:611:20> col:20 implicit logbl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8c4b8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b8c528 <col:20> Implicit
|-FunctionDecl 0x563567b8c580 prev 0x563567b8c418 <col:1, col:73> col:20 logbl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8c380 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b8c628 <col:60>
|-FunctionDecl 0x563567b8c730 <col:76, col:150> col:95 __logbl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8c698 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b8c7d8 <col:137>
|-FunctionDecl 0x563567b8c8e0 <line:618:20> col:20 implicit exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8c980 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b8c9f0 <col:20> Implicit
|-FunctionDecl 0x563567b8ca48 prev 0x563567b8c8e0 <col:1, col:73> col:20 exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8c848 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b8caf0 <col:60>
|-FunctionDecl 0x563567b8cbf8 <col:76, col:150> col:95 __exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8cb60 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b8cca0 <col:137>
|-FunctionDecl 0x563567b8cda8 <line:621:20> col:20 implicit log2l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8ce48 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b8ceb8 <col:20> Implicit
|-FunctionDecl 0x563567b8cf30 prev 0x563567b8cda8 <col:1, col:73> col:20 log2l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8cd10 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b8cfd8 <col:60>
|-FunctionDecl 0x563567b8d0e0 <col:76, col:150> col:95 __log2l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8d048 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b8d188 <col:137>
|-FunctionDecl 0x563567b8d318 <line:622:21> col:21 implicit powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b8d3b8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b8d420 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b8d498 <col:21> Implicit
|-FunctionDecl 0x563567b8d4f0 prev 0x563567b8d318 <col:2, col:90> col:21 powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b8d1f8 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x563567b8d278 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x563567b8d5a0 <col:77>
|-FunctionDecl 0x563567b8d730 <col:93, col:183> col:112 __powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b8d610 <col:120, col:132> col:132 __x 'long double'
| |-ParmVarDecl 0x563567b8d690 <col:137, col:149> col:149 __y 'long double'
| `-NoThrowAttr 0x563567b8d7e0 <col:170>
|-FunctionDecl 0x563567b8d8e8 <line:625:20> col:20 implicit sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8d988 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b8d9f8 <col:20> Implicit
|-FunctionDecl 0x563567b8da50 prev 0x563567b8d8e8 <col:1, col:73> col:20 sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8d850 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x563567b8daf8 <col:60>
|-FunctionDecl 0x563567b8dc00 <col:76, col:150> col:95 __sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8db68 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b8dca8 <col:137>
|-FunctionDecl 0x563567b8de38 <line:631:20> col:20 implicit hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b8df40 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b8dfa8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b8e020 <col:20> Implicit
|-FunctionDecl 0x563567b8e078 prev 0x563567b8de38 <col:1, col:91> col:20 hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b8dd18 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x563567b8dd98 <col:45, col:57> col:57 __y 'long double'
| `-NoThrowAttr 0x563567b8e128 <col:78>
|-FunctionDecl 0x563567b8e2b8 <col:94, col:186> col:113 __hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b8e198 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x563567b8e218 <col:140, col:152> col:152 __y 'long double'
| `-NoThrowAttr 0x563567b8e368 <col:173>
|-FunctionDecl 0x563567b8e470 <line:638:20> col:20 implicit cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8e510 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b8e580 <col:20> Implicit
| `-ConstAttr 0x563567b8e5d8 <col:20> Implicit
|-FunctionDecl 0x563567b8e600 prev 0x563567b8e470 <col:1, col:73> col:20 cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8e3d8 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x563567b8e700 <col:20> Inherited Implicit
| `-NoThrowAttr 0x563567b8e6a8 <col:60>
|-FunctionDecl 0x563567b8e7d8 <col:76, col:150> col:95 __cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8e740 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b8e880 <col:137>
|-FunctionDecl 0x563567b8e988 <line:639:20> col:20 implicit ceill 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8ea28 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b8ea98 <col:20> Implicit
| `-ConstAttr 0x563567b8eaf0 <col:20> Implicit
|-FunctionDecl 0x563567b8eb18 prev 0x563567b8e988 <col:1, col:101> col:20 ceill 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8e8f0 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x563567b8ebc0 <col:60>
| `-ConstAttr 0x563567b8ec18 <col:91>
|-FunctionDecl 0x563567b8ecf0 <col:104, col:206> col:123 __ceill 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8ec58 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x563567b8ed98 <col:165>
| `-ConstAttr 0x563567b8edf0 <col:196>
|-FunctionDecl 0x563567b8ef50 <line:642:20> col:20 implicit fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8eff0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b8f060 <col:20> Implicit
| `-ConstAttr 0x563567b8f0b8 <col:20> Implicit
|-FunctionDecl 0x563567b8f0e0 prev 0x563567b8ef50 <col:1, col:101> col:20 fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8ee30 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x563567b8f188 <col:60>
| `-ConstAttr 0x563567b8f1e0 <col:91>
|-FunctionDecl 0x563567b8f2b8 <col:104, col:206> col:123 __fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8f220 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x563567b8f360 <col:165>
| `-ConstAttr 0x563567b8f3b8 <col:196>
|-FunctionDecl 0x563567b8f490 <line:645:20> col:20 implicit floorl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8f530 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b8f5a0 <col:20> Implicit
| `-ConstAttr 0x563567b8f5f8 <col:20> Implicit
|-FunctionDecl 0x563567b8f620 prev 0x563567b8f490 <col:1, col:102> col:20 floorl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8f3f8 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x563567b8f6c8 <col:61>
| `-ConstAttr 0x563567b8f720 <col:92>
|-FunctionDecl 0x563567b8f7f8 <col:105, col:208> col:124 __floorl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b8f760 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x563567b8f8a0 <col:167>
| `-ConstAttr 0x563567b8f8f8 <col:198>
|-FunctionDecl 0x563567b8fa58 <line:648:20> col:20 implicit fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b8faf8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b8fb60 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b8fbd8 <col:20> Implicit
|-FunctionDecl 0x563567b8fc30 prev 0x563567b8fa58 <col:1, col:90> col:20 fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b8f938 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x563567b8f9b8 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x563567b8fce0 <col:77>
|-FunctionDecl 0x563567b8fe70 <col:93, col:184> col:112 __fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b8fd50 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x563567b8fdd0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x563567b8ff20 <col:171>
|-FunctionDecl 0x563567b90078 <line:653:1, col:100> col:12 __isinfl 'int (long double)' extern
| |-ParmVarDecl 0x563567b8ffa8 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x563567b90120 <col:59>
| `-ConstAttr 0x563567b90178 <col:90>
|-FunctionDecl 0x563567b90250 <line:656:12> col:12 implicit __finitel 'int (long double)' extern
| |-ParmVarDecl 0x563567b902f0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b90360 <col:12> Implicit
| `-ConstAttr 0x563567b903b8 <col:12> Implicit
|-FunctionDecl 0x563567b903e0 prev 0x563567b90250 <col:1, col:101> col:12 __finitel 'int (long double)' extern
| |-ParmVarDecl 0x563567b901b8 <col:23, col:35> col:35 __value 'long double'
| |-NoThrowAttr 0x563567b90488 <col:60>
| `-ConstAttr 0x563567b904e0 <col:91>
|-FunctionDecl 0x563567b905b8 <line:662:1, col:98> col:12 isinfl 'int (long double)' extern
| |-ParmVarDecl 0x563567b90520 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x563567b90660 <col:57>
| `-ConstAttr 0x563567b906b8 <col:88>
|-FunctionDecl 0x563567b90790 <line:665:12> col:12 implicit finitel 'int (long double)' extern
| |-ParmVarDecl 0x563567b90830 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b908a0 <col:12> Implicit
| `-ConstAttr 0x563567b908f8 <col:12> Implicit
|-FunctionDecl 0x563567b90920 prev 0x563567b90790 <col:1, col:99> col:12 finitel 'int (long double)' extern
| |-ParmVarDecl 0x563567b906f8 <col:21, col:33> col:33 __value 'long double'
| |-NoThrowAttr 0x563567b909c8 <col:58>
| `-ConstAttr 0x563567b90a20 <col:89>
|-FunctionDecl 0x563567b90b80 <line:668:1, col:90> col:20 dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b90a60 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x563567b90ae0 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x563567b90c30 <col:77>
|-FunctionDecl 0x563567b90dc0 <col:93, col:184> col:112 __dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b90ca0 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x563567b90d20 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x563567b90e70 <col:171>
|-FunctionDecl 0x563567b90fa0 <line:672:1, col:80> col:20 significandl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b90ee0 <col:34, col:46> col:46 __x 'long double'
| `-NoThrowAttr 0x563567b91048 <col:67>
|-FunctionDecl 0x563567b91150 <col:83, col:164> col:102 __significandl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b910b8 <col:118, col:130> col:130 __x 'long double'
| `-NoThrowAttr 0x563567b911f8 <col:151>
|-FunctionDecl 0x563567b91388 <line:678:20> col:20 implicit copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b91428 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b91490 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b91508 <col:20> Implicit
| `-ConstAttr 0x563567b91560 <col:20> Implicit
|-FunctionDecl 0x563567b91588 prev 0x563567b91388 <col:1, col:122> col:20 copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b91268 <col:31, col:43> col:43 __x 'long double'
| |-ParmVarDecl 0x563567b912e8 <col:48, col:60> col:60 __y 'long double'
| |-NoThrowAttr 0x563567b91638 <col:81>
| `-ConstAttr 0x563567b91690 <col:112>
|-FunctionDecl 0x563567b917f0 <col:125, col:248> col:144 __copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b916d0 <col:157, col:169> col:169 __x 'long double'
| |-ParmVarDecl 0x563567b91750 <col:174, col:186> col:186 __y 'long double'
| |-NoThrowAttr 0x563567b918a0 <col:207>
| `-ConstAttr 0x563567b918f8 <col:238>
|-FunctionDecl 0x563567b91a08 <line:685:20> col:20 implicit nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x563567b91aa8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x563567b91b18 <col:20> Implicit
| `-PureAttr 0x563567b91b70 <col:20> Implicit
|-FunctionDecl 0x563567b91b98 prev 0x563567b91a08 <col:1, col:103> col:20 nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x563567b91938 <col:26, col:38> col:38 __tagb 'const char *'
| |-PureAttr 0x563567b91cc0 <col:20> Inherited Implicit
| |-NoThrowAttr 0x563567b91c40 <col:62>
| `-ConstAttr 0x563567b91c98 <col:93>
|-FunctionDecl 0x563567b91d98 <col:106, col:210> col:125 __nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x563567b91d00 <col:133, col:145> col:145 __tagb 'const char *'
| |-NoThrowAttr 0x563567b91e40 <col:169>
| `-ConstAttr 0x563567b91e98 <col:200>
|-FunctionDecl 0x563567b91f80 <line:691:1, col:100> col:12 used __isnanl 'int (long double)' extern
| |-ParmVarDecl 0x563567b91ed8 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x563567b92028 <col:59>
| `-ConstAttr 0x563567b92080 <col:90>
|-FunctionDecl 0x563567b92158 <line:695:1, col:98> col:12 isnanl 'int (long double)' extern
| |-ParmVarDecl 0x563567b920c0 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x563567b92200 <col:57>
| `-ConstAttr 0x563567b92258 <col:88>
|-FunctionDecl 0x563567b92330 <line:698:1, col:67> col:20 j0l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b92298 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x563567b923d8 <col:54>
|-FunctionDecl 0x563567b924e0 <col:70, col:138> col:89 __j0l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b92448 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x563567b92588 <col:125>
|-FunctionDecl 0x563567b92690 <line:699:1, col:67> col:20 j1l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b925f8 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x563567b92738 <col:54>
|-FunctionDecl 0x563567b92840 <col:70, col:138> col:89 __j1l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b927a8 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x563567b928e8 <col:125>
|-FunctionDecl 0x563567b92ab8 <line:700:1, col:72> col:20 jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x563567b92958 <col:25> col:28 'int'
| |-ParmVarDecl 0x563567b929d8 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x563567b92b68 <col:59>
|-FunctionDecl 0x563567b92cf8 <col:75, col:148> col:94 __jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x563567b92bd8 <col:101> col:104 'int'
| |-ParmVarDecl 0x563567b92c58 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x563567b92da8 <col:135>
|-FunctionDecl 0x563567b92eb0 <line:701:1, col:67> col:20 y0l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b92e18 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x563567b92f58 <col:54>
|-FunctionDecl 0x563567b94080 <col:70, col:138> col:89 __y0l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b93fe8 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x563567b94128 <col:125>
|-FunctionDecl 0x563567b94230 <line:702:1, col:67> col:20 y1l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b94198 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x563567b942d8 <col:54>
|-FunctionDecl 0x563567b943e0 <col:70, col:138> col:89 __y1l 'long double (long double)' extern
| |-ParmVarDecl 0x563567b94348 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x563567b94488 <col:125>
|-FunctionDecl 0x563567b94618 <line:703:1, col:72> col:20 ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x563567b944f8 <col:25> col:28 'int'
| |-ParmVarDecl 0x563567b94578 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x563567b946c8 <col:59>
|-FunctionDecl 0x563567b94858 <col:75, col:148> col:94 __ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x563567b94738 <col:101> col:104 'int'
| |-ParmVarDecl 0x563567b947b8 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x563567b94908 <col:135>
|-FunctionDecl 0x563567b94a10 <line:710:20> col:20 implicit erfl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b94ab0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b94b20 <col:20> Implicit
|-FunctionDecl 0x563567b94b78 prev 0x563567b94a10 <col:1, col:68> col:20 erfl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b94978 <col:26, col:31> col:37 'long double'
| `-NoThrowAttr 0x563567b94c20 <col:55>
|-FunctionDecl 0x563567b94d28 <col:71, col:140> col:90 __erfl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b94c90 <col:98, col:103> col:109 'long double'
| `-NoThrowAttr 0x563567b94dd0 <col:127>
|-FunctionDecl 0x563567b94ed8 <line:711:20> col:20 implicit erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b6fd90 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b6fe00 <col:20> Implicit
|-FunctionDecl 0x563567b6fe58 prev 0x563567b94ed8 <col:1, col:69> col:20 erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b94e40 <col:27, col:32> col:38 'long double'
| `-NoThrowAttr 0x563567b6ff00 <col:56>
|-FunctionDecl 0x563567b70008 <col:72, col:142> col:91 __erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b6ff70 <col:100, col:105> col:111 'long double'
| `-NoThrowAttr 0x563567b700b0 <col:129>
|-FunctionDecl 0x563567b701b8 <line:712:20> col:20 implicit lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x563567b70258 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b702c8 <col:20> Implicit
|-FunctionDecl 0x563567b70320 prev 0x563567b701b8 <col:1, col:71> col:20 lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x563567b70120 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x563567b703c8 <col:58>
|-FunctionDecl 0x563567b704d0 <col:74, col:146> col:93 __lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x563567b70438 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x563567b70578 <col:133>
|-FunctionDecl 0x563567b70680 <line:719:20> col:20 implicit tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x563567b70720 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b70790 <col:20> Implicit
|-FunctionDecl 0x563567b707e8 prev 0x563567b70680 <col:1, col:71> col:20 tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x563567b705e8 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x563567b70890 <col:58>
|-FunctionDecl 0x563567b70998 <col:74, col:146> col:93 __tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x563567b70900 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x563567b70a40 <col:133>
|-FunctionDecl 0x563567b70b48 <line:725:1, col:70> col:20 gammal 'long double (long double)' extern
| |-ParmVarDecl 0x563567b70ab0 <col:28, col:33> col:39 'long double'
| `-NoThrowAttr 0x563567b70bf0 <col:57>
|-FunctionDecl 0x563567b96fc0 <col:73, col:144> col:92 __gammal 'long double (long double)' extern
| |-ParmVarDecl 0x563567b70c60 <col:102, col:107> col:113 'long double'
| `-NoThrowAttr 0x563567b97068 <col:131>
|-FunctionDecl 0x563567b971f8 <line:732:1, col:90> col:20 lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x563567b970d8 <col:31, col:36> col:42 'long double'
| |-ParmVarDecl 0x563567b97158 <col:44, col:49> col:49 __signgamp 'int *'
| `-NoThrowAttr 0x563567b972a8 <col:77>
|-FunctionDecl 0x563567b97438 <col:93, col:184> col:112 __lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x563567b97318 <col:125, col:130> col:136 'long double'
| |-ParmVarDecl 0x563567b97398 <col:138, col:143> col:143 __signgamp 'int *'
| `-NoThrowAttr 0x563567b974e8 <col:171>
|-FunctionDecl 0x563567b975f0 <line:740:20> col:20 implicit rintl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b97690 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b97700 <col:20> Implicit
| `-ConstAttr 0x563567b97758 <col:20> Implicit
|-FunctionDecl 0x563567b97780 prev 0x563567b975f0 <col:1, col:73> col:20 rintl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b97558 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x563567b97880 <col:20> Inherited Implicit
| `-NoThrowAttr 0x563567b97828 <col:60>
|-FunctionDecl 0x563567b97958 <col:76, col:150> col:95 __rintl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b978c0 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x563567b97a00 <col:137>
|-FunctionDecl 0x563567b97b90 <line:743:20> col:20 implicit nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b97c30 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b97c98 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b97d10 <col:20> Implicit
|-FunctionDecl 0x563567b97d68 prev 0x563567b97b90 <col:1, col:123> col:20 nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b97a70 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x563567b97af0 <col:49, col:61> col:61 __y 'long double'
| |-NoThrowAttr 0x563567b97e18 <col:82>
| `-ConstAttr 0x563567b97e70 <col:113>
|-FunctionDecl 0x563567b98008 <col:126, col:250> col:145 __nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b97eb0 <col:159, col:171> col:171 __x 'long double'
| |-ParmVarDecl 0x563567b97f30 <col:176, col:188> col:188 __y 'long double'
| |-NoThrowAttr 0x563567b980b8 <col:209>
| `-ConstAttr 0x563567b98110 <col:240>
|-FunctionDecl 0x563567b98270 <line:745:20> col:20 implicit nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b98310 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b98378 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b983f0 <col:20> Implicit
|-FunctionDecl 0x563567b98448 prev 0x563567b98270 <col:1, col:124> col:20 nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b98150 <col:33, col:45> col:45 __x 'long double'
| |-ParmVarDecl 0x563567b981d0 <col:50, col:62> col:62 __y 'long double'
| |-NoThrowAttr 0x563567b984f8 <col:83>
| `-ConstAttr 0x563567b98550 <col:114>
|-FunctionDecl 0x563567b986b0 <col:127, col:252> col:146 __nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b98590 <col:161, col:173> col:173 __x 'long double'
| |-ParmVarDecl 0x563567b98610 <col:178, col:190> col:190 __y 'long double'
| |-NoThrowAttr 0x563567b98760 <col:211>
| `-ConstAttr 0x563567b987b8 <col:242>
|-FunctionDecl 0x563567b98918 <line:749:20> col:20 implicit remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b989b8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b98a20 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b98a98 <col:20> Implicit
|-FunctionDecl 0x563567b98af0 prev 0x563567b98918 <col:1, col:95> col:20 remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b987f8 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x563567b98878 <col:49, col:61> col:61 __y 'long double'
| `-NoThrowAttr 0x563567b98ba0 <col:82>
|-FunctionDecl 0x563567b98d30 <col:98, col:194> col:117 __remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b98c10 <col:131, col:143> col:143 __x 'long double'
| |-ParmVarDecl 0x563567b98c90 <col:148, col:160> col:160 __y 'long double'
| `-NoThrowAttr 0x563567b98de0 <col:181>
|-FunctionDecl 0x563567b98fe0 <line:753:20> col:20 implicit scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x563567b99080 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b990e8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x563567b99160 <col:20> Implicit
|-FunctionDecl 0x563567b991b8 prev 0x563567b98fe0 <col:1, col:84> col:20 scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x563567b98e50 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x563567b98ed0 <col:46, col:50> col:50 __n 'int'
| `-NoThrowAttr 0x563567b99268 <col:71>
|-FunctionDecl 0x563567b993f8 <col:87, col:172> col:106 __scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x563567b992d8 <col:117, col:129> col:129 __x 'long double'
| |-ParmVarDecl 0x563567b99358 <col:134, col:138> col:138 __n 'int'
| `-NoThrowAttr 0x563567b994a8 <col:159>
|-FunctionDecl 0x563567b995b0 <line:757:12> col:12 implicit ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x563567b99650 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b996c0 <col:12> Implicit
|-FunctionDecl 0x563567b99718 prev 0x563567b995b0 <col:1, col:66> col:12 ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x563567b99518 <col:20, col:32> col:32 __x 'long double'
| `-NoThrowAttr 0x563567b997c0 <col:53>
|-FunctionDecl 0x563567b998c8 <col:69, col:136> col:80 __ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x563567b99830 <col:90, col:102> col:102 __x 'long double'
| `-NoThrowAttr 0x563567b99970 <col:123>
|-FunctionDecl 0x563567b99b48 <line:762:20> col:20 implicit scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x563567b99be8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b99c50 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x563567b99cc8 <col:20> Implicit
|-FunctionDecl 0x563567b99d20 prev 0x563567b99b48 <col:1, col:90> col:20 scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x563567b999e0 <col:30, col:42> col:42 __x 'long double'
| |-ParmVarDecl 0x563567b99a60 <col:47, col:56> col:56 __n 'long'
| `-NoThrowAttr 0x563567b99dd0 <col:77>
|-FunctionDecl 0x563567b99ff0 <col:93, col:184> col:112 __scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x563567b99e40 <col:124, col:136> col:136 __x 'long double'
| |-ParmVarDecl 0x563567b99ec0 <col:141, col:150> col:150 __n 'long'
| `-NoThrowAttr 0x563567b9a0a0 <col:171>
|-FunctionDecl 0x563567b9a1a8 <line:766:20> col:20 implicit nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b9a248 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b9a2b8 <col:20> Implicit
| `-ConstAttr 0x563567b9a310 <col:20> Implicit
|-FunctionDecl 0x563567b9a338 prev 0x563567b9a1a8 <col:1, col:78> col:20 nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b9a110 <col:32, col:44> col:44 __x 'long double'
| |-ConstAttr 0x563567b9a438 <col:20> Inherited Implicit
| `-NoThrowAttr 0x563567b9a3e0 <col:65>
|-FunctionDecl 0x563567b9a510 <col:81, col:160> col:100 __nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b9a478 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x563567b9a5b8 <col:147>
|-FunctionDecl 0x563567b9a6c0 <line:770:20> col:20 implicit roundl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b9a760 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b9a7d0 <col:20> Implicit
| `-ConstAttr 0x563567b9a828 <col:20> Implicit
|-FunctionDecl 0x563567b9a850 prev 0x563567b9a6c0 <col:1, col:102> col:20 roundl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b9a628 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x563567b9a8f8 <col:61>
| `-ConstAttr 0x563567b9a950 <col:92>
|-FunctionDecl 0x563567b9aa28 <col:105, col:208> col:124 __roundl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b9a990 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x563567b9aad0 <col:167>
| `-ConstAttr 0x563567b9ab28 <col:198>
|-FunctionDecl 0x563567b9ac00 <line:774:20> col:20 implicit truncl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b9aca0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b9ad10 <col:20> Implicit
| `-ConstAttr 0x563567b9ad68 <col:20> Implicit
|-FunctionDecl 0x563567b9ad90 prev 0x563567b9ac00 <col:1, col:102> col:20 truncl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b9ab68 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x563567b9ae38 <col:61>
| `-ConstAttr 0x563567b9ae90 <col:92>
|-FunctionDecl 0x563567b9b000 <col:105, col:208> col:124 __truncl 'long double (long double)' extern
| |-ParmVarDecl 0x563567b9aed0 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x563567b9b0a8 <col:167>
| `-ConstAttr 0x563567b9b100 <col:198>
|-FunctionDecl 0x563567b9b338 <line:779:20> col:20 implicit remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x563567b9b3d8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b9b440 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b9b4a8 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x563567b9b528 <col:20> Implicit
|-FunctionDecl 0x563567b9b580 prev 0x563567b9b338 <col:1, col:104> col:20 remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x563567b9b140 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x563567b9b1c0 <col:46, col:58> col:58 __y 'long double'
| |-ParmVarDecl 0x563567b9b240 <col:63, col:68> col:68 __quo 'int *'
| `-NoThrowAttr 0x563567b9b638 <col:91>
|-FunctionDecl 0x563567b9b850 <col:107, col:212> col:126 __remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x563567b9b6a8 <col:137, col:149> col:149 __x 'long double'
| |-ParmVarDecl 0x563567b9b728 <col:154, col:166> col:166 __y 'long double'
| |-ParmVarDecl 0x563567b9b7a8 <col:171, col:176> col:176 __quo 'int *'
| `-NoThrowAttr 0x563567b9b908 <col:199>
|-FunctionDecl 0x563567b9ba48 <line:786:17> col:17 implicit lrintl 'long (long double)' extern
| |-ParmVarDecl 0x563567b9bae8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b9bb58 <col:17> Implicit
|-FunctionDecl 0x563567b9bbb0 prev 0x563567b9ba48 <col:1, col:71> col:17 lrintl 'long (long double)' extern
| |-ParmVarDecl 0x563567b9b978 <col:25, col:37> col:37 __x 'long double'
| `-NoThrowAttr 0x563567b9bc58 <col:58>
|-FunctionDecl 0x563567b9bd60 <col:74, col:146> col:90 __lrintl 'long (long double)' extern
| |-ParmVarDecl 0x563567b9bcc8 <col:100, col:112> col:112 __x 'long double'
| `-NoThrowAttr 0x563567b9be08 <col:133>
|-FunctionDecl 0x563567b9bf48 <line:788:22> col:22 implicit llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x563567b9c010 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b9c080 <col:22> Implicit
|-FunctionDecl 0x563567b9c0d8 prev 0x563567b9bf48 <col:1, col:77> col:22 llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x563567b9be78 <col:31, col:43> col:43 __x 'long double'
| `-NoThrowAttr 0x563567b9c180 <col:64>
|-FunctionDecl 0x563567b9c288 <col:80, col:158> col:101 __llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x563567b9c1f0 <col:112, col:124> col:124 __x 'long double'
| `-NoThrowAttr 0x563567b9c330 <col:145>
|-FunctionDecl 0x563567b9c438 <line:792:17> col:17 implicit lroundl 'long (long double)' extern
| |-ParmVarDecl 0x563567b9c4d8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b9c548 <col:17> Implicit
|-FunctionDecl 0x563567b9c5a0 prev 0x563567b9c438 <col:1, col:72> col:17 lroundl 'long (long double)' extern
| |-ParmVarDecl 0x563567b9c3a0 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x563567b9c648 <col:59>
|-FunctionDecl 0x563567b9c750 <col:75, col:148> col:91 __lroundl 'long (long double)' extern
| |-ParmVarDecl 0x563567b9c6b8 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x563567b9c7f8 <col:135>
|-FunctionDecl 0x563567b9c900 <line:794:22> col:22 implicit llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x563567b9c9a0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b9ca10 <col:22> Implicit
|-FunctionDecl 0x563567b9ca68 prev 0x563567b9c900 <col:1, col:78> col:22 llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x563567b9c868 <col:32, col:44> col:44 __x 'long double'
| `-NoThrowAttr 0x563567b9cb10 <col:65>
|-FunctionDecl 0x563567b9cc18 <col:81, col:160> col:102 __llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x563567b9cb80 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x563567b9ccc0 <col:147>
|-FunctionDecl 0x563567b9ce50 <line:798:20> col:20 implicit fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b9cef0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b9cf58 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x563567b9cfd0 <col:20> Implicit
|-FunctionDecl 0x563567b9d050 prev 0x563567b9ce50 <col:1, col:90> col:20 fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b9cd30 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x563567b9cdb0 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x563567b9d100 <col:77>
|-FunctionDecl 0x563567b9d290 <col:93, col:184> col:112 __fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b9d170 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x563567b9d1f0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x563567b9d340 <col:171>
|-FunctionDecl 0x563567b9d4d0 <line:801:20> col:20 implicit fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b9d570 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b9d5d8 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b9d650 <col:20> Implicit
| `-ConstAttr 0x563567b9d6a8 <col:20> Implicit
|-FunctionDecl 0x563567b9d6d0 prev 0x563567b9d4d0 <col:1, col:118> col:20 fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b9d3b0 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x563567b9d430 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x563567b9d780 <col:77>
| `-ConstAttr 0x563567b9d7d8 <col:108>
|-FunctionDecl 0x563567b9d938 <col:121, col:240> col:140 __fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b9d818 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x563567b9d898 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x563567b9d9e8 <col:199>
| `-ConstAttr 0x563567b9da40 <col:230>
|-FunctionDecl 0x563567b9dba0 <line:804:20> col:20 implicit fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b9dc40 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b9dca8 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x563567b9dd20 <col:20> Implicit
| `-ConstAttr 0x563567b9dd78 <col:20> Implicit
|-FunctionDecl 0x563567b9dda0 prev 0x563567b9dba0 <col:1, col:118> col:20 fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b9da80 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x563567b9db00 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x563567b9de50 <col:77>
| `-ConstAttr 0x563567b9dea8 <col:108>
|-FunctionDecl 0x563567b9e030 <col:121, col:240> col:140 __fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b9dee8 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x563567b9df68 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x563567b9e0e0 <col:199>
| `-ConstAttr 0x563567b9e138 <col:230>
|-FunctionDecl 0x563567b9e210 <line:808:1, line:809:32> line:808:12 __fpclassifyl 'int (long double)' extern
| |-ParmVarDecl 0x563567b9e178 <col:27, col:39> col:39 __value 'long double'
| |-NoThrowAttr 0x563567b9e2b8 <col:64>
| `-ConstAttr 0x563567b9e310 <line:809:22>
|-FunctionDecl 0x563567b9e3e8 <line:812:1, line:813:32> line:812:12 used __signbitl 'int (long double)' extern
| |-ParmVarDecl 0x563567b9e350 <col:24, col:36> col:36 __value 'long double'
| |-NoThrowAttr 0x563567b9e490 <col:61>
| `-ConstAttr 0x563567b9e4e8 <line:813:22>
|-FunctionDecl 0x563567b9e718 <line:817:20> col:20 implicit fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x563567b9e7b8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b9e820 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x563567b9e888 <<invalid sloc>> <invalid sloc> 'long double'
| |-ConstAttr 0x563567b9e908 <col:20> Implicit
| `-NoThrowAttr 0x563567b9e960 <col:20> Implicit
|-FunctionDecl 0x563567b9e988 prev 0x563567b9e718 <col:1, col:106> col:20 fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x563567b9e528 <col:26, col:38> col:38 __x 'long double'
| |-ParmVarDecl 0x563567b9e5a8 <col:43, col:55> col:55 __y 'long double'
| |-ParmVarDecl 0x563567b9e628 <col:60, col:72> col:72 __z 'long double'
| |-ConstAttr 0x563567b9ea98 <col:20> Inherited Implicit
| `-NoThrowAttr 0x563567b9ea40 <col:93>
|-FunctionDecl 0x563567b9ec80 <col:109, col:216> col:128 __fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x563567b9ead8 <col:136, col:148> col:148 __x 'long double'
| |-ParmVarDecl 0x563567b9eb58 <col:153, col:165> col:165 __y 'long double'
| |-ParmVarDecl 0x563567b9ebd8 <col:170, col:182> col:182 __z 'long double'
| `-NoThrowAttr 0x563567b9ed38 <col:203>
|-FunctionDecl 0x563567b9eec8 <line:818:1, col:91> col:20 scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b9eda8 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x563567b9ee28 <col:45, col:57> col:57 __n 'long double'
| `-NoThrowAttr 0x563567b9ef78 <col:78>
|-FunctionDecl 0x563567b9f160 <col:94, col:186> col:113 __scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x563567b9f040 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x563567b9f0c0 <col:140, col:152> col:152 __n 'long double'
| `-NoThrowAttr 0x563567b9f210 <col:173>
|-VarDecl 0x563567b9f280 <line:819:1, col:12> col:12 signgam 'int' extern
|-EnumDecl 0x563567b9f2e8 <line:820:1, line:837:3> line:820:1
| |-EnumConstantDecl 0x563567b9f3f0 <line:822:5, line:824:7> line:822:5 FP_NAN 'int'
| | `-ConstantExpr 0x563567b9f3d8 <line:824:7> 'int'
| |   `-IntegerLiteral 0x563567b9f3b8 <col:7> 'int' 0
| |-EnumConstantDecl 0x563567b9f478 <line:825:5, line:827:7> line:825:5 FP_INFINITE 'int'
| | `-ConstantExpr 0x563567b9f460 <line:827:7> 'int'
| |   `-IntegerLiteral 0x563567b9f440 <col:7> 'int' 1
| |-EnumConstantDecl 0x563567b9f500 <line:828:5, line:830:7> line:828:5 FP_ZERO 'int'
| | `-ConstantExpr 0x563567b9f4e8 <line:830:7> 'int'
| |   `-IntegerLiteral 0x563567b9f4c8 <col:7> 'int' 2
| |-EnumConstantDecl 0x563567b9f588 <line:831:5, line:833:7> line:831:5 FP_SUBNORMAL 'int'
| | `-ConstantExpr 0x563567b9f570 <line:833:7> 'int'
| |   `-IntegerLiteral 0x563567b9f550 <col:7> 'int' 3
| `-EnumConstantDecl 0x563567b9f610 <line:834:5, line:836:7> line:834:5 FP_NORMAL 'int'
|   `-ConstantExpr 0x563567b9f5f8 <line:836:7> 'int'
|     `-IntegerLiteral 0x563567b9f5d8 <col:7> 'int' 4
|-EnumDecl 0x563567b9f660 <line:838:9, line:845:1> line:838:9
| |-EnumConstantDecl 0x563567b9f778 <line:840:3, col:13> col:3 _IEEE_ 'int'
| | `-ConstantExpr 0x563567b9f760 <col:12, col:13> 'int'
| |   `-UnaryOperator 0x563567b9f748 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x563567b9f728 <col:13> 'int' 1
| |-EnumConstantDecl 0x563567b9f7c8 <line:841:3> col:3 _SVID_ 'int'
| |-EnumConstantDecl 0x563567b9f818 <line:842:3> col:3 _XOPEN_ 'int'
| |-EnumConstantDecl 0x563567b9f868 <line:843:3> col:3 _POSIX_ 'int'
| `-EnumConstantDecl 0x563567b9f8b8 <line:844:3> col:3 _ISOC_ 'int'
|-TypedefDecl 0x563567b9f970 <line:838:1, line:845:3> col:3 referenced _LIB_VERSION_TYPE 'enum _LIB_VERSION_TYPE':'_LIB_VERSION_TYPE'
| `-ElaboratedType 0x563567b9f910 'enum _LIB_VERSION_TYPE' sugar
|   `-EnumType 0x563567b9f700 '_LIB_VERSION_TYPE'
|     `-Enum 0x563567b9f660 ''
|-VarDecl 0x563567b9fa18 <line:850:1, col:26> col:26 _LIB_VERSION '_LIB_VERSION_TYPE':'_LIB_VERSION_TYPE' extern
|-RecordDecl 0x563567b9fa80 <line:851:1, line:859:3> line:851:8 struct exception definition
| |-FieldDecl 0x563567b9fb40 <line:854:5, col:9> col:9 type 'int'
| |-FieldDecl 0x563567b9fba8 <line:855:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x563567b9fc10 <line:856:5, col:12> col:12 arg1 'double'
| |-FieldDecl 0x563567b9fc78 <line:857:5, col:12> col:12 arg2 'double'
| `-FieldDecl 0x563567b9fce0 <line:858:5, col:12> col:12 retval 'double'
|-FunctionDecl 0x563567b9ff08 <line:864:1, col:44> col:12 matherr 'int (struct exception *)' extern
| `-ParmVarDecl 0x563567b9fdf8 <col:21, col:39> col:39 __exc 'struct exception *'
|-FunctionDecl 0x563567ba0050 <line:866:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x563567ba01d0 <line:867:1, col:88> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x563567ba0108 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x563567ba0420 <col:34, col:88>
|   |-IfStmt 0x563567ba03f8 <col:36, col:78>
|   | |-UnaryOperator 0x563567ba02d0 <col:40, col:46> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x563567ba02b8 <col:41, col:46> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x563567ba0298 <col:41, col:46> 'int' lvalue
|   | |     `-DeclRefExpr 0x563567ba0278 <col:42> 'int' lvalue ParmVar 0x563567ba0108 'cond' 'int'
|   | `-CompoundStmt 0x563567ba03e0 <col:49, col:78>
|   |   `-LabelStmt 0x563567ba03c8 <col:51, col:75> 'ERROR'
|   |     `-CallExpr 0x563567ba0358 <col:58, col:75> 'void'
|   |       `-ImplicitCastExpr 0x563567ba0340 <col:58> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x563567ba02e8 <col:58> 'void () __attribute__((noreturn))' Function 0x563567ba0050 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x563567ba0410 <col:80>
|-FunctionDecl 0x563567ba0518 <line:869:1, line:885:1> line:869:5 main 'int (void)'
| `-CompoundStmt 0x563567ba34d8 <line:870:1, line:885:1>
|   |-CallExpr 0x563567ba07b8 <line:872:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x563567ba07a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563567ba05f0 <col:3> 'void (int)' Function 0x563567ba01d0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x563567ba0750 <col:21, col:44> 'int' '=='
|   |   |-CallExpr 0x563567ba06b8 <col:21, col:38> 'double'
|   |   | |-ImplicitCastExpr 0x563567ba06a0 <col:21> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x563567ba0610 <col:21> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)'
|   |   | |-ImplicitCastExpr 0x563567ba06e8 <col:31> 'double' <FloatingCast>
|   |   | | `-FloatingLiteral 0x563567ba0630 <col:31> 'float' 5.100000e+00
|   |   | `-ImplicitCastExpr 0x563567ba0700 <col:37> 'double' <IntegralToFloating>
|   |   |   `-IntegerLiteral 0x563567ba0650 <col:37> 'int' 3
|   |   `-UnaryOperator 0x563567ba0738 <col:43, col:44> 'double' prefix '-'
|   |     `-FloatingLiteral 0x563567ba0718 <col:44> 'double' 9.000001e-01
|   |-CallExpr 0x563567ba0960 <line:873:3, col:57> 'void'
|   | |-ImplicitCastExpr 0x563567ba0948 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563567ba07e0 <col:3> 'void (int)' Function 0x563567ba01d0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x563567ba0928 <col:21, col:45> 'int' '=='
|   |   |-CallExpr 0x563567ba0890 <col:21, col:39> 'double'
|   |   | |-ImplicitCastExpr 0x563567ba0878 <col:21> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x563567ba0800 <col:21> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)'
|   |   | |-ImplicitCastExpr 0x563567ba08c0 <col:31> 'double' <FloatingCast>
|   |   | | `-FloatingLiteral 0x563567ba0820 <col:31> 'float' 5.100000e+00
|   |   | `-ImplicitCastExpr 0x563567ba08d8 <col:37, col:38> 'double' <IntegralToFloating>
|   |   |   `-UnaryOperator 0x563567ba0860 <col:37, col:38> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x563567ba0840 <col:38> 'int' 3
|   |   `-UnaryOperator 0x563567ba0910 <col:44, col:45> 'double' prefix '-'
|   |     `-FloatingLiteral 0x563567ba08f0 <col:45> 'double' 9.000001e-01
|   |-CallExpr 0x563567ba0b08 <line:874:3, col:57> 'void'
|   | |-ImplicitCastExpr 0x563567ba0af0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563567ba0988 <col:3> 'void (int)' Function 0x563567ba01d0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x563567ba0ad0 <col:21, col:45> 'int' '=='
|   |   |-CallExpr 0x563567ba0a50 <col:21, col:40> 'double'
|   |   | |-ImplicitCastExpr 0x563567ba0a38 <col:21> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x563567ba09a8 <col:21> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)'
|   |   | |-ImplicitCastExpr 0x563567ba0a80 <col:31, col:32> 'double' <FloatingCast>
|   |   | | `-UnaryOperator 0x563567ba09e8 <col:31, col:32> 'float' prefix '-'
|   |   | |   `-FloatingLiteral 0x563567ba09c8 <col:32> 'float' 5.100000e+00
|   |   | `-ImplicitCastExpr 0x563567ba0a98 <col:38, col:39> 'double' <IntegralToFloating>
|   |   |   `-UnaryOperator 0x563567ba0a20 <col:38, col:39> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x563567ba0a00 <col:39> 'int' 3
|   |   `-FloatingLiteral 0x563567ba0ab0 <col:45> 'double' 9.000001e-01
|   |-CallExpr 0x563567ba0c98 <line:875:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x563567ba0c80 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563567ba0b30 <col:3> 'void (int)' Function 0x563567ba01d0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x563567ba0c60 <col:21, col:44> 'int' '=='
|   |   |-CallExpr 0x563567ba0be0 <col:21, col:39> 'double'
|   |   | |-ImplicitCastExpr 0x563567ba0bc8 <col:21> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x563567ba0b50 <col:21> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)'
|   |   | |-ImplicitCastExpr 0x563567ba0c10 <col:31, col:32> 'double' <FloatingCast>
|   |   | | `-UnaryOperator 0x563567ba0b90 <col:31, col:32> 'float' prefix '-'
|   |   | |   `-FloatingLiteral 0x563567ba0b70 <col:32> 'float' 5.100000e+00
|   |   | `-ImplicitCastExpr 0x563567ba0c28 <col:38> 'double' <IntegralToFloating>
|   |   |   `-IntegerLiteral 0x563567ba0ba8 <col:38> 'int' 3
|   |   `-FloatingLiteral 0x563567ba0c40 <col:44> 'double' 9.000001e-01
|   |-DeclStmt 0x563567ba0e00 <line:877:3, col:33>
|   | `-VarDecl 0x563567ba0cd8 <col:3, col:32> col:10 used rem 'double' cinit
|   |   `-CallExpr 0x563567ba0db8 <col:16, col:32> 'double'
|   |     |-ImplicitCastExpr 0x563567ba0da0 <col:16> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563567ba0d40 <col:16> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)'
|   |     |-FloatingLiteral 0x563567ba0d60 <col:26> 'double' 0.000000e+00
|   |     `-ImplicitCastExpr 0x563567ba0de8 <col:31> 'double' <IntegralToFloating>
|   |       `-IntegerLiteral 0x563567ba0d80 <col:31> 'int' 1
|   |-CallExpr 0x563567ba2400 <line:878:3, col:162> 'void'
|   | |-ImplicitCastExpr 0x563567ba23e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563567ba0e18 <col:3> 'void (int)' Function 0x563567ba01d0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x563567ba23c8 <col:21, col:161> 'int' '&&'
|   |   |-ParenExpr 0x563567ba0eb0 <col:21, col:32> 'int'
|   |   | `-BinaryOperator 0x563567ba0e90 <col:22, col:29> 'int' '=='
|   |   |   |-ImplicitCastExpr 0x563567ba0e78 <col:22> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x563567ba0e38 <col:22> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double'
|   |   |   `-FloatingLiteral 0x563567ba0e58 <col:29> 'double' 0.000000e+00
|   |   `-ParenExpr 0x563567ba23a8 <col:37, col:161> 'int'
|   |     `-UnaryOperator 0x563567ba2390 <col:38, col:160> 'int' prefix '!' cannot overflow
|   |       `-ParenExpr 0x563567ba2370 <col:39, col:160> 'int'
|   |         `-ConditionalOperator 0x563567ba2340 <col:40, col:159> 'int'
|   |           |-BinaryOperator 0x563567ba0f68 <col:40, col:69> 'int' '=='
|   |           | |-UnaryExprOrTypeTraitExpr 0x563567ba0f10 <col:40, col:51> 'unsigned long' sizeof
|   |           | | `-ParenExpr 0x563567ba0ef0 <col:47, col:51> 'double' lvalue
|   |           | |   `-DeclRefExpr 0x563567ba0ed0 <col:48> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double' non_odr_use_unevaluated
|   |           | `-UnaryExprOrTypeTraitExpr 0x563567ba0f48 <col:56, col:69> 'unsigned long' sizeof 'float'
|   |           |-CallExpr 0x563567ba1018 <col:73, col:88> 'int'
|   |           | |-ImplicitCastExpr 0x563567ba1000 <col:73> 'int (*)(float)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x563567ba0f88 <col:73> 'int (float)' Function 0x563567b846f8 '__signbitf' 'int (float)'
|   |           | `-ImplicitCastExpr 0x563567ba2088 <col:85> 'float' <FloatingCast>
|   |           |   `-ImplicitCastExpr 0x563567ba2070 <col:85> 'double' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563567ba0fa8 <col:85> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double'
|   |           `-ConditionalOperator 0x563567ba2310 <col:92, col:159> 'int'
|   |             |-BinaryOperator 0x563567ba2138 <col:92, col:122> 'int' '=='
|   |             | |-UnaryExprOrTypeTraitExpr 0x563567ba20e0 <col:92, col:103> 'unsigned long' sizeof
|   |             | | `-ParenExpr 0x563567ba20c0 <col:99, col:103> 'double' lvalue
|   |             | |   `-DeclRefExpr 0x563567ba20a0 <col:100> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double' non_odr_use_unevaluated
|   |             | `-UnaryExprOrTypeTraitExpr 0x563567ba2118 <col:108, col:122> 'unsigned long' sizeof 'double'
|   |             |-CallExpr 0x563567ba21e8 <col:126, col:140> 'int'
|   |             | |-ImplicitCastExpr 0x563567ba21d0 <col:126> 'int (*)(double)' <FunctionToPointerDecay>
|   |             | | `-DeclRefExpr 0x563567ba2158 <col:126> 'int (double)' Function 0x563567b59920 '__signbit' 'int (double)'
|   |             | `-ImplicitCastExpr 0x563567ba2210 <col:137> 'double' <LValueToRValue>
|   |             |   `-DeclRefExpr 0x563567ba2178 <col:137> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double'
|   |             `-CallExpr 0x563567ba22b8 <col:144, col:159> 'int'
|   |               |-ImplicitCastExpr 0x563567ba22a0 <col:144> 'int (*)(long double)' <FunctionToPointerDecay>
|   |               | `-DeclRefExpr 0x563567ba2228 <col:144> 'int (long double)' Function 0x563567b9e3e8 '__signbitl' 'int (long double)'
|   |               `-ImplicitCastExpr 0x563567ba22f8 <col:156> 'long double' <FloatingCast>
|   |                 `-ImplicitCastExpr 0x563567ba22e0 <col:156> 'double' <LValueToRValue>
|   |                   `-DeclRefExpr 0x563567ba2248 <col:156> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double'
|   |-BinaryOperator 0x563567ba2520 <line:880:3, col:25> 'double' '='
|   | |-DeclRefExpr 0x563567ba2428 <col:3> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double'
|   | `-CallExpr 0x563567ba24d8 <col:9, col:25> 'double'
|   |   |-ImplicitCastExpr 0x563567ba24c0 <col:9> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x563567ba2448 <col:9> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)'
|   |   |-UnaryOperator 0x563567ba2488 <col:19, col:20> 'double' prefix '-'
|   |   | `-FloatingLiteral 0x563567ba2468 <col:20> 'double' 0.000000e+00
|   |   `-ImplicitCastExpr 0x563567ba2508 <col:24> 'double' <IntegralToFloating>
|   |     `-IntegerLiteral 0x563567ba24a0 <col:24> 'int' 1
|   |-CallExpr 0x563567ba2a38 <line:881:3, col:161> 'void'
|   | |-ImplicitCastExpr 0x563567ba2a20 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563567ba2540 <col:3> 'void (int)' Function 0x563567ba01d0 '__VERIFIER_assert' 'void (int)'
|   | `-BinaryOperator 0x563567ba2a00 <col:21, col:160> 'int' '&&'
|   |   |-ParenExpr 0x563567ba25d8 <col:21, col:32> 'int'
|   |   | `-BinaryOperator 0x563567ba25b8 <col:22, col:29> 'int' '=='
|   |   |   |-ImplicitCastExpr 0x563567ba25a0 <col:22> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x563567ba2560 <col:22> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double'
|   |   |   `-FloatingLiteral 0x563567ba2580 <col:29> 'double' 0.000000e+00
|   |   `-ParenExpr 0x563567ba29e0 <col:37, col:160> 'int'
|   |     `-ParenExpr 0x563567ba29c0 <col:38, col:159> 'int'
|   |       `-ConditionalOperator 0x563567ba2990 <col:39, col:158> 'int'
|   |         |-BinaryOperator 0x563567ba2690 <col:39, col:68> 'int' '=='
|   |         | |-UnaryExprOrTypeTraitExpr 0x563567ba2638 <col:39, col:50> 'unsigned long' sizeof
|   |         | | `-ParenExpr 0x563567ba2618 <col:46, col:50> 'double' lvalue
|   |         | |   `-DeclRefExpr 0x563567ba25f8 <col:47> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double' non_odr_use_unevaluated
|   |         | `-UnaryExprOrTypeTraitExpr 0x563567ba2670 <col:55, col:68> 'unsigned long' sizeof 'float'
|   |         |-CallExpr 0x563567ba2708 <col:72, col:87> 'int'
|   |         | |-ImplicitCastExpr 0x563567ba26f0 <col:72> 'int (*)(float)' <FunctionToPointerDecay>
|   |         | | `-DeclRefExpr 0x563567ba26b0 <col:72> 'int (float)' Function 0x563567b846f8 '__signbitf' 'int (float)'
|   |         | `-ImplicitCastExpr 0x563567ba2748 <col:84> 'float' <FloatingCast>
|   |         |   `-ImplicitCastExpr 0x563567ba2730 <col:84> 'double' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x563567ba26d0 <col:84> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double'
|   |         `-ConditionalOperator 0x563567ba2960 <col:91, col:158> 'int'
|   |           |-BinaryOperator 0x563567ba27f8 <col:91, col:121> 'int' '=='
|   |           | |-UnaryExprOrTypeTraitExpr 0x563567ba27a0 <col:91, col:102> 'unsigned long' sizeof
|   |           | | `-ParenExpr 0x563567ba2780 <col:98, col:102> 'double' lvalue
|   |           | |   `-DeclRefExpr 0x563567ba2760 <col:99> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double' non_odr_use_unevaluated
|   |           | `-UnaryExprOrTypeTraitExpr 0x563567ba27d8 <col:107, col:121> 'unsigned long' sizeof 'double'
|   |           |-CallExpr 0x563567ba2870 <col:125, col:139> 'int'
|   |           | |-ImplicitCastExpr 0x563567ba2858 <col:125> 'int (*)(double)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x563567ba2818 <col:125> 'int (double)' Function 0x563567b59920 '__signbit' 'int (double)'
|   |           | `-ImplicitCastExpr 0x563567ba2898 <col:136> 'double' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x563567ba2838 <col:136> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double'
|   |           `-CallExpr 0x563567ba2908 <col:143, col:158> 'int'
|   |             |-ImplicitCastExpr 0x563567ba28f0 <col:143> 'int (*)(long double)' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x563567ba28b0 <col:143> 'int (long double)' Function 0x563567b9e3e8 '__signbitl' 'int (long double)'
|   |             `-ImplicitCastExpr 0x563567ba2948 <col:155> 'long double' <FloatingCast>
|   |               `-ImplicitCastExpr 0x563567ba2930 <col:155> 'double' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563567ba28d0 <col:155> 'double' lvalue Var 0x563567ba0cd8 'rem' 'double'
|   |-CallExpr 0x563567ba3170 <line:883:3, col:207> 'void'
|   | |-ImplicitCastExpr 0x563567ba3158 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563567ba2a60 <col:3> 'void (int)' Function 0x563567ba01d0 '__VERIFIER_assert' 'void (int)'
|   | `-ParenExpr 0x563567ba3138 <col:21, col:206> 'int'
|   |   `-ConditionalOperator 0x563567ba3108 <col:22, col:205> 'int'
|   |     |-BinaryOperator 0x563567ba2bb8 <col:22, col:65> 'int' '=='
|   |     | |-UnaryExprOrTypeTraitExpr 0x563567ba2b60 <col:22, col:47> 'unsigned long' sizeof
|   |     | | `-ParenExpr 0x563567ba2b40 <col:29, col:47> 'double'
|   |     | |   `-CallExpr 0x563567ba2af8 <col:30, col:46> 'double'
|   |     | |     |-ImplicitCastExpr 0x563567ba2ae0 <col:30> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |     | |     | `-DeclRefExpr 0x563567ba2a80 <col:30> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)' non_odr_use_unevaluated
|   |     | |     |-FloatingLiteral 0x563567ba2aa0 <col:40> 'double' 5.100000e+00
|   |     | |     `-ImplicitCastExpr 0x563567ba2b28 <col:45> 'double' <IntegralToFloating>
|   |     | |       `-IntegerLiteral 0x563567ba2ac0 <col:45> 'int' 0
|   |     | `-UnaryExprOrTypeTraitExpr 0x563567ba2b98 <col:52, col:65> 'unsigned long' sizeof 'float'
|   |     |-CallExpr 0x563567ba2cd0 <col:69, col:96> 'int'
|   |     | |-ImplicitCastExpr 0x563567ba2cb8 <col:69> 'int (*)(float)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x563567ba2bd8 <col:69> 'int (float)' Function 0x563567b762b8 '__isnanf' 'int (float)'
|   |     | `-ImplicitCastExpr 0x563567ba2cf8 <col:79, col:95> 'float' <FloatingCast>
|   |     |   `-CallExpr 0x563567ba2c70 <col:79, col:95> 'double'
|   |     |     |-ImplicitCastExpr 0x563567ba2c58 <col:79> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |     |     | `-DeclRefExpr 0x563567ba2bf8 <col:79> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)'
|   |     |     |-FloatingLiteral 0x563567ba2c18 <col:89> 'double' 5.100000e+00
|   |     |     `-ImplicitCastExpr 0x563567ba2ca0 <col:94> 'double' <IntegralToFloating>
|   |     |       `-IntegerLiteral 0x563567ba2c38 <col:94> 'int' 0
|   |     `-ConditionalOperator 0x563567ba30d8 <col:100, col:205> 'int'
|   |       |-BinaryOperator 0x563567ba2e48 <col:100, col:144> 'int' '=='
|   |       | |-UnaryExprOrTypeTraitExpr 0x563567ba2df0 <col:100, col:125> 'unsigned long' sizeof
|   |       | | `-ParenExpr 0x563567ba2dd0 <col:107, col:125> 'double'
|   |       | |   `-CallExpr 0x563567ba2d88 <col:108, col:124> 'double'
|   |       | |     |-ImplicitCastExpr 0x563567ba2d70 <col:108> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |       | |     | `-DeclRefExpr 0x563567ba2d10 <col:108> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)' non_odr_use_unevaluated
|   |       | |     |-FloatingLiteral 0x563567ba2d30 <col:118> 'double' 5.100000e+00
|   |       | |     `-ImplicitCastExpr 0x563567ba2db8 <col:123> 'double' <IntegralToFloating>
|   |       | |       `-IntegerLiteral 0x563567ba2d50 <col:123> 'int' 0
|   |       | `-UnaryExprOrTypeTraitExpr 0x563567ba2e28 <col:130, col:144> 'unsigned long' sizeof 'double'
|   |       |-CallExpr 0x563567ba2f60 <col:148, col:174> 'int'
|   |       | |-ImplicitCastExpr 0x563567ba2f48 <col:148> 'int (*)(double)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x563567ba2e68 <col:148> 'int (double)' Function 0x563567b5b640 '__isnan' 'int (double)'
|   |       | `-CallExpr 0x563567ba2f00 <col:157, col:173> 'double'
|   |       |   |-ImplicitCastExpr 0x563567ba2ee8 <col:157> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x563567ba2e88 <col:157> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)'
|   |       |   |-FloatingLiteral 0x563567ba2ea8 <col:167> 'double' 5.100000e+00
|   |       |   `-ImplicitCastExpr 0x563567ba2f30 <col:172> 'double' <IntegralToFloating>
|   |       |     `-IntegerLiteral 0x563567ba2ec8 <col:172> 'int' 0
|   |       `-CallExpr 0x563567ba3098 <col:178, col:205> 'int'
|   |         |-ImplicitCastExpr 0x563567ba3080 <col:178> 'int (*)(long double)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x563567ba2f88 <col:178> 'int (long double)' Function 0x563567b91f80 '__isnanl' 'int (long double)'
|   |         `-ImplicitCastExpr 0x563567ba30c0 <col:188, col:204> 'long double' <FloatingCast>
|   |           `-CallExpr 0x563567ba3020 <col:188, col:204> 'double'
|   |             |-ImplicitCastExpr 0x563567ba3008 <col:188> 'double (*)(double, double)' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x563567ba2fa8 <col:188> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)'
|   |             |-FloatingLiteral 0x563567ba2fc8 <col:198> 'double' 5.100000e+00
|   |             `-ImplicitCastExpr 0x563567ba3050 <col:203> 'double' <IntegralToFloating>
|   |               `-IntegerLiteral 0x563567ba2fe8 <col:203> 'int' 0
|   `-CallExpr 0x563567ba34b0 <line:884:3, col:62> 'void'
|     |-ImplicitCastExpr 0x563567ba3498 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563567ba3198 <col:3> 'void (int)' Function 0x563567ba01d0 '__VERIFIER_assert' 'void (int)'
|     `-BinaryOperator 0x563567ba3478 <col:21, col:59> 'int' '=='
|       |-CallExpr 0x563567ba3410 <col:21, col:54> 'double'
|       | |-ImplicitCastExpr 0x563567ba33f8 <col:21> 'double (*)(double, double)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x563567ba31b8 <col:21> 'double (double, double)' Function 0x563567b61210 'remainder' 'double (double, double)'
|       | |-FloatingLiteral 0x563567ba31d8 <col:31> 'double' 5.100000e+00
|       | `-ImplicitCastExpr 0x563567ba3440 <col:36, col:53> 'double' <FloatingCast>
|       |   `-ParenExpr 0x563567ba33d8 <col:36, col:53> 'float'
|       |     `-CallExpr 0x563567ba33b8 <col:37, col:52> 'float'
|       |       `-ImplicitCastExpr 0x563567ba33a0 <col:37> 'float (*)(void)' <BuiltinFnToFnPtr>
|       |         `-DeclRefExpr 0x563567ba3350 <col:37> '<builtin fn type>' Function 0x563567ba3230 '__builtin_inff' 'float (void)'
|       `-FloatingLiteral 0x563567ba3458 <col:59> 'double' 5.100000e+00
`-FunctionDecl 0x563567ba3230 <col:37> col:37 implicit used __builtin_inff 'float (void)' extern
  |-NoThrowAttr 0x563567ba32d0 <col:37> Implicit
  `-ConstAttr 0x563567ba3328 <col:37> Implicit
