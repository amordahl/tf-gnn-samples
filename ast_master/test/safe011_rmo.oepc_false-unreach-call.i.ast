TranslationUnitDecl 0x558f2ef12e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x558f2ef136d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x558f2ef133b0 '__int128'
|-TypedefDecl 0x558f2ef13748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x558f2ef133d0 'unsigned __int128'
|-TypedefDecl 0x558f2ef13a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x558f2ef13820 'struct __NSConstantString_tag'
|   `-Record 0x558f2ef137a0 '__NSConstantString_tag'
|-TypedefDecl 0x558f2ef13af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x558f2ef13ab0 'char *'
|   `-BuiltinType 0x558f2ef12eb0 'char'
|-TypedefDecl 0x558f2ef52650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x558f2ef13d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x558f2ef13bd0 'struct __va_list_tag'
|     `-Record 0x558f2ef13b50 '__va_list_tag'
|-FunctionDecl 0x558f2ef52790 <./test/safe011_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x558f2ef526c0 <col:31> col:34 'int'
|-FunctionDecl 0x558f2ef52958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x558f2ef52a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x558f2ef52bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x558f2ef52b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x558f2ef52df8 <col:40, col:99>
|   |-IfStmt 0x558f2ef52dc8 <col:42, col:88>
|   | |-UnaryOperator 0x558f2ef52ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x558f2ef52c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x558f2ef52c70 <col:47> 'int' lvalue ParmVar 0x558f2ef52b38 'expression' 'int'
|   | `-CompoundStmt 0x558f2ef52db0 <col:59, col:88>
|   |   `-LabelStmt 0x558f2ef52d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x558f2ef52d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x558f2ef52d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x558f2ef52cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x558f2ef52a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x558f2ef52de0 <col:89>
|   `-ReturnStmt 0x558f2ef52de8 <col:91>
|-FunctionDecl 0x558f2ef52e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x558f2ef52f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x558f2ef53280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558f2ef52fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x558f2ef53038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x558f2ef530b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558f2ef53138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558f2ef53340 <line:10:22>
|-FunctionDecl 0x558f2ef79390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558f2ef533b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x558f2ef53430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x558f2ef534b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558f2ef53530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558f2ef79450 <line:13:22>
|-FunctionDecl 0x558f2ef79700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558f2ef794c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x558f2ef79540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x558f2ef795c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x558f2ef797b8 <line:15:22>
|-TypedefDecl 0x558f2ef79828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x558f2ef12f70 'unsigned char'
|-TypedefDecl 0x558f2ef79898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x558f2ef12f90 'unsigned short'
|-TypedefDecl 0x558f2ef79908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x558f2ef12fb0 'unsigned int'
|-TypedefDecl 0x558f2ef79978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef799e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x558f2ef12ed0 'signed char'
|-TypedefDecl 0x558f2ef79a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x558f2ef12f70 'unsigned char'
|-TypedefDecl 0x558f2ef79ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x558f2ef12ef0 'short'
|-TypedefDecl 0x558f2ef79b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x558f2ef12f90 'unsigned short'
|-TypedefDecl 0x558f2ef79ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x558f2ef12f10 'int'
|-TypedefDecl 0x558f2ef79c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x558f2ef12fb0 'unsigned int'
|-TypedefDecl 0x558f2ef79c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef79cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef79d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef79dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef79e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef79eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x558f2ef12fb0 'unsigned int'
|-TypedefDecl 0x558f2ef79f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x558f2ef12fb0 'unsigned int'
|-TypedefDecl 0x558f2ef79f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef7a008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef7a078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x558f2ef12fb0 'unsigned int'
|-TypedefDecl 0x558f2ef7a0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef7a158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7a1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7a238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x558f2ef12f10 'int'
|-RecordDecl 0x558f2ef7a290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x558f2ef7a408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x558f2ef7a4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x558f2ef7a460 'struct __fsid_t' sugar
|   `-RecordType 0x558f2ef7a310 '__fsid_t'
|     `-Record 0x558f2ef7a290 ''
|-TypedefDecl 0x558f2ef7a548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7a5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef7a628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef7a698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x558f2ef12fb0 'unsigned int'
|-TypedefDecl 0x558f2ef7a708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7a778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x558f2ef12fb0 'unsigned int'
|-TypedefDecl 0x558f2ef7a7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7a858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x558f2ef12f10 'int'
|-TypedefDecl 0x558f2ef7a8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x558f2ef12f10 'int'
|-TypedefDecl 0x558f2ef7a938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x558f2ef12f10 'int'
|-TypedefDecl 0x558f2ef7a9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x558f2ef13630 'void *'
|   `-BuiltinType 0x558f2ef12e70 'void'
|-TypedefDecl 0x558f2ef7aa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7aa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7aaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7ab68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef7abd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef7ac48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef7acb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef7ad28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7ad98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7ae08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7ae78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef7af08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x558f2ef7aed0 '__off64_t' sugar
|   |-Typedef 0x558f2ef7a1c8 '__off64_t'
|   `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7b000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x558f2ef7afc0 '__quad_t *'
|   `-TypedefType 0x558f2ef7af60 '__quad_t' sugar
|     |-Typedef 0x558f2ef79d68 '__quad_t'
|     `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7b070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x558f2ef13ab0 'char *'
|   `-BuiltinType 0x558f2ef12eb0 'char'
|-TypedefDecl 0x558f2ef7b0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef7b150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x558f2ef12fb0 'unsigned int'
|-FunctionDecl 0x558f2ef7b298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x558f2ef7b1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x558f2ef7c5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x558f2ef7c5d8 <line:72:3, col:34>
|     `-CallExpr 0x558f2ef7c598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x558f2ef7c580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558f2ef7c510 <col:10> '<builtin fn type>' Function 0x558f2ef7c380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x558f2ef7c5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558f2ef7c530 <col:29> 'unsigned int' lvalue ParmVar 0x558f2ef7b1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x558f2ef7c380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x558f2ef7c420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x558f2ef7c490 <col:10> Implicit
| `-ConstAttr 0x558f2ef7c4e8 <col:10> Implicit
|-FunctionDecl 0x558f2ef7c740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x558f2ef7c638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x558f2ef7ca58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x558f2ef7ca48 <line:77:3, col:34>
|     `-CallExpr 0x558f2ef7ca08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x558f2ef7c9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558f2ef7c978 <col:10> '<builtin fn type>' Function 0x558f2ef7c7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x558f2ef7ca30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x558f2ef7c998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x558f2ef7c638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x558f2ef7c7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x558f2ef7c888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x558f2ef7c8f8 <col:10> Implicit
| `-ConstAttr 0x558f2ef7c950 <col:10> Implicit
|-TypedefDecl 0x558f2ef7ca88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-TypedefDecl 0x558f2ef7cb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x558f2ef7cae0 '__time_t' sugar
|   |-Typedef 0x558f2ef7a708 '__time_t'
|   `-BuiltinType 0x558f2ef12f30 'long'
|-RecordDecl 0x558f2ef7cb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x558f2ef7cc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x558f2ef7ccb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x558f2ef7cd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x558f2ef7cd10 '__pid_t' sugar
|   |-Typedef 0x558f2ef7a238 '__pid_t'
|   `-BuiltinType 0x558f2ef12f10 'int'
|-RecordDecl 0x558f2ef7cda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x558f2ef7ce60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x558f2ef7ceb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x558f2ef7cf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x558f2ef7cfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-RecordDecl 0x558f2ef7d030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x558f2ef7d2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x558f2ef7e3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x558f2ef7d310 'struct cpu_set_t' sugar
|   `-RecordType 0x558f2ef7d0b0 'cpu_set_t'
|     `-Record 0x558f2ef7d030 ''
|-FunctionDecl 0x558f2ef7e678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x558f2ef7e448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558f2ef7e550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x558f2ef7e728 <line:107:19>
|-FunctionDecl 0x558f2ef7e900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x558f2ef7e790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x558f2ef7e9a8 <col:69>
|-FunctionDecl 0x558f2ef7eb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x558f2ef7ea10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x558f2ef7ebc8 <col:64>
|-FunctionDecl 0x558f2ef7ee88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x558f2ef7ec30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558f2ef7ed68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558f2ef7ef38 <line:113:22>
|-FunctionDecl 0x558f2ef7f1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x558f2ef7efa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558f2ef7f098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x558f2ef7f268 <col:88>
|-FunctionDecl 0x558f2ef7f588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558f2ef7f2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558f2ef7f3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x558f2ef7f440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558f2ef7f640 <col:62>
|-FunctionDecl 0x558f2ef7f7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x558f2ef7f6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x558f2ef7f860 <col:63>
|-FunctionDecl 0x558f2ef7f988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x558f2ef7fa28 <col:47>
|-FunctionDecl 0x558f2ef7fb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x558f2ef7fa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558f2ef7fbd8 <col:69>
|-FunctionDecl 0x558f2ef7fce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x558f2ef7fc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558f2ef7fd88 <col:69>
|-FunctionDecl 0x558f2ef80048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558f2ef7fdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558f2ef7ff28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x558f2ef800f8 <col:88>
|-TypedefDecl 0x558f2ef80188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x558f2ef80150 '__clock_t' sugar
|   |-Typedef 0x558f2ef7a548 '__clock_t'
|   `-BuiltinType 0x558f2ef12f30 'long'
|-TypedefDecl 0x558f2ef80218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x558f2ef801e0 '__clockid_t' sugar
|   |-Typedef 0x558f2ef7a938 '__clockid_t'
|   `-BuiltinType 0x558f2ef12f10 'int'
|-TypedefDecl 0x558f2ef802a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x558f2ef80270 '__timer_t' sugar
|   |-Typedef 0x558f2ef7a9a8 '__timer_t'
|   `-PointerType 0x558f2ef13630 'void *'
|     `-BuiltinType 0x558f2ef12e70 'void'
|-RecordDecl 0x558f2ef80300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x558f2ef803d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x558f2ef80440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x558f2ef804a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x558f2ef80510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x558f2ef80578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x558f2ef805e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x558f2ef80648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x558f2ef806b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x558f2ef80718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x558f2ef80780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x558f2ef807e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x558f2ef80838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x558f2ef80908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x558f2ef80978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x558f2ef80a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x558f2ef80bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x558f2ef80c90 <col:45>
|-FunctionDecl 0x558f2ef80e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x558f2ef80d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x558f2ef80f18 <col:54>
|-FunctionDecl 0x558f2ef81118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x558f2ef80f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x558f2ef80ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x558f2ef811c8 <line:157:22>
| `-ConstAttr 0x558f2ef81220 <col:63>
|-FunctionDecl 0x558f2ef82050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558f2ef81318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558f2ef820f8 <col:56>
|-FunctionDecl 0x558f2ef824a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x558f2ef82168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x558f2ef821e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558f2ef82260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x558f2ef82358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x558f2ef82560 <col:54>
|-RecordDecl 0x558f2ef825b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x558f2ef82668 parent 0x558f2ef12e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x558f2ef828c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x558f2ef82968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x558f2ef829d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x558f2ef82a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x558f2ef82b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x558f2ef82c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x558f2ef82bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x558f2ef82b80 'struct __locale_struct' sugar
|     `-RecordType 0x558f2ef82640 'struct __locale_struct'
|       `-Record 0x558f2ef825b8 '__locale_struct'
|-TypedefDecl 0x558f2ef82cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x558f2ef82cc0 '__locale_t' sugar
|   |-Typedef 0x558f2ef82c48 '__locale_t'
|   `-PointerType 0x558f2ef82bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x558f2ef82b80 'struct __locale_struct' sugar
|       `-RecordType 0x558f2ef82640 'struct __locale_struct'
|         `-Record 0x558f2ef825b8 '__locale_struct'
|-FunctionDecl 0x558f2ef84110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x558f2ef82d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x558f2ef82de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558f2ef82e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x558f2ef82ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558f2ef82f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x558f2ef841d8 <col:40>
|-FunctionDecl 0x558f2ef843c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558f2ef842a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x558f2ef84470 <col:66>
|-FunctionDecl 0x558f2ef84580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558f2ef844d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x558f2ef84628 <col:69>
|-FunctionDecl 0x558f2ef84858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558f2ef84690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558f2ef84720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558f2ef84908 <col:52>
|-FunctionDecl 0x558f2ef84ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558f2ef84970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558f2ef84a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558f2ef84b60 <col:55>
|-FunctionDecl 0x558f2ef84cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x558f2ef84be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x558f2ef84da0 <col:62>
|-FunctionDecl 0x558f2ef84f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x558f2ef84e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x558f2ef84fc0 <col:60>
|-FunctionDecl 0x558f2ef852b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558f2ef85118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558f2ef85198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x558f2ef85368 <col:44>
|-FunctionDecl 0x558f2ef85578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558f2ef853d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558f2ef85450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x558f2ef85628 <col:49>
|-VarDecl 0x558f2ef85728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x558f2ef857a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x558f2ef85828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x558f2ef858f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x558f2ef85a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x558f2ef85ac0 <col:42>
|-VarDecl 0x558f2ef85b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x558f2ef85bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x558f2ef85d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x558f2ef85c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x558f2ef85de0 <col:57>
|-FunctionDecl 0x558f2ef85ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558f2ef85e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558f2ef85f98 <col:56>
|-FunctionDecl 0x558f2ef860d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558f2ef86018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x558f2ef86178 <col:59>
|-FunctionDecl 0x558f2ef86280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x558f2ef861e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x558f2ef86328 <col:48>
| `-ConstAttr 0x558f2ef86380 <col:89>
|-FunctionDecl 0x558f2ef865e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558f2ef86438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x558f2ef864c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x558f2ef86848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558f2ef866d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558f2ef86768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x558f2ef868f8 <col:88>
|-FunctionDecl 0x558f2ef86a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558f2ef86960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558f2ef869f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x558f2ef86b40 <col:88>
|-FunctionDecl 0x558f2ef86d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x558f2ef86ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558f2ef86c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x558f2ef86e08 <line:208:22>
|-FunctionDecl 0x558f2ef87178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558f2ef86e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558f2ef86ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x558f2ef86f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x558f2ef87010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x558f2ef87478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x558f2ef87278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x558f2ef87350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x558f2ef87528 <col:85>
|-FunctionDecl 0x558f2ef87918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x558f2ef87590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558f2ef876c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x558f2ef877d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x558f2ef879d0 <col:52>
|-FunctionDecl 0x558f2ef87b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x558f2ef87a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558f2ef87bf0 <col:61>
|-FunctionDecl 0x558f2ef880f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x558f2ef87c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558f2ef87cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x558f2ef87e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x558f2ef87ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x558f2ef881b0 <col:62>
|-FunctionDecl 0x558f2ef883c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x558f2ef88218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558f2ef882a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x558f2ef88478 <line:221:22>
|-FunctionDecl 0x558f2ef88578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x558f2ef884e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558f2ef88620 <col:65>
|-TypedefDecl 0x558f2ef88690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x558f2ef12fd0 'unsigned long'
|-RecordDecl 0x558f2ef886e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x558f2ef88830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558f2ef88898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558f2ef88948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x558f2ef888f0 'union pthread_attr_t' sugar
|   `-RecordType 0x558f2ef88770 'union pthread_attr_t'
|     `-Record 0x558f2ef886e8 'pthread_attr_t'
|-RecordDecl 0x558f2ef889a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x558f2ef88b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x558f2ef88b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x558f2ef88c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x558f2ef88be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x558f2ef88a20 'struct __pthread_internal_list'
|     `-Record 0x558f2ef889a0 '__pthread_internal_list'
|-RecordDecl 0x558f2ef88cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x558f2ef88d58 parent 0x558f2ef12e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x558f2ef88e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558f2ef88e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x558f2ef88f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x558f2ef88f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x558f2ef88fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x558f2ef89038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x558f2ef8d110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x558f2ef8d1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x558f2ef8d2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x558f2ef8d318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558f2ef8d4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x558f2ef8d440 'union pthread_mutex_t' sugar
|   `-RecordType 0x558f2ef88d30 'pthread_mutex_t'
|     `-Record 0x558f2ef88cb0 ''
|-RecordDecl 0x558f2ef8d510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x558f2ef8d650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558f2ef8d6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558f2ef8d770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x558f2ef8d710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x558f2ef8d590 'pthread_mutexattr_t'
|     `-Record 0x558f2ef8d510 ''
|-RecordDecl 0x558f2ef8d7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x558f2ef8d888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x558f2ef8d950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558f2ef8d9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x558f2ef8da20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x558f2ef8da88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x558f2ef8daf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x558f2ef8db58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x558f2ef8dbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x558f2ef8dc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x558f2ef8dce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/safe011_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/safe011_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x558f2ef8ddd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x558f2ef8de38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x558f2ef8df70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x558f2ef8df10 'union pthread_cond_t' sugar
|   `-RecordType 0x558f2ef8d860 'pthread_cond_t'
|     `-Record 0x558f2ef8d7e0 ''
|-RecordDecl 0x558f2ef8dfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x558f2ef8f130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558f2ef8f198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558f2ef8f250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x558f2ef8f1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x558f2ef8e060 'pthread_condattr_t'
|     `-Record 0x558f2ef8dfe0 ''
|-TypedefDecl 0x558f2ef8f2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x558f2ef12fb0 'unsigned int'
|-TypedefDecl 0x558f2ef8f348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x558f2ef12f10 'int'
|-RecordDecl 0x558f2ef8f3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x558f2ef8f448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x558f2ef8f510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558f2ef8f578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x558f2ef8f5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x558f2ef8f648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x558f2ef8f6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x558f2ef8f718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x558f2ef8f780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x558f2ef8f7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x558f2ef8f850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x558f2ef8f8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x558f2ef8f920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x558f2ef8f9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/safe011_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/safe011_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x558f2ef8fa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558f2ef8fae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558f2ef8fc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x558f2ef8fbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x558f2ef8f420 'pthread_rwlock_t'
|     `-Record 0x558f2ef8f3a0 ''
|-RecordDecl 0x558f2ef8fca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x558f2ef8fde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x558f2ef8fe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558f2ef8ff00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x558f2ef8fea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x558f2ef8fd20 'pthread_rwlockattr_t'
|     `-Record 0x558f2ef8fca0 ''
|-TypedefDecl 0x558f2ef8ff88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x558f2ef12f14 'volatile int' volatile
|   `-BuiltinType 0x558f2ef12f10 'int'
|-RecordDecl 0x558f2ef8ffe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x558f2ef91140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x558f2ef911a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558f2ef91260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x558f2ef91200 'union pthread_barrier_t' sugar
|   `-RecordType 0x558f2ef90060 'pthread_barrier_t'
|     `-Record 0x558f2ef8ffe0 ''
|-RecordDecl 0x558f2ef912d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x558f2ef913d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558f2ef91438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558f2ef914f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x558f2ef91490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x558f2ef91350 'pthread_barrierattr_t'
|     `-Record 0x558f2ef912d0 ''
|-TypedefDecl 0x558f2ef91608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x558f2ef915a0 'long [8]' 8 
|   `-BuiltinType 0x558f2ef12f30 'long'
|-EnumDecl 0x558f2ef91660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x558f2ef91728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x558f2ef91778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x558f2ef917c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x558f2ef91898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x558f2ef918e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x558f2ef91938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x558f2ef91988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x558f2ef91a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x558f2ef919f8 <col:26> 'int'
| |   `-DeclRefExpr 0x558f2ef919d8 <col:26> 'int' EnumConstant 0x558f2ef91898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x558f2ef91a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x558f2ef91a80 <col:29> 'int'
| |   `-DeclRefExpr 0x558f2ef91a60 <col:29> 'int' EnumConstant 0x558f2ef918e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x558f2ef91b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x558f2ef91b08 <col:30> 'int'
| |   `-DeclRefExpr 0x558f2ef91ae8 <col:30> 'int' EnumConstant 0x558f2ef91938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x558f2ef91ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x558f2ef91b90 <col:27> 'int'
|     `-DeclRefExpr 0x558f2ef91b70 <col:27> 'int' EnumConstant 0x558f2ef91a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x558f2ef91bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x558f2ef91cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x558f2ef91d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x558f2ef91d38 <col:30> 'int'
| |   `-DeclRefExpr 0x558f2ef91d18 <col:30> 'int' EnumConstant 0x558f2ef91cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x558f2ef91da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x558f2ef91e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x558f2ef91e10 <col:29> 'int'
|     `-DeclRefExpr 0x558f2ef91df0 <col:29> 'int' EnumConstant 0x558f2ef91da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x558f2ef91e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x558f2ef91f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x558f2ef91f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x558f2ef91fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x558f2ef92038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x558f2ef92150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x558f2ef921a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x558f2ef921f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x558f2ef92278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x558f2ef92260 <col:31> 'int'
|     `-DeclRefExpr 0x558f2ef92240 <col:31> 'int' EnumConstant 0x558f2ef92150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x558f2ef922c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x558f2ef92398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x558f2ef923e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x558f2ef92438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x558f2ef92508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x558f2ef92558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x558f2ef925a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x558f2ef92678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x558f2ef926c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x558f2ef92718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x558f2ef92958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x558f2ef929c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x558f2ef92a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x558f2ef92b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x558f2ef92b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x558f2ef92c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x558f2ef92cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x558f2ef92d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x558f2ef92dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x558f2ef92e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x558f2ef93488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x558f2ef92f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x558f2ef93030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558f2ef93270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x558f2ef932f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x558f2ef93548 <col:47>
| |-NonNullAttr 0x558f2ef935a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x558f2ef935d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x558f2ef93700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x558f2ef93630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x558f2ef93958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x558f2ef937b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x558f2ef93838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x558f2ef93b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x558f2ef93a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x558f2ef93bd0 <col:60>
|-FunctionDecl 0x558f2ef93d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x558f2ef93dc0 <col:54>
| `-ConstAttr 0x558f2ef93e18 <col:95>
|-FunctionDecl 0x558f2ef93fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x558f2ef93e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558f2ef93ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x558f2ef94098 <line:394:19>
| `-ConstAttr 0x558f2ef940f0 <col:60>
|-FunctionDecl 0x558f2ef95b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558f2ef959d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558f2ef95bb0 <col:71>
| `-NonNullAttr 0x558f2ef95c08 <col:112, col:126> 1
|-FunctionDecl 0x558f2ef95d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558f2ef95c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558f2ef95db8 <line:397:22>
| `-NonNullAttr 0x558f2ef95e10 <col:63, col:77> 1
|-FunctionDecl 0x558f2ef96038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x558f2ef95e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558f2ef95ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x558f2ef960e8 <line:400:22>
| `-NonNullAttr 0x558f2ef96140 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2ef96348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558f2ef96188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558f2ef96208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x558f2ef963f8 <line:403:22>
| `-NonNullAttr 0x558f2ef96450 <col:63, col:77> 1
|-FunctionDecl 0x558f2ef966a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x558f2ef96498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558f2ef96540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x558f2ef96758 <line:406:22>
| `-NonNullAttr 0x558f2ef967b0 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2ef979e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558f2ef967f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558f2ef96870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558f2ef97a98 <line:409:22>
| `-NonNullAttr 0x558f2ef97af0 <col:63, col:77> 1
|-FunctionDecl 0x558f2ef97d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558f2ef97b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558f2ef97bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558f2ef97dd8 <line:412:22>
| `-NonNullAttr 0x558f2ef97e30 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2ef98068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558f2ef97e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x558f2ef97f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x558f2ef98118 <col:37>
| `-NonNullAttr 0x558f2ef98170 <col:78, col:95> 1 2
|-FunctionDecl 0x558f2ef98358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2ef981b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558f2ef98238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x558f2ef98408 <line:418:22>
| `-NonNullAttr 0x558f2ef98460 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2ef985e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558f2ef984a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558f2ef98528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x558f2ef98698 <line:420:22>
| `-NonNullAttr 0x558f2ef986f0 <col:63, col:77> 1
|-FunctionDecl 0x558f2ef98898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2ef98738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558f2ef987b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x558f2ef98948 <line:423:22>
| `-NonNullAttr 0x558f2ef989c0 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2ef98b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558f2ef98a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558f2ef98a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x558f2ef98bf8 <line:426:22>
| `-NonNullAttr 0x558f2ef98c50 <col:63, col:77> 1
|-FunctionDecl 0x558f2ef98df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2ef98c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558f2ef98d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x558f2ef98ea8 <line:429:22>
| `-NonNullAttr 0x558f2ef98f00 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2ef99088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558f2ef98f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558f2ef98fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x558f2ef99138 <line:431:22>
| `-NonNullAttr 0x558f2ef99190 <col:63, col:77> 1
|-FunctionDecl 0x558f2ef993b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x558f2ef991d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558f2ef99258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x558f2ef99468 <line:434:22>
| |-NonNullAttr 0x558f2ef994c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x558f2ef994f8 <col:100> "" ""
|-FunctionDecl 0x558f2ef99708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x558f2ef99548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558f2ef995c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x558f2ef997b8 <line:437:22>
| |-NonNullAttr 0x558f2ef99810 <col:63, col:77> 1
| `-DeprecatedAttr 0x558f2ef99848 <col:97> "" ""
|-FunctionDecl 0x558f2ef99a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558f2ef99898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558f2ef99910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558f2ef99af8 <line:440:22>
| `-NonNullAttr 0x558f2ef99b50 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2ef99cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558f2ef99b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558f2ef99c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558f2ef99d80 <line:443:22>
| `-NonNullAttr 0x558f2ef99dd8 <col:63, col:77> 1
|-FunctionDecl 0x558f2ef9a0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558f2ef99e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558f2ef99ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x558f2ef99f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558f2ef9a180 <line:447:22>
| `-NonNullAttr 0x558f2ef9a1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x558f2ef9a488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x558f2ef9a230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558f2ef9a2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x558f2ef9a328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558f2ef9a540 <col:43>
| `-NonNullAttr 0x558f2ef9a598 <col:84, col:98> 1
|-FunctionDecl 0x558f2ef9a858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558f2ef9a5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558f2ef9a668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x558f2ef9a6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x558f2ef9a910 <line:452:22>
| `-NonNullAttr 0x558f2ef9a968 <col:63, col:77> 3
|-FunctionDecl 0x558f2ef9ac78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558f2ef9a9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558f2ef9aa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x558f2ef9aaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558f2ef9ad30 <line:456:22>
| `-NonNullAttr 0x558f2ef9ad88 <col:63, col:80> 2 3
|-FunctionDecl 0x558f2ef9af78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x558f2ef9add8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558f2ef9ae58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x558f2ef9b028 <line:458:22>
|-FunctionDecl 0x558f2ef9b3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x558f2ef9b0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x558f2ef9b290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x558f2ef9b4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x558f2ef9b650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x558f2ef9b530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x558f2ef9b5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x558f2ef9b838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x558f2ef9b718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x558f2ef9b798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x558f2ef9b9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x558f2ef9b8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x558f2ef9bb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x558f2ef9bbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x558f2ef9bc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x558f2ef9bd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x558f2ef9bdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x558f2ef9bfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/safe011_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x558f2ef9c098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x558f2ef9c150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x558f2ef9c0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x558f2ef9bc50 '__pthread_unwind_buf_t'
| |   `-Record 0x558f2ef9bbd0 ''
| `-AlignedAttr 0x558f2ef9c1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x558f2ef9c220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x558f2ef9c380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x558f2ef9c3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x558f2ef9c450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x558f2ef9c4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x558f2ef9c6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558f2ef9c5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558f2ef9c808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558f2ef9c778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558f2ef9ca00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558f2ef9c8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x558f2ef9caa8 <line:487:22>
|-RecordDecl 0x558f2ef9cb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x558f2ef9ce18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x558f2ef9cc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x558f2ef9ccf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x558f2ef9cec8 <col:86>
| `-ReturnsTwiceAttr 0x558f2ef9cf20 <col:12> Implicit
|-FunctionDecl 0x558f2ef9d248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558f2ef9cff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x558f2ef9d100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x558f2ef9d2f8 <line:493:22>
| `-NonNullAttr 0x558f2ef9d350 <col:63, col:77> 1
|-FunctionDecl 0x558f2ef9d4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558f2ef9d398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558f2ef9d570 <line:495:22>
| `-NonNullAttr 0x558f2ef9d5c8 <col:63, col:77> 1
|-FunctionDecl 0x558f2ef9d6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558f2ef9d618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558f2ef9d778 <line:497:22>
| `-NonNullAttr 0x558f2ef9d7d0 <col:52, col:66> 1
|-FunctionDecl 0x558f2ef9d8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558f2ef9d818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558f2ef9d978 <line:499:22>
| `-NonNullAttr 0x558f2ef9d9d0 <col:52, col:66> 1
|-FunctionDecl 0x558f2ef9ec28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558f2ef9ea38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558f2ef9eac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558f2ef9ecd8 <col:36>
| `-NonNullAttr 0x558f2ef9ed30 <col:66, col:83> 1 2
|-FunctionDecl 0x558f2ef9ee30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558f2ef9ed78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558f2ef9eed8 <line:504:22>
| `-NonNullAttr 0x558f2ef9ef30 <col:52, col:66> 1
|-FunctionDecl 0x558f2ef9f1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2ef9efe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558f2ef9f060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558f2ef9f278 <line:508:22>
| `-NonNullAttr 0x558f2ef9f2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2ef9f598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x558f2ef9f318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558f2ef9f398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x558f2ef9f418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x558f2ef9f650 <line:512:22>
| `-NonNullAttr 0x558f2ef9f6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x558f2ef9f7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558f2ef9f6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558f2ef9f858 <line:514:22>
| `-NonNullAttr 0x558f2ef9f8b0 <col:63, col:77> 1
|-FunctionDecl 0x558f2ef9fad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558f2ef9f960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558f2ef9fb80 <line:516:22>
| `-NonNullAttr 0x558f2ef9fbd8 <col:63, col:77> 1
|-FunctionDecl 0x558f2ef9fce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558f2ef9fc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558f2ef9fd88 <line:518:22>
| `-NonNullAttr 0x558f2ef9fde0 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa0008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2ef9fe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558f2ef9fea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x558f2efa00b8 <line:522:22>
| `-NonNullAttr 0x558f2efa0110 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2efa0318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558f2efa0158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558f2efa01d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x558f2efa03c8 <line:525:22>
| `-NonNullAttr 0x558f2efa0420 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa05c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2efa0468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558f2efa04e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x558f2efa0678 <line:528:22>
| `-NonNullAttr 0x558f2efa06d0 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2efa0858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558f2efa0718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558f2efa0798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x558f2efa0908 <line:530:22>
| `-NonNullAttr 0x558f2efa0960 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa0b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2efa09a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558f2efa0a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x558f2efa0bd0 <line:534:22>
| `-NonNullAttr 0x558f2efa0c28 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2efa0db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558f2efa0c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558f2efa0cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x558f2efa0e68 <line:537:22>
| `-NonNullAttr 0x558f2efa0ec0 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa1068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2efa0f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558f2efa0f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558f2efa1118 <line:541:22>
| `-NonNullAttr 0x558f2efa1170 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2efa12f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558f2efa11b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558f2efa1238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x558f2efa13a8 <line:544:22>
| `-NonNullAttr 0x558f2efa1400 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa15e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x558f2efa1448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x558f2efa14c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x558f2efa1698 <line:547:22>
| `-NonNullAttr 0x558f2efa16f0 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2efa1878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558f2efa1738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558f2efa17b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x558f2efa1928 <line:550:22>
| `-NonNullAttr 0x558f2efa1980 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa2cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x558f2efa2aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558f2efa2bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x558f2efa2da8 <col:29>
| `-NonNullAttr 0x558f2efa2e00 <col:70, col:84> 1
|-FunctionDecl 0x558f2efa2f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558f2efa2e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558f2efa3020 <line:555:22>
| `-NonNullAttr 0x558f2efa3078 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa3180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558f2efa30c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558f2efa3228 <line:557:22>
| `-NonNullAttr 0x558f2efa3280 <col:52, col:66> 1
|-FunctionDecl 0x558f2efa3380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558f2efa32c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558f2efa3428 <line:559:19>
| `-NonNullAttr 0x558f2efa3480 <col:49, col:63> 1
|-FunctionDecl 0x558f2efa36b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558f2efa34c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558f2efa3558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558f2efa3768 <col:39>
| `-NonNullAttr 0x558f2efa37c0 <col:69, col:86> 1 2
|-FunctionDecl 0x558f2efa38c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558f2efa3808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558f2efa3968 <line:564:22>
| `-NonNullAttr 0x558f2efa39c0 <col:52, col:66> 1
|-FunctionDecl 0x558f2efa3b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558f2efa3a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558f2efa3bd0 <line:566:22>
| `-NonNullAttr 0x558f2efa3c28 <col:52, col:66> 1
|-FunctionDecl 0x558f2efa3de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558f2efa3c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558f2efa3d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558f2efa3e98 <col:39>
| `-NonNullAttr 0x558f2efa3ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x558f2efa3ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558f2efa3f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558f2efa4098 <line:571:22>
| `-NonNullAttr 0x558f2efa40f0 <col:52, col:66> 1
|-FunctionDecl 0x558f2efa42d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558f2efa41a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558f2efa4380 <line:573:22>
| `-NonNullAttr 0x558f2efa43d8 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa44e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558f2efa4428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558f2efa4588 <line:575:22>
| `-NonNullAttr 0x558f2efa45e0 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa4808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2efa4628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558f2efa46a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x558f2efa48b8 <line:579:22>
| `-NonNullAttr 0x558f2efa4910 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2efa4b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558f2efa4958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558f2efa49d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x558f2efa4be8 <line:582:22>
| `-NonNullAttr 0x558f2efa4c40 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa4de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2efa4c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558f2efa4d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x558f2efa4e98 <line:586:22>
| `-NonNullAttr 0x558f2efa4ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2efa5078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558f2efa4f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558f2efa4fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x558f2efa5128 <col:36>
| `-NonNullAttr 0x558f2efa5180 <col:77, col:91> 1
|-FunctionDecl 0x558f2efa54b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x558f2efa5260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558f2efa5370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x558f2efa5568 <line:591:22>
| `-NonNullAttr 0x558f2efa55c0 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa5738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558f2efa5608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558f2efa57e0 <line:593:22>
| `-NonNullAttr 0x558f2efa5838 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa5940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558f2efa5888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558f2efa59e8 <line:595:22>
| `-NonNullAttr 0x558f2efa5a40 <col:52, col:66> 1
|-FunctionDecl 0x558f2efa5b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558f2efa5aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558f2efa5c00 <line:597:22>
| `-NonNullAttr 0x558f2efa5c58 <col:52, col:66> 1
|-FunctionDecl 0x558f2efa5e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x558f2efa5ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558f2efa5d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x558f2efa5f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x558f2efa6268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558f2efa5fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558f2efa6030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558f2efa60c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x558f2efa6320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x558f2efa6538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558f2efa6400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558f2efa65e0 <line:606:22>
| `-NonNullAttr 0x558f2efa6638 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa6740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558f2efa6688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558f2efa67e8 <line:608:22>
| `-NonNullAttr 0x558f2efa6840 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa6aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2efa6888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558f2efa6908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x558f2efa6b50 <line:612:22>
| `-NonNullAttr 0x558f2efa6ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2efa6db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x558f2efa6bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558f2efa6c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x558f2efa6e68 <col:37>
| `-NonNullAttr 0x558f2efa6ec0 <col:78, col:92> 1
|-FunctionDecl 0x558f2efa70d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x558f2efa6f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558f2efa6fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x558f2efa7188 <line:618:22>
| `-NonNullAttr 0x558f2efa71e0 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2efa73a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x558f2efa7228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558f2efa72a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x558f2efa7458 <line:621:22>
| `-NonNullAttr 0x558f2efa74b0 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa7758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x558f2efa7590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x558f2efa7610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x558f2efa7808 <line:623:22>
| `-NonNullAttr 0x558f2efa7860 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa79d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558f2efa78a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558f2efa7ab0 <line:625:22>
| `-NonNullAttr 0x558f2efa7b08 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa7c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558f2efa7b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558f2efa7cb8 <line:627:22>
| `-NonNullAttr 0x558f2efa7d10 <col:52, col:66> 1
|-FunctionDecl 0x558f2efa7e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558f2efa7d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558f2efa7eb8 <line:629:22>
| `-NonNullAttr 0x558f2efa7f10 <col:52, col:66> 1
|-FunctionDecl 0x558f2efa8010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558f2efa7f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558f2efa80b8 <line:631:22>
| `-NonNullAttr 0x558f2efa8110 <col:52, col:66> 1
|-FunctionDecl 0x558f2efa84e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x558f2efa81f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x558f2efa8300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558f2efa8380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x558f2efa85a0 <line:635:22>
| `-NonNullAttr 0x558f2efa85f8 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa8778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558f2efa8648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558f2efa8820 <line:637:22>
| `-NonNullAttr 0x558f2efa8878 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa8980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558f2efa88c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558f2efa8a28 <line:639:22>
| `-NonNullAttr 0x558f2efa8a80 <col:52, col:66> 1
|-FunctionDecl 0x558f2efa9c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558f2efa9b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558f2efa9d30 <line:641:22>
| `-NonNullAttr 0x558f2efa9d88 <col:63, col:77> 1
|-FunctionDecl 0x558f2efa9e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558f2efa9dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558f2efa9f38 <line:643:22>
| `-NonNullAttr 0x558f2efa9f90 <col:63, col:77> 1
|-FunctionDecl 0x558f2efaa1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558f2efa9fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558f2efaa058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x558f2efaa268 <line:647:22>
| `-NonNullAttr 0x558f2efaa2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x558f2efaa4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x558f2efaa308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x558f2efaa388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x558f2efaa578 <line:650:22>
| `-NonNullAttr 0x558f2efaa5d0 <col:63, col:77> 1
|-FunctionDecl 0x558f2efaa918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x558f2efaa6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x558f2efaa7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x558f2efaa9c8 <line:653:22>
| `-NonNullAttr 0x558f2efaaa20 <col:63, col:77> 1
|-FunctionDecl 0x558f2efaab88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x558f2efaaa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558f2efaac30 <col:69>
|-FunctionDecl 0x558f2efaada8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x558f2efaac98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558f2efaae50 <col:72>
|-FunctionDecl 0x558f2efab088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x558f2efaaeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x558f2efaaf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x558f2efab138 <col:44>
|-FunctionDecl 0x558f2efab358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x558f2efab1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558f2efab218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x558f2efab408 <line:660:22>
| `-NonNullAttr 0x558f2efab460 <col:63, col:77> 2
|-FunctionDecl 0x558f2efab8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x558f2efab540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x558f2efab650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x558f2efab760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x558f2efab960 <col:47>
|-FunctionDecl 0x558f2efabaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x558f2efab9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558f2efabc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x558f2efabbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558f2efabda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x558f2efabd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558f2efabe68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x558f2efabf28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x558f2efabfe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x558f2efac0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x558f2efac120 prev 0x558f2efac0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x558f2efac188 <col:24> 'int' 0
|-VarDecl 0x558f2efac1c0 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x558f2efac240 prev 0x558f2efac1c0 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x558f2efac2a8 <col:27> 'int' 0
|-VarDecl 0x558f2efac2d8 <line:675:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x558f2efac350 <line:676:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x558f2efac3d0 <line:677:1, col:5> col:5 used x 'int'
|-VarDecl 0x558f2efac450 prev 0x558f2efac3d0 <line:678:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x558f2efac4b8 <col:9> 'int' 0
|-VarDecl 0x558f2efac4f0 <line:679:1, col:5> col:5 used y 'int'
|-VarDecl 0x558f2efac570 prev 0x558f2efac4f0 <line:680:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x558f2efac5d8 <col:9> 'int' 0
|-VarDecl 0x558f2efac610 <line:681:1, col:5> col:5 used z 'int'
|-VarDecl 0x558f2efac690 prev 0x558f2efac610 <line:682:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x558f2efac6f8 <col:9> 'int' 0
|-VarDecl 0x558f2efac728 <line:683:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x558f2efac7a8 <line:684:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x558f2efac820 <line:685:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x558f2efac898 <line:686:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x558f2efac910 <line:687:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x558f2efac988 <line:688:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x558f2efaca00 <line:689:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x558f2efaca78 <line:690:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x558f2efacb00 <line:691:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x558f2efacb78 <line:692:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x558f2efacbf0 <line:693:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x558f2efacc70 <line:694:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x558f2efaccf0 <line:695:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x558f2efacd68 <line:696:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x558f2efacde8 <line:697:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x558f2eface60 <line:698:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x558f2efaced8 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x558f2efacf50 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x558f2efad068 prev 0x558f2efabaf0 <line:701:1, line:729:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x558f2efacfd0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558f2efae898 <line:702:1, line:729:1>
|   |-CallExpr 0x558f2efad178 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efad160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efad110 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efad1f0 <line:704:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558f2efad198 <col:3> 'int' lvalue Var 0x558f2efacde8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x558f2efad1d8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558f2efad1b8 <col:15> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x558f2efad250 <line:705:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558f2efad210 <col:3> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x558f2efad230 <col:15> 'int' 2
|   |-BinaryOperator 0x558f2efad2c8 <line:706:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efad270 <col:3> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efad2b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558f2efad290 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558f2efad360 <line:707:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efad2e8 <col:3> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x558f2efad338 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558f2efad308 <col:27> 'int' 1
|   |-CallExpr 0x558f2efad4e8 <line:708:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x558f2efad4d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x558f2efad380 <col:3> 'void (int)' Function 0x558f2ef52bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x558f2efad480 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x558f2efad460 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x558f2efad440 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x558f2efad3f8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x558f2efad3e0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x558f2efad3a0 <col:23> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x558f2efad428 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x558f2efad410 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x558f2efad3c0 <col:41> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558f2efad568 <line:709:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efad510 <col:3> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efad550 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558f2efad530 <col:20> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x558f2efad5e0 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efad588 <col:3> '_Bool' lvalue Var 0x558f2efaca78 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efad5c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558f2efad5a8 <col:20> '_Bool' lvalue Var 0x558f2efac898 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558f2efad658 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efad600 <col:3> '_Bool' lvalue Var 0x558f2efacb00 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efad640 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558f2efad620 <col:20> '_Bool' lvalue Var 0x558f2efac910 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558f2efad6d0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efad678 <col:3> '_Bool' lvalue Var 0x558f2efacb78 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efad6b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558f2efad698 <col:20> '_Bool' lvalue Var 0x558f2efac988 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558f2efad768 <line:713:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efad6f0 <col:3> '_Bool' lvalue Var 0x558f2efac898 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x558f2efad740 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558f2efad710 <col:27> 'int' 1
|   |-CallExpr 0x558f2efad7c0 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efad7a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efad788 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558f2efad818 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efad800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efad7e0 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efad878 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558f2efad838 <col:3> 'int' lvalue Var 0x558f2efac450 'x' 'int'
|   | `-IntegerLiteral 0x558f2efad858 <col:7> 'int' 1
|   |-CallExpr 0x558f2efad8d0 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efad8b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efad898 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558f2efad928 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efad910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efad8f0 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efadc38 <line:719:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558f2efad948 <col:3> 'int' lvalue Var 0x558f2efac690 'z' 'int'
|   | `-ConditionalOperator 0x558f2efadc08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558f2efada08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558f2efad9c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558f2efad9a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558f2efad968 <col:7> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558f2efad9f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558f2efad9d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558f2efad988 <col:25> '_Bool' lvalue Var 0x558f2efac898 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x558f2efadbf0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558f2efada28 <col:42> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x558f2efadbd0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558f2efadba0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558f2efadb10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558f2efadaa0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558f2efada88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558f2efada48 <col:55> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558f2efadad0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558f2efadab8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558f2efada68 <col:73> '_Bool' lvalue Var 0x558f2efaca78 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x558f2efadb70 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558f2efadb30 <col:90> 'int' lvalue Var 0x558f2efacde8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558f2efadb88 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efadb50 <col:102> 'int' lvalue Var 0x558f2efac690 'z' 'int'
|   |-BinaryOperator 0x558f2efade40 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efadc58 <col:3> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efade28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efaddf8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558f2efadd18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558f2efadcd0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558f2efadcb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558f2efadc78 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558f2efadd00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558f2efadce8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558f2efadc98 <col:38> '_Bool' lvalue Var 0x558f2efac898 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efaddb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efadd68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efadd38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efadde0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efaddc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efadd90 <col:66> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558f2efae128 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efade60 <col:3> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efae110 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efae0e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558f2efae000 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558f2efadf20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558f2efaded8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558f2efadec0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558f2efade80 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558f2efadf08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558f2efadef0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558f2efadea0 <col:38> '_Bool' lvalue Var 0x558f2efac898 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558f2efadfe0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558f2efadf98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558f2efadf80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558f2efadf40 <col:56> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558f2efadfc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558f2efadfb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558f2efadf60 <col:74> '_Bool' lvalue Var 0x558f2efaca78 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efae098 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efae050 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efae020 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efae0c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efae0b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efae078 <col:102> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558f2efae330 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efae148 <col:3> '_Bool' lvalue Var 0x558f2efac898 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efae318 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efae2e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558f2efae208 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558f2efae1c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558f2efae1a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558f2efae168 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558f2efae1f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558f2efae1d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558f2efae188 <col:38> '_Bool' lvalue Var 0x558f2efac898 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efae2a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efae258 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efae228 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efae2d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efae2b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efae280 <col:66> '_Bool' lvalue Var 0x558f2efac898 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558f2efae618 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efae350 <col:3> '_Bool' lvalue Var 0x558f2efaca78 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efae600 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efae5d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558f2efae4f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558f2efae410 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558f2efae3c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558f2efae3b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558f2efae370 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558f2efae3f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558f2efae3e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558f2efae390 <col:38> '_Bool' lvalue Var 0x558f2efac898 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x558f2efae4d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558f2efae488 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558f2efae470 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558f2efae430 <col:56> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558f2efae4b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558f2efae4a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558f2efae450 <col:74> '_Bool' lvalue Var 0x558f2efaca78 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efae588 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efae540 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efae510 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efae5b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efae5a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efae568 <col:102> '_Bool' lvalue Var 0x558f2efaca78 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x558f2efae670 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efae658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efae638 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558f2efae6c8 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efae6b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efae690 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efae780 <line:726:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558f2efae6e8 <col:3> 'int' lvalue Var 0x558f2efac120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558f2efae760 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558f2efae748 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558f2efae708 <col:22> 'int' lvalue Var 0x558f2efac120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558f2efae728 <col:41> 'int' 1
|   |-CallExpr 0x558f2efae7d8 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efae7c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efae7a0 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558f2efae888 <line:728:3, col:36>
|     `-CallExpr 0x558f2efae868 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558f2efae850 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558f2efae7f8 <col:10> 'void *(void)' Function 0x558f2ef52958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558f2efaea28 prev 0x558f2efabc48 <line:730:1, line:749:1> line:730:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x558f2efae990 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558f2efafc68 <line:731:1, line:749:1>
|   |-CallExpr 0x558f2efaeb20 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efaeaf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efaead0 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efaeb80 <line:733:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558f2efaeb40 <col:3> 'int' lvalue Var 0x558f2efac450 'x' 'int'
|   | `-IntegerLiteral 0x558f2efaeb60 <col:7> 'int' 2
|   |-CallExpr 0x558f2efaebd8 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efaebc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efaeba0 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558f2efaec30 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efaec18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efaebf8 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efaec90 <line:736:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558f2efaec50 <col:3> 'int' lvalue Var 0x558f2efac570 'y' 'int'
|   | `-IntegerLiteral 0x558f2efaec70 <col:7> 'int' 1
|   |-CallExpr 0x558f2efaece8 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efaecd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efaecb0 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558f2efaed40 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efaed28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efaed08 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efaf028 <line:739:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558f2efaed60 <col:3> 'int' lvalue Var 0x558f2efac690 'z' 'int'
|   | `-ConditionalOperator 0x558f2efaeff8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558f2efaee20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558f2efaedd8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558f2efaedc0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558f2efaed80 <col:7> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558f2efaee08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558f2efaedf0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558f2efaeda0 <col:25> '_Bool' lvalue Var 0x558f2efac910 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x558f2efaefe0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558f2efaee40 <col:42> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x558f2efaefc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558f2efaef90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558f2efaef00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558f2efaeeb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558f2efaeea0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558f2efaee60 <col:55> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558f2efaeee8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558f2efaeed0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558f2efaee80 <col:73> '_Bool' lvalue Var 0x558f2efacb00 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x558f2efaef60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558f2efaef20 <col:90> 'int' lvalue Var 0x558f2efacde8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558f2efaef78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efaef40 <col:102> 'int' lvalue Var 0x558f2efac690 'z' 'int'
|   |-BinaryOperator 0x558f2efaf230 <line:740:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efaf048 <col:3> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efaf218 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efaf1e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558f2efaf108 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558f2efaf0c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558f2efaf0a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558f2efaf068 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558f2efaf0f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558f2efaf0d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558f2efaf088 <col:38> '_Bool' lvalue Var 0x558f2efac910 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efaf1a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efaf158 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efaf128 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efaf1d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efaf1b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efaf180 <col:66> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558f2efaf518 <line:741:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efaf250 <col:3> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efaf500 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efaf4d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558f2efaf3f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558f2efaf310 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558f2efaf2c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558f2efaf2b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558f2efaf270 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558f2efaf2f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558f2efaf2e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558f2efaf290 <col:38> '_Bool' lvalue Var 0x558f2efac910 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558f2efaf3d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558f2efaf388 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558f2efaf370 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558f2efaf330 <col:56> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558f2efaf3b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558f2efaf3a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558f2efaf350 <col:74> '_Bool' lvalue Var 0x558f2efacb00 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efaf488 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efaf440 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efaf410 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efaf4b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efaf4a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efaf468 <col:102> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558f2efaf720 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efaf538 <col:3> '_Bool' lvalue Var 0x558f2efac910 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efaf708 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efaf6d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558f2efaf5f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558f2efaf5b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558f2efaf598 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558f2efaf558 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558f2efaf5e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558f2efaf5c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558f2efaf578 <col:38> '_Bool' lvalue Var 0x558f2efac910 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efaf690 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efaf648 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efaf618 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efaf6c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efaf6a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efaf670 <col:66> '_Bool' lvalue Var 0x558f2efac910 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558f2efafa08 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efaf740 <col:3> '_Bool' lvalue Var 0x558f2efacb00 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efaf9f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efaf9c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558f2efaf8e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558f2efaf800 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558f2efaf7b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558f2efaf7a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558f2efaf760 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558f2efaf7e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558f2efaf7d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558f2efaf780 <col:38> '_Bool' lvalue Var 0x558f2efac910 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x558f2efaf8c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558f2efaf878 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558f2efaf860 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558f2efaf820 <col:56> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558f2efaf8a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558f2efaf890 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558f2efaf840 <col:74> '_Bool' lvalue Var 0x558f2efacb00 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efaf978 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efaf930 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efaf900 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efaf9a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efaf990 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efaf958 <col:102> '_Bool' lvalue Var 0x558f2efacb00 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x558f2efafa60 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efafa48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efafa28 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558f2efafab8 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efafaa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efafa80 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efafb88 <line:746:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558f2efafad8 <col:3> 'int' lvalue Var 0x558f2efac120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558f2efafb68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558f2efafb50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558f2efafaf8 <col:22> 'int' lvalue Var 0x558f2efac120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558f2efafb30 <col:41> 'int' 1
|   |-CallExpr 0x558f2efafbe0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efafbc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efafba8 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558f2efafc58 <line:748:3, col:36>
|     `-CallExpr 0x558f2efafc38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558f2efafc20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558f2efafc00 <col:10> 'void *(void)' Function 0x558f2ef52958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558f2efafdb0 prev 0x558f2efabda0 <line:750:1, line:769:1> line:750:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x558f2efafd18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558f2efb0ff0 <line:751:1, line:769:1>
|   |-CallExpr 0x558f2efafe90 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efafe78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efafe58 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efaff08 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558f2efafeb0 <col:3> 'int' lvalue Var 0x558f2efac240 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x558f2efafef0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558f2efafed0 <col:25> 'int' lvalue Var 0x558f2efac570 'y' 'int'
|   |-CallExpr 0x558f2efaff60 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efaff48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efaff28 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558f2efaffb8 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efaffa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efaff80 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efb0018 <line:756:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558f2efaffd8 <col:3> 'int' lvalue Var 0x558f2efac690 'z' 'int'
|   | `-IntegerLiteral 0x558f2efafff8 <col:7> 'int' 1
|   |-CallExpr 0x558f2efb0070 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efb0058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efb0038 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558f2efb00c8 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efb00b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efb0090 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efb03b0 <line:759:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558f2efb00e8 <col:3> 'int' lvalue Var 0x558f2efac690 'z' 'int'
|   | `-ConditionalOperator 0x558f2efb0380 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558f2efb01a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558f2efb0160 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558f2efb0148 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558f2efb0108 <col:7> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558f2efb0190 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558f2efb0178 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558f2efb0128 <col:25> '_Bool' lvalue Var 0x558f2efac988 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x558f2efb0368 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558f2efb01c8 <col:42> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x558f2efb0348 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558f2efb0318 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558f2efb0288 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558f2efb0240 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558f2efb0228 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558f2efb01e8 <col:55> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558f2efb0270 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558f2efb0258 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558f2efb0208 <col:73> '_Bool' lvalue Var 0x558f2efacb78 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558f2efb02e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558f2efb02a8 <col:90> 'int' lvalue Var 0x558f2efacde8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558f2efb0300 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efb02c8 <col:102> 'int' lvalue Var 0x558f2efac690 'z' 'int'
|   |-BinaryOperator 0x558f2efb05b8 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efb03d0 <col:3> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efb05a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efb0570 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558f2efb0490 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558f2efb0448 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558f2efb0430 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558f2efb03f0 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558f2efb0478 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558f2efb0460 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558f2efb0410 <col:38> '_Bool' lvalue Var 0x558f2efac988 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efb0528 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efb04e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efb04b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efb0558 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efb0540 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efb0508 <col:66> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558f2efb08a0 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efb05d8 <col:3> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efb0888 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efb0858 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558f2efb0778 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558f2efb0698 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558f2efb0650 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558f2efb0638 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558f2efb05f8 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558f2efb0680 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558f2efb0668 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558f2efb0618 <col:38> '_Bool' lvalue Var 0x558f2efac988 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558f2efb0758 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558f2efb0710 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558f2efb06f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558f2efb06b8 <col:56> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558f2efb0740 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558f2efb0728 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558f2efb06d8 <col:74> '_Bool' lvalue Var 0x558f2efacb78 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efb0810 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efb07c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efb0798 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efb0840 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efb0828 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efb07f0 <col:102> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558f2efb0aa8 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efb08c0 <col:3> '_Bool' lvalue Var 0x558f2efac988 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efb0a90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efb0a60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558f2efb0980 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558f2efb0938 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558f2efb0920 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558f2efb08e0 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558f2efb0968 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558f2efb0950 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558f2efb0900 <col:38> '_Bool' lvalue Var 0x558f2efac988 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efb0a18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efb09d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efb09a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efb0a48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efb0a30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efb09f8 <col:66> '_Bool' lvalue Var 0x558f2efac988 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558f2efb0da8 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558f2efb0ac8 <col:3> '_Bool' lvalue Var 0x558f2efacb78 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558f2efb0d90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558f2efb0d60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558f2efb0c80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558f2efb0ba0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558f2efb0b58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558f2efb0b40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558f2efb0ae8 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558f2efb0b88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558f2efb0b70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558f2efb0b08 <col:38> '_Bool' lvalue Var 0x558f2efac988 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558f2efb0c60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558f2efb0c18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558f2efb0c00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558f2efb0bc0 <col:56> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558f2efb0c48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558f2efb0c30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558f2efb0be0 <col:74> '_Bool' lvalue Var 0x558f2efacb78 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558f2efb0d18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558f2efb0cd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558f2efb0ca0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558f2efb0d48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558f2efb0d30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558f2efb0cf8 <col:102> '_Bool' lvalue Var 0x558f2efacb78 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x558f2efb0e00 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efb0de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efb0dc8 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558f2efb0e58 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558f2efb0e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efb0e20 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558f2efb0f10 <line:766:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558f2efb0e78 <col:3> 'int' lvalue Var 0x558f2efac120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558f2efb0ef0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558f2efb0ed8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558f2efb0e98 <col:22> 'int' lvalue Var 0x558f2efac120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558f2efb0eb8 <col:41> 'int' 1
|   |-CallExpr 0x558f2efb0f68 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558f2efb0f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558f2efb0f30 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558f2efb0fe0 <line:768:3, col:36>
|     `-CallExpr 0x558f2efb0fc0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558f2efb0fa8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558f2efb0f88 <col:10> 'void *(void)' Function 0x558f2ef52958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558f2efb10a8 prev 0x558f2efabe68 <line:770:1, line:772:1> line:770:6 fence 'void ()'
| `-CompoundStmt 0x558f2efb1148 <line:771:1, line:772:1>
|-FunctionDecl 0x558f2efb1178 prev 0x558f2efabf28 <line:773:1, line:775:1> line:773:6 isync 'void ()'
| `-CompoundStmt 0x558f2efb1218 <line:774:1, line:775:1>
|-FunctionDecl 0x558f2efb1248 prev 0x558f2efabfe8 <line:776:1, line:778:1> line:776:6 lwfence 'void ()'
| `-CompoundStmt 0x558f2efb12e8 <line:777:1, line:778:1>
`-FunctionDecl 0x558f2efb1358 <line:779:1, line:816:1> line:779:5 main 'int ()'
  `-CompoundStmt 0x558f2efb5928 <line:780:1, line:816:1>
    |-DeclStmt 0x558f2efb1470 <line:781:3, col:18>
    | `-VarDecl 0x558f2efb1408 <col:3, col:13> col:13 used t2039 'pthread_t':'unsigned long'
    |-CallExpr 0x558f2efb1678 <line:782:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558f2efb1660 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558f2efb1488 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558f2ef93488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558f2efb14c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558f2efb14a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558f2efb1408 't2039' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558f2efb16b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558f2efb1540 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558f2efb1518 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558f2efb14e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558f2efb16d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558f2efb1560 <col:39> 'void *(void *)' Function 0x558f2efad068 'P0' 'void *(void *)'
    | `-ParenExpr 0x558f2efb15e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558f2efb15b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558f2efb1580 <col:52> 'int' 0
    |-DeclStmt 0x558f2efb1760 <line:783:3, col:18>
    | `-VarDecl 0x558f2efb16f8 <col:3, col:13> col:13 used t2040 'pthread_t':'unsigned long'
    |-CallExpr 0x558f2efb1908 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558f2efb18f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558f2efb1778 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558f2ef93488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558f2efb17b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558f2efb1798 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558f2efb16f8 't2040' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558f2efb1948 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558f2efb1830 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558f2efb1808 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558f2efb17d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558f2efb1960 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558f2efb1850 <col:39> 'void *(void *)' Function 0x558f2efaea28 'P1' 'void *(void *)'
    | `-ParenExpr 0x558f2efb18d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558f2efb18a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558f2efb1870 <col:52> 'int' 0
    |-DeclStmt 0x558f2efb19f0 <line:785:3, col:18>
    | `-VarDecl 0x558f2efb1988 <col:3, col:13> col:13 used t2041 'pthread_t':'unsigned long'
    |-CallExpr 0x558f2efb1bb0 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558f2efb1b98 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558f2efb1a08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558f2ef93488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558f2efb1a48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558f2efb1a28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558f2efb1988 't2041' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558f2efb1bf0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558f2efb1ac0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558f2efb1a98 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558f2efb1a60 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558f2efb1c08 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558f2efb1ae0 <col:39> 'void *(void *)' Function 0x558f2efafdb0 'P2' 'void *(void *)'
    | `-ParenExpr 0x558f2efb1b78 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558f2efb1b50 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558f2efb1b00 <col:52> 'int' 0
    |-CallExpr 0x558f2efb1c58 <line:787:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558f2efb1c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558f2efb1c20 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558f2efb1d28 <line:788:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb1c78 <col:3> '_Bool' lvalue Var 0x558f2efac2d8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb1d10 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x558f2efb1cf0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x558f2efb1cd8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x558f2efb1c98 <col:21> 'int' lvalue Var 0x558f2efac120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x558f2efb1cb8 <col:41> 'int' 3
    |-CallExpr 0x558f2efb1d80 <line:789:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558f2efb1d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558f2efb1d48 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558f2efb1df8 <line:790:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558f2efb1de0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558f2efb1da0 <col:3> 'void (int)' Function 0x558f2ef52790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x558f2efb1e38 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558f2efb1e20 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558f2efb1dc0 <col:21> '_Bool' lvalue Var 0x558f2efac2d8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x558f2efb1e88 <line:791:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558f2efb1e70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558f2efb1e50 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558f2efb2170 <line:792:3, col:103> 'int' '='
    | |-DeclRefExpr 0x558f2efb1ea8 <col:3> 'int' lvalue Var 0x558f2efac690 'z' 'int'
    | `-ConditionalOperator 0x558f2efb2140 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x558f2efb1f68 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x558f2efb1f20 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x558f2efb1f08 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x558f2efb1ec8 <col:7> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x558f2efb1f50 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x558f2efb1f38 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x558f2efb1ee8 <col:25> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x558f2efb2128 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558f2efb1f88 <col:42> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x558f2efb2108 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x558f2efb20d8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x558f2efb2048 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x558f2efb2000 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x558f2efb1fe8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x558f2efb1fa8 <col:55> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x558f2efb2030 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x558f2efb2018 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x558f2efb1fc8 <col:73> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x558f2efb20a8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x558f2efb2068 <col:90> 'int' lvalue Var 0x558f2efacde8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x558f2efb20c0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x558f2efb2088 <col:102> 'int' lvalue Var 0x558f2efac690 'z' 'int'
    |-BinaryOperator 0x558f2efb2378 <line:793:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb2190 <col:3> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb2360 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558f2efb2330 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558f2efb2250 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558f2efb2208 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558f2efb21f0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558f2efb21b0 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558f2efb2238 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558f2efb2220 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558f2efb21d0 <col:38> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558f2efb22e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558f2efb22a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558f2efb2270 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558f2efb2318 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558f2efb2300 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558f2efb22c8 <col:66> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x558f2efb2660 <line:794:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb2398 <col:3> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb2648 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558f2efb2618 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558f2efb2538 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558f2efb2458 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558f2efb2410 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558f2efb23f8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558f2efb23b8 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558f2efb2440 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558f2efb2428 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558f2efb23d8 <col:38> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558f2efb2518 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558f2efb24d0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558f2efb24b8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558f2efb2478 <col:56> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558f2efb2500 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558f2efb24e8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558f2efb2498 <col:74> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558f2efb25d0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558f2efb2588 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558f2efb2558 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558f2efb2600 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558f2efb25e8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558f2efb25b0 <col:102> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x558f2efb2868 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb2680 <col:3> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb2850 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558f2efb2820 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558f2efb2740 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558f2efb26f8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558f2efb26e0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558f2efb26a0 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558f2efb2728 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558f2efb2710 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558f2efb26c0 <col:38> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558f2efb27d8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558f2efb2790 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558f2efb2760 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558f2efb2808 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558f2efb27f0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558f2efb27b8 <col:66> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x558f2efb2b60 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb2888 <col:3> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb2b38 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558f2efb2b08 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558f2efb2a28 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558f2efb2948 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558f2efb2900 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558f2efb28e8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558f2efb28a8 <col:20> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558f2efb2930 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558f2efb2918 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558f2efb28c8 <col:38> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558f2efb2a08 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558f2efb29c0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558f2efb29a8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558f2efb2968 <col:56> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558f2efb29f0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558f2efb29d8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558f2efb2988 <col:74> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558f2efb2ac0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558f2efb2a78 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558f2efb2a48 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558f2efb2af0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558f2efb2ad8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558f2efb2aa0 <col:102> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x558f2efb2bb8 <line:797:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558f2efb2ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558f2efb2b80 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558f2efb2c10 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558f2efb2bf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558f2efb2bd8 <col:3> 'void ()' Function 0x558f2ef52e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558f2efb2cc0 <line:799:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb2c30 <col:3> '_Bool' lvalue Var 0x558f2efaced8 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb2ca8 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x558f2efb2c88 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x558f2efb2c70 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x558f2efb2c50 <col:19> 'void *(void)' Function 0x558f2ef52958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x558f2efb2d70 <line:800:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb2ce0 <col:3> '_Bool' lvalue Var 0x558f2efacf50 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb2d58 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x558f2efb2d38 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x558f2efb2d20 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x558f2efb2d00 <col:19> 'void *(void)' Function 0x558f2ef52958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x558f2efb2de8 <line:801:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb2d90 <col:3> '_Bool' lvalue Var 0x558f2efac728 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb2dd0 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x558f2efb2db0 <col:21> '_Bool' lvalue Var 0x558f2efacf50 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x558f2efb2e60 <line:802:3, col:15> 'int' '='
    | |-DeclRefExpr 0x558f2efb2e08 <col:3> 'int' lvalue Var 0x558f2efac7a8 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x558f2efb2e48 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x558f2efb2e28 <col:15> 'int' lvalue Var 0x558f2efac690 'z' 'int'
    |-BinaryOperator 0x558f2efb3298 <line:803:3, col:162> 'int' '='
    | |-DeclRefExpr 0x558f2efb2e80 <col:3> 'int' lvalue Var 0x558f2efac690 'z' 'int'
    | `-ConditionalOperator 0x558f2efb3268 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x558f2efb3090 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x558f2efb2fb0 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x558f2efb2ed8 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x558f2efb2ec0 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x558f2efb2ea0 <col:8> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x558f2efb2f90 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x558f2efb2f28 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x558f2efb2f10 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x558f2efb2ef0 <col:27> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x558f2efb2f78 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x558f2efb2f60 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x558f2efb2f40 <col:46> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x558f2efb3070 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x558f2efb3008 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x558f2efb2ff0 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x558f2efb2fd0 <col:65> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x558f2efb3058 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x558f2efb3040 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x558f2efb3020 <col:84> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x558f2efb3250 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558f2efb30b0 <col:101> 'int' lvalue Var 0x558f2efac690 'z' 'int'
    |   `-ParenExpr 0x558f2efb3230 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x558f2efb3200 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x558f2efb3170 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x558f2efb3128 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x558f2efb3110 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x558f2efb30d0 <col:106> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x558f2efb3158 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x558f2efb3140 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x558f2efb30f0 <col:124> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x558f2efb31d0 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x558f2efb3190 <col:141> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x558f2efb31e8 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x558f2efb31b0 <col:153> 'int' lvalue Var 0x558f2efacde8 'z$w_buff1' 'int'
    |-BinaryOperator 0x558f2efb37a8 <line:804:3, col:208> 'int' '='
    | |-DeclRefExpr 0x558f2efb32b8 <col:3> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x558f2efb3778 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x558f2efb3748 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x558f2efb3730 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x558f2efb32d8 <col:15> '_Bool' lvalue Var 0x558f2efacf50 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x558f2efb3760 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558f2efb32f8 <col:31> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x558f2efb3710 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x558f2efb36e0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x558f2efb3508 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x558f2efb3428 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x558f2efb3350 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x558f2efb3338 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x558f2efb3318 <col:45> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x558f2efb3408 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x558f2efb33a0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x558f2efb3388 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x558f2efb3368 <col:64> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x558f2efb33f0 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x558f2efb33d8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x558f2efb33b8 <col:83> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x558f2efb34e8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x558f2efb3480 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x558f2efb3468 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x558f2efb3448 <col:102> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x558f2efb34d0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x558f2efb34b8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x558f2efb3498 <col:121> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x558f2efb36c8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x558f2efb3528 <col:138> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
    |       `-ParenExpr 0x558f2efb36a8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x558f2efb3678 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x558f2efb35e8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x558f2efb35a0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x558f2efb3588 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x558f2efb3548 <col:151> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x558f2efb35d0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x558f2efb35b8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x558f2efb3568 <col:169> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x558f2efb3648 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x558f2efb3608 <col:186> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x558f2efb3660 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x558f2efb3628 <col:198> 'int' lvalue Var 0x558f2efaccf0 'z$w_buff0' 'int'
    |-BinaryOperator 0x558f2efb3cd0 <line:805:3, col:208> 'int' '='
    | |-DeclRefExpr 0x558f2efb37c8 <col:3> 'int' lvalue Var 0x558f2efacde8 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x558f2efb3ca0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x558f2efb3c70 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x558f2efb3c58 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x558f2efb37e8 <col:15> '_Bool' lvalue Var 0x558f2efacf50 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x558f2efb3c88 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558f2efb3808 <col:31> 'int' lvalue Var 0x558f2efacde8 'z$w_buff1' 'int'
    |   `-ParenExpr 0x558f2efb3c38 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x558f2efb3c08 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x558f2efb3a18 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x558f2efb3938 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x558f2efb3860 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x558f2efb3848 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x558f2efb3828 <col:45> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x558f2efb3918 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x558f2efb38b0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x558f2efb3898 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x558f2efb3878 <col:64> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x558f2efb3900 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x558f2efb38e8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x558f2efb38c8 <col:83> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x558f2efb39f8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x558f2efb3990 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x558f2efb3978 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x558f2efb3958 <col:102> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x558f2efb39e0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x558f2efb39c8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x558f2efb39a8 <col:121> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x558f2efb3bf0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x558f2efb3a38 <col:138> 'int' lvalue Var 0x558f2efacde8 'z$w_buff1' 'int'
    |       `-ParenExpr 0x558f2efb3bd0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x558f2efb3ba0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x558f2efb3af8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x558f2efb3ab0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x558f2efb3a98 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x558f2efb3a58 <col:151> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x558f2efb3ae0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x558f2efb3ac8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x558f2efb3a78 <col:169> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x558f2efb3b70 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x558f2efb3b18 <col:186> 'int' lvalue Var 0x558f2efacde8 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x558f2efb3b88 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x558f2efb3b38 <col:198> 'int' lvalue Var 0x558f2efacde8 'z$w_buff1' 'int'
    |-BinaryOperator 0x558f2efb4278 <line:806:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb3cf0 <col:3> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb4260 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558f2efb4230 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x558f2efb41e8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x558f2efb41d0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x558f2efb3d10 <col:20> '_Bool' lvalue Var 0x558f2efacf50 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x558f2efb4218 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x558f2efb4200 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x558f2efb3d30 <col:36> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x558f2efb41b0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x558f2efb4180 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x558f2efb3f40 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x558f2efb3e60 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x558f2efb3d88 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x558f2efb3d70 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x558f2efb3d50 <col:55> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x558f2efb3e40 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x558f2efb3dd8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x558f2efb3dc0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x558f2efb3da0 <col:74> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x558f2efb3e28 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x558f2efb3e10 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x558f2efb3df0 <col:93> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x558f2efb3f20 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x558f2efb3eb8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x558f2efb3ea0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x558f2efb3e80 <col:112> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x558f2efb3f08 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x558f2efb3ef0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x558f2efb3ed0 <col:131> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x558f2efb4168 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x558f2efb4150 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x558f2efb3f60 <col:148> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x558f2efb4130 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x558f2efb4100 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x558f2efb4020 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x558f2efb3fd8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x558f2efb3fc0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x558f2efb3f80 <col:166> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x558f2efb4008 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x558f2efb3ff0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x558f2efb3fa0 <col:184> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x558f2efb40b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x558f2efb4070 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x558f2efb4040 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x558f2efb40e8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x558f2efb40d0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x558f2efb4098 <col:212> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x558f2efb4840 <line:807:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb4298 <col:3> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb4828 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558f2efb47f8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x558f2efb47b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x558f2efb4798 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x558f2efb42b8 <col:20> '_Bool' lvalue Var 0x558f2efacf50 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x558f2efb47e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x558f2efb47c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x558f2efb42d8 <col:36> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x558f2efb4778 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x558f2efb4748 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x558f2efb44e8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x558f2efb4408 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x558f2efb4330 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x558f2efb4318 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x558f2efb42f8 <col:55> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x558f2efb43e8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x558f2efb4380 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x558f2efb4368 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x558f2efb4348 <col:74> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x558f2efb43d0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x558f2efb43b8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x558f2efb4398 <col:93> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x558f2efb44c8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x558f2efb4460 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x558f2efb4448 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x558f2efb4428 <col:112> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x558f2efb44b0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x558f2efb4498 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x558f2efb4478 <col:131> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x558f2efb4730 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x558f2efb4718 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x558f2efb4508 <col:148> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x558f2efb46f8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x558f2efb46c8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x558f2efb45c8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x558f2efb4580 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x558f2efb4568 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x558f2efb4528 <col:166> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x558f2efb45b0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x558f2efb4598 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x558f2efb4548 <col:184> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x558f2efb4698 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x558f2efb4618 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x558f2efb45e8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x558f2efb46b0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x558f2efb4670 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x558f2efb4640 <col:219> 'int' 0
    |-BinaryOperator 0x558f2efb4e08 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb4860 <col:3> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb4df0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558f2efb4dc0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x558f2efb4d78 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x558f2efb4d60 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x558f2efb4880 <col:20> '_Bool' lvalue Var 0x558f2efacf50 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x558f2efb4da8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x558f2efb4d90 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x558f2efb48a0 <col:36> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x558f2efb4d40 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x558f2efb4d10 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x558f2efb4ab0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x558f2efb49d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x558f2efb48f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x558f2efb48e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x558f2efb48c0 <col:55> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x558f2efb49b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x558f2efb4948 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x558f2efb4930 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x558f2efb4910 <col:74> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x558f2efb4998 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x558f2efb4980 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x558f2efb4960 <col:93> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x558f2efb4a90 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x558f2efb4a28 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x558f2efb4a10 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x558f2efb49f0 <col:112> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x558f2efb4a78 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x558f2efb4a60 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x558f2efb4a40 <col:131> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x558f2efb4cf8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x558f2efb4ce0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x558f2efb4ad0 <col:148> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x558f2efb4cc0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x558f2efb4c90 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x558f2efb4bb0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x558f2efb4b48 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x558f2efb4b30 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x558f2efb4af0 <col:166> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x558f2efb4b98 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x558f2efb4b80 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x558f2efb4b10 <col:184> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x558f2efb4c48 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x558f2efb4c00 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x558f2efb4bd0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x558f2efb4c78 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x558f2efb4c60 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x558f2efb4c28 <col:212> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x558f2efb53d0 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb4e28 <col:3> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb53b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558f2efb5388 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x558f2efb5340 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x558f2efb5328 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x558f2efb4e48 <col:20> '_Bool' lvalue Var 0x558f2efacf50 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x558f2efb5370 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x558f2efb5358 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x558f2efb4e68 <col:36> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x558f2efb5308 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x558f2efb52d8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x558f2efb5078 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x558f2efb4f98 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x558f2efb4ec0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x558f2efb4ea8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x558f2efb4e88 <col:55> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x558f2efb4f78 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x558f2efb4f10 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x558f2efb4ef8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x558f2efb4ed8 <col:74> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x558f2efb4f60 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x558f2efb4f48 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x558f2efb4f28 <col:93> '_Bool' lvalue Var 0x558f2eface60 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x558f2efb5058 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x558f2efb4ff0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x558f2efb4fd8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x558f2efb4fb8 <col:112> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x558f2efb5040 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x558f2efb5028 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x558f2efb5008 <col:131> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x558f2efb52c0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x558f2efb52a8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x558f2efb5098 <col:148> '_Bool' lvalue Var 0x558f2efaca00 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x558f2efb5288 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x558f2efb5258 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x558f2efb5158 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x558f2efb5110 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x558f2efb50f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x558f2efb50b8 <col:166> '_Bool' lvalue Var 0x558f2efacd68 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x558f2efb5140 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x558f2efb5128 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x558f2efb50d8 <col:184> '_Bool' lvalue Var 0x558f2efac820 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x558f2efb5228 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x558f2efb51a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x558f2efb5178 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x558f2efb5240 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x558f2efb5200 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x558f2efb51d0 <col:219> 'int' 0
    |-BinaryOperator 0x558f2efb5608 <line:810:3, col:67> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb53f0 <col:3> '_Bool' lvalue Var 0x558f2efac350 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x558f2efb55f0 <col:21, col:67> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x558f2efb55d8 <col:21, col:67> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x558f2efb55b8 <col:22, col:67> 'int'
    |       `-BinaryOperator 0x558f2efb5598 <col:23, col:66> 'int' '&&'
    |         |-BinaryOperator 0x558f2efb5500 <col:23, col:38> 'int' '&&'
    |         | |-BinaryOperator 0x558f2efb5468 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x558f2efb5450 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x558f2efb5410 <col:23> 'int' lvalue Var 0x558f2efac450 'x' 'int'
    |         | | `-IntegerLiteral 0x558f2efb5430 <col:28> 'int' 2
    |         | `-BinaryOperator 0x558f2efb54e0 <col:33, col:38> 'int' '=='
    |         |   |-ImplicitCastExpr 0x558f2efb54c8 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x558f2efb5488 <col:33> 'int' lvalue Var 0x558f2efac690 'z' 'int'
    |         |   `-IntegerLiteral 0x558f2efb54a8 <col:38> 'int' 2
    |         `-BinaryOperator 0x558f2efb5578 <col:43, col:66> 'int' '=='
    |           |-ImplicitCastExpr 0x558f2efb5560 <col:43> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x558f2efb5520 <col:43> 'int' lvalue Var 0x558f2efac240 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x558f2efb5540 <col:66> 'int' 1
    |-BinaryOperator 0x558f2efb5738 <line:811:3, col:37> 'int' '='
    | |-DeclRefExpr 0x558f2efb5628 <col:3> 'int' lvalue Var 0x558f2efac690 'z' 'int'
    | `-ConditionalOperator 0x558f2efb5708 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x558f2efb56c0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x558f2efb56a8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x558f2efb5648 <col:7> '_Bool' lvalue Var 0x558f2efac728 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x558f2efb56d8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558f2efb5668 <col:25> 'int' lvalue Var 0x558f2efac7a8 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x558f2efb56f0 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x558f2efb5688 <col:37> 'int' lvalue Var 0x558f2efac690 'z' 'int'
    |-BinaryOperator 0x558f2efb57d0 <line:812:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x558f2efb5758 <col:3> '_Bool' lvalue Var 0x558f2efac728 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x558f2efb57a8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x558f2efb5778 <col:28> 'int' 0
    |-CallExpr 0x558f2efb5828 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558f2efb5810 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558f2efb57f0 <col:3> 'void ()' Function 0x558f2ef52f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558f2efb58a0 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558f2efb5888 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558f2efb5848 <col:3> 'void (int)' Function 0x558f2ef52bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x558f2efb58e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558f2efb58c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558f2efb5868 <col:21> '_Bool' lvalue Var 0x558f2efac350 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x558f2efb5918 <line:815:3, col:10>
      `-IntegerLiteral 0x558f2efb58f8 <col:10> 'int' 0
