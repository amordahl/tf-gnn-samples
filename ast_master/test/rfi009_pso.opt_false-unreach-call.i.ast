TranslationUnitDecl 0x5654ccaa7e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5654ccaa86d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5654ccaa83b0 '__int128'
|-TypedefDecl 0x5654ccaa8748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5654ccaa83d0 'unsigned __int128'
|-TypedefDecl 0x5654ccaa8a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5654ccaa8820 'struct __NSConstantString_tag'
|   `-Record 0x5654ccaa87a0 '__NSConstantString_tag'
|-TypedefDecl 0x5654ccaa8af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5654ccaa8ab0 'char *'
|   `-BuiltinType 0x5654ccaa7eb0 'char'
|-TypedefDecl 0x5654ccae7650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5654ccaa8d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5654ccaa8bd0 'struct __va_list_tag'
|     `-Record 0x5654ccaa8b50 '__va_list_tag'
|-FunctionDecl 0x5654ccae7770 <./test/rfi009_pso.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5654ccae7940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5654ccae7870 <col:31> col:34 'int'
|-FunctionDecl 0x5654ccae7ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5654ccae7be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5654ccae7d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5654ccae7c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5654ccae7f58 <col:40, col:99>
|   |-IfStmt 0x5654ccae7f28 <col:42, col:88>
|   | |-UnaryOperator 0x5654ccae7e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5654ccae7df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5654ccae7dd0 <col:47> 'int' lvalue ParmVar 0x5654ccae7c98 'expression' 'int'
|   | `-CompoundStmt 0x5654ccae7f10 <col:59, col:88>
|   |   `-LabelStmt 0x5654ccae7ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5654ccae7e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5654ccae7e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5654ccae7e20 <col:68> 'void () __attribute__((noreturn))' Function 0x5654ccae7be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5654ccae7f40 <col:89>
|   `-ReturnStmt 0x5654ccae7f48 <col:91>
|-FunctionDecl 0x5654ccae7fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5654ccae8060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5654ccae83e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5654ccae8118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5654ccae8198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5654ccae8218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5654ccae8298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5654ccae84a0 <line:11:22>
|-FunctionDecl 0x5654ccb0e520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5654ccae8510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5654ccae8590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5654ccb0e350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5654ccb0e3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5654ccb0e5e0 <line:14:22>
|-FunctionDecl 0x5654ccb0e890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5654ccb0e650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5654ccb0e6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5654ccb0e750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5654ccb0e948 <line:16:22>
|-TypedefDecl 0x5654ccb0e9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5654ccaa7f70 'unsigned char'
|-TypedefDecl 0x5654ccb0ea28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5654ccaa7f90 'unsigned short'
|-TypedefDecl 0x5654ccb0ea98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5654ccaa7fb0 'unsigned int'
|-TypedefDecl 0x5654ccb0eb08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0eb78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5654ccaa7ed0 'signed char'
|-TypedefDecl 0x5654ccb0ebe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5654ccaa7f70 'unsigned char'
|-TypedefDecl 0x5654ccb0ec58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5654ccaa7ef0 'short'
|-TypedefDecl 0x5654ccb0ecc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5654ccaa7f90 'unsigned short'
|-TypedefDecl 0x5654ccb0ed38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5654ccaa7f10 'int'
|-TypedefDecl 0x5654ccb0eda8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5654ccaa7fb0 'unsigned int'
|-TypedefDecl 0x5654ccb0ee18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0ee88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0eef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0ef68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0efd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0f048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5654ccaa7fb0 'unsigned int'
|-TypedefDecl 0x5654ccb0f0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5654ccaa7fb0 'unsigned int'
|-TypedefDecl 0x5654ccb0f128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0f198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0f208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5654ccaa7fb0 'unsigned int'
|-TypedefDecl 0x5654ccb0f278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0f2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0f378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0f3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5654ccaa7f10 'int'
|-RecordDecl 0x5654ccb0f440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5654ccb0f588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5654ccb0f640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5654ccb0f5e0 'struct __fsid_t' sugar
|   `-RecordType 0x5654ccb0f4c0 '__fsid_t'
|     `-Record 0x5654ccb0f440 ''
|-TypedefDecl 0x5654ccb0f6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0f738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0f7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0f818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5654ccaa7fb0 'unsigned int'
|-TypedefDecl 0x5654ccb0f888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0f8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5654ccaa7fb0 'unsigned int'
|-TypedefDecl 0x5654ccb0f968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0f9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5654ccaa7f10 'int'
|-TypedefDecl 0x5654ccb0fa48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5654ccaa7f10 'int'
|-TypedefDecl 0x5654ccb0fab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5654ccaa7f10 'int'
|-TypedefDecl 0x5654ccb0fb28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5654ccaa8630 'void *'
|   `-BuiltinType 0x5654ccaa7e70 'void'
|-TypedefDecl 0x5654ccb0fb98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0fc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0fc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0fce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0fd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0fdc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0fe38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb0fea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0ff18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0ff88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb0fff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb10088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5654ccb10050 '__off64_t' sugar
|   |-Typedef 0x5654ccb0f378 '__off64_t'
|   `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb10180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5654ccb10140 '__quad_t *'
|   `-TypedefType 0x5654ccb100e0 '__quad_t' sugar
|     |-Typedef 0x5654ccb0eef8 '__quad_t'
|     `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb101f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5654ccaa8ab0 'char *'
|   `-BuiltinType 0x5654ccaa7eb0 'char'
|-TypedefDecl 0x5654ccb10260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb102d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5654ccaa7fb0 'unsigned int'
|-FunctionDecl 0x5654ccb11458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5654ccb11380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5654ccb11768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5654ccb11758 <line:73:3, col:34>
|     `-CallExpr 0x5654ccb11718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5654ccb11700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5654ccb11690 <col:10> '<builtin fn type>' Function 0x5654ccb11500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5654ccb11740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5654ccb116b0 <col:29> 'unsigned int' lvalue ParmVar 0x5654ccb11380 '__bsx' 'unsigned int'
|-FunctionDecl 0x5654ccb11500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5654ccb115a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5654ccb11610 <col:10> Implicit
| `-ConstAttr 0x5654ccb11668 <col:10> Implicit
|-FunctionDecl 0x5654ccb118c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5654ccb117b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5654ccb11bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5654ccb11bc8 <line:78:3, col:34>
|     `-CallExpr 0x5654ccb11b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5654ccb11b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5654ccb11af8 <col:10> '<builtin fn type>' Function 0x5654ccb11968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5654ccb11bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5654ccb11b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5654ccb117b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5654ccb11968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5654ccb11a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5654ccb11a78 <col:10> Implicit
| `-ConstAttr 0x5654ccb11ad0 <col:10> Implicit
|-TypedefDecl 0x5654ccb11c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-TypedefDecl 0x5654ccb11c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5654ccb11c60 '__time_t' sugar
|   |-Typedef 0x5654ccb0f888 '__time_t'
|   `-BuiltinType 0x5654ccaa7f30 'long'
|-RecordDecl 0x5654ccb11cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5654ccb11da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5654ccb11e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5654ccb11ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5654ccb11e90 '__pid_t' sugar
|   |-Typedef 0x5654ccb0f3e8 '__pid_t'
|   `-BuiltinType 0x5654ccaa7f10 'int'
|-RecordDecl 0x5654ccb11f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5654ccb11fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5654ccb12030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5654ccb120f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5654ccb12158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-RecordDecl 0x5654ccb121b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5654ccb13480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5654ccb13530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5654ccb134d0 'struct cpu_set_t' sugar
|   `-RecordType 0x5654ccb12230 'cpu_set_t'
|     `-Record 0x5654ccb121b0 ''
|-FunctionDecl 0x5654ccb13808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5654ccb135d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5654ccb136e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5654ccb138b8 <line:108:19>
|-FunctionDecl 0x5654ccb13a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5654ccb13920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5654ccb13b38 <col:69>
|-FunctionDecl 0x5654ccb13cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5654ccb13ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5654ccb13d58 <col:64>
|-FunctionDecl 0x5654ccb14018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5654ccb13dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5654ccb13ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5654ccb140c8 <line:114:22>
|-FunctionDecl 0x5654ccb143b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5654ccb14130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5654ccb14228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5654ccb14460 <col:88>
|-FunctionDecl 0x5654ccb14718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5654ccb144c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5654ccb14548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5654ccb145d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5654ccb147d0 <col:62>
|-FunctionDecl 0x5654ccb14948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5654ccb14838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5654ccb149f0 <col:63>
|-FunctionDecl 0x5654ccb14b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5654ccb14bb8 <col:47>
|-FunctionDecl 0x5654ccb14cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5654ccb14c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5654ccb14d68 <col:69>
|-FunctionDecl 0x5654ccb14e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5654ccb14dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5654ccb14f18 <col:69>
|-FunctionDecl 0x5654ccb151d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5654ccb14f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5654ccb150b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5654ccb15288 <col:88>
|-TypedefDecl 0x5654ccb15318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5654ccb152e0 '__clock_t' sugar
|   |-Typedef 0x5654ccb0f6c8 '__clock_t'
|   `-BuiltinType 0x5654ccaa7f30 'long'
|-TypedefDecl 0x5654ccb153c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5654ccb15370 '__clockid_t' sugar
|   |-Typedef 0x5654ccb0fab8 '__clockid_t'
|   `-BuiltinType 0x5654ccaa7f10 'int'
|-TypedefDecl 0x5654ccb15458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5654ccb15420 '__timer_t' sugar
|   |-Typedef 0x5654ccb0fb28 '__timer_t'
|   `-PointerType 0x5654ccaa8630 'void *'
|     `-BuiltinType 0x5654ccaa7e70 'void'
|-RecordDecl 0x5654ccb154b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5654ccb15570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5654ccb155d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5654ccb15640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5654ccb156a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5654ccb15710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5654ccb15778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5654ccb157e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5654ccb15848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5654ccb158b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5654ccb15918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5654ccb15980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5654ccb159d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5654ccb15a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5654ccb15b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5654ccb15bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5654ccb15d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5654ccb15e20 <col:45>
|-FunctionDecl 0x5654ccb16000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5654ccb15ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5654ccb160a8 <col:54>
|-FunctionDecl 0x5654ccb162a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5654ccb16110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5654ccb16188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5654ccb16358 <line:158:22>
| `-ConstAttr 0x5654ccb16ff0 <col:63>
|-FunctionDecl 0x5654ccb171f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5654ccb170e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5654ccb17298 <col:56>
|-FunctionDecl 0x5654ccb17640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5654ccb17308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5654ccb17380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5654ccb17400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5654ccb174f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5654ccb17700 <col:54>
|-RecordDecl 0x5654ccb17758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5654ccb17808 parent 0x5654ccaa7e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5654ccb17a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5654ccb17b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5654ccb17b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5654ccb17bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5654ccb17cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5654ccb17de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5654ccb17d90 'struct __locale_struct *'
|   `-ElaboratedType 0x5654ccb17d20 'struct __locale_struct' sugar
|     `-RecordType 0x5654ccb177e0 'struct __locale_struct'
|       `-Record 0x5654ccb17758 '__locale_struct'
|-TypedefDecl 0x5654ccb17e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5654ccb17e60 '__locale_t' sugar
|   |-Typedef 0x5654ccb17de8 '__locale_t'
|   `-PointerType 0x5654ccb17d90 'struct __locale_struct *'
|     `-ElaboratedType 0x5654ccb17d20 'struct __locale_struct' sugar
|       `-RecordType 0x5654ccb177e0 'struct __locale_struct'
|         `-Record 0x5654ccb17758 '__locale_struct'
|-FunctionDecl 0x5654ccb192a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5654ccb17f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5654ccb17f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5654ccb19028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5654ccb190b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5654ccb19130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5654ccb19368 <col:40>
|-FunctionDecl 0x5654ccb19558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5654ccb19430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5654ccb19600 <col:66>
|-FunctionDecl 0x5654ccb19710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5654ccb19668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5654ccb197b8 <col:69>
|-FunctionDecl 0x5654ccb199e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5654ccb19820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5654ccb198b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5654ccb19a98 <col:52>
|-FunctionDecl 0x5654ccb19c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5654ccb19b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5654ccb19b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5654ccb19cf0 <col:55>
|-FunctionDecl 0x5654ccb19e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5654ccb19d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5654ccb19f30 <col:62>
|-FunctionDecl 0x5654ccb1a168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5654ccb19f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5654ccb1a210 <col:60>
|-FunctionDecl 0x5654ccb1a438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5654ccb1a290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5654ccb1a310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5654ccb1a4e8 <col:44>
|-FunctionDecl 0x5654ccb1a6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5654ccb1a550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5654ccb1a5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5654ccb1a7a8 <col:49>
|-VarDecl 0x5654ccb1a8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5654ccb1a928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5654ccb1a9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5654ccb1aa70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5654ccb1aba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5654ccb1ac40 <col:42>
|-VarDecl 0x5654ccb1acb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5654ccb1ad30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5654ccb1aeb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5654ccb1ada8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5654ccb1af60 <col:57>
|-FunctionDecl 0x5654ccb1b0d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5654ccb1afe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5654ccb1b178 <col:56>
|-FunctionDecl 0x5654ccb1b288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5654ccb1b1f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5654ccb1b330 <col:59>
|-FunctionDecl 0x5654ccb1b438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5654ccb1b3a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5654ccb1b4e0 <col:48>
| `-ConstAttr 0x5654ccb1b538 <col:89>
|-FunctionDecl 0x5654ccb1b798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5654ccb1b5e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5654ccb1b678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5654ccb1b9f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5654ccb1b888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5654ccb1b918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5654ccb1baa8 <col:88>
|-FunctionDecl 0x5654ccb1bc40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5654ccb1bb10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5654ccb1bba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5654ccb1bcf0 <col:88>
|-FunctionDecl 0x5654ccb1bf08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5654ccb1bd58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5654ccb1bde8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5654ccb1bfb8 <line:209:22>
|-FunctionDecl 0x5654ccb1c358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5654ccb1c020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5654ccb1c0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5654ccb1c170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5654ccb1c200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5654ccb1c658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5654ccb1c458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5654ccb1c530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5654ccb1c708 <col:85>
|-FunctionDecl 0x5654ccb1caf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5654ccb1c770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5654ccb1c8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5654ccb1c9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5654ccb1cbb0 <col:52>
|-FunctionDecl 0x5654ccb1cd28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5654ccb1cc18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5654ccb1cdd0 <col:61>
|-FunctionDecl 0x5654ccb1d248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5654ccb1ce38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5654ccb1ceb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5654ccb1cfe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5654ccb1d0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5654ccb1d308 <col:62>
|-FunctionDecl 0x5654ccb1d528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5654ccb1d370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5654ccb1d400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5654ccb1d5d8 <line:222:22>
|-FunctionDecl 0x5654ccb1d6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5654ccb1d640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5654ccb1d780 <col:65>
|-TypedefDecl 0x5654ccb1d7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5654ccaa7fd0 'unsigned long'
|-RecordDecl 0x5654ccb1d848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5654ccb1d990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5654ccb1d9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5654ccb1daa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5654ccb1da50 'union pthread_attr_t' sugar
|   `-RecordType 0x5654ccb1d8d0 'union pthread_attr_t'
|     `-Record 0x5654ccb1d848 'pthread_attr_t'
|-RecordDecl 0x5654ccb1db00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5654ccb1dc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5654ccb1dcf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5654ccb1dda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5654ccb1dd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5654ccb1db80 'struct __pthread_internal_list'
|     `-Record 0x5654ccb1db00 '__pthread_internal_list'
|-RecordDecl 0x5654ccb1de10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5654ccb1deb8 parent 0x5654ccaa7e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5654ccb1df90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5654ccb1dff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5654ccb1e060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5654ccb22110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5654ccb22178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5654ccb221e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5654ccb22268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5654ccb22320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5654ccb22410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5654ccb22478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5654ccb22600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5654ccb225a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5654ccb1de90 'pthread_mutex_t'
|     `-Record 0x5654ccb1de10 ''
|-RecordDecl 0x5654ccb22670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5654ccb227b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5654ccb22818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5654ccb228d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5654ccb22870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5654ccb226f0 'pthread_mutexattr_t'
|     `-Record 0x5654ccb22670 ''
|-RecordDecl 0x5654ccb22940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5654ccb229e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5654ccb22ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5654ccb22b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5654ccb22b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5654ccb22be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5654ccb22c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5654ccb22cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5654ccb22d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5654ccb22d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5654ccb22e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./test/rfi009_pso.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./test/rfi009_pso.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5654ccb22f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5654ccb22f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5654ccb24130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5654ccb23070 'union pthread_cond_t' sugar
|   `-RecordType 0x5654ccb229c0 'pthread_cond_t'
|     `-Record 0x5654ccb22940 ''
|-RecordDecl 0x5654ccb241a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5654ccb242a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5654ccb24308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5654ccb243c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5654ccb24360 'union pthread_condattr_t' sugar
|   `-RecordType 0x5654ccb24220 'pthread_condattr_t'
|     `-Record 0x5654ccb241a0 ''
|-TypedefDecl 0x5654ccb24448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5654ccaa7fb0 'unsigned int'
|-TypedefDecl 0x5654ccb244b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5654ccaa7f10 'int'
|-RecordDecl 0x5654ccb24510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5654ccb245b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5654ccb24680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5654ccb246e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5654ccb24750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5654ccb247b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5654ccb24820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5654ccb24888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5654ccb248f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5654ccb24958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5654ccb249c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5654ccb24a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5654ccb24a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5654ccb24b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./test/rfi009_pso.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./test/rfi009_pso.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5654ccb24be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5654ccb24c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5654ccb24da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5654ccb24d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5654ccb24590 'pthread_rwlock_t'
|     `-Record 0x5654ccb24510 ''
|-RecordDecl 0x5654ccb24e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5654ccb24f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5654ccb24fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5654ccb25070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5654ccb25010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5654ccb24e90 'pthread_rwlockattr_t'
|     `-Record 0x5654ccb24e10 ''
|-TypedefDecl 0x5654ccb26140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5654ccaa7f14 'volatile int' volatile
|   `-BuiltinType 0x5654ccaa7f10 'int'
|-RecordDecl 0x5654ccb26198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5654ccb262e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5654ccb26348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5654ccb26400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5654ccb263a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5654ccb26220 'pthread_barrier_t'
|     `-Record 0x5654ccb26198 ''
|-RecordDecl 0x5654ccb26470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5654ccb26570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5654ccb265d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5654ccb26690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5654ccb26630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5654ccb264f0 'pthread_barrierattr_t'
|     `-Record 0x5654ccb26470 ''
|-TypedefDecl 0x5654ccb267a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5654ccb26740 'long [8]' 8 
|   `-BuiltinType 0x5654ccaa7f30 'long'
|-EnumDecl 0x5654ccb26800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5654ccb268c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5654ccb26918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5654ccb26968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5654ccb26a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5654ccb26a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5654ccb26ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5654ccb26b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5654ccb26bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5654ccb26b98 <col:26> 'int'
| |   `-DeclRefExpr 0x5654ccb26b78 <col:26> 'int' EnumConstant 0x5654ccb26a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5654ccb26c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5654ccb26c20 <col:29> 'int'
| |   `-DeclRefExpr 0x5654ccb26c00 <col:29> 'int' EnumConstant 0x5654ccb26a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5654ccb26cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5654ccb26ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x5654ccb26c88 <col:30> 'int' EnumConstant 0x5654ccb26ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5654ccb26d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5654ccb26d30 <col:27> 'int'
|     `-DeclRefExpr 0x5654ccb26d10 <col:27> 'int' EnumConstant 0x5654ccb26bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5654ccb26d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5654ccb26e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5654ccb26ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5654ccb26ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x5654ccb26eb8 <col:30> 'int' EnumConstant 0x5654ccb26e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5654ccb26f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5654ccb26fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5654ccb26fb0 <col:29> 'int'
|     `-DeclRefExpr 0x5654ccb26f90 <col:29> 'int' EnumConstant 0x5654ccb26f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5654ccb27018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5654ccb270e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5654ccb27150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5654ccb271a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5654ccb271f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5654ccb272b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5654ccb27308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5654ccb27358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5654ccb273e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5654ccb273c8 <col:31> 'int'
|     `-DeclRefExpr 0x5654ccb273a8 <col:31> 'int' EnumConstant 0x5654ccb272b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5654ccb27430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5654ccb274f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5654ccb27548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5654ccb27598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5654ccb27668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5654ccb276b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5654ccb27708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5654ccb277d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5654ccb27828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5654ccb27878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5654ccb27ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5654ccb27b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5654ccb27b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5654ccb27ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5654ccb27cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5654ccb27dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5654ccb27e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5654ccb27e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5654ccb27f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5654ccb27f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5654ccb285b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5654ccb28080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5654ccb281a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5654ccb283a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5654ccb28420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5654ccb28678 <col:47>
| |-NonNullAttr 0x5654ccb286d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5654ccb28708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5654ccb28830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5654ccb28760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5654ccb28a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5654ccb288e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5654ccb28968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5654ccb28c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5654ccb28b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5654ccb28d00 <col:60>
|-FunctionDecl 0x5654ccb28e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5654ccb28ef0 <col:54>
| `-ConstAttr 0x5654ccb28f48 <col:95>
|-FunctionDecl 0x5654ccb2a990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5654ccb28f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5654ccb28ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5654ccb2aa40 <line:395:19>
| `-ConstAttr 0x5654ccb2aa98 <col:60>
|-FunctionDecl 0x5654ccb2ac68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5654ccb2ab30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5654ccb2ad10 <col:71>
| `-NonNullAttr 0x5654ccb2ad68 <col:112, col:126> 1
|-FunctionDecl 0x5654ccb2ae70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5654ccb2adb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5654ccb2af18 <line:398:22>
| `-NonNullAttr 0x5654ccb2af70 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb2b198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5654ccb2afb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5654ccb2b038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5654ccb2b248 <line:401:22>
| `-NonNullAttr 0x5654ccb2b2a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb2b4a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb2b2e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5654ccb2b368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5654ccb2b558 <line:404:22>
| `-NonNullAttr 0x5654ccb2b5b0 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb2b808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5654ccb2b5f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5654ccb2b6a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5654ccb2b8b8 <line:407:22>
| `-NonNullAttr 0x5654ccb2b910 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb2cb68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5654ccb2c9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5654ccb2ca28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5654ccb2cc18 <line:410:22>
| `-NonNullAttr 0x5654ccb2cc70 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb2cea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5654ccb2ccb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5654ccb2cd48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5654ccb2cf58 <line:413:22>
| `-NonNullAttr 0x5654ccb2cfb0 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb2d1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5654ccb2cff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5654ccb2d088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5654ccb2d298 <col:37>
| `-NonNullAttr 0x5654ccb2d2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x5654ccb2d4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb2d338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5654ccb2d3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5654ccb2d588 <line:419:22>
| `-NonNullAttr 0x5654ccb2d5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb2d768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb2d628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5654ccb2d6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5654ccb2d818 <line:421:22>
| `-NonNullAttr 0x5654ccb2d870 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb2da38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb2d8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5654ccb2d938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5654ccb2dae8 <line:424:22>
| `-NonNullAttr 0x5654ccb2db40 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb2dcc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb2db88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5654ccb2dc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5654ccb2dd78 <line:427:22>
| `-NonNullAttr 0x5654ccb2ddd0 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb2df78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb2de18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5654ccb2de98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5654ccb2e028 <line:430:22>
| `-NonNullAttr 0x5654ccb2e080 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb2e208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb2e0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5654ccb2e148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5654ccb2e2b8 <line:432:22>
| `-NonNullAttr 0x5654ccb2e310 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb2e538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5654ccb2e358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5654ccb2e3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5654ccb2e5e8 <line:435:22>
| |-NonNullAttr 0x5654ccb2e640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5654ccb2e678 <col:100> "" ""
|-FunctionDecl 0x5654ccb2e888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5654ccb2e6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5654ccb2e748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5654ccb2e938 <line:438:22>
| |-NonNullAttr 0x5654ccb2e990 <col:63, col:77> 1
| `-DeprecatedAttr 0x5654ccb2e9d8 <col:97> "" ""
|-FunctionDecl 0x5654ccb2ebc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5654ccb2ea28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5654ccb2eaa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5654ccb2ec78 <line:441:22>
| `-NonNullAttr 0x5654ccb2ecd0 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb2ee50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5654ccb2ed18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5654ccb2ed90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5654ccb2ef00 <line:444:22>
| `-NonNullAttr 0x5654ccb2ef58 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb2f248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5654ccb2efa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5654ccb2f028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5654ccb2f0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5654ccb2f300 <line:448:22>
| `-NonNullAttr 0x5654ccb2f358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5654ccb2f608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5654ccb2f3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5654ccb2f430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5654ccb2f4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5654ccb2f6c0 <col:43>
| `-NonNullAttr 0x5654ccb2f718 <col:84, col:98> 1
|-FunctionDecl 0x5654ccb2fa20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5654ccb2f768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5654ccb2f7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5654ccb2f878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5654ccb2fad8 <line:453:22>
| `-NonNullAttr 0x5654ccb2fb30 <col:63, col:77> 3
|-FunctionDecl 0x5654ccb2fe08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5654ccb2fb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5654ccb2fbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5654ccb2fc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5654ccb2fec0 <line:457:22>
| `-NonNullAttr 0x5654ccb2ff18 <col:63, col:80> 2 3
|-FunctionDecl 0x5654ccb30108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5654ccb2ff68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5654ccb2ffe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5654ccb301b8 <line:459:22>
|-FunctionDecl 0x5654ccb30588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5654ccb30280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5654ccb30420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5654ccb30638 <col:52, col:69> 1 2
|-FunctionDecl 0x5654ccb307e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5654ccb306c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5654ccb30740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5654ccb309f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5654ccb308a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5654ccb30928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5654ccb30b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5654ccb30ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5654ccb30c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5654ccb30d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5654ccb30dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5654ccb30ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5654ccb30f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5654ccb31100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/rfi009_pso.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5654ccb311f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5654ccb312b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5654ccb31250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5654ccb30db0 '__pthread_unwind_buf_t'
| |   `-Record 0x5654ccb30d28 ''
| `-AlignedAttr 0x5654ccb31308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5654ccb31380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5654ccb314e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5654ccb31548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5654ccb315b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5654ccb31618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5654ccb31820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5654ccb31710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5654ccb31a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5654ccb318d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5654ccb31bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5654ccb31ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5654ccb31c68 <line:488:22>
|-RecordDecl 0x5654ccb31cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5654ccb31fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5654ccb31e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5654ccb31eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5654ccb32088 <col:86>
| `-ReturnsTwiceAttr 0x5654ccb320e0 <col:12> Implicit
|-FunctionDecl 0x5654ccb32408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5654ccb321b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5654ccb322c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5654ccb324b8 <line:494:22>
| `-NonNullAttr 0x5654ccb32510 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb32688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5654ccb32558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5654ccb32730 <line:496:22>
| `-NonNullAttr 0x5654ccb32788 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb32890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5654ccb327d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5654ccb32938 <line:498:22>
| `-NonNullAttr 0x5654ccb32990 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb33ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5654ccb33a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5654ccb33b80 <line:500:22>
| `-NonNullAttr 0x5654ccb33bd8 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb33e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5654ccb33c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5654ccb33cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5654ccb33ec8 <col:36>
| `-NonNullAttr 0x5654ccb33f20 <col:66, col:83> 1 2
|-FunctionDecl 0x5654ccb34020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5654ccb33f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5654ccb340c8 <line:505:22>
| `-NonNullAttr 0x5654ccb34120 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb343b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb341d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5654ccb34250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5654ccb34468 <line:509:22>
| `-NonNullAttr 0x5654ccb344c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb34788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb34508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5654ccb34588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5654ccb34608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5654ccb34840 <line:513:22>
| `-NonNullAttr 0x5654ccb34898 <col:63, col:80> 1 3
|-FunctionDecl 0x5654ccb34a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5654ccb348e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5654ccb34ad8 <line:515:22>
| `-NonNullAttr 0x5654ccb34b30 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb34d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5654ccb34be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5654ccb34dc0 <line:517:22>
| `-NonNullAttr 0x5654ccb34e18 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb34f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5654ccb34e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5654ccb34fc8 <line:519:22>
| `-NonNullAttr 0x5654ccb35020 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb35248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb35068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5654ccb350e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5654ccb352f8 <line:523:22>
| `-NonNullAttr 0x5654ccb35350 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb35558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb35398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5654ccb35418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5654ccb35608 <line:526:22>
| `-NonNullAttr 0x5654ccb35660 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb35808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb356a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5654ccb35728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5654ccb358b8 <line:529:22>
| `-NonNullAttr 0x5654ccb35910 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb35b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb35958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5654ccb35a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5654ccb35bb0 <line:531:22>
| `-NonNullAttr 0x5654ccb35c08 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb35db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb35c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5654ccb35cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5654ccb35e68 <line:535:22>
| `-NonNullAttr 0x5654ccb35ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb36048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb35f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5654ccb35f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5654ccb360f8 <line:538:22>
| `-NonNullAttr 0x5654ccb36150 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb362f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb36198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5654ccb36218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5654ccb363a8 <line:542:22>
| `-NonNullAttr 0x5654ccb36400 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb36588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb36448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5654ccb364c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5654ccb36638 <line:545:22>
| `-NonNullAttr 0x5654ccb36690 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb36878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5654ccb366d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5654ccb36758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5654ccb36928 <line:548:22>
| `-NonNullAttr 0x5654ccb36980 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb37b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb369c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5654ccb37a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5654ccb37be8 <line:551:22>
| `-NonNullAttr 0x5654ccb37c40 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb37f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5654ccb37d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5654ccb37e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5654ccb38028 <col:29>
| `-NonNullAttr 0x5654ccb38080 <col:70, col:84> 1
|-FunctionDecl 0x5654ccb381f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5654ccb380c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5654ccb382a0 <line:556:22>
| `-NonNullAttr 0x5654ccb382f8 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb38400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5654ccb38348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5654ccb384a8 <line:558:22>
| `-NonNullAttr 0x5654ccb38500 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb38600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5654ccb38548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5654ccb386a8 <line:560:19>
| `-NonNullAttr 0x5654ccb38700 <col:49, col:63> 1
|-FunctionDecl 0x5654ccb38938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5654ccb38748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5654ccb387d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5654ccb389e8 <col:39>
| `-NonNullAttr 0x5654ccb38a70 <col:69, col:86> 1 2
|-FunctionDecl 0x5654ccb38b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5654ccb38ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5654ccb38c18 <line:565:22>
| `-NonNullAttr 0x5654ccb38c70 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb38d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5654ccb38cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5654ccb38e18 <line:567:22>
| `-NonNullAttr 0x5654ccb38e70 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb39028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5654ccb38eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5654ccb38f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5654ccb390d8 <col:39>
| `-NonNullAttr 0x5654ccb39130 <col:69, col:86> 1 2
|-FunctionDecl 0x5654ccb39230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5654ccb39178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5654ccb392d8 <line:572:22>
| `-NonNullAttr 0x5654ccb39330 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb39518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5654ccb393e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5654ccb395c0 <line:574:22>
| `-NonNullAttr 0x5654ccb39618 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb39720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5654ccb39668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5654ccb397c8 <line:576:22>
| `-NonNullAttr 0x5654ccb39820 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb39a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb39868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5654ccb398e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5654ccb39b30 <line:580:22>
| `-NonNullAttr 0x5654ccb39b88 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb39d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb39bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5654ccb39c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5654ccb39e48 <line:583:22>
| `-NonNullAttr 0x5654ccb39ea0 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3a048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb39ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5654ccb39f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5654ccb3a0f8 <line:587:22>
| `-NonNullAttr 0x5654ccb3a150 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb3a2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb3a198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5654ccb3a218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5654ccb3a388 <col:36>
| `-NonNullAttr 0x5654ccb3a3e0 <col:77, col:91> 1
|-FunctionDecl 0x5654ccb3a718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5654ccb3a4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5654ccb3a5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5654ccb3a7c8 <line:592:22>
| `-NonNullAttr 0x5654ccb3a820 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3a998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5654ccb3a868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5654ccb3aa40 <line:594:22>
| `-NonNullAttr 0x5654ccb3aac0 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3abc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5654ccb3ab08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5654ccb3ac68 <line:596:22>
| `-NonNullAttr 0x5654ccb3acc0 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb3adc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5654ccb3ad08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5654ccb3ae68 <line:598:22>
| `-NonNullAttr 0x5654ccb3aec0 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb3b0e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5654ccb3af08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5654ccb3af80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5654ccb3b198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5654ccb3b4c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5654ccb3b218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5654ccb3b290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5654ccb3b320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5654ccb3b580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5654ccb3b798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5654ccb3b660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5654ccb3b840 <line:607:22>
| `-NonNullAttr 0x5654ccb3b898 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3b9a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5654ccb3b8e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5654ccb3ba48 <line:609:22>
| `-NonNullAttr 0x5654ccb3bad0 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3bcf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb3bb18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5654ccb3bb98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5654ccb3bda8 <line:613:22>
| `-NonNullAttr 0x5654ccb3be00 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb3c008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb3be48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5654ccb3bec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5654ccb3c0b8 <col:37>
| `-NonNullAttr 0x5654ccb3c110 <col:78, col:92> 1
|-FunctionDecl 0x5654ccb3c328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5654ccb3c158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5654ccb3c200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5654ccb3c3d8 <line:619:22>
| `-NonNullAttr 0x5654ccb3c430 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb3c5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5654ccb3c478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5654ccb3c4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5654ccb3c6a8 <line:622:22>
| `-NonNullAttr 0x5654ccb3c700 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3c9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5654ccb3c7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5654ccb3c860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5654ccb3ca58 <line:624:22>
| `-NonNullAttr 0x5654ccb3cae0 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3cc58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5654ccb3cb28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5654ccb3cd00 <line:626:22>
| `-NonNullAttr 0x5654ccb3cd58 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3ce60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5654ccb3cda8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5654ccb3cf08 <line:628:22>
| `-NonNullAttr 0x5654ccb3cf60 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb3d060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5654ccb3cfa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5654ccb3d108 <line:630:22>
| `-NonNullAttr 0x5654ccb3d160 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb3d260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5654ccb3d1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5654ccb3d308 <line:632:22>
| `-NonNullAttr 0x5654ccb3d360 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb3d738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5654ccb3d440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5654ccb3d550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5654ccb3d5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5654ccb3d7f0 <line:636:22>
| `-NonNullAttr 0x5654ccb3d848 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3d9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5654ccb3d898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5654ccb3da70 <line:638:22>
| `-NonNullAttr 0x5654ccb3eb00 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3ec00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5654ccb3eb48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5654ccb3eca8 <line:640:22>
| `-NonNullAttr 0x5654ccb3ed00 <col:52, col:66> 1
|-FunctionDecl 0x5654ccb3eee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5654ccb3edb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5654ccb3ef90 <line:642:22>
| `-NonNullAttr 0x5654ccb3efe8 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3f0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5654ccb3f038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5654ccb3f198 <line:644:22>
| `-NonNullAttr 0x5654ccb3f1f0 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3f418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5654ccb3f238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5654ccb3f2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5654ccb3f4c8 <line:648:22>
| `-NonNullAttr 0x5654ccb3f520 <col:63, col:80> 1 2
|-FunctionDecl 0x5654ccb3f728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5654ccb3f568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5654ccb3f5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5654ccb3f7d8 <line:651:22>
| `-NonNullAttr 0x5654ccb3f830 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3fb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5654ccb3f910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5654ccb3fa30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5654ccb3fc48 <line:654:22>
| `-NonNullAttr 0x5654ccb3fca0 <col:63, col:77> 1
|-FunctionDecl 0x5654ccb3fdf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5654ccb3fce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5654ccb3fea0 <col:69>
|-FunctionDecl 0x5654ccb40018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5654ccb3ff08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5654ccb400c0 <col:72>
|-FunctionDecl 0x5654ccb402f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5654ccb40128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5654ccb401d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5654ccb403a8 <col:44>
|-FunctionDecl 0x5654ccb405c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5654ccb40410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5654ccb40488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5654ccb40678 <line:661:22>
| `-NonNullAttr 0x5654ccb406d0 <col:63, col:77> 2
|-FunctionDecl 0x5654ccb40b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5654ccb407b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5654ccb408c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5654ccb409d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5654ccb40be8 <col:47>
|-FunctionDecl 0x5654ccb40cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5654ccb40c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5654ccb40e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5654ccb40db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5654ccb40fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5654ccb40f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5654ccb41068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5654ccb41128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5654ccb411e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5654ccb412a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5654ccb41320 prev 0x5654ccb412a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5654ccb41388 <col:24> 'int' 0
|-VarDecl 0x5654ccb413c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5654ccb41440 prev 0x5654ccb413c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5654ccb414a8 <col:27> 'int' 0
|-VarDecl 0x5654ccb414e0 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x5654ccb41560 prev 0x5654ccb414e0 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x5654ccb415c8 <col:27> 'int' 0
|-VarDecl 0x5654ccb41600 <line:678:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5654ccb41680 prev 0x5654ccb41600 <line:679:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5654ccb416e8 <col:27> 'int' 0
|-VarDecl 0x5654ccb41720 <line:680:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5654ccb417a0 prev 0x5654ccb41720 <line:681:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5654ccb41808 <col:27> 'int' 0
|-VarDecl 0x5654ccb41838 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5654ccb418b0 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5654ccb41930 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x5654ccb419b0 prev 0x5654ccb41930 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5654ccb41a18 <col:9> 'int' 0
|-VarDecl 0x5654ccb41a50 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x5654ccb41b00 prev 0x5654ccb41a50 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5654ccb41b68 <col:9> 'int' 0
|-VarDecl 0x5654ccb41b98 <line:688:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5654ccb41c18 <line:689:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5654ccb41c90 <line:690:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5654ccb41d08 <line:691:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5654ccb41d80 <line:692:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5654ccb41df8 <line:693:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x5654ccb41e70 <line:694:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5654ccb41ee8 <line:695:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5654ccb41f60 <line:696:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5654ccb41fd8 <line:697:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x5654ccb42050 <line:698:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5654ccb420d0 <line:699:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5654ccb42150 <line:700:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5654ccb421c8 <line:701:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5654ccb42248 <line:702:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5654ccb422c0 <line:703:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5654ccb42338 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5654ccb423b0 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5654ccb424c8 prev 0x5654ccb40cf0 <line:706:1, line:733:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5654ccb42430 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5654ccb45428 <line:707:1, line:733:1>
|   |-CallExpr 0x5654ccb425d8 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb425c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb42570 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5654ccb42650 <line:709:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5654ccb425f8 <col:3> 'int' lvalue Var 0x5654ccb41440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5654ccb42638 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb42618 <col:25> 'int' lvalue Var 0x5654ccb419b0 'x' 'int'
|   |-CallExpr 0x5654ccb426a8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb42690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb42670 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5654ccb42700 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb426e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb426c8 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5654ccb427c8 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb42720 <col:3> '_Bool' lvalue Var 0x5654ccb42338 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5654ccb427a8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5654ccb42790 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5654ccb42740 <col:19> '_Bool (void)' Function 0x5654ccae7770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5654ccb42860 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb427e8 <col:3> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5654ccb42840 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5654ccb42828 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5654ccb42808 <col:19> '_Bool (void)' Function 0x5654ccae7770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5654ccb428d8 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb42880 <col:3> '_Bool' lvalue Var 0x5654ccb41b98 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb428c0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb428a0 <col:21> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5654ccb42950 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5654ccb428f8 <col:3> 'int' lvalue Var 0x5654ccb41c18 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5654ccb42938 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb42918 <col:15> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   |-BinaryOperator 0x5654ccb42da0 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5654ccb42970 <col:3> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   | `-ConditionalOperator 0x5654ccb42d70 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5654ccb42b98 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5654ccb42aa0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5654ccb429c8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5654ccb429b0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5654ccb42990 <col:8> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5654ccb42a80 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5654ccb42a18 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5654ccb42a00 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5654ccb429e0 <col:27> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5654ccb42a68 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5654ccb42a50 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5654ccb42a30 <col:46> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5654ccb42b78 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5654ccb42b10 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5654ccb42ae0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5654ccb42ac0 <col:65> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5654ccb42b60 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5654ccb42b48 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5654ccb42b28 <col:84> '_Bool' lvalue Var 0x5654ccb41ee8 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5654ccb42d58 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb42bb8 <col:101> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   |   `-ParenExpr 0x5654ccb42d38 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5654ccb42d08 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5654ccb42c78 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5654ccb42c30 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5654ccb42c18 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5654ccb42bd8 <col:106> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5654ccb42c60 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5654ccb42c48 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5654ccb42bf8 <col:124> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5654ccb42cd8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5654ccb42c98 <col:141> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5654ccb42cf0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb42cb8 <col:153> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5654ccb432b0 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5654ccb42dc0 <col:3> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5654ccb43280 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5654ccb43250 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5654ccb43238 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5654ccb42de0 <col:15> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5654ccb43268 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb42e00 <col:31> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5654ccb43218 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5654ccb431e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5654ccb43010 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5654ccb42f30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5654ccb42e58 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5654ccb42e40 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5654ccb42e20 <col:45> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5654ccb42f10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5654ccb42ea8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5654ccb42e90 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5654ccb42e70 <col:64> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5654ccb42ef8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5654ccb42ee0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5654ccb42ec0 <col:83> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5654ccb42ff0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5654ccb42f88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5654ccb42f70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5654ccb42f50 <col:102> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5654ccb42fd8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5654ccb42fc0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5654ccb42fa0 <col:121> '_Bool' lvalue Var 0x5654ccb41ee8 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5654ccb431d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5654ccb43030 <col:138> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5654ccb431b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5654ccb43180 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5654ccb430f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5654ccb430a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5654ccb43090 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5654ccb43050 <col:151> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5654ccb430d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5654ccb430c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5654ccb43070 <col:169> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5654ccb43150 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5654ccb43110 <col:186> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5654ccb43168 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5654ccb43130 <col:198> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5654ccb437c0 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5654ccb432d0 <col:3> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5654ccb43790 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5654ccb43760 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5654ccb43748 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5654ccb432f0 <col:15> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5654ccb43778 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb43310 <col:31> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5654ccb43728 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5654ccb436f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5654ccb43520 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5654ccb43440 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5654ccb43368 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5654ccb43350 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5654ccb43330 <col:45> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5654ccb43420 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5654ccb433b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5654ccb433a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5654ccb43380 <col:64> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5654ccb43408 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5654ccb433f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5654ccb433d0 <col:83> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5654ccb43500 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5654ccb43498 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5654ccb43480 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5654ccb43460 <col:102> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5654ccb434e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5654ccb434d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5654ccb434b0 <col:121> '_Bool' lvalue Var 0x5654ccb41ee8 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5654ccb436e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5654ccb43540 <col:138> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5654ccb436c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5654ccb43690 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5654ccb43600 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5654ccb435b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5654ccb435a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5654ccb43560 <col:151> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5654ccb435e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5654ccb435d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5654ccb43580 <col:169> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5654ccb43660 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5654ccb43620 <col:186> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5654ccb43678 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5654ccb43640 <col:198> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5654ccb43d78 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb437e0 <col:3> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb43d60 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb43d30 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5654ccb43ce8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb43cd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb43800 <col:20> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb43d18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb43d00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb43820 <col:36> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5654ccb43cb0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5654ccb43c80 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5654ccb43a30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5654ccb43950 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5654ccb43878 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5654ccb43860 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5654ccb43840 <col:55> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5654ccb43930 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5654ccb438c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5654ccb438b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5654ccb43890 <col:74> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5654ccb43918 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5654ccb43900 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5654ccb438e0 <col:93> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5654ccb43a10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5654ccb439a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5654ccb43990 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5654ccb43970 <col:112> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5654ccb439f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5654ccb439e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5654ccb439c0 <col:131> '_Bool' lvalue Var 0x5654ccb41ee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5654ccb43c68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5654ccb43c50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5654ccb43a50 <col:148> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5654ccb43c30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5654ccb43c00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5654ccb43b20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5654ccb43ac8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5654ccb43ab0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5654ccb43a70 <col:166> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5654ccb43af8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5654ccb43ae0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5654ccb43a90 <col:184> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5654ccb43bb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5654ccb43b70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5654ccb43b40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5654ccb43be8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5654ccb43bd0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5654ccb43b98 <col:212> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5654ccb44340 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb43d98 <col:3> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb44328 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb442f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5654ccb442b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb44298 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb43db8 <col:20> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb442e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb442c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb43dd8 <col:36> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5654ccb44278 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5654ccb44248 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5654ccb43fe8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5654ccb43f08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5654ccb43e30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5654ccb43e18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5654ccb43df8 <col:55> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5654ccb43ee8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5654ccb43e80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5654ccb43e68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5654ccb43e48 <col:74> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5654ccb43ed0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5654ccb43eb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5654ccb43e98 <col:93> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5654ccb43fc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5654ccb43f60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5654ccb43f48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5654ccb43f28 <col:112> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5654ccb43fb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5654ccb43f98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5654ccb43f78 <col:131> '_Bool' lvalue Var 0x5654ccb41ee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5654ccb44230 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5654ccb44218 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5654ccb44008 <col:148> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5654ccb441f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5654ccb441c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5654ccb440c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5654ccb44080 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5654ccb44068 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5654ccb44028 <col:166> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5654ccb440b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5654ccb44098 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5654ccb44048 <col:184> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5654ccb44198 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5654ccb44118 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5654ccb440e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5654ccb441b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5654ccb44170 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5654ccb44140 <col:219> 'int' 0
|   |-BinaryOperator 0x5654ccb448e8 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb44360 <col:3> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb448d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb448a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5654ccb44858 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb44840 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb44380 <col:20> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb44888 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb44870 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb443a0 <col:36> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5654ccb44820 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5654ccb447f0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5654ccb445b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5654ccb444d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5654ccb443f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5654ccb443e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5654ccb443c0 <col:55> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5654ccb444b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5654ccb44448 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5654ccb44430 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5654ccb44410 <col:74> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5654ccb44498 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5654ccb44480 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5654ccb44460 <col:93> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5654ccb44590 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5654ccb44528 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5654ccb44510 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5654ccb444f0 <col:112> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5654ccb44578 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5654ccb44560 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5654ccb44540 <col:131> '_Bool' lvalue Var 0x5654ccb41ee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5654ccb447d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5654ccb447c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5654ccb445d0 <col:148> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5654ccb447a0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5654ccb44770 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5654ccb44690 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5654ccb44648 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5654ccb44630 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5654ccb445f0 <col:166> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5654ccb44678 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5654ccb44660 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5654ccb44610 <col:184> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5654ccb44728 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5654ccb446e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5654ccb446b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5654ccb44758 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5654ccb44740 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5654ccb44708 <col:212> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5654ccb44ec0 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb44908 <col:3> '_Bool' lvalue Var 0x5654ccb41ee8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb44ea8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb44e78 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5654ccb44e30 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb44e18 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb44928 <col:20> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb44e60 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb44e48 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb44948 <col:36> '_Bool' lvalue Var 0x5654ccb41ee8 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5654ccb44df8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5654ccb44dc8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5654ccb44b68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5654ccb44a78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5654ccb449a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5654ccb44988 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5654ccb44968 <col:55> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5654ccb44a58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5654ccb449f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5654ccb449d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5654ccb449b8 <col:74> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5654ccb44a40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5654ccb44a28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5654ccb44a08 <col:93> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5654ccb44b48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5654ccb44ad0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5654ccb44ab8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5654ccb44a98 <col:112> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5654ccb44b30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5654ccb44b08 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5654ccb44ae8 <col:131> '_Bool' lvalue Var 0x5654ccb41ee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5654ccb44db0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5654ccb44d98 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5654ccb44b88 <col:148> '_Bool' lvalue Var 0x5654ccb41ee8 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5654ccb44d78 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5654ccb44d48 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5654ccb44c48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5654ccb44c00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5654ccb44be8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5654ccb44ba8 <col:166> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5654ccb44c30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5654ccb44c18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5654ccb44bc8 <col:184> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5654ccb44d18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5654ccb44c98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5654ccb44c68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5654ccb44d30 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5654ccb44cf0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5654ccb44cc0 <col:219> 'int' 0
|   |-BinaryOperator 0x5654ccb44f38 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5654ccb44ee0 <col:3> 'int' lvalue Var 0x5654ccb41560 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x5654ccb44f20 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb44f00 <col:25> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   |-BinaryOperator 0x5654ccb45068 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5654ccb44f58 <col:3> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   | `-ConditionalOperator 0x5654ccb45038 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5654ccb44ff0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5654ccb44fd8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5654ccb44f78 <col:7> '_Bool' lvalue Var 0x5654ccb41b98 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5654ccb45008 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb44f98 <col:25> 'int' lvalue Var 0x5654ccb41c18 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5654ccb45020 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5654ccb44fb8 <col:37> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   |-BinaryOperator 0x5654ccb45100 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb45088 <col:3> '_Bool' lvalue Var 0x5654ccb41b98 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5654ccb450d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5654ccb450a8 <col:28> 'int' 0
|   |-CallExpr 0x5654ccb45158 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb45140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb45120 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5654ccb451b0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb45198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb45178 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5654ccb45208 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb451f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb451d0 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5654ccb45260 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb45248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb45228 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5654ccb45318 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5654ccb45280 <col:3> 'int' lvalue Var 0x5654ccb41320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5654ccb452f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5654ccb452e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb452a0 <col:22> 'int' lvalue Var 0x5654ccb41320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5654ccb452c0 <col:41> 'int' 1
|   |-CallExpr 0x5654ccb45370 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb45358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb45338 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5654ccb45418 <line:732:3, col:36>
|     `-CallExpr 0x5654ccb453f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5654ccb453e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5654ccb45390 <col:10> 'void *(void)' Function 0x5654ccae7ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5654ccb455b0 prev 0x5654ccb40e48 <line:734:1, line:778:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5654ccb45518 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5654ccb49830 <line:735:1, line:778:1>
|   |-CallExpr 0x5654ccb45690 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb45678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb45658 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5654ccb45708 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5654ccb456b0 <col:3> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5654ccb456f0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb456d0 <col:15> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5654ccb45768 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5654ccb45728 <col:3> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5654ccb45748 <col:15> 'int' 1
|   |-BinaryOperator 0x5654ccb457e0 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb45788 <col:3> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb457c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb457a8 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5654ccb45878 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb45800 <col:3> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5654ccb45850 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5654ccb45820 <col:27> 'int' 1
|   |-CallExpr 0x5654ccb459f8 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5654ccb459e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5654ccb45898 <col:3> 'void (int)' Function 0x5654ccae7d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5654ccb45998 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5654ccb45978 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5654ccb45958 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5654ccb45910 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5654ccb458f8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5654ccb458b8 <col:23> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5654ccb45940 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5654ccb45928 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5654ccb458d8 <col:41> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5654ccb45a78 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb45a20 <col:3> '_Bool' lvalue Var 0x5654ccb41e70 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb45a60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb45a40 <col:20> '_Bool' lvalue Var 0x5654ccb41c90 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5654ccb45af0 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb45a98 <col:3> '_Bool' lvalue Var 0x5654ccb41ee8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb45ad8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb45ab8 <col:20> '_Bool' lvalue Var 0x5654ccb41d08 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5654ccb45b78 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb45b10 <col:3> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb45b60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb45b40 <col:20> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5654ccb45bf0 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb45b98 <col:3> '_Bool' lvalue Var 0x5654ccb41fd8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb45bd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb45bb8 <col:20> '_Bool' lvalue Var 0x5654ccb41df8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5654ccb45c88 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb45c10 <col:3> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5654ccb45c60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5654ccb45c30 <col:27> 'int' 1
|   |-CallExpr 0x5654ccb45ce0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb45cc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb45ca8 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5654ccb45d38 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb45d20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb45d00 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5654ccb45dd0 <line:749:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb45d58 <col:3> '_Bool' lvalue Var 0x5654ccb42338 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5654ccb45db0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5654ccb45d98 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5654ccb45d78 <col:19> '_Bool (void)' Function 0x5654ccae7770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5654ccb45e68 <line:750:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb45df0 <col:3> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5654ccb45e48 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5654ccb45e30 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5654ccb45e10 <col:19> '_Bool (void)' Function 0x5654ccae7770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5654ccb45ee0 <line:751:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb45e88 <col:3> '_Bool' lvalue Var 0x5654ccb41b98 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb45ec8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb45ea8 <col:21> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5654ccb45f58 <line:752:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5654ccb45f00 <col:3> 'int' lvalue Var 0x5654ccb41c18 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5654ccb45f40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb45f20 <col:15> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   |-BinaryOperator 0x5654ccb46390 <line:753:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5654ccb45f78 <col:3> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   | `-ConditionalOperator 0x5654ccb46360 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5654ccb46188 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5654ccb460a8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5654ccb45fd0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5654ccb45fb8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5654ccb45f98 <col:8> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5654ccb46088 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5654ccb46020 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5654ccb46008 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5654ccb45fe8 <col:27> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5654ccb46070 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5654ccb46058 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5654ccb46038 <col:46> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5654ccb46168 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5654ccb46100 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5654ccb460e8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5654ccb460c8 <col:65> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5654ccb46150 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5654ccb46138 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5654ccb46118 <col:84> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5654ccb46348 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb461a8 <col:101> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   |   `-ParenExpr 0x5654ccb46328 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5654ccb462f8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5654ccb46268 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5654ccb46220 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5654ccb46208 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5654ccb461c8 <col:106> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5654ccb46250 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5654ccb46238 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5654ccb461e8 <col:124> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5654ccb462c8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5654ccb46288 <col:141> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5654ccb462e0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb462a8 <col:153> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5654ccb468a0 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5654ccb463b0 <col:3> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5654ccb46870 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5654ccb46840 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5654ccb46828 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5654ccb463d0 <col:15> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5654ccb46858 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb463f0 <col:31> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5654ccb46808 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5654ccb467d8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5654ccb46600 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5654ccb46520 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5654ccb46448 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5654ccb46430 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5654ccb46410 <col:45> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5654ccb46500 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5654ccb46498 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5654ccb46480 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5654ccb46460 <col:64> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5654ccb464e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5654ccb464d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5654ccb464b0 <col:83> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5654ccb465e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5654ccb46578 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5654ccb46560 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5654ccb46540 <col:102> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5654ccb465c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5654ccb465b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5654ccb46590 <col:121> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5654ccb467c0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5654ccb46620 <col:138> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5654ccb467a0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5654ccb46770 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5654ccb466e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5654ccb46698 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5654ccb46680 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5654ccb46640 <col:151> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5654ccb466c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5654ccb466b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5654ccb46660 <col:169> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5654ccb46740 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5654ccb46700 <col:186> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5654ccb46758 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5654ccb46720 <col:198> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5654ccb46dd0 <line:755:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5654ccb468c0 <col:3> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5654ccb46da0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5654ccb46d70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5654ccb46d58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5654ccb468e0 <col:15> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5654ccb46d88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb46900 <col:31> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5654ccb46d38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5654ccb46d08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5654ccb46b10 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5654ccb46a30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5654ccb46958 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5654ccb46940 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5654ccb46920 <col:45> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5654ccb46a10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5654ccb469a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5654ccb46990 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5654ccb46970 <col:64> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5654ccb469f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5654ccb469e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5654ccb469c0 <col:83> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5654ccb46af0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5654ccb46a88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5654ccb46a70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5654ccb46a50 <col:102> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5654ccb46ad8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5654ccb46ac0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5654ccb46aa0 <col:121> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5654ccb46cf0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5654ccb46b50 <col:138> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5654ccb46cd0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5654ccb46ca0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5654ccb46c10 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5654ccb46bc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5654ccb46bb0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5654ccb46b70 <col:151> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5654ccb46bf8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5654ccb46be0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5654ccb46b90 <col:169> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5654ccb46c70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5654ccb46c30 <col:186> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5654ccb46c88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5654ccb46c50 <col:198> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5654ccb47378 <line:756:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb46df0 <col:3> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb47360 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb47330 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5654ccb472e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb472d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb46e10 <col:20> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb47318 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb47300 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb46e30 <col:36> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5654ccb472b0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5654ccb47280 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5654ccb47040 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5654ccb46f60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5654ccb46e88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5654ccb46e70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5654ccb46e50 <col:55> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5654ccb46f40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5654ccb46ed8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5654ccb46ec0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5654ccb46ea0 <col:74> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5654ccb46f28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5654ccb46f10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5654ccb46ef0 <col:93> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5654ccb47020 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5654ccb46fb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5654ccb46fa0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5654ccb46f80 <col:112> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5654ccb47008 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5654ccb46ff0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5654ccb46fd0 <col:131> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5654ccb47268 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5654ccb47250 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5654ccb47060 <col:148> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5654ccb47230 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5654ccb47200 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5654ccb47120 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5654ccb470d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5654ccb470c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5654ccb47080 <col:166> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5654ccb47108 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5654ccb470f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5654ccb470a0 <col:184> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5654ccb471b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5654ccb47170 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5654ccb47140 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5654ccb471e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5654ccb471d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5654ccb47198 <col:212> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5654ccb47940 <line:757:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb47398 <col:3> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb47928 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb478f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5654ccb478b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb47898 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb473b8 <col:20> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb478e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb478c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb473d8 <col:36> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5654ccb47878 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5654ccb47848 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5654ccb475e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5654ccb47508 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5654ccb47430 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5654ccb47418 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5654ccb473f8 <col:55> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5654ccb474e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5654ccb47480 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5654ccb47468 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5654ccb47448 <col:74> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5654ccb474d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5654ccb474b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5654ccb47498 <col:93> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5654ccb475c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5654ccb47560 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5654ccb47548 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5654ccb47528 <col:112> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5654ccb475b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5654ccb47598 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5654ccb47578 <col:131> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5654ccb47830 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5654ccb47818 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5654ccb47608 <col:148> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5654ccb477f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5654ccb477c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5654ccb476c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5654ccb47680 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5654ccb47668 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5654ccb47628 <col:166> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5654ccb476b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5654ccb47698 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5654ccb47648 <col:184> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5654ccb47798 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5654ccb47718 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5654ccb476e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5654ccb477b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5654ccb47770 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5654ccb47740 <col:219> 'int' 0
|   |-BinaryOperator 0x5654ccb47f08 <line:758:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb47960 <col:3> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb47ef0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb47ec0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5654ccb47e78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb47e60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb47980 <col:20> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb47ea8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb47e90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb479a0 <col:36> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5654ccb47e40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5654ccb47e10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5654ccb47bd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5654ccb47ad0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5654ccb479f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5654ccb479e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5654ccb479c0 <col:55> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5654ccb47ab0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5654ccb47a48 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5654ccb47a30 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5654ccb47a10 <col:74> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5654ccb47a98 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5654ccb47a80 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5654ccb47a60 <col:93> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5654ccb47bb0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5654ccb47b28 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5654ccb47b10 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5654ccb47af0 <col:112> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5654ccb47b98 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5654ccb47b80 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5654ccb47b60 <col:131> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5654ccb47df8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5654ccb47de0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5654ccb47bf0 <col:148> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5654ccb47dc0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5654ccb47d90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5654ccb47cb0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5654ccb47c68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5654ccb47c50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5654ccb47c10 <col:166> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5654ccb47c98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5654ccb47c80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5654ccb47c30 <col:184> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5654ccb47d48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5654ccb47d00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5654ccb47cd0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5654ccb47d78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5654ccb47d60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5654ccb47d28 <col:212> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5654ccb484d0 <line:759:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb47f28 <col:3> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb484b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb48488 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5654ccb48440 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb48428 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb47f48 <col:20> '_Bool' lvalue Var 0x5654ccb423b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb48470 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5654ccb48458 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5654ccb47f68 <col:36> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5654ccb48408 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5654ccb483d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5654ccb48178 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5654ccb48098 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5654ccb47fc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5654ccb47fa8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5654ccb47f88 <col:55> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5654ccb48078 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5654ccb48010 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5654ccb47ff8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5654ccb47fd8 <col:74> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5654ccb48060 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5654ccb48048 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5654ccb48028 <col:93> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5654ccb48158 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5654ccb480f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5654ccb480d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5654ccb480b8 <col:112> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5654ccb48140 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5654ccb48128 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5654ccb48108 <col:131> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5654ccb483c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5654ccb483a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5654ccb48198 <col:148> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5654ccb48388 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5654ccb48358 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5654ccb48258 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5654ccb48210 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5654ccb481f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5654ccb481b8 <col:166> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5654ccb48240 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5654ccb48228 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5654ccb481d8 <col:184> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5654ccb48328 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5654ccb482a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5654ccb48278 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5654ccb48340 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5654ccb48300 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5654ccb482d0 <col:219> 'int' 0
|   |-BinaryOperator 0x5654ccb48548 <line:760:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5654ccb484f0 <col:3> 'int' lvalue Var 0x5654ccb41680 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5654ccb48530 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb48510 <col:25> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   |-BinaryOperator 0x5654ccb48678 <line:761:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5654ccb48568 <col:3> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   | `-ConditionalOperator 0x5654ccb48648 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5654ccb48600 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5654ccb485e8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5654ccb48588 <col:7> '_Bool' lvalue Var 0x5654ccb41b98 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5654ccb48618 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb485a8 <col:25> 'int' lvalue Var 0x5654ccb41c18 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5654ccb48630 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5654ccb485c8 <col:37> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   |-BinaryOperator 0x5654ccb48710 <line:762:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb48698 <col:3> '_Bool' lvalue Var 0x5654ccb41b98 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5654ccb486e8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5654ccb486b8 <col:28> 'int' 0
|   |-CallExpr 0x5654ccb48768 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb48750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb48730 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5654ccb487c0 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb487a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb48788 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5654ccb48838 <line:765:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5654ccb487e0 <col:3> 'int' lvalue Var 0x5654ccb417a0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5654ccb48820 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5654ccb48800 <col:25> 'int' lvalue Var 0x5654ccb419b0 'x' 'int'
|   |-CallExpr 0x5654ccb48890 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb48878 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb48858 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5654ccb488e8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb488d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb488b0 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5654ccb48c08 <line:768:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5654ccb48908 <col:3> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   | `-ConditionalOperator 0x5654ccb48bd8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5654ccb489c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5654ccb48980 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5654ccb48968 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5654ccb48928 <col:7> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5654ccb489b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5654ccb48998 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5654ccb48948 <col:25> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5654ccb48bc0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb489e8 <col:42> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5654ccb48ba0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5654ccb48b70 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5654ccb48aa8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5654ccb48a60 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5654ccb48a48 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5654ccb48a08 <col:55> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5654ccb48a90 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5654ccb48a78 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5654ccb48a28 <col:73> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5654ccb48b08 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5654ccb48ac8 <col:90> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5654ccb48b20 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb48ae8 <col:102> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   |-BinaryOperator 0x5654ccb48e10 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb48c28 <col:3> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb48df8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb48dc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5654ccb48ce8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5654ccb48ca0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5654ccb48c88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5654ccb48c48 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5654ccb48cd0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5654ccb48cb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5654ccb48c68 <col:38> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb48d80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5654ccb48d38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5654ccb48d08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5654ccb48db0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5654ccb48d98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb48d60 <col:66> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5654ccb490f8 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb48e30 <col:3> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb490e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb490b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5654ccb48fd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5654ccb48ef0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5654ccb48ea8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5654ccb48e90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5654ccb48e50 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5654ccb48ed8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5654ccb48ec0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5654ccb48e70 <col:38> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5654ccb48fb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5654ccb48f68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5654ccb48f50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5654ccb48f10 <col:56> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5654ccb48f98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5654ccb48f80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5654ccb48f30 <col:74> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb49068 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5654ccb49020 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5654ccb48ff0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5654ccb49098 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5654ccb49080 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb49048 <col:102> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5654ccb49300 <line:771:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb49118 <col:3> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb492e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb492b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5654ccb491d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5654ccb49190 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5654ccb49178 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5654ccb49138 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5654ccb491c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5654ccb491a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5654ccb49158 <col:38> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb49270 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5654ccb49228 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5654ccb491f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5654ccb492a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5654ccb49288 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb49250 <col:66> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5654ccb495e8 <line:772:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb49320 <col:3> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb495d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb495a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5654ccb494c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5654ccb493e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5654ccb49398 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5654ccb49380 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5654ccb49340 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5654ccb493c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5654ccb493b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5654ccb49360 <col:38> '_Bool' lvalue Var 0x5654ccb41d80 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5654ccb494a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5654ccb49458 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5654ccb49440 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5654ccb49400 <col:56> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5654ccb49488 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5654ccb49470 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5654ccb49420 <col:74> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb49558 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5654ccb49510 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5654ccb494e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5654ccb49588 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5654ccb49570 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb49538 <col:102> '_Bool' lvalue Var 0x5654ccb41f60 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5654ccb49640 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb49628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb49608 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5654ccb49698 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb49680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb49660 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5654ccb49750 <line:775:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5654ccb496b8 <col:3> 'int' lvalue Var 0x5654ccb41320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5654ccb49730 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5654ccb49718 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb496d8 <col:22> 'int' lvalue Var 0x5654ccb41320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5654ccb496f8 <col:41> 'int' 1
|   |-CallExpr 0x5654ccb497a8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb49790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb49770 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5654ccb49820 <line:777:3, col:36>
|     `-CallExpr 0x5654ccb49800 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5654ccb497e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5654ccb497c8 <col:10> 'void *(void)' Function 0x5654ccae7ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5654ccb49a40 prev 0x5654ccb40fa0 <line:779:1, line:795:1> line:779:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5654ccb499a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5654ccb4ab90 <line:780:1, line:795:1>
|   |-CallExpr 0x5654ccb49b20 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb49b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb49ae8 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5654ccb49ba0 <line:782:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5654ccb49b40 <col:3> 'int' lvalue Var 0x5654ccb419b0 'x' 'int'
|   | `-IntegerLiteral 0x5654ccb49b80 <col:7> 'int' 1
|   |-CallExpr 0x5654ccb49bf8 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb49be0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb49bc0 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5654ccb49c50 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb49c38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb49c18 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5654ccb49f38 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5654ccb49c70 <col:3> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   | `-ConditionalOperator 0x5654ccb49f08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5654ccb49d30 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5654ccb49ce8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5654ccb49cd0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5654ccb49c90 <col:7> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5654ccb49d18 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5654ccb49d00 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5654ccb49cb0 <col:25> '_Bool' lvalue Var 0x5654ccb41df8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5654ccb49ef0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb49d50 <col:42> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5654ccb49ed0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5654ccb49ea0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5654ccb49e10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5654ccb49dc8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5654ccb49db0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5654ccb49d70 <col:55> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5654ccb49df8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5654ccb49de0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5654ccb49d90 <col:73> '_Bool' lvalue Var 0x5654ccb41fd8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5654ccb49e70 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5654ccb49e30 <col:90> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5654ccb49e88 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb49e50 <col:102> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
|   |-BinaryOperator 0x5654ccb4a140 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb49f58 <col:3> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb4a128 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb4a0f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5654ccb4a018 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5654ccb49fd0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5654ccb49fb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5654ccb49f78 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5654ccb4a000 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5654ccb49fe8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5654ccb49f98 <col:38> '_Bool' lvalue Var 0x5654ccb41df8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb4a0b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5654ccb4a068 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5654ccb4a038 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5654ccb4a0e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5654ccb4a0c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb4a090 <col:66> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5654ccb4a428 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb4a160 <col:3> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb4a410 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb4a3e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5654ccb4a300 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5654ccb4a220 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5654ccb4a1d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5654ccb4a1c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5654ccb4a180 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5654ccb4a208 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5654ccb4a1f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5654ccb4a1a0 <col:38> '_Bool' lvalue Var 0x5654ccb41df8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5654ccb4a2e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5654ccb4a298 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5654ccb4a280 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5654ccb4a240 <col:56> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5654ccb4a2c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5654ccb4a2b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5654ccb4a260 <col:74> '_Bool' lvalue Var 0x5654ccb41fd8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb4a398 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5654ccb4a350 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5654ccb4a320 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5654ccb4a3c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5654ccb4a3b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb4a378 <col:102> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5654ccb4a630 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb4a448 <col:3> '_Bool' lvalue Var 0x5654ccb41df8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb4a618 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb4a5e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5654ccb4a508 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5654ccb4a4c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5654ccb4a4a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5654ccb4a468 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5654ccb4a4f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5654ccb4a4d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5654ccb4a488 <col:38> '_Bool' lvalue Var 0x5654ccb41df8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb4a5a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5654ccb4a558 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5654ccb4a528 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5654ccb4a5d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5654ccb4a5b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb4a580 <col:66> '_Bool' lvalue Var 0x5654ccb41df8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5654ccb4a918 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5654ccb4a650 <col:3> '_Bool' lvalue Var 0x5654ccb41fd8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5654ccb4a900 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5654ccb4a8d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5654ccb4a7f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5654ccb4a710 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5654ccb4a6c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5654ccb4a6b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5654ccb4a670 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5654ccb4a6f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5654ccb4a6e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5654ccb4a690 <col:38> '_Bool' lvalue Var 0x5654ccb41df8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5654ccb4a7d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5654ccb4a788 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5654ccb4a770 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5654ccb4a730 <col:56> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5654ccb4a7b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5654ccb4a7a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5654ccb4a750 <col:74> '_Bool' lvalue Var 0x5654ccb41fd8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5654ccb4a888 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5654ccb4a840 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5654ccb4a810 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5654ccb4a8b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5654ccb4a8a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5654ccb4a868 <col:102> '_Bool' lvalue Var 0x5654ccb41fd8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5654ccb4a970 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb4a958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb4a938 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5654ccb4a9c8 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5654ccb4a9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb4a990 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5654ccb4aa80 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5654ccb4a9e8 <col:3> 'int' lvalue Var 0x5654ccb41320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5654ccb4aa60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5654ccb4aa48 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5654ccb4aa08 <col:22> 'int' lvalue Var 0x5654ccb41320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5654ccb4aa28 <col:41> 'int' 1
|   |-CallExpr 0x5654ccb4aad8 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5654ccb4aac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5654ccb4aaa0 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5654ccb4ab50 <line:794:3, col:36>
|     `-CallExpr 0x5654ccb4ab30 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5654ccb4ab18 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5654ccb4aaf8 <col:10> 'void *(void)' Function 0x5654ccae7ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5654ccb4ac30 prev 0x5654ccb41068 <line:796:1, line:798:1> line:796:6 fence 'void ()'
| `-CompoundStmt 0x5654ccb4acd0 <line:797:1, line:798:1>
|-FunctionDecl 0x5654ccb4ad00 prev 0x5654ccb41128 <line:799:1, line:801:1> line:799:6 isync 'void ()'
| `-CompoundStmt 0x5654ccb4ada0 <line:800:1, line:801:1>
|-FunctionDecl 0x5654ccb4add0 prev 0x5654ccb411e8 <line:802:1, line:804:1> line:802:6 lwfence 'void ()'
| `-CompoundStmt 0x5654ccb4ae70 <line:803:1, line:804:1>
`-FunctionDecl 0x5654ccb4aed8 <line:805:1, line:829:1> line:805:5 main 'int ()'
  `-CompoundStmt 0x5654ccb4cbc0 <line:806:1, line:829:1>
    |-DeclStmt 0x5654ccb4aff0 <line:807:3, col:18>
    | `-VarDecl 0x5654ccb4af88 <col:3, col:13> col:13 used t1748 'pthread_t':'unsigned long'
    |-CallExpr 0x5654ccb4b1f8 <line:808:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5654ccb4b1e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5654ccb4b008 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5654ccb285b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5654ccb4b048 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5654ccb4b028 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5654ccb4af88 't1748' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5654ccb4b238 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5654ccb4b0c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5654ccb4b098 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5654ccb4b060 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5654ccb4b250 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5654ccb4b0e0 <col:39> 'void *(void *)' Function 0x5654ccb424c8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5654ccb4b160 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5654ccb4b138 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5654ccb4b100 <col:52> 'int' 0
    |-DeclStmt 0x5654ccb4b2e0 <line:809:3, col:18>
    | `-VarDecl 0x5654ccb4b278 <col:3, col:13> col:13 used t1749 'pthread_t':'unsigned long'
    |-CallExpr 0x5654ccb4b488 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5654ccb4b470 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5654ccb4b2f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5654ccb285b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5654ccb4b338 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5654ccb4b318 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5654ccb4b278 't1749' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5654ccb4b4c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5654ccb4b3b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5654ccb4b388 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5654ccb4b350 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5654ccb4b4e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5654ccb4b3d0 <col:39> 'void *(void *)' Function 0x5654ccb455b0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5654ccb4b450 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5654ccb4b428 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5654ccb4b3f0 <col:52> 'int' 0
    |-DeclStmt 0x5654ccb4b570 <line:811:3, col:18>
    | `-VarDecl 0x5654ccb4b508 <col:3, col:13> col:13 used t1750 'pthread_t':'unsigned long'
    |-CallExpr 0x5654ccb4b718 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5654ccb4b700 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5654ccb4b588 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5654ccb285b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5654ccb4b5c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5654ccb4b5a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5654ccb4b508 't1750' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5654ccb4b758 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5654ccb4b640 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5654ccb4b618 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5654ccb4b5e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5654ccb4b770 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5654ccb4b660 <col:39> 'void *(void *)' Function 0x5654ccb49a40 'P2' 'void *(void *)'
    | `-ParenExpr 0x5654ccb4b6e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5654ccb4b6b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5654ccb4b680 <col:52> 'int' 0
    |-CallExpr 0x5654ccb4b7c0 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5654ccb4b7a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5654ccb4b788 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5654ccb4b890 <line:814:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5654ccb4b7e0 <col:3> '_Bool' lvalue Var 0x5654ccb41838 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5654ccb4b878 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5654ccb4b858 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5654ccb4b840 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5654ccb4b800 <col:21> 'int' lvalue Var 0x5654ccb41320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5654ccb4b820 <col:41> 'int' 3
    |-CallExpr 0x5654ccb4b8e8 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5654ccb4b8d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5654ccb4b8b0 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5654ccb4b960 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5654ccb4b948 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5654ccb4b908 <col:3> 'void (int)' Function 0x5654ccae7940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5654ccb4b9a0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5654ccb4b988 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5654ccb4b928 <col:21> '_Bool' lvalue Var 0x5654ccb41838 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5654ccb4b9f0 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5654ccb4b9d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5654ccb4b9b8 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5654ccb4bcf8 <line:818:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5654ccb4ba10 <col:3> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
    | `-ConditionalOperator 0x5654ccb4bcc8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5654ccb4bad0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5654ccb4ba88 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5654ccb4ba70 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5654ccb4ba30 <col:7> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5654ccb4bab8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5654ccb4baa0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5654ccb4ba50 <col:25> '_Bool' lvalue Var 0x5654ccb41c90 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5654ccb4bcb0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5654ccb4baf0 <col:42> 'int' lvalue Var 0x5654ccb42150 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5654ccb4bc90 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5654ccb4bc60 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5654ccb4bbd0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5654ccb4bb68 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5654ccb4bb50 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5654ccb4bb10 <col:55> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5654ccb4bbb8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5654ccb4bba0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5654ccb4bb30 <col:73> '_Bool' lvalue Var 0x5654ccb41e70 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5654ccb4bc30 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5654ccb4bbf0 <col:90> 'int' lvalue Var 0x5654ccb42248 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5654ccb4bc48 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5654ccb4bc10 <col:102> 'int' lvalue Var 0x5654ccb41b00 'y' 'int'
    |-BinaryOperator 0x5654ccb4bf00 <line:819:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5654ccb4bd18 <col:3> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5654ccb4bee8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5654ccb4beb8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5654ccb4bdd8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5654ccb4bd90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5654ccb4bd78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5654ccb4bd38 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5654ccb4bdc0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5654ccb4bda8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5654ccb4bd58 <col:38> '_Bool' lvalue Var 0x5654ccb41c90 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5654ccb4be70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5654ccb4be28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5654ccb4bdf8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5654ccb4bea0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5654ccb4be88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5654ccb4be50 <col:66> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5654ccb4c1e8 <line:820:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5654ccb4bf20 <col:3> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5654ccb4c1d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5654ccb4c1a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5654ccb4c0c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5654ccb4bfe0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5654ccb4bf98 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5654ccb4bf80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5654ccb4bf40 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5654ccb4bfc8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5654ccb4bfb0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5654ccb4bf60 <col:38> '_Bool' lvalue Var 0x5654ccb41c90 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5654ccb4c0a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5654ccb4c058 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5654ccb4c040 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5654ccb4c000 <col:56> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5654ccb4c088 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5654ccb4c070 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5654ccb4c020 <col:74> '_Bool' lvalue Var 0x5654ccb41e70 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5654ccb4c158 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5654ccb4c110 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5654ccb4c0e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5654ccb4c188 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5654ccb4c170 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5654ccb4c138 <col:102> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5654ccb4c3f0 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5654ccb4c208 <col:3> '_Bool' lvalue Var 0x5654ccb41c90 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5654ccb4c3d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5654ccb4c3a8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5654ccb4c2c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5654ccb4c280 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5654ccb4c268 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5654ccb4c228 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5654ccb4c2b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5654ccb4c298 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5654ccb4c248 <col:38> '_Bool' lvalue Var 0x5654ccb41c90 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5654ccb4c360 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5654ccb4c318 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5654ccb4c2e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5654ccb4c390 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5654ccb4c378 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5654ccb4c340 <col:66> '_Bool' lvalue Var 0x5654ccb41c90 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5654ccb4c6d8 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5654ccb4c410 <col:3> '_Bool' lvalue Var 0x5654ccb41e70 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5654ccb4c6c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5654ccb4c690 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5654ccb4c5b0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5654ccb4c4d0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5654ccb4c488 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5654ccb4c470 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5654ccb4c430 <col:20> '_Bool' lvalue Var 0x5654ccb421c8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5654ccb4c4b8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5654ccb4c4a0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5654ccb4c450 <col:38> '_Bool' lvalue Var 0x5654ccb41c90 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5654ccb4c590 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5654ccb4c548 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5654ccb4c530 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5654ccb4c4f0 <col:56> '_Bool' lvalue Var 0x5654ccb422c0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5654ccb4c578 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5654ccb4c560 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5654ccb4c510 <col:74> '_Bool' lvalue Var 0x5654ccb41e70 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5654ccb4c648 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5654ccb4c600 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5654ccb4c5d0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5654ccb4c678 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5654ccb4c660 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5654ccb4c628 <col:102> '_Bool' lvalue Var 0x5654ccb41e70 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5654ccb4c730 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5654ccb4c718 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5654ccb4c6f8 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5654ccb4c788 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5654ccb4c770 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5654ccb4c750 <col:3> 'void ()' Function 0x5654ccae7fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5654ccb4ca58 <line:825:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x5654ccb4c7a8 <col:3> '_Bool' lvalue Var 0x5654ccb418b0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5654ccb4ca40 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5654ccb4ca28 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5654ccb4ca08 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x5654ccb4c9e8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x5654ccb4c950 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x5654ccb4c8b8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x5654ccb4c820 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5654ccb4c808 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5654ccb4c7c8 <col:23> 'int' lvalue Var 0x5654ccb41440 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x5654ccb4c7e8 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x5654ccb4c898 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5654ccb4c880 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5654ccb4c840 <col:51> 'int' lvalue Var 0x5654ccb41560 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5654ccb4c860 <col:74> 'int' 0
    |         | `-BinaryOperator 0x5654ccb4c930 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5654ccb4c918 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5654ccb4c8d8 <col:79> 'int' lvalue Var 0x5654ccb41680 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5654ccb4c8f8 <col:102> 'int' 1
    |         `-BinaryOperator 0x5654ccb4c9c8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x5654ccb4c9b0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5654ccb4c970 <col:107> 'int' lvalue Var 0x5654ccb417a0 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x5654ccb4c990 <col:130> 'int' 0
    |-CallExpr 0x5654ccb4cab0 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5654ccb4ca98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5654ccb4ca78 <col:3> 'void ()' Function 0x5654ccae8060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5654ccb4cb28 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5654ccb4cb10 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5654ccb4cad0 <col:3> 'void (int)' Function 0x5654ccae7d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5654ccb4cb68 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5654ccb4cb50 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5654ccb4caf0 <col:21> '_Bool' lvalue Var 0x5654ccb418b0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5654ccb4cbb0 <line:828:3, col:10>
      `-IntegerLiteral 0x5654ccb4cb80 <col:10> 'int' 0
