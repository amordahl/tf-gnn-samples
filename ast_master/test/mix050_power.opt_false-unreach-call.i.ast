TranslationUnitDecl 0x55ed7139de18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55ed7139e6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55ed7139e3b0 '__int128'
|-TypedefDecl 0x55ed7139e748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55ed7139e3d0 'unsigned __int128'
|-TypedefDecl 0x55ed7139ea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55ed7139e820 'struct __NSConstantString_tag'
|   `-Record 0x55ed7139e7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55ed7139eaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55ed7139eab0 'char *'
|   `-BuiltinType 0x55ed7139deb0 'char'
|-TypedefDecl 0x55ed713dd650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55ed7139ed90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55ed7139ebd0 'struct __va_list_tag'
|     `-Record 0x55ed7139eb50 '__va_list_tag'
|-FunctionDecl 0x55ed713dd790 <./test/mix050_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55ed713dd6c0 <col:31> col:34 'int'
|-FunctionDecl 0x55ed713dd958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55ed713dda80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55ed713ddbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55ed713ddb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55ed713dddf8 <col:40, col:99>
|   |-IfStmt 0x55ed713dddc8 <col:42, col:88>
|   | |-UnaryOperator 0x55ed713ddca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55ed713ddc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55ed713ddc70 <col:47> 'int' lvalue ParmVar 0x55ed713ddb38 'expression' 'int'
|   | `-CompoundStmt 0x55ed713dddb0 <col:59, col:88>
|   |   `-LabelStmt 0x55ed713ddd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55ed713ddd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55ed713ddd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55ed713ddcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55ed713dda80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55ed713ddde0 <col:89>
|   `-ReturnStmt 0x55ed713ddde8 <col:91>
|-FunctionDecl 0x55ed713dde40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55ed713ddf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55ed713de280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ed713ddfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55ed713de038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55ed713de0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55ed713de138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55ed713de340 <line:10:22>
|-FunctionDecl 0x55ed71404390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ed713de3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55ed713de430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55ed713de4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55ed713de530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55ed71404450 <line:13:22>
|-FunctionDecl 0x55ed71404700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ed714044c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55ed71404540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55ed714045c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55ed714047b8 <line:15:22>
|-TypedefDecl 0x55ed71404828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55ed7139df70 'unsigned char'
|-TypedefDecl 0x55ed71404898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55ed7139df90 'unsigned short'
|-TypedefDecl 0x55ed71404908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55ed7139dfb0 'unsigned int'
|-TypedefDecl 0x55ed71404978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed714049e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55ed7139ded0 'signed char'
|-TypedefDecl 0x55ed71404a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55ed7139df70 'unsigned char'
|-TypedefDecl 0x55ed71404ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55ed7139def0 'short'
|-TypedefDecl 0x55ed71404b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55ed7139df90 'unsigned short'
|-TypedefDecl 0x55ed71404ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55ed7139df10 'int'
|-TypedefDecl 0x55ed71404c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55ed7139dfb0 'unsigned int'
|-TypedefDecl 0x55ed71404c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71404cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71404d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71404dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71404e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71404eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55ed7139dfb0 'unsigned int'
|-TypedefDecl 0x55ed71404f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55ed7139dfb0 'unsigned int'
|-TypedefDecl 0x55ed71404f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71405008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71405078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55ed7139dfb0 'unsigned int'
|-TypedefDecl 0x55ed714050e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71405158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed714051c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71405238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55ed7139df10 'int'
|-RecordDecl 0x55ed71405290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55ed71405408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55ed714054c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55ed71405460 'struct __fsid_t' sugar
|   `-RecordType 0x55ed71405310 '__fsid_t'
|     `-Record 0x55ed71405290 ''
|-TypedefDecl 0x55ed71405548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed714055b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71405628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71405698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55ed7139dfb0 'unsigned int'
|-TypedefDecl 0x55ed71405708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71405778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55ed7139dfb0 'unsigned int'
|-TypedefDecl 0x55ed714057e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71405858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55ed7139df10 'int'
|-TypedefDecl 0x55ed714058c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55ed7139df10 'int'
|-TypedefDecl 0x55ed71405938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55ed7139df10 'int'
|-TypedefDecl 0x55ed714059a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55ed7139e630 'void *'
|   `-BuiltinType 0x55ed7139de70 'void'
|-TypedefDecl 0x55ed71405a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71405a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71405af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71405b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71405bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71405c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71405cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71405d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71405d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71405e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71405e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71405f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55ed71405ed0 '__off64_t' sugar
|   |-Typedef 0x55ed714051c8 '__off64_t'
|   `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71406000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55ed71405fc0 '__quad_t *'
|   `-TypedefType 0x55ed71405f60 '__quad_t' sugar
|     |-Typedef 0x55ed71404d68 '__quad_t'
|     `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71406070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55ed7139eab0 'char *'
|   `-BuiltinType 0x55ed7139deb0 'char'
|-TypedefDecl 0x55ed714060e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed71406150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55ed7139dfb0 'unsigned int'
|-FunctionDecl 0x55ed71406298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55ed714061c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55ed714075e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55ed714075d8 <line:72:3, col:34>
|     `-CallExpr 0x55ed71407598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55ed71407580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55ed71407510 <col:10> '<builtin fn type>' Function 0x55ed71407380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55ed714075c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55ed71407530 <col:29> 'unsigned int' lvalue ParmVar 0x55ed714061c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55ed71407380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55ed71407420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55ed71407490 <col:10> Implicit
| `-ConstAttr 0x55ed714074e8 <col:10> Implicit
|-FunctionDecl 0x55ed71407740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55ed71407638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55ed71407a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55ed71407a48 <line:77:3, col:34>
|     `-CallExpr 0x55ed71407a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55ed714079f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55ed71407978 <col:10> '<builtin fn type>' Function 0x55ed714077e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55ed71407a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55ed71407998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55ed71407638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55ed714077e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55ed71407888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55ed714078f8 <col:10> Implicit
| `-ConstAttr 0x55ed71407950 <col:10> Implicit
|-TypedefDecl 0x55ed71407a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-TypedefDecl 0x55ed71407b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55ed71407ae0 '__time_t' sugar
|   |-Typedef 0x55ed71405708 '__time_t'
|   `-BuiltinType 0x55ed7139df30 'long'
|-RecordDecl 0x55ed71407b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55ed71407c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55ed71407cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55ed71407d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55ed71407d10 '__pid_t' sugar
|   |-Typedef 0x55ed71405238 '__pid_t'
|   `-BuiltinType 0x55ed7139df10 'int'
|-RecordDecl 0x55ed71407da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55ed71407e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55ed71407eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55ed71407f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55ed71407fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-RecordDecl 0x55ed71408030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55ed714082c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55ed714093a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55ed71408310 'struct cpu_set_t' sugar
|   `-RecordType 0x55ed714080b0 'cpu_set_t'
|     `-Record 0x55ed71408030 ''
|-FunctionDecl 0x55ed71409678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55ed71409448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ed71409550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55ed71409728 <line:107:19>
|-FunctionDecl 0x55ed71409900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55ed71409790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55ed714099a8 <col:69>
|-FunctionDecl 0x55ed71409b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55ed71409a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55ed71409bc8 <col:64>
|-FunctionDecl 0x55ed71409e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ed71409c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ed71409d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55ed71409f38 <line:113:22>
|-FunctionDecl 0x55ed7140a1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55ed71409fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ed7140a098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55ed7140a268 <col:88>
|-FunctionDecl 0x55ed7140a588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ed7140a2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ed7140a3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55ed7140a440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55ed7140a640 <col:62>
|-FunctionDecl 0x55ed7140a7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55ed7140a6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55ed7140a860 <col:63>
|-FunctionDecl 0x55ed7140a988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55ed7140aa28 <col:47>
|-FunctionDecl 0x55ed7140ab30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55ed7140aa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55ed7140abd8 <col:69>
|-FunctionDecl 0x55ed7140ace0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55ed7140ac48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55ed7140ad88 <col:69>
|-FunctionDecl 0x55ed7140b048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ed7140adf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55ed7140af28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55ed7140b0f8 <col:88>
|-TypedefDecl 0x55ed7140b188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55ed7140b150 '__clock_t' sugar
|   |-Typedef 0x55ed71405548 '__clock_t'
|   `-BuiltinType 0x55ed7139df30 'long'
|-TypedefDecl 0x55ed7140b218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55ed7140b1e0 '__clockid_t' sugar
|   |-Typedef 0x55ed71405938 '__clockid_t'
|   `-BuiltinType 0x55ed7139df10 'int'
|-TypedefDecl 0x55ed7140b2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55ed7140b270 '__timer_t' sugar
|   |-Typedef 0x55ed714059a8 '__timer_t'
|   `-PointerType 0x55ed7139e630 'void *'
|     `-BuiltinType 0x55ed7139de70 'void'
|-RecordDecl 0x55ed7140b300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55ed7140b3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55ed7140b440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55ed7140b4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55ed7140b510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55ed7140b578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55ed7140b5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55ed7140b648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55ed7140b6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55ed7140b718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55ed7140b780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55ed7140b7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55ed7140b838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55ed7140b908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55ed7140b978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55ed7140ba20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55ed7140bbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55ed7140bc90 <col:45>
|-FunctionDecl 0x55ed7140be70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55ed7140bd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55ed7140bf18 <col:54>
|-FunctionDecl 0x55ed7140c118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55ed7140bf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55ed7140bff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55ed7140c1c8 <line:157:22>
| `-ConstAttr 0x55ed7140c220 <col:63>
|-FunctionDecl 0x55ed7140d050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ed7140c318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55ed7140d0f8 <col:56>
|-FunctionDecl 0x55ed7140d4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55ed7140d168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55ed7140d1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ed7140d260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55ed7140d358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55ed7140d560 <col:54>
|-RecordDecl 0x55ed7140d5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55ed7140d668 parent 0x55ed7139de18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55ed7140d8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55ed7140d968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55ed7140d9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55ed7140da38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55ed7140db28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55ed7140dc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55ed7140dbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55ed7140db80 'struct __locale_struct' sugar
|     `-RecordType 0x55ed7140d640 'struct __locale_struct'
|       `-Record 0x55ed7140d5b8 '__locale_struct'
|-TypedefDecl 0x55ed7140dcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55ed7140dcc0 '__locale_t' sugar
|   |-Typedef 0x55ed7140dc48 '__locale_t'
|   `-PointerType 0x55ed7140dbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55ed7140db80 'struct __locale_struct' sugar
|       `-RecordType 0x55ed7140d640 'struct __locale_struct'
|         `-Record 0x55ed7140d5b8 '__locale_struct'
|-FunctionDecl 0x55ed7140f110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55ed7140dd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55ed7140dde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55ed7140de60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55ed7140def0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55ed7140df68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55ed7140f1d8 <col:40>
|-FunctionDecl 0x55ed7140f3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55ed7140f2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55ed7140f470 <col:66>
|-FunctionDecl 0x55ed7140f580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55ed7140f4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55ed7140f628 <col:69>
|-FunctionDecl 0x55ed7140f858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55ed7140f690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ed7140f720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55ed7140f908 <col:52>
|-FunctionDecl 0x55ed7140fab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55ed7140f970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ed7140fa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55ed7140fb60 <col:55>
|-FunctionDecl 0x55ed7140fcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55ed7140fbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55ed7140fda0 <col:62>
|-FunctionDecl 0x55ed7140ff18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55ed7140fe08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55ed7140ffc0 <col:60>
|-FunctionDecl 0x55ed714102b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55ed71410118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55ed71410198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55ed71410368 <col:44>
|-FunctionDecl 0x55ed71410578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55ed714103d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55ed71410450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55ed71410628 <col:49>
|-VarDecl 0x55ed71410728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55ed714107a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55ed71410828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55ed714108f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55ed71410a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55ed71410ac0 <col:42>
|-VarDecl 0x55ed71410b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55ed71410bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55ed71410d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55ed71410c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55ed71410de0 <col:57>
|-FunctionDecl 0x55ed71410ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ed71410e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55ed71410f98 <col:56>
|-FunctionDecl 0x55ed714110d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55ed71411018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55ed71411178 <col:59>
|-FunctionDecl 0x55ed71411280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55ed714111e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55ed71411328 <col:48>
| `-ConstAttr 0x55ed71411380 <col:89>
|-FunctionDecl 0x55ed714115e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55ed71411438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55ed714114c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55ed71411848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ed714116d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ed71411768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55ed714118f8 <col:88>
|-FunctionDecl 0x55ed71411a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55ed71411960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ed714119f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55ed71411b40 <col:88>
|-FunctionDecl 0x55ed71411d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55ed71411ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ed71411c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55ed71411e08 <line:208:22>
|-FunctionDecl 0x55ed71412178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55ed71411e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ed71411ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55ed71411f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55ed71412010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55ed71412478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55ed71412278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55ed71412350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55ed71412528 <col:85>
|-FunctionDecl 0x55ed71412918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55ed71412590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55ed714126c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55ed714127d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55ed714129d0 <col:52>
|-FunctionDecl 0x55ed71412b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55ed71412a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55ed71412bf0 <col:61>
|-FunctionDecl 0x55ed714130f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55ed71412c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55ed71412cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55ed71412e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55ed71412ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55ed714131b0 <col:62>
|-FunctionDecl 0x55ed714133c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55ed71413218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55ed714132a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55ed71413478 <line:221:22>
|-FunctionDecl 0x55ed71413578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55ed714134e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55ed71413620 <col:65>
|-TypedefDecl 0x55ed71413690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55ed7139dfd0 'unsigned long'
|-RecordDecl 0x55ed714136e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55ed71413830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55ed71413898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ed71413948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55ed714138f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55ed71413770 'union pthread_attr_t'
|     `-Record 0x55ed714136e8 'pthread_attr_t'
|-RecordDecl 0x55ed714139a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55ed71413b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55ed71413b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55ed71413c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55ed71413be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55ed71413a20 'struct __pthread_internal_list'
|     `-Record 0x55ed714139a0 '__pthread_internal_list'
|-RecordDecl 0x55ed71413cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55ed71413d58 parent 0x55ed7139de18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55ed71413e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ed71413e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55ed71413f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55ed71413f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55ed71413fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55ed71414038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55ed71418110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55ed714181c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55ed714182b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55ed71418318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ed714184a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55ed71418440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55ed71413d30 'pthread_mutex_t'
|     `-Record 0x55ed71413cb0 ''
|-RecordDecl 0x55ed71418510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55ed71418650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ed714186b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ed71418770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55ed71418710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55ed71418590 'pthread_mutexattr_t'
|     `-Record 0x55ed71418510 ''
|-RecordDecl 0x55ed714187e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55ed71418888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55ed71418950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ed714189b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55ed71418a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55ed71418a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55ed71418af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55ed71418b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55ed71418bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55ed71418c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55ed71418ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/mix050_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/mix050_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55ed71418dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55ed71418e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55ed71418f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55ed71418f10 'union pthread_cond_t' sugar
|   `-RecordType 0x55ed71418860 'pthread_cond_t'
|     `-Record 0x55ed714187e0 ''
|-RecordDecl 0x55ed71418fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55ed7141a130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ed7141a198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ed7141a250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55ed7141a1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55ed71419060 'pthread_condattr_t'
|     `-Record 0x55ed71418fe0 ''
|-TypedefDecl 0x55ed7141a2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55ed7139dfb0 'unsigned int'
|-TypedefDecl 0x55ed7141a348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55ed7139df10 'int'
|-RecordDecl 0x55ed7141a3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55ed7141a448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55ed7141a510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55ed7141a578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55ed7141a5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55ed7141a648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55ed7141a6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55ed7141a718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55ed7141a780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55ed7141a7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55ed7141a850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55ed7141a8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55ed7141a920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55ed7141a9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/mix050_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix050_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55ed7141aa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55ed7141aae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ed7141ac30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55ed7141abd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55ed7141a420 'pthread_rwlock_t'
|     `-Record 0x55ed7141a3a0 ''
|-RecordDecl 0x55ed7141aca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55ed7141ade0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55ed7141ae48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ed7141af00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55ed7141aea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55ed7141ad20 'pthread_rwlockattr_t'
|     `-Record 0x55ed7141aca0 ''
|-TypedefDecl 0x55ed7141af88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55ed7139df14 'volatile int' volatile
|   `-BuiltinType 0x55ed7139df10 'int'
|-RecordDecl 0x55ed7141afe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55ed7141c140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55ed7141c1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55ed7141c260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55ed7141c200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55ed7141b060 'pthread_barrier_t'
|     `-Record 0x55ed7141afe0 ''
|-RecordDecl 0x55ed7141c2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55ed7141c3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55ed7141c438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55ed7141c4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55ed7141c490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55ed7141c350 'pthread_barrierattr_t'
|     `-Record 0x55ed7141c2d0 ''
|-TypedefDecl 0x55ed7141c608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55ed7141c5a0 'long [8]' 8 
|   `-BuiltinType 0x55ed7139df30 'long'
|-EnumDecl 0x55ed7141c660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55ed7141c728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55ed7141c778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55ed7141c7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55ed7141c898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55ed7141c8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55ed7141c938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55ed7141c988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55ed7141ca10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55ed7141c9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55ed7141c9d8 <col:26> 'int' EnumConstant 0x55ed7141c898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55ed7141ca98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55ed7141ca80 <col:29> 'int'
| |   `-DeclRefExpr 0x55ed7141ca60 <col:29> 'int' EnumConstant 0x55ed7141c8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55ed7141cb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55ed7141cb08 <col:30> 'int'
| |   `-DeclRefExpr 0x55ed7141cae8 <col:30> 'int' EnumConstant 0x55ed7141c938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55ed7141cba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55ed7141cb90 <col:27> 'int'
|     `-DeclRefExpr 0x55ed7141cb70 <col:27> 'int' EnumConstant 0x55ed7141ca10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55ed7141cbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55ed7141ccc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55ed7141cd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55ed7141cd38 <col:30> 'int'
| |   `-DeclRefExpr 0x55ed7141cd18 <col:30> 'int' EnumConstant 0x55ed7141ccc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55ed7141cda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55ed7141ce28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55ed7141ce10 <col:29> 'int'
|     `-DeclRefExpr 0x55ed7141cdf0 <col:29> 'int' EnumConstant 0x55ed7141cda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55ed7141ce78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55ed7141cf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55ed7141cf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55ed7141cfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55ed7141d038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55ed7141d150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55ed7141d1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55ed7141d1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55ed7141d278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55ed7141d260 <col:31> 'int'
|     `-DeclRefExpr 0x55ed7141d240 <col:31> 'int' EnumConstant 0x55ed7141d150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55ed7141d2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55ed7141d398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55ed7141d3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55ed7141d438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55ed7141d508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55ed7141d558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55ed7141d5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55ed7141d678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55ed7141d6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55ed7141d718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55ed7141d958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55ed7141d9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55ed7141da28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55ed7141db48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55ed7141db98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55ed7141dc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55ed7141dcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55ed7141dd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55ed7141ddd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55ed7141de28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55ed7141e488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55ed7141df20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55ed7141e030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ed7141e270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55ed7141e2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55ed7141e548 <col:47>
| |-NonNullAttr 0x55ed7141e5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55ed7141e5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55ed7141e700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55ed7141e630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55ed7141e958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55ed7141e7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55ed7141e838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55ed7141eb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55ed7141ea18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55ed7141ebd0 <col:60>
|-FunctionDecl 0x55ed7141ed20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55ed7141edc0 <col:54>
| `-ConstAttr 0x55ed7141ee18 <col:95>
|-FunctionDecl 0x55ed7141efe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55ed7141ee50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ed7141eec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55ed7141f098 <line:394:19>
| `-ConstAttr 0x55ed7141f0f0 <col:60>
|-FunctionDecl 0x55ed71420b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55ed714209d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55ed71420bb0 <col:71>
| `-NonNullAttr 0x55ed71420c08 <col:112, col:126> 1
|-FunctionDecl 0x55ed71420d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55ed71420c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55ed71420db8 <line:397:22>
| `-NonNullAttr 0x55ed71420e10 <col:63, col:77> 1
|-FunctionDecl 0x55ed71421038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55ed71420e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55ed71420ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55ed714210e8 <line:400:22>
| `-NonNullAttr 0x55ed71421140 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed71421348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ed71421188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ed71421208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55ed714213f8 <line:403:22>
| `-NonNullAttr 0x55ed71421450 <col:63, col:77> 1
|-FunctionDecl 0x55ed714216a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55ed71421498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55ed71421540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55ed71421758 <line:406:22>
| `-NonNullAttr 0x55ed714217b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed714229e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55ed714217f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ed71421870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ed71422a98 <line:409:22>
| `-NonNullAttr 0x55ed71422af0 <col:63, col:77> 1
|-FunctionDecl 0x55ed71422d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ed71422b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ed71422bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55ed71422dd8 <line:412:22>
| `-NonNullAttr 0x55ed71422e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed71423068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ed71422e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ed71422f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55ed71423118 <col:37>
| `-NonNullAttr 0x55ed71423170 <col:78, col:95> 1 2
|-FunctionDecl 0x55ed71423358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed714231b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ed71423238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55ed71423408 <line:418:22>
| `-NonNullAttr 0x55ed71423460 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed714235e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ed714234a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ed71423528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55ed71423698 <line:420:22>
| `-NonNullAttr 0x55ed714236f0 <col:63, col:77> 1
|-FunctionDecl 0x55ed71423898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed71423738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ed714237b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55ed71423948 <line:423:22>
| `-NonNullAttr 0x55ed714239c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed71423b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ed71423a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ed71423a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55ed71423bf8 <line:426:22>
| `-NonNullAttr 0x55ed71423c50 <col:63, col:77> 1
|-FunctionDecl 0x55ed71423df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed71423c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ed71423d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55ed71423ea8 <line:429:22>
| `-NonNullAttr 0x55ed71423f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed71424088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55ed71423f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ed71423fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55ed71424138 <line:431:22>
| `-NonNullAttr 0x55ed71424190 <col:63, col:77> 1
|-FunctionDecl 0x55ed714243b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55ed714241d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ed71424258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55ed71424468 <line:434:22>
| |-NonNullAttr 0x55ed714244c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55ed714244f8 <col:100> "" ""
|-FunctionDecl 0x55ed71424708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55ed71424548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ed714245c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55ed714247b8 <line:437:22>
| |-NonNullAttr 0x55ed71424810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55ed71424848 <col:97> "" ""
|-FunctionDecl 0x55ed71424a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55ed71424898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ed71424910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55ed71424af8 <line:440:22>
| `-NonNullAttr 0x55ed71424b50 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed71424cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55ed71424b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ed71424c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ed71424d80 <line:443:22>
| `-NonNullAttr 0x55ed71424dd8 <col:63, col:77> 1
|-FunctionDecl 0x55ed714250c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55ed71424e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55ed71424ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55ed71424f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55ed71425180 <line:447:22>
| `-NonNullAttr 0x55ed714251d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55ed71425488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55ed71425230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55ed714252b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55ed71425328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55ed71425540 <col:43>
| `-NonNullAttr 0x55ed71425598 <col:84, col:98> 1
|-FunctionDecl 0x55ed71425858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55ed714255e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ed71425668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55ed714256f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55ed71425910 <line:452:22>
| `-NonNullAttr 0x55ed71425968 <col:63, col:77> 3
|-FunctionDecl 0x55ed71425c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55ed714259e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ed71425a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55ed71425af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55ed71425d30 <line:456:22>
| `-NonNullAttr 0x55ed71425d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55ed71425f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55ed71425dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ed71425e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55ed71426028 <line:458:22>
|-FunctionDecl 0x55ed714263f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55ed714260f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55ed71426290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55ed714264a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55ed71426650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55ed71426530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55ed714265b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55ed71426838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55ed71426718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55ed71426798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55ed714269f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55ed714268f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55ed71426b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55ed71426bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55ed71426c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55ed71426d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55ed71426dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55ed71426fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix050_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55ed71427098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55ed71427150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55ed714270f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55ed71426c50 '__pthread_unwind_buf_t'
| |   `-Record 0x55ed71426bd0 ''
| `-AlignedAttr 0x55ed714271a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55ed71427220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55ed71427380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55ed714273e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55ed71427450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55ed714274b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55ed714276c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55ed714275b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55ed71427808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55ed71427778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55ed71427a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55ed714278c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55ed71427aa8 <line:487:22>
|-RecordDecl 0x55ed71427b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55ed71427e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55ed71427c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55ed71427cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55ed71427ec8 <col:86>
| `-ReturnsTwiceAttr 0x55ed71427f20 <col:12> Implicit
|-FunctionDecl 0x55ed71428248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ed71427ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55ed71428100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ed714282f8 <line:493:22>
| `-NonNullAttr 0x55ed71428350 <col:63, col:77> 1
|-FunctionDecl 0x55ed714284c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ed71428398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ed71428570 <line:495:22>
| `-NonNullAttr 0x55ed714285c8 <col:63, col:77> 1
|-FunctionDecl 0x55ed714286d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ed71428618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ed71428778 <line:497:22>
| `-NonNullAttr 0x55ed714287d0 <col:52, col:66> 1
|-FunctionDecl 0x55ed714288d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ed71428818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ed71428978 <line:499:22>
| `-NonNullAttr 0x55ed714289d0 <col:52, col:66> 1
|-FunctionDecl 0x55ed71429c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ed71429a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ed71429ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ed71429cd8 <col:36>
| `-NonNullAttr 0x55ed71429d30 <col:66, col:83> 1 2
|-FunctionDecl 0x55ed71429e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ed71429d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ed71429ed8 <line:504:22>
| `-NonNullAttr 0x55ed71429f30 <col:52, col:66> 1
|-FunctionDecl 0x55ed7142a1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed71429fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ed7142a060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55ed7142a278 <line:508:22>
| `-NonNullAttr 0x55ed7142a2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed7142a598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55ed7142a318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ed7142a398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55ed7142a418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55ed7142a650 <line:512:22>
| `-NonNullAttr 0x55ed7142a6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55ed7142a7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55ed7142a6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55ed7142a858 <line:514:22>
| `-NonNullAttr 0x55ed7142a8b0 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142aad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ed7142a960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ed7142ab80 <line:516:22>
| `-NonNullAttr 0x55ed7142abd8 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142ace0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55ed7142ac28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55ed7142ad88 <line:518:22>
| `-NonNullAttr 0x55ed7142ade0 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142b008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed7142ae28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ed7142aea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ed7142b0b8 <line:522:22>
| `-NonNullAttr 0x55ed7142b110 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed7142b318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ed7142b158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ed7142b1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55ed7142b3c8 <line:525:22>
| `-NonNullAttr 0x55ed7142b420 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142b5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed7142b468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ed7142b4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55ed7142b678 <line:528:22>
| `-NonNullAttr 0x55ed7142b6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed7142b858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ed7142b718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ed7142b798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55ed7142b908 <line:530:22>
| `-NonNullAttr 0x55ed7142b960 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142bb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed7142b9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ed7142ba40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55ed7142bbd0 <line:534:22>
| `-NonNullAttr 0x55ed7142bc28 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed7142bdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ed7142bc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ed7142bcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55ed7142be68 <line:537:22>
| `-NonNullAttr 0x55ed7142bec0 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142c068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed7142bf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55ed7142bf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55ed7142c118 <line:541:22>
| `-NonNullAttr 0x55ed7142c170 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed7142c2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ed7142c1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ed7142c238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55ed7142c3a8 <line:544:22>
| `-NonNullAttr 0x55ed7142c400 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142c5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55ed7142c448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ed7142c4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55ed7142c698 <line:547:22>
| `-NonNullAttr 0x55ed7142c6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed7142c878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55ed7142c738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55ed7142c7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55ed7142c928 <line:550:22>
| `-NonNullAttr 0x55ed7142c980 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142dcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55ed7142daa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ed7142dbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55ed7142dda8 <col:29>
| `-NonNullAttr 0x55ed7142de00 <col:70, col:84> 1
|-FunctionDecl 0x55ed7142df78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ed7142de48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ed7142e020 <line:555:22>
| `-NonNullAttr 0x55ed7142e078 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142e180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ed7142e0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ed7142e228 <line:557:22>
| `-NonNullAttr 0x55ed7142e280 <col:52, col:66> 1
|-FunctionDecl 0x55ed7142e380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ed7142e2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ed7142e428 <line:559:19>
| `-NonNullAttr 0x55ed7142e480 <col:49, col:63> 1
|-FunctionDecl 0x55ed7142e6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ed7142e4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ed7142e558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ed7142e768 <col:39>
| `-NonNullAttr 0x55ed7142e7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55ed7142e8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ed7142e808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ed7142e968 <line:564:22>
| `-NonNullAttr 0x55ed7142e9c0 <col:52, col:66> 1
|-FunctionDecl 0x55ed7142eb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ed7142ea70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ed7142ebd0 <line:566:22>
| `-NonNullAttr 0x55ed7142ec28 <col:52, col:66> 1
|-FunctionDecl 0x55ed7142ede8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ed7142ec78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55ed7142ed08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55ed7142ee98 <col:39>
| `-NonNullAttr 0x55ed7142eef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55ed7142eff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55ed7142ef38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55ed7142f098 <line:571:22>
| `-NonNullAttr 0x55ed7142f0f0 <col:52, col:66> 1
|-FunctionDecl 0x55ed7142f2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55ed7142f1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55ed7142f380 <line:573:22>
| `-NonNullAttr 0x55ed7142f3d8 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142f4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55ed7142f428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55ed7142f588 <line:575:22>
| `-NonNullAttr 0x55ed7142f5e0 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142f808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed7142f628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55ed7142f6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ed7142f8b8 <line:579:22>
| `-NonNullAttr 0x55ed7142f910 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed7142fb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55ed7142f958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55ed7142f9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55ed7142fbe8 <line:582:22>
| `-NonNullAttr 0x55ed7142fc40 <col:63, col:77> 1
|-FunctionDecl 0x55ed7142fde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed7142fc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55ed7142fd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55ed7142fe98 <line:586:22>
| `-NonNullAttr 0x55ed7142fef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed71430078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55ed7142ff38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55ed7142ffb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55ed71430128 <col:36>
| `-NonNullAttr 0x55ed71430180 <col:77, col:91> 1
|-FunctionDecl 0x55ed714304b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55ed71430260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ed71430370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55ed71430568 <line:591:22>
| `-NonNullAttr 0x55ed714305c0 <col:63, col:77> 1
|-FunctionDecl 0x55ed71430738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ed71430608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ed714307e0 <line:593:22>
| `-NonNullAttr 0x55ed71430838 <col:63, col:77> 1
|-FunctionDecl 0x55ed71430940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ed71430888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ed714309e8 <line:595:22>
| `-NonNullAttr 0x55ed71430a40 <col:52, col:66> 1
|-FunctionDecl 0x55ed71430b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55ed71430aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55ed71430c00 <line:597:22>
| `-NonNullAttr 0x55ed71430c58 <col:52, col:66> 1
|-FunctionDecl 0x55ed71430e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55ed71430ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ed71430d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55ed71430f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55ed71431268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55ed71430fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55ed71431030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55ed714310c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55ed71431320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55ed71431538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55ed71431400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55ed714315e0 <line:606:22>
| `-NonNullAttr 0x55ed71431638 <col:63, col:77> 1
|-FunctionDecl 0x55ed71431740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55ed71431688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55ed714317e8 <line:608:22>
| `-NonNullAttr 0x55ed71431840 <col:63, col:77> 1
|-FunctionDecl 0x55ed71431aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed71431888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55ed71431908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ed71431b50 <line:612:22>
| `-NonNullAttr 0x55ed71431ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed71431db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55ed71431bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55ed71431c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55ed71431e68 <col:37>
| `-NonNullAttr 0x55ed71431ec0 <col:78, col:92> 1
|-FunctionDecl 0x55ed714320d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55ed71431f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55ed71431fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55ed71432188 <line:618:22>
| `-NonNullAttr 0x55ed714321e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed714323a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55ed71432228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55ed714322a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55ed71432458 <line:621:22>
| `-NonNullAttr 0x55ed714324b0 <col:63, col:77> 1
|-FunctionDecl 0x55ed71432758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55ed71432590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55ed71432610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55ed71432808 <line:623:22>
| `-NonNullAttr 0x55ed71432860 <col:63, col:77> 1
|-FunctionDecl 0x55ed714329d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ed714328a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ed71432ab0 <line:625:22>
| `-NonNullAttr 0x55ed71432b08 <col:63, col:77> 1
|-FunctionDecl 0x55ed71432c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ed71432b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ed71432cb8 <line:627:22>
| `-NonNullAttr 0x55ed71432d10 <col:52, col:66> 1
|-FunctionDecl 0x55ed71432e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ed71432d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ed71432eb8 <line:629:22>
| `-NonNullAttr 0x55ed71432f10 <col:52, col:66> 1
|-FunctionDecl 0x55ed71433010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55ed71432f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55ed714330b8 <line:631:22>
| `-NonNullAttr 0x55ed71433110 <col:52, col:66> 1
|-FunctionDecl 0x55ed714334e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55ed714331f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55ed71433300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55ed71433380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55ed714335a0 <line:635:22>
| `-NonNullAttr 0x55ed714335f8 <col:63, col:77> 1
|-FunctionDecl 0x55ed71433778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55ed71433648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55ed71433820 <line:637:22>
| `-NonNullAttr 0x55ed71433878 <col:63, col:77> 1
|-FunctionDecl 0x55ed71433980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55ed714338c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55ed71433a28 <line:639:22>
| `-NonNullAttr 0x55ed71433a80 <col:52, col:66> 1
|-FunctionDecl 0x55ed71434c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55ed71434b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55ed71434d30 <line:641:22>
| `-NonNullAttr 0x55ed71434d88 <col:63, col:77> 1
|-FunctionDecl 0x55ed71434e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55ed71434dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55ed71434f38 <line:643:22>
| `-NonNullAttr 0x55ed71434f90 <col:63, col:77> 1
|-FunctionDecl 0x55ed714351b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55ed71434fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55ed71435058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55ed71435268 <line:647:22>
| `-NonNullAttr 0x55ed714352c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55ed714354c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55ed71435308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55ed71435388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55ed71435578 <line:650:22>
| `-NonNullAttr 0x55ed714355d0 <col:63, col:77> 1
|-FunctionDecl 0x55ed71435918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55ed714356b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55ed714357d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55ed714359c8 <line:653:22>
| `-NonNullAttr 0x55ed71435a20 <col:63, col:77> 1
|-FunctionDecl 0x55ed71435b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55ed71435a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55ed71435c30 <col:69>
|-FunctionDecl 0x55ed71435da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55ed71435c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55ed71435e50 <col:72>
|-FunctionDecl 0x55ed71436088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55ed71435eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55ed71435f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55ed71436138 <col:44>
|-FunctionDecl 0x55ed71436358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55ed714361a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55ed71436218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55ed71436408 <line:660:22>
| `-NonNullAttr 0x55ed71436460 <col:63, col:77> 2
|-FunctionDecl 0x55ed714368a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55ed71436540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55ed71436650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55ed71436760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55ed71436960 <col:47>
|-FunctionDecl 0x55ed71436af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55ed714369d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ed71436c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55ed71436bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ed71436da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55ed71436d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ed71436ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55ed71436e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55ed71436fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55ed71437080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55ed71437140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55ed714371f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55ed71437278 prev 0x55ed714371f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55ed714372e0 <col:24> 'int' 0
|-VarDecl 0x55ed71437318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55ed71437398 prev 0x55ed71437318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55ed71437400 <col:27> 'int' 0
|-VarDecl 0x55ed71437438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55ed714374b8 prev 0x55ed71437438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55ed71437520 <col:27> 'int' 0
|-VarDecl 0x55ed71437558 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55ed714375d8 prev 0x55ed71437558 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55ed71437640 <col:27> 'int' 0
|-VarDecl 0x55ed71437678 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55ed714376f8 prev 0x55ed71437678 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55ed71437760 <col:27> 'int' 0
|-VarDecl 0x55ed71437798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x55ed71437818 prev 0x55ed71437798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55ed71437880 <col:9> 'int' 0
|-VarDecl 0x55ed714378b0 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x55ed71437930 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x55ed714379a8 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x55ed71437a20 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x55ed71437b00 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x55ed71437b78 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x55ed71437bf0 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x55ed71437c68 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x55ed71437ce0 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x55ed71437d58 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x55ed71437dd0 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x55ed71437e48 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x55ed71437ec0 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x55ed71437f40 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x55ed71437fc0 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x55ed71438038 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x55ed714380b8 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x55ed71438130 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x55ed714381a8 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55ed71438220 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55ed714382a0 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x55ed71438320 prev 0x55ed714382a0 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55ed71438388 <col:9> 'int' 0
|-VarDecl 0x55ed714383c0 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x55ed71438440 prev 0x55ed714383c0 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55ed714384a8 <col:9> 'int' 0
|-VarDecl 0x55ed714384e0 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x55ed71438560 prev 0x55ed714384e0 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55ed714385c8 <col:9> 'int' 0
|-VarDecl 0x55ed714385f8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55ed71438670 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55ed71438788 prev 0x55ed71436af0 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55ed714386f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ed7143a048 <line:713:1, line:741:1>
|   |-CallExpr 0x55ed71438898 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed71438880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed71438830 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed71438910 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55ed714388b8 <col:3> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55ed714388f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed714388d8 <col:15> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x55ed71438970 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55ed71438930 <col:3> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x55ed71438950 <col:15> 'int' 1
|   |-BinaryOperator 0x55ed714389e8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55ed71438990 <col:3> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ed714389d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed714389b0 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ed71438a80 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55ed71438a08 <col:3> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55ed71438a58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ed71438a28 <col:27> 'int' 1
|   |-CallExpr 0x55ed71438c18 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55ed71438c00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55ed71438aa0 <col:3> 'void (int)' Function 0x55ed713ddbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55ed71438bb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55ed71438b90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55ed71438b70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55ed71438b28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55ed71438b10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55ed71438ac0 <col:23> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55ed71438b58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55ed71438b40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55ed71438ae0 <col:41> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ed71438c98 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55ed71438c40 <col:3> '_Bool' lvalue Var 0x55ed71437c68 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55ed71438c80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed71438c60 <col:20> '_Bool' lvalue Var 0x55ed714379a8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55ed71438d10 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55ed71438cb8 <col:3> '_Bool' lvalue Var 0x55ed71437ce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ed71438cf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed71438cd8 <col:20> '_Bool' lvalue Var 0x55ed71437a20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55ed71438d88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55ed71438d30 <col:3> '_Bool' lvalue Var 0x55ed71437d58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55ed71438d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed71438d50 <col:20> '_Bool' lvalue Var 0x55ed71437b00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55ed71438e00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55ed71438da8 <col:3> '_Bool' lvalue Var 0x55ed71437dd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55ed71438de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed71438dc8 <col:20> '_Bool' lvalue Var 0x55ed71437b78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55ed71438e78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55ed71438e20 <col:3> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55ed71438e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed71438e40 <col:20> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55ed71438f10 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55ed71438e98 <col:3> '_Bool' lvalue Var 0x55ed71437a20 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55ed71438ee8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ed71438eb8 <col:27> 'int' 1
|   |-CallExpr 0x55ed71438f68 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed71438f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed71438f30 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed71438fc0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed71438fa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed71438f88 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed71439038 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ed71438fe0 <col:3> 'int' lvalue Var 0x55ed71437398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55ed71439020 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed71439000 <col:25> 'int' lvalue Var 0x55ed71438320 'x' 'int'
|   |-CallExpr 0x55ed71439090 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed71439078 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed71439058 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed714390e8 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed714390d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed714390b0 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed714393d0 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55ed71439108 <col:3> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   | `-ConditionalOperator 0x55ed714393a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55ed714391c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55ed71439180 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55ed71439168 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55ed71439128 <col:7> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55ed714391b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55ed71439198 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55ed71439148 <col:25> '_Bool' lvalue Var 0x55ed71437a20 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55ed71439388 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed714391e8 <col:42> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55ed71439368 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55ed71439338 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55ed714392a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ed71439260 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ed71439248 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ed71439208 <col:55> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ed71439290 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ed71439278 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ed71439228 <col:73> '_Bool' lvalue Var 0x55ed71437ce0 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55ed71439308 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ed714392c8 <col:90> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55ed71439320 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed714392e8 <col:102> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   |-BinaryOperator 0x55ed714395d8 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ed714393f0 <col:3> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ed714395c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed71439590 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ed714394b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ed71439468 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ed71439450 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ed71439410 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ed71439498 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ed71439480 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ed71439430 <col:38> '_Bool' lvalue Var 0x55ed71437a20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed71439548 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed71439500 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed714394d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed71439578 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed71439560 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed71439528 <col:66> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ed714398c0 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ed714395f8 <col:3> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ed714398a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed71439878 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ed71439798 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ed714396b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ed71439670 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ed71439658 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ed71439618 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ed714396a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ed71439688 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ed71439638 <col:38> '_Bool' lvalue Var 0x55ed71437a20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55ed71439778 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ed71439730 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ed71439718 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ed714396d8 <col:56> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ed71439760 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ed71439748 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ed714396f8 <col:74> '_Bool' lvalue Var 0x55ed71437ce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed71439830 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed714397e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed714397b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed71439860 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed71439848 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed71439810 <col:102> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55ed71439ac8 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ed714398e0 <col:3> '_Bool' lvalue Var 0x55ed71437a20 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ed71439ab0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed71439a80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ed714399a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ed71439958 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ed71439940 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ed71439900 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ed71439988 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ed71439970 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ed71439920 <col:38> '_Bool' lvalue Var 0x55ed71437a20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed71439a38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed714399f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed714399c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed71439a68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed71439a50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed71439a18 <col:66> '_Bool' lvalue Var 0x55ed71437a20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55ed71439dc8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ed71439ae8 <col:3> '_Bool' lvalue Var 0x55ed71437ce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55ed71439db0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed71439d80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ed71439ca0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ed71439bc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ed71439b78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ed71439b60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ed71439b20 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ed71439ba8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ed71439b90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ed71439b40 <col:38> '_Bool' lvalue Var 0x55ed71437a20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55ed71439c80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ed71439c38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ed71439c20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ed71439be0 <col:56> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ed71439c68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ed71439c50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ed71439c00 <col:74> '_Bool' lvalue Var 0x55ed71437ce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed71439d38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed71439cf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed71439cc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed71439d68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed71439d50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed71439d18 <col:102> '_Bool' lvalue Var 0x55ed71437ce0 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55ed71439e20 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed71439e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed71439de8 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed71439e78 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed71439e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed71439e40 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed71439f30 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ed71439e98 <col:3> 'int' lvalue Var 0x55ed71437278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ed71439f10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ed71439ef8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed71439eb8 <col:22> 'int' lvalue Var 0x55ed71437278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ed71439ed8 <col:41> 'int' 1
|   |-CallExpr 0x55ed71439f88 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed71439f70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed71439f50 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ed7143a038 <line:740:3, col:36>
|     `-CallExpr 0x55ed7143a018 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ed7143a000 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ed71439fa8 <col:10> 'void *(void)' Function 0x55ed713dd958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ed7143a1e0 prev 0x55ed71436c48 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55ed7143a148 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ed7143b430 <line:743:1, line:761:1>
|   |-CallExpr 0x55ed7143a2c0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed7143a2a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143a288 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed7143a320 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55ed7143a2e0 <col:3> 'int' lvalue Var 0x55ed71438320 'x' 'int'
|   | `-IntegerLiteral 0x55ed7143a300 <col:7> 'int' 1
|   |-CallExpr 0x55ed7143a378 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed7143a360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143a340 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed7143a3d0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed7143a3b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143a398 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed7143a448 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ed7143a3f0 <col:3> 'int' lvalue Var 0x55ed714374b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55ed7143a430 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed7143a410 <col:25> 'int' lvalue Var 0x55ed71438440 'y' 'int'
|   |-CallExpr 0x55ed7143a4a0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed7143a488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143a468 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed7143a4f8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed7143a4e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143a4c0 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed7143a7e0 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55ed7143a518 <col:3> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   | `-ConditionalOperator 0x55ed7143a7b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55ed7143a5d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55ed7143a590 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55ed7143a578 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55ed7143a538 <col:7> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55ed7143a5c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55ed7143a5a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55ed7143a558 <col:25> '_Bool' lvalue Var 0x55ed71437b00 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ed7143a798 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed7143a5f8 <col:42> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55ed7143a778 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55ed7143a748 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55ed7143a6b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ed7143a670 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ed7143a658 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ed7143a618 <col:55> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ed7143a6a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ed7143a688 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ed7143a638 <col:73> '_Bool' lvalue Var 0x55ed71437d58 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55ed7143a718 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ed7143a6d8 <col:90> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55ed7143a730 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143a6f8 <col:102> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   |-BinaryOperator 0x55ed7143a9e8 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143a800 <col:3> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143a9d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143a9a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ed7143a8c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ed7143a878 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ed7143a860 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ed7143a820 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ed7143a8a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ed7143a890 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ed7143a840 <col:38> '_Bool' lvalue Var 0x55ed71437b00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143a958 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed7143a910 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed7143a8e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed7143a988 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed7143a970 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143a938 <col:66> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ed7143acf8 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143aa08 <col:3> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143ace0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143acb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ed7143abd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ed7143aac8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ed7143aa80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ed7143aa68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ed7143aa28 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ed7143aab0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ed7143aa98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ed7143aa48 <col:38> '_Bool' lvalue Var 0x55ed71437b00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55ed7143abb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ed7143ab68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ed7143ab50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ed7143aae8 <col:56> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ed7143ab98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ed7143ab80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ed7143ab30 <col:74> '_Bool' lvalue Var 0x55ed71437d58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143ac68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed7143ac20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed7143abf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed7143ac98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed7143ac80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143ac48 <col:102> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55ed7143af00 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143ad18 <col:3> '_Bool' lvalue Var 0x55ed71437b00 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143aee8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143aeb8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ed7143add8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ed7143ad90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ed7143ad78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ed7143ad38 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ed7143adc0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ed7143ada8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ed7143ad58 <col:38> '_Bool' lvalue Var 0x55ed71437b00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143ae70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed7143ae28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed7143adf8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed7143aea0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed7143ae88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143ae50 <col:66> '_Bool' lvalue Var 0x55ed71437b00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55ed7143b1e8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143af20 <col:3> '_Bool' lvalue Var 0x55ed71437d58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143b1d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143b1a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ed7143b0c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ed7143afe0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ed7143af98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ed7143af80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ed7143af40 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ed7143afc8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ed7143afb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ed7143af60 <col:38> '_Bool' lvalue Var 0x55ed71437b00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55ed7143b0a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ed7143b058 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ed7143b040 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ed7143b000 <col:56> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ed7143b088 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ed7143b070 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ed7143b020 <col:74> '_Bool' lvalue Var 0x55ed71437d58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143b158 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed7143b110 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed7143b0e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed7143b188 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed7143b170 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143b138 <col:102> '_Bool' lvalue Var 0x55ed71437d58 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55ed7143b240 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed7143b228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143b208 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed7143b298 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed7143b280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143b260 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed7143b350 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ed7143b2b8 <col:3> 'int' lvalue Var 0x55ed71437278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ed7143b330 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ed7143b318 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed7143b2d8 <col:22> 'int' lvalue Var 0x55ed71437278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ed7143b2f8 <col:41> 'int' 1
|   |-CallExpr 0x55ed7143b3a8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed7143b390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143b370 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ed7143b420 <line:760:3, col:36>
|     `-CallExpr 0x55ed7143b400 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ed7143b3e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ed7143b3c8 <col:10> 'void *(void)' Function 0x55ed713dd958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ed7143b578 prev 0x55ed71436da0 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55ed7143b4e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ed7143c7b0 <line:763:1, line:781:1>
|   |-CallExpr 0x55ed7143b658 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed7143b640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143b620 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed7143b6b8 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55ed7143b678 <col:3> 'int' lvalue Var 0x55ed71438440 'y' 'int'
|   | `-IntegerLiteral 0x55ed7143b698 <col:7> 'int' 1
|   |-CallExpr 0x55ed7143b710 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed7143b6f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143b6d8 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed7143b768 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed7143b750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143b730 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed7143b7e0 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ed7143b788 <col:3> 'int' lvalue Var 0x55ed714375d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55ed7143b7c8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed7143b7a8 <col:25> 'int' lvalue Var 0x55ed71438560 'z' 'int'
|   |-CallExpr 0x55ed7143b838 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed7143b820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143b800 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed7143b890 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed7143b878 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143b858 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed7143bb88 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55ed7143b8b0 <col:3> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   | `-ConditionalOperator 0x55ed7143bb58 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55ed7143b970 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55ed7143b928 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55ed7143b910 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55ed7143b8d0 <col:7> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55ed7143b958 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55ed7143b940 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55ed7143b8f0 <col:25> '_Bool' lvalue Var 0x55ed71437b78 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55ed7143bb40 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed7143b990 <col:42> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55ed7143bb10 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55ed7143bae0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55ed7143ba50 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ed7143ba08 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ed7143b9f0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ed7143b9b0 <col:55> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ed7143ba38 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ed7143ba20 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ed7143b9d0 <col:73> '_Bool' lvalue Var 0x55ed71437dd0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55ed7143bab0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ed7143ba70 <col:90> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55ed7143bac8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143ba90 <col:102> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   |-BinaryOperator 0x55ed7143bd90 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143bba8 <col:3> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143bd78 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143bd48 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ed7143bc68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ed7143bc20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ed7143bc08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ed7143bbc8 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ed7143bc50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ed7143bc38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ed7143bbe8 <col:38> '_Bool' lvalue Var 0x55ed71437b78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143bd00 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed7143bcb8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed7143bc88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed7143bd30 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed7143bd18 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143bce0 <col:66> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ed7143c078 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143bdb0 <col:3> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143c060 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143c030 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ed7143bf50 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ed7143be70 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ed7143be28 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ed7143be10 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ed7143bdd0 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ed7143be58 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ed7143be40 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ed7143bdf0 <col:38> '_Bool' lvalue Var 0x55ed71437b78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55ed7143bf30 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ed7143bee8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ed7143bed0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ed7143be90 <col:56> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ed7143bf18 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ed7143bf00 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ed7143beb0 <col:74> '_Bool' lvalue Var 0x55ed71437dd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143bfe8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed7143bfa0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed7143bf70 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed7143c018 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed7143c000 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143bfc8 <col:102> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55ed7143c280 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143c098 <col:3> '_Bool' lvalue Var 0x55ed71437b78 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143c268 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143c238 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ed7143c158 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ed7143c110 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ed7143c0f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ed7143c0b8 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ed7143c140 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ed7143c128 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ed7143c0d8 <col:38> '_Bool' lvalue Var 0x55ed71437b78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143c1f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed7143c1a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed7143c178 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed7143c220 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed7143c208 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143c1d0 <col:66> '_Bool' lvalue Var 0x55ed71437b78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55ed7143c568 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143c2a0 <col:3> '_Bool' lvalue Var 0x55ed71437dd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143c550 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143c520 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ed7143c440 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ed7143c360 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ed7143c318 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ed7143c300 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ed7143c2c0 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ed7143c348 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ed7143c330 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ed7143c2e0 <col:38> '_Bool' lvalue Var 0x55ed71437b78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55ed7143c420 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ed7143c3d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ed7143c3c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ed7143c380 <col:56> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ed7143c408 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ed7143c3f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ed7143c3a0 <col:74> '_Bool' lvalue Var 0x55ed71437dd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143c4d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed7143c490 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed7143c460 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed7143c508 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed7143c4f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143c4b8 <col:102> '_Bool' lvalue Var 0x55ed71437dd0 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55ed7143c5c0 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed7143c5a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143c588 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed7143c618 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed7143c600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143c5e0 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed7143c6d0 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ed7143c638 <col:3> 'int' lvalue Var 0x55ed71437278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ed7143c6b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ed7143c698 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed7143c658 <col:22> 'int' lvalue Var 0x55ed71437278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ed7143c678 <col:41> 'int' 1
|   |-CallExpr 0x55ed7143c728 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed7143c710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143c6f0 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ed7143c7a0 <line:780:3, col:36>
|     `-CallExpr 0x55ed7143c780 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ed7143c768 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ed7143c748 <col:10> 'void *(void)' Function 0x55ed713dd958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ed7143c8f8 prev 0x55ed71436ef8 <line:782:1, line:814:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55ed7143c860 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55ed714404d8 <line:783:1, line:814:1>
|   |-CallExpr 0x55ed7143c9d8 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed7143c9c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143c9a0 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed7143ca38 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55ed7143c9f8 <col:3> 'int' lvalue Var 0x55ed71438560 'z' 'int'
|   | `-IntegerLiteral 0x55ed7143ca18 <col:7> 'int' 1
|   |-CallExpr 0x55ed7143ca90 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed7143ca78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143ca58 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed7143cae8 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed7143cad0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143cab0 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed7143cbc0 <line:788:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143cb08 <col:3> '_Bool' lvalue Var 0x55ed714385f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143cba8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55ed7143cb88 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55ed7143cb70 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55ed7143cb50 <col:19> 'void *(void)' Function 0x55ed713dd958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55ed7143cc70 <line:789:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143cbe0 <col:3> '_Bool' lvalue Var 0x55ed71438670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143cc58 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55ed7143cc38 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55ed7143cc20 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55ed7143cc00 <col:19> 'void *(void)' Function 0x55ed713dd958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55ed7143cce8 <line:790:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143cc90 <col:3> '_Bool' lvalue Var 0x55ed714378b0 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143ccd0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed7143ccb0 <col:21> '_Bool' lvalue Var 0x55ed71438670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55ed7143cd60 <line:791:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55ed7143cd08 <col:3> 'int' lvalue Var 0x55ed71437930 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55ed7143cd48 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed7143cd28 <col:15> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   |-BinaryOperator 0x55ed7143d198 <line:792:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55ed7143cd80 <col:3> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   | `-ConditionalOperator 0x55ed7143d168 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55ed7143cf90 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55ed7143ceb0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55ed7143cdd8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55ed7143cdc0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55ed7143cda0 <col:8> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55ed7143ce90 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55ed7143ce28 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55ed7143ce10 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55ed7143cdf0 <col:27> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55ed7143ce78 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55ed7143ce60 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55ed7143ce40 <col:46> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55ed7143cf70 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55ed7143cf08 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55ed7143cef0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55ed7143ced0 <col:65> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55ed7143cf58 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55ed7143cf40 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55ed7143cf20 <col:84> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55ed7143d150 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed7143cfb0 <col:101> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   |   `-ParenExpr 0x55ed7143d130 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55ed7143d100 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55ed7143d070 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ed7143d028 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ed7143d010 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ed7143cfd0 <col:106> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ed7143d058 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ed7143d040 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ed7143cff0 <col:124> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55ed7143d0d0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ed7143d090 <col:141> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55ed7143d0e8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143d0b0 <col:153> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x55ed7143d6a8 <line:793:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55ed7143d1b8 <col:3> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x55ed7143d678 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55ed7143d648 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ed7143d630 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ed7143d1d8 <col:15> '_Bool' lvalue Var 0x55ed71438670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ed7143d660 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed7143d1f8 <col:31> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55ed7143d610 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55ed7143d5e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55ed7143d408 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55ed7143d328 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55ed7143d250 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55ed7143d238 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55ed7143d218 <col:45> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55ed7143d308 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55ed7143d2a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55ed7143d288 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55ed7143d268 <col:64> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55ed7143d2f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55ed7143d2d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55ed7143d2b8 <col:83> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55ed7143d3e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55ed7143d380 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55ed7143d368 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55ed7143d348 <col:102> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55ed7143d3d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55ed7143d3b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55ed7143d398 <col:121> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55ed7143d5c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ed7143d428 <col:138> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x55ed7143d5a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55ed7143d578 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55ed7143d4e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ed7143d4a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ed7143d488 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ed7143d448 <col:151> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ed7143d4d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ed7143d4b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ed7143d468 <col:169> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55ed7143d548 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ed7143d508 <col:186> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55ed7143d560 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55ed7143d528 <col:198> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x55ed7143dbd8 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55ed7143d6c8 <col:3> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x55ed7143dba8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55ed7143db78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ed7143db60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ed7143d6e8 <col:15> '_Bool' lvalue Var 0x55ed71438670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55ed7143db90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed7143d708 <col:31> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x55ed7143db20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55ed7143daf0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55ed7143d918 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55ed7143d838 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55ed7143d760 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55ed7143d748 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55ed7143d728 <col:45> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55ed7143d818 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55ed7143d7b0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55ed7143d798 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55ed7143d778 <col:64> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55ed7143d800 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55ed7143d7e8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55ed7143d7c8 <col:83> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55ed7143d8f8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55ed7143d890 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55ed7143d878 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55ed7143d858 <col:102> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55ed7143d8e0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55ed7143d8c8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55ed7143d8a8 <col:121> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55ed7143dad8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ed7143d938 <col:138> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x55ed7143dab8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55ed7143da88 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55ed7143d9f8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55ed7143d9b0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55ed7143d998 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55ed7143d958 <col:151> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55ed7143d9e0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55ed7143d9c8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55ed7143d978 <col:169> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55ed7143da58 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55ed7143da18 <col:186> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55ed7143da70 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55ed7143da38 <col:198> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x55ed7143e180 <line:795:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143dbf8 <col:3> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143e168 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143e138 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55ed7143e0f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ed7143e0d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ed7143dc18 <col:20> '_Bool' lvalue Var 0x55ed71438670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143e120 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ed7143e108 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ed7143dc38 <col:36> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55ed7143e0b8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55ed7143e088 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55ed7143de48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ed7143dd68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ed7143dc90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ed7143dc78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ed7143dc58 <col:55> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ed7143dd48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ed7143dce0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ed7143dcc8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ed7143dca8 <col:74> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55ed7143dd30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ed7143dd18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ed7143dcf8 <col:93> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ed7143de28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ed7143ddc0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ed7143dda8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ed7143dd88 <col:112> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55ed7143de10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ed7143ddf8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ed7143ddd8 <col:131> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55ed7143e070 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ed7143e058 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ed7143de68 <col:148> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55ed7143e038 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55ed7143e008 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55ed7143df28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ed7143dee0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ed7143dec8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ed7143de88 <col:166> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ed7143df10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ed7143def8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ed7143dea8 <col:184> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55ed7143dfc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ed7143df78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ed7143df48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ed7143dff0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55ed7143dfd8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55ed7143dfa0 <col:212> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ed7143e748 <line:796:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143e1a0 <col:3> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143e730 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143e700 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55ed7143e6b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ed7143e6a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ed7143e1c0 <col:20> '_Bool' lvalue Var 0x55ed71438670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143e6e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ed7143e6d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ed7143e1e0 <col:36> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55ed7143e680 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55ed7143e650 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55ed7143e3f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ed7143e310 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ed7143e238 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ed7143e220 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ed7143e200 <col:55> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ed7143e2f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ed7143e288 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ed7143e270 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ed7143e250 <col:74> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55ed7143e2d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ed7143e2c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ed7143e2a0 <col:93> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ed7143e3d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ed7143e368 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ed7143e350 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ed7143e330 <col:112> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55ed7143e3b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ed7143e3a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ed7143e380 <col:131> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55ed7143e638 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ed7143e620 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ed7143e410 <col:148> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55ed7143e600 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55ed7143e5d0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55ed7143e4d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ed7143e488 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ed7143e470 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ed7143e430 <col:166> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ed7143e4b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ed7143e4a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ed7143e450 <col:184> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55ed7143e5a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ed7143e520 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ed7143e4f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ed7143e5b8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55ed7143e578 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55ed7143e548 <col:219> 'int' 0
|   |-BinaryOperator 0x55ed7143ed00 <line:797:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143e768 <col:3> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143ece8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143ecb8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55ed7143ec70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ed7143ec58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ed7143e788 <col:20> '_Bool' lvalue Var 0x55ed71438670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143eca0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ed7143ec88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ed7143e7a8 <col:36> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55ed7143ec38 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55ed7143ec08 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55ed7143e9b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ed7143e8d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ed7143e800 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ed7143e7e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ed7143e7c8 <col:55> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ed7143e8b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ed7143e850 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ed7143e838 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ed7143e818 <col:74> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55ed7143e8a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ed7143e888 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ed7143e868 <col:93> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ed7143e998 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ed7143e930 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ed7143e918 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ed7143e8f8 <col:112> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55ed7143e980 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ed7143e968 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ed7143e948 <col:131> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55ed7143ebf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ed7143ebd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ed7143e9d8 <col:148> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55ed7143ebb8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55ed7143eb88 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55ed7143ea98 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ed7143ea50 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ed7143ea38 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ed7143e9f8 <col:166> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ed7143ea80 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ed7143ea68 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ed7143ea18 <col:184> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55ed7143eb30 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ed7143eae8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ed7143eab8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ed7143eb70 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55ed7143eb48 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55ed7143eb10 <col:212> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55ed7143f2c8 <line:798:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143ed20 <col:3> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143f2b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143f280 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55ed7143f238 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ed7143f220 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ed7143ed40 <col:20> '_Bool' lvalue Var 0x55ed71438670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143f268 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55ed7143f250 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55ed7143ed60 <col:36> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55ed7143f200 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55ed7143f1d0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55ed7143ef70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55ed7143ee90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55ed7143edb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55ed7143eda0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55ed7143ed80 <col:55> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55ed7143ee70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55ed7143ee08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55ed7143edf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55ed7143edd0 <col:74> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55ed7143ee58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55ed7143ee40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55ed7143ee20 <col:93> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55ed7143ef50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55ed7143eee8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55ed7143eed0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55ed7143eeb0 <col:112> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55ed7143ef38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55ed7143ef20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55ed7143ef00 <col:131> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55ed7143f1b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55ed7143f1a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55ed7143ef90 <col:148> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55ed7143f180 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55ed7143f150 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55ed7143f050 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55ed7143f008 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55ed7143eff0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55ed7143efb0 <col:166> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55ed7143f038 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55ed7143f020 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55ed7143efd0 <col:184> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55ed7143f120 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55ed7143f0a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55ed7143f070 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55ed7143f138 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55ed7143f0f8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55ed7143f0c8 <col:219> 'int' 0
|   |-BinaryOperator 0x55ed7143f340 <line:799:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55ed7143f2e8 <col:3> 'int' lvalue Var 0x55ed714376f8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55ed7143f328 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55ed7143f308 <col:25> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   |-BinaryOperator 0x55ed7143f470 <line:800:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55ed7143f360 <col:3> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   | `-ConditionalOperator 0x55ed7143f440 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55ed7143f3f8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55ed7143f3e0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55ed7143f380 <col:7> '_Bool' lvalue Var 0x55ed714378b0 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55ed7143f410 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed7143f3a0 <col:25> 'int' lvalue Var 0x55ed71437930 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55ed7143f428 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55ed7143f3c0 <col:37> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   |-BinaryOperator 0x55ed7143f508 <line:801:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143f490 <col:3> '_Bool' lvalue Var 0x55ed714378b0 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55ed7143f4e0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55ed7143f4b0 <col:28> 'int' 0
|   |-CallExpr 0x55ed7143f560 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed7143f548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143f528 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed7143f5b8 <line:803:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed7143f5a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed7143f580 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed7143f8a0 <line:804:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55ed7143f5d8 <col:3> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   | `-ConditionalOperator 0x55ed7143f870 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55ed7143f698 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55ed7143f650 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55ed7143f638 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55ed7143f5f8 <col:7> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55ed7143f680 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55ed7143f668 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55ed7143f618 <col:25> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55ed7143f858 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed7143f6b8 <col:42> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55ed7143f838 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55ed7143f808 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55ed7143f778 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55ed7143f730 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55ed7143f718 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55ed7143f6d8 <col:55> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55ed7143f760 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55ed7143f748 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55ed7143f6f8 <col:73> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55ed7143f7d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55ed7143f798 <col:90> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55ed7143f7f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143f7b8 <col:102> 'int' lvalue Var 0x55ed71437818 'a' 'int'
|   |-BinaryOperator 0x55ed7143faa8 <line:805:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143f8c0 <col:3> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143fa90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143fa60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ed7143f980 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ed7143f938 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ed7143f920 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ed7143f8e0 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ed7143f968 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ed7143f950 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ed7143f900 <col:38> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143fa18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed7143f9d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed7143f9a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed7143fa48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed7143fa30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143f9f8 <col:66> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55ed7143fda0 <line:806:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143fac8 <col:3> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143fd88 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143fd58 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ed7143fc78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ed7143fb98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ed7143fb40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ed7143fb28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ed7143fae8 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ed7143fb80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ed7143fb58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ed7143fb08 <col:38> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55ed7143fc58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ed7143fc10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ed7143fbf8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ed7143fbb8 <col:56> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ed7143fc40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ed7143fc28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ed7143fbd8 <col:74> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143fd10 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed7143fcc8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed7143fc98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed7143fd40 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed7143fd28 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143fcf0 <col:102> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55ed7143ffa8 <line:807:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143fdc0 <col:3> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55ed7143ff90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed7143ff60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55ed7143fe80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55ed7143fe38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55ed7143fe20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55ed7143fde0 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55ed7143fe68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55ed7143fe50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55ed7143fe00 <col:38> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed7143ff18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed7143fed0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed7143fea0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed7143ff48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed7143ff30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed7143fef8 <col:66> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55ed71440290 <line:808:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55ed7143ffc8 <col:3> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55ed71440278 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55ed71440248 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55ed71440168 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55ed71440088 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55ed71440040 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55ed71440028 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55ed7143ffe8 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55ed71440070 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55ed71440058 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55ed71440008 <col:38> '_Bool' lvalue Var 0x55ed71437bf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55ed71440148 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55ed71440100 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55ed714400e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55ed714400a8 <col:56> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55ed71440130 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55ed71440118 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55ed714400c8 <col:74> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55ed71440200 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55ed714401b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55ed71440188 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55ed71440230 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55ed71440218 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55ed714401e0 <col:102> '_Bool' lvalue Var 0x55ed71437e48 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55ed714402e8 <line:809:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed714402d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed714402b0 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55ed71440340 <line:810:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55ed71440328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed71440308 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55ed714403f8 <line:811:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55ed71440360 <col:3> 'int' lvalue Var 0x55ed71437278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55ed714403d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55ed714403c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55ed71440380 <col:22> 'int' lvalue Var 0x55ed71437278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55ed714403a0 <col:41> 'int' 1
|   |-CallExpr 0x55ed71440450 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55ed71440438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55ed71440418 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55ed714404c8 <line:813:3, col:36>
|     `-CallExpr 0x55ed714404a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55ed71440490 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55ed71440470 <col:10> 'void *(void)' Function 0x55ed713dd958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55ed714405f8 prev 0x55ed71436fc0 <line:815:1, line:817:1> line:815:6 fence 'void ()'
| `-CompoundStmt 0x55ed71440698 <line:816:1, line:817:1>
|-FunctionDecl 0x55ed714406c8 prev 0x55ed71437080 <line:818:1, line:820:1> line:818:6 isync 'void ()'
| `-CompoundStmt 0x55ed71440768 <line:819:1, line:820:1>
|-FunctionDecl 0x55ed71440798 prev 0x55ed71437140 <line:821:1, line:823:1> line:821:6 lwfence 'void ()'
| `-CompoundStmt 0x55ed71440838 <line:822:1, line:823:1>
`-FunctionDecl 0x55ed714408a8 <line:824:1, line:850:1> line:824:5 main 'int ()'
  `-CompoundStmt 0x55ed71442810 <line:825:1, line:850:1>
    |-DeclStmt 0x55ed714409c0 <line:826:3, col:18>
    | `-VarDecl 0x55ed71440958 <col:3, col:13> col:13 used t1327 'pthread_t':'unsigned long'
    |-CallExpr 0x55ed71440bd8 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55ed71440bc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ed714409d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ed7141e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ed71440a18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ed714409f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ed71440958 't1327' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ed71440c18 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ed71440a90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55ed71440a68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ed71440a30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55ed71440c30 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ed71440ab0 <col:39> 'void *(void *)' Function 0x55ed71438788 'P0' 'void *(void *)'
    | `-ParenExpr 0x55ed71440b30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55ed71440b08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ed71440ad0 <col:52> 'int' 0
    |-DeclStmt 0x55ed71440cc0 <line:828:3, col:18>
    | `-VarDecl 0x55ed71440c58 <col:3, col:13> col:13 used t1328 'pthread_t':'unsigned long'
    |-CallExpr 0x55ed71440e68 <line:829:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55ed71440e50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ed71440cd8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ed7141e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ed71440d18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ed71440cf8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ed71440c58 't1328' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ed71440ea8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ed71440d90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55ed71440d68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ed71440d30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55ed71440ec0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ed71440db0 <col:39> 'void *(void *)' Function 0x55ed7143a1e0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55ed71440e30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55ed71440e08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ed71440dd0 <col:52> 'int' 0
    |-DeclStmt 0x55ed71440f50 <line:830:3, col:18>
    | `-VarDecl 0x55ed71440ee8 <col:3, col:13> col:13 used t1329 'pthread_t':'unsigned long'
    |-CallExpr 0x55ed714410f8 <line:831:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55ed714410e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ed71440f68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ed7141e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ed71440fa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ed71440f88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ed71440ee8 't1329' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ed71441138 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ed71441020 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55ed71440ff8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ed71440fc0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55ed71441150 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ed71441040 <col:39> 'void *(void *)' Function 0x55ed7143b578 'P2' 'void *(void *)'
    | `-ParenExpr 0x55ed714410c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55ed71441098 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ed71441060 <col:52> 'int' 0
    |-DeclStmt 0x55ed714411e0 <line:832:3, col:18>
    | `-VarDecl 0x55ed71441178 <col:3, col:13> col:13 used t1330 'pthread_t':'unsigned long'
    |-CallExpr 0x55ed71441388 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55ed71441370 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ed714411f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55ed7141e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55ed71441238 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55ed71441218 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55ed71441178 't1330' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55ed714413c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55ed714412b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55ed71441288 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55ed71441250 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55ed714413e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ed714412d0 <col:39> 'void *(void *)' Function 0x55ed7143c8f8 'P3' 'void *(void *)'
    | `-ParenExpr 0x55ed71441350 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55ed71441328 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55ed714412f0 <col:52> 'int' 0
    |-CallExpr 0x55ed71441430 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ed71441418 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ed714413f8 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ed71441500 <line:835:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55ed71441450 <col:3> '_Bool' lvalue Var 0x55ed714381a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55ed714414e8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55ed714414c8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55ed714414b0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55ed71441470 <col:21> 'int' lvalue Var 0x55ed71437278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55ed71441490 <col:41> 'int' 4
    |-CallExpr 0x55ed71441558 <line:836:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ed71441540 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ed71441520 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ed714415d0 <line:837:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55ed714415b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ed71441578 <col:3> 'void (int)' Function 0x55ed713dd790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55ed71441610 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55ed714415f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55ed71441598 <col:21> '_Bool' lvalue Var 0x55ed714381a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55ed71441660 <line:838:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ed71441648 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ed71441628 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ed71441948 <line:839:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55ed71441680 <col:3> 'int' lvalue Var 0x55ed71437818 'a' 'int'
    | `-ConditionalOperator 0x55ed71441918 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55ed71441740 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55ed714416f8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55ed714416e0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55ed714416a0 <col:7> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55ed71441728 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55ed71441710 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55ed714416c0 <col:25> '_Bool' lvalue Var 0x55ed714379a8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55ed71441900 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55ed71441760 <col:42> 'int' lvalue Var 0x55ed71437fc0 'a$w_buff0' 'int'
    |   `-ParenExpr 0x55ed714418e0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55ed714418b0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55ed71441820 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55ed714417d8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55ed714417c0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55ed71441780 <col:55> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55ed71441808 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55ed714417f0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55ed714417a0 <col:73> '_Bool' lvalue Var 0x55ed71437c68 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55ed71441880 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55ed71441840 <col:90> 'int' lvalue Var 0x55ed714380b8 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55ed71441898 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55ed71441860 <col:102> 'int' lvalue Var 0x55ed71437818 'a' 'int'
    |-BinaryOperator 0x55ed71441b50 <line:840:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55ed71441968 <col:3> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55ed71441b38 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ed71441b08 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55ed71441a28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55ed714419e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55ed714419c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55ed71441988 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55ed71441a10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55ed714419f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55ed714419a8 <col:38> '_Bool' lvalue Var 0x55ed714379a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ed71441ac0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ed71441a78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ed71441a48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55ed71441af0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ed71441ad8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ed71441aa0 <col:66> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55ed71441e48 <line:841:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55ed71441b70 <col:3> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55ed71441e30 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ed71441e00 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55ed71441d20 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55ed71441c40 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55ed71441bf8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55ed71441be0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55ed71441ba0 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55ed71441c28 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55ed71441c10 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55ed71441bc0 <col:38> '_Bool' lvalue Var 0x55ed714379a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55ed71441d00 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55ed71441cb8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55ed71441ca0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55ed71441c60 <col:56> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55ed71441ce8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55ed71441cd0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55ed71441c80 <col:74> '_Bool' lvalue Var 0x55ed71437c68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ed71441db8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ed71441d70 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ed71441d40 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55ed71441de8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ed71441dd0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ed71441d98 <col:102> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55ed71442050 <line:842:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55ed71441e68 <col:3> '_Bool' lvalue Var 0x55ed714379a8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55ed71442038 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ed71442008 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55ed71441f28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55ed71441ee0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55ed71441ec8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55ed71441e88 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55ed71441f10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55ed71441ef8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55ed71441ea8 <col:38> '_Bool' lvalue Var 0x55ed714379a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ed71441fc0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ed71441f78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ed71441f48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55ed71441ff0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ed71441fd8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ed71441fa0 <col:66> '_Bool' lvalue Var 0x55ed714379a8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55ed71442338 <line:843:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55ed71442070 <col:3> '_Bool' lvalue Var 0x55ed71437c68 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55ed71442320 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55ed714422f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55ed71442210 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55ed71442130 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55ed714420e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55ed714420d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55ed71442090 <col:20> '_Bool' lvalue Var 0x55ed71438038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55ed71442118 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55ed71442100 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55ed714420b0 <col:38> '_Bool' lvalue Var 0x55ed714379a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55ed714421f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55ed714421a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55ed71442190 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55ed71442150 <col:56> '_Bool' lvalue Var 0x55ed71438130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55ed714421d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55ed714421c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55ed71442170 <col:74> '_Bool' lvalue Var 0x55ed71437c68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55ed714422a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55ed71442260 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55ed71442230 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55ed714422d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55ed714422c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55ed71442288 <col:102> '_Bool' lvalue Var 0x55ed71437c68 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55ed71442390 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ed71442378 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ed71442358 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ed714423e8 <line:845:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55ed714423d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ed714423b0 <col:3> 'void ()' Function 0x55ed713dde40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55ed714426b8 <line:846:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x55ed71442408 <col:3> '_Bool' lvalue Var 0x55ed71438220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55ed714426a0 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55ed71442688 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55ed71442668 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x55ed71442648 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x55ed714425b0 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x55ed71442518 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x55ed71442480 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55ed71442468 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55ed71442428 <col:23> 'int' lvalue Var 0x55ed71437398 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x55ed71442448 <col:46> 'int' 0
    |         | | `-BinaryOperator 0x55ed714424f8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55ed714424e0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55ed714424a0 <col:51> 'int' lvalue Var 0x55ed714374b8 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55ed714424c0 <col:74> 'int' 0
    |         | `-BinaryOperator 0x55ed71442590 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55ed71442578 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55ed71442538 <col:79> 'int' lvalue Var 0x55ed714375d8 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55ed71442558 <col:102> 'int' 0
    |         `-BinaryOperator 0x55ed71442628 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x55ed71442610 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55ed714425d0 <col:107> 'int' lvalue Var 0x55ed714376f8 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x55ed714425f0 <col:130> 'int' 0
    |-CallExpr 0x55ed71442710 <line:847:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55ed714426f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55ed714426d8 <col:3> 'void ()' Function 0x55ed713ddf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55ed71442788 <line:848:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55ed71442770 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55ed71442730 <col:3> 'void (int)' Function 0x55ed713ddbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55ed714427c8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55ed714427b0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55ed71442750 <col:21> '_Bool' lvalue Var 0x55ed71438220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55ed71442800 <line:849:3, col:10>
      `-IntegerLiteral 0x55ed714427e0 <col:10> 'int' 0
