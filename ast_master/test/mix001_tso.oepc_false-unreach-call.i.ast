TranslationUnitDecl 0x556e3d98be18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x556e3d98c6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x556e3d98c3b0 '__int128'
|-TypedefDecl 0x556e3d98c748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x556e3d98c3d0 'unsigned __int128'
|-TypedefDecl 0x556e3d98ca50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x556e3d98c820 'struct __NSConstantString_tag'
|   `-Record 0x556e3d98c7a0 '__NSConstantString_tag'
|-TypedefDecl 0x556e3d98caf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x556e3d98cab0 'char *'
|   `-BuiltinType 0x556e3d98beb0 'char'
|-TypedefDecl 0x556e3d9cb650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x556e3d98cd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x556e3d98cbd0 'struct __va_list_tag'
|     `-Record 0x556e3d98cb50 '__va_list_tag'
|-FunctionDecl 0x556e3d9cb770 <./test/mix001_tso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x556e3d9cb940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x556e3d9cb870 <col:31> col:34 'int'
|-FunctionDecl 0x556e3d9cbab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x556e3d9cbbe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x556e3d9cbd28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x556e3d9cbc98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x556e3d9cbf58 <col:40, col:99>
|   |-IfStmt 0x556e3d9cbf28 <col:42, col:88>
|   | |-UnaryOperator 0x556e3d9cbe08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x556e3d9cbdf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x556e3d9cbdd0 <col:47> 'int' lvalue ParmVar 0x556e3d9cbc98 'expression' 'int'
|   | `-CompoundStmt 0x556e3d9cbf10 <col:59, col:88>
|   |   `-LabelStmt 0x556e3d9cbef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x556e3d9cbe88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x556e3d9cbe70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x556e3d9cbe20 <col:68> 'void () __attribute__((noreturn))' Function 0x556e3d9cbbe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x556e3d9cbf40 <col:89>
|   `-ReturnStmt 0x556e3d9cbf48 <col:91>
|-FunctionDecl 0x556e3d9cbfa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x556e3d9cc060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x556e3d9cc3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556e3d9cc118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x556e3d9cc198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x556e3d9cc218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556e3d9cc298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556e3d9cc4a0 <line:11:22>
|-FunctionDecl 0x556e3d9f2520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556e3d9cc510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x556e3d9cc590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x556e3d9f2350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556e3d9f23d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556e3d9f25e0 <line:14:22>
|-FunctionDecl 0x556e3d9f2890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556e3d9f2650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x556e3d9f26d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x556e3d9f2750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x556e3d9f2948 <line:16:22>
|-TypedefDecl 0x556e3d9f29b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x556e3d98bf70 'unsigned char'
|-TypedefDecl 0x556e3d9f2a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x556e3d98bf90 'unsigned short'
|-TypedefDecl 0x556e3d9f2a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x556e3d98bfb0 'unsigned int'
|-TypedefDecl 0x556e3d9f2b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f2b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x556e3d98bed0 'signed char'
|-TypedefDecl 0x556e3d9f2be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x556e3d98bf70 'unsigned char'
|-TypedefDecl 0x556e3d9f2c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x556e3d98bef0 'short'
|-TypedefDecl 0x556e3d9f2cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x556e3d98bf90 'unsigned short'
|-TypedefDecl 0x556e3d9f2d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x556e3d98bf10 'int'
|-TypedefDecl 0x556e3d9f2da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x556e3d98bfb0 'unsigned int'
|-TypedefDecl 0x556e3d9f2e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f2e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f2ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f2f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f2fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f3048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x556e3d98bfb0 'unsigned int'
|-TypedefDecl 0x556e3d9f30b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x556e3d98bfb0 'unsigned int'
|-TypedefDecl 0x556e3d9f3128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f3198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f3208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x556e3d98bfb0 'unsigned int'
|-TypedefDecl 0x556e3d9f3278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f32e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f3378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f33e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x556e3d98bf10 'int'
|-RecordDecl 0x556e3d9f3440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x556e3d9f3588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x556e3d9f3640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x556e3d9f35e0 'struct __fsid_t' sugar
|   `-RecordType 0x556e3d9f34c0 '__fsid_t'
|     `-Record 0x556e3d9f3440 ''
|-TypedefDecl 0x556e3d9f36c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f3738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f37a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f3818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x556e3d98bfb0 'unsigned int'
|-TypedefDecl 0x556e3d9f3888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f38f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x556e3d98bfb0 'unsigned int'
|-TypedefDecl 0x556e3d9f3968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f39d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x556e3d98bf10 'int'
|-TypedefDecl 0x556e3d9f3a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x556e3d98bf10 'int'
|-TypedefDecl 0x556e3d9f3ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x556e3d98bf10 'int'
|-TypedefDecl 0x556e3d9f3b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x556e3d98c630 'void *'
|   `-BuiltinType 0x556e3d98be70 'void'
|-TypedefDecl 0x556e3d9f3b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f3c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f3c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f3ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f3d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f3dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f3e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f3ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f3f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f3f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f3ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f4088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x556e3d9f4050 '__off64_t' sugar
|   |-Typedef 0x556e3d9f3378 '__off64_t'
|   `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f4180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x556e3d9f4140 '__quad_t *'
|   `-TypedefType 0x556e3d9f40e0 '__quad_t' sugar
|     |-Typedef 0x556e3d9f2ef8 '__quad_t'
|     `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f41f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x556e3d98cab0 'char *'
|   `-BuiltinType 0x556e3d98beb0 'char'
|-TypedefDecl 0x556e3d9f4260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f42d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x556e3d98bfb0 'unsigned int'
|-FunctionDecl 0x556e3d9f5458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x556e3d9f5380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x556e3d9f5768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x556e3d9f5758 <line:73:3, col:34>
|     `-CallExpr 0x556e3d9f5718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x556e3d9f5700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556e3d9f5690 <col:10> '<builtin fn type>' Function 0x556e3d9f5500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x556e3d9f5740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x556e3d9f56b0 <col:29> 'unsigned int' lvalue ParmVar 0x556e3d9f5380 '__bsx' 'unsigned int'
|-FunctionDecl 0x556e3d9f5500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x556e3d9f55a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x556e3d9f5610 <col:10> Implicit
| `-ConstAttr 0x556e3d9f5668 <col:10> Implicit
|-FunctionDecl 0x556e3d9f58c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x556e3d9f57b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x556e3d9f5bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x556e3d9f5bc8 <line:78:3, col:34>
|     `-CallExpr 0x556e3d9f5b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x556e3d9f5b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556e3d9f5af8 <col:10> '<builtin fn type>' Function 0x556e3d9f5968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x556e3d9f5bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x556e3d9f5b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x556e3d9f57b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x556e3d9f5968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x556e3d9f5a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x556e3d9f5a78 <col:10> Implicit
| `-ConstAttr 0x556e3d9f5ad0 <col:10> Implicit
|-TypedefDecl 0x556e3d9f5c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-TypedefDecl 0x556e3d9f5c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x556e3d9f5c60 '__time_t' sugar
|   |-Typedef 0x556e3d9f3888 '__time_t'
|   `-BuiltinType 0x556e3d98bf30 'long'
|-RecordDecl 0x556e3d9f5cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x556e3d9f5da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x556e3d9f5e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x556e3d9f5ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x556e3d9f5e90 '__pid_t' sugar
|   |-Typedef 0x556e3d9f33e8 '__pid_t'
|   `-BuiltinType 0x556e3d98bf10 'int'
|-RecordDecl 0x556e3d9f5f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x556e3d9f5fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x556e3d9f6030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x556e3d9f60f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x556e3d9f6158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-RecordDecl 0x556e3d9f61b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x556e3d9f7480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x556e3d9f7530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x556e3d9f74d0 'struct cpu_set_t' sugar
|   `-RecordType 0x556e3d9f6230 'cpu_set_t'
|     `-Record 0x556e3d9f61b0 ''
|-FunctionDecl 0x556e3d9f7808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x556e3d9f75d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556e3d9f76e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x556e3d9f78b8 <line:108:19>
|-FunctionDecl 0x556e3d9f7a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x556e3d9f7920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x556e3d9f7b38 <col:69>
|-FunctionDecl 0x556e3d9f7cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x556e3d9f7ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x556e3d9f7d58 <col:64>
|-FunctionDecl 0x556e3d9f8018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x556e3d9f7dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556e3d9f7ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556e3d9f80c8 <line:114:22>
|-FunctionDecl 0x556e3d9f83b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x556e3d9f8130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556e3d9f8228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x556e3d9f8460 <col:88>
|-FunctionDecl 0x556e3d9f8718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556e3d9f84c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556e3d9f8548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x556e3d9f85d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556e3d9f87d0 <col:62>
|-FunctionDecl 0x556e3d9f8948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x556e3d9f8838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x556e3d9f89f0 <col:63>
|-FunctionDecl 0x556e3d9f8b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x556e3d9f8bb8 <col:47>
|-FunctionDecl 0x556e3d9f8cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x556e3d9f8c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556e3d9f8d68 <col:69>
|-FunctionDecl 0x556e3d9f8e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x556e3d9f8dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556e3d9f8f18 <col:69>
|-FunctionDecl 0x556e3d9f91d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556e3d9f8f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556e3d9f90b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x556e3d9f9288 <col:88>
|-TypedefDecl 0x556e3d9f9318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x556e3d9f92e0 '__clock_t' sugar
|   |-Typedef 0x556e3d9f36c8 '__clock_t'
|   `-BuiltinType 0x556e3d98bf30 'long'
|-TypedefDecl 0x556e3d9f93c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x556e3d9f9370 '__clockid_t' sugar
|   |-Typedef 0x556e3d9f3ab8 '__clockid_t'
|   `-BuiltinType 0x556e3d98bf10 'int'
|-TypedefDecl 0x556e3d9f9458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x556e3d9f9420 '__timer_t' sugar
|   |-Typedef 0x556e3d9f3b28 '__timer_t'
|   `-PointerType 0x556e3d98c630 'void *'
|     `-BuiltinType 0x556e3d98be70 'void'
|-RecordDecl 0x556e3d9f94b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x556e3d9f9570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x556e3d9f95d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x556e3d9f9640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x556e3d9f96a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x556e3d9f9710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x556e3d9f9778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x556e3d9f97e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x556e3d9f9848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x556e3d9f98b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x556e3d9f9918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x556e3d9f9980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x556e3d9f99d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x556e3d9f9a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x556e3d9f9b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x556e3d9f9bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x556e3d9f9d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x556e3d9f9e20 <col:45>
|-FunctionDecl 0x556e3d9fa000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x556e3d9f9ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x556e3d9fa0a8 <col:54>
|-FunctionDecl 0x556e3d9fa2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x556e3d9fa110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x556e3d9fa188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x556e3d9fa358 <line:158:22>
| `-ConstAttr 0x556e3d9faff0 <col:63>
|-FunctionDecl 0x556e3d9fb1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556e3d9fb0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556e3d9fb298 <col:56>
|-FunctionDecl 0x556e3d9fb640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x556e3d9fb308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x556e3d9fb380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556e3d9fb400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x556e3d9fb4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x556e3d9fb700 <col:54>
|-RecordDecl 0x556e3d9fb758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x556e3d9fb808 parent 0x556e3d98be18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x556e3d9fba68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x556e3d9fbb08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x556e3d9fbb70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x556e3d9fbbd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x556e3d9fbcc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x556e3d9fbde8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x556e3d9fbd90 'struct __locale_struct *'
|   `-ElaboratedType 0x556e3d9fbd20 'struct __locale_struct' sugar
|     `-RecordType 0x556e3d9fb7e0 'struct __locale_struct'
|       `-Record 0x556e3d9fb758 '__locale_struct'
|-TypedefDecl 0x556e3d9fbe98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x556e3d9fbe60 '__locale_t' sugar
|   |-Typedef 0x556e3d9fbde8 '__locale_t'
|   `-PointerType 0x556e3d9fbd90 'struct __locale_struct *'
|     `-ElaboratedType 0x556e3d9fbd20 'struct __locale_struct' sugar
|       `-RecordType 0x556e3d9fb7e0 'struct __locale_struct'
|         `-Record 0x556e3d9fb758 '__locale_struct'
|-FunctionDecl 0x556e3d9fd2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x556e3d9fbf08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x556e3d9fbf80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556e3d9fd028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x556e3d9fd0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556e3d9fd130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x556e3d9fd368 <col:40>
|-FunctionDecl 0x556e3d9fd558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556e3d9fd430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x556e3d9fd600 <col:66>
|-FunctionDecl 0x556e3d9fd710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556e3d9fd668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x556e3d9fd7b8 <col:69>
|-FunctionDecl 0x556e3d9fd9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556e3d9fd820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556e3d9fd8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556e3d9fda98 <col:52>
|-FunctionDecl 0x556e3d9fdc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556e3d9fdb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556e3d9fdb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556e3d9fdcf0 <col:55>
|-FunctionDecl 0x556e3d9fde88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x556e3d9fdd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x556e3d9fdf30 <col:62>
|-FunctionDecl 0x556e3d9fe168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x556e3d9fdf98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x556e3d9fe210 <col:60>
|-FunctionDecl 0x556e3d9fe438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556e3d9fe290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556e3d9fe310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x556e3d9fe4e8 <col:44>
|-FunctionDecl 0x556e3d9fe6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556e3d9fe550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556e3d9fe5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x556e3d9fe7a8 <col:49>
|-VarDecl 0x556e3d9fe8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x556e3d9fe928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x556e3d9fe9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x556e3d9fea70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x556e3d9feba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x556e3d9fec40 <col:42>
|-VarDecl 0x556e3d9fecb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x556e3d9fed30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x556e3d9feeb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x556e3d9feda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x556e3d9fef60 <col:57>
|-FunctionDecl 0x556e3d9ff0d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556e3d9fefe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556e3d9ff178 <col:56>
|-FunctionDecl 0x556e3d9ff288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556e3d9ff1f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x556e3d9ff330 <col:59>
|-FunctionDecl 0x556e3d9ff438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x556e3d9ff3a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x556e3d9ff4e0 <col:48>
| `-ConstAttr 0x556e3d9ff538 <col:89>
|-FunctionDecl 0x556e3d9ff798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556e3d9ff5e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x556e3d9ff678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x556e3d9ff9f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556e3d9ff888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556e3d9ff918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x556e3d9ffaa8 <col:88>
|-FunctionDecl 0x556e3d9ffc40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556e3d9ffb10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556e3d9ffba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x556e3d9ffcf0 <col:88>
|-FunctionDecl 0x556e3d9fff08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x556e3d9ffd58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556e3d9ffde8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x556e3d9fffb8 <line:209:22>
|-FunctionDecl 0x556e3da00358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556e3da00020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556e3da000e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x556e3da00170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x556e3da00200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x556e3da00658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x556e3da00458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x556e3da00530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x556e3da00708 <col:85>
|-FunctionDecl 0x556e3da00af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x556e3da00770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556e3da008a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x556e3da009b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x556e3da00bb0 <col:52>
|-FunctionDecl 0x556e3da00d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x556e3da00c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556e3da00dd0 <col:61>
|-FunctionDecl 0x556e3da01248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x556e3da00e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556e3da00eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x556e3da00fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x556e3da010f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x556e3da01308 <col:62>
|-FunctionDecl 0x556e3da01528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x556e3da01370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556e3da01400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x556e3da015d8 <line:222:22>
|-FunctionDecl 0x556e3da016d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x556e3da01640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556e3da01780 <col:65>
|-TypedefDecl 0x556e3da017f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x556e3d98bfd0 'unsigned long'
|-RecordDecl 0x556e3da01848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x556e3da01990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556e3da019f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556e3da01aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x556e3da01a50 'union pthread_attr_t' sugar
|   `-RecordType 0x556e3da018d0 'union pthread_attr_t'
|     `-Record 0x556e3da01848 'pthread_attr_t'
|-RecordDecl 0x556e3da01b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x556e3da01c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x556e3da01cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x556e3da01da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x556e3da01d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x556e3da01b80 'struct __pthread_internal_list'
|     `-Record 0x556e3da01b00 '__pthread_internal_list'
|-RecordDecl 0x556e3da01e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x556e3da01eb8 parent 0x556e3d98be18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x556e3da01f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556e3da01ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x556e3da02060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x556e3da06110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x556e3da06178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x556e3da061e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x556e3da06268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x556e3da06320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x556e3da06410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x556e3da06478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556e3da06600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x556e3da065a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x556e3da01e90 'pthread_mutex_t'
|     `-Record 0x556e3da01e10 ''
|-RecordDecl 0x556e3da06670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x556e3da067b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556e3da06818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556e3da068d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x556e3da06870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x556e3da066f0 'pthread_mutexattr_t'
|     `-Record 0x556e3da06670 ''
|-RecordDecl 0x556e3da06940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x556e3da069e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x556e3da06ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556e3da06b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x556e3da06b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x556e3da06be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x556e3da06c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x556e3da06cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x556e3da06d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x556e3da06d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x556e3da06e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./test/mix001_tso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./test/mix001_tso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x556e3da06f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x556e3da06f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x556e3da08130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x556e3da07070 'union pthread_cond_t' sugar
|   `-RecordType 0x556e3da069c0 'pthread_cond_t'
|     `-Record 0x556e3da06940 ''
|-RecordDecl 0x556e3da081a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x556e3da082a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556e3da08308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556e3da083c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x556e3da08360 'union pthread_condattr_t' sugar
|   `-RecordType 0x556e3da08220 'pthread_condattr_t'
|     `-Record 0x556e3da081a0 ''
|-TypedefDecl 0x556e3da08448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x556e3d98bfb0 'unsigned int'
|-TypedefDecl 0x556e3da084b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x556e3d98bf10 'int'
|-RecordDecl 0x556e3da08510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x556e3da085b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x556e3da08680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556e3da086e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x556e3da08750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x556e3da087b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x556e3da08820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x556e3da08888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x556e3da088f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x556e3da08958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x556e3da089c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x556e3da08a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x556e3da08a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x556e3da08b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./test/mix001_tso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix001_tso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x556e3da08be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556e3da08c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556e3da08da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x556e3da08d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x556e3da08590 'pthread_rwlock_t'
|     `-Record 0x556e3da08510 ''
|-RecordDecl 0x556e3da08e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x556e3da08f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x556e3da08fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556e3da09070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x556e3da09010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x556e3da08e90 'pthread_rwlockattr_t'
|     `-Record 0x556e3da08e10 ''
|-TypedefDecl 0x556e3da0a140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x556e3d98bf14 'volatile int' volatile
|   `-BuiltinType 0x556e3d98bf10 'int'
|-RecordDecl 0x556e3da0a198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x556e3da0a2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x556e3da0a348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556e3da0a400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x556e3da0a3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x556e3da0a220 'pthread_barrier_t'
|     `-Record 0x556e3da0a198 ''
|-RecordDecl 0x556e3da0a470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x556e3da0a570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556e3da0a5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556e3da0a690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x556e3da0a630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x556e3da0a4f0 'pthread_barrierattr_t'
|     `-Record 0x556e3da0a470 ''
|-TypedefDecl 0x556e3da0a7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x556e3da0a740 'long [8]' 8 
|   `-BuiltinType 0x556e3d98bf30 'long'
|-EnumDecl 0x556e3da0a800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x556e3da0a8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x556e3da0a918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x556e3da0a968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x556e3da0aa38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x556e3da0aa88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x556e3da0aad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x556e3da0ab28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x556e3da0abb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x556e3da0ab98 <col:26> 'int'
| |   `-DeclRefExpr 0x556e3da0ab78 <col:26> 'int' EnumConstant 0x556e3da0aa38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x556e3da0ac38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x556e3da0ac20 <col:29> 'int'
| |   `-DeclRefExpr 0x556e3da0ac00 <col:29> 'int' EnumConstant 0x556e3da0aa88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x556e3da0acc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x556e3da0aca8 <col:30> 'int'
| |   `-DeclRefExpr 0x556e3da0ac88 <col:30> 'int' EnumConstant 0x556e3da0aad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x556e3da0ad48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x556e3da0ad30 <col:27> 'int'
|     `-DeclRefExpr 0x556e3da0ad10 <col:27> 'int' EnumConstant 0x556e3da0abb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x556e3da0ad98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x556e3da0ae68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x556e3da0aef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x556e3da0aed8 <col:30> 'int'
| |   `-DeclRefExpr 0x556e3da0aeb8 <col:30> 'int' EnumConstant 0x556e3da0ae68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x556e3da0af40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x556e3da0afc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x556e3da0afb0 <col:29> 'int'
|     `-DeclRefExpr 0x556e3da0af90 <col:29> 'int' EnumConstant 0x556e3da0af40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x556e3da0b018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x556e3da0b0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x556e3da0b150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x556e3da0b1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x556e3da0b1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x556e3da0b2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x556e3da0b308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x556e3da0b358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x556e3da0b3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x556e3da0b3c8 <col:31> 'int'
|     `-DeclRefExpr 0x556e3da0b3a8 <col:31> 'int' EnumConstant 0x556e3da0b2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x556e3da0b430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x556e3da0b4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x556e3da0b548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x556e3da0b598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x556e3da0b668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x556e3da0b6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x556e3da0b708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x556e3da0b7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x556e3da0b828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x556e3da0b878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x556e3da0bab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x556e3da0bb20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x556e3da0bb88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x556e3da0bca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x556e3da0bcf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x556e3da0bdc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x556e3da0be18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x556e3da0be68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x556e3da0bf38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x556e3da0bf88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x556e3da0c5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x556e3da0c080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x556e3da0c1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556e3da0c3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x556e3da0c420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x556e3da0c678 <col:47>
| |-NonNullAttr 0x556e3da0c6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x556e3da0c708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x556e3da0c830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x556e3da0c760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x556e3da0ca88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x556e3da0c8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x556e3da0c968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x556e3da0cc58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x556e3da0cb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x556e3da0cd00 <col:60>
|-FunctionDecl 0x556e3da0ce50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x556e3da0cef0 <col:54>
| `-ConstAttr 0x556e3da0cf48 <col:95>
|-FunctionDecl 0x556e3da0e990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x556e3da0cf80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556e3da0cff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x556e3da0ea40 <line:395:19>
| `-ConstAttr 0x556e3da0ea98 <col:60>
|-FunctionDecl 0x556e3da0ec68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556e3da0eb30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556e3da0ed10 <col:71>
| `-NonNullAttr 0x556e3da0ed68 <col:112, col:126> 1
|-FunctionDecl 0x556e3da0ee70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556e3da0edb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556e3da0ef18 <line:398:22>
| `-NonNullAttr 0x556e3da0ef70 <col:63, col:77> 1
|-FunctionDecl 0x556e3da0f198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x556e3da0efb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556e3da0f038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x556e3da0f248 <line:401:22>
| `-NonNullAttr 0x556e3da0f2a0 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da0f4a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556e3da0f2e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556e3da0f368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x556e3da0f558 <line:404:22>
| `-NonNullAttr 0x556e3da0f5b0 <col:63, col:77> 1
|-FunctionDecl 0x556e3da0f808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x556e3da0f5f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556e3da0f6a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x556e3da0f8b8 <line:407:22>
| `-NonNullAttr 0x556e3da0f910 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da10b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556e3da109b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556e3da10a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556e3da10c18 <line:410:22>
| `-NonNullAttr 0x556e3da10c70 <col:63, col:77> 1
|-FunctionDecl 0x556e3da10ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556e3da10cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556e3da10d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556e3da10f58 <line:413:22>
| `-NonNullAttr 0x556e3da10fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da111e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556e3da10ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x556e3da11088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x556e3da11298 <col:37>
| `-NonNullAttr 0x556e3da112f0 <col:78, col:95> 1 2
|-FunctionDecl 0x556e3da114d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da11338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556e3da113b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x556e3da11588 <line:419:22>
| `-NonNullAttr 0x556e3da115e0 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da11768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556e3da11628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556e3da116a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x556e3da11818 <line:421:22>
| `-NonNullAttr 0x556e3da11870 <col:63, col:77> 1
|-FunctionDecl 0x556e3da11a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da118b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556e3da11938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x556e3da11ae8 <line:424:22>
| `-NonNullAttr 0x556e3da11b40 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da11cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556e3da11b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556e3da11c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x556e3da11d78 <line:427:22>
| `-NonNullAttr 0x556e3da11dd0 <col:63, col:77> 1
|-FunctionDecl 0x556e3da11f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da11e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556e3da11e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x556e3da12028 <line:430:22>
| `-NonNullAttr 0x556e3da12080 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da12208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556e3da120c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556e3da12148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x556e3da122b8 <line:432:22>
| `-NonNullAttr 0x556e3da12310 <col:63, col:77> 1
|-FunctionDecl 0x556e3da12538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x556e3da12358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556e3da123d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x556e3da125e8 <line:435:22>
| |-NonNullAttr 0x556e3da12640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x556e3da12678 <col:100> "" ""
|-FunctionDecl 0x556e3da12888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x556e3da126c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556e3da12748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x556e3da12938 <line:438:22>
| |-NonNullAttr 0x556e3da12990 <col:63, col:77> 1
| `-DeprecatedAttr 0x556e3da129d8 <col:97> "" ""
|-FunctionDecl 0x556e3da12bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556e3da12a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556e3da12aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556e3da12c78 <line:441:22>
| `-NonNullAttr 0x556e3da12cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da12e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556e3da12d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556e3da12d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556e3da12f00 <line:444:22>
| `-NonNullAttr 0x556e3da12f58 <col:63, col:77> 1
|-FunctionDecl 0x556e3da13248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556e3da12fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556e3da13028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x556e3da130a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556e3da13300 <line:448:22>
| `-NonNullAttr 0x556e3da13358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x556e3da13608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x556e3da133b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556e3da13430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x556e3da134a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556e3da136c0 <col:43>
| `-NonNullAttr 0x556e3da13718 <col:84, col:98> 1
|-FunctionDecl 0x556e3da13a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556e3da13768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556e3da137e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x556e3da13878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x556e3da13ad8 <line:453:22>
| `-NonNullAttr 0x556e3da13b30 <col:63, col:77> 3
|-FunctionDecl 0x556e3da13e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556e3da13b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556e3da13bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x556e3da13c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556e3da13ec0 <line:457:22>
| `-NonNullAttr 0x556e3da13f18 <col:63, col:80> 2 3
|-FunctionDecl 0x556e3da14108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x556e3da13f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556e3da13fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x556e3da141b8 <line:459:22>
|-FunctionDecl 0x556e3da14588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x556e3da14280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x556e3da14420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x556e3da14638 <col:52, col:69> 1 2
|-FunctionDecl 0x556e3da147e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x556e3da146c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x556e3da14740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x556e3da149f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x556e3da148a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x556e3da14928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x556e3da14b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x556e3da14ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x556e3da14c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x556e3da14d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x556e3da14dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x556e3da14ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x556e3da14f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x556e3da15100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix001_tso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x556e3da151f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x556e3da152b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x556e3da15250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x556e3da14db0 '__pthread_unwind_buf_t'
| |   `-Record 0x556e3da14d28 ''
| `-AlignedAttr 0x556e3da15308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x556e3da15380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x556e3da154e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x556e3da15548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x556e3da155b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x556e3da15618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x556e3da15820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556e3da15710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556e3da15a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556e3da158d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556e3da15bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556e3da15ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x556e3da15c68 <line:488:22>
|-RecordDecl 0x556e3da15cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x556e3da15fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x556e3da15e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x556e3da15eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x556e3da16088 <col:86>
| `-ReturnsTwiceAttr 0x556e3da160e0 <col:12> Implicit
|-FunctionDecl 0x556e3da16408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556e3da161b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x556e3da162c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x556e3da164b8 <line:494:22>
| `-NonNullAttr 0x556e3da16510 <col:63, col:77> 1
|-FunctionDecl 0x556e3da16688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556e3da16558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556e3da16730 <line:496:22>
| `-NonNullAttr 0x556e3da16788 <col:63, col:77> 1
|-FunctionDecl 0x556e3da16890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556e3da167d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556e3da16938 <line:498:22>
| `-NonNullAttr 0x556e3da16990 <col:52, col:66> 1
|-FunctionDecl 0x556e3da17ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556e3da17a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556e3da17b80 <line:500:22>
| `-NonNullAttr 0x556e3da17bd8 <col:52, col:66> 1
|-FunctionDecl 0x556e3da17e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556e3da17c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556e3da17cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556e3da17ec8 <col:36>
| `-NonNullAttr 0x556e3da17f20 <col:66, col:83> 1 2
|-FunctionDecl 0x556e3da18020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556e3da17f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556e3da180c8 <line:505:22>
| `-NonNullAttr 0x556e3da18120 <col:52, col:66> 1
|-FunctionDecl 0x556e3da183b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da181d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556e3da18250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556e3da18468 <line:509:22>
| `-NonNullAttr 0x556e3da184c0 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da18788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x556e3da18508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556e3da18588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x556e3da18608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x556e3da18840 <line:513:22>
| `-NonNullAttr 0x556e3da18898 <col:63, col:80> 1 3
|-FunctionDecl 0x556e3da18a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556e3da188e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556e3da18ad8 <line:515:22>
| `-NonNullAttr 0x556e3da18b30 <col:63, col:77> 1
|-FunctionDecl 0x556e3da18d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556e3da18be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556e3da18dc0 <line:517:22>
| `-NonNullAttr 0x556e3da18e18 <col:63, col:77> 1
|-FunctionDecl 0x556e3da18f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556e3da18e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556e3da18fc8 <line:519:22>
| `-NonNullAttr 0x556e3da19020 <col:63, col:77> 1
|-FunctionDecl 0x556e3da19248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da19068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556e3da190e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x556e3da192f8 <line:523:22>
| `-NonNullAttr 0x556e3da19350 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da19558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556e3da19398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556e3da19418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x556e3da19608 <line:526:22>
| `-NonNullAttr 0x556e3da19660 <col:63, col:77> 1
|-FunctionDecl 0x556e3da19808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da196a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556e3da19728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x556e3da198b8 <line:529:22>
| `-NonNullAttr 0x556e3da19910 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da19b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556e3da19958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556e3da19a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x556e3da19bb0 <line:531:22>
| `-NonNullAttr 0x556e3da19c08 <col:63, col:77> 1
|-FunctionDecl 0x556e3da19db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da19c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556e3da19cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x556e3da19e68 <line:535:22>
| `-NonNullAttr 0x556e3da19ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da1a048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556e3da19f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556e3da19f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x556e3da1a0f8 <line:538:22>
| `-NonNullAttr 0x556e3da1a150 <col:63, col:77> 1
|-FunctionDecl 0x556e3da1a2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da1a198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556e3da1a218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556e3da1a3a8 <line:542:22>
| `-NonNullAttr 0x556e3da1a400 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da1a588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556e3da1a448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556e3da1a4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x556e3da1a638 <line:545:22>
| `-NonNullAttr 0x556e3da1a690 <col:63, col:77> 1
|-FunctionDecl 0x556e3da1a878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x556e3da1a6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x556e3da1a758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x556e3da1a928 <line:548:22>
| `-NonNullAttr 0x556e3da1a980 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da1bb38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556e3da1a9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556e3da1ba78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x556e3da1bbe8 <line:551:22>
| `-NonNullAttr 0x556e3da1bc40 <col:63, col:77> 1
|-FunctionDecl 0x556e3da1bf78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x556e3da1bd20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556e3da1be30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x556e3da1c028 <col:29>
| `-NonNullAttr 0x556e3da1c080 <col:70, col:84> 1
|-FunctionDecl 0x556e3da1c1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556e3da1c0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556e3da1c2a0 <line:556:22>
| `-NonNullAttr 0x556e3da1c2f8 <col:63, col:77> 1
|-FunctionDecl 0x556e3da1c400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556e3da1c348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556e3da1c4a8 <line:558:22>
| `-NonNullAttr 0x556e3da1c500 <col:52, col:66> 1
|-FunctionDecl 0x556e3da1c600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556e3da1c548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556e3da1c6a8 <line:560:19>
| `-NonNullAttr 0x556e3da1c700 <col:49, col:63> 1
|-FunctionDecl 0x556e3da1c938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556e3da1c748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556e3da1c7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556e3da1c9e8 <col:39>
| `-NonNullAttr 0x556e3da1ca70 <col:69, col:86> 1 2
|-FunctionDecl 0x556e3da1cb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556e3da1cab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556e3da1cc18 <line:565:22>
| `-NonNullAttr 0x556e3da1cc70 <col:52, col:66> 1
|-FunctionDecl 0x556e3da1cd70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556e3da1ccb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556e3da1ce18 <line:567:22>
| `-NonNullAttr 0x556e3da1ce70 <col:52, col:66> 1
|-FunctionDecl 0x556e3da1d028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556e3da1ceb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556e3da1cf48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556e3da1d0d8 <col:39>
| `-NonNullAttr 0x556e3da1d130 <col:69, col:86> 1 2
|-FunctionDecl 0x556e3da1d230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556e3da1d178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556e3da1d2d8 <line:572:22>
| `-NonNullAttr 0x556e3da1d330 <col:52, col:66> 1
|-FunctionDecl 0x556e3da1d518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556e3da1d3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556e3da1d5c0 <line:574:22>
| `-NonNullAttr 0x556e3da1d618 <col:63, col:77> 1
|-FunctionDecl 0x556e3da1d720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556e3da1d668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556e3da1d7c8 <line:576:22>
| `-NonNullAttr 0x556e3da1d820 <col:63, col:77> 1
|-FunctionDecl 0x556e3da1da80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da1d868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556e3da1d8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x556e3da1db30 <line:580:22>
| `-NonNullAttr 0x556e3da1db88 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da1dd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556e3da1dbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556e3da1dc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x556e3da1de48 <line:583:22>
| `-NonNullAttr 0x556e3da1dea0 <col:63, col:77> 1
|-FunctionDecl 0x556e3da1e048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da1dee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556e3da1df68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x556e3da1e0f8 <line:587:22>
| `-NonNullAttr 0x556e3da1e150 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da1e2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556e3da1e198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556e3da1e218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x556e3da1e388 <col:36>
| `-NonNullAttr 0x556e3da1e3e0 <col:77, col:91> 1
|-FunctionDecl 0x556e3da1e718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x556e3da1e4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556e3da1e5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x556e3da1e7c8 <line:592:22>
| `-NonNullAttr 0x556e3da1e820 <col:63, col:77> 1
|-FunctionDecl 0x556e3da1e998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556e3da1e868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556e3da1ea40 <line:594:22>
| `-NonNullAttr 0x556e3da1eac0 <col:63, col:77> 1
|-FunctionDecl 0x556e3da1ebc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556e3da1eb08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556e3da1ec68 <line:596:22>
| `-NonNullAttr 0x556e3da1ecc0 <col:52, col:66> 1
|-FunctionDecl 0x556e3da1edc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556e3da1ed08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556e3da1ee68 <line:598:22>
| `-NonNullAttr 0x556e3da1eec0 <col:52, col:66> 1
|-FunctionDecl 0x556e3da1f0e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x556e3da1ef08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556e3da1ef80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x556e3da1f198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x556e3da1f4c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556e3da1f218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556e3da1f290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556e3da1f320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x556e3da1f580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x556e3da1f798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556e3da1f660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556e3da1f840 <line:607:22>
| `-NonNullAttr 0x556e3da1f898 <col:63, col:77> 1
|-FunctionDecl 0x556e3da1f9a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556e3da1f8e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556e3da1fa48 <line:609:22>
| `-NonNullAttr 0x556e3da1fad0 <col:63, col:77> 1
|-FunctionDecl 0x556e3da1fcf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da1fb18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556e3da1fb98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x556e3da1fda8 <line:613:22>
| `-NonNullAttr 0x556e3da1fe00 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da20008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x556e3da1fe48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556e3da1fec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x556e3da200b8 <col:37>
| `-NonNullAttr 0x556e3da20110 <col:78, col:92> 1
|-FunctionDecl 0x556e3da20328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x556e3da20158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556e3da20200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x556e3da203d8 <line:619:22>
| `-NonNullAttr 0x556e3da20430 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da205f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x556e3da20478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556e3da204f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x556e3da206a8 <line:622:22>
| `-NonNullAttr 0x556e3da20700 <col:63, col:77> 1
|-FunctionDecl 0x556e3da209a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x556e3da207e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x556e3da20860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x556e3da20a58 <line:624:22>
| `-NonNullAttr 0x556e3da20ae0 <col:63, col:77> 1
|-FunctionDecl 0x556e3da20c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556e3da20b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556e3da20d00 <line:626:22>
| `-NonNullAttr 0x556e3da20d58 <col:63, col:77> 1
|-FunctionDecl 0x556e3da20e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556e3da20da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556e3da20f08 <line:628:22>
| `-NonNullAttr 0x556e3da20f60 <col:52, col:66> 1
|-FunctionDecl 0x556e3da21060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556e3da20fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556e3da21108 <line:630:22>
| `-NonNullAttr 0x556e3da21160 <col:52, col:66> 1
|-FunctionDecl 0x556e3da21260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556e3da211a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556e3da21308 <line:632:22>
| `-NonNullAttr 0x556e3da21360 <col:52, col:66> 1
|-FunctionDecl 0x556e3da21738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x556e3da21440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x556e3da21550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556e3da215d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x556e3da217f0 <line:636:22>
| `-NonNullAttr 0x556e3da21848 <col:63, col:77> 1
|-FunctionDecl 0x556e3da219c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556e3da21898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556e3da21a70 <line:638:22>
| `-NonNullAttr 0x556e3da22b00 <col:63, col:77> 1
|-FunctionDecl 0x556e3da22c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556e3da22b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556e3da22ca8 <line:640:22>
| `-NonNullAttr 0x556e3da22d00 <col:52, col:66> 1
|-FunctionDecl 0x556e3da22ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556e3da22db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556e3da22f90 <line:642:22>
| `-NonNullAttr 0x556e3da22fe8 <col:63, col:77> 1
|-FunctionDecl 0x556e3da230f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556e3da23038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556e3da23198 <line:644:22>
| `-NonNullAttr 0x556e3da231f0 <col:63, col:77> 1
|-FunctionDecl 0x556e3da23418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556e3da23238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556e3da232b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x556e3da234c8 <line:648:22>
| `-NonNullAttr 0x556e3da23520 <col:63, col:80> 1 2
|-FunctionDecl 0x556e3da23728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x556e3da23568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x556e3da235e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x556e3da237d8 <line:651:22>
| `-NonNullAttr 0x556e3da23830 <col:63, col:77> 1
|-FunctionDecl 0x556e3da23b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x556e3da23910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x556e3da23a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x556e3da23c48 <line:654:22>
| `-NonNullAttr 0x556e3da23ca0 <col:63, col:77> 1
|-FunctionDecl 0x556e3da23df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x556e3da23ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556e3da23ea0 <col:69>
|-FunctionDecl 0x556e3da24018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x556e3da23f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556e3da240c0 <col:72>
|-FunctionDecl 0x556e3da242f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x556e3da24128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x556e3da241d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x556e3da243a8 <col:44>
|-FunctionDecl 0x556e3da245c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x556e3da24410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556e3da24488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x556e3da24678 <line:661:22>
| `-NonNullAttr 0x556e3da246d0 <col:63, col:77> 2
|-FunctionDecl 0x556e3da24b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x556e3da247b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x556e3da248c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x556e3da249d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x556e3da24be8 <col:47>
|-FunctionDecl 0x556e3da24cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x556e3da24c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556e3da24e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x556e3da24db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556e3da24fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x556e3da24f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556e3da25068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x556e3da25128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x556e3da251e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x556e3da252a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x556e3da25320 prev 0x556e3da252a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x556e3da25388 <col:24> 'int' 0
|-VarDecl 0x556e3da253c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x556e3da25440 prev 0x556e3da253c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x556e3da254a8 <col:27> 'int' 0
|-VarDecl 0x556e3da254e0 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x556e3da25560 prev 0x556e3da254e0 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x556e3da255c8 <col:27> 'int' 0
|-VarDecl 0x556e3da25600 <line:678:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x556e3da25680 prev 0x556e3da25600 <line:679:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x556e3da256e8 <col:27> 'int' 0
|-VarDecl 0x556e3da25720 <line:680:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x556e3da257a0 prev 0x556e3da25720 <line:681:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x556e3da25808 <col:27> 'int' 0
|-VarDecl 0x556e3da25840 <line:682:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x556e3da258c0 prev 0x556e3da25840 <line:683:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x556e3da25928 <col:27> 'int' 0
|-VarDecl 0x556e3da25960 <line:684:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x556e3da259e0 prev 0x556e3da25960 <line:685:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x556e3da25a48 <col:27> 'int' 0
|-VarDecl 0x556e3da25a78 <line:686:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x556e3da25b00 <line:687:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x556e3da25b80 <line:688:1, col:5> col:5 used x 'int'
|-VarDecl 0x556e3da25c00 prev 0x556e3da25b80 <line:689:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x556e3da25c68 <col:9> 'int' 0
|-VarDecl 0x556e3da25ca0 <line:690:1, col:5> col:5 used y 'int'
|-VarDecl 0x556e3da25d20 prev 0x556e3da25ca0 <line:691:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x556e3da25d88 <col:9> 'int' 0
|-VarDecl 0x556e3da25dc0 <line:692:1, col:5> col:5 used z 'int'
|-VarDecl 0x556e3da25e40 prev 0x556e3da25dc0 <line:693:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x556e3da25ea8 <col:9> 'int' 0
|-VarDecl 0x556e3da25ed8 <line:694:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x556e3da25f58 <line:695:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x556e3da25fd0 <line:696:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x556e3da26048 <line:697:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x556e3da260c0 <line:698:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x556e3da26138 <line:699:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x556e3da261b0 <line:700:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x556e3da26228 <line:701:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x556e3da262a0 <line:702:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x556e3da26318 <line:703:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x556e3da26390 <line:704:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x556e3da26410 <line:705:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x556e3da26490 <line:706:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x556e3da26508 <line:707:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x556e3da26588 <line:708:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x556e3da26600 <line:709:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x556e3da26678 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x556e3da266f0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x556e3da26808 prev 0x556e3da24cf0 <line:712:1, line:756:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x556e3da26770 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556e3da2ab50 <line:713:1, line:756:1>
|   |-CallExpr 0x556e3da26918 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da26900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da268b0 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da26990 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556e3da26938 <col:3> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x556e3da26978 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da26958 <col:15> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |-BinaryOperator 0x556e3da269f0 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556e3da269b0 <col:3> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x556e3da269d0 <col:15> 'int' 1
|   |-BinaryOperator 0x556e3da26a68 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da26a10 <col:3> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da26a50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da26a30 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556e3da26b10 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da26a88 <col:3> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x556e3da26ad8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556e3da26aa8 <col:27> 'int' 1
|   |-CallExpr 0x556e3da26c98 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x556e3da26c80 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x556e3da26b30 <col:3> 'void (int)' Function 0x556e3d9cbd28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x556e3da26c30 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x556e3da26c10 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x556e3da26bf0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x556e3da26ba8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x556e3da26b90 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x556e3da26b50 <col:23> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x556e3da26bd8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x556e3da26bc0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x556e3da26b70 <col:41> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556e3da26d18 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da26cc0 <col:3> '_Bool' lvalue Var 0x556e3da261b0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da26d00 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da26ce0 <col:20> '_Bool' lvalue Var 0x556e3da25fd0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x556e3da26d90 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da26d38 <col:3> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da26d78 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da26d58 <col:20> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556e3da26e08 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da26db0 <col:3> '_Bool' lvalue Var 0x556e3da262a0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da26df0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da26dd0 <col:20> '_Bool' lvalue Var 0x556e3da260c0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556e3da26e80 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da26e28 <col:3> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da26e68 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da26e48 <col:20> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556e3da26f18 <line:724:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da26ea0 <col:3> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x556e3da26ef0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556e3da26ec0 <col:27> 'int' 1
|   |-CallExpr 0x556e3da26f70 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da26f58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da26f38 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da26fc8 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da26fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da26f90 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da27098 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da26fe8 <col:3> '_Bool' lvalue Var 0x556e3da26678 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x556e3da27078 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556e3da27060 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556e3da27008 <col:19> '_Bool (void)' Function 0x556e3d9cb770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556e3da27130 <line:728:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da270b8 <col:3> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x556e3da27110 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556e3da270f8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556e3da270d8 <col:19> '_Bool (void)' Function 0x556e3d9cb770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556e3da271a8 <line:729:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da27150 <col:3> '_Bool' lvalue Var 0x556e3da25ed8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da27190 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da27170 <col:21> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x556e3da27220 <line:730:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556e3da271c8 <col:3> 'int' lvalue Var 0x556e3da25f58 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556e3da27208 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da271e8 <col:15> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   |-BinaryOperator 0x556e3da27658 <line:731:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x556e3da27240 <col:3> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   | `-ConditionalOperator 0x556e3da27628 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556e3da27450 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556e3da27370 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556e3da27298 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556e3da27280 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556e3da27260 <col:8> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556e3da27350 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556e3da272e8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556e3da272d0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556e3da272b0 <col:27> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x556e3da27338 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x556e3da27320 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556e3da27300 <col:46> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x556e3da27430 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556e3da273c8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556e3da273b0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556e3da27390 <col:65> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x556e3da27418 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556e3da27400 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556e3da273e0 <col:84> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x556e3da27610 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da27470 <col:101> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   |   `-ParenExpr 0x556e3da275f0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556e3da275c0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x556e3da27530 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556e3da274e8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556e3da274d0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556e3da27490 <col:106> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556e3da27518 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556e3da27500 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556e3da274b0 <col:124> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556e3da27590 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556e3da27550 <col:141> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556e3da275a8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da27570 <col:153> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |-BinaryOperator 0x556e3da27b80 <line:732:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556e3da27678 <col:3> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x556e3da27b50 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556e3da27b20 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556e3da27af0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556e3da27698 <col:15> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556e3da27b38 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da276b8 <col:31> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x556e3da27ad0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556e3da27aa0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556e3da278c8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556e3da277e8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556e3da27710 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556e3da276f8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556e3da276d8 <col:45> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556e3da277c8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556e3da27760 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556e3da27748 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556e3da27728 <col:64> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x556e3da277b0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556e3da27798 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556e3da27778 <col:83> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556e3da278a8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556e3da27840 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556e3da27828 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556e3da27808 <col:102> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x556e3da27890 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556e3da27878 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556e3da27858 <col:121> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556e3da27a88 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556e3da278e8 <col:138> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x556e3da27a68 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556e3da27a38 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556e3da279a8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556e3da27960 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556e3da27948 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556e3da27908 <col:151> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556e3da27990 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556e3da27978 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556e3da27928 <col:169> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x556e3da27a08 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556e3da279c8 <col:186> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556e3da27a20 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556e3da279e8 <col:198> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |-BinaryOperator 0x556e3da28090 <line:733:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556e3da27ba0 <col:3> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x556e3da28060 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556e3da28030 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556e3da28018 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556e3da27bc0 <col:15> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556e3da28048 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da27be0 <col:31> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x556e3da27ff8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556e3da27fc8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556e3da27df0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556e3da27d10 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556e3da27c38 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556e3da27c20 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556e3da27c00 <col:45> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556e3da27cf0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556e3da27c88 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556e3da27c70 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556e3da27c50 <col:64> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x556e3da27cd8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556e3da27cc0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556e3da27ca0 <col:83> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556e3da27dd0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556e3da27d68 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556e3da27d50 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556e3da27d30 <col:102> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x556e3da27db8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556e3da27da0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556e3da27d80 <col:121> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556e3da27fb0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556e3da27e10 <col:138> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x556e3da27f90 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556e3da27f60 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556e3da27ed0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556e3da27e88 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556e3da27e70 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556e3da27e30 <col:151> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556e3da27eb8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556e3da27ea0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556e3da27e50 <col:169> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x556e3da27f30 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556e3da27ef0 <col:186> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556e3da27f48 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556e3da27f10 <col:198> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |-BinaryOperator 0x556e3da28638 <line:734:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da280b0 <col:3> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da28620 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da285f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556e3da285a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da28590 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da280d0 <col:20> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da285d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da285c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da280f0 <col:36> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556e3da28570 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556e3da28540 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556e3da28300 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556e3da28220 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556e3da28148 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556e3da28130 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556e3da28110 <col:55> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556e3da28200 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556e3da28198 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556e3da28180 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556e3da28160 <col:74> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556e3da281e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556e3da281d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556e3da281b0 <col:93> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556e3da282e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556e3da28278 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556e3da28260 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556e3da28240 <col:112> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556e3da282c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556e3da282b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556e3da28290 <col:131> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556e3da28528 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556e3da28510 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556e3da28320 <col:148> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556e3da284f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556e3da284c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556e3da283e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556e3da28398 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556e3da28380 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556e3da28340 <col:166> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556e3da283c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556e3da283b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556e3da28360 <col:184> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556e3da28478 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556e3da28430 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556e3da28400 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556e3da284a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556e3da28490 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556e3da28458 <col:212> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556e3da28c28 <line:735:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da28658 <col:3> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da28c10 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da28be0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556e3da28b98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da28b80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da28678 <col:20> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da28bc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da28bb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da28698 <col:36> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556e3da28b60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556e3da28b30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556e3da288a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556e3da287c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556e3da286f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556e3da286d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556e3da286b8 <col:55> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556e3da287a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556e3da28740 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556e3da28728 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556e3da28708 <col:74> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556e3da28790 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556e3da28778 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556e3da28758 <col:93> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556e3da28888 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556e3da28820 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556e3da28808 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556e3da287e8 <col:112> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556e3da28870 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556e3da28858 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556e3da28838 <col:131> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556e3da28af0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556e3da28ad8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556e3da288c8 <col:148> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556e3da28ab8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556e3da28a88 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556e3da28988 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556e3da28940 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556e3da28928 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556e3da288e8 <col:166> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556e3da28970 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556e3da28958 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556e3da28908 <col:184> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556e3da28a58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556e3da289d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556e3da289a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556e3da28a70 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556e3da28a30 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556e3da28a00 <col:219> 'int' 0
|   |-BinaryOperator 0x556e3da291d0 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da28c48 <col:3> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da291b8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da29188 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556e3da29140 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da29128 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da28c68 <col:20> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da29170 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da29158 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da28c88 <col:36> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x556e3da29108 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556e3da290d8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556e3da28e98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556e3da28db8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556e3da28ce0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556e3da28cc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556e3da28ca8 <col:55> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556e3da28d98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556e3da28d30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556e3da28d18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556e3da28cf8 <col:74> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556e3da28d80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556e3da28d68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556e3da28d48 <col:93> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556e3da28e78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556e3da28e10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556e3da28df8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556e3da28dd8 <col:112> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556e3da28e60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556e3da28e48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556e3da28e28 <col:131> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556e3da290c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556e3da290a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556e3da28eb8 <col:148> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x556e3da29088 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556e3da29058 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556e3da28f78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556e3da28f30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556e3da28f18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556e3da28ed8 <col:166> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556e3da28f60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556e3da28f48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556e3da28ef8 <col:184> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556e3da29010 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556e3da28fc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556e3da28f98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556e3da29040 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556e3da29028 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556e3da28ff0 <col:212> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556e3da29798 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da291f0 <col:3> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da29780 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da29750 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556e3da29708 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da296f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da29210 <col:20> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da29738 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da29720 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da29230 <col:36> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x556e3da296d0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556e3da296a0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556e3da29440 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556e3da29360 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556e3da29288 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556e3da29270 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556e3da29250 <col:55> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556e3da29340 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556e3da292d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556e3da292c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556e3da292a0 <col:74> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556e3da29328 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556e3da29310 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556e3da292f0 <col:93> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556e3da29420 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556e3da293b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556e3da293a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556e3da29380 <col:112> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556e3da29408 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556e3da293f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556e3da293d0 <col:131> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556e3da29688 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556e3da29670 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556e3da29460 <col:148> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x556e3da29650 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556e3da29620 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556e3da29520 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556e3da294d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556e3da294c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556e3da29480 <col:166> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556e3da29508 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556e3da294f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556e3da294a0 <col:184> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556e3da295f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556e3da29570 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556e3da29540 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556e3da29608 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556e3da295c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556e3da29598 <col:219> 'int' 0
|   |-BinaryOperator 0x556e3da29810 <line:738:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556e3da297b8 <col:3> 'int' lvalue Var 0x556e3da25440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x556e3da297f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da297d8 <col:25> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   |-BinaryOperator 0x556e3da29940 <line:739:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556e3da29830 <col:3> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   | `-ConditionalOperator 0x556e3da29910 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556e3da298c8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556e3da298b0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556e3da29850 <col:7> '_Bool' lvalue Var 0x556e3da25ed8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556e3da298e0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da29870 <col:25> 'int' lvalue Var 0x556e3da25f58 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556e3da298f8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556e3da29890 <col:37> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   |-BinaryOperator 0x556e3da299d8 <line:740:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da29960 <col:3> '_Bool' lvalue Var 0x556e3da25ed8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556e3da299b0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556e3da29980 <col:28> 'int' 0
|   |-CallExpr 0x556e3da29a30 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da29a18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da299f8 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da29a88 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da29a70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da29a50 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da29b00 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556e3da29aa8 <col:3> 'int' lvalue Var 0x556e3da25560 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x556e3da29ae8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da29ac8 <col:25> 'int' lvalue Var 0x556e3da25c00 'x' 'int'
|   |-CallExpr 0x556e3da29b78 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da29b60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da29b40 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da29bd0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da29bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da29b98 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da29eb8 <line:746:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556e3da29bf0 <col:3> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   | `-ConditionalOperator 0x556e3da29e88 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556e3da29cb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556e3da29c68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556e3da29c50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556e3da29c10 <col:7> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556e3da29c98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556e3da29c80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556e3da29c30 <col:25> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x556e3da29e70 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da29cd0 <col:42> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x556e3da29e50 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556e3da29e20 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556e3da29d90 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556e3da29d48 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556e3da29d30 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556e3da29cf0 <col:55> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556e3da29d78 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556e3da29d60 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556e3da29d10 <col:73> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556e3da29df0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556e3da29db0 <col:90> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556e3da29e08 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da29dd0 <col:102> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   |-BinaryOperator 0x556e3da2a0c0 <line:747:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da29ed8 <col:3> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2a0a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2a078 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556e3da29f98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556e3da29f50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556e3da29f38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556e3da29ef8 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556e3da29f80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556e3da29f68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556e3da29f18 <col:38> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2a030 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da29fe8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da29fb8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2a060 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2a048 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2a010 <col:66> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556e3da2a3a8 <line:748:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2a0e0 <col:3> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2a390 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2a360 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556e3da2a280 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556e3da2a1a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556e3da2a158 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556e3da2a140 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556e3da2a100 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556e3da2a188 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556e3da2a170 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556e3da2a120 <col:38> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x556e3da2a260 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556e3da2a218 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556e3da2a200 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556e3da2a1c0 <col:56> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556e3da2a248 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556e3da2a230 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556e3da2a1e0 <col:74> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2a318 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da2a2d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da2a2a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2a348 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2a330 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2a2f8 <col:102> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556e3da2a5b0 <line:749:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2a3c8 <col:3> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2a598 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2a568 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556e3da2a488 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556e3da2a440 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556e3da2a428 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556e3da2a3e8 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556e3da2a470 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556e3da2a458 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556e3da2a408 <col:38> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2a520 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da2a4d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da2a4a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2a550 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2a538 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2a500 <col:66> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556e3da2a898 <line:750:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2a5d0 <col:3> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2a880 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2a850 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556e3da2a770 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556e3da2a690 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556e3da2a648 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556e3da2a630 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556e3da2a5f0 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556e3da2a678 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556e3da2a660 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556e3da2a610 <col:38> '_Bool' lvalue Var 0x556e3da26048 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x556e3da2a750 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556e3da2a708 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556e3da2a6f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556e3da2a6b0 <col:56> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556e3da2a738 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556e3da2a720 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556e3da2a6d0 <col:74> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2a808 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da2a7c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da2a790 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2a838 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2a820 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2a7e8 <col:102> '_Bool' lvalue Var 0x556e3da26228 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x556e3da2a8f0 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2a8d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2a8b8 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da2a948 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da2a930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2a910 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da2aa00 <line:753:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556e3da2a968 <col:3> 'int' lvalue Var 0x556e3da25320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556e3da2a9e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556e3da2a9c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da2a988 <col:22> 'int' lvalue Var 0x556e3da25320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556e3da2a9a8 <col:41> 'int' 1
|   |-CallExpr 0x556e3da2aa58 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2aa40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2aa20 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556e3da2ab08 <line:755:3, col:36>
|     `-CallExpr 0x556e3da2aae8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556e3da2aad0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556e3da2aa78 <col:10> 'void *(void)' Function 0x556e3d9cbab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556e3da2ad60 prev 0x556e3da24e48 <line:757:1, line:779:1> line:757:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x556e3da2acc8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556e3da2c0d8 <line:758:1, line:779:1>
|   |-CallExpr 0x556e3da2ae40 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da2ae28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2ae08 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da2aea0 <line:760:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556e3da2ae60 <col:3> 'int' lvalue Var 0x556e3da25c00 'x' 'int'
|   | `-IntegerLiteral 0x556e3da2ae80 <col:7> 'int' 1
|   |-CallExpr 0x556e3da2aef8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2aee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2aec0 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da2af50 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da2af38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2af18 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da2afc8 <line:763:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556e3da2af70 <col:3> 'int' lvalue Var 0x556e3da25680 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x556e3da2afb0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da2af90 <col:25> 'int' lvalue Var 0x556e3da25c00 'x' 'int'
|   |-CallExpr 0x556e3da2b020 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2b008 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2afe8 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da2b078 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da2b060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2b040 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da2b0f0 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556e3da2b098 <col:3> 'int' lvalue Var 0x556e3da257a0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x556e3da2b0d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da2b0b8 <col:25> 'int' lvalue Var 0x556e3da25d20 'y' 'int'
|   |-CallExpr 0x556e3da2b148 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2b130 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2b110 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da2b1a0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da2b188 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2b168 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da2b488 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556e3da2b1c0 <col:3> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   | `-ConditionalOperator 0x556e3da2b458 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556e3da2b280 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556e3da2b238 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556e3da2b220 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556e3da2b1e0 <col:7> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556e3da2b268 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556e3da2b250 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556e3da2b200 <col:25> '_Bool' lvalue Var 0x556e3da260c0 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x556e3da2b440 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da2b2a0 <col:42> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x556e3da2b420 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556e3da2b3f0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556e3da2b360 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556e3da2b318 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556e3da2b300 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556e3da2b2c0 <col:55> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556e3da2b348 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556e3da2b330 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556e3da2b2e0 <col:73> '_Bool' lvalue Var 0x556e3da262a0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556e3da2b3c0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556e3da2b380 <col:90> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556e3da2b3d8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2b3a0 <col:102> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   |-BinaryOperator 0x556e3da2b690 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2b4a8 <col:3> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2b678 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2b648 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556e3da2b568 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556e3da2b520 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556e3da2b508 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556e3da2b4c8 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556e3da2b550 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556e3da2b538 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556e3da2b4e8 <col:38> '_Bool' lvalue Var 0x556e3da260c0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2b600 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da2b5b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da2b588 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2b630 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2b618 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2b5e0 <col:66> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556e3da2b978 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2b6b0 <col:3> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2b960 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2b930 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556e3da2b850 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556e3da2b770 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556e3da2b728 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556e3da2b710 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556e3da2b6d0 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556e3da2b758 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556e3da2b740 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556e3da2b6f0 <col:38> '_Bool' lvalue Var 0x556e3da260c0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556e3da2b830 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556e3da2b7e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556e3da2b7d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556e3da2b790 <col:56> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556e3da2b818 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556e3da2b800 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556e3da2b7b0 <col:74> '_Bool' lvalue Var 0x556e3da262a0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2b8e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da2b8a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da2b870 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2b918 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2b900 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2b8c8 <col:102> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556e3da2bba8 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2b998 <col:3> '_Bool' lvalue Var 0x556e3da260c0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2bb90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2bb60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556e3da2ba58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556e3da2ba10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556e3da2b9f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556e3da2b9b8 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556e3da2ba40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556e3da2ba28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556e3da2b9d8 <col:38> '_Bool' lvalue Var 0x556e3da260c0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2baf0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da2baa8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da2ba78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2bb20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2bb08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2bad0 <col:66> '_Bool' lvalue Var 0x556e3da260c0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556e3da2be90 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2bbc8 <col:3> '_Bool' lvalue Var 0x556e3da262a0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2be78 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2be48 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556e3da2bd68 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556e3da2bc88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556e3da2bc40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556e3da2bc28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556e3da2bbe8 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556e3da2bc70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556e3da2bc58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556e3da2bc08 <col:38> '_Bool' lvalue Var 0x556e3da260c0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556e3da2bd48 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556e3da2bd00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556e3da2bce8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556e3da2bca8 <col:56> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556e3da2bd30 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556e3da2bd18 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556e3da2bcc8 <col:74> '_Bool' lvalue Var 0x556e3da262a0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2be00 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da2bdb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da2bd88 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2be30 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2be18 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2bde0 <col:102> '_Bool' lvalue Var 0x556e3da262a0 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x556e3da2bee8 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2bed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2beb0 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da2bf40 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da2bf28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2bf08 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da2bff8 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556e3da2bf60 <col:3> 'int' lvalue Var 0x556e3da25320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556e3da2bfd8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556e3da2bfc0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da2bf80 <col:22> 'int' lvalue Var 0x556e3da25320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556e3da2bfa0 <col:41> 'int' 1
|   |-CallExpr 0x556e3da2c050 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2c038 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2c018 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556e3da2c0c8 <line:778:3, col:36>
|     `-CallExpr 0x556e3da2c0a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556e3da2c090 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556e3da2c070 <col:10> 'void *(void)' Function 0x556e3d9cbab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556e3da2c238 prev 0x556e3da24fa0 <line:780:1, line:815:1> line:780:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x556e3da2c1a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556e3da2ff30 <line:781:1, line:815:1>
|   |-CallExpr 0x556e3da2c318 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da2c300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2c2e0 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da2c378 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556e3da2c338 <col:3> 'int' lvalue Var 0x556e3da25d20 'y' 'int'
|   | `-IntegerLiteral 0x556e3da2c358 <col:7> 'int' 1
|   |-CallExpr 0x556e3da2c3d0 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2c3b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2c398 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da2c428 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da2c410 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2c3f0 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da2c4a0 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556e3da2c448 <col:3> 'int' lvalue Var 0x556e3da258c0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x556e3da2c488 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da2c468 <col:25> 'int' lvalue Var 0x556e3da25d20 'y' 'int'
|   |-CallExpr 0x556e3da2c4f8 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2c4e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2c4c0 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da2c550 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da2c538 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2c518 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da2c5e8 <line:789:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2c570 <col:3> '_Bool' lvalue Var 0x556e3da26678 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x556e3da2c5c8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556e3da2c5b0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556e3da2c590 <col:19> '_Bool (void)' Function 0x556e3d9cb770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556e3da2c680 <line:790:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2c608 <col:3> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x556e3da2c660 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556e3da2c648 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556e3da2c628 <col:19> '_Bool (void)' Function 0x556e3d9cb770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556e3da2c6f8 <line:791:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2c6a0 <col:3> '_Bool' lvalue Var 0x556e3da25ed8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2c6e0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da2c6c0 <col:21> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x556e3da2c770 <line:792:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556e3da2c718 <col:3> 'int' lvalue Var 0x556e3da25f58 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556e3da2c758 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da2c738 <col:15> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   |-BinaryOperator 0x556e3da2cbb8 <line:793:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x556e3da2c790 <col:3> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   | `-ConditionalOperator 0x556e3da2cb88 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556e3da2c9a0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556e3da2c8c0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556e3da2c7e8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556e3da2c7d0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556e3da2c7b0 <col:8> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556e3da2c8a0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556e3da2c838 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556e3da2c820 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556e3da2c800 <col:27> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x556e3da2c888 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x556e3da2c870 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556e3da2c850 <col:46> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x556e3da2c980 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556e3da2c918 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556e3da2c900 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556e3da2c8e0 <col:65> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x556e3da2c968 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556e3da2c950 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556e3da2c930 <col:84> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556e3da2cb70 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da2c9c0 <col:101> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   |   `-ParenExpr 0x556e3da2cb40 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556e3da2cb10 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x556e3da2ca80 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556e3da2ca38 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556e3da2ca20 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556e3da2c9e0 <col:106> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556e3da2ca68 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556e3da2ca50 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556e3da2ca00 <col:124> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556e3da2cae0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556e3da2caa0 <col:141> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556e3da2caf8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2cac0 <col:153> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |-BinaryOperator 0x556e3da2d0c8 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556e3da2cbd8 <col:3> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x556e3da2d098 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556e3da2d068 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556e3da2d050 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556e3da2cbf8 <col:15> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556e3da2d080 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da2cc18 <col:31> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x556e3da2d030 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556e3da2d000 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556e3da2ce28 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556e3da2cd48 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556e3da2cc70 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556e3da2cc58 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556e3da2cc38 <col:45> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556e3da2cd28 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556e3da2ccc0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556e3da2cca8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556e3da2cc88 <col:64> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x556e3da2cd10 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556e3da2ccf8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556e3da2ccd8 <col:83> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556e3da2ce08 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556e3da2cda0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556e3da2cd88 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556e3da2cd68 <col:102> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556e3da2cdf0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556e3da2cdd8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556e3da2cdb8 <col:121> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556e3da2cfe8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556e3da2ce48 <col:138> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x556e3da2cfc8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556e3da2cf98 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556e3da2cf08 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556e3da2cec0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556e3da2cea8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556e3da2ce68 <col:151> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556e3da2cef0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556e3da2ced8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556e3da2ce88 <col:169> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x556e3da2cf68 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556e3da2cf28 <col:186> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556e3da2cf80 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556e3da2cf48 <col:198> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |-BinaryOperator 0x556e3da2d5d8 <line:795:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556e3da2d0e8 <col:3> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x556e3da2d5a8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556e3da2d578 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556e3da2d560 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556e3da2d108 <col:15> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556e3da2d590 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da2d128 <col:31> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x556e3da2d540 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556e3da2d510 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556e3da2d338 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556e3da2d258 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556e3da2d180 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556e3da2d168 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556e3da2d148 <col:45> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556e3da2d238 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556e3da2d1d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556e3da2d1b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556e3da2d198 <col:64> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x556e3da2d220 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556e3da2d208 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556e3da2d1e8 <col:83> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556e3da2d318 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556e3da2d2b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556e3da2d298 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556e3da2d278 <col:102> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556e3da2d300 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556e3da2d2e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556e3da2d2c8 <col:121> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556e3da2d4f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556e3da2d358 <col:138> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x556e3da2d4d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556e3da2d4a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556e3da2d418 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556e3da2d3d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556e3da2d3b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556e3da2d378 <col:151> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556e3da2d400 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556e3da2d3e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556e3da2d398 <col:169> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x556e3da2d478 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556e3da2d438 <col:186> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556e3da2d490 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556e3da2d458 <col:198> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |-BinaryOperator 0x556e3da2db98 <line:796:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2d5f8 <col:3> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2db80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2db38 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556e3da2daf0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da2dad8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da2d618 <col:20> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2db20 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da2db08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da2d638 <col:36> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556e3da2dab8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556e3da2da88 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556e3da2d848 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556e3da2d768 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556e3da2d690 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556e3da2d678 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556e3da2d658 <col:55> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556e3da2d748 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556e3da2d6e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556e3da2d6c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556e3da2d6a8 <col:74> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556e3da2d730 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556e3da2d718 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556e3da2d6f8 <col:93> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556e3da2d828 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556e3da2d7c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556e3da2d7a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556e3da2d788 <col:112> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556e3da2d810 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556e3da2d7f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556e3da2d7d8 <col:131> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556e3da2da70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556e3da2da58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556e3da2d868 <col:148> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556e3da2da38 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556e3da2da08 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556e3da2d928 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556e3da2d8e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556e3da2d8c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556e3da2d888 <col:166> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556e3da2d910 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556e3da2d8f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556e3da2d8a8 <col:184> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556e3da2d9c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556e3da2d978 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556e3da2d948 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556e3da2d9f0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556e3da2d9d8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556e3da2d9a0 <col:212> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556e3da2e160 <line:797:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2dbb8 <col:3> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2e148 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2e118 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556e3da2e0d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da2e0b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da2dbd8 <col:20> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2e100 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da2e0e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da2dbf8 <col:36> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556e3da2e098 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556e3da2e068 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556e3da2de08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556e3da2dd28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556e3da2dc50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556e3da2dc38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556e3da2dc18 <col:55> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556e3da2dd08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556e3da2dca0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556e3da2dc88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556e3da2dc68 <col:74> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556e3da2dcf0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556e3da2dcd8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556e3da2dcb8 <col:93> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556e3da2dde8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556e3da2dd80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556e3da2dd68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556e3da2dd48 <col:112> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556e3da2ddd0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556e3da2ddb8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556e3da2dd98 <col:131> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556e3da2e050 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556e3da2e038 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556e3da2de28 <col:148> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556e3da2e018 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556e3da2dfe8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556e3da2dee8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556e3da2dea0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556e3da2de88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556e3da2de48 <col:166> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556e3da2ded0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556e3da2deb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556e3da2de68 <col:184> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556e3da2dfb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556e3da2df38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556e3da2df08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556e3da2dfd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556e3da2df90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556e3da2df60 <col:219> 'int' 0
|   |-BinaryOperator 0x556e3da2e708 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2e180 <col:3> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2e6f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2e6c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556e3da2e678 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da2e660 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da2e1a0 <col:20> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2e6a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da2e690 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da2e1c0 <col:36> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x556e3da2e640 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556e3da2e610 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556e3da2e3d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556e3da2e2f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556e3da2e218 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556e3da2e200 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556e3da2e1e0 <col:55> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556e3da2e2d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556e3da2e268 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556e3da2e250 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556e3da2e230 <col:74> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556e3da2e2b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556e3da2e2a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556e3da2e280 <col:93> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556e3da2e3b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556e3da2e348 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556e3da2e330 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556e3da2e310 <col:112> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556e3da2e398 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556e3da2e380 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556e3da2e360 <col:131> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556e3da2e5f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556e3da2e5e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556e3da2e3f0 <col:148> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x556e3da2e5c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556e3da2e590 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556e3da2e4b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556e3da2e468 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556e3da2e450 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556e3da2e410 <col:166> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556e3da2e498 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556e3da2e480 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556e3da2e430 <col:184> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556e3da2e548 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556e3da2e500 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556e3da2e4d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556e3da2e578 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556e3da2e560 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556e3da2e528 <col:212> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556e3da2ed08 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2e728 <col:3> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2ecf0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2ecc0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556e3da2ec78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da2ec60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da2e748 <col:20> '_Bool' lvalue Var 0x556e3da266f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2eca8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556e3da2ec90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556e3da2e768 <col:36> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x556e3da2ec40 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556e3da2ec10 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556e3da2e978 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556e3da2e898 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556e3da2e7c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556e3da2e7a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556e3da2e788 <col:55> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556e3da2e878 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556e3da2e810 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556e3da2e7f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556e3da2e7d8 <col:74> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556e3da2e860 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556e3da2e848 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556e3da2e828 <col:93> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556e3da2e958 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556e3da2e8f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556e3da2e8d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556e3da2e8b8 <col:112> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556e3da2e940 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556e3da2e928 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556e3da2e908 <col:131> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556e3da2ebf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556e3da2ebe0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556e3da2e998 <col:148> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x556e3da2ebc0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556e3da2eb90 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556e3da2ea58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556e3da2ea10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556e3da2e9f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556e3da2e9b8 <col:166> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556e3da2ea40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556e3da2ea28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556e3da2e9d8 <col:184> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556e3da2eb28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556e3da2eaa8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556e3da2ea78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556e3da2eb40 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556e3da2eb00 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556e3da2ead0 <col:219> 'int' 0
|   |-BinaryOperator 0x556e3da2ed80 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556e3da2ed28 <col:3> 'int' lvalue Var 0x556e3da259e0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x556e3da2ed68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556e3da2ed48 <col:25> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   |-BinaryOperator 0x556e3da2eeb0 <line:801:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556e3da2eda0 <col:3> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   | `-ConditionalOperator 0x556e3da2ee80 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556e3da2ee38 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556e3da2ee20 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556e3da2edc0 <col:7> '_Bool' lvalue Var 0x556e3da25ed8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556e3da2ee50 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da2ede0 <col:25> 'int' lvalue Var 0x556e3da25f58 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556e3da2ee68 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556e3da2ee00 <col:37> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   |-BinaryOperator 0x556e3da2ef48 <line:802:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2eed0 <col:3> '_Bool' lvalue Var 0x556e3da25ed8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556e3da2ef20 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556e3da2eef0 <col:28> 'int' 0
|   |-CallExpr 0x556e3da2efa0 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2ef88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2ef68 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da2eff8 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da2efe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2efc0 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da2f2e0 <line:805:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556e3da2f018 <col:3> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   | `-ConditionalOperator 0x556e3da2f2b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556e3da2f0d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556e3da2f090 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556e3da2f078 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556e3da2f038 <col:7> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556e3da2f0c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556e3da2f0a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556e3da2f058 <col:25> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556e3da2f298 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da2f0f8 <col:42> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x556e3da2f278 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556e3da2f248 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556e3da2f1b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556e3da2f170 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556e3da2f158 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556e3da2f118 <col:55> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556e3da2f1a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556e3da2f188 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556e3da2f138 <col:73> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556e3da2f218 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556e3da2f1d8 <col:90> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556e3da2f230 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2f1f8 <col:102> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
|   |-BinaryOperator 0x556e3da2f4e8 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2f300 <col:3> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2f4d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2f4a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556e3da2f3c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556e3da2f378 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556e3da2f360 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556e3da2f320 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556e3da2f3a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556e3da2f390 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556e3da2f340 <col:38> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2f458 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da2f410 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da2f3e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2f488 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2f470 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2f438 <col:66> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556e3da2f7d0 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2f508 <col:3> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2f7b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2f788 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556e3da2f6a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556e3da2f5c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556e3da2f580 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556e3da2f568 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556e3da2f528 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556e3da2f5b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556e3da2f598 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556e3da2f548 <col:38> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556e3da2f688 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556e3da2f640 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556e3da2f628 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556e3da2f5e8 <col:56> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556e3da2f670 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556e3da2f658 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556e3da2f608 <col:74> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2f740 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da2f6f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da2f6c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2f770 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2f758 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2f720 <col:102> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556e3da2f9d8 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2f7f0 <col:3> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2f9c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2f990 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556e3da2f8b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556e3da2f868 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556e3da2f850 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556e3da2f810 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556e3da2f898 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556e3da2f880 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556e3da2f830 <col:38> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2f948 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da2f900 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da2f8d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2f978 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2f960 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2f928 <col:66> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556e3da2fce8 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556e3da2f9f8 <col:3> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556e3da2fcd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556e3da2fca0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556e3da2fbc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556e3da2fab8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556e3da2fa70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556e3da2fa58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556e3da2fa18 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556e3da2faa0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556e3da2fa88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556e3da2fa38 <col:38> '_Bool' lvalue Var 0x556e3da26138 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556e3da2fba0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556e3da2fb30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556e3da2fb18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556e3da2fad8 <col:56> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556e3da2fb60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556e3da2fb48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556e3da2faf8 <col:74> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556e3da2fc58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556e3da2fc10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556e3da2fbe0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556e3da2fc88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556e3da2fc70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556e3da2fc38 <col:102> '_Bool' lvalue Var 0x556e3da26318 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x556e3da2fd40 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2fd28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2fd08 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556e3da2fd98 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556e3da2fd80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2fd60 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556e3da2fe50 <line:812:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556e3da2fdb8 <col:3> 'int' lvalue Var 0x556e3da25320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556e3da2fe30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556e3da2fe18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556e3da2fdd8 <col:22> 'int' lvalue Var 0x556e3da25320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556e3da2fdf8 <col:41> 'int' 1
|   |-CallExpr 0x556e3da2fea8 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556e3da2fe90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556e3da2fe70 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556e3da2ff20 <line:814:3, col:36>
|     `-CallExpr 0x556e3da2ff00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556e3da2fee8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556e3da2fec8 <col:10> 'void *(void)' Function 0x556e3d9cbab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556e3da30068 prev 0x556e3da25068 <line:816:1, line:818:1> line:816:6 fence 'void ()'
| `-CompoundStmt 0x556e3da30108 <line:817:1, line:818:1>
|-FunctionDecl 0x556e3da30138 prev 0x556e3da25128 <line:819:1, line:821:1> line:819:6 isync 'void ()'
| `-CompoundStmt 0x556e3da301d8 <line:820:1, line:821:1>
|-FunctionDecl 0x556e3da30208 prev 0x556e3da251e8 <line:822:1, line:824:1> line:822:6 lwfence 'void ()'
| `-CompoundStmt 0x556e3da302a8 <line:823:1, line:824:1>
`-FunctionDecl 0x556e3da30318 <line:825:1, line:849:1> line:825:5 main 'int ()'
  `-CompoundStmt 0x556e3da32130 <line:826:1, line:849:1>
    |-DeclStmt 0x556e3da30430 <line:827:3, col:16>
    | `-VarDecl 0x556e3da303c8 <col:3, col:13> col:13 used t34 'pthread_t':'unsigned long'
    |-CallExpr 0x556e3da30638 <line:828:3, col:52> 'int'
    | |-ImplicitCastExpr 0x556e3da30620 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556e3da30448 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556e3da0c5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556e3da30488 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556e3da30468 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556e3da303c8 't34' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556e3da30678 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556e3da30500 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x556e3da304d8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556e3da304a0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x556e3da30690 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556e3da30520 <col:37> 'void *(void *)' Function 0x556e3da26808 'P0' 'void *(void *)'
    | `-ParenExpr 0x556e3da305a0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x556e3da30578 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556e3da30540 <col:50> 'int' 0
    |-DeclStmt 0x556e3da30720 <line:829:3, col:16>
    | `-VarDecl 0x556e3da306b8 <col:3, col:13> col:13 used t35 'pthread_t':'unsigned long'
    |-CallExpr 0x556e3da308c8 <line:830:3, col:52> 'int'
    | |-ImplicitCastExpr 0x556e3da308b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556e3da30738 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556e3da0c5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556e3da30778 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556e3da30758 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556e3da306b8 't35' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556e3da30908 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556e3da307f0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x556e3da307c8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556e3da30790 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x556e3da30920 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556e3da30810 <col:37> 'void *(void *)' Function 0x556e3da2ad60 'P1' 'void *(void *)'
    | `-ParenExpr 0x556e3da30890 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x556e3da30868 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556e3da30830 <col:50> 'int' 0
    |-DeclStmt 0x556e3da309b0 <line:831:3, col:16>
    | `-VarDecl 0x556e3da30948 <col:3, col:13> col:13 used t36 'pthread_t':'unsigned long'
    |-CallExpr 0x556e3da30b58 <line:832:3, col:52> 'int'
    | |-ImplicitCastExpr 0x556e3da30b40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556e3da309c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556e3da0c5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556e3da30a08 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556e3da309e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556e3da30948 't36' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556e3da30bb0 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556e3da30a80 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x556e3da30a58 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556e3da30a20 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x556e3da30bc8 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556e3da30aa0 <col:37> 'void *(void *)' Function 0x556e3da2c238 'P2' 'void *(void *)'
    | `-ParenExpr 0x556e3da30b20 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x556e3da30af8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556e3da30ac0 <col:50> 'int' 0
    |-CallExpr 0x556e3da30c18 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556e3da30c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556e3da30be0 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556e3da30ce8 <line:834:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x556e3da30c38 <col:3> '_Bool' lvalue Var 0x556e3da25a78 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x556e3da30cd0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x556e3da30cb0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x556e3da30c98 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x556e3da30c58 <col:21> 'int' lvalue Var 0x556e3da25320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x556e3da30c78 <col:41> 'int' 3
    |-CallExpr 0x556e3da30d40 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556e3da30d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556e3da30d08 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556e3da30db8 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556e3da30da0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556e3da30d60 <col:3> 'void (int)' Function 0x556e3d9cb940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x556e3da30df8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556e3da30de0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556e3da30d80 <col:21> '_Bool' lvalue Var 0x556e3da25a78 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x556e3da30e48 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556e3da30e30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556e3da30e10 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556e3da31130 <line:838:3, col:103> 'int' '='
    | |-DeclRefExpr 0x556e3da30e68 <col:3> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
    | `-ConditionalOperator 0x556e3da31100 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x556e3da30f28 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x556e3da30ee0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x556e3da30ec8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x556e3da30e88 <col:7> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x556e3da30f10 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x556e3da30ef8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x556e3da30ea8 <col:25> '_Bool' lvalue Var 0x556e3da25fd0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x556e3da310e8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556e3da30f48 <col:42> 'int' lvalue Var 0x556e3da26490 'z$w_buff0' 'int'
    |   `-ParenExpr 0x556e3da310c8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x556e3da31098 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x556e3da31008 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x556e3da30fc0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x556e3da30fa8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x556e3da30f68 <col:55> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x556e3da30ff0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x556e3da30fd8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x556e3da30f88 <col:73> '_Bool' lvalue Var 0x556e3da261b0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x556e3da31068 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x556e3da31028 <col:90> 'int' lvalue Var 0x556e3da26588 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x556e3da31080 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x556e3da31048 <col:102> 'int' lvalue Var 0x556e3da25e40 'z' 'int'
    |-BinaryOperator 0x556e3da31338 <line:839:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556e3da31150 <col:3> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x556e3da31320 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556e3da312f0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556e3da31210 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556e3da311c8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556e3da311b0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556e3da31170 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556e3da311f8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556e3da311e0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556e3da31190 <col:38> '_Bool' lvalue Var 0x556e3da25fd0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556e3da312a8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556e3da31260 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556e3da31230 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556e3da312d8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556e3da312c0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556e3da31288 <col:66> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x556e3da31620 <line:840:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556e3da31358 <col:3> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x556e3da31608 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556e3da315d8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556e3da314f8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556e3da31418 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556e3da313d0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556e3da313b8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556e3da31378 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556e3da31400 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556e3da313e8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556e3da31398 <col:38> '_Bool' lvalue Var 0x556e3da25fd0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556e3da314d8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556e3da31490 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556e3da31478 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556e3da31438 <col:56> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556e3da314c0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556e3da314a8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556e3da31458 <col:74> '_Bool' lvalue Var 0x556e3da261b0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556e3da31590 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556e3da31548 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556e3da31518 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556e3da315c0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556e3da315a8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556e3da31570 <col:102> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x556e3da31828 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556e3da31640 <col:3> '_Bool' lvalue Var 0x556e3da25fd0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556e3da31810 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556e3da317e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556e3da31700 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556e3da316b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556e3da316a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556e3da31660 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556e3da316e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556e3da316d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556e3da31680 <col:38> '_Bool' lvalue Var 0x556e3da25fd0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556e3da31798 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556e3da31750 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556e3da31720 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556e3da317c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556e3da317b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556e3da31778 <col:66> '_Bool' lvalue Var 0x556e3da25fd0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x556e3da31b10 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556e3da31848 <col:3> '_Bool' lvalue Var 0x556e3da261b0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556e3da31af8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556e3da31ac8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556e3da319e8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556e3da31908 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556e3da318c0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556e3da318a8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556e3da31868 <col:20> '_Bool' lvalue Var 0x556e3da26508 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556e3da318f0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556e3da318d8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556e3da31888 <col:38> '_Bool' lvalue Var 0x556e3da25fd0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556e3da319c8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556e3da31980 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556e3da31968 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556e3da31928 <col:56> '_Bool' lvalue Var 0x556e3da26600 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556e3da319b0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556e3da31998 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556e3da31948 <col:74> '_Bool' lvalue Var 0x556e3da261b0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556e3da31a80 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556e3da31a38 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556e3da31a08 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556e3da31ab0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556e3da31a98 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556e3da31a60 <col:102> '_Bool' lvalue Var 0x556e3da261b0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x556e3da31b68 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556e3da31b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556e3da31b30 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556e3da31bd8 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556e3da31bc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556e3da31b88 <col:3> 'void ()' Function 0x556e3d9cbfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556e3da31fd8 <line:845:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x556e3da31bf8 <col:3> '_Bool' lvalue Var 0x556e3da25b00 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x556e3da31fc0 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x556e3da31fa8 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x556e3da31f88 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x556e3da31f68 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x556e3da31ed0 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x556e3da31e38 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x556e3da31da0 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x556e3da31d08 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x556e3da31c70 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x556e3da31c58 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x556e3da31c18 <col:23> 'int' lvalue Var 0x556e3da25440 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x556e3da31c38 <col:46> 'int' 1
    |         | | | | `-BinaryOperator 0x556e3da31ce8 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x556e3da31cd0 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x556e3da31c90 <col:51> 'int' lvalue Var 0x556e3da25560 '__unbuffered_p0_EBX' 'int'
    |         | | | |   `-IntegerLiteral 0x556e3da31cb0 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x556e3da31d80 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x556e3da31d68 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x556e3da31d28 <col:79> 'int' lvalue Var 0x556e3da25680 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x556e3da31d48 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x556e3da31e18 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x556e3da31e00 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x556e3da31dc0 <col:107> 'int' lvalue Var 0x556e3da257a0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x556e3da31de0 <col:130> 'int' 0
    |         | `-BinaryOperator 0x556e3da31eb0 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x556e3da31e98 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x556e3da31e58 <col:135> 'int' lvalue Var 0x556e3da258c0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x556e3da31e78 <col:158> 'int' 1
    |         `-BinaryOperator 0x556e3da31f48 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x556e3da31f30 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x556e3da31ef0 <col:163> 'int' lvalue Var 0x556e3da259e0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x556e3da31f10 <col:186> 'int' 0
    |-CallExpr 0x556e3da32030 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556e3da32018 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556e3da31ff8 <col:3> 'void ()' Function 0x556e3d9cc060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556e3da320a8 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556e3da32090 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556e3da32050 <col:3> 'void (int)' Function 0x556e3d9cbd28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x556e3da320e8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556e3da320d0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556e3da32070 <col:21> '_Bool' lvalue Var 0x556e3da25b00 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x556e3da32120 <line:848:3, col:10>
      `-IntegerLiteral 0x556e3da32100 <col:10> 'int' 0
