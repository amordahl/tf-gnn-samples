TranslationUnitDecl 0x56096c6c4e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56096c6c56d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56096c6c53b0 '__int128'
|-TypedefDecl 0x56096c6c5748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56096c6c53d0 'unsigned __int128'
|-TypedefDecl 0x56096c6c5a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56096c6c5820 'struct __NSConstantString_tag'
|   `-Record 0x56096c6c57a0 '__NSConstantString_tag'
|-TypedefDecl 0x56096c6c5af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56096c6c5ab0 'char *'
|   `-BuiltinType 0x56096c6c4eb0 'char'
|-TypedefDecl 0x56096c704650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56096c6c5d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56096c6c5bd0 'struct __va_list_tag'
|     `-Record 0x56096c6c5b50 '__va_list_tag'
|-FunctionDecl 0x56096c704790 <./test/mix013_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56096c7046c0 <col:31> col:34 'int'
|-FunctionDecl 0x56096c704958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56096c704a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56096c704bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56096c704b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56096c704df8 <col:40, col:99>
|   |-IfStmt 0x56096c704dc8 <col:42, col:88>
|   | |-UnaryOperator 0x56096c704ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56096c704c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56096c704c70 <col:47> 'int' lvalue ParmVar 0x56096c704b38 'expression' 'int'
|   | `-CompoundStmt 0x56096c704db0 <col:59, col:88>
|   |   `-LabelStmt 0x56096c704d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56096c704d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56096c704d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56096c704cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x56096c704a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56096c704de0 <col:89>
|   `-ReturnStmt 0x56096c704de8 <col:91>
|-FunctionDecl 0x56096c704e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56096c704f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56096c705280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56096c704fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56096c705038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56096c7050b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56096c705138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56096c705340 <line:10:22>
|-FunctionDecl 0x56096c72b390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56096c7053b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56096c705430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56096c7054b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56096c705530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56096c72b450 <line:13:22>
|-FunctionDecl 0x56096c72b700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56096c72b4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56096c72b540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56096c72b5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56096c72b7b8 <line:15:22>
|-TypedefDecl 0x56096c72b828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56096c6c4f70 'unsigned char'
|-TypedefDecl 0x56096c72b898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56096c6c4f90 'unsigned short'
|-TypedefDecl 0x56096c72b908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56096c6c4fb0 'unsigned int'
|-TypedefDecl 0x56096c72b978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72b9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56096c6c4ed0 'signed char'
|-TypedefDecl 0x56096c72ba58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56096c6c4f70 'unsigned char'
|-TypedefDecl 0x56096c72bac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56096c6c4ef0 'short'
|-TypedefDecl 0x56096c72bb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56096c6c4f90 'unsigned short'
|-TypedefDecl 0x56096c72bba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56096c6c4f10 'int'
|-TypedefDecl 0x56096c72bc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56096c6c4fb0 'unsigned int'
|-TypedefDecl 0x56096c72bc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72bcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72bd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72bdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72be48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72beb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56096c6c4fb0 'unsigned int'
|-TypedefDecl 0x56096c72bf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56096c6c4fb0 'unsigned int'
|-TypedefDecl 0x56096c72bf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72c008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72c078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56096c6c4fb0 'unsigned int'
|-TypedefDecl 0x56096c72c0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72c158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72c1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72c238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56096c6c4f10 'int'
|-RecordDecl 0x56096c72c290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56096c72c408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56096c72c4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56096c72c460 'struct __fsid_t' sugar
|   `-RecordType 0x56096c72c310 '__fsid_t'
|     `-Record 0x56096c72c290 ''
|-TypedefDecl 0x56096c72c548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72c5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72c628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72c698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56096c6c4fb0 'unsigned int'
|-TypedefDecl 0x56096c72c708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72c778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56096c6c4fb0 'unsigned int'
|-TypedefDecl 0x56096c72c7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72c858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56096c6c4f10 'int'
|-TypedefDecl 0x56096c72c8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56096c6c4f10 'int'
|-TypedefDecl 0x56096c72c938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56096c6c4f10 'int'
|-TypedefDecl 0x56096c72c9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56096c6c5630 'void *'
|   `-BuiltinType 0x56096c6c4e70 'void'
|-TypedefDecl 0x56096c72ca18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72ca88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72caf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72cb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72cbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72cc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72ccb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72cd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72cd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72ce08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72ce78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72cf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56096c72ced0 '__off64_t' sugar
|   |-Typedef 0x56096c72c1c8 '__off64_t'
|   `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72d000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56096c72cfc0 '__quad_t *'
|   `-TypedefType 0x56096c72cf60 '__quad_t' sugar
|     |-Typedef 0x56096c72bd68 '__quad_t'
|     `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72d070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56096c6c5ab0 'char *'
|   `-BuiltinType 0x56096c6c4eb0 'char'
|-TypedefDecl 0x56096c72d0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c72d150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56096c6c4fb0 'unsigned int'
|-FunctionDecl 0x56096c72d298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56096c72d1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56096c72e5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56096c72e5d8 <line:72:3, col:34>
|     `-CallExpr 0x56096c72e598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56096c72e580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56096c72e510 <col:10> '<builtin fn type>' Function 0x56096c72e380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56096c72e5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56096c72e530 <col:29> 'unsigned int' lvalue ParmVar 0x56096c72d1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56096c72e380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56096c72e420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56096c72e490 <col:10> Implicit
| `-ConstAttr 0x56096c72e4e8 <col:10> Implicit
|-FunctionDecl 0x56096c72e740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56096c72e638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56096c72ea58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56096c72ea48 <line:77:3, col:34>
|     `-CallExpr 0x56096c72ea08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56096c72e9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56096c72e978 <col:10> '<builtin fn type>' Function 0x56096c72e7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56096c72ea30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56096c72e998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56096c72e638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56096c72e7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56096c72e888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56096c72e8f8 <col:10> Implicit
| `-ConstAttr 0x56096c72e950 <col:10> Implicit
|-TypedefDecl 0x56096c72ea88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-TypedefDecl 0x56096c72eb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56096c72eae0 '__time_t' sugar
|   |-Typedef 0x56096c72c708 '__time_t'
|   `-BuiltinType 0x56096c6c4f30 'long'
|-RecordDecl 0x56096c72eb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56096c72ec28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56096c72ecb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56096c72ed48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56096c72ed10 '__pid_t' sugar
|   |-Typedef 0x56096c72c238 '__pid_t'
|   `-BuiltinType 0x56096c6c4f10 'int'
|-RecordDecl 0x56096c72eda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56096c72ee60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56096c72eeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56096c72ef70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56096c72efd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-RecordDecl 0x56096c72f030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56096c72f2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56096c7303a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56096c72f310 'struct cpu_set_t' sugar
|   `-RecordType 0x56096c72f0b0 'cpu_set_t'
|     `-Record 0x56096c72f030 ''
|-FunctionDecl 0x56096c730678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56096c730448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56096c730550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56096c730728 <line:107:19>
|-FunctionDecl 0x56096c730900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56096c730790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56096c7309a8 <col:69>
|-FunctionDecl 0x56096c730b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56096c730a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56096c730bc8 <col:64>
|-FunctionDecl 0x56096c730e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56096c730c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56096c730d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56096c730f38 <line:113:22>
|-FunctionDecl 0x56096c7311b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56096c730fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56096c731098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56096c731268 <col:88>
|-FunctionDecl 0x56096c731588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56096c7312d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56096c7313b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56096c731440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56096c731640 <col:62>
|-FunctionDecl 0x56096c7317b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56096c7316a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56096c731860 <col:63>
|-FunctionDecl 0x56096c731988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56096c731a28 <col:47>
|-FunctionDecl 0x56096c731b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56096c731a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56096c731bd8 <col:69>
|-FunctionDecl 0x56096c731ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56096c731c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56096c731d88 <col:69>
|-FunctionDecl 0x56096c732048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56096c731df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56096c731f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56096c7320f8 <col:88>
|-TypedefDecl 0x56096c732188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56096c732150 '__clock_t' sugar
|   |-Typedef 0x56096c72c548 '__clock_t'
|   `-BuiltinType 0x56096c6c4f30 'long'
|-TypedefDecl 0x56096c732218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56096c7321e0 '__clockid_t' sugar
|   |-Typedef 0x56096c72c938 '__clockid_t'
|   `-BuiltinType 0x56096c6c4f10 'int'
|-TypedefDecl 0x56096c7322a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56096c732270 '__timer_t' sugar
|   |-Typedef 0x56096c72c9a8 '__timer_t'
|   `-PointerType 0x56096c6c5630 'void *'
|     `-BuiltinType 0x56096c6c4e70 'void'
|-RecordDecl 0x56096c732300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56096c7323d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56096c732440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56096c7324a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56096c732510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56096c732578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56096c7325e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56096c732648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56096c7326b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56096c732718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56096c732780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56096c7327e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56096c732838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56096c732908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56096c732978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56096c732a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56096c732bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56096c732c90 <col:45>
|-FunctionDecl 0x56096c732e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56096c732d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56096c732f18 <col:54>
|-FunctionDecl 0x56096c733118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56096c732f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56096c732ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56096c7331c8 <line:157:22>
| `-ConstAttr 0x56096c733220 <col:63>
|-FunctionDecl 0x56096c734050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56096c733318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56096c7340f8 <col:56>
|-FunctionDecl 0x56096c7344a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56096c734168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56096c7341e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56096c734260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56096c734358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56096c734560 <col:54>
|-RecordDecl 0x56096c7345b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56096c734668 parent 0x56096c6c4e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56096c7348c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56096c734968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56096c7349d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56096c734a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56096c734b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56096c734c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56096c734bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x56096c734b80 'struct __locale_struct' sugar
|     `-RecordType 0x56096c734640 'struct __locale_struct'
|       `-Record 0x56096c7345b8 '__locale_struct'
|-TypedefDecl 0x56096c734cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56096c734cc0 '__locale_t' sugar
|   |-Typedef 0x56096c734c48 '__locale_t'
|   `-PointerType 0x56096c734bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x56096c734b80 'struct __locale_struct' sugar
|       `-RecordType 0x56096c734640 'struct __locale_struct'
|         `-Record 0x56096c7345b8 '__locale_struct'
|-FunctionDecl 0x56096c736110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56096c734d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56096c734de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56096c734e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56096c734ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56096c734f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56096c7361d8 <col:40>
|-FunctionDecl 0x56096c7363c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56096c7362a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56096c736470 <col:66>
|-FunctionDecl 0x56096c736580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56096c7364d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56096c736628 <col:69>
|-FunctionDecl 0x56096c736858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56096c736690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56096c736720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56096c736908 <col:52>
|-FunctionDecl 0x56096c736ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56096c736970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56096c736a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56096c736b60 <col:55>
|-FunctionDecl 0x56096c736cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56096c736be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56096c736da0 <col:62>
|-FunctionDecl 0x56096c736f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56096c736e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56096c736fc0 <col:60>
|-FunctionDecl 0x56096c7372b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56096c737118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56096c737198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56096c737368 <col:44>
|-FunctionDecl 0x56096c737578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56096c7373d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56096c737450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56096c737628 <col:49>
|-VarDecl 0x56096c737728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56096c7377a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56096c737828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56096c7378f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56096c737a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56096c737ac0 <col:42>
|-VarDecl 0x56096c737b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56096c737bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56096c737d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56096c737c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56096c737de0 <col:57>
|-FunctionDecl 0x56096c737ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56096c737e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56096c737f98 <col:56>
|-FunctionDecl 0x56096c7380d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56096c738018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56096c738178 <col:59>
|-FunctionDecl 0x56096c738280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56096c7381e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56096c738328 <col:48>
| `-ConstAttr 0x56096c738380 <col:89>
|-FunctionDecl 0x56096c7385e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56096c738438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56096c7384c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56096c738848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56096c7386d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56096c738768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56096c7388f8 <col:88>
|-FunctionDecl 0x56096c738a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56096c738960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56096c7389f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56096c738b40 <col:88>
|-FunctionDecl 0x56096c738d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56096c738ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56096c738c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56096c738e08 <line:208:22>
|-FunctionDecl 0x56096c739178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56096c738e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56096c738ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56096c738f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56096c739010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56096c739478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56096c739278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56096c739350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56096c739528 <col:85>
|-FunctionDecl 0x56096c739918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56096c739590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56096c7396c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56096c7397d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56096c7399d0 <col:52>
|-FunctionDecl 0x56096c739b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56096c739a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56096c739bf0 <col:61>
|-FunctionDecl 0x56096c73a0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56096c739c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56096c739cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56096c739e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56096c739ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56096c73a1b0 <col:62>
|-FunctionDecl 0x56096c73a3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56096c73a218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56096c73a2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56096c73a478 <line:221:22>
|-FunctionDecl 0x56096c73a578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56096c73a4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56096c73a620 <col:65>
|-TypedefDecl 0x56096c73a690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56096c6c4fd0 'unsigned long'
|-RecordDecl 0x56096c73a6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56096c73a830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56096c73a898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56096c73a948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56096c73a8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56096c73a770 'union pthread_attr_t'
|     `-Record 0x56096c73a6e8 'pthread_attr_t'
|-RecordDecl 0x56096c73a9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56096c73ab18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56096c73ab90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56096c73ac40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56096c73abe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56096c73aa20 'struct __pthread_internal_list'
|     `-Record 0x56096c73a9a0 '__pthread_internal_list'
|-RecordDecl 0x56096c73acb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56096c73ad58 parent 0x56096c6c4e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56096c73ae30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56096c73ae98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56096c73af00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56096c73af68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56096c73afd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56096c73b038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56096c73f110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56096c73f1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56096c73f2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56096c73f318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56096c73f4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56096c73f440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56096c73ad30 'pthread_mutex_t'
|     `-Record 0x56096c73acb0 ''
|-RecordDecl 0x56096c73f510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56096c73f650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56096c73f6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56096c73f770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56096c73f710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56096c73f590 'pthread_mutexattr_t'
|     `-Record 0x56096c73f510 ''
|-RecordDecl 0x56096c73f7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56096c73f888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56096c73f950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56096c73f9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56096c73fa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56096c73fa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56096c73faf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56096c73fb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56096c73fbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56096c73fc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56096c73fce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/mix013_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/mix013_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56096c73fdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56096c73fe38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56096c73ff70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56096c73ff10 'union pthread_cond_t' sugar
|   `-RecordType 0x56096c73f860 'pthread_cond_t'
|     `-Record 0x56096c73f7e0 ''
|-RecordDecl 0x56096c73ffe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56096c741130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56096c741198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56096c741250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56096c7411f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56096c740060 'pthread_condattr_t'
|     `-Record 0x56096c73ffe0 ''
|-TypedefDecl 0x56096c7412d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56096c6c4fb0 'unsigned int'
|-TypedefDecl 0x56096c741348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56096c6c4f10 'int'
|-RecordDecl 0x56096c7413a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56096c741448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56096c741510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56096c741578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56096c7415e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56096c741648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56096c7416b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56096c741718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56096c741780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56096c7417e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56096c741850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56096c7418b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56096c741920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56096c7419d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/mix013_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/mix013_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56096c741a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56096c741ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56096c741c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56096c741bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56096c741420 'pthread_rwlock_t'
|     `-Record 0x56096c7413a0 ''
|-RecordDecl 0x56096c741ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56096c741de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56096c741e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56096c741f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56096c741ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56096c741d20 'pthread_rwlockattr_t'
|     `-Record 0x56096c741ca0 ''
|-TypedefDecl 0x56096c741f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56096c6c4f14 'volatile int' volatile
|   `-BuiltinType 0x56096c6c4f10 'int'
|-RecordDecl 0x56096c741fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56096c743140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56096c7431a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56096c743260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56096c743200 'union pthread_barrier_t' sugar
|   `-RecordType 0x56096c742060 'pthread_barrier_t'
|     `-Record 0x56096c741fe0 ''
|-RecordDecl 0x56096c7432d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56096c7433d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56096c743438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56096c7434f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56096c743490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56096c743350 'pthread_barrierattr_t'
|     `-Record 0x56096c7432d0 ''
|-TypedefDecl 0x56096c743608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56096c7435a0 'long [8]' 8 
|   `-BuiltinType 0x56096c6c4f30 'long'
|-EnumDecl 0x56096c743660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56096c743728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56096c743778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56096c7437c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56096c743898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56096c7438e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56096c743938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56096c743988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56096c743a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56096c7439f8 <col:26> 'int'
| |   `-DeclRefExpr 0x56096c7439d8 <col:26> 'int' EnumConstant 0x56096c743898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56096c743a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56096c743a80 <col:29> 'int'
| |   `-DeclRefExpr 0x56096c743a60 <col:29> 'int' EnumConstant 0x56096c7438e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56096c743b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56096c743b08 <col:30> 'int'
| |   `-DeclRefExpr 0x56096c743ae8 <col:30> 'int' EnumConstant 0x56096c743938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56096c743ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56096c743b90 <col:27> 'int'
|     `-DeclRefExpr 0x56096c743b70 <col:27> 'int' EnumConstant 0x56096c743a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56096c743bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56096c743cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56096c743d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56096c743d38 <col:30> 'int'
| |   `-DeclRefExpr 0x56096c743d18 <col:30> 'int' EnumConstant 0x56096c743cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56096c743da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56096c743e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56096c743e10 <col:29> 'int'
|     `-DeclRefExpr 0x56096c743df0 <col:29> 'int' EnumConstant 0x56096c743da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56096c743e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56096c743f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56096c743f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56096c743fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56096c744038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56096c744150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56096c7441a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56096c7441f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56096c744278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56096c744260 <col:31> 'int'
|     `-DeclRefExpr 0x56096c744240 <col:31> 'int' EnumConstant 0x56096c744150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56096c7442c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56096c744398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56096c7443e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56096c744438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56096c744508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56096c744558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56096c7445a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56096c744678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56096c7446c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56096c744718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56096c744958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56096c7449c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56096c744a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56096c744b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56096c744b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56096c744c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56096c744cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56096c744d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56096c744dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56096c744e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56096c745488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56096c744f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56096c745030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56096c745270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56096c7452f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56096c745548 <col:47>
| |-NonNullAttr 0x56096c7455a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56096c7455d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56096c745700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56096c745630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56096c745958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56096c7457b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56096c745838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56096c745b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56096c745a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56096c745bd0 <col:60>
|-FunctionDecl 0x56096c745d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56096c745dc0 <col:54>
| `-ConstAttr 0x56096c745e18 <col:95>
|-FunctionDecl 0x56096c745fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56096c745e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56096c745ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56096c746098 <line:394:19>
| `-ConstAttr 0x56096c7460f0 <col:60>
|-FunctionDecl 0x56096c747b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56096c7479d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56096c747bb0 <col:71>
| `-NonNullAttr 0x56096c747c08 <col:112, col:126> 1
|-FunctionDecl 0x56096c747d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56096c747c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56096c747db8 <line:397:22>
| `-NonNullAttr 0x56096c747e10 <col:63, col:77> 1
|-FunctionDecl 0x56096c748038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56096c747e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56096c747ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56096c7480e8 <line:400:22>
| `-NonNullAttr 0x56096c748140 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c748348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56096c748188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56096c748208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56096c7483f8 <line:403:22>
| `-NonNullAttr 0x56096c748450 <col:63, col:77> 1
|-FunctionDecl 0x56096c7486a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56096c748498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56096c748540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56096c748758 <line:406:22>
| `-NonNullAttr 0x56096c7487b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c7499e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56096c7487f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56096c748870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56096c749a98 <line:409:22>
| `-NonNullAttr 0x56096c749af0 <col:63, col:77> 1
|-FunctionDecl 0x56096c749d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56096c749b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56096c749bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56096c749dd8 <line:412:22>
| `-NonNullAttr 0x56096c749e30 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c74a068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56096c749e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56096c749f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56096c74a118 <col:37>
| `-NonNullAttr 0x56096c74a170 <col:78, col:95> 1 2
|-FunctionDecl 0x56096c74a358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c74a1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56096c74a238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56096c74a408 <line:418:22>
| `-NonNullAttr 0x56096c74a460 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c74a5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56096c74a4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56096c74a528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56096c74a698 <line:420:22>
| `-NonNullAttr 0x56096c74a6f0 <col:63, col:77> 1
|-FunctionDecl 0x56096c74a898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c74a738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56096c74a7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56096c74a948 <line:423:22>
| `-NonNullAttr 0x56096c74a9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c74ab48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56096c74aa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56096c74aa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56096c74abf8 <line:426:22>
| `-NonNullAttr 0x56096c74ac50 <col:63, col:77> 1
|-FunctionDecl 0x56096c74adf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c74ac98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56096c74ad18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56096c74aea8 <line:429:22>
| `-NonNullAttr 0x56096c74af00 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c74b088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56096c74af48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56096c74afc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56096c74b138 <line:431:22>
| `-NonNullAttr 0x56096c74b190 <col:63, col:77> 1
|-FunctionDecl 0x56096c74b3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56096c74b1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56096c74b258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56096c74b468 <line:434:22>
| |-NonNullAttr 0x56096c74b4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56096c74b4f8 <col:100> "" ""
|-FunctionDecl 0x56096c74b708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56096c74b548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56096c74b5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56096c74b7b8 <line:437:22>
| |-NonNullAttr 0x56096c74b810 <col:63, col:77> 1
| `-DeprecatedAttr 0x56096c74b848 <col:97> "" ""
|-FunctionDecl 0x56096c74ba48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56096c74b898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56096c74b910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56096c74baf8 <line:440:22>
| `-NonNullAttr 0x56096c74bb50 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c74bcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56096c74bb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56096c74bc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56096c74bd80 <line:443:22>
| `-NonNullAttr 0x56096c74bdd8 <col:63, col:77> 1
|-FunctionDecl 0x56096c74c0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56096c74be28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56096c74bea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56096c74bf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56096c74c180 <line:447:22>
| `-NonNullAttr 0x56096c74c1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56096c74c488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56096c74c230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56096c74c2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56096c74c328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56096c74c540 <col:43>
| `-NonNullAttr 0x56096c74c598 <col:84, col:98> 1
|-FunctionDecl 0x56096c74c858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56096c74c5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56096c74c668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56096c74c6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56096c74c910 <line:452:22>
| `-NonNullAttr 0x56096c74c968 <col:63, col:77> 3
|-FunctionDecl 0x56096c74cc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56096c74c9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56096c74ca60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56096c74caf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56096c74cd30 <line:456:22>
| `-NonNullAttr 0x56096c74cd88 <col:63, col:80> 2 3
|-FunctionDecl 0x56096c74cf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56096c74cdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56096c74ce58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56096c74d028 <line:458:22>
|-FunctionDecl 0x56096c74d3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56096c74d0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56096c74d290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56096c74d4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56096c74d650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56096c74d530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56096c74d5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56096c74d838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56096c74d718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56096c74d798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56096c74d9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56096c74d8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56096c74db30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56096c74dbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56096c74dc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56096c74dd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56096c74ddd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56096c74dfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/mix013_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56096c74e098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56096c74e150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56096c74e0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56096c74dc50 '__pthread_unwind_buf_t'
| |   `-Record 0x56096c74dbd0 ''
| `-AlignedAttr 0x56096c74e1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56096c74e220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56096c74e380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56096c74e3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56096c74e450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56096c74e4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56096c74e6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56096c74e5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56096c74e808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56096c74e778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56096c74ea00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56096c74e8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56096c74eaa8 <line:487:22>
|-RecordDecl 0x56096c74eb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56096c74ee18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56096c74ec78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56096c74ecf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56096c74eec8 <col:86>
| `-ReturnsTwiceAttr 0x56096c74ef20 <col:12> Implicit
|-FunctionDecl 0x56096c74f248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56096c74eff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56096c74f100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56096c74f2f8 <line:493:22>
| `-NonNullAttr 0x56096c74f350 <col:63, col:77> 1
|-FunctionDecl 0x56096c74f4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56096c74f398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56096c74f570 <line:495:22>
| `-NonNullAttr 0x56096c74f5c8 <col:63, col:77> 1
|-FunctionDecl 0x56096c74f6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56096c74f618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56096c74f778 <line:497:22>
| `-NonNullAttr 0x56096c74f7d0 <col:52, col:66> 1
|-FunctionDecl 0x56096c74f8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56096c74f818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56096c74f978 <line:499:22>
| `-NonNullAttr 0x56096c74f9d0 <col:52, col:66> 1
|-FunctionDecl 0x56096c750c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56096c750a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56096c750ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56096c750cd8 <col:36>
| `-NonNullAttr 0x56096c750d30 <col:66, col:83> 1 2
|-FunctionDecl 0x56096c750e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56096c750d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56096c750ed8 <line:504:22>
| `-NonNullAttr 0x56096c750f30 <col:52, col:66> 1
|-FunctionDecl 0x56096c7511c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c750fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56096c751060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56096c751278 <line:508:22>
| `-NonNullAttr 0x56096c7512d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c751598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56096c751318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56096c751398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56096c751418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56096c751650 <line:512:22>
| `-NonNullAttr 0x56096c7516a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56096c7517b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56096c7516f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56096c751858 <line:514:22>
| `-NonNullAttr 0x56096c7518b0 <col:63, col:77> 1
|-FunctionDecl 0x56096c751ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56096c751960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56096c751b80 <line:516:22>
| `-NonNullAttr 0x56096c751bd8 <col:63, col:77> 1
|-FunctionDecl 0x56096c751ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56096c751c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56096c751d88 <line:518:22>
| `-NonNullAttr 0x56096c751de0 <col:63, col:77> 1
|-FunctionDecl 0x56096c752008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c751e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56096c751ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56096c7520b8 <line:522:22>
| `-NonNullAttr 0x56096c752110 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c752318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56096c752158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56096c7521d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56096c7523c8 <line:525:22>
| `-NonNullAttr 0x56096c752420 <col:63, col:77> 1
|-FunctionDecl 0x56096c7525c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c752468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56096c7524e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56096c752678 <line:528:22>
| `-NonNullAttr 0x56096c7526d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c752858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56096c752718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56096c752798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56096c752908 <line:530:22>
| `-NonNullAttr 0x56096c752960 <col:63, col:77> 1
|-FunctionDecl 0x56096c752b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c7529a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56096c752a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56096c752bd0 <line:534:22>
| `-NonNullAttr 0x56096c752c28 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c752db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56096c752c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56096c752cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56096c752e68 <line:537:22>
| `-NonNullAttr 0x56096c752ec0 <col:63, col:77> 1
|-FunctionDecl 0x56096c753068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c752f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56096c752f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56096c753118 <line:541:22>
| `-NonNullAttr 0x56096c753170 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c7532f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56096c7531b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56096c753238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56096c7533a8 <line:544:22>
| `-NonNullAttr 0x56096c753400 <col:63, col:77> 1
|-FunctionDecl 0x56096c7535e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56096c753448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56096c7534c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56096c753698 <line:547:22>
| `-NonNullAttr 0x56096c7536f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c753878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56096c753738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56096c7537b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56096c753928 <line:550:22>
| `-NonNullAttr 0x56096c753980 <col:63, col:77> 1
|-FunctionDecl 0x56096c754cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56096c754aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56096c754bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56096c754da8 <col:29>
| `-NonNullAttr 0x56096c754e00 <col:70, col:84> 1
|-FunctionDecl 0x56096c754f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56096c754e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56096c755020 <line:555:22>
| `-NonNullAttr 0x56096c755078 <col:63, col:77> 1
|-FunctionDecl 0x56096c755180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56096c7550c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56096c755228 <line:557:22>
| `-NonNullAttr 0x56096c755280 <col:52, col:66> 1
|-FunctionDecl 0x56096c755380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56096c7552c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56096c755428 <line:559:19>
| `-NonNullAttr 0x56096c755480 <col:49, col:63> 1
|-FunctionDecl 0x56096c7556b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56096c7554c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56096c755558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56096c755768 <col:39>
| `-NonNullAttr 0x56096c7557c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56096c7558c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56096c755808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56096c755968 <line:564:22>
| `-NonNullAttr 0x56096c7559c0 <col:52, col:66> 1
|-FunctionDecl 0x56096c755b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56096c755a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56096c755bd0 <line:566:22>
| `-NonNullAttr 0x56096c755c28 <col:52, col:66> 1
|-FunctionDecl 0x56096c755de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56096c755c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56096c755d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56096c755e98 <col:39>
| `-NonNullAttr 0x56096c755ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56096c755ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56096c755f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56096c756098 <line:571:22>
| `-NonNullAttr 0x56096c7560f0 <col:52, col:66> 1
|-FunctionDecl 0x56096c7562d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56096c7561a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56096c756380 <line:573:22>
| `-NonNullAttr 0x56096c7563d8 <col:63, col:77> 1
|-FunctionDecl 0x56096c7564e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56096c756428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56096c756588 <line:575:22>
| `-NonNullAttr 0x56096c7565e0 <col:63, col:77> 1
|-FunctionDecl 0x56096c756808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c756628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56096c7566a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56096c7568b8 <line:579:22>
| `-NonNullAttr 0x56096c756910 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c756b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56096c756958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56096c7569d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56096c756be8 <line:582:22>
| `-NonNullAttr 0x56096c756c40 <col:63, col:77> 1
|-FunctionDecl 0x56096c756de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c756c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56096c756d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56096c756e98 <line:586:22>
| `-NonNullAttr 0x56096c756ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c757078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56096c756f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56096c756fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56096c757128 <col:36>
| `-NonNullAttr 0x56096c757180 <col:77, col:91> 1
|-FunctionDecl 0x56096c7574b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56096c757260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56096c757370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56096c757568 <line:591:22>
| `-NonNullAttr 0x56096c7575c0 <col:63, col:77> 1
|-FunctionDecl 0x56096c757738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56096c757608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56096c7577e0 <line:593:22>
| `-NonNullAttr 0x56096c757838 <col:63, col:77> 1
|-FunctionDecl 0x56096c757940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56096c757888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56096c7579e8 <line:595:22>
| `-NonNullAttr 0x56096c757a40 <col:52, col:66> 1
|-FunctionDecl 0x56096c757b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56096c757aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56096c757c00 <line:597:22>
| `-NonNullAttr 0x56096c757c58 <col:52, col:66> 1
|-FunctionDecl 0x56096c757e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56096c757ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56096c757d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56096c757f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56096c758268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56096c757fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56096c758030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56096c7580c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56096c758320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56096c758538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56096c758400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56096c7585e0 <line:606:22>
| `-NonNullAttr 0x56096c758638 <col:63, col:77> 1
|-FunctionDecl 0x56096c758740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56096c758688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56096c7587e8 <line:608:22>
| `-NonNullAttr 0x56096c758840 <col:63, col:77> 1
|-FunctionDecl 0x56096c758aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c758888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56096c758908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56096c758b50 <line:612:22>
| `-NonNullAttr 0x56096c758ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c758db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56096c758bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56096c758c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56096c758e68 <col:37>
| `-NonNullAttr 0x56096c758ec0 <col:78, col:92> 1
|-FunctionDecl 0x56096c7590d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56096c758f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56096c758fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56096c759188 <line:618:22>
| `-NonNullAttr 0x56096c7591e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c7593a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56096c759228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56096c7592a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56096c759458 <line:621:22>
| `-NonNullAttr 0x56096c7594b0 <col:63, col:77> 1
|-FunctionDecl 0x56096c759758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56096c759590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56096c759610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56096c759808 <line:623:22>
| `-NonNullAttr 0x56096c759860 <col:63, col:77> 1
|-FunctionDecl 0x56096c7599d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56096c7598a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56096c759ab0 <line:625:22>
| `-NonNullAttr 0x56096c759b08 <col:63, col:77> 1
|-FunctionDecl 0x56096c759c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56096c759b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56096c759cb8 <line:627:22>
| `-NonNullAttr 0x56096c759d10 <col:52, col:66> 1
|-FunctionDecl 0x56096c759e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56096c759d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56096c759eb8 <line:629:22>
| `-NonNullAttr 0x56096c759f10 <col:52, col:66> 1
|-FunctionDecl 0x56096c75a010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56096c759f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56096c75a0b8 <line:631:22>
| `-NonNullAttr 0x56096c75a110 <col:52, col:66> 1
|-FunctionDecl 0x56096c75a4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56096c75a1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56096c75a300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56096c75a380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56096c75a5a0 <line:635:22>
| `-NonNullAttr 0x56096c75a5f8 <col:63, col:77> 1
|-FunctionDecl 0x56096c75a778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56096c75a648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56096c75a820 <line:637:22>
| `-NonNullAttr 0x56096c75a878 <col:63, col:77> 1
|-FunctionDecl 0x56096c75a980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56096c75a8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56096c75aa28 <line:639:22>
| `-NonNullAttr 0x56096c75aa80 <col:52, col:66> 1
|-FunctionDecl 0x56096c75bc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56096c75bb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56096c75bd30 <line:641:22>
| `-NonNullAttr 0x56096c75bd88 <col:63, col:77> 1
|-FunctionDecl 0x56096c75be90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56096c75bdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56096c75bf38 <line:643:22>
| `-NonNullAttr 0x56096c75bf90 <col:63, col:77> 1
|-FunctionDecl 0x56096c75c1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56096c75bfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56096c75c058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56096c75c268 <line:647:22>
| `-NonNullAttr 0x56096c75c2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56096c75c4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56096c75c308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56096c75c388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56096c75c578 <line:650:22>
| `-NonNullAttr 0x56096c75c5d0 <col:63, col:77> 1
|-FunctionDecl 0x56096c75c918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56096c75c6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56096c75c7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56096c75c9c8 <line:653:22>
| `-NonNullAttr 0x56096c75ca20 <col:63, col:77> 1
|-FunctionDecl 0x56096c75cb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56096c75ca68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56096c75cc30 <col:69>
|-FunctionDecl 0x56096c75cda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56096c75cc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56096c75ce50 <col:72>
|-FunctionDecl 0x56096c75d088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56096c75ceb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56096c75cf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56096c75d138 <col:44>
|-FunctionDecl 0x56096c75d358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56096c75d1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56096c75d218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56096c75d408 <line:660:22>
| `-NonNullAttr 0x56096c75d460 <col:63, col:77> 2
|-FunctionDecl 0x56096c75d8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56096c75d540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56096c75d650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56096c75d760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56096c75d960 <col:47>
|-FunctionDecl 0x56096c75daf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56096c75d9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56096c75dc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56096c75dbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56096c75dda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56096c75dd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56096c75def8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56096c75de60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56096c75dfc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56096c75e080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56096c75e140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56096c75e1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56096c75e278 prev 0x56096c75e1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56096c75e2e0 <col:24> 'int' 0
|-VarDecl 0x56096c75e318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56096c75e398 prev 0x56096c75e318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56096c75e400 <col:27> 'int' 0
|-VarDecl 0x56096c75e438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56096c75e4b8 prev 0x56096c75e438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56096c75e520 <col:27> 'int' 0
|-VarDecl 0x56096c75e558 <line:678:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x56096c75e5d8 prev 0x56096c75e558 <line:679:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x56096c75e640 <col:27> 'int' 0
|-VarDecl 0x56096c75e678 <line:680:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56096c75e6f8 prev 0x56096c75e678 <line:681:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56096c75e760 <col:27> 'int' 0
|-VarDecl 0x56096c75e798 <line:682:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56096c75e818 prev 0x56096c75e798 <line:683:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56096c75e880 <col:27> 'int' 0
|-VarDecl 0x56096c75e8b8 <line:684:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x56096c75e938 prev 0x56096c75e8b8 <line:685:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x56096c75e9a0 <col:27> 'int' 0
|-VarDecl 0x56096c75e9d8 <line:686:1, col:5> col:5 used a 'int'
|-VarDecl 0x56096c75ea58 prev 0x56096c75e9d8 <line:687:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56096c75eac0 <col:9> 'int' 0
|-VarDecl 0x56096c75eb00 <line:688:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x56096c75eb80 <line:689:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x56096c75ebf8 <line:690:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x56096c75ec70 <line:691:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x56096c75ece8 <line:692:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x56096c75ed60 <line:693:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x56096c75edd8 <line:694:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x56096c75ee50 <line:695:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x56096c75eec8 <line:696:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x56096c75ef40 <line:697:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x56096c75efb8 <line:698:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x56096c75f030 <line:699:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x56096c75f0a8 <line:700:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x56096c75f128 <line:701:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x56096c75f1a8 <line:702:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x56096c75f220 <line:703:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x56096c75f2a0 <line:704:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x56096c75f318 <line:705:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x56096c75f390 <line:706:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56096c75f408 <line:707:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56096c75f488 <line:708:1, col:5> col:5 used x 'int'
|-VarDecl 0x56096c75f508 prev 0x56096c75f488 <line:709:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56096c75f570 <col:9> 'int' 0
|-VarDecl 0x56096c75f5a8 <line:710:1, col:5> col:5 used y 'int'
|-VarDecl 0x56096c75f628 prev 0x56096c75f5a8 <line:711:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56096c75f690 <col:9> 'int' 0
|-VarDecl 0x56096c75f6c8 <line:712:1, col:5> col:5 used z 'int'
|-VarDecl 0x56096c75f748 prev 0x56096c75f6c8 <line:713:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56096c75f7b0 <col:9> 'int' 0
|-VarDecl 0x56096c75f7e0 <line:714:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56096c75f858 <line:715:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56096c75f970 prev 0x56096c75daf0 <line:716:1, line:745:1> line:716:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56096c75f8d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56096c761228 <line:717:1, line:745:1>
|   |-CallExpr 0x56096c75fa88 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c75fa70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c75fa18 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c75fb10 <line:719:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56096c75faa8 <col:3> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56096c75fae8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c75fac8 <col:15> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x56096c75fb70 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56096c75fb30 <col:3> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x56096c75fb50 <col:15> 'int' 1
|   |-BinaryOperator 0x56096c75fbe8 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56096c75fb90 <col:3> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56096c75fbd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c75fbb0 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56096c75fc80 <line:722:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56096c75fc08 <col:3> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56096c75fc58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56096c75fc28 <col:27> 'int' 1
|   |-CallExpr 0x56096c75fe08 <line:723:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56096c75fdf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56096c75fca0 <col:3> 'void (int)' Function 0x56096c704bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56096c75fda0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56096c75fd80 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56096c75fd60 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56096c75fd18 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56096c75fd00 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56096c75fcc0 <col:23> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56096c75fd48 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56096c75fd30 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56096c75fce0 <col:41> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56096c75fe88 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56096c75fe30 <col:3> '_Bool' lvalue Var 0x56096c75ee50 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56096c75fe70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c75fe50 <col:20> '_Bool' lvalue Var 0x56096c75ebf8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56096c75ff00 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56096c75fea8 <col:3> '_Bool' lvalue Var 0x56096c75eec8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56096c75fee8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c75fec8 <col:20> '_Bool' lvalue Var 0x56096c75ec70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56096c75ff78 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56096c75ff20 <col:3> '_Bool' lvalue Var 0x56096c75ef40 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56096c75ff60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c75ff40 <col:20> '_Bool' lvalue Var 0x56096c75ece8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56096c75fff0 <line:727:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56096c75ff98 <col:3> '_Bool' lvalue Var 0x56096c75efb8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56096c75ffd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c75ffb8 <col:20> '_Bool' lvalue Var 0x56096c75ed60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56096c760068 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56096c760010 <col:3> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56096c760050 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c760030 <col:20> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56096c760100 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56096c760088 <col:3> '_Bool' lvalue Var 0x56096c75ec70 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56096c7600d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56096c7600a8 <col:27> 'int' 1
|   |-CallExpr 0x56096c760158 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c760140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c760120 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c7601b0 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c760198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c760178 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c760228 <line:732:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56096c7601d0 <col:3> 'int' lvalue Var 0x56096c75e398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56096c760210 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c7601f0 <col:25> 'int' lvalue Var 0x56096c75f508 'x' 'int'
|   |-CallExpr 0x56096c760280 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c760268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c760248 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c7602d8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c7602c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c7602a0 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c7605c0 <line:735:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56096c7602f8 <col:3> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   | `-ConditionalOperator 0x56096c760590 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56096c7603b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56096c760370 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56096c760358 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56096c760318 <col:7> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56096c7603a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56096c760388 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56096c760338 <col:25> '_Bool' lvalue Var 0x56096c75ec70 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56096c760578 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c7603d8 <col:42> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56096c760558 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56096c760528 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56096c760498 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56096c760450 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56096c760438 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56096c7603f8 <col:55> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56096c760480 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56096c760468 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56096c760418 <col:73> '_Bool' lvalue Var 0x56096c75eec8 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56096c7604f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56096c7604b8 <col:90> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56096c760510 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c7604d8 <col:102> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   |-BinaryOperator 0x56096c7607c8 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56096c7605e0 <col:3> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56096c7607b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c760780 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56096c7606a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56096c760658 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56096c760640 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56096c760600 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56096c760688 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56096c760670 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56096c760620 <col:38> '_Bool' lvalue Var 0x56096c75ec70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c760738 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c7606f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c7606c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c760768 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c760750 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c760718 <col:66> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56096c760ab0 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56096c7607e8 <col:3> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56096c760a98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c760a68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56096c760988 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56096c7608a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56096c760860 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56096c760848 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56096c760808 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56096c760890 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56096c760878 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56096c760828 <col:38> '_Bool' lvalue Var 0x56096c75ec70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56096c760968 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56096c760920 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56096c760908 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56096c7608c8 <col:56> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56096c760950 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56096c760938 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56096c7608e8 <col:74> '_Bool' lvalue Var 0x56096c75eec8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c760a20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c7609d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c7609a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c760a50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c760a38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c760a00 <col:102> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56096c760cc8 <line:738:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56096c760ad0 <col:3> '_Bool' lvalue Var 0x56096c75ec70 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56096c760cb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c760c80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56096c760ba0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56096c760b58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56096c760b40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56096c760af0 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56096c760b88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56096c760b70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56096c760b20 <col:38> '_Bool' lvalue Var 0x56096c75ec70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c760c38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c760bf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c760bc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c760c68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c760c50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c760c18 <col:66> '_Bool' lvalue Var 0x56096c75ec70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56096c760fb0 <line:739:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56096c760ce8 <col:3> '_Bool' lvalue Var 0x56096c75eec8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56096c760f98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c760f68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56096c760e88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56096c760da8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56096c760d60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56096c760d48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56096c760d08 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56096c760d90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56096c760d78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56096c760d28 <col:38> '_Bool' lvalue Var 0x56096c75ec70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56096c760e68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56096c760e20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56096c760e08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56096c760dc8 <col:56> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56096c760e50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56096c760e38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56096c760de8 <col:74> '_Bool' lvalue Var 0x56096c75eec8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c760f20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c760ed8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c760ea8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c760f50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c760f38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c760f00 <col:102> '_Bool' lvalue Var 0x56096c75eec8 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56096c761008 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c760ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c760fd0 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c761060 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c761048 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c761028 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c761118 <line:742:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56096c761080 <col:3> 'int' lvalue Var 0x56096c75e278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56096c7610f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56096c7610e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c7610a0 <col:22> 'int' lvalue Var 0x56096c75e278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56096c7610c0 <col:41> 'int' 1
|   |-CallExpr 0x56096c761170 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c761158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c761138 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56096c761218 <line:744:3, col:36>
|     `-CallExpr 0x56096c7611f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56096c7611e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56096c761190 <col:10> 'void *(void)' Function 0x56096c704958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56096c7613c0 prev 0x56096c75dc48 <line:746:1, line:768:1> line:746:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56096c761328 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56096c762738 <line:747:1, line:768:1>
|   |-CallExpr 0x56096c7614a0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c761488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c761468 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c761500 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56096c7614c0 <col:3> 'int' lvalue Var 0x56096c75f508 'x' 'int'
|   | `-IntegerLiteral 0x56096c7614e0 <col:7> 'int' 1
|   |-CallExpr 0x56096c761558 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c761540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c761520 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c7615b0 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c761598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c761578 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c761628 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56096c7615d0 <col:3> 'int' lvalue Var 0x56096c75e4b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56096c761610 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c7615f0 <col:25> 'int' lvalue Var 0x56096c75f508 'x' 'int'
|   |-CallExpr 0x56096c761680 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c761668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c761648 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c7616d8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c7616c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c7616a0 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c761750 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56096c7616f8 <col:3> 'int' lvalue Var 0x56096c75e5d8 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x56096c761738 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c761718 <col:25> 'int' lvalue Var 0x56096c75f628 'y' 'int'
|   |-CallExpr 0x56096c7617a8 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c761790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c761770 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c761800 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c7617e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c7617c8 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c761ae8 <line:758:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56096c761820 <col:3> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   | `-ConditionalOperator 0x56096c761ab8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56096c7618e0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56096c761898 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56096c761880 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56096c761840 <col:7> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56096c7618c8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56096c7618b0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56096c761860 <col:25> '_Bool' lvalue Var 0x56096c75ece8 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56096c761aa0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c761900 <col:42> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56096c761a80 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56096c761a50 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56096c7619c0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56096c761978 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56096c761960 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56096c761920 <col:55> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56096c7619a8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56096c761990 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56096c761940 <col:73> '_Bool' lvalue Var 0x56096c75ef40 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56096c761a20 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56096c7619e0 <col:90> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56096c761a38 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c761a00 <col:102> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   |-BinaryOperator 0x56096c761d18 <line:759:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56096c761b30 <col:3> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56096c761d00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c761cd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56096c761bf0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56096c761ba8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56096c761b90 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56096c761b50 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56096c761bd8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56096c761bc0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56096c761b70 <col:38> '_Bool' lvalue Var 0x56096c75ece8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c761c88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c761c40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c761c10 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c761cb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c761ca0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c761c68 <col:66> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56096c762000 <line:760:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56096c761d38 <col:3> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56096c761fe8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c761fb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56096c761ed8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56096c761df8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56096c761db0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56096c761d98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56096c761d58 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56096c761de0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56096c761dc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56096c761d78 <col:38> '_Bool' lvalue Var 0x56096c75ece8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56096c761eb8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56096c761e70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56096c761e58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56096c761e18 <col:56> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56096c761ea0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56096c761e88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56096c761e38 <col:74> '_Bool' lvalue Var 0x56096c75ef40 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c761f70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c761f28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c761ef8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c761fa0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c761f88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c761f50 <col:102> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56096c762208 <line:761:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56096c762020 <col:3> '_Bool' lvalue Var 0x56096c75ece8 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56096c7621f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c7621c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56096c7620e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56096c762098 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56096c762080 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56096c762040 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56096c7620c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56096c7620b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56096c762060 <col:38> '_Bool' lvalue Var 0x56096c75ece8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c762178 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c762130 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c762100 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c7621a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c762190 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c762158 <col:66> '_Bool' lvalue Var 0x56096c75ece8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56096c7624f0 <line:762:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56096c762228 <col:3> '_Bool' lvalue Var 0x56096c75ef40 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56096c7624d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c7624a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56096c7623c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56096c7622e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56096c7622a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56096c762288 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56096c762248 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56096c7622d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56096c7622b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56096c762268 <col:38> '_Bool' lvalue Var 0x56096c75ece8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56096c7623a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56096c762360 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56096c762348 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56096c762308 <col:56> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56096c762390 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56096c762378 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56096c762328 <col:74> '_Bool' lvalue Var 0x56096c75ef40 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c762460 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c762418 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c7623e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c762490 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c762478 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c762440 <col:102> '_Bool' lvalue Var 0x56096c75ef40 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56096c762548 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c762530 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c762510 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c7625a0 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c762588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c762568 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c762658 <line:765:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56096c7625c0 <col:3> 'int' lvalue Var 0x56096c75e278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56096c762638 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56096c762620 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c7625e0 <col:22> 'int' lvalue Var 0x56096c75e278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56096c762600 <col:41> 'int' 1
|   |-CallExpr 0x56096c7626b0 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c762698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c762678 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56096c762728 <line:767:3, col:36>
|     `-CallExpr 0x56096c762708 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56096c7626f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56096c7626d0 <col:10> 'void *(void)' Function 0x56096c704958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56096c762898 prev 0x56096c75dda0 <line:769:1, line:788:1> line:769:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56096c762800 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56096c763b50 <line:770:1, line:788:1>
|   |-CallExpr 0x56096c762978 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c762960 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c762940 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c7629d8 <line:772:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56096c762998 <col:3> 'int' lvalue Var 0x56096c75f628 'y' 'int'
|   | `-IntegerLiteral 0x56096c7629b8 <col:7> 'int' 1
|   |-CallExpr 0x56096c762a30 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c762a18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c7629f8 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c762a88 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c762a70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c762a50 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c762b00 <line:775:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56096c762aa8 <col:3> 'int' lvalue Var 0x56096c75e6f8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56096c762ae8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c762ac8 <col:25> 'int' lvalue Var 0x56096c75f748 'z' 'int'
|   |-CallExpr 0x56096c762b78 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c762b60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c762b40 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c762bd0 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c762bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c762b98 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c762eb8 <line:778:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56096c762bf0 <col:3> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   | `-ConditionalOperator 0x56096c762e88 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56096c762cb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56096c762c68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56096c762c50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56096c762c10 <col:7> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56096c762c98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56096c762c80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56096c762c30 <col:25> '_Bool' lvalue Var 0x56096c75ed60 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56096c762e70 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c762cd0 <col:42> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56096c762e50 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56096c762e20 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56096c762d90 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56096c762d48 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56096c762d30 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56096c762cf0 <col:55> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56096c762d78 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56096c762d60 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56096c762d10 <col:73> '_Bool' lvalue Var 0x56096c75efb8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56096c762df0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56096c762db0 <col:90> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56096c762e08 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c762dd0 <col:102> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   |-BinaryOperator 0x56096c7630c0 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56096c762ed8 <col:3> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56096c7630a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c763078 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56096c762f98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56096c762f50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56096c762f38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56096c762ef8 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56096c762f80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56096c762f68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56096c762f18 <col:38> '_Bool' lvalue Var 0x56096c75ed60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c763030 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c762fe8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c762fb8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c763060 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c763048 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c763010 <col:66> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56096c7633a8 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56096c7630e0 <col:3> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56096c763390 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c763360 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56096c763280 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56096c7631a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56096c763158 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56096c763140 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56096c763100 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56096c763188 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56096c763170 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56096c763120 <col:38> '_Bool' lvalue Var 0x56096c75ed60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56096c763260 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56096c763218 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56096c763200 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56096c7631c0 <col:56> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56096c763248 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56096c763230 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56096c7631e0 <col:74> '_Bool' lvalue Var 0x56096c75efb8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c763318 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c7632d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c7632a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c763348 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c763330 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c7632f8 <col:102> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56096c7635b0 <line:781:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56096c7633c8 <col:3> '_Bool' lvalue Var 0x56096c75ed60 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56096c763598 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c763568 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56096c763488 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56096c763440 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56096c763428 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56096c7633e8 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56096c763470 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56096c763458 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56096c763408 <col:38> '_Bool' lvalue Var 0x56096c75ed60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c763520 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c7634d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c7634a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c763550 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c763538 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c763500 <col:66> '_Bool' lvalue Var 0x56096c75ed60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56096c763898 <line:782:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56096c7635d0 <col:3> '_Bool' lvalue Var 0x56096c75efb8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56096c763880 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c763850 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56096c763770 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56096c763690 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56096c763648 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56096c763630 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56096c7635f0 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56096c763678 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56096c763660 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56096c763610 <col:38> '_Bool' lvalue Var 0x56096c75ed60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56096c763750 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56096c763708 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56096c7636f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56096c7636b0 <col:56> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56096c763738 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56096c763720 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56096c7636d0 <col:74> '_Bool' lvalue Var 0x56096c75efb8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c763808 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c7637c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c763790 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c763838 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c763820 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c7637e8 <col:102> '_Bool' lvalue Var 0x56096c75efb8 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56096c7638f0 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c7638d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c7638b8 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c763948 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c763930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c763910 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c763a00 <line:785:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56096c763968 <col:3> 'int' lvalue Var 0x56096c75e278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56096c7639e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56096c7639c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c763988 <col:22> 'int' lvalue Var 0x56096c75e278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56096c7639a8 <col:41> 'int' 1
|   |-CallExpr 0x56096c763a58 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c763a40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c763a20 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56096c763ad0 <line:787:3, col:36>
|     `-CallExpr 0x56096c763ab0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56096c763a98 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56096c763a78 <col:10> 'void *(void)' Function 0x56096c704958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56096c763c98 prev 0x56096c75def8 <line:789:1, line:824:1> line:789:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x56096c763c00 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56096c767990 <line:790:1, line:824:1>
|   |-CallExpr 0x56096c763d78 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c763d60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c763d40 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c763dd8 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56096c763d98 <col:3> 'int' lvalue Var 0x56096c75f748 'z' 'int'
|   | `-IntegerLiteral 0x56096c763db8 <col:7> 'int' 1
|   |-CallExpr 0x56096c763e30 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c763e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c763df8 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c763e88 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c763e70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c763e50 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c763f00 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56096c763ea8 <col:3> 'int' lvalue Var 0x56096c75e818 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x56096c763ee8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c763ec8 <col:25> 'int' lvalue Var 0x56096c75f748 'z' 'int'
|   |-CallExpr 0x56096c763f58 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c763f40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c763f20 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c763fb0 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c763f98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c763f78 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c764060 <line:798:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56096c763fd0 <col:3> '_Bool' lvalue Var 0x56096c75f7e0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56096c764048 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56096c764028 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56096c764010 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56096c763ff0 <col:19> 'void *(void)' Function 0x56096c704958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56096c764110 <line:799:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56096c764080 <col:3> '_Bool' lvalue Var 0x56096c75f858 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56096c7640f8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56096c7640d8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56096c7640c0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56096c7640a0 <col:19> 'void *(void)' Function 0x56096c704958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56096c764188 <line:800:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56096c764130 <col:3> '_Bool' lvalue Var 0x56096c75eb00 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56096c764170 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c764150 <col:21> '_Bool' lvalue Var 0x56096c75f858 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56096c764200 <line:801:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56096c7641a8 <col:3> 'int' lvalue Var 0x56096c75eb80 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56096c7641e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c7641c8 <col:15> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   |-BinaryOperator 0x56096c764638 <line:802:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56096c764220 <col:3> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   | `-ConditionalOperator 0x56096c764608 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56096c764430 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56096c764350 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56096c764278 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56096c764260 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56096c764240 <col:8> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56096c764330 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56096c7642c8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56096c7642b0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56096c764290 <col:27> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x56096c764318 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56096c764300 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56096c7642e0 <col:46> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56096c764410 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56096c7643a8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56096c764390 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56096c764370 <col:65> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x56096c7643f8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56096c7643e0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56096c7643c0 <col:84> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56096c7645f0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c764450 <col:101> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   |   `-ParenExpr 0x56096c7645d0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56096c7645a0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56096c764510 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56096c7644c8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56096c7644b0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56096c764470 <col:106> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56096c7644f8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56096c7644e0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56096c764490 <col:124> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56096c764570 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56096c764530 <col:141> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56096c764588 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c764550 <col:153> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x56096c764b60 <line:803:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56096c764658 <col:3> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x56096c764b18 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56096c764ae8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56096c764ad0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56096c764678 <col:15> '_Bool' lvalue Var 0x56096c75f858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56096c764b00 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c764698 <col:31> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56096c764ab0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56096c764a80 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56096c7648a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56096c7647c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56096c7646f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56096c7646d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56096c7646b8 <col:45> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56096c7647a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56096c764740 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56096c764728 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56096c764708 <col:64> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56096c764790 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56096c764778 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56096c764758 <col:83> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56096c764888 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56096c764820 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56096c764808 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56096c7647e8 <col:102> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56096c764870 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56096c764858 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56096c764838 <col:121> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56096c764a68 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56096c7648c8 <col:138> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x56096c764a48 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56096c764a18 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56096c764988 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56096c764940 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56096c764928 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56096c7648e8 <col:151> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56096c764970 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56096c764958 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56096c764908 <col:169> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56096c7649e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56096c7649a8 <col:186> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56096c764a00 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56096c7649c8 <col:198> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x56096c765070 <line:804:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56096c764b80 <col:3> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x56096c765040 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56096c765010 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56096c764ff8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56096c764ba0 <col:15> '_Bool' lvalue Var 0x56096c75f858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56096c765028 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c764bc0 <col:31> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x56096c764fd8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56096c764fa8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56096c764dd0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56096c764cf0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56096c764c18 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56096c764c00 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56096c764be0 <col:45> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56096c764cd0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56096c764c68 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56096c764c50 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56096c764c30 <col:64> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56096c764cb8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56096c764ca0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56096c764c80 <col:83> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56096c764db0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56096c764d48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56096c764d30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56096c764d10 <col:102> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56096c764d98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56096c764d80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56096c764d60 <col:121> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56096c764f90 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56096c764df0 <col:138> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x56096c764f70 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56096c764f40 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56096c764eb0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56096c764e68 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56096c764e50 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56096c764e10 <col:151> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56096c764e98 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56096c764e80 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56096c764e30 <col:169> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56096c764f10 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56096c764ed0 <col:186> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56096c764f28 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56096c764ef0 <col:198> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x56096c765618 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56096c765090 <col:3> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56096c765600 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c7655d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56096c765588 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56096c765570 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56096c7650b0 <col:20> '_Bool' lvalue Var 0x56096c75f858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c7655b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56096c7655a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56096c7650d0 <col:36> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56096c765550 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56096c765520 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56096c7652e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56096c765200 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56096c765128 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56096c765110 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56096c7650f0 <col:55> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56096c7651e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56096c765178 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56096c765160 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56096c765140 <col:74> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56096c7651c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56096c7651b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56096c765190 <col:93> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56096c7652c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56096c765258 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56096c765240 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56096c765220 <col:112> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56096c7652a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56096c765290 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56096c765270 <col:131> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56096c765508 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56096c7654f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56096c765300 <col:148> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56096c7654d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56096c7654a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56096c7653c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56096c765378 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56096c765360 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56096c765320 <col:166> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56096c7653a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56096c765390 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56096c765340 <col:184> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56096c765458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56096c765410 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56096c7653e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56096c765488 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56096c765470 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56096c765438 <col:212> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56096c765c00 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56096c765638 <col:3> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56096c765be8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c765bb8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56096c765b70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56096c765b38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56096c765658 <col:20> '_Bool' lvalue Var 0x56096c75f858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c765ba0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56096c765b88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56096c765678 <col:36> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56096c765b18 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56096c765ae8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56096c765888 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56096c7657a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56096c7656d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56096c7656b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56096c765698 <col:55> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56096c765788 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56096c765720 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56096c765708 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56096c7656e8 <col:74> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56096c765770 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56096c765758 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56096c765738 <col:93> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56096c765868 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56096c765800 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56096c7657e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56096c7657c8 <col:112> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56096c765850 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56096c765838 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56096c765818 <col:131> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56096c765ad0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56096c765ab8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56096c7658a8 <col:148> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56096c765a98 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56096c765a68 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56096c765968 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56096c765920 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56096c765908 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56096c7658c8 <col:166> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56096c765950 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56096c765938 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56096c7658e8 <col:184> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56096c765a38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56096c7659b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56096c765988 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56096c765a50 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56096c765a10 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56096c7659e0 <col:219> 'int' 0
|   |-BinaryOperator 0x56096c7661a8 <line:807:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56096c765c20 <col:3> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56096c766190 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c766160 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56096c766118 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56096c766100 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56096c765c40 <col:20> '_Bool' lvalue Var 0x56096c75f858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c766148 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56096c766130 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56096c765c60 <col:36> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x56096c7660e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56096c7660b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56096c765e70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56096c765d90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56096c765cb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56096c765ca0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56096c765c80 <col:55> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56096c765d70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56096c765d08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56096c765cf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56096c765cd0 <col:74> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56096c765d58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56096c765d40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56096c765d20 <col:93> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56096c765e50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56096c765de8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56096c765dd0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56096c765db0 <col:112> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56096c765e38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56096c765e20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56096c765e00 <col:131> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56096c766098 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56096c766080 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56096c765e90 <col:148> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x56096c766060 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56096c766030 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56096c765f50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56096c765f08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56096c765ef0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56096c765eb0 <col:166> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56096c765f38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56096c765f20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56096c765ed0 <col:184> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56096c765fe8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56096c765fa0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56096c765f70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56096c766018 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56096c766000 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56096c765fc8 <col:212> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56096c766770 <line:808:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56096c7661c8 <col:3> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56096c766758 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c766728 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56096c7666e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56096c7666c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56096c7661e8 <col:20> '_Bool' lvalue Var 0x56096c75f858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c766710 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56096c7666f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56096c766208 <col:36> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x56096c7666a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56096c766678 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56096c766418 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56096c766338 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56096c766260 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56096c766248 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56096c766228 <col:55> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56096c766318 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56096c7662b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56096c766298 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56096c766278 <col:74> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56096c766300 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56096c7662e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56096c7662c8 <col:93> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56096c7663f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56096c766390 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56096c766378 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56096c766358 <col:112> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56096c7663e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56096c7663c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56096c7663a8 <col:131> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56096c766660 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56096c766648 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56096c766438 <col:148> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x56096c766628 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56096c7665f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56096c7664f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56096c7664b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56096c766498 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56096c766458 <col:166> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56096c7664e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56096c7664c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56096c766478 <col:184> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56096c7665c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56096c766548 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56096c766518 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56096c7665e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56096c7665a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56096c766570 <col:219> 'int' 0
|   |-BinaryOperator 0x56096c7667e8 <line:809:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56096c766790 <col:3> 'int' lvalue Var 0x56096c75e938 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x56096c7667d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56096c7667b0 <col:25> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   |-BinaryOperator 0x56096c766918 <line:810:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56096c766808 <col:3> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   | `-ConditionalOperator 0x56096c7668e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56096c7668a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56096c766888 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56096c766828 <col:7> '_Bool' lvalue Var 0x56096c75eb00 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56096c7668b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c766848 <col:25> 'int' lvalue Var 0x56096c75eb80 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56096c7668d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56096c766868 <col:37> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   |-BinaryOperator 0x56096c7669b0 <line:811:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56096c766938 <col:3> '_Bool' lvalue Var 0x56096c75eb00 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56096c766988 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56096c766958 <col:28> 'int' 0
|   |-CallExpr 0x56096c766a08 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c7669f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c7669d0 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c766a60 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c766a48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c766a28 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c766d68 <line:814:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56096c766a80 <col:3> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   | `-ConditionalOperator 0x56096c766d38 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56096c766b40 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56096c766af8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56096c766ae0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56096c766aa0 <col:7> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56096c766b28 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56096c766b10 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56096c766ac0 <col:25> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56096c766d20 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c766b80 <col:42> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x56096c766d00 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56096c766cd0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56096c766c40 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56096c766bf8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56096c766be0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56096c766ba0 <col:55> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56096c766c28 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56096c766c10 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56096c766bc0 <col:73> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56096c766ca0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56096c766c60 <col:90> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56096c766cb8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c766c80 <col:102> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
|   |-BinaryOperator 0x56096c766f70 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56096c766d88 <col:3> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56096c766f58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c766f28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56096c766e48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56096c766e00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56096c766de8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56096c766da8 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56096c766e30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56096c766e18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56096c766dc8 <col:38> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c766ee0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c766e98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c766e68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c766f10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c766ef8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c766ec0 <col:66> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56096c767258 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56096c766f90 <col:3> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56096c767240 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c767210 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56096c767130 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56096c767050 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56096c767008 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56096c766ff0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56096c766fb0 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56096c767038 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56096c767020 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56096c766fd0 <col:38> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56096c767110 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56096c7670c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56096c7670b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56096c767070 <col:56> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56096c7670f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56096c7670e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56096c767090 <col:74> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c7671c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c767180 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c767150 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c7671f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c7671e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c7671a8 <col:102> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56096c767460 <line:817:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56096c767278 <col:3> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56096c767448 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c767418 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56096c767338 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56096c7672f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56096c7672d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56096c767298 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56096c767320 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56096c767308 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56096c7672b8 <col:38> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c7673d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c767388 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c767358 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c767400 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c7673e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c7673b0 <col:66> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56096c767748 <line:818:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56096c767480 <col:3> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56096c767730 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56096c767700 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56096c767620 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56096c767540 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56096c7674f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56096c7674e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56096c7674a0 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56096c767528 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56096c767510 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56096c7674c0 <col:38> '_Bool' lvalue Var 0x56096c75edd8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56096c767600 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56096c7675b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56096c7675a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56096c767560 <col:56> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56096c7675e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56096c7675d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56096c767580 <col:74> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56096c7676b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56096c767670 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56096c767640 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56096c7676e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56096c7676d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56096c767698 <col:102> '_Bool' lvalue Var 0x56096c75f030 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x56096c7677a0 <line:819:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c767788 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c767768 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56096c7677f8 <line:820:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56096c7677e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c7677c0 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56096c7678b0 <line:821:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56096c767818 <col:3> 'int' lvalue Var 0x56096c75e278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56096c767890 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56096c767878 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56096c767838 <col:22> 'int' lvalue Var 0x56096c75e278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56096c767858 <col:41> 'int' 1
|   |-CallExpr 0x56096c767908 <line:822:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56096c7678f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56096c7678d0 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56096c767980 <line:823:3, col:36>
|     `-CallExpr 0x56096c767960 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56096c767948 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56096c767928 <col:10> 'void *(void)' Function 0x56096c704958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56096c767ac8 prev 0x56096c75dfc0 <line:825:1, line:827:1> line:825:6 fence 'void ()'
| `-CompoundStmt 0x56096c767b68 <line:826:1, line:827:1>
|-FunctionDecl 0x56096c767bb0 prev 0x56096c75e080 <line:828:1, line:830:1> line:828:6 isync 'void ()'
| `-CompoundStmt 0x56096c767c50 <line:829:1, line:830:1>
|-FunctionDecl 0x56096c767c80 prev 0x56096c75e140 <line:831:1, line:833:1> line:831:6 lwfence 'void ()'
| `-CompoundStmt 0x56096c767d20 <line:832:1, line:833:1>
`-FunctionDecl 0x56096c767d88 <line:834:1, line:860:1> line:834:5 main 'int ()'
  `-CompoundStmt 0x56096c769e30 <line:835:1, line:860:1>
    |-DeclStmt 0x56096c767ea0 <line:836:3, col:17>
    | `-VarDecl 0x56096c767e38 <col:3, col:13> col:13 used t347 'pthread_t':'unsigned long'
    |-CallExpr 0x56096c7680a8 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56096c768090 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56096c767eb8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56096c745488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56096c767ef8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56096c767ed8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56096c767e38 't347' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56096c7680e8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56096c767f70 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56096c767f48 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56096c767f10 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56096c768100 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56096c767f90 <col:38> 'void *(void *)' Function 0x56096c75f970 'P0' 'void *(void *)'
    | `-ParenExpr 0x56096c768010 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56096c767fe8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56096c767fb0 <col:51> 'int' 0
    |-DeclStmt 0x56096c768190 <line:838:3, col:17>
    | `-VarDecl 0x56096c768128 <col:3, col:13> col:13 used t348 'pthread_t':'unsigned long'
    |-CallExpr 0x56096c768338 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56096c768320 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56096c7681a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56096c745488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56096c7681e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56096c7681c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56096c768128 't348' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56096c768378 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56096c768260 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56096c768238 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56096c768200 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56096c768390 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56096c768280 <col:38> 'void *(void *)' Function 0x56096c7613c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x56096c768300 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56096c7682d8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56096c7682a0 <col:51> 'int' 0
    |-DeclStmt 0x56096c768420 <line:840:3, col:17>
    | `-VarDecl 0x56096c7683b8 <col:3, col:13> col:13 used t349 'pthread_t':'unsigned long'
    |-CallExpr 0x56096c7685c8 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56096c7685b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56096c768438 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56096c745488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56096c768478 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56096c768458 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56096c7683b8 't349' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56096c768608 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56096c7684f0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56096c7684c8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56096c768490 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56096c768620 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56096c768510 <col:38> 'void *(void *)' Function 0x56096c762898 'P2' 'void *(void *)'
    | `-ParenExpr 0x56096c768590 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56096c768568 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56096c768530 <col:51> 'int' 0
    |-DeclStmt 0x56096c7686b0 <line:842:3, col:17>
    | `-VarDecl 0x56096c768648 <col:3, col:13> col:13 used t350 'pthread_t':'unsigned long'
    |-CallExpr 0x56096c768858 <line:843:3, col:53> 'int'
    | |-ImplicitCastExpr 0x56096c768840 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56096c7686c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56096c745488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56096c768708 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56096c7686e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56096c768648 't350' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56096c768898 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56096c768780 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x56096c768758 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56096c768720 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x56096c7688b0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56096c7687a0 <col:38> 'void *(void *)' Function 0x56096c763c98 'P3' 'void *(void *)'
    | `-ParenExpr 0x56096c768820 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x56096c7687f8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56096c7687c0 <col:51> 'int' 0
    |-CallExpr 0x56096c768900 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56096c7688e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56096c7688c8 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56096c7689d0 <line:845:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56096c768920 <col:3> '_Bool' lvalue Var 0x56096c75f390 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56096c7689b8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56096c768998 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56096c768980 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56096c768940 <col:21> 'int' lvalue Var 0x56096c75e278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56096c768960 <col:41> 'int' 4
    |-CallExpr 0x56096c768a28 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56096c768a10 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56096c7689f0 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56096c768aa0 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56096c768a88 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56096c768a48 <col:3> 'void (int)' Function 0x56096c704790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56096c768ae0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56096c768ac8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56096c768a68 <col:21> '_Bool' lvalue Var 0x56096c75f390 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56096c768b30 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56096c768b18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56096c768af8 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56096c768e28 <line:849:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56096c768b50 <col:3> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
    | `-ConditionalOperator 0x56096c768df8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56096c768c20 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56096c768bd8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56096c768bc0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56096c768b70 <col:7> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56096c768c08 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56096c768bf0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56096c768ba0 <col:25> '_Bool' lvalue Var 0x56096c75ebf8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56096c768de0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56096c768c40 <col:42> 'int' lvalue Var 0x56096c75f1a8 'a$w_buff0' 'int'
    |   `-ParenExpr 0x56096c768dc0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56096c768d90 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56096c768d00 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56096c768cb8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56096c768ca0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56096c768c60 <col:55> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56096c768ce8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56096c768cd0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56096c768c80 <col:73> '_Bool' lvalue Var 0x56096c75ee50 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56096c768d60 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56096c768d20 <col:90> 'int' lvalue Var 0x56096c75f2a0 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56096c768d78 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56096c768d40 <col:102> 'int' lvalue Var 0x56096c75ea58 'a' 'int'
    |-BinaryOperator 0x56096c769030 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56096c768e48 <col:3> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56096c769018 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56096c768fe8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56096c768f08 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56096c768ec0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56096c768ea8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56096c768e68 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56096c768ef0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56096c768ed8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56096c768e88 <col:38> '_Bool' lvalue Var 0x56096c75ebf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56096c768fa0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56096c768f58 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56096c768f28 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56096c768fd0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56096c768fb8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56096c768f80 <col:66> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56096c769318 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56096c769050 <col:3> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56096c769300 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56096c7692d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56096c7691f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56096c769110 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56096c7690c8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56096c7690b0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56096c769070 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56096c7690f8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56096c7690e0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56096c769090 <col:38> '_Bool' lvalue Var 0x56096c75ebf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56096c7691d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56096c769188 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56096c769170 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56096c769130 <col:56> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56096c7691b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56096c7691a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56096c769150 <col:74> '_Bool' lvalue Var 0x56096c75ee50 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56096c769288 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56096c769240 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56096c769210 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56096c7692b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56096c7692a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56096c769268 <col:102> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56096c769520 <line:852:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56096c769338 <col:3> '_Bool' lvalue Var 0x56096c75ebf8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56096c769508 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56096c7694d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56096c7693f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56096c7693b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56096c769398 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56096c769358 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56096c7693e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56096c7693c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56096c769378 <col:38> '_Bool' lvalue Var 0x56096c75ebf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56096c769490 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56096c769448 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56096c769418 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56096c7694c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56096c7694a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56096c769470 <col:66> '_Bool' lvalue Var 0x56096c75ebf8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56096c769808 <line:853:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56096c769540 <col:3> '_Bool' lvalue Var 0x56096c75ee50 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56096c7697f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56096c7697c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56096c7696e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56096c769600 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56096c7695b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56096c7695a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56096c769560 <col:20> '_Bool' lvalue Var 0x56096c75f220 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56096c7695e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56096c7695d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56096c769580 <col:38> '_Bool' lvalue Var 0x56096c75ebf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56096c7696c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56096c769678 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56096c769660 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56096c769620 <col:56> '_Bool' lvalue Var 0x56096c75f318 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56096c7696a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56096c769690 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56096c769640 <col:74> '_Bool' lvalue Var 0x56096c75ee50 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56096c769778 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56096c769730 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56096c769700 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56096c7697a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56096c769790 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56096c769758 <col:102> '_Bool' lvalue Var 0x56096c75ee50 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56096c769860 <line:854:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56096c769848 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56096c769828 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56096c7698b8 <line:855:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56096c7698a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56096c769880 <col:3> 'void ()' Function 0x56096c704e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56096c769cd8 <line:856:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x56096c7698d8 <col:3> '_Bool' lvalue Var 0x56096c75f408 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56096c769cc0 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56096c769ca8 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56096c769c88 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x56096c769c68 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x56096c769bd0 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x56096c769b18 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x56096c769a80 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x56096c7699e8 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x56096c769950 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x56096c769938 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x56096c7698f8 <col:23> 'int' lvalue Var 0x56096c75e398 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x56096c769918 <col:46> 'int' 0
    |         | | | | `-BinaryOperator 0x56096c7699c8 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x56096c7699b0 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x56096c769970 <col:51> 'int' lvalue Var 0x56096c75e4b8 '__unbuffered_p1_EAX' 'int'
    |         | | | |   `-IntegerLiteral 0x56096c769990 <col:74> 'int' 1
    |         | | | `-BinaryOperator 0x56096c769a60 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x56096c769a48 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x56096c769a08 <col:79> 'int' lvalue Var 0x56096c75e5d8 '__unbuffered_p1_EBX' 'int'
    |         | | |   `-IntegerLiteral 0x56096c769a28 <col:102> 'int' 0
    |         | | `-BinaryOperator 0x56096c769af8 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56096c769ae0 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56096c769aa0 <col:107> 'int' lvalue Var 0x56096c75e6f8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x56096c769ac0 <col:130> 'int' 0
    |         | `-BinaryOperator 0x56096c769bb0 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56096c769b78 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56096c769b38 <col:135> 'int' lvalue Var 0x56096c75e818 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x56096c769b58 <col:158> 'int' 1
    |         `-BinaryOperator 0x56096c769c48 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x56096c769c30 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56096c769bf0 <col:163> 'int' lvalue Var 0x56096c75e938 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x56096c769c10 <col:186> 'int' 0
    |-CallExpr 0x56096c769d30 <line:857:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56096c769d18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56096c769cf8 <col:3> 'void ()' Function 0x56096c704f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56096c769da8 <line:858:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56096c769d90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56096c769d50 <col:3> 'void (int)' Function 0x56096c704bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56096c769de8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56096c769dd0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56096c769d70 <col:21> '_Bool' lvalue Var 0x56096c75f408 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56096c769e20 <line:859:3, col:10>
      `-IntegerLiteral 0x56096c769e00 <col:10> 'int' 0
