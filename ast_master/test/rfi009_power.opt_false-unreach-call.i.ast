TranslationUnitDecl 0x55b71175be18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55b71175c6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55b71175c3b0 '__int128'
|-TypedefDecl 0x55b71175c748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55b71175c3d0 'unsigned __int128'
|-TypedefDecl 0x55b71175ca50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55b71175c820 'struct __NSConstantString_tag'
|   `-Record 0x55b71175c7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55b71175caf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55b71175cab0 'char *'
|   `-BuiltinType 0x55b71175beb0 'char'
|-TypedefDecl 0x55b71179b650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55b71175cd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55b71175cbd0 'struct __va_list_tag'
|     `-Record 0x55b71175cb50 '__va_list_tag'
|-FunctionDecl 0x55b71179b770 <./test/rfi009_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55b71179b940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55b71179b870 <col:31> col:34 'int'
|-FunctionDecl 0x55b71179bab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55b71179bbe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55b71179bd28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55b71179bc98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55b71179bf58 <col:40, col:99>
|   |-IfStmt 0x55b71179bf28 <col:42, col:88>
|   | |-UnaryOperator 0x55b71179be08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55b71179bdf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55b71179bdd0 <col:47> 'int' lvalue ParmVar 0x55b71179bc98 'expression' 'int'
|   | `-CompoundStmt 0x55b71179bf10 <col:59, col:88>
|   |   `-LabelStmt 0x55b71179bef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55b71179be88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55b71179be70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55b71179be20 <col:68> 'void () __attribute__((noreturn))' Function 0x55b71179bbe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55b71179bf40 <col:89>
|   `-ReturnStmt 0x55b71179bf48 <col:91>
|-FunctionDecl 0x55b71179bfa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55b71179c060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55b71179c3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b71179c118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55b71179c198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55b71179c218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b71179c298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b71179c4a0 <line:11:22>
|-FunctionDecl 0x55b7117c2520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b71179c510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55b71179c590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55b7117c2350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b7117c23d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b7117c25e0 <line:14:22>
|-FunctionDecl 0x55b7117c2890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b7117c2650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55b7117c26d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55b7117c2750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55b7117c2948 <line:16:22>
|-TypedefDecl 0x55b7117c29b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55b71175bf70 'unsigned char'
|-TypedefDecl 0x55b7117c2a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55b71175bf90 'unsigned short'
|-TypedefDecl 0x55b7117c2a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55b71175bfb0 'unsigned int'
|-TypedefDecl 0x55b7117c2b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c2b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55b71175bed0 'signed char'
|-TypedefDecl 0x55b7117c2be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55b71175bf70 'unsigned char'
|-TypedefDecl 0x55b7117c2c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55b71175bef0 'short'
|-TypedefDecl 0x55b7117c2cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55b71175bf90 'unsigned short'
|-TypedefDecl 0x55b7117c2d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55b71175bf10 'int'
|-TypedefDecl 0x55b7117c2da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55b71175bfb0 'unsigned int'
|-TypedefDecl 0x55b7117c2e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c2e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c2ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c2f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c2fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c3048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55b71175bfb0 'unsigned int'
|-TypedefDecl 0x55b7117c30b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55b71175bfb0 'unsigned int'
|-TypedefDecl 0x55b7117c3128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c3198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c3208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55b71175bfb0 'unsigned int'
|-TypedefDecl 0x55b7117c3278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c32e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c3378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c33e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55b71175bf10 'int'
|-RecordDecl 0x55b7117c3440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55b7117c3588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55b7117c3640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55b7117c35e0 'struct __fsid_t' sugar
|   `-RecordType 0x55b7117c34c0 '__fsid_t'
|     `-Record 0x55b7117c3440 ''
|-TypedefDecl 0x55b7117c36c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c3738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c37a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c3818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55b71175bfb0 'unsigned int'
|-TypedefDecl 0x55b7117c3888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c38f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55b71175bfb0 'unsigned int'
|-TypedefDecl 0x55b7117c3968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c39d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55b71175bf10 'int'
|-TypedefDecl 0x55b7117c3a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55b71175bf10 'int'
|-TypedefDecl 0x55b7117c3ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55b71175bf10 'int'
|-TypedefDecl 0x55b7117c3b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55b71175c630 'void *'
|   `-BuiltinType 0x55b71175be70 'void'
|-TypedefDecl 0x55b7117c3b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c3c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c3c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c3ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c3d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c3dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c3e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c3ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c3f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c3f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c3ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c4088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55b7117c4050 '__off64_t' sugar
|   |-Typedef 0x55b7117c3378 '__off64_t'
|   `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c4180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55b7117c4140 '__quad_t *'
|   `-TypedefType 0x55b7117c40e0 '__quad_t' sugar
|     |-Typedef 0x55b7117c2ef8 '__quad_t'
|     `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c41f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55b71175cab0 'char *'
|   `-BuiltinType 0x55b71175beb0 'char'
|-TypedefDecl 0x55b7117c4260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c42d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55b71175bfb0 'unsigned int'
|-FunctionDecl 0x55b7117c5458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55b7117c5380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55b7117c5768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55b7117c5758 <line:73:3, col:34>
|     `-CallExpr 0x55b7117c5718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55b7117c5700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b7117c5690 <col:10> '<builtin fn type>' Function 0x55b7117c5500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55b7117c5740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b7117c56b0 <col:29> 'unsigned int' lvalue ParmVar 0x55b7117c5380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55b7117c5500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55b7117c55a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55b7117c5610 <col:10> Implicit
| `-ConstAttr 0x55b7117c5668 <col:10> Implicit
|-FunctionDecl 0x55b7117c58c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55b7117c57b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55b7117c5bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55b7117c5bc8 <line:78:3, col:34>
|     `-CallExpr 0x55b7117c5b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55b7117c5b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b7117c5af8 <col:10> '<builtin fn type>' Function 0x55b7117c5968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55b7117c5bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55b7117c5b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55b7117c57b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55b7117c5968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55b7117c5a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55b7117c5a78 <col:10> Implicit
| `-ConstAttr 0x55b7117c5ad0 <col:10> Implicit
|-TypedefDecl 0x55b7117c5c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-TypedefDecl 0x55b7117c5c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55b7117c5c60 '__time_t' sugar
|   |-Typedef 0x55b7117c3888 '__time_t'
|   `-BuiltinType 0x55b71175bf30 'long'
|-RecordDecl 0x55b7117c5cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55b7117c5da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55b7117c5e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55b7117c5ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55b7117c5e90 '__pid_t' sugar
|   |-Typedef 0x55b7117c33e8 '__pid_t'
|   `-BuiltinType 0x55b71175bf10 'int'
|-RecordDecl 0x55b7117c5f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55b7117c5fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55b7117c6030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55b7117c60f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55b7117c6158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-RecordDecl 0x55b7117c61b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55b7117c7480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55b7117c7530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55b7117c74d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55b7117c6230 'cpu_set_t'
|     `-Record 0x55b7117c61b0 ''
|-FunctionDecl 0x55b7117c7808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55b7117c75d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b7117c76e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55b7117c78b8 <line:108:19>
|-FunctionDecl 0x55b7117c7a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55b7117c7920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55b7117c7b38 <col:69>
|-FunctionDecl 0x55b7117c7cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55b7117c7ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55b7117c7d58 <col:64>
|-FunctionDecl 0x55b7117c8018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b7117c7dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b7117c7ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b7117c80c8 <line:114:22>
|-FunctionDecl 0x55b7117c83b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55b7117c8130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b7117c8228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55b7117c8460 <col:88>
|-FunctionDecl 0x55b7117c8718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b7117c84c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b7117c8548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55b7117c85d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b7117c87d0 <col:62>
|-FunctionDecl 0x55b7117c8948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55b7117c8838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55b7117c89f0 <col:63>
|-FunctionDecl 0x55b7117c8b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55b7117c8bb8 <col:47>
|-FunctionDecl 0x55b7117c8cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55b7117c8c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b7117c8d68 <col:69>
|-FunctionDecl 0x55b7117c8e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55b7117c8dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b7117c8f18 <col:69>
|-FunctionDecl 0x55b7117c91d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b7117c8f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b7117c90b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55b7117c9288 <col:88>
|-TypedefDecl 0x55b7117c9318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55b7117c92e0 '__clock_t' sugar
|   |-Typedef 0x55b7117c36c8 '__clock_t'
|   `-BuiltinType 0x55b71175bf30 'long'
|-TypedefDecl 0x55b7117c93c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55b7117c9370 '__clockid_t' sugar
|   |-Typedef 0x55b7117c3ab8 '__clockid_t'
|   `-BuiltinType 0x55b71175bf10 'int'
|-TypedefDecl 0x55b7117c9458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55b7117c9420 '__timer_t' sugar
|   |-Typedef 0x55b7117c3b28 '__timer_t'
|   `-PointerType 0x55b71175c630 'void *'
|     `-BuiltinType 0x55b71175be70 'void'
|-RecordDecl 0x55b7117c94b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55b7117c9570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55b7117c95d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55b7117c9640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55b7117c96a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55b7117c9710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55b7117c9778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55b7117c97e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55b7117c9848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55b7117c98b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55b7117c9918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55b7117c9980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55b7117c99d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55b7117c9a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55b7117c9b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55b7117c9bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55b7117c9d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55b7117c9e20 <col:45>
|-FunctionDecl 0x55b7117ca000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55b7117c9ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55b7117ca0a8 <col:54>
|-FunctionDecl 0x55b7117ca2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55b7117ca110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55b7117ca188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55b7117ca358 <line:158:22>
| `-ConstAttr 0x55b7117caff0 <col:63>
|-FunctionDecl 0x55b7117cb1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b7117cb0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b7117cb298 <col:56>
|-FunctionDecl 0x55b7117cb640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55b7117cb308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55b7117cb380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b7117cb400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55b7117cb4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55b7117cb700 <col:54>
|-RecordDecl 0x55b7117cb758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55b7117cb808 parent 0x55b71175be18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55b7117cba68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55b7117cbb08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55b7117cbb70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55b7117cbbd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55b7117cbcc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55b7117cbde8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55b7117cbd90 'struct __locale_struct *'
|   `-ElaboratedType 0x55b7117cbd20 'struct __locale_struct' sugar
|     `-RecordType 0x55b7117cb7e0 'struct __locale_struct'
|       `-Record 0x55b7117cb758 '__locale_struct'
|-TypedefDecl 0x55b7117cbe98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55b7117cbe60 '__locale_t' sugar
|   |-Typedef 0x55b7117cbde8 '__locale_t'
|   `-PointerType 0x55b7117cbd90 'struct __locale_struct *'
|     `-ElaboratedType 0x55b7117cbd20 'struct __locale_struct' sugar
|       `-RecordType 0x55b7117cb7e0 'struct __locale_struct'
|         `-Record 0x55b7117cb758 '__locale_struct'
|-FunctionDecl 0x55b7117cd2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55b7117cbf08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55b7117cbf80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b7117cd028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55b7117cd0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b7117cd130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55b7117cd368 <col:40>
|-FunctionDecl 0x55b7117cd558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b7117cd430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55b7117cd600 <col:66>
|-FunctionDecl 0x55b7117cd710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b7117cd668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55b7117cd7b8 <col:69>
|-FunctionDecl 0x55b7117cd9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b7117cd820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b7117cd8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b7117cda98 <col:52>
|-FunctionDecl 0x55b7117cdc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b7117cdb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b7117cdb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b7117cdcf0 <col:55>
|-FunctionDecl 0x55b7117cde88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55b7117cdd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55b7117cdf30 <col:62>
|-FunctionDecl 0x55b7117ce168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55b7117cdf98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55b7117ce210 <col:60>
|-FunctionDecl 0x55b7117ce438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b7117ce290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b7117ce310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55b7117ce4e8 <col:44>
|-FunctionDecl 0x55b7117ce6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b7117ce550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b7117ce5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55b7117ce7a8 <col:49>
|-VarDecl 0x55b7117ce8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55b7117ce928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55b7117ce9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55b7117cea70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55b7117ceba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55b7117cec40 <col:42>
|-VarDecl 0x55b7117cecb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55b7117ced30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55b7117ceeb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55b7117ceda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55b7117cef60 <col:57>
|-FunctionDecl 0x55b7117cf0d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b7117cefe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b7117cf178 <col:56>
|-FunctionDecl 0x55b7117cf288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b7117cf1f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55b7117cf330 <col:59>
|-FunctionDecl 0x55b7117cf438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55b7117cf3a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55b7117cf4e0 <col:48>
| `-ConstAttr 0x55b7117cf538 <col:89>
|-FunctionDecl 0x55b7117cf798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b7117cf5e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55b7117cf678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55b7117cf9f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b7117cf888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b7117cf918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55b7117cfaa8 <col:88>
|-FunctionDecl 0x55b7117cfc40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b7117cfb10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b7117cfba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55b7117cfcf0 <col:88>
|-FunctionDecl 0x55b7117cff08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55b7117cfd58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b7117cfde8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55b7117cffb8 <line:209:22>
|-FunctionDecl 0x55b7117d0358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b7117d0020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b7117d00e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55b7117d0170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55b7117d0200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55b7117d0658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55b7117d0458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55b7117d0530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55b7117d0708 <col:85>
|-FunctionDecl 0x55b7117d0af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55b7117d0770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b7117d08a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55b7117d09b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55b7117d0bb0 <col:52>
|-FunctionDecl 0x55b7117d0d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55b7117d0c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b7117d0dd0 <col:61>
|-FunctionDecl 0x55b7117d1248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55b7117d0e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b7117d0eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55b7117d0fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55b7117d10f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55b7117d1308 <col:62>
|-FunctionDecl 0x55b7117d1528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55b7117d1370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b7117d1400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55b7117d15d8 <line:222:22>
|-FunctionDecl 0x55b7117d16d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55b7117d1640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b7117d1780 <col:65>
|-TypedefDecl 0x55b7117d17f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55b71175bfd0 'unsigned long'
|-RecordDecl 0x55b7117d1848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55b7117d1990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b7117d19f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b7117d1aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55b7117d1a50 'union pthread_attr_t' sugar
|   `-RecordType 0x55b7117d18d0 'union pthread_attr_t'
|     `-Record 0x55b7117d1848 'pthread_attr_t'
|-RecordDecl 0x55b7117d1b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55b7117d1c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55b7117d1cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55b7117d1da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55b7117d1d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55b7117d1b80 'struct __pthread_internal_list'
|     `-Record 0x55b7117d1b00 '__pthread_internal_list'
|-RecordDecl 0x55b7117d1e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55b7117d1eb8 parent 0x55b71175be18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55b7117d1f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b7117d1ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55b7117d2060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55b7117d6110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55b7117d6178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55b7117d61e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55b7117d6268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55b7117d6320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55b7117d6410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55b7117d6478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b7117d6600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55b7117d65a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55b7117d1e90 'pthread_mutex_t'
|     `-Record 0x55b7117d1e10 ''
|-RecordDecl 0x55b7117d6670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55b7117d67b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b7117d6818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b7117d68d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55b7117d6870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55b7117d66f0 'pthread_mutexattr_t'
|     `-Record 0x55b7117d6670 ''
|-RecordDecl 0x55b7117d6940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55b7117d69e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55b7117d6ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b7117d6b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55b7117d6b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55b7117d6be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55b7117d6c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55b7117d6cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55b7117d6d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55b7117d6d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55b7117d6e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./test/rfi009_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./test/rfi009_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55b7117d6f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55b7117d6f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55b7117d8130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55b7117d7070 'union pthread_cond_t' sugar
|   `-RecordType 0x55b7117d69c0 'pthread_cond_t'
|     `-Record 0x55b7117d6940 ''
|-RecordDecl 0x55b7117d81a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55b7117d82a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b7117d8308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b7117d83c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55b7117d8360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55b7117d8220 'pthread_condattr_t'
|     `-Record 0x55b7117d81a0 ''
|-TypedefDecl 0x55b7117d8448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55b71175bfb0 'unsigned int'
|-TypedefDecl 0x55b7117d84b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55b71175bf10 'int'
|-RecordDecl 0x55b7117d8510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55b7117d85b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55b7117d8680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b7117d86e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55b7117d8750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55b7117d87b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55b7117d8820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55b7117d8888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55b7117d88f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55b7117d8958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55b7117d89c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55b7117d8a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55b7117d8a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55b7117d8b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./test/rfi009_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./test/rfi009_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55b7117d8be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b7117d8c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b7117d8da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55b7117d8d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55b7117d8590 'pthread_rwlock_t'
|     `-Record 0x55b7117d8510 ''
|-RecordDecl 0x55b7117d8e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55b7117d8f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55b7117d8fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b7117d9070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55b7117d9010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55b7117d8e90 'pthread_rwlockattr_t'
|     `-Record 0x55b7117d8e10 ''
|-TypedefDecl 0x55b7117da140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55b71175bf14 'volatile int' volatile
|   `-BuiltinType 0x55b71175bf10 'int'
|-RecordDecl 0x55b7117da198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55b7117da2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55b7117da348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b7117da400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55b7117da3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55b7117da220 'pthread_barrier_t'
|     `-Record 0x55b7117da198 ''
|-RecordDecl 0x55b7117da470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55b7117da570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b7117da5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b7117da690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55b7117da630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55b7117da4f0 'pthread_barrierattr_t'
|     `-Record 0x55b7117da470 ''
|-TypedefDecl 0x55b7117da7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55b7117da740 'long [8]' 8 
|   `-BuiltinType 0x55b71175bf30 'long'
|-EnumDecl 0x55b7117da800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55b7117da8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55b7117da918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55b7117da968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55b7117daa38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55b7117daa88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55b7117daad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55b7117dab28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55b7117dabb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55b7117dab98 <col:26> 'int'
| |   `-DeclRefExpr 0x55b7117dab78 <col:26> 'int' EnumConstant 0x55b7117daa38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55b7117dac38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55b7117dac20 <col:29> 'int'
| |   `-DeclRefExpr 0x55b7117dac00 <col:29> 'int' EnumConstant 0x55b7117daa88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55b7117dacc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55b7117daca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55b7117dac88 <col:30> 'int' EnumConstant 0x55b7117daad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55b7117dad48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55b7117dad30 <col:27> 'int'
|     `-DeclRefExpr 0x55b7117dad10 <col:27> 'int' EnumConstant 0x55b7117dabb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55b7117dad98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55b7117dae68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55b7117daef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55b7117daed8 <col:30> 'int'
| |   `-DeclRefExpr 0x55b7117daeb8 <col:30> 'int' EnumConstant 0x55b7117dae68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55b7117daf40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55b7117dafc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55b7117dafb0 <col:29> 'int'
|     `-DeclRefExpr 0x55b7117daf90 <col:29> 'int' EnumConstant 0x55b7117daf40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55b7117db018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55b7117db0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55b7117db150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55b7117db1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55b7117db1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55b7117db2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55b7117db308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55b7117db358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55b7117db3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55b7117db3c8 <col:31> 'int'
|     `-DeclRefExpr 0x55b7117db3a8 <col:31> 'int' EnumConstant 0x55b7117db2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55b7117db430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55b7117db4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55b7117db548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55b7117db598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55b7117db668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55b7117db6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55b7117db708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55b7117db7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55b7117db828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55b7117db878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55b7117dbab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55b7117dbb20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55b7117dbb88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55b7117dbca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55b7117dbcf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55b7117dbdc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55b7117dbe18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55b7117dbe68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55b7117dbf38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55b7117dbf88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55b7117dc5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55b7117dc080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55b7117dc1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b7117dc3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55b7117dc420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55b7117dc678 <col:47>
| |-NonNullAttr 0x55b7117dc6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55b7117dc708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55b7117dc830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55b7117dc760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55b7117dca88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55b7117dc8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55b7117dc968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55b7117dcc58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55b7117dcb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55b7117dcd00 <col:60>
|-FunctionDecl 0x55b7117dce50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55b7117dcef0 <col:54>
| `-ConstAttr 0x55b7117dcf48 <col:95>
|-FunctionDecl 0x55b7117de990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55b7117dcf80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b7117dcff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55b7117dea40 <line:395:19>
| `-ConstAttr 0x55b7117dea98 <col:60>
|-FunctionDecl 0x55b7117dec68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b7117deb30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b7117ded10 <col:71>
| `-NonNullAttr 0x55b7117ded68 <col:112, col:126> 1
|-FunctionDecl 0x55b7117dee70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b7117dedb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b7117def18 <line:398:22>
| `-NonNullAttr 0x55b7117def70 <col:63, col:77> 1
|-FunctionDecl 0x55b7117df198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55b7117defb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b7117df038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55b7117df248 <line:401:22>
| `-NonNullAttr 0x55b7117df2a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117df4a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b7117df2e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b7117df368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55b7117df558 <line:404:22>
| `-NonNullAttr 0x55b7117df5b0 <col:63, col:77> 1
|-FunctionDecl 0x55b7117df808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55b7117df5f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b7117df6a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55b7117df8b8 <line:407:22>
| `-NonNullAttr 0x55b7117df910 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117e0b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b7117e09b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b7117e0a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b7117e0c18 <line:410:22>
| `-NonNullAttr 0x55b7117e0c70 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e0ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b7117e0cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b7117e0d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b7117e0f58 <line:413:22>
| `-NonNullAttr 0x55b7117e0fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117e11e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b7117e0ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b7117e1088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55b7117e1298 <col:37>
| `-NonNullAttr 0x55b7117e12f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55b7117e14d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117e1338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b7117e13b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55b7117e1588 <line:419:22>
| `-NonNullAttr 0x55b7117e15e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117e1768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b7117e1628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b7117e16a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55b7117e1818 <line:421:22>
| `-NonNullAttr 0x55b7117e1870 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e1a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117e18b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b7117e1938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55b7117e1ae8 <line:424:22>
| `-NonNullAttr 0x55b7117e1b40 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117e1cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b7117e1b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b7117e1c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55b7117e1d78 <line:427:22>
| `-NonNullAttr 0x55b7117e1dd0 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e1f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117e1e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b7117e1e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55b7117e2028 <line:430:22>
| `-NonNullAttr 0x55b7117e2080 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117e2208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b7117e20c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b7117e2148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55b7117e22b8 <line:432:22>
| `-NonNullAttr 0x55b7117e2310 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e2538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55b7117e2358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b7117e23d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55b7117e25e8 <line:435:22>
| |-NonNullAttr 0x55b7117e2640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55b7117e2678 <col:100> "" ""
|-FunctionDecl 0x55b7117e2888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55b7117e26c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b7117e2748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55b7117e2938 <line:438:22>
| |-NonNullAttr 0x55b7117e2990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55b7117e29d8 <col:97> "" ""
|-FunctionDecl 0x55b7117e2bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b7117e2a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b7117e2aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b7117e2c78 <line:441:22>
| `-NonNullAttr 0x55b7117e2cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117e2e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b7117e2d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b7117e2d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b7117e2f00 <line:444:22>
| `-NonNullAttr 0x55b7117e2f58 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e3248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b7117e2fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b7117e3028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55b7117e30a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b7117e3300 <line:448:22>
| `-NonNullAttr 0x55b7117e3358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55b7117e3608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55b7117e33b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b7117e3430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55b7117e34a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b7117e36c0 <col:43>
| `-NonNullAttr 0x55b7117e3718 <col:84, col:98> 1
|-FunctionDecl 0x55b7117e3a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b7117e3768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b7117e37e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55b7117e3878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55b7117e3ad8 <line:453:22>
| `-NonNullAttr 0x55b7117e3b30 <col:63, col:77> 3
|-FunctionDecl 0x55b7117e3e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b7117e3b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b7117e3bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55b7117e3c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b7117e3ec0 <line:457:22>
| `-NonNullAttr 0x55b7117e3f18 <col:63, col:80> 2 3
|-FunctionDecl 0x55b7117e4108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55b7117e3f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b7117e3fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55b7117e41b8 <line:459:22>
|-FunctionDecl 0x55b7117e4588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55b7117e4280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55b7117e4420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55b7117e4638 <col:52, col:69> 1 2
|-FunctionDecl 0x55b7117e47e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55b7117e46c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55b7117e4740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55b7117e49f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55b7117e48a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55b7117e4928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55b7117e4b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55b7117e4ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55b7117e4c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55b7117e4d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55b7117e4dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55b7117e4ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55b7117e4f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55b7117e5100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/rfi009_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55b7117e51f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55b7117e52b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55b7117e5250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55b7117e4db0 '__pthread_unwind_buf_t'
| |   `-Record 0x55b7117e4d28 ''
| `-AlignedAttr 0x55b7117e5308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55b7117e5380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55b7117e54e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55b7117e5548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55b7117e55b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55b7117e5618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55b7117e5820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b7117e5710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b7117e5a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b7117e58d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b7117e5bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b7117e5ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55b7117e5c68 <line:488:22>
|-RecordDecl 0x55b7117e5cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55b7117e5fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55b7117e5e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55b7117e5eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55b7117e6088 <col:86>
| `-ReturnsTwiceAttr 0x55b7117e60e0 <col:12> Implicit
|-FunctionDecl 0x55b7117e6408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b7117e61b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55b7117e62c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b7117e64b8 <line:494:22>
| `-NonNullAttr 0x55b7117e6510 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e6688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b7117e6558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b7117e6730 <line:496:22>
| `-NonNullAttr 0x55b7117e6788 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e6890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b7117e67d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b7117e6938 <line:498:22>
| `-NonNullAttr 0x55b7117e6990 <col:52, col:66> 1
|-FunctionDecl 0x55b7117e7ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b7117e7a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b7117e7b80 <line:500:22>
| `-NonNullAttr 0x55b7117e7bd8 <col:52, col:66> 1
|-FunctionDecl 0x55b7117e7e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b7117e7c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b7117e7cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b7117e7ec8 <col:36>
| `-NonNullAttr 0x55b7117e7f20 <col:66, col:83> 1 2
|-FunctionDecl 0x55b7117e8020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b7117e7f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b7117e80c8 <line:505:22>
| `-NonNullAttr 0x55b7117e8120 <col:52, col:66> 1
|-FunctionDecl 0x55b7117e83b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117e81d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b7117e8250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b7117e8468 <line:509:22>
| `-NonNullAttr 0x55b7117e84c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117e8788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55b7117e8508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b7117e8588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55b7117e8608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55b7117e8840 <line:513:22>
| `-NonNullAttr 0x55b7117e8898 <col:63, col:80> 1 3
|-FunctionDecl 0x55b7117e8a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b7117e88e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b7117e8ad8 <line:515:22>
| `-NonNullAttr 0x55b7117e8b30 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e8d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b7117e8be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b7117e8dc0 <line:517:22>
| `-NonNullAttr 0x55b7117e8e18 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e8f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b7117e8e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b7117e8fc8 <line:519:22>
| `-NonNullAttr 0x55b7117e9020 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e9248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117e9068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b7117e90e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b7117e92f8 <line:523:22>
| `-NonNullAttr 0x55b7117e9350 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117e9558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b7117e9398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b7117e9418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55b7117e9608 <line:526:22>
| `-NonNullAttr 0x55b7117e9660 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e9808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117e96a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b7117e9728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55b7117e98b8 <line:529:22>
| `-NonNullAttr 0x55b7117e9910 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117e9b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b7117e9958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b7117e9a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55b7117e9bb0 <line:531:22>
| `-NonNullAttr 0x55b7117e9c08 <col:63, col:77> 1
|-FunctionDecl 0x55b7117e9db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117e9c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b7117e9cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55b7117e9e68 <line:535:22>
| `-NonNullAttr 0x55b7117e9ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117ea048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b7117e9f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b7117e9f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55b7117ea0f8 <line:538:22>
| `-NonNullAttr 0x55b7117ea150 <col:63, col:77> 1
|-FunctionDecl 0x55b7117ea2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117ea198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b7117ea218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b7117ea3a8 <line:542:22>
| `-NonNullAttr 0x55b7117ea400 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117ea588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b7117ea448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b7117ea4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55b7117ea638 <line:545:22>
| `-NonNullAttr 0x55b7117ea690 <col:63, col:77> 1
|-FunctionDecl 0x55b7117ea878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55b7117ea6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b7117ea758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55b7117ea928 <line:548:22>
| `-NonNullAttr 0x55b7117ea980 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117ebb38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b7117ea9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b7117eba78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55b7117ebbe8 <line:551:22>
| `-NonNullAttr 0x55b7117ebc40 <col:63, col:77> 1
|-FunctionDecl 0x55b7117ebf78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55b7117ebd20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b7117ebe30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55b7117ec028 <col:29>
| `-NonNullAttr 0x55b7117ec080 <col:70, col:84> 1
|-FunctionDecl 0x55b7117ec1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b7117ec0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b7117ec2a0 <line:556:22>
| `-NonNullAttr 0x55b7117ec2f8 <col:63, col:77> 1
|-FunctionDecl 0x55b7117ec400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b7117ec348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b7117ec4a8 <line:558:22>
| `-NonNullAttr 0x55b7117ec500 <col:52, col:66> 1
|-FunctionDecl 0x55b7117ec600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b7117ec548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b7117ec6a8 <line:560:19>
| `-NonNullAttr 0x55b7117ec700 <col:49, col:63> 1
|-FunctionDecl 0x55b7117ec938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b7117ec748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b7117ec7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b7117ec9e8 <col:39>
| `-NonNullAttr 0x55b7117eca70 <col:69, col:86> 1 2
|-FunctionDecl 0x55b7117ecb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b7117ecab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b7117ecc18 <line:565:22>
| `-NonNullAttr 0x55b7117ecc70 <col:52, col:66> 1
|-FunctionDecl 0x55b7117ecd70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b7117eccb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b7117ece18 <line:567:22>
| `-NonNullAttr 0x55b7117ece70 <col:52, col:66> 1
|-FunctionDecl 0x55b7117ed028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b7117eceb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b7117ecf48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b7117ed0d8 <col:39>
| `-NonNullAttr 0x55b7117ed130 <col:69, col:86> 1 2
|-FunctionDecl 0x55b7117ed230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b7117ed178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b7117ed2d8 <line:572:22>
| `-NonNullAttr 0x55b7117ed330 <col:52, col:66> 1
|-FunctionDecl 0x55b7117ed518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b7117ed3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b7117ed5c0 <line:574:22>
| `-NonNullAttr 0x55b7117ed618 <col:63, col:77> 1
|-FunctionDecl 0x55b7117ed720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b7117ed668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b7117ed7c8 <line:576:22>
| `-NonNullAttr 0x55b7117ed820 <col:63, col:77> 1
|-FunctionDecl 0x55b7117eda80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117ed868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b7117ed8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b7117edb30 <line:580:22>
| `-NonNullAttr 0x55b7117edb88 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117edd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b7117edbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b7117edc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55b7117ede48 <line:583:22>
| `-NonNullAttr 0x55b7117edea0 <col:63, col:77> 1
|-FunctionDecl 0x55b7117ee048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117edee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b7117edf68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55b7117ee0f8 <line:587:22>
| `-NonNullAttr 0x55b7117ee150 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117ee2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b7117ee198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b7117ee218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55b7117ee388 <col:36>
| `-NonNullAttr 0x55b7117ee3e0 <col:77, col:91> 1
|-FunctionDecl 0x55b7117ee718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55b7117ee4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b7117ee5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55b7117ee7c8 <line:592:22>
| `-NonNullAttr 0x55b7117ee820 <col:63, col:77> 1
|-FunctionDecl 0x55b7117ee998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b7117ee868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b7117eea40 <line:594:22>
| `-NonNullAttr 0x55b7117eeac0 <col:63, col:77> 1
|-FunctionDecl 0x55b7117eebc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b7117eeb08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b7117eec68 <line:596:22>
| `-NonNullAttr 0x55b7117eecc0 <col:52, col:66> 1
|-FunctionDecl 0x55b7117eedc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b7117eed08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b7117eee68 <line:598:22>
| `-NonNullAttr 0x55b7117eeec0 <col:52, col:66> 1
|-FunctionDecl 0x55b7117ef0e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55b7117eef08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b7117eef80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55b7117ef198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55b7117ef4c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b7117ef218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b7117ef290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b7117ef320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55b7117ef580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55b7117ef798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b7117ef660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b7117ef840 <line:607:22>
| `-NonNullAttr 0x55b7117ef898 <col:63, col:77> 1
|-FunctionDecl 0x55b7117ef9a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b7117ef8e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b7117efa48 <line:609:22>
| `-NonNullAttr 0x55b7117efad0 <col:63, col:77> 1
|-FunctionDecl 0x55b7117efcf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117efb18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b7117efb98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b7117efda8 <line:613:22>
| `-NonNullAttr 0x55b7117efe00 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117f0008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55b7117efe48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b7117efec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55b7117f00b8 <col:37>
| `-NonNullAttr 0x55b7117f0110 <col:78, col:92> 1
|-FunctionDecl 0x55b7117f0328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55b7117f0158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b7117f0200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55b7117f03d8 <line:619:22>
| `-NonNullAttr 0x55b7117f0430 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117f05f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55b7117f0478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b7117f04f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55b7117f06a8 <line:622:22>
| `-NonNullAttr 0x55b7117f0700 <col:63, col:77> 1
|-FunctionDecl 0x55b7117f09a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55b7117f07e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55b7117f0860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55b7117f0a58 <line:624:22>
| `-NonNullAttr 0x55b7117f0ae0 <col:63, col:77> 1
|-FunctionDecl 0x55b7117f0c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b7117f0b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b7117f0d00 <line:626:22>
| `-NonNullAttr 0x55b7117f0d58 <col:63, col:77> 1
|-FunctionDecl 0x55b7117f0e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b7117f0da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b7117f0f08 <line:628:22>
| `-NonNullAttr 0x55b7117f0f60 <col:52, col:66> 1
|-FunctionDecl 0x55b7117f1060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b7117f0fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b7117f1108 <line:630:22>
| `-NonNullAttr 0x55b7117f1160 <col:52, col:66> 1
|-FunctionDecl 0x55b7117f1260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b7117f11a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b7117f1308 <line:632:22>
| `-NonNullAttr 0x55b7117f1360 <col:52, col:66> 1
|-FunctionDecl 0x55b7117f1738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55b7117f1440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55b7117f1550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b7117f15d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55b7117f17f0 <line:636:22>
| `-NonNullAttr 0x55b7117f1848 <col:63, col:77> 1
|-FunctionDecl 0x55b7117f19c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b7117f1898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b7117f1a70 <line:638:22>
| `-NonNullAttr 0x55b7117f2b00 <col:63, col:77> 1
|-FunctionDecl 0x55b7117f2c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b7117f2b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b7117f2ca8 <line:640:22>
| `-NonNullAttr 0x55b7117f2d00 <col:52, col:66> 1
|-FunctionDecl 0x55b7117f2ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b7117f2db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b7117f2f90 <line:642:22>
| `-NonNullAttr 0x55b7117f2fe8 <col:63, col:77> 1
|-FunctionDecl 0x55b7117f30f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b7117f3038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b7117f3198 <line:644:22>
| `-NonNullAttr 0x55b7117f31f0 <col:63, col:77> 1
|-FunctionDecl 0x55b7117f3418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b7117f3238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b7117f32b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b7117f34c8 <line:648:22>
| `-NonNullAttr 0x55b7117f3520 <col:63, col:80> 1 2
|-FunctionDecl 0x55b7117f3728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55b7117f3568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55b7117f35e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55b7117f37d8 <line:651:22>
| `-NonNullAttr 0x55b7117f3830 <col:63, col:77> 1
|-FunctionDecl 0x55b7117f3b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55b7117f3910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55b7117f3a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55b7117f3c48 <line:654:22>
| `-NonNullAttr 0x55b7117f3ca0 <col:63, col:77> 1
|-FunctionDecl 0x55b7117f3df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55b7117f3ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b7117f3ea0 <col:69>
|-FunctionDecl 0x55b7117f4018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55b7117f3f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b7117f40c0 <col:72>
|-FunctionDecl 0x55b7117f42f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55b7117f4128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55b7117f41d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55b7117f43a8 <col:44>
|-FunctionDecl 0x55b7117f45c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55b7117f4410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b7117f4488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55b7117f4678 <line:661:22>
| `-NonNullAttr 0x55b7117f46d0 <col:63, col:77> 2
|-FunctionDecl 0x55b7117f4b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55b7117f47b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55b7117f48c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55b7117f49d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55b7117f4be8 <col:47>
|-FunctionDecl 0x55b7117f4cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55b7117f4c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b7117f4e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55b7117f4db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b7117f4fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55b7117f4f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b7117f5068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55b7117f5128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55b7117f51e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55b7117f52a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55b7117f5320 prev 0x55b7117f52a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55b7117f5388 <col:24> 'int' 0
|-VarDecl 0x55b7117f53c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55b7117f5440 prev 0x55b7117f53c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55b7117f54a8 <col:27> 'int' 0
|-VarDecl 0x55b7117f54e0 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55b7117f5560 prev 0x55b7117f54e0 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55b7117f55c8 <col:27> 'int' 0
|-VarDecl 0x55b7117f5600 <line:678:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55b7117f5680 prev 0x55b7117f5600 <line:679:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55b7117f56e8 <col:27> 'int' 0
|-VarDecl 0x55b7117f5720 <line:680:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55b7117f57a0 prev 0x55b7117f5720 <line:681:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55b7117f5808 <col:27> 'int' 0
|-VarDecl 0x55b7117f5838 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55b7117f58b0 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55b7117f5930 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x55b7117f59b0 prev 0x55b7117f5930 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55b7117f5a18 <col:9> 'int' 0
|-VarDecl 0x55b7117f5a50 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x55b7117f5b00 prev 0x55b7117f5a50 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55b7117f5b68 <col:9> 'int' 0
|-VarDecl 0x55b7117f5b98 <line:688:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55b7117f5c18 <line:689:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55b7117f5c90 <line:690:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55b7117f5d08 <line:691:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55b7117f5d80 <line:692:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55b7117f5df8 <line:693:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55b7117f5e70 <line:694:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55b7117f5ee8 <line:695:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55b7117f5f60 <line:696:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55b7117f5fd8 <line:697:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55b7117f6050 <line:698:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55b7117f60d0 <line:699:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55b7117f6150 <line:700:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55b7117f61c8 <line:701:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55b7117f6248 <line:702:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55b7117f62c0 <line:703:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55b7117f6338 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55b7117f63b0 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55b7117f64c8 prev 0x55b7117f4cf0 <line:706:1, line:733:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55b7117f6430 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b7117f9428 <line:707:1, line:733:1>
|   |-CallExpr 0x55b7117f65d8 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117f65c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117f6570 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b7117f6650 <line:709:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b7117f65f8 <col:3> 'int' lvalue Var 0x55b7117f5440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b7117f6638 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f6618 <col:25> 'int' lvalue Var 0x55b7117f59b0 'x' 'int'
|   |-CallExpr 0x55b7117f66a8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117f6690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117f6670 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b7117f6700 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117f66e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117f66c8 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b7117f67c8 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f6720 <col:3> '_Bool' lvalue Var 0x55b7117f6338 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55b7117f67a8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b7117f6790 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b7117f6740 <col:19> '_Bool (void)' Function 0x55b71179b770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b7117f6860 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f67e8 <col:3> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55b7117f6840 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b7117f6828 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b7117f6808 <col:19> '_Bool (void)' Function 0x55b71179b770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b7117f68d8 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f6880 <col:3> '_Bool' lvalue Var 0x55b7117f5b98 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117f68c0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f68a0 <col:21> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55b7117f6950 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b7117f68f8 <col:3> 'int' lvalue Var 0x55b7117f5c18 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55b7117f6938 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f6918 <col:15> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   |-BinaryOperator 0x55b7117f6da0 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55b7117f6970 <col:3> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   | `-ConditionalOperator 0x55b7117f6d70 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55b7117f6b98 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55b7117f6aa0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55b7117f69c8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55b7117f69b0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55b7117f6990 <col:8> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55b7117f6a80 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55b7117f6a18 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55b7117f6a00 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55b7117f69e0 <col:27> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55b7117f6a68 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55b7117f6a50 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55b7117f6a30 <col:46> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55b7117f6b78 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55b7117f6b10 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55b7117f6ae0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55b7117f6ac0 <col:65> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55b7117f6b60 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55b7117f6b48 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55b7117f6b28 <col:84> '_Bool' lvalue Var 0x55b7117f5ee8 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55b7117f6d58 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117f6bb8 <col:101> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   |   `-ParenExpr 0x55b7117f6d38 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55b7117f6d08 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55b7117f6c78 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b7117f6c30 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b7117f6c18 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b7117f6bd8 <col:106> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b7117f6c60 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b7117f6c48 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b7117f6bf8 <col:124> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55b7117f6cd8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b7117f6c98 <col:141> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55b7117f6cf0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117f6cb8 <col:153> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55b7117f72b0 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b7117f6dc0 <col:3> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55b7117f7280 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b7117f7250 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b7117f7238 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b7117f6de0 <col:15> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b7117f7268 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117f6e00 <col:31> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55b7117f7218 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b7117f71e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b7117f7010 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b7117f6f30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b7117f6e58 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b7117f6e40 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b7117f6e20 <col:45> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b7117f6f10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b7117f6ea8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b7117f6e90 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b7117f6e70 <col:64> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55b7117f6ef8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b7117f6ee0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b7117f6ec0 <col:83> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b7117f6ff0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b7117f6f88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b7117f6f70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b7117f6f50 <col:102> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55b7117f6fd8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b7117f6fc0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b7117f6fa0 <col:121> '_Bool' lvalue Var 0x55b7117f5ee8 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55b7117f71d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b7117f7030 <col:138> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55b7117f71b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b7117f7180 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b7117f70f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b7117f70a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b7117f7090 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b7117f7050 <col:151> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b7117f70d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b7117f70c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b7117f7070 <col:169> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55b7117f7150 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b7117f7110 <col:186> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55b7117f7168 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b7117f7130 <col:198> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55b7117f77c0 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b7117f72d0 <col:3> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55b7117f7790 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b7117f7760 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b7117f7748 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b7117f72f0 <col:15> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b7117f7778 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117f7310 <col:31> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55b7117f7728 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b7117f76f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b7117f7520 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b7117f7440 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b7117f7368 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b7117f7350 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b7117f7330 <col:45> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b7117f7420 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b7117f73b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b7117f73a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b7117f7380 <col:64> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55b7117f7408 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b7117f73f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b7117f73d0 <col:83> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b7117f7500 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b7117f7498 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b7117f7480 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b7117f7460 <col:102> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55b7117f74e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b7117f74d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b7117f74b0 <col:121> '_Bool' lvalue Var 0x55b7117f5ee8 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55b7117f76e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b7117f7540 <col:138> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55b7117f76c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b7117f7690 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b7117f7600 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b7117f75b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b7117f75a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b7117f7560 <col:151> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b7117f75e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b7117f75d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b7117f7580 <col:169> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55b7117f7660 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b7117f7620 <col:186> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55b7117f7678 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b7117f7640 <col:198> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55b7117f7d78 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f77e0 <col:3> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117f7d60 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117f7d30 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b7117f7ce8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117f7cd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117f7800 <col:20> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117f7d18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117f7d00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117f7820 <col:36> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55b7117f7cb0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b7117f7c80 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b7117f7a30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b7117f7950 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b7117f7878 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b7117f7860 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b7117f7840 <col:55> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b7117f7930 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b7117f78c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b7117f78b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b7117f7890 <col:74> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b7117f7918 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b7117f7900 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b7117f78e0 <col:93> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b7117f7a10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b7117f79a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b7117f7990 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b7117f7970 <col:112> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b7117f79f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b7117f79e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b7117f79c0 <col:131> '_Bool' lvalue Var 0x55b7117f5ee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b7117f7c68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b7117f7c50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b7117f7a50 <col:148> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55b7117f7c30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b7117f7c00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b7117f7b20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b7117f7ac8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b7117f7ab0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b7117f7a70 <col:166> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b7117f7af8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b7117f7ae0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b7117f7a90 <col:184> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b7117f7bb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b7117f7b70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b7117f7b40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b7117f7be8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b7117f7bd0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b7117f7b98 <col:212> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b7117f8340 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f7d98 <col:3> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117f8328 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117f82f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b7117f82b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117f8298 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117f7db8 <col:20> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117f82e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117f82c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117f7dd8 <col:36> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55b7117f8278 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b7117f8248 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b7117f7fe8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b7117f7f08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b7117f7e30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b7117f7e18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b7117f7df8 <col:55> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b7117f7ee8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b7117f7e80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b7117f7e68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b7117f7e48 <col:74> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b7117f7ed0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b7117f7eb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b7117f7e98 <col:93> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b7117f7fc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b7117f7f60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b7117f7f48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b7117f7f28 <col:112> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b7117f7fb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b7117f7f98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b7117f7f78 <col:131> '_Bool' lvalue Var 0x55b7117f5ee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b7117f8230 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b7117f8218 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b7117f8008 <col:148> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55b7117f81f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b7117f81c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b7117f80c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b7117f8080 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b7117f8068 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b7117f8028 <col:166> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b7117f80b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b7117f8098 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b7117f8048 <col:184> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b7117f8198 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b7117f8118 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b7117f80e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b7117f81b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b7117f8170 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b7117f8140 <col:219> 'int' 0
|   |-BinaryOperator 0x55b7117f88e8 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f8360 <col:3> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117f88d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117f88a0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b7117f8858 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117f8840 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117f8380 <col:20> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117f8888 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117f8870 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117f83a0 <col:36> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55b7117f8820 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b7117f87f0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b7117f85b0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b7117f84d0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b7117f83f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b7117f83e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b7117f83c0 <col:55> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b7117f84b0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b7117f8448 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b7117f8430 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b7117f8410 <col:74> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b7117f8498 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b7117f8480 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b7117f8460 <col:93> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b7117f8590 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b7117f8528 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b7117f8510 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b7117f84f0 <col:112> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b7117f8578 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b7117f8560 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b7117f8540 <col:131> '_Bool' lvalue Var 0x55b7117f5ee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b7117f87d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b7117f87c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b7117f85d0 <col:148> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55b7117f87a0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b7117f8770 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b7117f8690 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b7117f8648 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b7117f8630 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b7117f85f0 <col:166> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b7117f8678 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b7117f8660 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b7117f8610 <col:184> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b7117f8728 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b7117f86e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b7117f86b0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b7117f8758 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b7117f8740 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b7117f8708 <col:212> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55b7117f8ec0 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f8908 <col:3> '_Bool' lvalue Var 0x55b7117f5ee8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117f8ea8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117f8e78 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b7117f8e30 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117f8e18 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117f8928 <col:20> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117f8e60 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117f8e48 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117f8948 <col:36> '_Bool' lvalue Var 0x55b7117f5ee8 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55b7117f8df8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b7117f8dc8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b7117f8b68 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b7117f8a78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b7117f89a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b7117f8988 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b7117f8968 <col:55> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b7117f8a58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b7117f89f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b7117f89d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b7117f89b8 <col:74> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b7117f8a40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b7117f8a28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b7117f8a08 <col:93> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b7117f8b48 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b7117f8ad0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b7117f8ab8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b7117f8a98 <col:112> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b7117f8b30 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b7117f8b08 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b7117f8ae8 <col:131> '_Bool' lvalue Var 0x55b7117f5ee8 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b7117f8db0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b7117f8d98 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b7117f8b88 <col:148> '_Bool' lvalue Var 0x55b7117f5ee8 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55b7117f8d78 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b7117f8d48 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b7117f8c48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b7117f8c00 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b7117f8be8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b7117f8ba8 <col:166> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b7117f8c30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b7117f8c18 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b7117f8bc8 <col:184> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b7117f8d18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b7117f8c98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b7117f8c68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b7117f8d30 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b7117f8cf0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b7117f8cc0 <col:219> 'int' 0
|   |-BinaryOperator 0x55b7117f8f38 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b7117f8ee0 <col:3> 'int' lvalue Var 0x55b7117f5560 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55b7117f8f20 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f8f00 <col:25> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   |-BinaryOperator 0x55b7117f9068 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55b7117f8f58 <col:3> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   | `-ConditionalOperator 0x55b7117f9038 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55b7117f8ff0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b7117f8fd8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b7117f8f78 <col:7> '_Bool' lvalue Var 0x55b7117f5b98 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55b7117f9008 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117f8f98 <col:25> 'int' lvalue Var 0x55b7117f5c18 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55b7117f9020 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b7117f8fb8 <col:37> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   |-BinaryOperator 0x55b7117f9100 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f9088 <col:3> '_Bool' lvalue Var 0x55b7117f5b98 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b7117f90d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b7117f90a8 <col:28> 'int' 0
|   |-CallExpr 0x55b7117f9158 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117f9140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117f9120 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b7117f91b0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117f9198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117f9178 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55b7117f9208 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117f91f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117f91d0 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b7117f9260 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117f9248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117f9228 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b7117f9318 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b7117f9280 <col:3> 'int' lvalue Var 0x55b7117f5320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b7117f92f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b7117f92e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117f92a0 <col:22> 'int' lvalue Var 0x55b7117f5320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b7117f92c0 <col:41> 'int' 1
|   |-CallExpr 0x55b7117f9370 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117f9358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117f9338 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b7117f9418 <line:732:3, col:36>
|     `-CallExpr 0x55b7117f93f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b7117f93e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b7117f9390 <col:10> 'void *(void)' Function 0x55b71179bab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b7117f95b0 prev 0x55b7117f4e48 <line:734:1, line:778:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55b7117f9518 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b7117fd830 <line:735:1, line:778:1>
|   |-CallExpr 0x55b7117f9690 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117f9678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117f9658 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b7117f9708 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b7117f96b0 <col:3> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55b7117f96f0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f96d0 <col:15> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55b7117f9768 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b7117f9728 <col:3> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55b7117f9748 <col:15> 'int' 1
|   |-BinaryOperator 0x55b7117f97e0 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f9788 <col:3> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117f97c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f97a8 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b7117f9878 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f9800 <col:3> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55b7117f9850 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b7117f9820 <col:27> 'int' 1
|   |-CallExpr 0x55b7117f99f8 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55b7117f99e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55b7117f9898 <col:3> 'void (int)' Function 0x55b71179bd28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55b7117f9998 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55b7117f9978 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55b7117f9958 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55b7117f9910 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55b7117f98f8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55b7117f98b8 <col:23> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55b7117f9940 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55b7117f9928 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55b7117f98d8 <col:41> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b7117f9a78 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f9a20 <col:3> '_Bool' lvalue Var 0x55b7117f5e70 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117f9a60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f9a40 <col:20> '_Bool' lvalue Var 0x55b7117f5c90 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55b7117f9af0 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f9a98 <col:3> '_Bool' lvalue Var 0x55b7117f5ee8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117f9ad8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f9ab8 <col:20> '_Bool' lvalue Var 0x55b7117f5d08 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55b7117f9b78 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f9b10 <col:3> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117f9b60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f9b40 <col:20> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b7117f9bf0 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f9b98 <col:3> '_Bool' lvalue Var 0x55b7117f5fd8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117f9bd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f9bb8 <col:20> '_Bool' lvalue Var 0x55b7117f5df8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55b7117f9c88 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f9c10 <col:3> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55b7117f9c60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b7117f9c30 <col:27> 'int' 1
|   |-CallExpr 0x55b7117f9ce0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117f9cc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117f9ca8 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b7117f9d38 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117f9d20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117f9d00 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b7117f9dd0 <line:749:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f9d58 <col:3> '_Bool' lvalue Var 0x55b7117f6338 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55b7117f9db0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b7117f9d98 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b7117f9d78 <col:19> '_Bool (void)' Function 0x55b71179b770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b7117f9e68 <line:750:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f9df0 <col:3> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55b7117f9e48 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b7117f9e30 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b7117f9e10 <col:19> '_Bool (void)' Function 0x55b71179b770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b7117f9ee0 <line:751:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117f9e88 <col:3> '_Bool' lvalue Var 0x55b7117f5b98 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117f9ec8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f9ea8 <col:21> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55b7117f9f58 <line:752:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b7117f9f00 <col:3> 'int' lvalue Var 0x55b7117f5c18 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55b7117f9f40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117f9f20 <col:15> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   |-BinaryOperator 0x55b7117fa390 <line:753:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55b7117f9f78 <col:3> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   | `-ConditionalOperator 0x55b7117fa360 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55b7117fa188 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55b7117fa0a8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55b7117f9fd0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55b7117f9fb8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55b7117f9f98 <col:8> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55b7117fa088 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55b7117fa020 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55b7117fa008 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55b7117f9fe8 <col:27> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55b7117fa070 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55b7117fa058 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55b7117fa038 <col:46> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55b7117fa168 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55b7117fa100 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55b7117fa0e8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55b7117fa0c8 <col:65> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55b7117fa150 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55b7117fa138 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55b7117fa118 <col:84> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b7117fa348 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117fa1a8 <col:101> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   |   `-ParenExpr 0x55b7117fa328 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55b7117fa2f8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55b7117fa268 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b7117fa220 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b7117fa208 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b7117fa1c8 <col:106> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b7117fa250 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b7117fa238 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b7117fa1e8 <col:124> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b7117fa2c8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b7117fa288 <col:141> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55b7117fa2e0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117fa2a8 <col:153> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55b7117fa8a0 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b7117fa3b0 <col:3> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55b7117fa870 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b7117fa840 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b7117fa828 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b7117fa3d0 <col:15> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b7117fa858 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117fa3f0 <col:31> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55b7117fa808 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b7117fa7d8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b7117fa600 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b7117fa520 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b7117fa448 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b7117fa430 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b7117fa410 <col:45> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b7117fa500 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b7117fa498 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b7117fa480 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b7117fa460 <col:64> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55b7117fa4e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b7117fa4d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b7117fa4b0 <col:83> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b7117fa5e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b7117fa578 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b7117fa560 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b7117fa540 <col:102> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55b7117fa5c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b7117fa5b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b7117fa590 <col:121> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b7117fa7c0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b7117fa620 <col:138> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55b7117fa7a0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b7117fa770 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b7117fa6e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b7117fa698 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b7117fa680 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b7117fa640 <col:151> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b7117fa6c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b7117fa6b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b7117fa660 <col:169> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55b7117fa740 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b7117fa700 <col:186> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55b7117fa758 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b7117fa720 <col:198> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55b7117fadd0 <line:755:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b7117fa8c0 <col:3> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55b7117fada0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b7117fad70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b7117fad58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b7117fa8e0 <col:15> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b7117fad88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117fa900 <col:31> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55b7117fad38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b7117fad08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b7117fab10 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b7117faa30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b7117fa958 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b7117fa940 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b7117fa920 <col:45> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b7117faa10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b7117fa9a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b7117fa990 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b7117fa970 <col:64> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55b7117fa9f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b7117fa9e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b7117fa9c0 <col:83> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b7117faaf0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b7117faa88 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b7117faa70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b7117faa50 <col:102> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55b7117faad8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b7117faac0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b7117faaa0 <col:121> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b7117facf0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b7117fab50 <col:138> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55b7117facd0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b7117faca0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b7117fac10 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b7117fabc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b7117fabb0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b7117fab70 <col:151> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b7117fabf8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b7117fabe0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b7117fab90 <col:169> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55b7117fac70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b7117fac30 <col:186> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55b7117fac88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b7117fac50 <col:198> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55b7117fb378 <line:756:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fadf0 <col:3> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fb360 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fb330 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b7117fb2e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117fb2d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117fae10 <col:20> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fb318 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117fb300 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117fae30 <col:36> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55b7117fb2b0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b7117fb280 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b7117fb040 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b7117faf60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b7117fae88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b7117fae70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b7117fae50 <col:55> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b7117faf40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b7117faed8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b7117faec0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b7117faea0 <col:74> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b7117faf28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b7117faf10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b7117faef0 <col:93> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b7117fb020 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b7117fafb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b7117fafa0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b7117faf80 <col:112> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b7117fb008 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b7117faff0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b7117fafd0 <col:131> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b7117fb268 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b7117fb250 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b7117fb060 <col:148> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55b7117fb230 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b7117fb200 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b7117fb120 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b7117fb0d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b7117fb0c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b7117fb080 <col:166> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b7117fb108 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b7117fb0f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b7117fb0a0 <col:184> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b7117fb1b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b7117fb170 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b7117fb140 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b7117fb1e8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b7117fb1d0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b7117fb198 <col:212> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b7117fb940 <line:757:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fb398 <col:3> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fb928 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fb8f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b7117fb8b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117fb898 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117fb3b8 <col:20> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fb8e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117fb8c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117fb3d8 <col:36> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55b7117fb878 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b7117fb848 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b7117fb5e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b7117fb508 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b7117fb430 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b7117fb418 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b7117fb3f8 <col:55> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b7117fb4e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b7117fb480 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b7117fb468 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b7117fb448 <col:74> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b7117fb4d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b7117fb4b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b7117fb498 <col:93> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b7117fb5c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b7117fb560 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b7117fb548 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b7117fb528 <col:112> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b7117fb5b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b7117fb598 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b7117fb578 <col:131> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b7117fb830 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b7117fb818 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b7117fb608 <col:148> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55b7117fb7f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b7117fb7c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b7117fb6c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b7117fb680 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b7117fb668 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b7117fb628 <col:166> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b7117fb6b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b7117fb698 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b7117fb648 <col:184> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b7117fb798 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b7117fb718 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b7117fb6e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b7117fb7b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b7117fb770 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b7117fb740 <col:219> 'int' 0
|   |-BinaryOperator 0x55b7117fbf08 <line:758:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fb960 <col:3> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fbef0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fbec0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b7117fbe78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117fbe60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117fb980 <col:20> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fbea8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117fbe90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117fb9a0 <col:36> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55b7117fbe40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b7117fbe10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b7117fbbd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b7117fbad0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b7117fb9f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b7117fb9e0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b7117fb9c0 <col:55> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b7117fbab0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b7117fba48 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b7117fba30 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b7117fba10 <col:74> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b7117fba98 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b7117fba80 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b7117fba60 <col:93> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b7117fbbb0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b7117fbb28 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b7117fbb10 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b7117fbaf0 <col:112> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b7117fbb98 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b7117fbb80 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b7117fbb60 <col:131> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b7117fbdf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b7117fbde0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b7117fbbf0 <col:148> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55b7117fbdc0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b7117fbd90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b7117fbcb0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b7117fbc68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b7117fbc50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b7117fbc10 <col:166> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b7117fbc98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b7117fbc80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b7117fbc30 <col:184> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b7117fbd48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b7117fbd00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b7117fbcd0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b7117fbd78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b7117fbd60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b7117fbd28 <col:212> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b7117fc4d0 <line:759:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fbf28 <col:3> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fc4b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fc488 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b7117fc440 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117fc428 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117fbf48 <col:20> '_Bool' lvalue Var 0x55b7117f63b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fc470 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b7117fc458 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b7117fbf68 <col:36> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55b7117fc408 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b7117fc3d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b7117fc178 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b7117fc098 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b7117fbfc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b7117fbfa8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b7117fbf88 <col:55> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b7117fc078 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b7117fc010 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b7117fbff8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b7117fbfd8 <col:74> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b7117fc060 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b7117fc048 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b7117fc028 <col:93> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b7117fc158 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b7117fc0f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b7117fc0d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b7117fc0b8 <col:112> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b7117fc140 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b7117fc128 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b7117fc108 <col:131> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b7117fc3c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b7117fc3a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b7117fc198 <col:148> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55b7117fc388 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b7117fc358 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b7117fc258 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b7117fc210 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b7117fc1f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b7117fc1b8 <col:166> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b7117fc240 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b7117fc228 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b7117fc1d8 <col:184> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b7117fc328 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b7117fc2a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b7117fc278 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b7117fc340 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b7117fc300 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b7117fc2d0 <col:219> 'int' 0
|   |-BinaryOperator 0x55b7117fc548 <line:760:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b7117fc4f0 <col:3> 'int' lvalue Var 0x55b7117f5680 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b7117fc530 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117fc510 <col:25> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   |-BinaryOperator 0x55b7117fc678 <line:761:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55b7117fc568 <col:3> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   | `-ConditionalOperator 0x55b7117fc648 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55b7117fc600 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b7117fc5e8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b7117fc588 <col:7> '_Bool' lvalue Var 0x55b7117f5b98 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55b7117fc618 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117fc5a8 <col:25> 'int' lvalue Var 0x55b7117f5c18 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55b7117fc630 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b7117fc5c8 <col:37> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   |-BinaryOperator 0x55b7117fc710 <line:762:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fc698 <col:3> '_Bool' lvalue Var 0x55b7117f5b98 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b7117fc6e8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b7117fc6b8 <col:28> 'int' 0
|   |-CallExpr 0x55b7117fc768 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117fc750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fc730 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b7117fc7c0 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117fc7a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fc788 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b7117fc838 <line:765:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b7117fc7e0 <col:3> 'int' lvalue Var 0x55b7117f57a0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55b7117fc820 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b7117fc800 <col:25> 'int' lvalue Var 0x55b7117f59b0 'x' 'int'
|   |-CallExpr 0x55b7117fc890 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117fc878 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fc858 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b7117fc8e8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117fc8d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fc8b0 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b7117fcc08 <line:768:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b7117fc908 <col:3> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   | `-ConditionalOperator 0x55b7117fcbd8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b7117fc9c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b7117fc980 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b7117fc968 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b7117fc928 <col:7> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b7117fc9b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b7117fc998 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b7117fc948 <col:25> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b7117fcbc0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117fc9e8 <col:42> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55b7117fcba0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b7117fcb70 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b7117fcaa8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b7117fca60 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b7117fca48 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b7117fca08 <col:55> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b7117fca90 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b7117fca78 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b7117fca28 <col:73> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b7117fcb08 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b7117fcac8 <col:90> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b7117fcb20 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117fcae8 <col:102> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   |-BinaryOperator 0x55b7117fce10 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fcc28 <col:3> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fcdf8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fcdc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b7117fcce8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b7117fcca0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b7117fcc88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b7117fcc48 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b7117fccd0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b7117fccb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b7117fcc68 <col:38> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fcd80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b7117fcd38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b7117fcd08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b7117fcdb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b7117fcd98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117fcd60 <col:66> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b7117fd0f8 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fce30 <col:3> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fd0e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fd0b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b7117fcfd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b7117fcef0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b7117fcea8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b7117fce90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b7117fce50 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b7117fced8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b7117fcec0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b7117fce70 <col:38> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55b7117fcfb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b7117fcf68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b7117fcf50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b7117fcf10 <col:56> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b7117fcf98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b7117fcf80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b7117fcf30 <col:74> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fd068 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b7117fd020 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b7117fcff0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b7117fd098 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b7117fd080 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117fd048 <col:102> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b7117fd300 <line:771:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fd118 <col:3> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fd2e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fd2b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b7117fd1d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b7117fd190 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b7117fd178 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b7117fd138 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b7117fd1c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b7117fd1a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b7117fd158 <col:38> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fd270 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b7117fd228 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b7117fd1f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b7117fd2a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b7117fd288 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117fd250 <col:66> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b7117fd5e8 <line:772:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fd320 <col:3> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fd5d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fd5a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b7117fd4c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b7117fd3e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b7117fd398 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b7117fd380 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b7117fd340 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b7117fd3c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b7117fd3b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b7117fd360 <col:38> '_Bool' lvalue Var 0x55b7117f5d80 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55b7117fd4a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b7117fd458 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b7117fd440 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b7117fd400 <col:56> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b7117fd488 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b7117fd470 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b7117fd420 <col:74> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fd558 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b7117fd510 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b7117fd4e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b7117fd588 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b7117fd570 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117fd538 <col:102> '_Bool' lvalue Var 0x55b7117f5f60 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55b7117fd640 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117fd628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fd608 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b7117fd698 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117fd680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fd660 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b7117fd750 <line:775:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b7117fd6b8 <col:3> 'int' lvalue Var 0x55b7117f5320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b7117fd730 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b7117fd718 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117fd6d8 <col:22> 'int' lvalue Var 0x55b7117f5320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b7117fd6f8 <col:41> 'int' 1
|   |-CallExpr 0x55b7117fd7a8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117fd790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fd770 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b7117fd820 <line:777:3, col:36>
|     `-CallExpr 0x55b7117fd800 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b7117fd7e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b7117fd7c8 <col:10> 'void *(void)' Function 0x55b71179bab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b7117fda40 prev 0x55b7117f4fa0 <line:779:1, line:795:1> line:779:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55b7117fd9a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b7117feb90 <line:780:1, line:795:1>
|   |-CallExpr 0x55b7117fdb20 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117fdb08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fdae8 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b7117fdba0 <line:782:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b7117fdb40 <col:3> 'int' lvalue Var 0x55b7117f59b0 'x' 'int'
|   | `-IntegerLiteral 0x55b7117fdb80 <col:7> 'int' 1
|   |-CallExpr 0x55b7117fdbf8 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117fdbe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fdbc0 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b7117fdc50 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117fdc38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fdc18 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b7117fdf38 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b7117fdc70 <col:3> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   | `-ConditionalOperator 0x55b7117fdf08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b7117fdd30 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b7117fdce8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b7117fdcd0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b7117fdc90 <col:7> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b7117fdd18 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b7117fdd00 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b7117fdcb0 <col:25> '_Bool' lvalue Var 0x55b7117f5df8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55b7117fdef0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117fdd50 <col:42> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55b7117fded0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b7117fdea0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b7117fde10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b7117fddc8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b7117fddb0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b7117fdd70 <col:55> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b7117fddf8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b7117fdde0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b7117fdd90 <col:73> '_Bool' lvalue Var 0x55b7117f5fd8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55b7117fde70 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b7117fde30 <col:90> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b7117fde88 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117fde50 <col:102> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
|   |-BinaryOperator 0x55b7117fe140 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fdf58 <col:3> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fe128 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fe0f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b7117fe018 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b7117fdfd0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b7117fdfb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b7117fdf78 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b7117fe000 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b7117fdfe8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b7117fdf98 <col:38> '_Bool' lvalue Var 0x55b7117f5df8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fe0b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b7117fe068 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b7117fe038 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b7117fe0e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b7117fe0c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117fe090 <col:66> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b7117fe428 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fe160 <col:3> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fe410 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fe3e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b7117fe300 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b7117fe220 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b7117fe1d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b7117fe1c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b7117fe180 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b7117fe208 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b7117fe1f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b7117fe1a0 <col:38> '_Bool' lvalue Var 0x55b7117f5df8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55b7117fe2e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b7117fe298 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b7117fe280 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b7117fe240 <col:56> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b7117fe2c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b7117fe2b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b7117fe260 <col:74> '_Bool' lvalue Var 0x55b7117f5fd8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fe398 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b7117fe350 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b7117fe320 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b7117fe3c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b7117fe3b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117fe378 <col:102> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b7117fe630 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fe448 <col:3> '_Bool' lvalue Var 0x55b7117f5df8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fe618 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fe5e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b7117fe508 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b7117fe4c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b7117fe4a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b7117fe468 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b7117fe4f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b7117fe4d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b7117fe488 <col:38> '_Bool' lvalue Var 0x55b7117f5df8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fe5a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b7117fe558 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b7117fe528 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b7117fe5d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b7117fe5b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117fe580 <col:66> '_Bool' lvalue Var 0x55b7117f5df8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55b7117fe918 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b7117fe650 <col:3> '_Bool' lvalue Var 0x55b7117f5fd8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b7117fe900 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b7117fe8d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b7117fe7f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b7117fe710 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b7117fe6c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b7117fe6b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b7117fe670 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b7117fe6f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b7117fe6e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b7117fe690 <col:38> '_Bool' lvalue Var 0x55b7117f5df8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55b7117fe7d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b7117fe788 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b7117fe770 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b7117fe730 <col:56> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b7117fe7b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b7117fe7a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b7117fe750 <col:74> '_Bool' lvalue Var 0x55b7117f5fd8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b7117fe888 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b7117fe840 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b7117fe810 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b7117fe8b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b7117fe8a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b7117fe868 <col:102> '_Bool' lvalue Var 0x55b7117f5fd8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55b7117fe970 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117fe958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fe938 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b7117fe9c8 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b7117fe9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117fe990 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b7117fea80 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b7117fe9e8 <col:3> 'int' lvalue Var 0x55b7117f5320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b7117fea60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b7117fea48 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b7117fea08 <col:22> 'int' lvalue Var 0x55b7117f5320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b7117fea28 <col:41> 'int' 1
|   |-CallExpr 0x55b7117fead8 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b7117feac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b7117feaa0 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b7117feb50 <line:794:3, col:36>
|     `-CallExpr 0x55b7117feb30 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b7117feb18 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b7117feaf8 <col:10> 'void *(void)' Function 0x55b71179bab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b7117fec30 prev 0x55b7117f5068 <line:796:1, line:798:1> line:796:6 fence 'void ()'
| `-CompoundStmt 0x55b7117fecd0 <line:797:1, line:798:1>
|-FunctionDecl 0x55b7117fed00 prev 0x55b7117f5128 <line:799:1, line:801:1> line:799:6 isync 'void ()'
| `-CompoundStmt 0x55b7117feda0 <line:800:1, line:801:1>
|-FunctionDecl 0x55b7117fedd0 prev 0x55b7117f51e8 <line:802:1, line:804:1> line:802:6 lwfence 'void ()'
| `-CompoundStmt 0x55b7117fee70 <line:803:1, line:804:1>
`-FunctionDecl 0x55b7117feed8 <line:805:1, line:829:1> line:805:5 main 'int ()'
  `-CompoundStmt 0x55b711800bc0 <line:806:1, line:829:1>
    |-DeclStmt 0x55b7117feff0 <line:807:3, col:18>
    | `-VarDecl 0x55b7117fef88 <col:3, col:13> col:13 used t1742 'pthread_t':'unsigned long'
    |-CallExpr 0x55b7117ff1f8 <line:808:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b7117ff1e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b7117ff008 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b7117dc5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b7117ff048 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b7117ff028 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b7117fef88 't1742' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b7117ff238 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b7117ff0c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b7117ff098 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b7117ff060 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b7117ff250 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b7117ff0e0 <col:39> 'void *(void *)' Function 0x55b7117f64c8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55b7117ff160 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b7117ff138 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b7117ff100 <col:52> 'int' 0
    |-DeclStmt 0x55b7117ff2e0 <line:809:3, col:18>
    | `-VarDecl 0x55b7117ff278 <col:3, col:13> col:13 used t1743 'pthread_t':'unsigned long'
    |-CallExpr 0x55b7117ff488 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b7117ff470 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b7117ff2f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b7117dc5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b7117ff338 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b7117ff318 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b7117ff278 't1743' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b7117ff4c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b7117ff3b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b7117ff388 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b7117ff350 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b7117ff4e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b7117ff3d0 <col:39> 'void *(void *)' Function 0x55b7117f95b0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55b7117ff450 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b7117ff428 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b7117ff3f0 <col:52> 'int' 0
    |-DeclStmt 0x55b7117ff570 <line:811:3, col:18>
    | `-VarDecl 0x55b7117ff508 <col:3, col:13> col:13 used t1744 'pthread_t':'unsigned long'
    |-CallExpr 0x55b7117ff718 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b7117ff700 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b7117ff588 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b7117dc5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b7117ff5c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b7117ff5a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b7117ff508 't1744' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b7117ff758 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b7117ff640 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b7117ff618 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b7117ff5e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b7117ff770 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b7117ff660 <col:39> 'void *(void *)' Function 0x55b7117fda40 'P2' 'void *(void *)'
    | `-ParenExpr 0x55b7117ff6e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b7117ff6b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b7117ff680 <col:52> 'int' 0
    |-CallExpr 0x55b7117ff7c0 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b7117ff7a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b7117ff788 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b7117ff890 <line:814:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55b7117ff7e0 <col:3> '_Bool' lvalue Var 0x55b7117f5838 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55b7117ff878 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55b7117ff858 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55b7117ff840 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55b7117ff800 <col:21> 'int' lvalue Var 0x55b7117f5320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55b7117ff820 <col:41> 'int' 3
    |-CallExpr 0x55b7117ff8e8 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b7117ff8d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b7117ff8b0 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b7117ff960 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b7117ff948 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b7117ff908 <col:3> 'void (int)' Function 0x55b71179b940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55b7117ff9a0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b7117ff988 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b7117ff928 <col:21> '_Bool' lvalue Var 0x55b7117f5838 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55b7117ff9f0 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b7117ff9d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b7117ff9b8 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b7117ffcf8 <line:818:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55b7117ffa10 <col:3> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
    | `-ConditionalOperator 0x55b7117ffcc8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55b7117ffad0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55b7117ffa88 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55b7117ffa70 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55b7117ffa30 <col:7> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55b7117ffab8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55b7117ffaa0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55b7117ffa50 <col:25> '_Bool' lvalue Var 0x55b7117f5c90 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55b7117ffcb0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b7117ffaf0 <col:42> 'int' lvalue Var 0x55b7117f6150 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55b7117ffc90 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55b7117ffc60 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55b7117ffbd0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55b7117ffb68 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55b7117ffb50 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55b7117ffb10 <col:55> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55b7117ffbb8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55b7117ffba0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55b7117ffb30 <col:73> '_Bool' lvalue Var 0x55b7117f5e70 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b7117ffc30 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b7117ffbf0 <col:90> 'int' lvalue Var 0x55b7117f6248 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55b7117ffc48 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55b7117ffc10 <col:102> 'int' lvalue Var 0x55b7117f5b00 'y' 'int'
    |-BinaryOperator 0x55b7117fff00 <line:819:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b7117ffd18 <col:3> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55b7117ffee8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b7117ffeb8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b7117ffdd8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b7117ffd90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b7117ffd78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b7117ffd38 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b7117ffdc0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b7117ffda8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b7117ffd58 <col:38> '_Bool' lvalue Var 0x55b7117f5c90 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b7117ffe70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b7117ffe28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b7117ffdf8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b7117ffea0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b7117ffe88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b7117ffe50 <col:66> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55b7118001e8 <line:820:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b7117fff20 <col:3> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55b7118001d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b7118001a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b7118000c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b7117fffe0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b7117fff98 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b7117fff80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b7117fff40 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b7117fffc8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b7117fffb0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b7117fff60 <col:38> '_Bool' lvalue Var 0x55b7117f5c90 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b7118000a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b711800058 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b711800040 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b711800000 <col:56> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b711800088 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b711800070 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b711800020 <col:74> '_Bool' lvalue Var 0x55b7117f5e70 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b711800158 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b711800110 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b7118000e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b711800188 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b711800170 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b711800138 <col:102> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55b7118003f0 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b711800208 <col:3> '_Bool' lvalue Var 0x55b7117f5c90 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b7118003d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b7118003a8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b7118002c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b711800280 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b711800268 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b711800228 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b7118002b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b711800298 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b711800248 <col:38> '_Bool' lvalue Var 0x55b7117f5c90 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b711800360 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b711800318 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b7118002e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b711800390 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b711800378 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b711800340 <col:66> '_Bool' lvalue Var 0x55b7117f5c90 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55b7118006d8 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b711800410 <col:3> '_Bool' lvalue Var 0x55b7117f5e70 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b7118006c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b711800690 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b7118005b0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b7118004d0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b711800488 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b711800470 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b711800430 <col:20> '_Bool' lvalue Var 0x55b7117f61c8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b7118004b8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b7118004a0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b711800450 <col:38> '_Bool' lvalue Var 0x55b7117f5c90 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b711800590 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b711800548 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b711800530 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b7118004f0 <col:56> '_Bool' lvalue Var 0x55b7117f62c0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b711800578 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b711800560 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b711800510 <col:74> '_Bool' lvalue Var 0x55b7117f5e70 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b711800648 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b711800600 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b7118005d0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b711800678 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b711800660 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b711800628 <col:102> '_Bool' lvalue Var 0x55b7117f5e70 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55b711800730 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b711800718 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b7118006f8 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b711800788 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b711800770 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b711800750 <col:3> 'void ()' Function 0x55b71179bfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b711800a58 <line:825:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x55b7118007a8 <col:3> '_Bool' lvalue Var 0x55b7117f58b0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55b711800a40 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55b711800a28 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55b711800a08 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x55b7118009e8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x55b711800950 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x55b7118008b8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x55b711800820 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55b711800808 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55b7118007c8 <col:23> 'int' lvalue Var 0x55b7117f5440 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x55b7118007e8 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x55b711800898 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55b711800880 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55b711800840 <col:51> 'int' lvalue Var 0x55b7117f5560 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55b711800860 <col:74> 'int' 0
    |         | `-BinaryOperator 0x55b711800930 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55b711800918 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55b7118008d8 <col:79> 'int' lvalue Var 0x55b7117f5680 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55b7118008f8 <col:102> 'int' 1
    |         `-BinaryOperator 0x55b7118009c8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x55b7118009b0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55b711800970 <col:107> 'int' lvalue Var 0x55b7117f57a0 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55b711800990 <col:130> 'int' 0
    |-CallExpr 0x55b711800ab0 <line:826:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b711800a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b711800a78 <col:3> 'void ()' Function 0x55b71179c060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b711800b28 <line:827:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b711800b10 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b711800ad0 <col:3> 'void (int)' Function 0x55b71179bd28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55b711800b68 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b711800b50 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b711800af0 <col:21> '_Bool' lvalue Var 0x55b7117f58b0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55b711800bb0 <line:828:3, col:10>
      `-IntegerLiteral 0x55b711800b80 <col:10> 'int' 0
