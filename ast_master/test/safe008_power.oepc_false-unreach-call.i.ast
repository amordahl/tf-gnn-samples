TranslationUnitDecl 0x55f8c105ee18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55f8c105f6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55f8c105f3b0 '__int128'
|-TypedefDecl 0x55f8c105f748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55f8c105f3d0 'unsigned __int128'
|-TypedefDecl 0x55f8c105fa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55f8c105f820 'struct __NSConstantString_tag'
|   `-Record 0x55f8c105f7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55f8c105faf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55f8c105fab0 'char *'
|   `-BuiltinType 0x55f8c105eeb0 'char'
|-TypedefDecl 0x55f8c109e650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55f8c105fd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55f8c105fbd0 'struct __va_list_tag'
|     `-Record 0x55f8c105fb50 '__va_list_tag'
|-FunctionDecl 0x55f8c109e790 <./test/safe008_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55f8c109e6c0 <col:31> col:34 'int'
|-FunctionDecl 0x55f8c109e958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55f8c109ea80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55f8c109ebc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55f8c109eb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55f8c109edf8 <col:40, col:99>
|   |-IfStmt 0x55f8c109edc8 <col:42, col:88>
|   | |-UnaryOperator 0x55f8c109eca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55f8c109ec90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55f8c109ec70 <col:47> 'int' lvalue ParmVar 0x55f8c109eb38 'expression' 'int'
|   | `-CompoundStmt 0x55f8c109edb0 <col:59, col:88>
|   |   `-LabelStmt 0x55f8c109ed98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55f8c109ed28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55f8c109ed10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55f8c109ecc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55f8c109ea80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55f8c109ede0 <col:89>
|   `-ReturnStmt 0x55f8c109ede8 <col:91>
|-FunctionDecl 0x55f8c109ee40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55f8c109ef00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55f8c109f280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f8c109efb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55f8c109f038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55f8c109f0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f8c109f138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f8c109f340 <line:10:22>
|-FunctionDecl 0x55f8c10c5390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f8c109f3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55f8c109f430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55f8c109f4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f8c109f530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f8c10c5450 <line:13:22>
|-FunctionDecl 0x55f8c10c5700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f8c10c54c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55f8c10c5540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55f8c10c55c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55f8c10c57b8 <line:15:22>
|-TypedefDecl 0x55f8c10c5828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55f8c105ef70 'unsigned char'
|-TypedefDecl 0x55f8c10c5898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55f8c105ef90 'unsigned short'
|-TypedefDecl 0x55f8c10c5908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55f8c105efb0 'unsigned int'
|-TypedefDecl 0x55f8c10c5978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c59e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55f8c105eed0 'signed char'
|-TypedefDecl 0x55f8c10c5a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55f8c105ef70 'unsigned char'
|-TypedefDecl 0x55f8c10c5ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55f8c105eef0 'short'
|-TypedefDecl 0x55f8c10c5b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55f8c105ef90 'unsigned short'
|-TypedefDecl 0x55f8c10c5ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55f8c105ef10 'int'
|-TypedefDecl 0x55f8c10c5c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55f8c105efb0 'unsigned int'
|-TypedefDecl 0x55f8c10c5c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c5cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c5d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c5dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c5e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c5eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55f8c105efb0 'unsigned int'
|-TypedefDecl 0x55f8c10c5f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55f8c105efb0 'unsigned int'
|-TypedefDecl 0x55f8c10c5f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c6008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c6078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55f8c105efb0 'unsigned int'
|-TypedefDecl 0x55f8c10c60e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c6158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c61c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c6238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55f8c105ef10 'int'
|-RecordDecl 0x55f8c10c6290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55f8c10c6408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55f8c10c64c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55f8c10c6460 'struct __fsid_t' sugar
|   `-RecordType 0x55f8c10c6310 '__fsid_t'
|     `-Record 0x55f8c10c6290 ''
|-TypedefDecl 0x55f8c10c6548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c65b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c6628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c6698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55f8c105efb0 'unsigned int'
|-TypedefDecl 0x55f8c10c6708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c6778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55f8c105efb0 'unsigned int'
|-TypedefDecl 0x55f8c10c67e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c6858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55f8c105ef10 'int'
|-TypedefDecl 0x55f8c10c68c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55f8c105ef10 'int'
|-TypedefDecl 0x55f8c10c6938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55f8c105ef10 'int'
|-TypedefDecl 0x55f8c10c69a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55f8c105f630 'void *'
|   `-BuiltinType 0x55f8c105ee70 'void'
|-TypedefDecl 0x55f8c10c6a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c6a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c6af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c6b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c6bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c6c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c6cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c6d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c6d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c6e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c6e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c6f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55f8c10c6ed0 '__off64_t' sugar
|   |-Typedef 0x55f8c10c61c8 '__off64_t'
|   `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c7000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55f8c10c6fc0 '__quad_t *'
|   `-TypedefType 0x55f8c10c6f60 '__quad_t' sugar
|     |-Typedef 0x55f8c10c5d68 '__quad_t'
|     `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c7070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55f8c105fab0 'char *'
|   `-BuiltinType 0x55f8c105eeb0 'char'
|-TypedefDecl 0x55f8c10c70e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10c7150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55f8c105efb0 'unsigned int'
|-FunctionDecl 0x55f8c10c7298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55f8c10c71c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55f8c10c85e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55f8c10c85d8 <line:72:3, col:34>
|     `-CallExpr 0x55f8c10c8598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55f8c10c8580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f8c10c8510 <col:10> '<builtin fn type>' Function 0x55f8c10c8380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55f8c10c85c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f8c10c8530 <col:29> 'unsigned int' lvalue ParmVar 0x55f8c10c71c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55f8c10c8380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55f8c10c8420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55f8c10c8490 <col:10> Implicit
| `-ConstAttr 0x55f8c10c84e8 <col:10> Implicit
|-FunctionDecl 0x55f8c10c8740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55f8c10c8638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55f8c10c8a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55f8c10c8a48 <line:77:3, col:34>
|     `-CallExpr 0x55f8c10c8a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55f8c10c89f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f8c10c8978 <col:10> '<builtin fn type>' Function 0x55f8c10c87e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55f8c10c8a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55f8c10c8998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55f8c10c8638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55f8c10c87e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55f8c10c8888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55f8c10c88f8 <col:10> Implicit
| `-ConstAttr 0x55f8c10c8950 <col:10> Implicit
|-TypedefDecl 0x55f8c10c8a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-TypedefDecl 0x55f8c10c8b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55f8c10c8ae0 '__time_t' sugar
|   |-Typedef 0x55f8c10c6708 '__time_t'
|   `-BuiltinType 0x55f8c105ef30 'long'
|-RecordDecl 0x55f8c10c8b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55f8c10c8c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55f8c10c8cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55f8c10c8d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55f8c10c8d10 '__pid_t' sugar
|   |-Typedef 0x55f8c10c6238 '__pid_t'
|   `-BuiltinType 0x55f8c105ef10 'int'
|-RecordDecl 0x55f8c10c8da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55f8c10c8e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55f8c10c8eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55f8c10c8f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55f8c10c8fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-RecordDecl 0x55f8c10c9030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55f8c10c92c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55f8c10ca3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55f8c10c9310 'struct cpu_set_t' sugar
|   `-RecordType 0x55f8c10c90b0 'cpu_set_t'
|     `-Record 0x55f8c10c9030 ''
|-FunctionDecl 0x55f8c10ca678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55f8c10ca448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f8c10ca550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55f8c10ca728 <line:107:19>
|-FunctionDecl 0x55f8c10ca900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55f8c10ca790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55f8c10ca9a8 <col:69>
|-FunctionDecl 0x55f8c10cab20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55f8c10caa10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55f8c10cabc8 <col:64>
|-FunctionDecl 0x55f8c10cae88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f8c10cac30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f8c10cad68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f8c10caf38 <line:113:22>
|-FunctionDecl 0x55f8c10cb1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55f8c10cafa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f8c10cb098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55f8c10cb268 <col:88>
|-FunctionDecl 0x55f8c10cb588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f8c10cb2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f8c10cb3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55f8c10cb440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f8c10cb640 <col:62>
|-FunctionDecl 0x55f8c10cb7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55f8c10cb6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55f8c10cb860 <col:63>
|-FunctionDecl 0x55f8c10cb988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55f8c10cba28 <col:47>
|-FunctionDecl 0x55f8c10cbb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55f8c10cba98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f8c10cbbd8 <col:69>
|-FunctionDecl 0x55f8c10cbce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55f8c10cbc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f8c10cbd88 <col:69>
|-FunctionDecl 0x55f8c10cc048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f8c10cbdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f8c10cbf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55f8c10cc0f8 <col:88>
|-TypedefDecl 0x55f8c10cc188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55f8c10cc150 '__clock_t' sugar
|   |-Typedef 0x55f8c10c6548 '__clock_t'
|   `-BuiltinType 0x55f8c105ef30 'long'
|-TypedefDecl 0x55f8c10cc218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55f8c10cc1e0 '__clockid_t' sugar
|   |-Typedef 0x55f8c10c6938 '__clockid_t'
|   `-BuiltinType 0x55f8c105ef10 'int'
|-TypedefDecl 0x55f8c10cc2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55f8c10cc270 '__timer_t' sugar
|   |-Typedef 0x55f8c10c69a8 '__timer_t'
|   `-PointerType 0x55f8c105f630 'void *'
|     `-BuiltinType 0x55f8c105ee70 'void'
|-RecordDecl 0x55f8c10cc300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55f8c10cc3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55f8c10cc440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55f8c10cc4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55f8c10cc510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55f8c10cc578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55f8c10cc5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55f8c10cc648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55f8c10cc6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55f8c10cc718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55f8c10cc780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55f8c10cc7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55f8c10cc838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55f8c10cc908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55f8c10cc978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55f8c10cca20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55f8c10ccbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55f8c10ccc90 <col:45>
|-FunctionDecl 0x55f8c10cce70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55f8c10ccd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55f8c10ccf18 <col:54>
|-FunctionDecl 0x55f8c10cd118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55f8c10ccf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55f8c10ccff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55f8c10cd1c8 <line:157:22>
| `-ConstAttr 0x55f8c10cd220 <col:63>
|-FunctionDecl 0x55f8c10ce050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f8c10cd318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f8c10ce0f8 <col:56>
|-FunctionDecl 0x55f8c10ce4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55f8c10ce168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55f8c10ce1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f8c10ce260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55f8c10ce358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55f8c10ce560 <col:54>
|-RecordDecl 0x55f8c10ce5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55f8c10ce668 parent 0x55f8c105ee18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55f8c10ce8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55f8c10ce968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55f8c10ce9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55f8c10cea38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55f8c10ceb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55f8c10cec48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55f8c10cebf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55f8c10ceb80 'struct __locale_struct' sugar
|     `-RecordType 0x55f8c10ce640 'struct __locale_struct'
|       `-Record 0x55f8c10ce5b8 '__locale_struct'
|-TypedefDecl 0x55f8c10cecf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55f8c10cecc0 '__locale_t' sugar
|   |-Typedef 0x55f8c10cec48 '__locale_t'
|   `-PointerType 0x55f8c10cebf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55f8c10ceb80 'struct __locale_struct' sugar
|       `-RecordType 0x55f8c10ce640 'struct __locale_struct'
|         `-Record 0x55f8c10ce5b8 '__locale_struct'
|-FunctionDecl 0x55f8c10d0110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55f8c10ced68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55f8c10cede0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f8c10cee60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55f8c10ceef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f8c10cef68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55f8c10d01d8 <col:40>
|-FunctionDecl 0x55f8c10d03c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f8c10d02a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55f8c10d0470 <col:66>
|-FunctionDecl 0x55f8c10d0580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f8c10d04d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55f8c10d0628 <col:69>
|-FunctionDecl 0x55f8c10d0858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f8c10d0690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f8c10d0720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f8c10d0908 <col:52>
|-FunctionDecl 0x55f8c10d0ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f8c10d0970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f8c10d0a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f8c10d0b60 <col:55>
|-FunctionDecl 0x55f8c10d0cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55f8c10d0be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55f8c10d0da0 <col:62>
|-FunctionDecl 0x55f8c10d0f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55f8c10d0e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55f8c10d0fc0 <col:60>
|-FunctionDecl 0x55f8c10d12b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f8c10d1118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f8c10d1198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55f8c10d1368 <col:44>
|-FunctionDecl 0x55f8c10d1578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f8c10d13d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f8c10d1450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55f8c10d1628 <col:49>
|-VarDecl 0x55f8c10d1728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55f8c10d17a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55f8c10d1828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55f8c10d18f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55f8c10d1a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55f8c10d1ac0 <col:42>
|-VarDecl 0x55f8c10d1b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55f8c10d1bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55f8c10d1d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55f8c10d1c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55f8c10d1de0 <col:57>
|-FunctionDecl 0x55f8c10d1ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f8c10d1e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f8c10d1f98 <col:56>
|-FunctionDecl 0x55f8c10d20d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f8c10d2018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55f8c10d2178 <col:59>
|-FunctionDecl 0x55f8c10d2280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55f8c10d21e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55f8c10d2328 <col:48>
| `-ConstAttr 0x55f8c10d2380 <col:89>
|-FunctionDecl 0x55f8c10d25e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f8c10d2438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55f8c10d24c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55f8c10d2848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f8c10d26d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f8c10d2768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55f8c10d28f8 <col:88>
|-FunctionDecl 0x55f8c10d2a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f8c10d2960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f8c10d29f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55f8c10d2b40 <col:88>
|-FunctionDecl 0x55f8c10d2d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55f8c10d2ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f8c10d2c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55f8c10d2e08 <line:208:22>
|-FunctionDecl 0x55f8c10d3178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f8c10d2e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f8c10d2ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55f8c10d2f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55f8c10d3010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55f8c10d3478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55f8c10d3278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55f8c10d3350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55f8c10d3528 <col:85>
|-FunctionDecl 0x55f8c10d3918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55f8c10d3590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f8c10d36c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55f8c10d37d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55f8c10d39d0 <col:52>
|-FunctionDecl 0x55f8c10d3b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55f8c10d3a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f8c10d3bf0 <col:61>
|-FunctionDecl 0x55f8c10d40f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55f8c10d3c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f8c10d3cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55f8c10d3e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55f8c10d3ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55f8c10d41b0 <col:62>
|-FunctionDecl 0x55f8c10d43c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55f8c10d4218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f8c10d42a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55f8c10d4478 <line:221:22>
|-FunctionDecl 0x55f8c10d4578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55f8c10d44e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f8c10d4620 <col:65>
|-TypedefDecl 0x55f8c10d4690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55f8c105efd0 'unsigned long'
|-RecordDecl 0x55f8c10d46e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55f8c10d4830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f8c10d4898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f8c10d4948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55f8c10d48f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55f8c10d4770 'union pthread_attr_t'
|     `-Record 0x55f8c10d46e8 'pthread_attr_t'
|-RecordDecl 0x55f8c10d49a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55f8c10d4b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55f8c10d4b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55f8c10d4c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55f8c10d4be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55f8c10d4a20 'struct __pthread_internal_list'
|     `-Record 0x55f8c10d49a0 '__pthread_internal_list'
|-RecordDecl 0x55f8c10d4cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55f8c10d4d58 parent 0x55f8c105ee18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55f8c10d4e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f8c10d4e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55f8c10d4f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55f8c10d4f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55f8c10d4fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55f8c10d5038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55f8c10d9110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55f8c10d91c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55f8c10d92b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55f8c10d9318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f8c10d94a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55f8c10d9440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55f8c10d4d30 'pthread_mutex_t'
|     `-Record 0x55f8c10d4cb0 ''
|-RecordDecl 0x55f8c10d9510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55f8c10d9650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f8c10d96b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f8c10d9770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55f8c10d9710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55f8c10d9590 'pthread_mutexattr_t'
|     `-Record 0x55f8c10d9510 ''
|-RecordDecl 0x55f8c10d97e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55f8c10d9888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55f8c10d9950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f8c10d99b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55f8c10d9a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55f8c10d9a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55f8c10d9af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55f8c10d9b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55f8c10d9bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55f8c10d9c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55f8c10d9ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./test/safe008_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./test/safe008_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55f8c10d9dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55f8c10d9e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55f8c10d9f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55f8c10d9f10 'union pthread_cond_t' sugar
|   `-RecordType 0x55f8c10d9860 'pthread_cond_t'
|     `-Record 0x55f8c10d97e0 ''
|-RecordDecl 0x55f8c10d9fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55f8c10db130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f8c10db198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f8c10db250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55f8c10db1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55f8c10da060 'pthread_condattr_t'
|     `-Record 0x55f8c10d9fe0 ''
|-TypedefDecl 0x55f8c10db2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55f8c105efb0 'unsigned int'
|-TypedefDecl 0x55f8c10db348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55f8c105ef10 'int'
|-RecordDecl 0x55f8c10db3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55f8c10db448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55f8c10db510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f8c10db578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55f8c10db5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55f8c10db648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55f8c10db6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55f8c10db718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55f8c10db780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55f8c10db7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55f8c10db850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55f8c10db8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55f8c10db920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55f8c10db9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./test/safe008_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./test/safe008_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55f8c10dba78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f8c10dbae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f8c10dbc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55f8c10dbbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55f8c10db420 'pthread_rwlock_t'
|     `-Record 0x55f8c10db3a0 ''
|-RecordDecl 0x55f8c10dbca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55f8c10dbde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55f8c10dbe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f8c10dbf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55f8c10dbea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55f8c10dbd20 'pthread_rwlockattr_t'
|     `-Record 0x55f8c10dbca0 ''
|-TypedefDecl 0x55f8c10dbf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55f8c105ef14 'volatile int' volatile
|   `-BuiltinType 0x55f8c105ef10 'int'
|-RecordDecl 0x55f8c10dbfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55f8c10dd140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55f8c10dd1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f8c10dd260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55f8c10dd200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55f8c10dc060 'pthread_barrier_t'
|     `-Record 0x55f8c10dbfe0 ''
|-RecordDecl 0x55f8c10dd2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55f8c10dd3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f8c10dd438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f8c10dd4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55f8c10dd490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55f8c10dd350 'pthread_barrierattr_t'
|     `-Record 0x55f8c10dd2d0 ''
|-TypedefDecl 0x55f8c10dd608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55f8c10dd5a0 'long [8]' 8 
|   `-BuiltinType 0x55f8c105ef30 'long'
|-EnumDecl 0x55f8c10dd660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55f8c10dd728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55f8c10dd778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55f8c10dd7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55f8c10dd898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55f8c10dd8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55f8c10dd938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55f8c10dd988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55f8c10dda10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55f8c10dd9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55f8c10dd9d8 <col:26> 'int' EnumConstant 0x55f8c10dd898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55f8c10dda98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55f8c10dda80 <col:29> 'int'
| |   `-DeclRefExpr 0x55f8c10dda60 <col:29> 'int' EnumConstant 0x55f8c10dd8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55f8c10ddb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55f8c10ddb08 <col:30> 'int'
| |   `-DeclRefExpr 0x55f8c10ddae8 <col:30> 'int' EnumConstant 0x55f8c10dd938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55f8c10ddba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55f8c10ddb90 <col:27> 'int'
|     `-DeclRefExpr 0x55f8c10ddb70 <col:27> 'int' EnumConstant 0x55f8c10dda10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55f8c10ddbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55f8c10ddcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55f8c10ddd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55f8c10ddd38 <col:30> 'int'
| |   `-DeclRefExpr 0x55f8c10ddd18 <col:30> 'int' EnumConstant 0x55f8c10ddcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55f8c10ddda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55f8c10dde28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55f8c10dde10 <col:29> 'int'
|     `-DeclRefExpr 0x55f8c10dddf0 <col:29> 'int' EnumConstant 0x55f8c10ddda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55f8c10dde78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55f8c10ddf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55f8c10ddf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55f8c10ddfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55f8c10de038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55f8c10de150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55f8c10de1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55f8c10de1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55f8c10de278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55f8c10de260 <col:31> 'int'
|     `-DeclRefExpr 0x55f8c10de240 <col:31> 'int' EnumConstant 0x55f8c10de150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55f8c10de2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55f8c10de398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55f8c10de3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55f8c10de438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55f8c10de508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55f8c10de558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55f8c10de5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55f8c10de678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55f8c10de6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55f8c10de718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55f8c10de958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55f8c10de9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55f8c10dea28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55f8c10deb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55f8c10deb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55f8c10dec68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55f8c10decb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55f8c10ded08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55f8c10dedd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55f8c10dee28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55f8c10df488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55f8c10def20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55f8c10df030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f8c10df270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55f8c10df2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55f8c10df548 <col:47>
| |-NonNullAttr 0x55f8c10df5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55f8c10df5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55f8c10df700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55f8c10df630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55f8c10df958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55f8c10df7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55f8c10df838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55f8c10dfb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55f8c10dfa18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55f8c10dfbd0 <col:60>
|-FunctionDecl 0x55f8c10dfd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55f8c10dfdc0 <col:54>
| `-ConstAttr 0x55f8c10dfe18 <col:95>
|-FunctionDecl 0x55f8c10dffe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55f8c10dfe50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f8c10dfec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55f8c10e0098 <line:394:19>
| `-ConstAttr 0x55f8c10e00f0 <col:60>
|-FunctionDecl 0x55f8c10e1b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f8c10e19d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f8c10e1bb0 <col:71>
| `-NonNullAttr 0x55f8c10e1c08 <col:112, col:126> 1
|-FunctionDecl 0x55f8c10e1d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f8c10e1c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f8c10e1db8 <line:397:22>
| `-NonNullAttr 0x55f8c10e1e10 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10e2038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55f8c10e1e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f8c10e1ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55f8c10e20e8 <line:400:22>
| `-NonNullAttr 0x55f8c10e2140 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10e2348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10e2188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f8c10e2208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55f8c10e23f8 <line:403:22>
| `-NonNullAttr 0x55f8c10e2450 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10e26a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55f8c10e2498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f8c10e2540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55f8c10e2758 <line:406:22>
| `-NonNullAttr 0x55f8c10e27b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10e39e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f8c10e27f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f8c10e2870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f8c10e3a98 <line:409:22>
| `-NonNullAttr 0x55f8c10e3af0 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10e3d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f8c10e3b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f8c10e3bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f8c10e3dd8 <line:412:22>
| `-NonNullAttr 0x55f8c10e3e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10e4068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f8c10e3e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f8c10e3f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55f8c10e4118 <col:37>
| `-NonNullAttr 0x55f8c10e4170 <col:78, col:95> 1 2
|-FunctionDecl 0x55f8c10e4358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10e41b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f8c10e4238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55f8c10e4408 <line:418:22>
| `-NonNullAttr 0x55f8c10e4460 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10e45e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10e44a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f8c10e4528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55f8c10e4698 <line:420:22>
| `-NonNullAttr 0x55f8c10e46f0 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10e4898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10e4738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f8c10e47b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55f8c10e4948 <line:423:22>
| `-NonNullAttr 0x55f8c10e49c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10e4b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10e4a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f8c10e4a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55f8c10e4bf8 <line:426:22>
| `-NonNullAttr 0x55f8c10e4c50 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10e4df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10e4c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f8c10e4d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55f8c10e4ea8 <line:429:22>
| `-NonNullAttr 0x55f8c10e4f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10e5088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10e4f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f8c10e4fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55f8c10e5138 <line:431:22>
| `-NonNullAttr 0x55f8c10e5190 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10e53b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55f8c10e51d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f8c10e5258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55f8c10e5468 <line:434:22>
| |-NonNullAttr 0x55f8c10e54c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55f8c10e54f8 <col:100> "" ""
|-FunctionDecl 0x55f8c10e5708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55f8c10e5548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f8c10e55c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55f8c10e57b8 <line:437:22>
| |-NonNullAttr 0x55f8c10e5810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55f8c10e5848 <col:97> "" ""
|-FunctionDecl 0x55f8c10e5a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f8c10e5898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f8c10e5910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f8c10e5af8 <line:440:22>
| `-NonNullAttr 0x55f8c10e5b50 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10e5cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f8c10e5b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f8c10e5c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f8c10e5d80 <line:443:22>
| `-NonNullAttr 0x55f8c10e5dd8 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10e60c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f8c10e5e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f8c10e5ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55f8c10e5f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f8c10e6180 <line:447:22>
| `-NonNullAttr 0x55f8c10e61d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55f8c10e6488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55f8c10e6230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f8c10e62b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55f8c10e6328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f8c10e6540 <col:43>
| `-NonNullAttr 0x55f8c10e6598 <col:84, col:98> 1
|-FunctionDecl 0x55f8c10e6858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f8c10e65e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f8c10e6668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55f8c10e66f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55f8c10e6910 <line:452:22>
| `-NonNullAttr 0x55f8c10e6968 <col:63, col:77> 3
|-FunctionDecl 0x55f8c10e6c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f8c10e69e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f8c10e6a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55f8c10e6af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f8c10e6d30 <line:456:22>
| `-NonNullAttr 0x55f8c10e6d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55f8c10e6f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55f8c10e6dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f8c10e6e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55f8c10e7028 <line:458:22>
|-FunctionDecl 0x55f8c10e73f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55f8c10e70f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55f8c10e7290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55f8c10e74a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55f8c10e7650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55f8c10e7530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55f8c10e75b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55f8c10e7838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55f8c10e7718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55f8c10e7798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55f8c10e79f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55f8c10e78f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55f8c10e7b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55f8c10e7bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55f8c10e7c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55f8c10e7d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55f8c10e7dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55f8c10e7fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/safe008_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55f8c10e8098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55f8c10e8150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55f8c10e80f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55f8c10e7c50 '__pthread_unwind_buf_t'
| |   `-Record 0x55f8c10e7bd0 ''
| `-AlignedAttr 0x55f8c10e81a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55f8c10e8220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55f8c10e8380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55f8c10e83e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55f8c10e8450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55f8c10e84b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55f8c10e86c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f8c10e85b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f8c10e8808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f8c10e8778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f8c10e8a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f8c10e88c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55f8c10e8aa8 <line:487:22>
|-RecordDecl 0x55f8c10e8b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55f8c10e8e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55f8c10e8c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55f8c10e8cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55f8c10e8ec8 <col:86>
| `-ReturnsTwiceAttr 0x55f8c10e8f20 <col:12> Implicit
|-FunctionDecl 0x55f8c10e9248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f8c10e8ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55f8c10e9100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f8c10e92f8 <line:493:22>
| `-NonNullAttr 0x55f8c10e9350 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10e94c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f8c10e9398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f8c10e9570 <line:495:22>
| `-NonNullAttr 0x55f8c10e95c8 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10e96d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f8c10e9618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f8c10e9778 <line:497:22>
| `-NonNullAttr 0x55f8c10e97d0 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10e98d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f8c10e9818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f8c10e9978 <line:499:22>
| `-NonNullAttr 0x55f8c10e99d0 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10eac28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f8c10eaa38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f8c10eaac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f8c10eacd8 <col:36>
| `-NonNullAttr 0x55f8c10ead30 <col:66, col:83> 1 2
|-FunctionDecl 0x55f8c10eae30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f8c10ead78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f8c10eaed8 <line:504:22>
| `-NonNullAttr 0x55f8c10eaf30 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10eb1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10eafe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f8c10eb060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f8c10eb278 <line:508:22>
| `-NonNullAttr 0x55f8c10eb2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10eb598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10eb318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f8c10eb398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55f8c10eb418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55f8c10eb650 <line:512:22>
| `-NonNullAttr 0x55f8c10eb6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55f8c10eb7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f8c10eb6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f8c10eb858 <line:514:22>
| `-NonNullAttr 0x55f8c10eb8b0 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10ebad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f8c10eb960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f8c10ebb80 <line:516:22>
| `-NonNullAttr 0x55f8c10ebbd8 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10ebce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f8c10ebc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f8c10ebd88 <line:518:22>
| `-NonNullAttr 0x55f8c10ebde0 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10ec008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10ebe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f8c10ebea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f8c10ec0b8 <line:522:22>
| `-NonNullAttr 0x55f8c10ec110 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10ec318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10ec158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f8c10ec1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55f8c10ec3c8 <line:525:22>
| `-NonNullAttr 0x55f8c10ec420 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10ec5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10ec468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f8c10ec4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55f8c10ec678 <line:528:22>
| `-NonNullAttr 0x55f8c10ec6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10ec858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10ec718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f8c10ec798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55f8c10ec908 <line:530:22>
| `-NonNullAttr 0x55f8c10ec960 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10ecb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10ec9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f8c10eca40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55f8c10ecbd0 <line:534:22>
| `-NonNullAttr 0x55f8c10ecc28 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10ecdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10ecc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f8c10eccf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55f8c10ece68 <line:537:22>
| `-NonNullAttr 0x55f8c10ecec0 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10ed068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10ecf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f8c10ecf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f8c10ed118 <line:541:22>
| `-NonNullAttr 0x55f8c10ed170 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10ed2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10ed1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f8c10ed238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55f8c10ed3a8 <line:544:22>
| `-NonNullAttr 0x55f8c10ed400 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10ed5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55f8c10ed448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f8c10ed4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55f8c10ed698 <line:547:22>
| `-NonNullAttr 0x55f8c10ed6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10ed878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10ed738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f8c10ed7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55f8c10ed928 <line:550:22>
| `-NonNullAttr 0x55f8c10ed980 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10eecf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55f8c10eeaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f8c10eebb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55f8c10eeda8 <col:29>
| `-NonNullAttr 0x55f8c10eee00 <col:70, col:84> 1
|-FunctionDecl 0x55f8c10eef78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f8c10eee48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f8c10ef020 <line:555:22>
| `-NonNullAttr 0x55f8c10ef078 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10ef180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f8c10ef0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f8c10ef228 <line:557:22>
| `-NonNullAttr 0x55f8c10ef280 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10ef380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f8c10ef2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f8c10ef428 <line:559:19>
| `-NonNullAttr 0x55f8c10ef480 <col:49, col:63> 1
|-FunctionDecl 0x55f8c10ef6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f8c10ef4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f8c10ef558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f8c10ef768 <col:39>
| `-NonNullAttr 0x55f8c10ef7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55f8c10ef8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f8c10ef808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f8c10ef968 <line:564:22>
| `-NonNullAttr 0x55f8c10ef9c0 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10efb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f8c10efa70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f8c10efbd0 <line:566:22>
| `-NonNullAttr 0x55f8c10efc28 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10efde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f8c10efc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f8c10efd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f8c10efe98 <col:39>
| `-NonNullAttr 0x55f8c10efef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55f8c10efff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f8c10eff38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f8c10f0098 <line:571:22>
| `-NonNullAttr 0x55f8c10f00f0 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10f02d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f8c10f01a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f8c10f0380 <line:573:22>
| `-NonNullAttr 0x55f8c10f03d8 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f04e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f8c10f0428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f8c10f0588 <line:575:22>
| `-NonNullAttr 0x55f8c10f05e0 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f0808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10f0628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f8c10f06a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f8c10f08b8 <line:579:22>
| `-NonNullAttr 0x55f8c10f0910 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10f0b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10f0958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f8c10f09d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55f8c10f0be8 <line:582:22>
| `-NonNullAttr 0x55f8c10f0c40 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f0de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10f0c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f8c10f0d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55f8c10f0e98 <line:586:22>
| `-NonNullAttr 0x55f8c10f0ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10f1078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10f0f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f8c10f0fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55f8c10f1128 <col:36>
| `-NonNullAttr 0x55f8c10f1180 <col:77, col:91> 1
|-FunctionDecl 0x55f8c10f14b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55f8c10f1260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f8c10f1370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55f8c10f1568 <line:591:22>
| `-NonNullAttr 0x55f8c10f15c0 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f1738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f8c10f1608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f8c10f17e0 <line:593:22>
| `-NonNullAttr 0x55f8c10f1838 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f1940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f8c10f1888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f8c10f19e8 <line:595:22>
| `-NonNullAttr 0x55f8c10f1a40 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10f1b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f8c10f1aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f8c10f1c00 <line:597:22>
| `-NonNullAttr 0x55f8c10f1c58 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10f1e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55f8c10f1ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f8c10f1d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55f8c10f1f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55f8c10f2268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f8c10f1fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f8c10f2030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f8c10f20c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55f8c10f2320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55f8c10f2538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f8c10f2400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f8c10f25e0 <line:606:22>
| `-NonNullAttr 0x55f8c10f2638 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f2740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f8c10f2688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f8c10f27e8 <line:608:22>
| `-NonNullAttr 0x55f8c10f2840 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f2aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10f2888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f8c10f2908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f8c10f2b50 <line:612:22>
| `-NonNullAttr 0x55f8c10f2ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10f2db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10f2bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f8c10f2c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55f8c10f2e68 <col:37>
| `-NonNullAttr 0x55f8c10f2ec0 <col:78, col:92> 1
|-FunctionDecl 0x55f8c10f30d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55f8c10f2f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f8c10f2fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55f8c10f3188 <line:618:22>
| `-NonNullAttr 0x55f8c10f31e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10f33a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55f8c10f3228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f8c10f32a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55f8c10f3458 <line:621:22>
| `-NonNullAttr 0x55f8c10f34b0 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f3758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55f8c10f3590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55f8c10f3610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55f8c10f3808 <line:623:22>
| `-NonNullAttr 0x55f8c10f3860 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f39d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f8c10f38a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f8c10f3ab0 <line:625:22>
| `-NonNullAttr 0x55f8c10f3b08 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f3c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f8c10f3b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f8c10f3cb8 <line:627:22>
| `-NonNullAttr 0x55f8c10f3d10 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10f3e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f8c10f3d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f8c10f3eb8 <line:629:22>
| `-NonNullAttr 0x55f8c10f3f10 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10f4010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f8c10f3f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f8c10f40b8 <line:631:22>
| `-NonNullAttr 0x55f8c10f4110 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10f44e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55f8c10f41f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55f8c10f4300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f8c10f4380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55f8c10f45a0 <line:635:22>
| `-NonNullAttr 0x55f8c10f45f8 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f4778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f8c10f4648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f8c10f4820 <line:637:22>
| `-NonNullAttr 0x55f8c10f4878 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f4980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f8c10f48c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f8c10f4a28 <line:639:22>
| `-NonNullAttr 0x55f8c10f4a80 <col:52, col:66> 1
|-FunctionDecl 0x55f8c10f5c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f8c10f5b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f8c10f5d30 <line:641:22>
| `-NonNullAttr 0x55f8c10f5d88 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f5e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f8c10f5dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f8c10f5f38 <line:643:22>
| `-NonNullAttr 0x55f8c10f5f90 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f61b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f8c10f5fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f8c10f6058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f8c10f6268 <line:647:22>
| `-NonNullAttr 0x55f8c10f62c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f8c10f64c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55f8c10f6308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55f8c10f6388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55f8c10f6578 <line:650:22>
| `-NonNullAttr 0x55f8c10f65d0 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f6918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55f8c10f66b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55f8c10f67d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55f8c10f69c8 <line:653:22>
| `-NonNullAttr 0x55f8c10f6a20 <col:63, col:77> 1
|-FunctionDecl 0x55f8c10f6b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55f8c10f6a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f8c10f6c30 <col:69>
|-FunctionDecl 0x55f8c10f6da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55f8c10f6c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f8c10f6e50 <col:72>
|-FunctionDecl 0x55f8c10f7088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55f8c10f6eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55f8c10f6f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55f8c10f7138 <col:44>
|-FunctionDecl 0x55f8c10f7358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55f8c10f71a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f8c10f7218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55f8c10f7408 <line:660:22>
| `-NonNullAttr 0x55f8c10f7460 <col:63, col:77> 2
|-FunctionDecl 0x55f8c10f78a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55f8c10f7540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55f8c10f7650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55f8c10f7760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55f8c10f7960 <col:47>
|-FunctionDecl 0x55f8c10f7af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55f8c10f79d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f8c10f7c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55f8c10f7bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f8c10f7da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55f8c10f7d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f8c10f7e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55f8c10f7f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55f8c10f7fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55f8c10f80a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55f8c10f8120 prev 0x55f8c10f80a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55f8c10f8188 <col:24> 'int' 0
|-VarDecl 0x55f8c10f81c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55f8c10f8240 prev 0x55f8c10f81c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55f8c10f82a8 <col:27> 'int' 0
|-VarDecl 0x55f8c10f82e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55f8c10f8360 prev 0x55f8c10f82e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55f8c10f83c8 <col:27> 'int' 0
|-VarDecl 0x55f8c10f83f8 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55f8c10f8470 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55f8c10f84f0 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x55f8c10f8570 prev 0x55f8c10f84f0 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55f8c10f85d8 <col:9> 'int' 0
|-VarDecl 0x55f8c10f8610 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x55f8c10f8690 prev 0x55f8c10f8610 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55f8c10f86f8 <col:9> 'int' 0
|-VarDecl 0x55f8c10f8730 <line:683:1, col:5> col:5 used z 'int'
|-VarDecl 0x55f8c10f87b0 prev 0x55f8c10f8730 <line:684:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55f8c10f8818 <col:9> 'int' 0
|-VarDecl 0x55f8c10f8848 <line:685:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55f8c10f88c8 <line:686:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55f8c10f8940 <line:687:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55f8c10f89b8 <line:688:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55f8c10f8a30 <line:689:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55f8c10f8b00 <line:690:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55f8c10f8b78 <line:691:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55f8c10f8bf0 <line:692:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55f8c10f8c68 <line:693:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55f8c10f8ce0 <line:694:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55f8c10f8d58 <line:695:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55f8c10f8dd8 <line:696:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55f8c10f8e58 <line:697:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55f8c10f8ed0 <line:698:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55f8c10f8f50 <line:699:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55f8c10f8fc8 <line:700:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55f8c10f9040 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55f8c10f90b8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55f8c10f91d0 prev 0x55f8c10f7af0 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55f8c10f9138 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f8c10fa9f8 <line:704:1, line:731:1>
|   |-CallExpr 0x55f8c10f92e8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10f92d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10f9278 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10f9360 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f8c10f9308 <col:3> 'int' lvalue Var 0x55f8c10f8f50 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55f8c10f9348 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8c10f9328 <col:15> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55f8c10f93c0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f8c10f9380 <col:3> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55f8c10f93a0 <col:15> 'int' 2
|   |-BinaryOperator 0x55f8c10f9438 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10f93e0 <col:3> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10f9420 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8c10f9400 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f8c10f94d0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10f9458 <col:3> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55f8c10f94a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f8c10f9478 <col:27> 'int' 1
|   |-CallExpr 0x55f8c10f9658 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55f8c10f9640 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f8c10f94f0 <col:3> 'void (int)' Function 0x55f8c109ebc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55f8c10f95f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55f8c10f95d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55f8c10f95b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55f8c10f9568 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55f8c10f9550 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55f8c10f9510 <col:23> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55f8c10f9598 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55f8c10f9580 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55f8c10f9530 <col:41> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f8c10f96d8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10f9680 <col:3> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10f96c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8c10f96a0 <col:20> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55f8c10f9750 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10f96f8 <col:3> '_Bool' lvalue Var 0x55f8c10f8bf0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10f9738 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8c10f9718 <col:20> '_Bool' lvalue Var 0x55f8c10f89b8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f8c10f97c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10f9770 <col:3> '_Bool' lvalue Var 0x55f8c10f8c68 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10f97b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8c10f9790 <col:20> '_Bool' lvalue Var 0x55f8c10f8a30 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f8c10f9840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10f97e8 <col:3> '_Bool' lvalue Var 0x55f8c10f8ce0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10f9828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8c10f9808 <col:20> '_Bool' lvalue Var 0x55f8c10f8b00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55f8c10f98d8 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10f9860 <col:3> '_Bool' lvalue Var 0x55f8c10f89b8 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55f8c10f98b0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f8c10f9880 <col:27> 'int' 1
|   |-CallExpr 0x55f8c10f9930 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10f9918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10f98f8 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f8c10f9988 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10f9970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10f9950 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10f99e8 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f8c10f99a8 <col:3> 'int' lvalue Var 0x55f8c10f8570 'x' 'int'
|   | `-IntegerLiteral 0x55f8c10f99c8 <col:7> 'int' 1
|   |-CallExpr 0x55f8c10f9a40 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10f9a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10f9a08 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f8c10f9a98 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10f9a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10f9a60 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10f9d98 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f8c10f9ab8 <col:3> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
|   | `-ConditionalOperator 0x55f8c10f9d68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f8c10f9b90 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f8c10f9b48 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f8c10f9b30 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f8c10f9ad8 <col:7> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f8c10f9b78 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f8c10f9b60 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f8c10f9b10 <col:25> '_Bool' lvalue Var 0x55f8c10f89b8 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55f8c10f9d50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f8c10f9bb0 <col:42> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55f8c10f9d30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f8c10f9d00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f8c10f9c70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f8c10f9c28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f8c10f9c10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f8c10f9bd0 <col:55> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f8c10f9c58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f8c10f9c40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f8c10f9bf0 <col:73> '_Bool' lvalue Var 0x55f8c10f8bf0 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f8c10f9cd0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f8c10f9c90 <col:90> 'int' lvalue Var 0x55f8c10f8f50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f8c10f9ce8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10f9cb0 <col:102> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
|   |-BinaryOperator 0x55f8c10f9fa0 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10f9db8 <col:3> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10f9f88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10f9f58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f8c10f9e78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f8c10f9e30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f8c10f9e18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f8c10f9dd8 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f8c10f9e60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f8c10f9e48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f8c10f9df8 <col:38> '_Bool' lvalue Var 0x55f8c10f89b8 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10f9f10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10f9ec8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10f9e98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10f9f40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10f9f28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10f9ef0 <col:66> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f8c10fa288 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10f9fc0 <col:3> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10fa270 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10fa240 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f8c10fa160 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f8c10fa080 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f8c10fa038 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f8c10fa020 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f8c10f9fe0 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f8c10fa068 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f8c10fa050 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f8c10fa000 <col:38> '_Bool' lvalue Var 0x55f8c10f89b8 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55f8c10fa140 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f8c10fa0f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f8c10fa0e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f8c10fa0a0 <col:56> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f8c10fa128 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f8c10fa110 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f8c10fa0c0 <col:74> '_Bool' lvalue Var 0x55f8c10f8bf0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10fa1f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10fa1b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10fa180 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10fa228 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10fa210 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fa1d8 <col:102> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f8c10fa490 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10fa2a8 <col:3> '_Bool' lvalue Var 0x55f8c10f89b8 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10fa478 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10fa448 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f8c10fa368 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f8c10fa320 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f8c10fa308 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f8c10fa2c8 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f8c10fa350 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f8c10fa338 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f8c10fa2e8 <col:38> '_Bool' lvalue Var 0x55f8c10f89b8 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10fa400 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10fa3b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10fa388 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10fa430 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10fa418 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fa3e0 <col:66> '_Bool' lvalue Var 0x55f8c10f89b8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f8c10fa778 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10fa4b0 <col:3> '_Bool' lvalue Var 0x55f8c10f8bf0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10fa760 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10fa730 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f8c10fa650 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f8c10fa570 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f8c10fa528 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f8c10fa510 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f8c10fa4d0 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f8c10fa558 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f8c10fa540 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f8c10fa4f0 <col:38> '_Bool' lvalue Var 0x55f8c10f89b8 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55f8c10fa630 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f8c10fa5e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f8c10fa5d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f8c10fa590 <col:56> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f8c10fa618 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f8c10fa600 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f8c10fa5b0 <col:74> '_Bool' lvalue Var 0x55f8c10f8bf0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10fa6e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10fa6a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10fa670 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10fa718 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10fa700 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fa6c8 <col:102> '_Bool' lvalue Var 0x55f8c10f8bf0 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55f8c10fa7d0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fa7b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fa798 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f8c10fa828 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fa810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fa7f0 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10fa8e0 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f8c10fa848 <col:3> 'int' lvalue Var 0x55f8c10f8120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f8c10fa8c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f8c10fa8a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f8c10fa868 <col:22> 'int' lvalue Var 0x55f8c10f8120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f8c10fa888 <col:41> 'int' 1
|   |-CallExpr 0x55f8c10fa938 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fa920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fa900 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f8c10fa9e8 <line:730:3, col:36>
|     `-CallExpr 0x55f8c10fa9c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f8c10fa9b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f8c10fa958 <col:10> 'void *(void)' Function 0x55f8c109e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f8c10fabb8 prev 0x55f8c10f7c48 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55f8c10fab20 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f8c10fbdf0 <line:733:1, line:751:1>
|   |-CallExpr 0x55f8c10fac98 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fac80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fac60 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10fad10 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f8c10facb8 <col:3> 'int' lvalue Var 0x55f8c10f8240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f8c10facf8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8c10facd8 <col:25> 'int' lvalue Var 0x55f8c10f8570 'x' 'int'
|   |-CallExpr 0x55f8c10fad68 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fad50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fad30 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f8c10fadc0 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fada8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fad88 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10fae20 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f8c10fade0 <col:3> 'int' lvalue Var 0x55f8c10f8690 'y' 'int'
|   | `-IntegerLiteral 0x55f8c10fae00 <col:7> 'int' 1
|   |-CallExpr 0x55f8c10fae78 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fae60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fae40 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f8c10faed0 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10faeb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fae98 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10fb1b8 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f8c10faef0 <col:3> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
|   | `-ConditionalOperator 0x55f8c10fb188 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f8c10fafb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f8c10faf68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f8c10faf50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f8c10faf10 <col:7> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f8c10faf98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f8c10faf80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f8c10faf30 <col:25> '_Bool' lvalue Var 0x55f8c10f8a30 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f8c10fb170 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f8c10fafd0 <col:42> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55f8c10fb150 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f8c10fb120 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f8c10fb090 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f8c10fb048 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f8c10fb030 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f8c10faff0 <col:55> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f8c10fb078 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f8c10fb060 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f8c10fb010 <col:73> '_Bool' lvalue Var 0x55f8c10f8c68 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f8c10fb0f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f8c10fb0b0 <col:90> 'int' lvalue Var 0x55f8c10f8f50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f8c10fb108 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fb0d0 <col:102> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
|   |-BinaryOperator 0x55f8c10fb3c0 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10fb1d8 <col:3> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10fb3a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10fb378 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f8c10fb298 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f8c10fb250 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f8c10fb238 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f8c10fb1f8 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f8c10fb280 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f8c10fb268 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f8c10fb218 <col:38> '_Bool' lvalue Var 0x55f8c10f8a30 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10fb330 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10fb2e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10fb2b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10fb360 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10fb348 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fb310 <col:66> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f8c10fb6a8 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10fb3e0 <col:3> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10fb690 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10fb660 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f8c10fb580 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f8c10fb4a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f8c10fb458 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f8c10fb440 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f8c10fb400 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f8c10fb488 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f8c10fb470 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f8c10fb420 <col:38> '_Bool' lvalue Var 0x55f8c10f8a30 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f8c10fb560 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f8c10fb518 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f8c10fb500 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f8c10fb4c0 <col:56> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f8c10fb548 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f8c10fb530 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f8c10fb4e0 <col:74> '_Bool' lvalue Var 0x55f8c10f8c68 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10fb618 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10fb5d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10fb5a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10fb648 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10fb630 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fb5f8 <col:102> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f8c10fb8b0 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10fb6c8 <col:3> '_Bool' lvalue Var 0x55f8c10f8a30 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10fb898 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10fb868 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f8c10fb788 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f8c10fb740 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f8c10fb728 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f8c10fb6e8 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f8c10fb770 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f8c10fb758 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f8c10fb708 <col:38> '_Bool' lvalue Var 0x55f8c10f8a30 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10fb820 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10fb7d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10fb7a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10fb850 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10fb838 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fb800 <col:66> '_Bool' lvalue Var 0x55f8c10f8a30 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f8c10fbba8 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10fb8d0 <col:3> '_Bool' lvalue Var 0x55f8c10f8c68 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10fbb90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10fbb60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f8c10fba70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f8c10fb990 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f8c10fb948 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f8c10fb930 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f8c10fb8f0 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f8c10fb978 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f8c10fb960 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f8c10fb910 <col:38> '_Bool' lvalue Var 0x55f8c10f8a30 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f8c10fba50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f8c10fba08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f8c10fb9f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f8c10fb9b0 <col:56> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f8c10fba38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f8c10fba20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f8c10fb9d0 <col:74> '_Bool' lvalue Var 0x55f8c10f8c68 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10fbb08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10fbac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10fba90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10fbb48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10fbb30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fbae8 <col:102> '_Bool' lvalue Var 0x55f8c10f8c68 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55f8c10fbc00 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fbbe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fbbc8 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f8c10fbc58 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fbc40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fbc20 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10fbd10 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f8c10fbc78 <col:3> 'int' lvalue Var 0x55f8c10f8120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f8c10fbcf0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f8c10fbcd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f8c10fbc98 <col:22> 'int' lvalue Var 0x55f8c10f8120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f8c10fbcb8 <col:41> 'int' 1
|   |-CallExpr 0x55f8c10fbd68 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fbd50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fbd30 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f8c10fbde0 <line:750:3, col:36>
|     `-CallExpr 0x55f8c10fbdc0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f8c10fbda8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f8c10fbd88 <col:10> 'void *(void)' Function 0x55f8c109e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f8c10fbf38 prev 0x55f8c10f7da0 <line:752:1, line:771:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55f8c10fbea0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f8c10fd178 <line:753:1, line:771:1>
|   |-CallExpr 0x55f8c10fc018 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fc000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fbfe0 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10fc090 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f8c10fc038 <col:3> 'int' lvalue Var 0x55f8c10f8360 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f8c10fc078 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f8c10fc058 <col:25> 'int' lvalue Var 0x55f8c10f8690 'y' 'int'
|   |-CallExpr 0x55f8c10fc0e8 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fc0d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fc0b0 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f8c10fc140 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fc128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fc108 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10fc1a0 <line:758:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f8c10fc160 <col:3> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
|   | `-IntegerLiteral 0x55f8c10fc180 <col:7> 'int' 1
|   |-CallExpr 0x55f8c10fc1f8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fc1e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fc1c0 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f8c10fc250 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fc238 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fc218 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10fc538 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f8c10fc270 <col:3> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
|   | `-ConditionalOperator 0x55f8c10fc508 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f8c10fc330 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f8c10fc2e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f8c10fc2d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f8c10fc290 <col:7> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f8c10fc318 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f8c10fc300 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f8c10fc2b0 <col:25> '_Bool' lvalue Var 0x55f8c10f8b00 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55f8c10fc4f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f8c10fc350 <col:42> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55f8c10fc4d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f8c10fc4a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f8c10fc410 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f8c10fc3c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f8c10fc3b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f8c10fc370 <col:55> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f8c10fc3f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f8c10fc3e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f8c10fc390 <col:73> '_Bool' lvalue Var 0x55f8c10f8ce0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55f8c10fc470 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f8c10fc430 <col:90> 'int' lvalue Var 0x55f8c10f8f50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f8c10fc488 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fc450 <col:102> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
|   |-BinaryOperator 0x55f8c10fc740 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10fc558 <col:3> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10fc728 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10fc6f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f8c10fc618 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f8c10fc5d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f8c10fc5b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f8c10fc578 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f8c10fc600 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f8c10fc5e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f8c10fc598 <col:38> '_Bool' lvalue Var 0x55f8c10f8b00 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10fc6b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10fc668 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10fc638 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10fc6e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10fc6c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fc690 <col:66> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f8c10fca28 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10fc760 <col:3> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10fca10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10fc9e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f8c10fc900 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f8c10fc820 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f8c10fc7d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f8c10fc7c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f8c10fc780 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f8c10fc808 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f8c10fc7f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f8c10fc7a0 <col:38> '_Bool' lvalue Var 0x55f8c10f8b00 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55f8c10fc8e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f8c10fc898 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f8c10fc880 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f8c10fc840 <col:56> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f8c10fc8c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f8c10fc8b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f8c10fc860 <col:74> '_Bool' lvalue Var 0x55f8c10f8ce0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10fc998 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10fc950 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10fc920 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10fc9c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10fc9b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fc978 <col:102> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f8c10fcc48 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10fca48 <col:3> '_Bool' lvalue Var 0x55f8c10f8b00 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10fcc30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10fcc00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f8c10fcb08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f8c10fcac0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f8c10fcaa8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f8c10fca68 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f8c10fcaf0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f8c10fcad8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f8c10fca88 <col:38> '_Bool' lvalue Var 0x55f8c10f8b00 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10fcbb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10fcb70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10fcb40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10fcbe8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10fcbd0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fcb98 <col:66> '_Bool' lvalue Var 0x55f8c10f8b00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55f8c10fcf30 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f8c10fcc68 <col:3> '_Bool' lvalue Var 0x55f8c10f8ce0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55f8c10fcf18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f8c10fcee8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f8c10fce08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f8c10fcd28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f8c10fcce0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f8c10fccc8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f8c10fcc88 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f8c10fcd10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f8c10fccf8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f8c10fcca8 <col:38> '_Bool' lvalue Var 0x55f8c10f8b00 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55f8c10fcde8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f8c10fcda0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f8c10fcd88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f8c10fcd48 <col:56> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f8c10fcdd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f8c10fcdb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f8c10fcd68 <col:74> '_Bool' lvalue Var 0x55f8c10f8ce0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55f8c10fcea0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f8c10fce58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f8c10fce28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f8c10fced0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f8c10fceb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f8c10fce80 <col:102> '_Bool' lvalue Var 0x55f8c10f8ce0 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55f8c10fcf88 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fcf70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fcf50 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f8c10fcfe0 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fcfc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fcfa8 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f8c10fd098 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f8c10fd000 <col:3> 'int' lvalue Var 0x55f8c10f8120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f8c10fd078 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f8c10fd060 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f8c10fd020 <col:22> 'int' lvalue Var 0x55f8c10f8120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f8c10fd040 <col:41> 'int' 1
|   |-CallExpr 0x55f8c10fd0f0 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f8c10fd0d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f8c10fd0b8 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f8c10fd168 <line:770:3, col:36>
|     `-CallExpr 0x55f8c10fd148 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f8c10fd130 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f8c10fd110 <col:10> 'void *(void)' Function 0x55f8c109e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f8c10fd230 prev 0x55f8c10f7e68 <line:772:1, line:774:1> line:772:6 fence 'void ()'
| `-CompoundStmt 0x55f8c10fd2d0 <line:773:1, line:774:1>
|-FunctionDecl 0x55f8c10fd300 prev 0x55f8c10f7f28 <line:775:1, line:777:1> line:775:6 isync 'void ()'
| `-CompoundStmt 0x55f8c10fd3a0 <line:776:1, line:777:1>
|-FunctionDecl 0x55f8c10fd3d0 prev 0x55f8c10f7fe8 <line:778:1, line:780:1> line:778:6 lwfence 'void ()'
| `-CompoundStmt 0x55f8c10fd470 <line:779:1, line:780:1>
`-FunctionDecl 0x55f8c10fd4d8 <line:781:1, line:818:1> line:781:5 main 'int ()'
  `-CompoundStmt 0x55f8c1101b90 <line:782:1, line:818:1>
    |-DeclStmt 0x55f8c10fd5f0 <line:783:3, col:18>
    | `-VarDecl 0x55f8c10fd588 <col:3, col:13> col:13 used t1963 'pthread_t':'unsigned long'
    |-CallExpr 0x55f8c10fd7f8 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f8c10fd7e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f8c10fd608 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f8c10df488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f8c10fd648 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f8c10fd628 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f8c10fd588 't1963' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f8c10fd838 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f8c10fd6c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f8c10fd698 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f8c10fd660 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f8c10fd850 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f8c10fd6e0 <col:39> 'void *(void *)' Function 0x55f8c10f91d0 'P0' 'void *(void *)'
    | `-ParenExpr 0x55f8c10fd760 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f8c10fd738 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f8c10fd700 <col:52> 'int' 0
    |-DeclStmt 0x55f8c10fd8e0 <line:785:3, col:18>
    | `-VarDecl 0x55f8c10fd878 <col:3, col:13> col:13 used t1964 'pthread_t':'unsigned long'
    |-CallExpr 0x55f8c10fda88 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f8c10fda70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f8c10fd8f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f8c10df488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f8c10fd938 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f8c10fd918 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f8c10fd878 't1964' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f8c10fdac8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f8c10fd9b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f8c10fd988 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f8c10fd950 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f8c10fdae0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f8c10fd9d0 <col:39> 'void *(void *)' Function 0x55f8c10fabb8 'P1' 'void *(void *)'
    | `-ParenExpr 0x55f8c10fda50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f8c10fda28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f8c10fd9f0 <col:52> 'int' 0
    |-DeclStmt 0x55f8c10fdbb8 <line:787:3, col:18>
    | `-VarDecl 0x55f8c10fdb50 <col:3, col:13> col:13 used t1965 'pthread_t':'unsigned long'
    |-CallExpr 0x55f8c10fdd60 <line:788:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f8c10fdd48 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f8c10fdbd0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f8c10df488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f8c10fdc10 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f8c10fdbf0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f8c10fdb50 't1965' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f8c10fdda0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f8c10fdc88 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f8c10fdc60 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f8c10fdc28 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f8c10fddb8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f8c10fdca8 <col:39> 'void *(void *)' Function 0x55f8c10fbf38 'P2' 'void *(void *)'
    | `-ParenExpr 0x55f8c10fdd28 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f8c10fdd00 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f8c10fdcc8 <col:52> 'int' 0
    |-CallExpr 0x55f8c10fde08 <line:789:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f8c10fddf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f8c10fddd0 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f8c10fded8 <line:790:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55f8c10fde28 <col:3> '_Bool' lvalue Var 0x55f8c10f83f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55f8c10fdec0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55f8c10fdea0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55f8c10fde88 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55f8c10fde48 <col:21> 'int' lvalue Var 0x55f8c10f8120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55f8c10fde68 <col:41> 'int' 3
    |-CallExpr 0x55f8c10fdf30 <line:791:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f8c10fdf18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f8c10fdef8 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f8c10fdfa8 <line:792:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f8c10fdf90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f8c10fdf50 <col:3> 'void (int)' Function 0x55f8c109e790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55f8c10fdfe8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f8c10fdfd0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f8c10fdf70 <col:21> '_Bool' lvalue Var 0x55f8c10f83f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55f8c10fe038 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f8c10fe020 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f8c10fe000 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f8c10fe320 <line:794:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55f8c10fe058 <col:3> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
    | `-ConditionalOperator 0x55f8c10fe2f0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55f8c10fe118 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55f8c10fe0d0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55f8c10fe0b8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55f8c10fe078 <col:7> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55f8c10fe100 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55f8c10fe0e8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55f8c10fe098 <col:25> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f8c10fe2d8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f8c10fe138 <col:42> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55f8c10fe2b8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55f8c10fe288 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55f8c10fe1f8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f8c10fe1b0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f8c10fe198 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f8c10fe158 <col:55> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f8c10fe1e0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f8c10fe1c8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f8c10fe178 <col:73> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f8c10fe258 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f8c10fe218 <col:90> 'int' lvalue Var 0x55f8c10f8f50 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55f8c10fe270 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f8c10fe238 <col:102> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
    |-BinaryOperator 0x55f8c10fe528 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f8c10fe340 <col:3> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f8c10fe510 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f8c10fe4e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f8c10fe400 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f8c10fe3b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f8c10fe3a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f8c10fe360 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f8c10fe3e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f8c10fe3d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f8c10fe380 <col:38> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f8c10fe498 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f8c10fe450 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f8c10fe420 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f8c10fe4c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f8c10fe4b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f8c10fe478 <col:66> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f8c10fe810 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f8c10fe548 <col:3> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f8c10fe7f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f8c10fe7c8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f8c10fe6e8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f8c10fe608 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f8c10fe5c0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f8c10fe5a8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f8c10fe568 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f8c10fe5f0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f8c10fe5d8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f8c10fe588 <col:38> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f8c10fe6c8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f8c10fe680 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f8c10fe668 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f8c10fe628 <col:56> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f8c10fe6b0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f8c10fe698 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f8c10fe648 <col:74> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f8c10fe780 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f8c10fe738 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f8c10fe708 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f8c10fe7b0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f8c10fe798 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f8c10fe760 <col:102> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55f8c10fea18 <line:797:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f8c10fe830 <col:3> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f8c10fea00 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f8c10fe9d0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f8c10fe8f0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f8c10fe8a8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f8c10fe890 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f8c10fe850 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f8c10fe8d8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f8c10fe8c0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f8c10fe870 <col:38> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f8c10fe988 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f8c10fe940 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f8c10fe910 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f8c10fe9b8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f8c10fe9a0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f8c10fe968 <col:66> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f8c10fed28 <line:798:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f8c10fea38 <col:3> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f8c10fed10 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f8c10fece0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f8c10fec00 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f8c10feaf8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f8c10feab0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f8c10fea98 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f8c10fea58 <col:20> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f8c10feae0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f8c10feac8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f8c10fea78 <col:38> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f8c10febe0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f8c10feb98 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f8c10feb80 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f8c10feb18 <col:56> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f8c10febc8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f8c10febb0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f8c10feb60 <col:74> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f8c10fec98 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f8c10fec50 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f8c10fec20 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f8c10fecc8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f8c10fecb0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f8c10fec78 <col:102> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55f8c10fed80 <line:799:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f8c10fed68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f8c10fed48 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f8c10fedd8 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f8c10fedc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f8c10feda0 <col:3> 'void ()' Function 0x55f8c109ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f8c10fee88 <line:801:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55f8c10fedf8 <col:3> '_Bool' lvalue Var 0x55f8c10f9040 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x55f8c10fee70 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55f8c10fee50 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55f8c10fee38 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55f8c10fee18 <col:19> 'void *(void)' Function 0x55f8c109e958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55f8c10fef38 <line:802:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55f8c10feea8 <col:3> '_Bool' lvalue Var 0x55f8c10f90b8 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x55f8c10fef20 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55f8c10fef00 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55f8c10feee8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55f8c10feec8 <col:19> 'void *(void)' Function 0x55f8c109e958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55f8c10fefb0 <line:803:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55f8c10fef58 <col:3> '_Bool' lvalue Var 0x55f8c10f8848 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55f8c10fef98 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55f8c10fef78 <col:21> '_Bool' lvalue Var 0x55f8c10f90b8 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55f8c10ff028 <line:804:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55f8c10fefd0 <col:3> 'int' lvalue Var 0x55f8c10f88c8 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55f8c10ff010 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55f8c10feff0 <col:15> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
    |-BinaryOperator 0x55f8c10ff460 <line:805:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55f8c10ff048 <col:3> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
    | `-ConditionalOperator 0x55f8c10ff430 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55f8c10ff258 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55f8c10ff178 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55f8c10ff0a0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55f8c10ff088 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55f8c10ff068 <col:8> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55f8c10ff158 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55f8c10ff0f0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55f8c10ff0d8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55f8c10ff0b8 <col:27> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55f8c10ff140 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55f8c10ff128 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55f8c10ff108 <col:46> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55f8c10ff238 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55f8c10ff1d0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55f8c10ff1b8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55f8c10ff198 <col:65> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55f8c10ff220 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55f8c10ff208 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55f8c10ff1e8 <col:84> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f8c10ff418 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f8c10ff278 <col:101> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
    |   `-ParenExpr 0x55f8c10ff3f8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55f8c10ff3c8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55f8c10ff338 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f8c10ff2f0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f8c10ff2d8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f8c10ff298 <col:106> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f8c10ff320 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f8c10ff308 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f8c10ff2b8 <col:124> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f8c10ff398 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f8c10ff358 <col:141> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55f8c10ff3b0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f8c10ff378 <col:153> 'int' lvalue Var 0x55f8c10f8f50 'z$w_buff1' 'int'
    |-BinaryOperator 0x55f8c10ff970 <line:806:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55f8c10ff480 <col:3> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x55f8c10ff940 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55f8c10ff910 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f8c10ff8f8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f8c10ff4a0 <col:15> '_Bool' lvalue Var 0x55f8c10f90b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55f8c10ff928 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f8c10ff4c0 <col:31> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55f8c10ff8d8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55f8c10ff8a8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55f8c10ff6d0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55f8c10ff5f0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55f8c10ff518 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55f8c10ff500 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55f8c10ff4e0 <col:45> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55f8c10ff5d0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55f8c10ff568 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55f8c10ff550 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55f8c10ff530 <col:64> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55f8c10ff5b8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55f8c10ff5a0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55f8c10ff580 <col:83> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55f8c10ff6b0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55f8c10ff648 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55f8c10ff630 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55f8c10ff610 <col:102> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55f8c10ff698 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55f8c10ff680 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55f8c10ff660 <col:121> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f8c10ff890 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f8c10ff6f0 <col:138> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
    |       `-ParenExpr 0x55f8c10ff870 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55f8c10ff840 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55f8c10ff7b0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55f8c10ff768 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55f8c10ff750 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55f8c10ff710 <col:151> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55f8c10ff798 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55f8c10ff780 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55f8c10ff730 <col:169> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55f8c10ff810 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f8c10ff7d0 <col:186> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55f8c10ff828 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55f8c10ff7f0 <col:198> 'int' lvalue Var 0x55f8c10f8e58 'z$w_buff0' 'int'
    |-BinaryOperator 0x55f8c10ffe98 <line:807:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55f8c10ff990 <col:3> 'int' lvalue Var 0x55f8c10f8f50 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x55f8c10ffe68 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55f8c10ffe38 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f8c10ffe20 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f8c10ff9b0 <col:15> '_Bool' lvalue Var 0x55f8c10f90b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55f8c10ffe50 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f8c10ff9d0 <col:31> 'int' lvalue Var 0x55f8c10f8f50 'z$w_buff1' 'int'
    |   `-ParenExpr 0x55f8c10ffe00 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55f8c10ffdd0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55f8c10ffbf8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55f8c10ffb00 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55f8c10ffa28 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55f8c10ffa10 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55f8c10ff9f0 <col:45> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55f8c10ffae0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55f8c10ffa78 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55f8c10ffa60 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55f8c10ffa40 <col:64> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55f8c10ffac8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55f8c10ffab0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55f8c10ffa90 <col:83> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55f8c10ffbd8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55f8c10ffb70 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55f8c10ffb40 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55f8c10ffb20 <col:102> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55f8c10ffbc0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55f8c10ffba8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55f8c10ffb88 <col:121> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f8c10ffdb8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f8c10ffc18 <col:138> 'int' lvalue Var 0x55f8c10f8f50 'z$w_buff1' 'int'
    |       `-ParenExpr 0x55f8c10ffd98 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55f8c10ffd68 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55f8c10ffcd8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55f8c10ffc90 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55f8c10ffc78 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55f8c10ffc38 <col:151> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55f8c10ffcc0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55f8c10ffca8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55f8c10ffc58 <col:169> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55f8c10ffd38 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f8c10ffcf8 <col:186> 'int' lvalue Var 0x55f8c10f8f50 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55f8c10ffd50 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55f8c10ffd18 <col:198> 'int' lvalue Var 0x55f8c10f8f50 'z$w_buff1' 'int'
    |-BinaryOperator 0x55f8c1100440 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55f8c10ffeb8 <col:3> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f8c1100428 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f8c11003f8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55f8c11003b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f8c1100398 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f8c10ffed8 <col:20> '_Bool' lvalue Var 0x55f8c10f90b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f8c11003e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f8c11003c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f8c10ffef8 <col:36> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55f8c1100378 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55f8c1100348 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55f8c1100108 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f8c1100028 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f8c10fff50 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f8c10fff38 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f8c10fff18 <col:55> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f8c1100008 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f8c10fffa0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f8c10fff88 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f8c10fff68 <col:74> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f8c10ffff0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f8c10fffd8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f8c10fffb8 <col:93> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f8c11000e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f8c1100080 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f8c1100068 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f8c1100048 <col:112> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f8c11000d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f8c11000b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f8c1100098 <col:131> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f8c1100330 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f8c1100318 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f8c1100128 <col:148> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55f8c11002f8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55f8c11002c8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55f8c11001e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f8c11001a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f8c1100188 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f8c1100148 <col:166> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f8c11001d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f8c11001b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f8c1100168 <col:184> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f8c1100280 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f8c1100238 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f8c1100208 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f8c11002b0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55f8c1100298 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55f8c1100260 <col:212> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f8c1100a08 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55f8c1100460 <col:3> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f8c11009f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f8c11009c0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55f8c1100978 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f8c1100960 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f8c1100480 <col:20> '_Bool' lvalue Var 0x55f8c10f90b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f8c11009a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f8c1100990 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f8c11004a0 <col:36> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55f8c1100940 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55f8c1100910 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55f8c11006b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f8c11005d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f8c11004f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f8c11004e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f8c11004c0 <col:55> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f8c11005b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f8c1100548 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f8c1100530 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f8c1100510 <col:74> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f8c1100598 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f8c1100580 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f8c1100560 <col:93> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f8c1100690 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f8c1100628 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f8c1100610 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f8c11005f0 <col:112> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f8c1100678 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f8c1100660 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f8c1100640 <col:131> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f8c11008f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f8c11008e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f8c11006d0 <col:148> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55f8c11008c0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55f8c1100890 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55f8c1100790 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f8c1100748 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f8c1100730 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f8c11006f0 <col:166> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f8c1100778 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f8c1100760 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f8c1100710 <col:184> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f8c1100860 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f8c11007e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f8c11007b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f8c1100878 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55f8c1100838 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55f8c1100808 <col:219> 'int' 0
    |-BinaryOperator 0x55f8c1100fd0 <line:810:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55f8c1100a28 <col:3> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f8c1100fb8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f8c1100f88 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55f8c1100f40 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f8c1100f28 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f8c1100a48 <col:20> '_Bool' lvalue Var 0x55f8c10f90b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f8c1100f70 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f8c1100f58 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f8c1100a68 <col:36> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55f8c1100f08 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55f8c1100ed8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55f8c1100c98 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f8c1100bb8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f8c1100ac0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f8c1100aa8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f8c1100a88 <col:55> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f8c1100b98 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f8c1100b10 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f8c1100af8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f8c1100ad8 <col:74> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f8c1100b80 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f8c1100b48 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f8c1100b28 <col:93> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f8c1100c78 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f8c1100c10 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f8c1100bf8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f8c1100bd8 <col:112> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f8c1100c60 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f8c1100c48 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f8c1100c28 <col:131> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f8c1100ec0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f8c1100ea8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f8c1100cb8 <col:148> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55f8c1100e88 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55f8c1100e58 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55f8c1100d78 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f8c1100d30 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f8c1100d18 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f8c1100cd8 <col:166> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f8c1100d60 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f8c1100d48 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f8c1100cf8 <col:184> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f8c1100e10 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f8c1100dc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f8c1100d98 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f8c1100e40 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55f8c1100e28 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55f8c1100df0 <col:212> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f8c1101598 <line:811:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55f8c1100ff0 <col:3> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f8c1101580 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f8c1101550 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55f8c1101508 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f8c11014f0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f8c1101010 <col:20> '_Bool' lvalue Var 0x55f8c10f90b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f8c1101538 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f8c1101520 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f8c1101030 <col:36> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55f8c11014d0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55f8c11014a0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55f8c1101240 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f8c1101160 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f8c1101088 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f8c1101070 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f8c1101050 <col:55> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f8c1101140 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f8c11010d8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f8c11010c0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f8c11010a0 <col:74> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f8c1101128 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f8c1101110 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f8c11010f0 <col:93> '_Bool' lvalue Var 0x55f8c10f8fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f8c1101220 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f8c11011b8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f8c11011a0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f8c1101180 <col:112> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f8c1101208 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f8c11011f0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f8c11011d0 <col:131> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f8c1101488 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f8c1101470 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f8c1101260 <col:148> '_Bool' lvalue Var 0x55f8c10f8b78 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55f8c1101450 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55f8c1101420 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55f8c1101320 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f8c11012d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f8c11012c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f8c1101280 <col:166> '_Bool' lvalue Var 0x55f8c10f8ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f8c1101308 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f8c11012f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f8c11012a0 <col:184> '_Bool' lvalue Var 0x55f8c10f8940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f8c11013f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f8c1101370 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f8c1101340 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f8c1101408 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55f8c11013c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55f8c1101398 <col:219> 'int' 0
    |-BinaryOperator 0x55f8c11017d0 <line:812:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x55f8c11015b8 <col:3> '_Bool' lvalue Var 0x55f8c10f8470 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55f8c11017b8 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55f8c11017a0 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55f8c1101780 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x55f8c1101760 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x55f8c11016c8 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x55f8c1101630 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55f8c1101618 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55f8c11015d8 <col:23> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
    |         | | `-IntegerLiteral 0x55f8c11015f8 <col:28> 'int' 2
    |         | `-BinaryOperator 0x55f8c11016a8 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55f8c1101690 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55f8c1101650 <col:33> 'int' lvalue Var 0x55f8c10f8240 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55f8c1101670 <col:56> 'int' 1
    |         `-BinaryOperator 0x55f8c1101740 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x55f8c1101728 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f8c11016e8 <col:61> 'int' lvalue Var 0x55f8c10f8360 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55f8c1101708 <col:84> 'int' 1
    |-BinaryOperator 0x55f8c1101900 <line:813:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55f8c11017f0 <col:3> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
    | `-ConditionalOperator 0x55f8c11018d0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55f8c1101888 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f8c1101870 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f8c1101810 <col:7> '_Bool' lvalue Var 0x55f8c10f8848 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55f8c11018a0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f8c1101830 <col:25> 'int' lvalue Var 0x55f8c10f88c8 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55f8c11018b8 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55f8c1101850 <col:37> 'int' lvalue Var 0x55f8c10f87b0 'z' 'int'
    |-BinaryOperator 0x55f8c1101998 <line:814:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55f8c1101920 <col:3> '_Bool' lvalue Var 0x55f8c10f8848 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55f8c1101970 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55f8c1101940 <col:28> 'int' 0
    |-CallExpr 0x55f8c11019f0 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f8c11019d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f8c11019b8 <col:3> 'void ()' Function 0x55f8c109ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f8c1101a68 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f8c1101a50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f8c1101a10 <col:3> 'void (int)' Function 0x55f8c109ebc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55f8c1101aa8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f8c1101a90 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f8c1101a30 <col:21> '_Bool' lvalue Var 0x55f8c10f8470 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55f8c1101ae0 <line:817:3, col:10>
      `-IntegerLiteral 0x55f8c1101ac0 <col:10> 'int' 0
