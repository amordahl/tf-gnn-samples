TranslationUnitDecl 0x556dddf42e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x556dddf436d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x556dddf433b0 '__int128'
|-TypedefDecl 0x556dddf43748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x556dddf433d0 'unsigned __int128'
|-TypedefDecl 0x556dddf43a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x556dddf43820 'struct __NSConstantString_tag'
|   `-Record 0x556dddf437a0 '__NSConstantString_tag'
|-TypedefDecl 0x556dddf43af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x556dddf43ab0 'char *'
|   `-BuiltinType 0x556dddf42eb0 'char'
|-TypedefDecl 0x556dddf82650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x556dddf43d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x556dddf43bd0 'struct __va_list_tag'
|     `-Record 0x556dddf43b50 '__va_list_tag'
|-FunctionDecl 0x556dddf82770 <./test/safe032_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x556dddf82940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x556dddf82870 <col:31> col:34 'int'
|-FunctionDecl 0x556dddf82ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x556dddf82be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x556dddf82d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x556dddf82c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x556dddf82f58 <col:40, col:99>
|   |-IfStmt 0x556dddf82f28 <col:42, col:88>
|   | |-UnaryOperator 0x556dddf82e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x556dddf82df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x556dddf82dd0 <col:47> 'int' lvalue ParmVar 0x556dddf82c98 'expression' 'int'
|   | `-CompoundStmt 0x556dddf82f10 <col:59, col:88>
|   |   `-LabelStmt 0x556dddf82ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x556dddf82e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x556dddf82e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x556dddf82e20 <col:68> 'void () __attribute__((noreturn))' Function 0x556dddf82be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x556dddf82f40 <col:89>
|   `-ReturnStmt 0x556dddf82f48 <col:91>
|-FunctionDecl 0x556dddf82fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x556dddf83060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x556dddf833e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556dddf83118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x556dddf83198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x556dddf83218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556dddf83298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556dddf834a0 <line:11:22>
|-FunctionDecl 0x556dddfa9520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556dddf83510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x556dddf83590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x556dddfa9350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556dddfa93d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556dddfa95e0 <line:14:22>
|-FunctionDecl 0x556dddfa9890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556dddfa9650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x556dddfa96d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x556dddfa9750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x556dddfa9948 <line:16:22>
|-TypedefDecl 0x556dddfa99b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x556dddf42f70 'unsigned char'
|-TypedefDecl 0x556dddfa9a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x556dddf42f90 'unsigned short'
|-TypedefDecl 0x556dddfa9a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x556dddf42fb0 'unsigned int'
|-TypedefDecl 0x556dddfa9b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfa9b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x556dddf42ed0 'signed char'
|-TypedefDecl 0x556dddfa9be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x556dddf42f70 'unsigned char'
|-TypedefDecl 0x556dddfa9c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x556dddf42ef0 'short'
|-TypedefDecl 0x556dddfa9cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x556dddf42f90 'unsigned short'
|-TypedefDecl 0x556dddfa9d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x556dddf42f10 'int'
|-TypedefDecl 0x556dddfa9da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x556dddf42fb0 'unsigned int'
|-TypedefDecl 0x556dddfa9e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfa9e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfa9ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfa9f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfa9fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfaa048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x556dddf42fb0 'unsigned int'
|-TypedefDecl 0x556dddfaa0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x556dddf42fb0 'unsigned int'
|-TypedefDecl 0x556dddfaa128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfaa198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfaa208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x556dddf42fb0 'unsigned int'
|-TypedefDecl 0x556dddfaa278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfaa2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfaa378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfaa3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x556dddf42f10 'int'
|-RecordDecl 0x556dddfaa440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x556dddfaa588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x556dddfaa640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x556dddfaa5e0 'struct __fsid_t' sugar
|   `-RecordType 0x556dddfaa4c0 '__fsid_t'
|     `-Record 0x556dddfaa440 ''
|-TypedefDecl 0x556dddfaa6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfaa738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfaa7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfaa818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x556dddf42fb0 'unsigned int'
|-TypedefDecl 0x556dddfaa888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfaa8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x556dddf42fb0 'unsigned int'
|-TypedefDecl 0x556dddfaa968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfaa9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x556dddf42f10 'int'
|-TypedefDecl 0x556dddfaaa48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x556dddf42f10 'int'
|-TypedefDecl 0x556dddfaaab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x556dddf42f10 'int'
|-TypedefDecl 0x556dddfaab28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x556dddf43630 'void *'
|   `-BuiltinType 0x556dddf42e70 'void'
|-TypedefDecl 0x556dddfaab98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfaac08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfaac78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfaace8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfaad58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfaadc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfaae38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfaaea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfaaf18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfaaf88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfaaff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfab088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x556dddfab050 '__off64_t' sugar
|   |-Typedef 0x556dddfaa378 '__off64_t'
|   `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfab180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x556dddfab140 '__quad_t *'
|   `-TypedefType 0x556dddfab0e0 '__quad_t' sugar
|     |-Typedef 0x556dddfa9ef8 '__quad_t'
|     `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfab1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x556dddf43ab0 'char *'
|   `-BuiltinType 0x556dddf42eb0 'char'
|-TypedefDecl 0x556dddfab260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfab2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x556dddf42fb0 'unsigned int'
|-FunctionDecl 0x556dddfac458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x556dddfac380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x556dddfac768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x556dddfac758 <line:73:3, col:34>
|     `-CallExpr 0x556dddfac718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x556dddfac700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556dddfac690 <col:10> '<builtin fn type>' Function 0x556dddfac500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x556dddfac740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x556dddfac6b0 <col:29> 'unsigned int' lvalue ParmVar 0x556dddfac380 '__bsx' 'unsigned int'
|-FunctionDecl 0x556dddfac500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x556dddfac5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x556dddfac610 <col:10> Implicit
| `-ConstAttr 0x556dddfac668 <col:10> Implicit
|-FunctionDecl 0x556dddfac8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x556dddfac7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x556dddfacbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x556dddfacbc8 <line:78:3, col:34>
|     `-CallExpr 0x556dddfacb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x556dddfacb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556dddfacaf8 <col:10> '<builtin fn type>' Function 0x556dddfac968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x556dddfacbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x556dddfacb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x556dddfac7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x556dddfac968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x556dddfaca08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x556dddfaca78 <col:10> Implicit
| `-ConstAttr 0x556dddfacad0 <col:10> Implicit
|-TypedefDecl 0x556dddfacc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-TypedefDecl 0x556dddfacc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x556dddfacc60 '__time_t' sugar
|   |-Typedef 0x556dddfaa888 '__time_t'
|   `-BuiltinType 0x556dddf42f30 'long'
|-RecordDecl 0x556dddfaccf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x556dddfacda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x556dddface38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x556dddfacec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x556dddface90 '__pid_t' sugar
|   |-Typedef 0x556dddfaa3e8 '__pid_t'
|   `-BuiltinType 0x556dddf42f10 'int'
|-RecordDecl 0x556dddfacf20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x556dddfacfe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x556dddfad030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x556dddfad0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x556dddfad158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-RecordDecl 0x556dddfad1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x556dddfae480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x556dddfae530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x556dddfae4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x556dddfad230 'cpu_set_t'
|     `-Record 0x556dddfad1b0 ''
|-FunctionDecl 0x556dddfae808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x556dddfae5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556dddfae6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x556dddfae8b8 <line:108:19>
|-FunctionDecl 0x556dddfaea90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x556dddfae920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x556dddfaeb38 <col:69>
|-FunctionDecl 0x556dddfaecb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x556dddfaeba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x556dddfaed58 <col:64>
|-FunctionDecl 0x556dddfaf018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x556dddfaedc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556dddfaeef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556dddfaf0c8 <line:114:22>
|-FunctionDecl 0x556dddfaf3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x556dddfaf130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556dddfaf228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x556dddfaf460 <col:88>
|-FunctionDecl 0x556dddfaf718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556dddfaf4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556dddfaf548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x556dddfaf5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556dddfaf7d0 <col:62>
|-FunctionDecl 0x556dddfaf948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x556dddfaf838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x556dddfaf9f0 <col:63>
|-FunctionDecl 0x556dddfafb18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x556dddfafbb8 <col:47>
|-FunctionDecl 0x556dddfafcc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x556dddfafc28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556dddfafd68 <col:69>
|-FunctionDecl 0x556dddfafe70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x556dddfafdd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556dddfaff18 <col:69>
|-FunctionDecl 0x556dddfb01d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556dddfaff80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556dddfb00b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x556dddfb0288 <col:88>
|-TypedefDecl 0x556dddfb0318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x556dddfb02e0 '__clock_t' sugar
|   |-Typedef 0x556dddfaa6c8 '__clock_t'
|   `-BuiltinType 0x556dddf42f30 'long'
|-TypedefDecl 0x556dddfb03c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x556dddfb0370 '__clockid_t' sugar
|   |-Typedef 0x556dddfaaab8 '__clockid_t'
|   `-BuiltinType 0x556dddf42f10 'int'
|-TypedefDecl 0x556dddfb0458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x556dddfb0420 '__timer_t' sugar
|   |-Typedef 0x556dddfaab28 '__timer_t'
|   `-PointerType 0x556dddf43630 'void *'
|     `-BuiltinType 0x556dddf42e70 'void'
|-RecordDecl 0x556dddfb04b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x556dddfb0570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x556dddfb05d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x556dddfb0640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x556dddfb06a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x556dddfb0710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x556dddfb0778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x556dddfb07e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x556dddfb0848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x556dddfb08b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x556dddfb0918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x556dddfb0980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x556dddfb09d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x556dddfb0a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x556dddfb0b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x556dddfb0bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x556dddfb0d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x556dddfb0e20 <col:45>
|-FunctionDecl 0x556dddfb1000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x556dddfb0ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x556dddfb10a8 <col:54>
|-FunctionDecl 0x556dddfb12a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x556dddfb1110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x556dddfb1188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x556dddfb1358 <line:158:22>
| `-ConstAttr 0x556dddfb1ff0 <col:63>
|-FunctionDecl 0x556dddfb21f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556dddfb20e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556dddfb2298 <col:56>
|-FunctionDecl 0x556dddfb2640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x556dddfb2308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x556dddfb2380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556dddfb2400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x556dddfb24f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x556dddfb2700 <col:54>
|-RecordDecl 0x556dddfb2758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x556dddfb2808 parent 0x556dddf42e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x556dddfb2a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x556dddfb2b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x556dddfb2b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x556dddfb2bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x556dddfb2cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x556dddfb2de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x556dddfb2d90 'struct __locale_struct *'
|   `-ElaboratedType 0x556dddfb2d20 'struct __locale_struct' sugar
|     `-RecordType 0x556dddfb27e0 'struct __locale_struct'
|       `-Record 0x556dddfb2758 '__locale_struct'
|-TypedefDecl 0x556dddfb2e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x556dddfb2e60 '__locale_t' sugar
|   |-Typedef 0x556dddfb2de8 '__locale_t'
|   `-PointerType 0x556dddfb2d90 'struct __locale_struct *'
|     `-ElaboratedType 0x556dddfb2d20 'struct __locale_struct' sugar
|       `-RecordType 0x556dddfb27e0 'struct __locale_struct'
|         `-Record 0x556dddfb2758 '__locale_struct'
|-FunctionDecl 0x556dddfb42a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x556dddfb2f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x556dddfb2f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556dddfb4028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x556dddfb40b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556dddfb4130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x556dddfb4368 <col:40>
|-FunctionDecl 0x556dddfb4558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556dddfb4430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x556dddfb4600 <col:66>
|-FunctionDecl 0x556dddfb4710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556dddfb4668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x556dddfb47b8 <col:69>
|-FunctionDecl 0x556dddfb49e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556dddfb4820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556dddfb48b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556dddfb4a98 <col:52>
|-FunctionDecl 0x556dddfb4c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556dddfb4b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556dddfb4b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556dddfb4cf0 <col:55>
|-FunctionDecl 0x556dddfb4e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x556dddfb4d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x556dddfb4f30 <col:62>
|-FunctionDecl 0x556dddfb5168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x556dddfb4f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x556dddfb5210 <col:60>
|-FunctionDecl 0x556dddfb5438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556dddfb5290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556dddfb5310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x556dddfb54e8 <col:44>
|-FunctionDecl 0x556dddfb56f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556dddfb5550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556dddfb55d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x556dddfb57a8 <col:49>
|-VarDecl 0x556dddfb58a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x556dddfb5928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x556dddfb59a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x556dddfb5a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x556dddfb5ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x556dddfb5c40 <col:42>
|-VarDecl 0x556dddfb5cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x556dddfb5d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x556dddfb5eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x556dddfb5da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x556dddfb5f60 <col:57>
|-FunctionDecl 0x556dddfb60d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556dddfb5fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556dddfb6178 <col:56>
|-FunctionDecl 0x556dddfb6288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556dddfb61f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x556dddfb6330 <col:59>
|-FunctionDecl 0x556dddfb6438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x556dddfb63a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x556dddfb64e0 <col:48>
| `-ConstAttr 0x556dddfb6538 <col:89>
|-FunctionDecl 0x556dddfb6798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556dddfb65e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x556dddfb6678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x556dddfb69f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556dddfb6888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556dddfb6918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x556dddfb6aa8 <col:88>
|-FunctionDecl 0x556dddfb6c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556dddfb6b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556dddfb6ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x556dddfb6cf0 <col:88>
|-FunctionDecl 0x556dddfb6f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x556dddfb6d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556dddfb6de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x556dddfb6fb8 <line:209:22>
|-FunctionDecl 0x556dddfb7358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556dddfb7020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556dddfb70e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x556dddfb7170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x556dddfb7200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x556dddfb7658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x556dddfb7458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x556dddfb7530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x556dddfb7708 <col:85>
|-FunctionDecl 0x556dddfb7af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x556dddfb7770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556dddfb78a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x556dddfb79b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x556dddfb7bb0 <col:52>
|-FunctionDecl 0x556dddfb7d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x556dddfb7c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556dddfb7dd0 <col:61>
|-FunctionDecl 0x556dddfb8248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x556dddfb7e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556dddfb7eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x556dddfb7fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x556dddfb80f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x556dddfb8308 <col:62>
|-FunctionDecl 0x556dddfb8528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x556dddfb8370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556dddfb8400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x556dddfb85d8 <line:222:22>
|-FunctionDecl 0x556dddfb86d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x556dddfb8640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556dddfb8780 <col:65>
|-TypedefDecl 0x556dddfb87f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x556dddf42fd0 'unsigned long'
|-RecordDecl 0x556dddfb8848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x556dddfb8990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556dddfb89f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556dddfb8aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x556dddfb8a50 'union pthread_attr_t' sugar
|   `-RecordType 0x556dddfb88d0 'union pthread_attr_t'
|     `-Record 0x556dddfb8848 'pthread_attr_t'
|-RecordDecl 0x556dddfb8b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x556dddfb8c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x556dddfb8cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x556dddfb8da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x556dddfb8d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x556dddfb8b80 'struct __pthread_internal_list'
|     `-Record 0x556dddfb8b00 '__pthread_internal_list'
|-RecordDecl 0x556dddfb8e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x556dddfb8eb8 parent 0x556dddf42e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x556dddfb8f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556dddfb8ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x556dddfb9060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x556dddfbd110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x556dddfbd178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x556dddfbd1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x556dddfbd268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x556dddfbd320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x556dddfbd410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x556dddfbd478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556dddfbd600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x556dddfbd5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x556dddfb8e90 'pthread_mutex_t'
|     `-Record 0x556dddfb8e10 ''
|-RecordDecl 0x556dddfbd670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x556dddfbd7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556dddfbd818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556dddfbd8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x556dddfbd870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x556dddfbd6f0 'pthread_mutexattr_t'
|     `-Record 0x556dddfbd670 ''
|-RecordDecl 0x556dddfbd940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x556dddfbd9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x556dddfbdab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556dddfbdb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x556dddfbdb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x556dddfbdbe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x556dddfbdc50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x556dddfbdcb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x556dddfbdd20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x556dddfbdd88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x556dddfbde40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./test/safe032_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./test/safe032_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x556dddfbdf30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x556dddfbdf98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x556dddfbf130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x556dddfbe070 'union pthread_cond_t' sugar
|   `-RecordType 0x556dddfbd9c0 'pthread_cond_t'
|     `-Record 0x556dddfbd940 ''
|-RecordDecl 0x556dddfbf1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x556dddfbf2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556dddfbf308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556dddfbf3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x556dddfbf360 'union pthread_condattr_t' sugar
|   `-RecordType 0x556dddfbf220 'pthread_condattr_t'
|     `-Record 0x556dddfbf1a0 ''
|-TypedefDecl 0x556dddfbf448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x556dddf42fb0 'unsigned int'
|-TypedefDecl 0x556dddfbf4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x556dddf42f10 'int'
|-RecordDecl 0x556dddfbf510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x556dddfbf5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x556dddfbf680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556dddfbf6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x556dddfbf750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x556dddfbf7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x556dddfbf820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x556dddfbf888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x556dddfbf8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x556dddfbf958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x556dddfbf9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x556dddfbfa28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x556dddfbfa90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x556dddfbfb40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./test/safe032_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./test/safe032_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x556dddfbfbe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556dddfbfc50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556dddfbfda0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x556dddfbfd40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x556dddfbf590 'pthread_rwlock_t'
|     `-Record 0x556dddfbf510 ''
|-RecordDecl 0x556dddfbfe10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x556dddfbff50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x556dddfbffb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556dddfc0070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x556dddfc0010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x556dddfbfe90 'pthread_rwlockattr_t'
|     `-Record 0x556dddfbfe10 ''
|-TypedefDecl 0x556dddfc1140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x556dddf42f14 'volatile int' volatile
|   `-BuiltinType 0x556dddf42f10 'int'
|-RecordDecl 0x556dddfc1198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x556dddfc12e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x556dddfc1348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556dddfc1400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x556dddfc13a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x556dddfc1220 'pthread_barrier_t'
|     `-Record 0x556dddfc1198 ''
|-RecordDecl 0x556dddfc1470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x556dddfc1570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556dddfc15d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556dddfc1690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x556dddfc1630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x556dddfc14f0 'pthread_barrierattr_t'
|     `-Record 0x556dddfc1470 ''
|-TypedefDecl 0x556dddfc17a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x556dddfc1740 'long [8]' 8 
|   `-BuiltinType 0x556dddf42f30 'long'
|-EnumDecl 0x556dddfc1800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x556dddfc18c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x556dddfc1918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x556dddfc1968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x556dddfc1a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x556dddfc1a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x556dddfc1ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x556dddfc1b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x556dddfc1bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x556dddfc1b98 <col:26> 'int'
| |   `-DeclRefExpr 0x556dddfc1b78 <col:26> 'int' EnumConstant 0x556dddfc1a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x556dddfc1c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x556dddfc1c20 <col:29> 'int'
| |   `-DeclRefExpr 0x556dddfc1c00 <col:29> 'int' EnumConstant 0x556dddfc1a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x556dddfc1cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x556dddfc1ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x556dddfc1c88 <col:30> 'int' EnumConstant 0x556dddfc1ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x556dddfc1d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x556dddfc1d30 <col:27> 'int'
|     `-DeclRefExpr 0x556dddfc1d10 <col:27> 'int' EnumConstant 0x556dddfc1bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x556dddfc1d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x556dddfc1e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x556dddfc1ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x556dddfc1ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x556dddfc1eb8 <col:30> 'int' EnumConstant 0x556dddfc1e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x556dddfc1f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x556dddfc1fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x556dddfc1fb0 <col:29> 'int'
|     `-DeclRefExpr 0x556dddfc1f90 <col:29> 'int' EnumConstant 0x556dddfc1f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x556dddfc2018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x556dddfc20e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x556dddfc2150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x556dddfc21a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x556dddfc21f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x556dddfc22b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x556dddfc2308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x556dddfc2358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x556dddfc23e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x556dddfc23c8 <col:31> 'int'
|     `-DeclRefExpr 0x556dddfc23a8 <col:31> 'int' EnumConstant 0x556dddfc22b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x556dddfc2430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x556dddfc24f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x556dddfc2548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x556dddfc2598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x556dddfc2668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x556dddfc26b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x556dddfc2708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x556dddfc27d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x556dddfc2828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x556dddfc2878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x556dddfc2ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x556dddfc2b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x556dddfc2b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x556dddfc2ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x556dddfc2cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x556dddfc2dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x556dddfc2e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x556dddfc2e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x556dddfc2f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x556dddfc2f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x556dddfc35b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x556dddfc3080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x556dddfc31a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dddfc33a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x556dddfc3420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x556dddfc3678 <col:47>
| |-NonNullAttr 0x556dddfc36d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x556dddfc3708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x556dddfc3830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x556dddfc3760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x556dddfc3a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x556dddfc38e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x556dddfc3968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x556dddfc3c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x556dddfc3b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x556dddfc3d00 <col:60>
|-FunctionDecl 0x556dddfc3e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x556dddfc3ef0 <col:54>
| `-ConstAttr 0x556dddfc3f48 <col:95>
|-FunctionDecl 0x556dddfc5990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x556dddfc3f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556dddfc3ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x556dddfc5a40 <line:395:19>
| `-ConstAttr 0x556dddfc5a98 <col:60>
|-FunctionDecl 0x556dddfc5c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556dddfc5b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556dddfc5d10 <col:71>
| `-NonNullAttr 0x556dddfc5d68 <col:112, col:126> 1
|-FunctionDecl 0x556dddfc5e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556dddfc5db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556dddfc5f18 <line:398:22>
| `-NonNullAttr 0x556dddfc5f70 <col:63, col:77> 1
|-FunctionDecl 0x556dddfc6198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x556dddfc5fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556dddfc6038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x556dddfc6248 <line:401:22>
| `-NonNullAttr 0x556dddfc62a0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfc64a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556dddfc62e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dddfc6368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x556dddfc6558 <line:404:22>
| `-NonNullAttr 0x556dddfc65b0 <col:63, col:77> 1
|-FunctionDecl 0x556dddfc6808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x556dddfc65f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556dddfc66a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x556dddfc68b8 <line:407:22>
| `-NonNullAttr 0x556dddfc6910 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfc7b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556dddfc79b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dddfc7a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556dddfc7c18 <line:410:22>
| `-NonNullAttr 0x556dddfc7c70 <col:63, col:77> 1
|-FunctionDecl 0x556dddfc7ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556dddfc7cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dddfc7d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556dddfc7f58 <line:413:22>
| `-NonNullAttr 0x556dddfc7fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfc81e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556dddfc7ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dddfc8088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x556dddfc8298 <col:37>
| `-NonNullAttr 0x556dddfc82f0 <col:78, col:95> 1 2
|-FunctionDecl 0x556dddfc84d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfc8338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dddfc83b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x556dddfc8588 <line:419:22>
| `-NonNullAttr 0x556dddfc85e0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfc8768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556dddfc8628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dddfc86a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x556dddfc8818 <line:421:22>
| `-NonNullAttr 0x556dddfc8870 <col:63, col:77> 1
|-FunctionDecl 0x556dddfc8a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfc88b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dddfc8938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x556dddfc8ae8 <line:424:22>
| `-NonNullAttr 0x556dddfc8b40 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfc8cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556dddfc8b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dddfc8c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x556dddfc8d78 <line:427:22>
| `-NonNullAttr 0x556dddfc8dd0 <col:63, col:77> 1
|-FunctionDecl 0x556dddfc8f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfc8e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dddfc8e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x556dddfc9028 <line:430:22>
| `-NonNullAttr 0x556dddfc9080 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfc9208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556dddfc90c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dddfc9148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x556dddfc92b8 <line:432:22>
| `-NonNullAttr 0x556dddfc9310 <col:63, col:77> 1
|-FunctionDecl 0x556dddfc9538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x556dddfc9358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dddfc93d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x556dddfc95e8 <line:435:22>
| |-NonNullAttr 0x556dddfc9640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x556dddfc9678 <col:100> "" ""
|-FunctionDecl 0x556dddfc9888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x556dddfc96c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dddfc9748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x556dddfc9938 <line:438:22>
| |-NonNullAttr 0x556dddfc9990 <col:63, col:77> 1
| `-DeprecatedAttr 0x556dddfc99d8 <col:97> "" ""
|-FunctionDecl 0x556dddfc9bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556dddfc9a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dddfc9aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556dddfc9c78 <line:441:22>
| `-NonNullAttr 0x556dddfc9cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfc9e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556dddfc9d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dddfc9d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556dddfc9f00 <line:444:22>
| `-NonNullAttr 0x556dddfc9f58 <col:63, col:77> 1
|-FunctionDecl 0x556dddfca248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556dddfc9fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556dddfca028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x556dddfca0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556dddfca300 <line:448:22>
| `-NonNullAttr 0x556dddfca358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x556dddfca608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x556dddfca3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556dddfca430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x556dddfca4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556dddfca6c0 <col:43>
| `-NonNullAttr 0x556dddfca718 <col:84, col:98> 1
|-FunctionDecl 0x556dddfcaa20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556dddfca768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556dddfca7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x556dddfca878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x556dddfcaad8 <line:453:22>
| `-NonNullAttr 0x556dddfcab30 <col:63, col:77> 3
|-FunctionDecl 0x556dddfcae08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556dddfcab78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556dddfcabf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x556dddfcac88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556dddfcaec0 <line:457:22>
| `-NonNullAttr 0x556dddfcaf18 <col:63, col:80> 2 3
|-FunctionDecl 0x556dddfcb108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x556dddfcaf68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556dddfcafe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x556dddfcb1b8 <line:459:22>
|-FunctionDecl 0x556dddfcb588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x556dddfcb280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x556dddfcb420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x556dddfcb638 <col:52, col:69> 1 2
|-FunctionDecl 0x556dddfcb7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x556dddfcb6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x556dddfcb740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x556dddfcb9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x556dddfcb8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x556dddfcb928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x556dddfcbb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x556dddfcbab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x556dddfcbc88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x556dddfcbd28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x556dddfcbdd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x556dddfcbec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x556dddfcbf30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x556dddfcc100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./test/safe032_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x556dddfcc1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x556dddfcc2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x556dddfcc250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x556dddfcbdb0 '__pthread_unwind_buf_t'
| |   `-Record 0x556dddfcbd28 ''
| `-AlignedAttr 0x556dddfcc308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x556dddfcc380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x556dddfcc4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x556dddfcc548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x556dddfcc5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x556dddfcc618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x556dddfcc820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556dddfcc710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556dddfcca00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556dddfcc8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556dddfccbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556dddfccab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x556dddfccc68 <line:488:22>
|-RecordDecl 0x556dddfcccc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x556dddfccfd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x556dddfcce38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x556dddfcceb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x556dddfcd088 <col:86>
| `-ReturnsTwiceAttr 0x556dddfcd0e0 <col:12> Implicit
|-FunctionDecl 0x556dddfcd408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556dddfcd1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x556dddfcd2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x556dddfcd4b8 <line:494:22>
| `-NonNullAttr 0x556dddfcd510 <col:63, col:77> 1
|-FunctionDecl 0x556dddfcd688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556dddfcd558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556dddfcd730 <line:496:22>
| `-NonNullAttr 0x556dddfcd788 <col:63, col:77> 1
|-FunctionDecl 0x556dddfcd890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556dddfcd7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556dddfcd938 <line:498:22>
| `-NonNullAttr 0x556dddfcd990 <col:52, col:66> 1
|-FunctionDecl 0x556dddfcead8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556dddfcea20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556dddfceb80 <line:500:22>
| `-NonNullAttr 0x556dddfcebd8 <col:52, col:66> 1
|-FunctionDecl 0x556dddfcee18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556dddfcec28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556dddfcecb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556dddfceec8 <col:36>
| `-NonNullAttr 0x556dddfcef20 <col:66, col:83> 1 2
|-FunctionDecl 0x556dddfcf020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556dddfcef68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556dddfcf0c8 <line:505:22>
| `-NonNullAttr 0x556dddfcf120 <col:52, col:66> 1
|-FunctionDecl 0x556dddfcf3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfcf1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556dddfcf250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556dddfcf468 <line:509:22>
| `-NonNullAttr 0x556dddfcf4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfcf788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x556dddfcf508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556dddfcf588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x556dddfcf608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x556dddfcf840 <line:513:22>
| `-NonNullAttr 0x556dddfcf898 <col:63, col:80> 1 3
|-FunctionDecl 0x556dddfcfa30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556dddfcf8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556dddfcfad8 <line:515:22>
| `-NonNullAttr 0x556dddfcfb30 <col:63, col:77> 1
|-FunctionDecl 0x556dddfcfd18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556dddfcfbe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556dddfcfdc0 <line:517:22>
| `-NonNullAttr 0x556dddfcfe18 <col:63, col:77> 1
|-FunctionDecl 0x556dddfcff20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556dddfcfe68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556dddfcffc8 <line:519:22>
| `-NonNullAttr 0x556dddfd0020 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd0248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfd0068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556dddfd00e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x556dddfd02f8 <line:523:22>
| `-NonNullAttr 0x556dddfd0350 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfd0558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556dddfd0398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dddfd0418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x556dddfd0608 <line:526:22>
| `-NonNullAttr 0x556dddfd0660 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd0808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfd06a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556dddfd0728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x556dddfd08b8 <line:529:22>
| `-NonNullAttr 0x556dddfd0910 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfd0b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556dddfd0958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dddfd0a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x556dddfd0bb0 <line:531:22>
| `-NonNullAttr 0x556dddfd0c08 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd0db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfd0c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556dddfd0cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x556dddfd0e68 <line:535:22>
| `-NonNullAttr 0x556dddfd0ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfd1048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556dddfd0f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dddfd0f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x556dddfd10f8 <line:538:22>
| `-NonNullAttr 0x556dddfd1150 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd12f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfd1198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556dddfd1218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556dddfd13a8 <line:542:22>
| `-NonNullAttr 0x556dddfd1400 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfd1588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556dddfd1448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dddfd14c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x556dddfd1638 <line:545:22>
| `-NonNullAttr 0x556dddfd1690 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd1878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x556dddfd16d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dddfd1758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x556dddfd1928 <line:548:22>
| `-NonNullAttr 0x556dddfd1980 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfd2b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556dddfd19c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556dddfd2a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x556dddfd2be8 <line:551:22>
| `-NonNullAttr 0x556dddfd2c40 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd2f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x556dddfd2d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556dddfd2e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x556dddfd3028 <col:29>
| `-NonNullAttr 0x556dddfd3080 <col:70, col:84> 1
|-FunctionDecl 0x556dddfd31f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dddfd30c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dddfd32a0 <line:556:22>
| `-NonNullAttr 0x556dddfd32f8 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd3400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dddfd3348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dddfd34a8 <line:558:22>
| `-NonNullAttr 0x556dddfd3500 <col:52, col:66> 1
|-FunctionDecl 0x556dddfd3600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dddfd3548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dddfd36a8 <line:560:19>
| `-NonNullAttr 0x556dddfd3700 <col:49, col:63> 1
|-FunctionDecl 0x556dddfd3938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556dddfd3748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556dddfd37d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556dddfd39e8 <col:39>
| `-NonNullAttr 0x556dddfd3a70 <col:69, col:86> 1 2
|-FunctionDecl 0x556dddfd3b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dddfd3ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dddfd3c18 <line:565:22>
| `-NonNullAttr 0x556dddfd3c70 <col:52, col:66> 1
|-FunctionDecl 0x556dddfd3d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dddfd3cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dddfd3e18 <line:567:22>
| `-NonNullAttr 0x556dddfd3e70 <col:52, col:66> 1
|-FunctionDecl 0x556dddfd4028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556dddfd3eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556dddfd3f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556dddfd40d8 <col:39>
| `-NonNullAttr 0x556dddfd4130 <col:69, col:86> 1 2
|-FunctionDecl 0x556dddfd4230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556dddfd4178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556dddfd42d8 <line:572:22>
| `-NonNullAttr 0x556dddfd4330 <col:52, col:66> 1
|-FunctionDecl 0x556dddfd4518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556dddfd43e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556dddfd45c0 <line:574:22>
| `-NonNullAttr 0x556dddfd4618 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd4720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556dddfd4668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556dddfd47c8 <line:576:22>
| `-NonNullAttr 0x556dddfd4820 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd4a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfd4868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556dddfd48e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x556dddfd4b30 <line:580:22>
| `-NonNullAttr 0x556dddfd4b88 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfd4d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556dddfd4bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556dddfd4c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x556dddfd4e48 <line:583:22>
| `-NonNullAttr 0x556dddfd4ea0 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd5048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfd4ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556dddfd4f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x556dddfd50f8 <line:587:22>
| `-NonNullAttr 0x556dddfd5150 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfd52d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556dddfd5198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556dddfd5218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x556dddfd5388 <col:36>
| `-NonNullAttr 0x556dddfd53e0 <col:77, col:91> 1
|-FunctionDecl 0x556dddfd5718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x556dddfd54c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556dddfd55d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x556dddfd57c8 <line:592:22>
| `-NonNullAttr 0x556dddfd5820 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd5998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556dddfd5868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556dddfd5a40 <line:594:22>
| `-NonNullAttr 0x556dddfd5ac0 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd5bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556dddfd5b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556dddfd5c68 <line:596:22>
| `-NonNullAttr 0x556dddfd5cc0 <col:52, col:66> 1
|-FunctionDecl 0x556dddfd5dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556dddfd5d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556dddfd5e68 <line:598:22>
| `-NonNullAttr 0x556dddfd5ec0 <col:52, col:66> 1
|-FunctionDecl 0x556dddfd60e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x556dddfd5f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556dddfd5f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x556dddfd6198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x556dddfd64c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556dddfd6218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556dddfd6290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556dddfd6320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x556dddfd6580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x556dddfd6798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556dddfd6660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556dddfd6840 <line:607:22>
| `-NonNullAttr 0x556dddfd6898 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd69a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556dddfd68e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556dddfd6a48 <line:609:22>
| `-NonNullAttr 0x556dddfd6ad0 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd6cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfd6b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556dddfd6b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x556dddfd6da8 <line:613:22>
| `-NonNullAttr 0x556dddfd6e00 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfd7008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x556dddfd6e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556dddfd6ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x556dddfd70b8 <col:37>
| `-NonNullAttr 0x556dddfd7110 <col:78, col:92> 1
|-FunctionDecl 0x556dddfd7328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x556dddfd7158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556dddfd7200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x556dddfd73d8 <line:619:22>
| `-NonNullAttr 0x556dddfd7430 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfd75f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x556dddfd7478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556dddfd74f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x556dddfd76a8 <line:622:22>
| `-NonNullAttr 0x556dddfd7700 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd79a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x556dddfd77e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x556dddfd7860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x556dddfd7a58 <line:624:22>
| `-NonNullAttr 0x556dddfd7ae0 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd7c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556dddfd7b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556dddfd7d00 <line:626:22>
| `-NonNullAttr 0x556dddfd7d58 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd7e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556dddfd7da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556dddfd7f08 <line:628:22>
| `-NonNullAttr 0x556dddfd7f60 <col:52, col:66> 1
|-FunctionDecl 0x556dddfd8060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556dddfd7fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556dddfd8108 <line:630:22>
| `-NonNullAttr 0x556dddfd8160 <col:52, col:66> 1
|-FunctionDecl 0x556dddfd8260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556dddfd81a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556dddfd8308 <line:632:22>
| `-NonNullAttr 0x556dddfd8360 <col:52, col:66> 1
|-FunctionDecl 0x556dddfd8738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x556dddfd8440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x556dddfd8550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556dddfd85d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x556dddfd87f0 <line:636:22>
| `-NonNullAttr 0x556dddfd8848 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd89c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556dddfd8898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556dddfd8a70 <line:638:22>
| `-NonNullAttr 0x556dddfd9b00 <col:63, col:77> 1
|-FunctionDecl 0x556dddfd9c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556dddfd9b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556dddfd9ca8 <line:640:22>
| `-NonNullAttr 0x556dddfd9d00 <col:52, col:66> 1
|-FunctionDecl 0x556dddfd9ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556dddfd9db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556dddfd9f90 <line:642:22>
| `-NonNullAttr 0x556dddfd9fe8 <col:63, col:77> 1
|-FunctionDecl 0x556dddfda0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556dddfda038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556dddfda198 <line:644:22>
| `-NonNullAttr 0x556dddfda1f0 <col:63, col:77> 1
|-FunctionDecl 0x556dddfda418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556dddfda238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556dddfda2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x556dddfda4c8 <line:648:22>
| `-NonNullAttr 0x556dddfda520 <col:63, col:80> 1 2
|-FunctionDecl 0x556dddfda728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x556dddfda568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x556dddfda5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x556dddfda7d8 <line:651:22>
| `-NonNullAttr 0x556dddfda830 <col:63, col:77> 1
|-FunctionDecl 0x556dddfdab98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x556dddfda910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x556dddfdaa30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x556dddfdac48 <line:654:22>
| `-NonNullAttr 0x556dddfdaca0 <col:63, col:77> 1
|-FunctionDecl 0x556dddfdadf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x556dddfdace8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556dddfdaea0 <col:69>
|-FunctionDecl 0x556dddfdb018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x556dddfdaf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556dddfdb0c0 <col:72>
|-FunctionDecl 0x556dddfdb2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x556dddfdb128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x556dddfdb1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x556dddfdb3a8 <col:44>
|-FunctionDecl 0x556dddfdb5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x556dddfdb410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556dddfdb488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x556dddfdb678 <line:661:22>
| `-NonNullAttr 0x556dddfdb6d0 <col:63, col:77> 2
|-FunctionDecl 0x556dddfdbb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x556dddfdb7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x556dddfdb8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x556dddfdb9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x556dddfdbbe8 <col:47>
|-FunctionDecl 0x556dddfdbcf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x556dddfdbc58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556dddfdbe48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x556dddfdbdb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556dddfdbfa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x556dddfdbf08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556dddfdc068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x556dddfdc128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x556dddfdc1e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x556dddfdc2a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x556dddfdc320 prev 0x556dddfdc2a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x556dddfdc388 <col:24> 'int' 0
|-VarDecl 0x556dddfdc3c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x556dddfdc440 prev 0x556dddfdc3c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x556dddfdc4a8 <col:27> 'int' 0
|-VarDecl 0x556dddfdc4e0 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x556dddfdc560 prev 0x556dddfdc4e0 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x556dddfdc5c8 <col:27> 'int' 0
|-VarDecl 0x556dddfdc5f8 <line:678:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x556dddfdc670 <line:679:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x556dddfdc6f0 <line:680:1, col:5> col:5 used x 'int'
|-VarDecl 0x556dddfdc770 prev 0x556dddfdc6f0 <line:681:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x556dddfdc7d8 <col:9> 'int' 0
|-VarDecl 0x556dddfdc808 <line:682:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x556dddfdc888 <line:683:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x556dddfdc900 <line:684:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x556dddfdc978 <line:685:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x556dddfdc9f0 <line:686:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x556dddfdca68 <line:687:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x556dddfdcb00 <line:688:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x556dddfdcb78 <line:689:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x556dddfdcbf0 <line:690:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x556dddfdcc68 <line:691:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x556dddfdcce0 <line:692:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x556dddfdcd60 <line:693:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x556dddfdcde0 <line:694:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x556dddfdce58 <line:695:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x556dddfdced8 <line:696:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x556dddfdcf50 <line:697:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x556dddfdcfd0 <line:698:1, col:5> col:5 used y 'int'
|-VarDecl 0x556dddfdd050 prev 0x556dddfdcfd0 <line:699:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x556dddfdd0b8 <col:9> 'int' 0
|-VarDecl 0x556dddfdd0e8 <line:700:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x556dddfdd160 <line:701:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x556dddfdd278 prev 0x556dddfdbcf0 <line:702:1, line:731:1> line:702:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x556dddfdd1e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556dddfe0298 <line:703:1, line:731:1>
|   |-CallExpr 0x556dddfdd388 <line:704:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfdd370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfdd320 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfdd3e8 <line:705:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556dddfdd3a8 <col:3> 'int' lvalue Var 0x556dddfdd050 'y' 'int'
|   | `-IntegerLiteral 0x556dddfdd3c8 <col:7> 'int' 2
|   |-CallExpr 0x556dddfdd440 <line:706:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfdd428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfdd408 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dddfdd498 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfdd480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfdd460 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x556dddfdd4f0 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfdd4d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfdd4b8 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dddfdd548 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfdd530 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfdd510 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfdd618 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfdd568 <col:3> '_Bool' lvalue Var 0x556dddfdd0e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x556dddfdd5f8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556dddfdd5e0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556dddfdd588 <col:19> '_Bool (void)' Function 0x556dddf82770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556dddfdd6b0 <line:711:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfdd638 <col:3> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x556dddfdd690 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556dddfdd678 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556dddfdd658 <col:19> '_Bool (void)' Function 0x556dddf82770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556dddfdd728 <line:712:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfdd6d0 <col:3> '_Bool' lvalue Var 0x556dddfdc808 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfdd710 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfdd6f0 <col:21> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x556dddfdd7a0 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556dddfdd748 <col:3> 'int' lvalue Var 0x556dddfdc888 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556dddfdd788 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfdd768 <col:15> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   |-BinaryOperator 0x556dddfddbf8 <line:714:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x556dddfdd7c0 <col:3> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   | `-ConditionalOperator 0x556dddfddbc8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556dddfdd9d0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556dddfdd8f0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556dddfdd818 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556dddfdd800 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556dddfdd7e0 <col:8> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556dddfdd8d0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556dddfdd868 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556dddfdd850 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556dddfdd830 <col:27> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x556dddfdd8b8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x556dddfdd8a0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556dddfdd880 <col:46> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x556dddfdd9b0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556dddfdd948 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556dddfdd930 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556dddfdd910 <col:65> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x556dddfdd998 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556dddfdd980 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556dddfdd960 <col:84> '_Bool' lvalue Var 0x556dddfdcb78 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x556dddfddbb0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfdd9f0 <col:101> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   |   `-ParenExpr 0x556dddfddb90 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556dddfddb60 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x556dddfddab0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556dddfdda68 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556dddfdda50 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556dddfdda10 <col:106> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556dddfdda98 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556dddfdda80 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556dddfdda30 <col:124> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556dddfddb30 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dddfddad0 <col:141> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556dddfddb48 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfddb10 <col:153> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x556dddfde108 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556dddfddc18 <col:3> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x556dddfde0d8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556dddfde0a8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dddfde090 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dddfddc38 <col:15> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dddfde0c0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfddc58 <col:31> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x556dddfde070 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556dddfde040 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556dddfdde68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556dddfddd88 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556dddfddcb0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556dddfddc98 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556dddfddc78 <col:45> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556dddfddd68 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556dddfddd00 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556dddfddce8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556dddfddcc8 <col:64> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x556dddfddd50 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556dddfddd38 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556dddfddd18 <col:83> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556dddfdde48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556dddfddde0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556dddfdddc8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556dddfddda8 <col:102> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x556dddfdde30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556dddfdde18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556dddfdddf8 <col:121> '_Bool' lvalue Var 0x556dddfdcb78 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556dddfde028 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dddfdde88 <col:138> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x556dddfde008 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556dddfddfd8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556dddfddf48 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556dddfddf00 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556dddfddee8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556dddfddea8 <col:151> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556dddfddf30 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556dddfddf18 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556dddfddec8 <col:169> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x556dddfddfa8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556dddfddf68 <col:186> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556dddfddfc0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556dddfddf88 <col:198> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x556dddfde618 <line:716:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556dddfde128 <col:3> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x556dddfde5e8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556dddfde5b8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dddfde5a0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dddfde148 <col:15> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dddfde5d0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfde168 <col:31> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x556dddfde580 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556dddfde550 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556dddfde378 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556dddfde298 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556dddfde1c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556dddfde1a8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556dddfde188 <col:45> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556dddfde278 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556dddfde210 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556dddfde1f8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556dddfde1d8 <col:64> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x556dddfde260 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556dddfde248 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556dddfde228 <col:83> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556dddfde358 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556dddfde2f0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556dddfde2d8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556dddfde2b8 <col:102> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x556dddfde340 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556dddfde328 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556dddfde308 <col:121> '_Bool' lvalue Var 0x556dddfdcb78 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556dddfde538 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dddfde398 <col:138> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x556dddfde518 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556dddfde4e8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556dddfde458 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556dddfde410 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556dddfde3f8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556dddfde3b8 <col:151> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556dddfde440 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556dddfde428 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556dddfde3d8 <col:169> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x556dddfde4b8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556dddfde478 <col:186> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556dddfde4d0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556dddfde498 <col:198> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x556dddfdebe8 <line:717:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfde638 <col:3> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfdebd0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfdeba0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556dddfdeb58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfdeb40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfde658 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfdeb88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfdeb70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfde678 <col:36> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556dddfdeb20 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556dddfdeac8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556dddfde888 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dddfde7a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dddfde6d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dddfde6b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dddfde698 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dddfde788 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dddfde720 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dddfde708 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dddfde6e8 <col:74> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556dddfde770 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dddfde758 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dddfde738 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dddfde868 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dddfde800 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dddfde7e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dddfde7c8 <col:112> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556dddfde850 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dddfde838 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dddfde818 <col:131> '_Bool' lvalue Var 0x556dddfdcb78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556dddfdeab0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dddfdea98 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dddfde8a8 <col:148> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556dddfdea78 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556dddfdea48 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556dddfde968 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dddfde920 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dddfde908 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dddfde8c8 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dddfde950 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dddfde938 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dddfde8e8 <col:184> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556dddfdea00 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dddfde9b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dddfde988 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dddfdea30 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556dddfdea18 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556dddfde9e0 <col:212> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dddfdf1b0 <line:718:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfdec08 <col:3> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfdf198 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfdf168 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556dddfdf120 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfdf108 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfdec28 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfdf150 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfdf138 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfdec48 <col:36> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556dddfdf0e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556dddfdf0b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556dddfdee58 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dddfded78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dddfdeca0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dddfdec88 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dddfdec68 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dddfded58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dddfdecf0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dddfdecd8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dddfdecb8 <col:74> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556dddfded40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dddfded28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dddfded08 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dddfdee38 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dddfdedd0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dddfdedb8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dddfded98 <col:112> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556dddfdee20 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dddfdee08 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dddfdede8 <col:131> '_Bool' lvalue Var 0x556dddfdcb78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556dddfdf0a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dddfdf088 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dddfdee78 <col:148> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556dddfdf068 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556dddfdf038 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556dddfdef38 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dddfdeef0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dddfdeed8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dddfdee98 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dddfdef20 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dddfdef08 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dddfdeeb8 <col:184> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556dddfdf008 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dddfdef88 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dddfdef58 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dddfdf020 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556dddfdefe0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556dddfdefb0 <col:219> 'int' 0
|   |-BinaryOperator 0x556dddfdf758 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfdf1d0 <col:3> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfdf740 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfdf710 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556dddfdf6c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfdf6b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfdf1f0 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfdf6f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfdf6e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfdf210 <col:36> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x556dddfdf690 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556dddfdf660 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556dddfdf420 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dddfdf340 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dddfdf268 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dddfdf250 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dddfdf230 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dddfdf320 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dddfdf2b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dddfdf2a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dddfdf280 <col:74> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556dddfdf308 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dddfdf2f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dddfdf2d0 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dddfdf400 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dddfdf398 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dddfdf380 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dddfdf360 <col:112> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556dddfdf3e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dddfdf3d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dddfdf3b0 <col:131> '_Bool' lvalue Var 0x556dddfdcb78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556dddfdf648 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dddfdf630 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dddfdf440 <col:148> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x556dddfdf610 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556dddfdf5e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556dddfdf500 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dddfdf4b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dddfdf4a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dddfdf460 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dddfdf4e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dddfdf4d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dddfdf480 <col:184> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556dddfdf598 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dddfdf550 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dddfdf520 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dddfdf5c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556dddfdf5b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556dddfdf578 <col:212> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556dddfdfd30 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfdf778 <col:3> '_Bool' lvalue Var 0x556dddfdcb78 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfdfd18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfdfce8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556dddfdfca0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfdfc88 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfdf798 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfdfcd0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfdfcb8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfdf7b8 <col:36> '_Bool' lvalue Var 0x556dddfdcb78 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x556dddfdfc68 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556dddfdfc38 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556dddfdf9c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dddfdf8e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dddfdf810 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dddfdf7f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dddfdf7d8 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dddfdf8c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dddfdf860 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dddfdf848 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dddfdf828 <col:74> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x556dddfdf8b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dddfdf898 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dddfdf878 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dddfdf9a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dddfdf940 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dddfdf928 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dddfdf908 <col:112> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x556dddfdf990 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dddfdf978 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dddfdf958 <col:131> '_Bool' lvalue Var 0x556dddfdcb78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x556dddfdfc20 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dddfdfc08 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dddfdf9e8 <col:148> '_Bool' lvalue Var 0x556dddfdcb78 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x556dddfdfbe8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556dddfdfbb8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556dddfdfaa8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dddfdfa60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dddfdfa48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dddfdfa08 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dddfdfa90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dddfdfa78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dddfdfa28 <col:184> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x556dddfdfb88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dddfdfaf8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dddfdfac8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dddfdfba0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556dddfdfb60 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556dddfdfb30 <col:219> 'int' 0
|   |-BinaryOperator 0x556dddfdfda8 <line:721:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556dddfdfd50 <col:3> 'int' lvalue Var 0x556dddfdc440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x556dddfdfd90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfdfd70 <col:25> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   |-BinaryOperator 0x556dddfdfed8 <line:722:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556dddfdfdc8 <col:3> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   | `-ConditionalOperator 0x556dddfdfea8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556dddfdfe60 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dddfdfe48 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dddfdfde8 <col:7> '_Bool' lvalue Var 0x556dddfdc808 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556dddfdfe78 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfdfe08 <col:25> 'int' lvalue Var 0x556dddfdc888 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556dddfdfe90 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556dddfdfe28 <col:37> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   |-BinaryOperator 0x556dddfdff70 <line:723:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfdfef8 <col:3> '_Bool' lvalue Var 0x556dddfdc808 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556dddfdff48 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556dddfdff18 <col:28> 'int' 0
|   |-CallExpr 0x556dddfdffc8 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfdffb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfdff90 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dddfe0020 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfe0008 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfdffe8 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x556dddfe0078 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfe0060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe0040 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dddfe00d0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfe00b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe0098 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfe0188 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556dddfe00f0 <col:3> 'int' lvalue Var 0x556dddfdc320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556dddfe0168 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556dddfe0150 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfe0110 <col:22> 'int' lvalue Var 0x556dddfdc320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556dddfe0130 <col:41> 'int' 1
|   |-CallExpr 0x556dddfe01e0 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfe01c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe01a8 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556dddfe0288 <line:730:3, col:36>
|     `-CallExpr 0x556dddfe0268 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556dddfe0250 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556dddfe0200 <col:10> 'void *(void)' Function 0x556dddf82ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556dddfe0430 prev 0x556dddfdbe48 <line:732:1, line:771:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x556dddfe0398 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556dddfe4d70 <line:733:1, line:771:1>
|   |-CallExpr 0x556dddfe0510 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfe04f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe04d8 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfe0570 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556dddfe0530 <col:3> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   | `-IntegerLiteral 0x556dddfe0550 <col:7> 'int' 1
|   |-CallExpr 0x556dddfe05c8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfe05b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe0590 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dddfe0620 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfe0608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe05e8 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfe0908 <line:738:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556dddfe0640 <col:3> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   | `-ConditionalOperator 0x556dddfe08d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556dddfe0700 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556dddfe06b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556dddfe06a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556dddfe0660 <col:7> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556dddfe06e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556dddfe06d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556dddfe0680 <col:25> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dddfe08c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfe0720 <col:42> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x556dddfe08a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556dddfe0870 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556dddfe07e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556dddfe0798 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556dddfe0780 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556dddfe0740 <col:55> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556dddfe07c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556dddfe07b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556dddfe0760 <col:73> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556dddfe0840 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dddfe0800 <col:90> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556dddfe0858 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe0820 <col:102> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   |-BinaryOperator 0x556dddfe0b10 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe0928 <col:3> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe0af8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe0ac8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556dddfe09e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556dddfe09a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556dddfe0988 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556dddfe0948 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556dddfe09d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556dddfe09b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556dddfe0968 <col:38> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe0a80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe0a38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe0a08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe0ab0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe0a98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe0a60 <col:66> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dddfe0e08 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe0b40 <col:3> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe0df0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe0dc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556dddfe0ce0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556dddfe0c00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556dddfe0bb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556dddfe0ba0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556dddfe0b60 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556dddfe0be8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556dddfe0bd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556dddfe0b80 <col:38> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556dddfe0cc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556dddfe0c78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556dddfe0c60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556dddfe0c20 <col:56> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556dddfe0ca8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556dddfe0c90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556dddfe0c40 <col:74> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe0d78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe0d30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe0d00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe0da8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe0d90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe0d58 <col:102> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556dddfe1010 <line:741:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe0e28 <col:3> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe0ff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe0fc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556dddfe0ee8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556dddfe0ea0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556dddfe0e88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556dddfe0e48 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556dddfe0ed0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556dddfe0eb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556dddfe0e68 <col:38> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe0f80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe0f38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe0f08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe0fb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe0f98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe0f60 <col:66> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556dddfe12f8 <line:742:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe1030 <col:3> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe12e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe12b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556dddfe11d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556dddfe10f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556dddfe10a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556dddfe1090 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556dddfe1050 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556dddfe10d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556dddfe10c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556dddfe1070 <col:38> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556dddfe11b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556dddfe1168 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556dddfe1150 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556dddfe1110 <col:56> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556dddfe1198 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556dddfe1180 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556dddfe1130 <col:74> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe1268 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe1220 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe11f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe1298 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe1280 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe1248 <col:102> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x556dddfe1350 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfe1338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe1318 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dddfe13a8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfe1390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe1370 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfe1440 <line:745:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe13c8 <col:3> '_Bool' lvalue Var 0x556dddfdd0e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x556dddfe1420 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556dddfe1408 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556dddfe13e8 <col:19> '_Bool (void)' Function 0x556dddf82770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556dddfe14d8 <line:746:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe1460 <col:3> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x556dddfe14b8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x556dddfe14a0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x556dddfe1480 <col:19> '_Bool (void)' Function 0x556dddf82770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x556dddfe1550 <line:747:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe14f8 <col:3> '_Bool' lvalue Var 0x556dddfdc808 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe1538 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfe1518 <col:21> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x556dddfe15c8 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556dddfe1570 <col:3> 'int' lvalue Var 0x556dddfdc888 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556dddfe15b0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfe1590 <col:15> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   |-BinaryOperator 0x556dddfe1a00 <line:749:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x556dddfe15e8 <col:3> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   | `-ConditionalOperator 0x556dddfe19d0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556dddfe17f8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556dddfe1718 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556dddfe1640 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556dddfe1628 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556dddfe1608 <col:8> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556dddfe16f8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556dddfe1690 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556dddfe1678 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556dddfe1658 <col:27> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x556dddfe16e0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x556dddfe16c8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556dddfe16a8 <col:46> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x556dddfe17d8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556dddfe1770 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556dddfe1758 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556dddfe1738 <col:65> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x556dddfe17c0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556dddfe17a8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556dddfe1788 <col:84> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dddfe19b8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfe1818 <col:101> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   |   `-ParenExpr 0x556dddfe1998 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556dddfe1968 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x556dddfe18d8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556dddfe1890 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556dddfe1878 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556dddfe1838 <col:106> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556dddfe18c0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556dddfe18a8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556dddfe1858 <col:124> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556dddfe1938 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dddfe18f8 <col:141> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556dddfe1950 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe1918 <col:153> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x556dddfe1f20 <line:750:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556dddfe1a20 <col:3> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x556dddfe1ef0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556dddfe1ec0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dddfe1ea8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dddfe1a40 <col:15> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dddfe1ed8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfe1a60 <col:31> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x556dddfe1e88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556dddfe1e58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556dddfe1c80 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556dddfe1ba0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556dddfe1ab8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556dddfe1aa0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556dddfe1a80 <col:45> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556dddfe1b80 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556dddfe1b08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556dddfe1af0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556dddfe1ad0 <col:64> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x556dddfe1b68 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556dddfe1b50 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556dddfe1b20 <col:83> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556dddfe1c60 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556dddfe1bf8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556dddfe1be0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556dddfe1bc0 <col:102> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x556dddfe1c48 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556dddfe1c30 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556dddfe1c10 <col:121> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556dddfe1e40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dddfe1ca0 <col:138> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x556dddfe1e20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556dddfe1df0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556dddfe1d60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556dddfe1d18 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556dddfe1d00 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556dddfe1cc0 <col:151> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556dddfe1d48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556dddfe1d30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556dddfe1ce0 <col:169> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x556dddfe1dc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556dddfe1d80 <col:186> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556dddfe1dd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556dddfe1da0 <col:198> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x556dddfe2430 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556dddfe1f40 <col:3> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x556dddfe2400 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556dddfe23d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dddfe23b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dddfe1f60 <col:15> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dddfe23e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfe1f80 <col:31> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x556dddfe2398 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556dddfe2368 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556dddfe2190 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556dddfe20b0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556dddfe1fd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556dddfe1fc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556dddfe1fa0 <col:45> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556dddfe2090 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556dddfe2028 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556dddfe2010 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556dddfe1ff0 <col:64> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x556dddfe2078 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556dddfe2060 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556dddfe2040 <col:83> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556dddfe2170 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556dddfe2108 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556dddfe20f0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556dddfe20d0 <col:102> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x556dddfe2158 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556dddfe2140 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556dddfe2120 <col:121> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556dddfe2350 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dddfe21b0 <col:138> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x556dddfe2330 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556dddfe2300 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556dddfe2270 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556dddfe2228 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556dddfe2210 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556dddfe21d0 <col:151> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556dddfe2258 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556dddfe2240 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556dddfe21f0 <col:169> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x556dddfe22d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556dddfe2290 <col:186> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556dddfe22e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556dddfe22b0 <col:198> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x556dddfe29d8 <line:752:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe2450 <col:3> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe29c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe2990 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556dddfe2948 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfe2930 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfe2470 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe2978 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfe2960 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfe2490 <col:36> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556dddfe2910 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556dddfe28e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556dddfe26a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dddfe25c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dddfe24e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dddfe24d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dddfe24b0 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dddfe25a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dddfe2538 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dddfe2520 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dddfe2500 <col:74> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556dddfe2588 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dddfe2570 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dddfe2550 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dddfe2680 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dddfe2618 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dddfe2600 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dddfe25e0 <col:112> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556dddfe2668 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dddfe2650 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dddfe2630 <col:131> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556dddfe28c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dddfe28b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dddfe26c0 <col:148> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556dddfe2890 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556dddfe2860 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556dddfe2780 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dddfe2738 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dddfe2720 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dddfe26e0 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dddfe2768 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dddfe2750 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dddfe2700 <col:184> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556dddfe2818 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dddfe27d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dddfe27a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dddfe2848 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556dddfe2830 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556dddfe27f8 <col:212> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dddfe2fb8 <line:753:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe29f8 <col:3> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe2fa0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe2f70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556dddfe2f28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfe2f10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfe2a18 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe2f58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfe2f40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfe2a38 <col:36> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556dddfe2ef0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556dddfe2ec0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556dddfe2c60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dddfe2b80 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dddfe2a90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dddfe2a78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dddfe2a58 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dddfe2b60 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dddfe2ae0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dddfe2ac8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dddfe2aa8 <col:74> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556dddfe2b30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dddfe2b18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dddfe2af8 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dddfe2c40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dddfe2bd8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dddfe2bc0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dddfe2ba0 <col:112> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556dddfe2c28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dddfe2c10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dddfe2bf0 <col:131> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556dddfe2ea8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dddfe2e90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dddfe2c80 <col:148> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556dddfe2e70 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556dddfe2e40 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556dddfe2d40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dddfe2cf8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dddfe2ce0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dddfe2ca0 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dddfe2d28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dddfe2d10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dddfe2cc0 <col:184> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556dddfe2e10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dddfe2d90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dddfe2d60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dddfe2e28 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556dddfe2de8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556dddfe2db8 <col:219> 'int' 0
|   |-BinaryOperator 0x556dddfe3560 <line:754:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe2fd8 <col:3> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe3548 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe3518 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556dddfe34d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfe34b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfe2ff8 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe3500 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfe34e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfe3018 <col:36> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x556dddfe3498 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556dddfe3468 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556dddfe3228 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dddfe3148 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dddfe3070 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dddfe3058 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dddfe3038 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dddfe3128 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dddfe30c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dddfe30a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dddfe3088 <col:74> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556dddfe3110 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dddfe30f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dddfe30d8 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dddfe3208 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dddfe31a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dddfe3188 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dddfe3168 <col:112> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556dddfe31f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dddfe31d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dddfe31b8 <col:131> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556dddfe3450 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dddfe3438 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dddfe3248 <col:148> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x556dddfe3418 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556dddfe33e8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556dddfe3308 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dddfe32c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dddfe32a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dddfe3268 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dddfe32f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dddfe32d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dddfe3288 <col:184> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556dddfe33a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dddfe3358 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dddfe3328 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dddfe33d0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556dddfe33b8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556dddfe3380 <col:212> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556dddfe3b28 <line:755:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe3580 <col:3> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe3b10 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe3ae0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556dddfe3a98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfe3a80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfe35a0 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe3ac8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556dddfe3ab0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556dddfe35c0 <col:36> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x556dddfe3a60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556dddfe3a30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556dddfe37d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556dddfe36f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556dddfe3618 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556dddfe3600 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556dddfe35e0 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556dddfe36d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556dddfe3668 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556dddfe3650 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556dddfe3630 <col:74> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x556dddfe36b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556dddfe36a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556dddfe3680 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556dddfe37b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556dddfe3748 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556dddfe3730 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556dddfe3710 <col:112> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x556dddfe3798 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556dddfe3780 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556dddfe3760 <col:131> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x556dddfe3a18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556dddfe3a00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556dddfe37f0 <col:148> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x556dddfe39e0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556dddfe39b0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556dddfe38b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556dddfe3868 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556dddfe3850 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556dddfe3810 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556dddfe3898 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556dddfe3880 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556dddfe3830 <col:184> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x556dddfe3980 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556dddfe3900 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556dddfe38d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556dddfe3998 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556dddfe3958 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556dddfe3928 <col:219> 'int' 0
|   |-BinaryOperator 0x556dddfe3bc8 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556dddfe3b70 <col:3> 'int' lvalue Var 0x556dddfdc560 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x556dddfe3bb0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfe3b90 <col:25> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   |-BinaryOperator 0x556dddfe3cf8 <line:757:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556dddfe3be8 <col:3> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   | `-ConditionalOperator 0x556dddfe3cc8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556dddfe3c80 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556dddfe3c68 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556dddfe3c08 <col:7> '_Bool' lvalue Var 0x556dddfdc808 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556dddfe3c98 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfe3c28 <col:25> 'int' lvalue Var 0x556dddfdc888 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556dddfe3cb0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556dddfe3c48 <col:37> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   |-BinaryOperator 0x556dddfe3d90 <line:758:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe3d18 <col:3> '_Bool' lvalue Var 0x556dddfdc808 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556dddfe3d68 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556dddfe3d38 <col:28> 'int' 0
|   |-CallExpr 0x556dddfe3de8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfe3dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe3db0 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dddfe3e40 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfe3e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe3e08 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfe4128 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556dddfe3e60 <col:3> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   | `-ConditionalOperator 0x556dddfe40f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556dddfe3f20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556dddfe3ed8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556dddfe3ec0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556dddfe3e80 <col:7> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556dddfe3f08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556dddfe3ef0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556dddfe3ea0 <col:25> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x556dddfe40e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfe3f40 <col:42> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x556dddfe40c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556dddfe4090 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556dddfe4000 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556dddfe3fb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556dddfe3fa0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556dddfe3f60 <col:55> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556dddfe3fe8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556dddfe3fd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556dddfe3f80 <col:73> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556dddfe4060 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dddfe4020 <col:90> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556dddfe4078 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe4040 <col:102> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   |-BinaryOperator 0x556dddfe4330 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe4148 <col:3> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe4318 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe42e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556dddfe4208 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556dddfe41c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556dddfe41a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556dddfe4168 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556dddfe41f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556dddfe41d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556dddfe4188 <col:38> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe42a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe4258 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe4228 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe42d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe42b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe4280 <col:66> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dddfe4618 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe4350 <col:3> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe4600 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe45d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556dddfe44f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556dddfe4410 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556dddfe43c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556dddfe43b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556dddfe4370 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556dddfe43f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556dddfe43e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556dddfe4390 <col:38> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556dddfe44d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556dddfe4488 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556dddfe4470 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556dddfe4430 <col:56> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556dddfe44b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556dddfe44a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556dddfe4450 <col:74> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe4588 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe4540 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe4510 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe45b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe45a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe4568 <col:102> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556dddfe4820 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe4638 <col:3> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe4808 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe47d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556dddfe46f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556dddfe46b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556dddfe4698 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556dddfe4658 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556dddfe46e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556dddfe46c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556dddfe4678 <col:38> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe4790 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe4748 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe4718 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe47c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe47a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe4770 <col:66> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556dddfe4b08 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe4840 <col:3> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe4af0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe4ac0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556dddfe49e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556dddfe4900 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556dddfe48b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556dddfe48a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556dddfe4860 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556dddfe48e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556dddfe48d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556dddfe4880 <col:38> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556dddfe49c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556dddfe4978 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556dddfe4960 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556dddfe4920 <col:56> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556dddfe49a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556dddfe4990 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556dddfe4940 <col:74> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe4a78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe4a30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe4a00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe4aa8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe4a90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe4a58 <col:102> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x556dddfe4b80 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfe4b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe4b28 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dddfe4bd8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfe4bc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe4ba0 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfe4c90 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556dddfe4bf8 <col:3> 'int' lvalue Var 0x556dddfdc320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556dddfe4c70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556dddfe4c58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfe4c18 <col:22> 'int' lvalue Var 0x556dddfdc320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556dddfe4c38 <col:41> 'int' 1
|   |-CallExpr 0x556dddfe4ce8 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfe4cd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe4cb0 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556dddfe4d60 <line:770:3, col:36>
|     `-CallExpr 0x556dddfe4d40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556dddfe4d28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556dddfe4d08 <col:10> 'void *(void)' Function 0x556dddf82ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556dddfe4f58 prev 0x556dddfdbfa0 <line:772:1, line:800:1> line:772:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x556dddfe4ec0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556dddfe6708 <line:773:1, line:800:1>
|   |-CallExpr 0x556dddfe5038 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfe5020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe5000 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfe50b0 <line:775:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556dddfe5058 <col:3> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x556dddfe5098 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfe5078 <col:15> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x556dddfe5110 <line:776:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556dddfe50d0 <col:3> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x556dddfe50f0 <col:15> 'int' 2
|   |-BinaryOperator 0x556dddfe5188 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe5130 <col:3> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe5170 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfe5150 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dddfe5220 <line:778:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe51a8 <col:3> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x556dddfe51f8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556dddfe51c8 <col:27> 'int' 1
|   |-CallExpr 0x556dddfe53a8 <line:779:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x556dddfe5390 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x556dddfe5240 <col:3> 'void (int)' Function 0x556dddf82d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x556dddfe5340 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x556dddfe5320 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x556dddfe5300 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x556dddfe52b8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x556dddfe52a0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x556dddfe5260 <col:23> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x556dddfe52e8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x556dddfe52d0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x556dddfe5280 <col:41> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dddfe5428 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe53d0 <col:3> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe5410 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfe53f0 <col:20> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x556dddfe54a0 <line:781:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe5448 <col:3> '_Bool' lvalue Var 0x556dddfdcb78 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe5488 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfe5468 <col:20> '_Bool' lvalue Var 0x556dddfdc978 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556dddfe5518 <line:782:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe54c0 <col:3> '_Bool' lvalue Var 0x556dddfdcbf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe5500 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfe54e0 <col:20> '_Bool' lvalue Var 0x556dddfdc9f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556dddfe5590 <line:783:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe5538 <col:3> '_Bool' lvalue Var 0x556dddfdcc68 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe5578 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556dddfe5558 <col:20> '_Bool' lvalue Var 0x556dddfdca68 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556dddfe5628 <line:784:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe55b0 <col:3> '_Bool' lvalue Var 0x556dddfdca68 'x$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x556dddfe5600 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556dddfe55d0 <col:27> 'int' 1
|   |-CallExpr 0x556dddfe5680 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfe5668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe5648 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dddfe56d8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfe56c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe56a0 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfe5738 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556dddfe56f8 <col:3> 'int' lvalue Var 0x556dddfdd050 'y' 'int'
|   | `-IntegerLiteral 0x556dddfe5718 <col:7> 'int' 1
|   |-CallExpr 0x556dddfe5790 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfe5778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe5758 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dddfe57e8 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfe57d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe57b0 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfe5ad0 <line:790:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556dddfe5808 <col:3> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   | `-ConditionalOperator 0x556dddfe5aa0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556dddfe58c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556dddfe5880 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556dddfe5868 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556dddfe5828 <col:7> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556dddfe58b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556dddfe5898 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556dddfe5848 <col:25> '_Bool' lvalue Var 0x556dddfdca68 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556dddfe5a88 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfe58e8 <col:42> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x556dddfe5a68 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556dddfe5a38 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556dddfe59a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556dddfe5960 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556dddfe5948 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556dddfe5908 <col:55> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556dddfe5990 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556dddfe5978 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556dddfe5928 <col:73> '_Bool' lvalue Var 0x556dddfdcc68 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556dddfe5a08 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556dddfe59c8 <col:90> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556dddfe5a20 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe59e8 <col:102> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
|   |-BinaryOperator 0x556dddfe5ce8 <line:791:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe5af0 <col:3> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe5cd0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe5ca0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556dddfe5bc0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556dddfe5b68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556dddfe5b50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556dddfe5b10 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556dddfe5ba8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556dddfe5b90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556dddfe5b30 <col:38> '_Bool' lvalue Var 0x556dddfdca68 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe5c58 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe5c10 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe5be0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe5c88 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe5c70 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe5c38 <col:66> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556dddfe5fd0 <line:792:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe5d08 <col:3> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe5fb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe5f88 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556dddfe5ea8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556dddfe5dc8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556dddfe5d80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556dddfe5d68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556dddfe5d28 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556dddfe5db0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556dddfe5d98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556dddfe5d48 <col:38> '_Bool' lvalue Var 0x556dddfdca68 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556dddfe5e88 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556dddfe5e40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556dddfe5e28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556dddfe5de8 <col:56> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556dddfe5e70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556dddfe5e58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556dddfe5e08 <col:74> '_Bool' lvalue Var 0x556dddfdcc68 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe5f40 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe5ef8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe5ec8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe5f70 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe5f58 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe5f20 <col:102> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556dddfe61d8 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe5ff0 <col:3> '_Bool' lvalue Var 0x556dddfdca68 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe61c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe6190 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556dddfe60b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556dddfe6068 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556dddfe6050 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556dddfe6010 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556dddfe6098 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556dddfe6080 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556dddfe6030 <col:38> '_Bool' lvalue Var 0x556dddfdca68 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe6148 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe6100 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe60d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe6178 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe6160 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe6128 <col:66> '_Bool' lvalue Var 0x556dddfdca68 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556dddfe64c0 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556dddfe61f8 <col:3> '_Bool' lvalue Var 0x556dddfdcc68 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556dddfe64a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556dddfe6478 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556dddfe6398 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556dddfe62b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556dddfe6270 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556dddfe6258 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556dddfe6218 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556dddfe62a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556dddfe6288 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556dddfe6238 <col:38> '_Bool' lvalue Var 0x556dddfdca68 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556dddfe6378 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556dddfe6330 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556dddfe6318 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556dddfe62d8 <col:56> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556dddfe6360 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556dddfe6348 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556dddfe62f8 <col:74> '_Bool' lvalue Var 0x556dddfdcc68 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556dddfe6430 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556dddfe63e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556dddfe63b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556dddfe6460 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556dddfe6448 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556dddfe6410 <col:102> '_Bool' lvalue Var 0x556dddfdcc68 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x556dddfe6518 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfe6500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe64e0 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556dddfe6570 <line:796:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556dddfe6558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe6538 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556dddfe6628 <line:797:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556dddfe6590 <col:3> 'int' lvalue Var 0x556dddfdc320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556dddfe6608 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556dddfe65f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556dddfe65b0 <col:22> 'int' lvalue Var 0x556dddfdc320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556dddfe65d0 <col:41> 'int' 1
|   |-CallExpr 0x556dddfe6680 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556dddfe6668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556dddfe6648 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556dddfe66f8 <line:799:3, col:36>
|     `-CallExpr 0x556dddfe66d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556dddfe66c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556dddfe66a0 <col:10> 'void *(void)' Function 0x556dddf82ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556dddfe6808 prev 0x556dddfdc068 <line:801:1, line:803:1> line:801:6 fence 'void ()'
| `-CompoundStmt 0x556dddfe68a8 <line:802:1, line:803:1>
|-FunctionDecl 0x556dddfe68d8 prev 0x556dddfdc128 <line:804:1, line:806:1> line:804:6 isync 'void ()'
| `-CompoundStmt 0x556dddfe6978 <line:805:1, line:806:1>
|-FunctionDecl 0x556dddfe69a8 prev 0x556dddfdc1e8 <line:807:1, line:809:1> line:807:6 lwfence 'void ()'
| `-CompoundStmt 0x556dddfe6a48 <line:808:1, line:809:1>
`-FunctionDecl 0x556dddfe6ab8 <line:810:1, line:847:1> line:810:5 main 'int ()'
  `-CompoundStmt 0x556dddfeb138 <line:811:1, line:847:1>
    |-DeclStmt 0x556dddfe6c08 <line:812:3, col:18>
    | `-VarDecl 0x556dddfe6ba0 <col:3, col:13> col:13 used t2554 'pthread_t':'unsigned long'
    |-CallExpr 0x556dddfe6e18 <line:813:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556dddfe6e00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dddfe6c20 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556dddfc35b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556dddfe6c60 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556dddfe6c40 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556dddfe6ba0 't2554' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556dddfe6e58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556dddfe6cd8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556dddfe6cb0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556dddfe6c78 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556dddfe6e70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dddfe6cf8 <col:39> 'void *(void *)' Function 0x556dddfdd278 'P0' 'void *(void *)'
    | `-ParenExpr 0x556dddfe6d78 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556dddfe6d50 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556dddfe6d18 <col:52> 'int' 0
    |-DeclStmt 0x556dddfe6f00 <line:814:3, col:18>
    | `-VarDecl 0x556dddfe6e98 <col:3, col:13> col:13 used t2555 'pthread_t':'unsigned long'
    |-CallExpr 0x556dddfe70a8 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556dddfe7090 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dddfe6f18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556dddfc35b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556dddfe6f58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556dddfe6f38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556dddfe6e98 't2555' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556dddfe70e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556dddfe6fd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556dddfe6fa8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556dddfe6f70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556dddfe7100 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dddfe6ff0 <col:39> 'void *(void *)' Function 0x556dddfe0430 'P1' 'void *(void *)'
    | `-ParenExpr 0x556dddfe7070 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556dddfe7048 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556dddfe7010 <col:52> 'int' 0
    |-DeclStmt 0x556dddfe7190 <line:816:3, col:18>
    | `-VarDecl 0x556dddfe7128 <col:3, col:13> col:13 used t2556 'pthread_t':'unsigned long'
    |-CallExpr 0x556dddfe7338 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556dddfe7320 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dddfe71a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556dddfc35b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556dddfe71e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556dddfe71c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556dddfe7128 't2556' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556dddfe7378 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556dddfe7260 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556dddfe7238 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556dddfe7200 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556dddfe7390 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dddfe7280 <col:39> 'void *(void *)' Function 0x556dddfe4f58 'P2' 'void *(void *)'
    | `-ParenExpr 0x556dddfe7300 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556dddfe72d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556dddfe72a0 <col:52> 'int' 0
    |-CallExpr 0x556dddfe73e0 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556dddfe73c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dddfe73a8 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556dddfe74b0 <line:819:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x556dddfe7400 <col:3> '_Bool' lvalue Var 0x556dddfdc5f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x556dddfe7498 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x556dddfe7478 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x556dddfe7460 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x556dddfe7420 <col:21> 'int' lvalue Var 0x556dddfdc320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x556dddfe7440 <col:41> 'int' 3
    |-CallExpr 0x556dddfe7508 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556dddfe74f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dddfe74d0 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556dddfe7580 <line:821:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556dddfe7568 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dddfe7528 <col:3> 'void (int)' Function 0x556dddf82940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x556dddfe75c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556dddfe75a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556dddfe7548 <col:21> '_Bool' lvalue Var 0x556dddfdc5f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x556dddfe7610 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556dddfe75f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dddfe75d8 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556dddfe78f8 <line:823:3, col:103> 'int' '='
    | |-DeclRefExpr 0x556dddfe7630 <col:3> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
    | `-ConditionalOperator 0x556dddfe78c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x556dddfe76f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x556dddfe76a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x556dddfe7690 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x556dddfe7650 <col:7> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x556dddfe76d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x556dddfe76c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x556dddfe7670 <col:25> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x556dddfe78b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556dddfe7710 <col:42> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x556dddfe7890 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x556dddfe7860 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x556dddfe77d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x556dddfe7788 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x556dddfe7770 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x556dddfe7730 <col:55> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x556dddfe77b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x556dddfe77a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x556dddfe7750 <col:73> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x556dddfe7830 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x556dddfe77f0 <col:90> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x556dddfe7848 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x556dddfe7810 <col:102> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
    |-BinaryOperator 0x556dddfe7b00 <line:824:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556dddfe7918 <col:3> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x556dddfe7ae8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dddfe7ab8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556dddfe79d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556dddfe7990 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556dddfe7978 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556dddfe7938 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556dddfe79c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556dddfe79a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556dddfe7958 <col:38> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556dddfe7a70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556dddfe7a28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556dddfe79f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556dddfe7aa0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556dddfe7a88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556dddfe7a50 <col:66> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x556dddfe7e00 <line:825:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556dddfe7b20 <col:3> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x556dddfe7de8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dddfe7db8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556dddfe7cd8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556dddfe7bf8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556dddfe7bb0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556dddfe7b80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556dddfe7b40 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556dddfe7be0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556dddfe7bc8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556dddfe7b60 <col:38> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556dddfe7cb8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556dddfe7c70 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556dddfe7c58 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556dddfe7c18 <col:56> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556dddfe7ca0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556dddfe7c88 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556dddfe7c38 <col:74> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556dddfe7d70 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556dddfe7d28 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556dddfe7cf8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556dddfe7da0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556dddfe7d88 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556dddfe7d50 <col:102> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x556dddfe8008 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556dddfe7e20 <col:3> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556dddfe7ff0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dddfe7fc0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556dddfe7ee0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556dddfe7e98 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556dddfe7e80 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556dddfe7e40 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556dddfe7ec8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556dddfe7eb0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556dddfe7e60 <col:38> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556dddfe7f78 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556dddfe7f30 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556dddfe7f00 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556dddfe7fa8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556dddfe7f90 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556dddfe7f58 <col:66> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x556dddfe82f0 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556dddfe8028 <col:3> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556dddfe82d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dddfe82a8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556dddfe81c8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556dddfe80e8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556dddfe80a0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556dddfe8088 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556dddfe8048 <col:20> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556dddfe80d0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556dddfe80b8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556dddfe8068 <col:38> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556dddfe81a8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556dddfe8160 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556dddfe8148 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556dddfe8108 <col:56> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556dddfe8190 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556dddfe8178 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556dddfe8128 <col:74> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556dddfe8260 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556dddfe8218 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556dddfe81e8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556dddfe8290 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556dddfe8278 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556dddfe8240 <col:102> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x556dddfe8348 <line:828:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556dddfe8330 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dddfe8310 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556dddfe83a0 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556dddfe8388 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dddfe8368 <col:3> 'void ()' Function 0x556dddf82fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556dddfe8438 <line:830:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x556dddfe83c0 <col:3> '_Bool' lvalue Var 0x556dddfdd0e8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x556dddfe8418 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x556dddfe8400 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x556dddfe83e0 <col:19> '_Bool (void)' Function 0x556dddf82770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x556dddfe84d0 <line:831:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x556dddfe8458 <col:3> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
    | `-CallExpr 0x556dddfe84b0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x556dddfe8498 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x556dddfe8478 <col:19> '_Bool (void)' Function 0x556dddf82770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x556dddfe8548 <line:832:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x556dddfe84f0 <col:3> '_Bool' lvalue Var 0x556dddfdc808 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x556dddfe8530 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x556dddfe8510 <col:21> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x556dddfe85c0 <line:833:3, col:15> 'int' '='
    | |-DeclRefExpr 0x556dddfe8568 <col:3> 'int' lvalue Var 0x556dddfdc888 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x556dddfe85a8 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x556dddfe8588 <col:15> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
    |-BinaryOperator 0x556dddfe89f8 <line:834:3, col:162> 'int' '='
    | |-DeclRefExpr 0x556dddfe85e0 <col:3> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
    | `-ConditionalOperator 0x556dddfe89c8 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x556dddfe87f0 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x556dddfe8710 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x556dddfe8638 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x556dddfe8620 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x556dddfe8600 <col:8> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x556dddfe86f0 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x556dddfe8688 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x556dddfe8670 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x556dddfe8650 <col:27> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x556dddfe86d8 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x556dddfe86c0 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x556dddfe86a0 <col:46> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x556dddfe87d0 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x556dddfe8768 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x556dddfe8750 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x556dddfe8730 <col:65> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x556dddfe87b8 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x556dddfe87a0 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x556dddfe8780 <col:84> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x556dddfe89b0 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556dddfe8810 <col:101> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
    |   `-ParenExpr 0x556dddfe8990 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x556dddfe8960 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x556dddfe88d0 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x556dddfe8888 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x556dddfe8870 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x556dddfe8830 <col:106> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x556dddfe88b8 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x556dddfe88a0 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x556dddfe8850 <col:124> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x556dddfe8930 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x556dddfe88f0 <col:141> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x556dddfe8948 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x556dddfe8910 <col:153> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
    |-BinaryOperator 0x556dddfe8f20 <line:835:3, col:208> 'int' '='
    | |-DeclRefExpr 0x556dddfe8a18 <col:3> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x556dddfe8ef0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x556dddfe8ec0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x556dddfe8ea8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x556dddfe8a38 <col:15> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x556dddfe8ed8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556dddfe8a58 <col:31> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x556dddfe8e88 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x556dddfe8e58 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x556dddfe8c80 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x556dddfe8b88 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x556dddfe8ab0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x556dddfe8a98 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x556dddfe8a78 <col:45> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x556dddfe8b68 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x556dddfe8b00 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x556dddfe8ae8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x556dddfe8ac8 <col:64> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x556dddfe8b50 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x556dddfe8b38 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x556dddfe8b18 <col:83> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x556dddfe8c60 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x556dddfe8bf8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x556dddfe8be0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x556dddfe8bc0 <col:102> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x556dddfe8c48 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x556dddfe8c30 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x556dddfe8c10 <col:121> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x556dddfe8e40 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x556dddfe8ca0 <col:138> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
    |       `-ParenExpr 0x556dddfe8e20 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x556dddfe8df0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x556dddfe8d60 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x556dddfe8d18 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x556dddfe8d00 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x556dddfe8cc0 <col:151> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x556dddfe8d48 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x556dddfe8d30 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x556dddfe8ce0 <col:169> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x556dddfe8dc0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x556dddfe8d80 <col:186> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x556dddfe8dd8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x556dddfe8da0 <col:198> 'int' lvalue Var 0x556dddfdcde0 'x$w_buff0' 'int'
    |-BinaryOperator 0x556dddfe9430 <line:836:3, col:208> 'int' '='
    | |-DeclRefExpr 0x556dddfe8f40 <col:3> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x556dddfe9400 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x556dddfe93d0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x556dddfe93b8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x556dddfe8f60 <col:15> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x556dddfe93e8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556dddfe8f80 <col:31> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x556dddfe9398 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x556dddfe9368 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x556dddfe9190 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x556dddfe90b0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x556dddfe8fd8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x556dddfe8fc0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x556dddfe8fa0 <col:45> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x556dddfe9090 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x556dddfe9028 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x556dddfe9010 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x556dddfe8ff0 <col:64> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x556dddfe9078 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x556dddfe9060 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x556dddfe9040 <col:83> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x556dddfe9170 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x556dddfe9108 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x556dddfe90f0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x556dddfe90d0 <col:102> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x556dddfe9158 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x556dddfe9140 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x556dddfe9120 <col:121> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x556dddfe9350 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x556dddfe91b0 <col:138> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x556dddfe9330 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x556dddfe9300 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x556dddfe9270 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x556dddfe9228 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x556dddfe9210 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x556dddfe91d0 <col:151> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x556dddfe9258 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x556dddfe9240 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x556dddfe91f0 <col:169> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x556dddfe92d0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x556dddfe9290 <col:186> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x556dddfe92e8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x556dddfe92b0 <col:198> 'int' lvalue Var 0x556dddfdced8 'x$w_buff1' 'int'
    |-BinaryOperator 0x556dddfe99d8 <line:837:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x556dddfe9450 <col:3> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x556dddfe99c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dddfe9990 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x556dddfe9948 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x556dddfe9930 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x556dddfe9470 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x556dddfe9978 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x556dddfe9960 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x556dddfe9490 <col:36> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x556dddfe9910 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x556dddfe98e0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x556dddfe96a0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x556dddfe95c0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x556dddfe94e8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x556dddfe94d0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x556dddfe94b0 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x556dddfe95a0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x556dddfe9538 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x556dddfe9520 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x556dddfe9500 <col:74> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x556dddfe9588 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x556dddfe9570 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x556dddfe9550 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x556dddfe9680 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x556dddfe9618 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x556dddfe9600 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x556dddfe95e0 <col:112> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x556dddfe9668 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x556dddfe9650 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x556dddfe9630 <col:131> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x556dddfe98c8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x556dddfe98b0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x556dddfe96c0 <col:148> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x556dddfe9890 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x556dddfe9860 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x556dddfe9780 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x556dddfe9738 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x556dddfe9720 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x556dddfe96e0 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x556dddfe9768 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x556dddfe9750 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x556dddfe9700 <col:184> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x556dddfe9818 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x556dddfe97d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x556dddfe97a0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x556dddfe9848 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x556dddfe9830 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x556dddfe97f8 <col:212> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x556dddfe9fb0 <line:838:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x556dddfe99f8 <col:3> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x556dddfe9f98 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dddfe9f68 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x556dddfe9f20 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x556dddfe9f08 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x556dddfe9a18 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x556dddfe9f50 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x556dddfe9f38 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x556dddfe9a38 <col:36> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x556dddfe9ee8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x556dddfe9eb8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x556dddfe9c58 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x556dddfe9b68 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x556dddfe9a90 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x556dddfe9a78 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x556dddfe9a58 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x556dddfe9b48 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x556dddfe9ae0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x556dddfe9ac8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x556dddfe9aa8 <col:74> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x556dddfe9b30 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x556dddfe9b18 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x556dddfe9af8 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x556dddfe9c38 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x556dddfe9bd0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x556dddfe9ba8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x556dddfe9b88 <col:112> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x556dddfe9c20 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x556dddfe9c08 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x556dddfe9be8 <col:131> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x556dddfe9ea0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x556dddfe9e88 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x556dddfe9c78 <col:148> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x556dddfe9e68 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x556dddfe9e38 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x556dddfe9d38 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x556dddfe9cf0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x556dddfe9cd8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x556dddfe9c98 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x556dddfe9d20 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x556dddfe9d08 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x556dddfe9cb8 <col:184> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x556dddfe9e08 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x556dddfe9d88 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x556dddfe9d58 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x556dddfe9e20 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x556dddfe9de0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x556dddfe9db0 <col:219> 'int' 0
    |-BinaryOperator 0x556dddfea558 <line:839:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x556dddfe9fd0 <col:3> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556dddfea540 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dddfea510 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x556dddfea4c8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x556dddfea4b0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x556dddfe9ff0 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x556dddfea4f8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x556dddfea4e0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x556dddfea010 <col:36> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x556dddfea490 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x556dddfea460 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x556dddfea220 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x556dddfea140 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x556dddfea068 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x556dddfea050 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x556dddfea030 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x556dddfea120 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x556dddfea0b8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x556dddfea0a0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x556dddfea080 <col:74> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x556dddfea108 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x556dddfea0f0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x556dddfea0d0 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x556dddfea200 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x556dddfea198 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x556dddfea180 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x556dddfea160 <col:112> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x556dddfea1e8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x556dddfea1d0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x556dddfea1b0 <col:131> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x556dddfea448 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x556dddfea430 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x556dddfea240 <col:148> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x556dddfea410 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x556dddfea3e0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x556dddfea300 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x556dddfea2b8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x556dddfea2a0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x556dddfea260 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x556dddfea2e8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x556dddfea2d0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x556dddfea280 <col:184> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x556dddfea398 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x556dddfea350 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x556dddfea320 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x556dddfea3c8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x556dddfea3b0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x556dddfea378 <col:212> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x556dddfeab20 <line:840:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x556dddfea578 <col:3> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556dddfeab08 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556dddfeaad8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x556dddfeaa90 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x556dddfeaa78 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x556dddfea598 <col:20> '_Bool' lvalue Var 0x556dddfdd160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x556dddfeaac0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x556dddfeaaa8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x556dddfea5b8 <col:36> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x556dddfeaa58 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x556dddfeaa28 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x556dddfea7c8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x556dddfea6e8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x556dddfea610 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x556dddfea5f8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x556dddfea5d8 <col:55> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x556dddfea6c8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x556dddfea660 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x556dddfea648 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x556dddfea628 <col:74> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x556dddfea6b0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x556dddfea698 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x556dddfea678 <col:93> '_Bool' lvalue Var 0x556dddfdcf50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x556dddfea7a8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x556dddfea740 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x556dddfea728 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x556dddfea708 <col:112> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x556dddfea790 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x556dddfea778 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x556dddfea758 <col:131> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x556dddfeaa10 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x556dddfea9f8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x556dddfea7e8 <col:148> '_Bool' lvalue Var 0x556dddfdcb00 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x556dddfea9d8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x556dddfea9a8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x556dddfea8a8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x556dddfea860 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x556dddfea848 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x556dddfea808 <col:166> '_Bool' lvalue Var 0x556dddfdce58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x556dddfea890 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x556dddfea878 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x556dddfea828 <col:184> '_Bool' lvalue Var 0x556dddfdc900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x556dddfea978 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x556dddfea8f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x556dddfea8c8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x556dddfea990 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x556dddfea950 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x556dddfea920 <col:219> 'int' 0
    |-BinaryOperator 0x556dddfeae18 <line:841:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x556dddfeab40 <col:3> '_Bool' lvalue Var 0x556dddfdc670 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x556dddfeae00 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x556dddfeade8 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x556dddfeadc8 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x556dddfeada8 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x556dddfead10 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x556dddfeac78 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x556dddfeabe0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x556dddfeaba0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x556dddfeab60 <col:23> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
    |         | | | `-IntegerLiteral 0x556dddfeab80 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x556dddfeac58 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x556dddfeac40 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x556dddfeac00 <col:33> 'int' lvalue Var 0x556dddfdd050 'y' 'int'
    |         | |   `-IntegerLiteral 0x556dddfeac20 <col:38> 'int' 2
    |         | `-BinaryOperator 0x556dddfeacf0 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x556dddfeacd8 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x556dddfeac98 <col:43> 'int' lvalue Var 0x556dddfdc440 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x556dddfeacb8 <col:66> 'int' 0
    |         `-BinaryOperator 0x556dddfead88 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x556dddfead70 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x556dddfead30 <col:71> 'int' lvalue Var 0x556dddfdc560 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x556dddfead50 <col:94> 'int' 1
    |-BinaryOperator 0x556dddfeaf48 <line:842:3, col:37> 'int' '='
    | |-DeclRefExpr 0x556dddfeae38 <col:3> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
    | `-ConditionalOperator 0x556dddfeaf18 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x556dddfeaed0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x556dddfeaeb8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x556dddfeae58 <col:7> '_Bool' lvalue Var 0x556dddfdc808 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x556dddfeaee8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556dddfeae78 <col:25> 'int' lvalue Var 0x556dddfdc888 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x556dddfeaf00 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x556dddfeae98 <col:37> 'int' lvalue Var 0x556dddfdc770 'x' 'int'
    |-BinaryOperator 0x556dddfeafe0 <line:843:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x556dddfeaf68 <col:3> '_Bool' lvalue Var 0x556dddfdc808 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x556dddfeafb8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x556dddfeaf88 <col:28> 'int' 0
    |-CallExpr 0x556dddfeb038 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556dddfeb020 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556dddfeb000 <col:3> 'void ()' Function 0x556dddf83060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556dddfeb0b0 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556dddfeb098 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556dddfeb058 <col:3> 'void (int)' Function 0x556dddf82d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x556dddfeb0f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556dddfeb0d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556dddfeb078 <col:21> '_Bool' lvalue Var 0x556dddfdc670 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x556dddfeb128 <line:846:3, col:10>
      `-IntegerLiteral 0x556dddfeb108 <col:10> 'int' 0
