TranslationUnitDecl 0x562b148bfe18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562b148c06d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562b148c03b0 '__int128'
|-TypedefDecl 0x562b148c0748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562b148c03d0 'unsigned __int128'
|-TypedefDecl 0x562b148c0a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562b148c0820 'struct __NSConstantString_tag'
|   `-Record 0x562b148c07a0 '__NSConstantString_tag'
|-TypedefDecl 0x562b148c0af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562b148c0ab0 'char *'
|   `-BuiltinType 0x562b148bfeb0 'char'
|-TypedefDecl 0x562b148ff650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562b148c0d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562b148c0bd0 'struct __va_list_tag'
|     `-Record 0x562b148c0b50 '__va_list_tag'
|-FunctionDecl 0x562b148ff790 <./split_1/mix027_tso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x562b148ff6c0 <col:31> col:34 'int'
|-FunctionDecl 0x562b148ff958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562b148ffa80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562b148ffbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562b148ffb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562b148ffdf8 <col:40, col:99>
|   |-IfStmt 0x562b148ffdc8 <col:42, col:88>
|   | |-UnaryOperator 0x562b148ffca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562b148ffc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562b148ffc70 <col:47> 'int' lvalue ParmVar 0x562b148ffb38 'expression' 'int'
|   | `-CompoundStmt 0x562b148ffdb0 <col:59, col:88>
|   |   `-LabelStmt 0x562b148ffd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562b148ffd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562b148ffd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562b148ffcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x562b148ffa80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562b148ffde0 <col:89>
|   `-ReturnStmt 0x562b148ffde8 <col:91>
|-FunctionDecl 0x562b148ffe40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562b148fff00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562b14900280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562b148fffb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562b14900038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x562b149000b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562b14900138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562b14900340 <line:10:22>
|-FunctionDecl 0x562b14926390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562b149003b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562b14900430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x562b149004b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562b14900530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562b14926450 <line:13:22>
|-FunctionDecl 0x562b14926700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562b149264c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562b14926540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x562b149265c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x562b149267b8 <line:15:22>
|-TypedefDecl 0x562b14926828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562b148bff70 'unsigned char'
|-TypedefDecl 0x562b14926898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562b148bff90 'unsigned short'
|-TypedefDecl 0x562b14926908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562b148bffb0 'unsigned int'
|-TypedefDecl 0x562b14926978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b149269e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562b148bfed0 'signed char'
|-TypedefDecl 0x562b14926a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562b148bff70 'unsigned char'
|-TypedefDecl 0x562b14926ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562b148bfef0 'short'
|-TypedefDecl 0x562b14926b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562b148bff90 'unsigned short'
|-TypedefDecl 0x562b14926ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562b148bff10 'int'
|-TypedefDecl 0x562b14926c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562b148bffb0 'unsigned int'
|-TypedefDecl 0x562b14926c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14926cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14926d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14926dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14926e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14926eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562b148bffb0 'unsigned int'
|-TypedefDecl 0x562b14926f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562b148bffb0 'unsigned int'
|-TypedefDecl 0x562b14926f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14927008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14927078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562b148bffb0 'unsigned int'
|-TypedefDecl 0x562b149270e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14927158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b149271c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14927238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562b148bff10 'int'
|-RecordDecl 0x562b14927290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x562b14927408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x562b149274c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562b14927460 'struct __fsid_t' sugar
|   `-RecordType 0x562b14927310 '__fsid_t'
|     `-Record 0x562b14927290 ''
|-TypedefDecl 0x562b14927548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b149275b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14927628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14927698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562b148bffb0 'unsigned int'
|-TypedefDecl 0x562b14927708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14927778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562b148bffb0 'unsigned int'
|-TypedefDecl 0x562b149277e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14927858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562b148bff10 'int'
|-TypedefDecl 0x562b149278c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562b148bff10 'int'
|-TypedefDecl 0x562b14927938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562b148bff10 'int'
|-TypedefDecl 0x562b149279a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562b148c0630 'void *'
|   `-BuiltinType 0x562b148bfe70 'void'
|-TypedefDecl 0x562b14927a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14927a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14927af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14927b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14927bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14927c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14927cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14927d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14927d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14927e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14927e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14927f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562b14927ed0 '__off64_t' sugar
|   |-Typedef 0x562b149271c8 '__off64_t'
|   `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14928000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562b14927fc0 '__quad_t *'
|   `-TypedefType 0x562b14927f60 '__quad_t' sugar
|     |-Typedef 0x562b14926d68 '__quad_t'
|     `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14928070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562b148c0ab0 'char *'
|   `-BuiltinType 0x562b148bfeb0 'char'
|-TypedefDecl 0x562b149280e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b14928150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562b148bffb0 'unsigned int'
|-FunctionDecl 0x562b14928298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x562b149281c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x562b149295e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x562b149295d8 <line:72:3, col:34>
|     `-CallExpr 0x562b14929598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x562b14929580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562b14929510 <col:10> '<builtin fn type>' Function 0x562b14929380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x562b149295c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562b14929530 <col:29> 'unsigned int' lvalue ParmVar 0x562b149281c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x562b14929380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x562b14929420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x562b14929490 <col:10> Implicit
| `-ConstAttr 0x562b149294e8 <col:10> Implicit
|-FunctionDecl 0x562b14929740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x562b14929638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x562b14929a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x562b14929a48 <line:77:3, col:34>
|     `-CallExpr 0x562b14929a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x562b149299f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562b14929978 <col:10> '<builtin fn type>' Function 0x562b149297e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x562b14929a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x562b14929998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x562b14929638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x562b149297e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x562b14929888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x562b149298f8 <col:10> Implicit
| `-ConstAttr 0x562b14929950 <col:10> Implicit
|-TypedefDecl 0x562b14929a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-TypedefDecl 0x562b14929b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x562b14929ae0 '__time_t' sugar
|   |-Typedef 0x562b14927708 '__time_t'
|   `-BuiltinType 0x562b148bff30 'long'
|-RecordDecl 0x562b14929b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x562b14929c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x562b14929cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x562b14929d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x562b14929d10 '__pid_t' sugar
|   |-Typedef 0x562b14927238 '__pid_t'
|   `-BuiltinType 0x562b148bff10 'int'
|-RecordDecl 0x562b14929da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x562b14929e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x562b14929eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x562b14929f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x562b14929fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-RecordDecl 0x562b1492a030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x562b1492a2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x562b1492b3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x562b1492a310 'struct cpu_set_t' sugar
|   `-RecordType 0x562b1492a0b0 'cpu_set_t'
|     `-Record 0x562b1492a030 ''
|-FunctionDecl 0x562b1492b678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x562b1492b448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562b1492b550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x562b1492b728 <line:107:19>
|-FunctionDecl 0x562b1492b900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x562b1492b790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x562b1492b9a8 <col:69>
|-FunctionDecl 0x562b1492bb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x562b1492ba10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x562b1492bbc8 <col:64>
|-FunctionDecl 0x562b1492be88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x562b1492bc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562b1492bd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562b1492bf38 <line:113:22>
|-FunctionDecl 0x562b1492c1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562b1492bfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562b1492c098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562b1492c268 <col:88>
|-FunctionDecl 0x562b1492c588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562b1492c2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562b1492c3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x562b1492c440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562b1492c640 <col:62>
|-FunctionDecl 0x562b1492c7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562b1492c6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x562b1492c860 <col:63>
|-FunctionDecl 0x562b1492c988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562b1492ca28 <col:47>
|-FunctionDecl 0x562b1492cb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562b1492ca98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562b1492cbd8 <col:69>
|-FunctionDecl 0x562b1492cce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562b1492cc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562b1492cd88 <col:69>
|-FunctionDecl 0x562b1492d048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562b1492cdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562b1492cf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562b1492d0f8 <col:88>
|-TypedefDecl 0x562b1492d188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x562b1492d150 '__clock_t' sugar
|   |-Typedef 0x562b14927548 '__clock_t'
|   `-BuiltinType 0x562b148bff30 'long'
|-TypedefDecl 0x562b1492d218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562b1492d1e0 '__clockid_t' sugar
|   |-Typedef 0x562b14927938 '__clockid_t'
|   `-BuiltinType 0x562b148bff10 'int'
|-TypedefDecl 0x562b1492d2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562b1492d270 '__timer_t' sugar
|   |-Typedef 0x562b149279a8 '__timer_t'
|   `-PointerType 0x562b148c0630 'void *'
|     `-BuiltinType 0x562b148bfe70 'void'
|-RecordDecl 0x562b1492d300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x562b1492d3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x562b1492d440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562b1492d4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x562b1492d510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562b1492d578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562b1492d5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x562b1492d648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562b1492d6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x562b1492d718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562b1492d780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562b1492d7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x562b1492d838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x562b1492d908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562b1492d978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562b1492da20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562b1492dbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562b1492dc90 <col:45>
|-FunctionDecl 0x562b1492de70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562b1492dd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x562b1492df18 <col:54>
|-FunctionDecl 0x562b1492e118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562b1492df80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562b1492dff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562b1492e1c8 <line:157:22>
| `-ConstAttr 0x562b1492e220 <col:63>
|-FunctionDecl 0x562b1492f050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562b1492e318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562b1492f0f8 <col:56>
|-FunctionDecl 0x562b1492f4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562b1492f168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562b1492f1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562b1492f260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562b1492f358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562b1492f560 <col:54>
|-RecordDecl 0x562b1492f5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x562b1492f668 parent 0x562b148bfe18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562b1492f8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562b1492f968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562b1492f9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562b1492fa38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562b1492fb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562b1492fc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562b1492fbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x562b1492fb80 'struct __locale_struct' sugar
|     `-RecordType 0x562b1492f640 'struct __locale_struct'
|       `-Record 0x562b1492f5b8 '__locale_struct'
|-TypedefDecl 0x562b1492fcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562b1492fcc0 '__locale_t' sugar
|   |-Typedef 0x562b1492fc48 '__locale_t'
|   `-PointerType 0x562b1492fbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x562b1492fb80 'struct __locale_struct' sugar
|       `-RecordType 0x562b1492f640 'struct __locale_struct'
|         `-Record 0x562b1492f5b8 '__locale_struct'
|-FunctionDecl 0x562b14931110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562b1492fd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562b1492fde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562b1492fe60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562b1492fef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562b1492ff68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562b149311d8 <col:40>
|-FunctionDecl 0x562b149313c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562b149312a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562b14931470 <col:66>
|-FunctionDecl 0x562b14931580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562b149314d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562b14931628 <col:69>
|-FunctionDecl 0x562b14931858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562b14931690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562b14931720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562b14931908 <col:52>
|-FunctionDecl 0x562b14931ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562b14931970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562b14931a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562b14931b60 <col:55>
|-FunctionDecl 0x562b14931cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562b14931be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562b14931da0 <col:62>
|-FunctionDecl 0x562b14931f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562b14931e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562b14931fc0 <col:60>
|-FunctionDecl 0x562b149322b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562b14932118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562b14932198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562b14932368 <col:44>
|-FunctionDecl 0x562b14932578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562b149323d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562b14932450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562b14932628 <col:49>
|-VarDecl 0x562b14932728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562b149327a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562b14932828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562b149328f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562b14932a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562b14932ac0 <col:42>
|-VarDecl 0x562b14932b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562b14932bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562b14932d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562b14932c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562b14932de0 <col:57>
|-FunctionDecl 0x562b14932ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562b14932e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562b14932f98 <col:56>
|-FunctionDecl 0x562b149330d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562b14933018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562b14933178 <col:59>
|-FunctionDecl 0x562b14933280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x562b149331e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562b14933328 <col:48>
| `-ConstAttr 0x562b14933380 <col:89>
|-FunctionDecl 0x562b149335e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562b14933438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562b149334c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562b14933848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562b149336d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562b14933768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562b149338f8 <col:88>
|-FunctionDecl 0x562b14933a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562b14933960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562b149339f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562b14933b40 <col:88>
|-FunctionDecl 0x562b14933d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562b14933ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562b14933c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562b14933e08 <line:208:22>
|-FunctionDecl 0x562b14934178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562b14933e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562b14933ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562b14933f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562b14934010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562b14934478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562b14934278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562b14934350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562b14934528 <col:85>
|-FunctionDecl 0x562b14934918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562b14934590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562b149346c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x562b149347d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562b149349d0 <col:52>
|-FunctionDecl 0x562b14934b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562b14934a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562b14934bf0 <col:61>
|-FunctionDecl 0x562b149350f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562b14934c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562b14934cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562b14934e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562b14934ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562b149351b0 <col:62>
|-FunctionDecl 0x562b149353c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562b14935218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562b149352a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562b14935478 <line:221:22>
|-FunctionDecl 0x562b14935578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562b149354e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562b14935620 <col:65>
|-TypedefDecl 0x562b14935690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562b148bffd0 'unsigned long'
|-RecordDecl 0x562b149356e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x562b14935830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562b14935898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562b14935948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562b149358f0 'union pthread_attr_t' sugar
|   `-RecordType 0x562b14935770 'union pthread_attr_t'
|     `-Record 0x562b149356e8 'pthread_attr_t'
|-RecordDecl 0x562b149359a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562b14935b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562b14935b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562b14935c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562b14935be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562b14935a20 'struct __pthread_internal_list'
|     `-Record 0x562b149359a0 '__pthread_internal_list'
|-RecordDecl 0x562b14935cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x562b14935d58 parent 0x562b148bfe18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562b14935e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562b14935e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562b14935f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562b14935f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562b14935fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562b14936038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x562b1493a110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x562b1493a1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x562b1493a2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x562b1493a318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562b1493a4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x562b1493a440 'union pthread_mutex_t' sugar
|   `-RecordType 0x562b14935d30 'pthread_mutex_t'
|     `-Record 0x562b14935cb0 ''
|-RecordDecl 0x562b1493a510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x562b1493a650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562b1493a6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562b1493a770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x562b1493a710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x562b1493a590 'pthread_mutexattr_t'
|     `-Record 0x562b1493a510 ''
|-RecordDecl 0x562b1493a7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x562b1493a888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x562b1493a950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562b1493a9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x562b1493aa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x562b1493aa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x562b1493aaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x562b1493ab58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562b1493abc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562b1493ac28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562b1493ace0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_1/mix027_tso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_1/mix027_tso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x562b1493add0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x562b1493ae38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562b1493af70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562b1493af10 'union pthread_cond_t' sugar
|   `-RecordType 0x562b1493a860 'pthread_cond_t'
|     `-Record 0x562b1493a7e0 ''
|-RecordDecl 0x562b1493afe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x562b1493c130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562b1493c198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562b1493c250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562b1493c1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x562b1493b060 'pthread_condattr_t'
|     `-Record 0x562b1493afe0 ''
|-TypedefDecl 0x562b1493c2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562b148bffb0 'unsigned int'
|-TypedefDecl 0x562b1493c348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562b148bff10 'int'
|-RecordDecl 0x562b1493c3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x562b1493c448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x562b1493c510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562b1493c578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562b1493c5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562b1493c648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562b1493c6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562b1493c718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562b1493c780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562b1493c7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562b1493c850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562b1493c8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562b1493c920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562b1493c9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_1/mix027_tso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_1/mix027_tso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x562b1493ca78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562b1493cae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562b1493cc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562b1493cbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562b1493c420 'pthread_rwlock_t'
|     `-Record 0x562b1493c3a0 ''
|-RecordDecl 0x562b1493cca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x562b1493cde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562b1493ce48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562b1493cf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562b1493cea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562b1493cd20 'pthread_rwlockattr_t'
|     `-Record 0x562b1493cca0 ''
|-TypedefDecl 0x562b1493cf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562b148bff14 'volatile int' volatile
|   `-BuiltinType 0x562b148bff10 'int'
|-RecordDecl 0x562b1493cfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x562b1493e140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562b1493e1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562b1493e260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562b1493e200 'union pthread_barrier_t' sugar
|   `-RecordType 0x562b1493d060 'pthread_barrier_t'
|     `-Record 0x562b1493cfe0 ''
|-RecordDecl 0x562b1493e2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x562b1493e3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562b1493e438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562b1493e4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562b1493e490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562b1493e350 'pthread_barrierattr_t'
|     `-Record 0x562b1493e2d0 ''
|-TypedefDecl 0x562b1493e608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562b1493e5a0 'long [8]' 8 
|   `-BuiltinType 0x562b148bff30 'long'
|-EnumDecl 0x562b1493e660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x562b1493e728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562b1493e778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562b1493e7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x562b1493e898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562b1493e8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562b1493e938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562b1493e988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562b1493ea10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562b1493e9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x562b1493e9d8 <col:26> 'int' EnumConstant 0x562b1493e898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562b1493ea98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562b1493ea80 <col:29> 'int'
| |   `-DeclRefExpr 0x562b1493ea60 <col:29> 'int' EnumConstant 0x562b1493e8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562b1493eb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562b1493eb08 <col:30> 'int'
| |   `-DeclRefExpr 0x562b1493eae8 <col:30> 'int' EnumConstant 0x562b1493e938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562b1493eba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562b1493eb90 <col:27> 'int'
|     `-DeclRefExpr 0x562b1493eb70 <col:27> 'int' EnumConstant 0x562b1493ea10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562b1493ebf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x562b1493ecc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562b1493ed50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562b1493ed38 <col:30> 'int'
| |   `-DeclRefExpr 0x562b1493ed18 <col:30> 'int' EnumConstant 0x562b1493ecc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562b1493eda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562b1493ee28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562b1493ee10 <col:29> 'int'
|     `-DeclRefExpr 0x562b1493edf0 <col:29> 'int' EnumConstant 0x562b1493eda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562b1493ee78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x562b1493ef48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562b1493ef98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562b1493efe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562b1493f038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x562b1493f150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562b1493f1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562b1493f1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562b1493f278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562b1493f260 <col:31> 'int'
|     `-DeclRefExpr 0x562b1493f240 <col:31> 'int' EnumConstant 0x562b1493f150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562b1493f2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x562b1493f398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562b1493f3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562b1493f438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x562b1493f508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562b1493f558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562b1493f5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x562b1493f678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562b1493f6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562b1493f718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562b1493f958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562b1493f9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562b1493fa28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562b1493fb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562b1493fb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x562b1493fc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562b1493fcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562b1493fd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x562b1493fdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562b1493fe28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562b14940488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562b1493ff20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562b14940030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562b14940270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562b149402f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562b14940548 <col:47>
| |-NonNullAttr 0x562b149405a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x562b149405d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x562b14940700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562b14940630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562b14940958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562b149407b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562b14940838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562b14940b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562b14940a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562b14940bd0 <col:60>
|-FunctionDecl 0x562b14940d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562b14940dc0 <col:54>
| `-ConstAttr 0x562b14940e18 <col:95>
|-FunctionDecl 0x562b14940fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562b14940e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562b14940ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562b14941098 <line:394:19>
| `-ConstAttr 0x562b149410f0 <col:60>
|-FunctionDecl 0x562b14942b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562b149429d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562b14942bb0 <col:71>
| `-NonNullAttr 0x562b14942c08 <col:112, col:126> 1
|-FunctionDecl 0x562b14942d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562b14942c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562b14942db8 <line:397:22>
| `-NonNullAttr 0x562b14942e10 <col:63, col:77> 1
|-FunctionDecl 0x562b14943038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562b14942e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562b14942ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562b149430e8 <line:400:22>
| `-NonNullAttr 0x562b14943140 <col:63, col:80> 1 2
|-FunctionDecl 0x562b14943348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562b14943188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562b14943208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562b149433f8 <line:403:22>
| `-NonNullAttr 0x562b14943450 <col:63, col:77> 1
|-FunctionDecl 0x562b149436a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562b14943498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562b14943540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562b14943758 <line:406:22>
| `-NonNullAttr 0x562b149437b0 <col:63, col:80> 1 2
|-FunctionDecl 0x562b149449e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562b149437f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562b14943870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562b14944a98 <line:409:22>
| `-NonNullAttr 0x562b14944af0 <col:63, col:77> 1
|-FunctionDecl 0x562b14944d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562b14944b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562b14944bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562b14944dd8 <line:412:22>
| `-NonNullAttr 0x562b14944e30 <col:63, col:80> 1 2
|-FunctionDecl 0x562b14945068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562b14944e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562b14944f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562b14945118 <col:37>
| `-NonNullAttr 0x562b14945170 <col:78, col:95> 1 2
|-FunctionDecl 0x562b14945358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b149451b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562b14945238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562b14945408 <line:418:22>
| `-NonNullAttr 0x562b14945460 <col:63, col:80> 1 2
|-FunctionDecl 0x562b149455e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562b149454a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562b14945528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562b14945698 <line:420:22>
| `-NonNullAttr 0x562b149456f0 <col:63, col:77> 1
|-FunctionDecl 0x562b14945898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b14945738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562b149457b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562b14945948 <line:423:22>
| `-NonNullAttr 0x562b149459c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562b14945b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562b14945a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562b14945a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562b14945bf8 <line:426:22>
| `-NonNullAttr 0x562b14945c50 <col:63, col:77> 1
|-FunctionDecl 0x562b14945df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b14945c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562b14945d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562b14945ea8 <line:429:22>
| `-NonNullAttr 0x562b14945f00 <col:63, col:80> 1 2
|-FunctionDecl 0x562b14946088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562b14945f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562b14945fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562b14946138 <line:431:22>
| `-NonNullAttr 0x562b14946190 <col:63, col:77> 1
|-FunctionDecl 0x562b149463b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x562b149461d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562b14946258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562b14946468 <line:434:22>
| |-NonNullAttr 0x562b149464c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x562b149464f8 <col:100> "" ""
|-FunctionDecl 0x562b14946708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562b14946548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562b149465c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x562b149467b8 <line:437:22>
| |-NonNullAttr 0x562b14946810 <col:63, col:77> 1
| `-DeprecatedAttr 0x562b14946848 <col:97> "" ""
|-FunctionDecl 0x562b14946a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562b14946898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562b14946910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562b14946af8 <line:440:22>
| `-NonNullAttr 0x562b14946b50 <col:63, col:80> 1 2
|-FunctionDecl 0x562b14946cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562b14946b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562b14946c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562b14946d80 <line:443:22>
| `-NonNullAttr 0x562b14946dd8 <col:63, col:77> 1
|-FunctionDecl 0x562b149470c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562b14946e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562b14946ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562b14946f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562b14947180 <line:447:22>
| `-NonNullAttr 0x562b149471d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562b14947488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562b14947230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562b149472b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562b14947328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562b14947540 <col:43>
| `-NonNullAttr 0x562b14947598 <col:84, col:98> 1
|-FunctionDecl 0x562b14947858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562b149475e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562b14947668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x562b149476f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562b14947910 <line:452:22>
| `-NonNullAttr 0x562b14947968 <col:63, col:77> 3
|-FunctionDecl 0x562b14947c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562b149479e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562b14947a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562b14947af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562b14947d30 <line:456:22>
| `-NonNullAttr 0x562b14947d88 <col:63, col:80> 2 3
|-FunctionDecl 0x562b14947f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562b14947dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562b14947e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x562b14948028 <line:458:22>
|-FunctionDecl 0x562b149483f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x562b149480f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x562b14948290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x562b149484a8 <col:52, col:69> 1 2
|-FunctionDecl 0x562b14948650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x562b14948530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x562b149485b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x562b14948838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x562b14948718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x562b14948798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x562b149489f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x562b149488f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x562b14948b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x562b14948bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x562b14948c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x562b14948d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x562b14948dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x562b14948fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_1/mix027_tso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x562b14949098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x562b14949150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x562b149490f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x562b14948c50 '__pthread_unwind_buf_t'
| |   `-Record 0x562b14948bd0 ''
| `-AlignedAttr 0x562b149491a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x562b14949220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x562b14949380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x562b149493e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x562b14949450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x562b149494b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x562b149496c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562b149495b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562b14949808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562b14949778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562b14949a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562b149498c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x562b14949aa8 <line:487:22>
|-RecordDecl 0x562b14949b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x562b14949e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x562b14949c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x562b14949cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x562b14949ec8 <col:86>
| `-ReturnsTwiceAttr 0x562b14949f20 <col:12> Implicit
|-FunctionDecl 0x562b1494a248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562b14949ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x562b1494a100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x562b1494a2f8 <line:493:22>
| `-NonNullAttr 0x562b1494a350 <col:63, col:77> 1
|-FunctionDecl 0x562b1494a4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562b1494a398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562b1494a570 <line:495:22>
| `-NonNullAttr 0x562b1494a5c8 <col:63, col:77> 1
|-FunctionDecl 0x562b1494a6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562b1494a618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562b1494a778 <line:497:22>
| `-NonNullAttr 0x562b1494a7d0 <col:52, col:66> 1
|-FunctionDecl 0x562b1494a8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562b1494a818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562b1494a978 <line:499:22>
| `-NonNullAttr 0x562b1494a9d0 <col:52, col:66> 1
|-FunctionDecl 0x562b1494bc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562b1494ba38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562b1494bac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562b1494bcd8 <col:36>
| `-NonNullAttr 0x562b1494bd30 <col:66, col:83> 1 2
|-FunctionDecl 0x562b1494be30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562b1494bd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562b1494bed8 <line:504:22>
| `-NonNullAttr 0x562b1494bf30 <col:52, col:66> 1
|-FunctionDecl 0x562b1494c1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b1494bfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562b1494c060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562b1494c278 <line:508:22>
| `-NonNullAttr 0x562b1494c2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562b1494c598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562b1494c318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562b1494c398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562b1494c418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562b1494c650 <line:512:22>
| `-NonNullAttr 0x562b1494c6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x562b1494c7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562b1494c6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562b1494c858 <line:514:22>
| `-NonNullAttr 0x562b1494c8b0 <col:63, col:77> 1
|-FunctionDecl 0x562b1494cad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562b1494c960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562b1494cb80 <line:516:22>
| `-NonNullAttr 0x562b1494cbd8 <col:63, col:77> 1
|-FunctionDecl 0x562b1494cce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562b1494cc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562b1494cd88 <line:518:22>
| `-NonNullAttr 0x562b1494cde0 <col:63, col:77> 1
|-FunctionDecl 0x562b1494d008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b1494ce28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562b1494cea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562b1494d0b8 <line:522:22>
| `-NonNullAttr 0x562b1494d110 <col:63, col:80> 1 2
|-FunctionDecl 0x562b1494d318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562b1494d158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562b1494d1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562b1494d3c8 <line:525:22>
| `-NonNullAttr 0x562b1494d420 <col:63, col:77> 1
|-FunctionDecl 0x562b1494d5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b1494d468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562b1494d4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562b1494d678 <line:528:22>
| `-NonNullAttr 0x562b1494d6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562b1494d858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562b1494d718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562b1494d798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562b1494d908 <line:530:22>
| `-NonNullAttr 0x562b1494d960 <col:63, col:77> 1
|-FunctionDecl 0x562b1494db20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b1494d9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562b1494da40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562b1494dbd0 <line:534:22>
| `-NonNullAttr 0x562b1494dc28 <col:63, col:80> 1 2
|-FunctionDecl 0x562b1494ddb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562b1494dc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562b1494dcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x562b1494de68 <line:537:22>
| `-NonNullAttr 0x562b1494dec0 <col:63, col:77> 1
|-FunctionDecl 0x562b1494e068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b1494df08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562b1494df88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562b1494e118 <line:541:22>
| `-NonNullAttr 0x562b1494e170 <col:63, col:80> 1 2
|-FunctionDecl 0x562b1494e2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562b1494e1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562b1494e238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562b1494e3a8 <line:544:22>
| `-NonNullAttr 0x562b1494e400 <col:63, col:77> 1
|-FunctionDecl 0x562b1494e5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562b1494e448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562b1494e4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562b1494e698 <line:547:22>
| `-NonNullAttr 0x562b1494e6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x562b1494e878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562b1494e738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562b1494e7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562b1494e928 <line:550:22>
| `-NonNullAttr 0x562b1494e980 <col:63, col:77> 1
|-FunctionDecl 0x562b1494fcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562b1494faa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562b1494fbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562b1494fda8 <col:29>
| `-NonNullAttr 0x562b1494fe00 <col:70, col:84> 1
|-FunctionDecl 0x562b1494ff78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562b1494fe48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562b14950020 <line:555:22>
| `-NonNullAttr 0x562b14950078 <col:63, col:77> 1
|-FunctionDecl 0x562b14950180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562b149500c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562b14950228 <line:557:22>
| `-NonNullAttr 0x562b14950280 <col:52, col:66> 1
|-FunctionDecl 0x562b14950380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562b149502c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562b14950428 <line:559:19>
| `-NonNullAttr 0x562b14950480 <col:49, col:63> 1
|-FunctionDecl 0x562b149506b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562b149504c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562b14950558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562b14950768 <col:39>
| `-NonNullAttr 0x562b149507c0 <col:69, col:86> 1 2
|-FunctionDecl 0x562b149508c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562b14950808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562b14950968 <line:564:22>
| `-NonNullAttr 0x562b149509c0 <col:52, col:66> 1
|-FunctionDecl 0x562b14950b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562b14950a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562b14950bd0 <line:566:22>
| `-NonNullAttr 0x562b14950c28 <col:52, col:66> 1
|-FunctionDecl 0x562b14950de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562b14950c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562b14950d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562b14950e98 <col:39>
| `-NonNullAttr 0x562b14950ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x562b14950ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562b14950f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562b14951098 <line:571:22>
| `-NonNullAttr 0x562b149510f0 <col:52, col:66> 1
|-FunctionDecl 0x562b149512d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562b149511a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562b14951380 <line:573:22>
| `-NonNullAttr 0x562b149513d8 <col:63, col:77> 1
|-FunctionDecl 0x562b149514e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562b14951428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562b14951588 <line:575:22>
| `-NonNullAttr 0x562b149515e0 <col:63, col:77> 1
|-FunctionDecl 0x562b14951808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b14951628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562b149516a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562b149518b8 <line:579:22>
| `-NonNullAttr 0x562b14951910 <col:63, col:80> 1 2
|-FunctionDecl 0x562b14951b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562b14951958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562b149519d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562b14951be8 <line:582:22>
| `-NonNullAttr 0x562b14951c40 <col:63, col:77> 1
|-FunctionDecl 0x562b14951de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b14951c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562b14951d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562b14951e98 <line:586:22>
| `-NonNullAttr 0x562b14951ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x562b14952078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562b14951f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562b14951fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562b14952128 <col:36>
| `-NonNullAttr 0x562b14952180 <col:77, col:91> 1
|-FunctionDecl 0x562b149524b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562b14952260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562b14952370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562b14952568 <line:591:22>
| `-NonNullAttr 0x562b149525c0 <col:63, col:77> 1
|-FunctionDecl 0x562b14952738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562b14952608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562b149527e0 <line:593:22>
| `-NonNullAttr 0x562b14952838 <col:63, col:77> 1
|-FunctionDecl 0x562b14952940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562b14952888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562b149529e8 <line:595:22>
| `-NonNullAttr 0x562b14952a40 <col:52, col:66> 1
|-FunctionDecl 0x562b14952b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562b14952aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562b14952c00 <line:597:22>
| `-NonNullAttr 0x562b14952c58 <col:52, col:66> 1
|-FunctionDecl 0x562b14952e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562b14952ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562b14952d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562b14952f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x562b14953268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562b14952fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562b14953030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562b149530c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562b14953320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x562b14953538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562b14953400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562b149535e0 <line:606:22>
| `-NonNullAttr 0x562b14953638 <col:63, col:77> 1
|-FunctionDecl 0x562b14953740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562b14953688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562b149537e8 <line:608:22>
| `-NonNullAttr 0x562b14953840 <col:63, col:77> 1
|-FunctionDecl 0x562b14953aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b14953888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562b14953908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562b14953b50 <line:612:22>
| `-NonNullAttr 0x562b14953ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x562b14953db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562b14953bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562b14953c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562b14953e68 <col:37>
| `-NonNullAttr 0x562b14953ec0 <col:78, col:92> 1
|-FunctionDecl 0x562b149540d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562b14953f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562b14953fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562b14954188 <line:618:22>
| `-NonNullAttr 0x562b149541e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562b149543a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562b14954228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562b149542a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562b14954458 <line:621:22>
| `-NonNullAttr 0x562b149544b0 <col:63, col:77> 1
|-FunctionDecl 0x562b14954758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562b14954590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562b14954610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562b14954808 <line:623:22>
| `-NonNullAttr 0x562b14954860 <col:63, col:77> 1
|-FunctionDecl 0x562b149549d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562b149548a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562b14954ab0 <line:625:22>
| `-NonNullAttr 0x562b14954b08 <col:63, col:77> 1
|-FunctionDecl 0x562b14954c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562b14954b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562b14954cb8 <line:627:22>
| `-NonNullAttr 0x562b14954d10 <col:52, col:66> 1
|-FunctionDecl 0x562b14954e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562b14954d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562b14954eb8 <line:629:22>
| `-NonNullAttr 0x562b14954f10 <col:52, col:66> 1
|-FunctionDecl 0x562b14955010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562b14954f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562b149550b8 <line:631:22>
| `-NonNullAttr 0x562b14955110 <col:52, col:66> 1
|-FunctionDecl 0x562b149554e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562b149551f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562b14955300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562b14955380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x562b149555a0 <line:635:22>
| `-NonNullAttr 0x562b149555f8 <col:63, col:77> 1
|-FunctionDecl 0x562b14955778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562b14955648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562b14955820 <line:637:22>
| `-NonNullAttr 0x562b14955878 <col:63, col:77> 1
|-FunctionDecl 0x562b14955980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562b149558c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562b14955a28 <line:639:22>
| `-NonNullAttr 0x562b14955a80 <col:52, col:66> 1
|-FunctionDecl 0x562b14956c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562b14956b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562b14956d30 <line:641:22>
| `-NonNullAttr 0x562b14956d88 <col:63, col:77> 1
|-FunctionDecl 0x562b14956e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562b14956dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562b14956f38 <line:643:22>
| `-NonNullAttr 0x562b14956f90 <col:63, col:77> 1
|-FunctionDecl 0x562b149571b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562b14956fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562b14957058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562b14957268 <line:647:22>
| `-NonNullAttr 0x562b149572c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562b149574c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562b14957308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562b14957388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562b14957578 <line:650:22>
| `-NonNullAttr 0x562b149575d0 <col:63, col:77> 1
|-FunctionDecl 0x562b14957918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x562b149576b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x562b149577d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x562b149579c8 <line:653:22>
| `-NonNullAttr 0x562b14957a20 <col:63, col:77> 1
|-FunctionDecl 0x562b14957b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562b14957a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562b14957c30 <col:69>
|-FunctionDecl 0x562b14957da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562b14957c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562b14957e50 <col:72>
|-FunctionDecl 0x562b14958088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562b14957eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562b14957f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562b14958138 <col:44>
|-FunctionDecl 0x562b14958358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x562b149581a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562b14958218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562b14958408 <line:660:22>
| `-NonNullAttr 0x562b14958460 <col:63, col:77> 2
|-FunctionDecl 0x562b149588a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562b14958540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562b14958650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562b14958760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562b14958960 <col:47>
|-FunctionDecl 0x562b14958af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x562b149589d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562b14958c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562b14958bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562b14958da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x562b14958d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562b14958ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x562b14958e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562b14958fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562b14959080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562b14959140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x562b149591f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562b14959278 prev 0x562b149591f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x562b149592e0 <col:24> 'int' 0
|-VarDecl 0x562b14959318 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x562b14959398 prev 0x562b14959318 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x562b14959400 <col:27> 'int' 0
|-VarDecl 0x562b14959438 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x562b149594b8 prev 0x562b14959438 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x562b14959520 <col:27> 'int' 0
|-VarDecl 0x562b14959558 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x562b149595d8 prev 0x562b14959558 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x562b14959640 <col:27> 'int' 0
|-VarDecl 0x562b14959678 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x562b149596f8 prev 0x562b14959678 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x562b14959760 <col:9> 'int' 0
|-VarDecl 0x562b14959790 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562b14959808 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562b14959888 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x562b14959908 prev 0x562b14959888 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562b14959970 <col:9> 'int' 0
|-VarDecl 0x562b149599a0 <line:686:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x562b14959a20 <line:687:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x562b14959b00 <line:688:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x562b14959b78 <line:689:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x562b14959bf0 <line:690:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x562b14959c68 <line:691:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x562b14959ce0 <line:692:1, col:7> col:7 used x$r_buff0_thd4 '_Bool'
|-VarDecl 0x562b14959d58 <line:693:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x562b14959dd0 <line:694:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x562b14959e48 <line:695:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x562b14959ec0 <line:696:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x562b14959f38 <line:697:1, col:7> col:7 used x$r_buff1_thd4 '_Bool'
|-VarDecl 0x562b14959fb0 <line:698:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x562b1495a030 <line:699:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x562b1495a0b0 <line:700:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x562b1495a128 <line:701:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x562b1495a1a8 <line:702:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x562b1495a220 <line:703:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x562b1495a2a0 <line:704:1, col:5> col:5 used y 'int'
|-VarDecl 0x562b1495a320 prev 0x562b1495a2a0 <line:705:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562b1495a388 <col:9> 'int' 0
|-VarDecl 0x562b1495a3c0 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x562b1495a440 prev 0x562b1495a3c0 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x562b1495a4a8 <col:9> 'int' 0
|-VarDecl 0x562b1495a4d8 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562b1495a550 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562b1495a668 prev 0x562b14958af0 <line:710:1, line:729:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x562b1495a5d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562b1495b8f8 <line:711:1, line:729:1>
|   |-CallExpr 0x562b1495a778 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495a760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495a710 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495a7d8 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562b1495a798 <col:3> 'int' lvalue Var 0x562b149596f8 'a' 'int'
|   | `-IntegerLiteral 0x562b1495a7b8 <col:7> 'int' 1
|   |-CallExpr 0x562b1495a830 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495a818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495a7f8 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495a888 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495a870 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495a850 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495a8e8 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562b1495a8a8 <col:3> 'int' lvalue Var 0x562b14959908 'x' 'int'
|   | `-IntegerLiteral 0x562b1495a8c8 <col:7> 'int' 1
|   |-CallExpr 0x562b1495a940 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495a928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495a908 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495a998 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495a980 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495a960 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495ac98 <line:719:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562b1495a9b8 <col:3> 'int' lvalue Var 0x562b14959908 'x' 'int'
|   | `-ConditionalOperator 0x562b1495ac68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562b1495aa78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562b1495aa30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562b1495aa18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562b1495a9d8 <col:7> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562b1495aa60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562b1495aa48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562b1495a9f8 <col:25> '_Bool' lvalue Var 0x562b14959b78 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x562b1495ac50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562b1495aa98 <col:42> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x562b1495ac30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562b1495ac00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562b1495ab70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562b1495ab28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562b1495ab10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562b1495aab8 <col:55> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562b1495ab58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562b1495ab40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562b1495aad8 <col:73> '_Bool' lvalue Var 0x562b14959dd0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562b1495abd0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562b1495ab90 <col:90> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562b1495abe8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495abb0 <col:102> 'int' lvalue Var 0x562b14959908 'x' 'int'
|   |-BinaryOperator 0x562b1495aea0 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495acb8 <col:3> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495ae88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495ae58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562b1495ad78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562b1495ad30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562b1495ad18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562b1495acd8 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562b1495ad60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562b1495ad48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562b1495acf8 <col:38> '_Bool' lvalue Var 0x562b14959b78 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495ae10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495adc8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495ad98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495ae40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495ae28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495adf0 <col:66> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562b1495b188 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495aec0 <col:3> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495b170 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495b140 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562b1495b060 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562b1495af80 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562b1495af38 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562b1495af20 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562b1495aee0 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562b1495af68 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562b1495af50 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562b1495af00 <col:38> '_Bool' lvalue Var 0x562b14959b78 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562b1495b040 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562b1495aff8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562b1495afe0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562b1495afa0 <col:56> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562b1495b028 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562b1495b010 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562b1495afc0 <col:74> '_Bool' lvalue Var 0x562b14959dd0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495b0f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495b0b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495b080 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495b128 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495b110 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495b0d8 <col:102> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562b1495b390 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495b1a8 <col:3> '_Bool' lvalue Var 0x562b14959b78 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495b378 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495b348 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562b1495b268 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562b1495b220 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562b1495b208 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562b1495b1c8 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562b1495b250 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562b1495b238 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562b1495b1e8 <col:38> '_Bool' lvalue Var 0x562b14959b78 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495b300 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495b2b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495b288 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495b330 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495b318 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495b2e0 <col:66> '_Bool' lvalue Var 0x562b14959b78 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562b1495b678 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495b3b0 <col:3> '_Bool' lvalue Var 0x562b14959dd0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495b660 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495b630 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562b1495b550 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562b1495b470 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562b1495b428 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562b1495b410 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562b1495b3d0 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562b1495b458 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562b1495b440 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562b1495b3f0 <col:38> '_Bool' lvalue Var 0x562b14959b78 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562b1495b530 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562b1495b4e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562b1495b4d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562b1495b490 <col:56> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562b1495b518 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562b1495b500 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562b1495b4b0 <col:74> '_Bool' lvalue Var 0x562b14959dd0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495b5e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495b5a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495b570 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495b618 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495b600 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495b5c8 <col:102> '_Bool' lvalue Var 0x562b14959dd0 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x562b1495b6d0 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495b6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495b698 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495b728 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495b710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495b6f0 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495b7e0 <line:726:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562b1495b748 <col:3> 'int' lvalue Var 0x562b14959278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562b1495b7c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562b1495b7a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562b1495b768 <col:22> 'int' lvalue Var 0x562b14959278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562b1495b788 <col:41> 'int' 1
|   |-CallExpr 0x562b1495b838 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495b820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495b800 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562b1495b8e8 <line:728:3, col:36>
|     `-CallExpr 0x562b1495b8c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562b1495b8b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562b1495b858 <col:10> 'void *(void)' Function 0x562b148ff958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562b1495ba40 prev 0x562b14958c48 <line:730:1, line:759:1> line:730:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562b1495b9a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562b1495d2b0 <line:731:1, line:759:1>
|   |-CallExpr 0x562b1495bb38 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495bb20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495bae8 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495bbb0 <line:733:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562b1495bb58 <col:3> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562b1495bb98 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562b1495bb78 <col:15> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x562b1495bc10 <line:734:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562b1495bbd0 <col:3> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x562b1495bbf0 <col:15> 'int' 2
|   |-BinaryOperator 0x562b1495bc88 <line:735:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495bc30 <col:3> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495bc70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562b1495bc50 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562b1495bd20 <line:736:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495bca8 <col:3> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562b1495bcf8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562b1495bcc8 <col:27> 'int' 1
|   |-CallExpr 0x562b1495bea8 <line:737:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562b1495be90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562b1495bd40 <col:3> 'void (int)' Function 0x562b148ffbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562b1495be40 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562b1495be20 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562b1495be00 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562b1495bdb8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562b1495bda0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562b1495bd60 <col:23> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562b1495bde8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562b1495bdd0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562b1495bd80 <col:41> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562b1495bf28 <line:738:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495bed0 <col:3> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495bf10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562b1495bef0 <col:20> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562b1495bfa0 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495bf48 <col:3> '_Bool' lvalue Var 0x562b14959dd0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495bf88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562b1495bf68 <col:20> '_Bool' lvalue Var 0x562b14959b78 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562b1495c018 <line:740:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495bfc0 <col:3> '_Bool' lvalue Var 0x562b14959e48 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495c000 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562b1495bfe0 <col:20> '_Bool' lvalue Var 0x562b14959bf0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562b1495c090 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495c038 <col:3> '_Bool' lvalue Var 0x562b14959ec0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495c078 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562b1495c058 <col:20> '_Bool' lvalue Var 0x562b14959c68 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562b1495c108 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495c0b0 <col:3> '_Bool' lvalue Var 0x562b14959f38 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495c0f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562b1495c0d0 <col:20> '_Bool' lvalue Var 0x562b14959ce0 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562b1495c1a0 <line:743:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495c128 <col:3> '_Bool' lvalue Var 0x562b14959bf0 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x562b1495c178 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562b1495c148 <col:27> 'int' 1
|   |-CallExpr 0x562b1495c1f8 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495c1e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495c1c0 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495c250 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495c238 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495c218 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495c2c8 <line:746:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562b1495c270 <col:3> 'int' lvalue Var 0x562b14959398 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562b1495c2b0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562b1495c290 <col:25> 'int' lvalue Var 0x562b1495a320 'y' 'int'
|   |-CallExpr 0x562b1495c320 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495c308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495c2e8 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495c378 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495c360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495c340 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495c660 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562b1495c398 <col:3> 'int' lvalue Var 0x562b14959908 'x' 'int'
|   | `-ConditionalOperator 0x562b1495c630 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562b1495c458 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562b1495c410 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562b1495c3f8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562b1495c3b8 <col:7> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562b1495c440 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562b1495c428 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562b1495c3d8 <col:25> '_Bool' lvalue Var 0x562b14959bf0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562b1495c618 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562b1495c478 <col:42> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x562b1495c5f8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562b1495c5c8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562b1495c538 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562b1495c4f0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562b1495c4d8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562b1495c498 <col:55> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562b1495c520 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562b1495c508 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562b1495c4b8 <col:73> '_Bool' lvalue Var 0x562b14959e48 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562b1495c598 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562b1495c558 <col:90> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562b1495c5b0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495c578 <col:102> 'int' lvalue Var 0x562b14959908 'x' 'int'
|   |-BinaryOperator 0x562b1495c868 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495c680 <col:3> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495c850 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495c820 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562b1495c740 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562b1495c6f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562b1495c6e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562b1495c6a0 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562b1495c728 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562b1495c710 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562b1495c6c0 <col:38> '_Bool' lvalue Var 0x562b14959bf0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495c7d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495c790 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495c760 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495c808 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495c7f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495c7b8 <col:66> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562b1495cb78 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495c888 <col:3> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495cb60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495cb30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562b1495ca28 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562b1495c948 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562b1495c900 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562b1495c8e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562b1495c8a8 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562b1495c930 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562b1495c918 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562b1495c8c8 <col:38> '_Bool' lvalue Var 0x562b14959bf0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562b1495ca08 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562b1495c9c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562b1495c9a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562b1495c968 <col:56> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562b1495c9f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562b1495c9d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562b1495c988 <col:74> '_Bool' lvalue Var 0x562b14959e48 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495cac0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495ca78 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495ca48 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495caf0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495cad8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495caa0 <col:102> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562b1495cd80 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495cb98 <col:3> '_Bool' lvalue Var 0x562b14959bf0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495cd68 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495cd38 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562b1495cc58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562b1495cc10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562b1495cbf8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562b1495cbb8 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562b1495cc40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562b1495cc28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562b1495cbd8 <col:38> '_Bool' lvalue Var 0x562b14959bf0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495ccf0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495cca8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495cc78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495cd20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495cd08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495ccd0 <col:66> '_Bool' lvalue Var 0x562b14959bf0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562b1495d068 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495cda0 <col:3> '_Bool' lvalue Var 0x562b14959e48 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495d050 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495d020 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562b1495cf40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562b1495ce60 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562b1495ce18 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562b1495ce00 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562b1495cdc0 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562b1495ce48 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562b1495ce30 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562b1495cde0 <col:38> '_Bool' lvalue Var 0x562b14959bf0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562b1495cf20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562b1495ced8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562b1495cec0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562b1495ce80 <col:56> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562b1495cf08 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562b1495cef0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562b1495cea0 <col:74> '_Bool' lvalue Var 0x562b14959e48 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495cfd8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495cf90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495cf60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495d008 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495cff0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495cfb8 <col:102> '_Bool' lvalue Var 0x562b14959e48 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x562b1495d0c0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495d0a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495d088 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495d118 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495d100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495d0e0 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495d1d0 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562b1495d138 <col:3> 'int' lvalue Var 0x562b14959278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562b1495d1b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562b1495d198 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562b1495d158 <col:22> 'int' lvalue Var 0x562b14959278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562b1495d178 <col:41> 'int' 1
|   |-CallExpr 0x562b1495d228 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495d210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495d1f0 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562b1495d2a0 <line:758:3, col:36>
|     `-CallExpr 0x562b1495d280 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562b1495d268 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562b1495d248 <col:10> 'void *(void)' Function 0x562b148ff958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562b1495d448 prev 0x562b14958da0 <line:760:1, line:779:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x562b1495d3b0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562b1495e668 <line:761:1, line:779:1>
|   |-CallExpr 0x562b1495d528 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495d510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495d4f0 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495d588 <line:763:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562b1495d548 <col:3> 'int' lvalue Var 0x562b1495a320 'y' 'int'
|   | `-IntegerLiteral 0x562b1495d568 <col:7> 'int' 1
|   |-CallExpr 0x562b1495d5e0 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495d5c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495d5a8 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495d638 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495d620 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495d600 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495d698 <line:766:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562b1495d658 <col:3> 'int' lvalue Var 0x562b1495a440 'z' 'int'
|   | `-IntegerLiteral 0x562b1495d678 <col:7> 'int' 1
|   |-CallExpr 0x562b1495d6f0 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495d6d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495d6b8 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495d748 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495d730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495d710 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495da30 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562b1495d768 <col:3> 'int' lvalue Var 0x562b14959908 'x' 'int'
|   | `-ConditionalOperator 0x562b1495da00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562b1495d828 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562b1495d7e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562b1495d7c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562b1495d788 <col:7> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562b1495d810 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562b1495d7f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562b1495d7a8 <col:25> '_Bool' lvalue Var 0x562b14959c68 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562b1495d9e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562b1495d848 <col:42> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x562b1495d9c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562b1495d998 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562b1495d908 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562b1495d8c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562b1495d8a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562b1495d868 <col:55> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562b1495d8f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562b1495d8d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562b1495d888 <col:73> '_Bool' lvalue Var 0x562b14959ec0 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562b1495d968 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562b1495d928 <col:90> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562b1495d980 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495d948 <col:102> 'int' lvalue Var 0x562b14959908 'x' 'int'
|   |-BinaryOperator 0x562b1495dc48 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495da50 <col:3> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495dc30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495dc00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562b1495db10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562b1495dac8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562b1495dab0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562b1495da70 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562b1495daf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562b1495dae0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562b1495da90 <col:38> '_Bool' lvalue Var 0x562b14959c68 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495dbb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495db70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495db40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495dbe8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495dbd0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495db98 <col:66> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562b1495df30 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495dc68 <col:3> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495df18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495dee8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562b1495de08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562b1495dd28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562b1495dce0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562b1495dcc8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562b1495dc88 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562b1495dd10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562b1495dcf8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562b1495dca8 <col:38> '_Bool' lvalue Var 0x562b14959c68 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562b1495dde8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562b1495dda0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562b1495dd88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562b1495dd48 <col:56> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562b1495ddd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562b1495ddb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562b1495dd68 <col:74> '_Bool' lvalue Var 0x562b14959ec0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495dea0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495de58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495de28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495ded0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495deb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495de80 <col:102> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562b1495e138 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495df50 <col:3> '_Bool' lvalue Var 0x562b14959c68 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495e120 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495e0f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562b1495e010 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562b1495dfc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562b1495dfb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562b1495df70 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562b1495dff8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562b1495dfe0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562b1495df90 <col:38> '_Bool' lvalue Var 0x562b14959c68 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495e0a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495e060 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495e030 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495e0d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495e0c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495e088 <col:66> '_Bool' lvalue Var 0x562b14959c68 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562b1495e420 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495e158 <col:3> '_Bool' lvalue Var 0x562b14959ec0 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495e408 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495e3d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562b1495e2f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562b1495e218 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562b1495e1d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562b1495e1b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562b1495e178 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562b1495e200 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562b1495e1e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562b1495e198 <col:38> '_Bool' lvalue Var 0x562b14959c68 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562b1495e2d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562b1495e290 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562b1495e278 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562b1495e238 <col:56> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562b1495e2c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562b1495e2a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562b1495e258 <col:74> '_Bool' lvalue Var 0x562b14959ec0 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495e390 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495e348 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495e318 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495e3c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495e3a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495e370 <col:102> '_Bool' lvalue Var 0x562b14959ec0 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x562b1495e478 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495e460 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495e440 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495e4d0 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495e4b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495e498 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495e588 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562b1495e4f0 <col:3> 'int' lvalue Var 0x562b14959278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562b1495e568 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562b1495e550 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562b1495e510 <col:22> 'int' lvalue Var 0x562b14959278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562b1495e530 <col:41> 'int' 1
|   |-CallExpr 0x562b1495e5e0 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495e5c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495e5a8 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562b1495e658 <line:778:3, col:36>
|     `-CallExpr 0x562b1495e638 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562b1495e620 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562b1495e600 <col:10> 'void *(void)' Function 0x562b148ff958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562b1495e7b0 prev 0x562b14958ef8 <line:780:1, line:802:1> line:780:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x562b1495e718 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562b1495fb60 <line:781:1, line:802:1>
|   |-CallExpr 0x562b1495e890 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495e878 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495e858 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495e8f0 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562b1495e8b0 <col:3> 'int' lvalue Var 0x562b1495a440 'z' 'int'
|   | `-IntegerLiteral 0x562b1495e8d0 <col:7> 'int' 2
|   |-CallExpr 0x562b1495e948 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495e930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495e910 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495e9a0 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495e988 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495e968 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495ea18 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562b1495e9c0 <col:3> 'int' lvalue Var 0x562b149594b8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x562b1495ea00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562b1495e9e0 <col:25> 'int' lvalue Var 0x562b1495a440 'z' 'int'
|   |-CallExpr 0x562b1495ea70 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495ea58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495ea38 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495eac8 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495eab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495ea90 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495eb50 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562b1495eae8 <col:3> 'int' lvalue Var 0x562b149595d8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x562b1495eb28 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562b1495eb08 <col:25> 'int' lvalue Var 0x562b149596f8 'a' 'int'
|   |-CallExpr 0x562b1495eba8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495eb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495eb70 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495ec00 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495ebe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495ebc8 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495eee8 <line:792:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562b1495ec20 <col:3> 'int' lvalue Var 0x562b14959908 'x' 'int'
|   | `-ConditionalOperator 0x562b1495eeb8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562b1495ece0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562b1495ec98 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562b1495ec80 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562b1495ec40 <col:7> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562b1495ecc8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562b1495ecb0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562b1495ec60 <col:25> '_Bool' lvalue Var 0x562b14959ce0 'x$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x562b1495eea0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562b1495ed00 <col:42> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x562b1495ee80 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562b1495ee50 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562b1495edc0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562b1495ed78 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562b1495ed60 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562b1495ed20 <col:55> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562b1495eda8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562b1495ed90 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562b1495ed40 <col:73> '_Bool' lvalue Var 0x562b14959f38 'x$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x562b1495ee20 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562b1495ede0 <col:90> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562b1495ee38 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495ee00 <col:102> 'int' lvalue Var 0x562b14959908 'x' 'int'
|   |-BinaryOperator 0x562b1495f0f0 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495ef08 <col:3> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495f0d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495f0a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562b1495efc8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562b1495ef80 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562b1495ef68 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562b1495ef28 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562b1495efb0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562b1495ef98 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562b1495ef48 <col:38> '_Bool' lvalue Var 0x562b14959ce0 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495f060 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495f018 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495efe8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495f090 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495f078 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495f040 <col:66> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562b1495f3d8 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495f110 <col:3> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495f3c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495f390 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562b1495f2b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562b1495f1d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562b1495f188 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562b1495f170 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562b1495f130 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562b1495f1b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562b1495f1a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562b1495f150 <col:38> '_Bool' lvalue Var 0x562b14959ce0 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x562b1495f290 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562b1495f248 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562b1495f230 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562b1495f1f0 <col:56> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562b1495f278 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562b1495f260 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562b1495f210 <col:74> '_Bool' lvalue Var 0x562b14959f38 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495f348 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495f300 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495f2d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495f378 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495f360 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495f328 <col:102> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562b1495f5e0 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495f3f8 <col:3> '_Bool' lvalue Var 0x562b14959ce0 'x$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495f5c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495f598 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562b1495f4b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562b1495f470 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562b1495f458 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562b1495f418 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562b1495f4a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562b1495f488 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562b1495f438 <col:38> '_Bool' lvalue Var 0x562b14959ce0 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495f550 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495f508 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495f4d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495f580 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495f568 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495f530 <col:66> '_Bool' lvalue Var 0x562b14959ce0 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x562b1495f8c8 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562b1495f600 <col:3> '_Bool' lvalue Var 0x562b14959f38 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x562b1495f8b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562b1495f880 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562b1495f7a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562b1495f6c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562b1495f678 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562b1495f660 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562b1495f620 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562b1495f6a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562b1495f690 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562b1495f640 <col:38> '_Bool' lvalue Var 0x562b14959ce0 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x562b1495f780 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562b1495f738 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562b1495f720 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562b1495f6e0 <col:56> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562b1495f768 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562b1495f750 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562b1495f700 <col:74> '_Bool' lvalue Var 0x562b14959f38 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x562b1495f838 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562b1495f7f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562b1495f7c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562b1495f868 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562b1495f850 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562b1495f818 <col:102> '_Bool' lvalue Var 0x562b14959f38 'x$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x562b1495f920 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495f908 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495f8e8 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562b1495f978 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562b1495f960 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495f940 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562b1495fa30 <line:799:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562b1495f998 <col:3> 'int' lvalue Var 0x562b14959278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562b1495fa10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562b1495f9f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562b1495f9b8 <col:22> 'int' lvalue Var 0x562b14959278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562b1495f9d8 <col:41> 'int' 1
|   |-CallExpr 0x562b1495fa88 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562b1495fa70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562b1495fa50 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562b1495fb00 <line:801:3, col:36>
|     `-CallExpr 0x562b1495fae0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562b1495fac8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562b1495faa8 <col:10> 'void *(void)' Function 0x562b148ff958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562b1495fc30 prev 0x562b14958fc0 <line:803:1, line:805:1> line:803:6 fence 'void ()'
| `-CompoundStmt 0x562b1495fcd0 <line:804:1, line:805:1>
|-FunctionDecl 0x562b1495fd00 prev 0x562b14959080 <line:806:1, line:808:1> line:806:6 isync 'void ()'
| `-CompoundStmt 0x562b1495fda0 <line:807:1, line:808:1>
|-FunctionDecl 0x562b1495fdd0 prev 0x562b14959140 <line:809:1, line:811:1> line:809:6 lwfence 'void ()'
| `-CompoundStmt 0x562b1495fe70 <line:810:1, line:811:1>
`-FunctionDecl 0x562b1495fed8 <line:812:1, line:851:1> line:812:5 main 'int ()'
  `-CompoundStmt 0x562b14964850 <line:813:1, line:851:1>
    |-DeclStmt 0x562b1495fff0 <line:814:3, col:17>
    | `-VarDecl 0x562b1495ff88 <col:3, col:13> col:13 used t743 'pthread_t':'unsigned long'
    |-CallExpr 0x562b149601f8 <line:815:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562b149601e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562b14960008 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562b14940488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562b14960048 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562b14960028 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562b1495ff88 't743' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562b14960238 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562b149600c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562b14960098 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562b14960060 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562b14960250 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562b149600e0 <col:38> 'void *(void *)' Function 0x562b1495a668 'P0' 'void *(void *)'
    | `-ParenExpr 0x562b14960160 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562b14960138 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562b14960100 <col:51> 'int' 0
    |-DeclStmt 0x562b149602e0 <line:816:3, col:17>
    | `-VarDecl 0x562b14960278 <col:3, col:13> col:13 used t744 'pthread_t':'unsigned long'
    |-CallExpr 0x562b14960488 <line:817:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562b14960470 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562b149602f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562b14940488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562b14960338 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562b14960318 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562b14960278 't744' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562b149604c8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562b149603b0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562b14960388 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562b14960350 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562b149604e0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562b149603d0 <col:38> 'void *(void *)' Function 0x562b1495ba40 'P1' 'void *(void *)'
    | `-ParenExpr 0x562b14960450 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562b14960428 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562b149603f0 <col:51> 'int' 0
    |-DeclStmt 0x562b14960570 <line:818:3, col:17>
    | `-VarDecl 0x562b14960508 <col:3, col:13> col:13 used t745 'pthread_t':'unsigned long'
    |-CallExpr 0x562b14960718 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562b14960700 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562b14960588 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562b14940488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562b149605c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562b149605a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562b14960508 't745' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562b14960758 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562b14960640 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562b14960618 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562b149605e0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562b14960770 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562b14960660 <col:38> 'void *(void *)' Function 0x562b1495d448 'P2' 'void *(void *)'
    | `-ParenExpr 0x562b149606e0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562b149606b8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562b14960680 <col:51> 'int' 0
    |-DeclStmt 0x562b14960800 <line:820:3, col:17>
    | `-VarDecl 0x562b14960798 <col:3, col:13> col:13 used t746 'pthread_t':'unsigned long'
    |-CallExpr 0x562b149609a8 <line:821:3, col:53> 'int'
    | |-ImplicitCastExpr 0x562b14960990 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562b14960818 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562b14940488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562b14960858 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562b14960838 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562b14960798 't746' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562b149609e8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562b149608d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x562b149608a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562b14960870 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x562b14960a00 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562b149608f0 <col:38> 'void *(void *)' Function 0x562b1495e7b0 'P3' 'void *(void *)'
    | `-ParenExpr 0x562b14960970 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x562b14960948 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562b14960910 <col:51> 'int' 0
    |-CallExpr 0x562b14960a50 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562b14960a38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562b14960a18 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562b14960b20 <line:823:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562b14960a70 <col:3> '_Bool' lvalue Var 0x562b14959790 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562b14960b08 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562b14960ae8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562b14960ad0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562b14960a90 <col:21> 'int' lvalue Var 0x562b14959278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562b14960ab0 <col:41> 'int' 4
    |-CallExpr 0x562b14960b88 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562b14960b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562b14960b40 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562b14960c00 <line:825:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562b14960be8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562b14960ba8 <col:3> 'void (int)' Function 0x562b148ff790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562b14960c40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562b14960c28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562b14960bc8 <col:21> '_Bool' lvalue Var 0x562b14959790 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562b14960c90 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562b14960c78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562b14960c58 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562b14960f78 <line:827:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562b14960cb0 <col:3> 'int' lvalue Var 0x562b14959908 'x' 'int'
    | `-ConditionalOperator 0x562b14960f48 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562b14960d70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562b14960d28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562b14960d10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562b14960cd0 <col:7> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562b14960d58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562b14960d40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562b14960cf0 <col:25> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562b14960f30 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562b14960d90 <col:42> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x562b14960f10 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562b14960ee0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562b14960e50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562b14960e08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562b14960df0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562b14960db0 <col:55> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562b14960e38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562b14960e20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562b14960dd0 <col:73> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562b14960eb0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562b14960e70 <col:90> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562b14960ec8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562b14960e90 <col:102> 'int' lvalue Var 0x562b14959908 'x' 'int'
    |-BinaryOperator 0x562b14961180 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562b14960f98 <col:3> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562b14961168 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562b14961138 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562b14961058 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562b14961010 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562b14960ff8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562b14960fb8 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562b14961040 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562b14961028 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562b14960fd8 <col:38> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562b149610f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562b149610a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562b14961078 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562b14961120 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562b14961108 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562b149610d0 <col:66> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562b14961468 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562b149611a0 <col:3> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562b14961450 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562b14961420 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562b14961340 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562b14961260 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562b14961218 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562b14961200 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562b149611c0 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562b14961248 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562b14961230 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562b149611e0 <col:38> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562b14961320 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562b149612d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562b149612c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562b14961280 <col:56> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562b14961308 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562b149612f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562b149612a0 <col:74> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562b149613d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562b14961390 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562b14961360 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562b14961408 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562b149613f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562b149613b8 <col:102> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562b14961670 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562b14961488 <col:3> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562b14961658 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562b14961628 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562b14961548 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562b14961500 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562b149614e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562b149614a8 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562b14961530 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562b14961518 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562b149614c8 <col:38> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562b149615e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562b14961598 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562b14961568 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562b14961610 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562b149615f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562b149615c0 <col:66> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562b14961958 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562b14961690 <col:3> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562b14961940 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562b14961910 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562b14961830 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562b14961750 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562b14961708 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562b149616f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562b149616b0 <col:20> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562b14961738 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562b14961720 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562b149616d0 <col:38> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562b14961810 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562b149617c8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562b149617b0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562b14961770 <col:56> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562b149617f8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562b149617e0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562b14961790 <col:74> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562b149618c8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562b14961880 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562b14961850 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562b149618f8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562b149618e0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562b149618a8 <col:102> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562b149619b0 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562b14961998 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562b14961978 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562b14961a08 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562b149619f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562b149619d0 <col:3> 'void ()' Function 0x562b148ffe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562b14961ab8 <line:834:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x562b14961a28 <col:3> '_Bool' lvalue Var 0x562b1495a4d8 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x562b14961aa0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x562b14961a80 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x562b14961a68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x562b14961a48 <col:19> 'void *(void)' Function 0x562b148ff958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x562b14961b80 <line:835:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x562b14961ad8 <col:3> '_Bool' lvalue Var 0x562b1495a550 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x562b14961b50 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x562b14961b30 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x562b14961b18 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x562b14961af8 <col:19> 'void *(void)' Function 0x562b148ff958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x562b14961bf8 <line:836:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x562b14961ba0 <col:3> '_Bool' lvalue Var 0x562b149599a0 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x562b14961be0 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x562b14961bc0 <col:21> '_Bool' lvalue Var 0x562b1495a550 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x562b14961c70 <line:837:3, col:15> 'int' '='
    | |-DeclRefExpr 0x562b14961c18 <col:3> 'int' lvalue Var 0x562b14959a20 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x562b14961c58 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x562b14961c38 <col:15> 'int' lvalue Var 0x562b14959908 'x' 'int'
    |-BinaryOperator 0x562b149620a8 <line:838:3, col:162> 'int' '='
    | |-DeclRefExpr 0x562b14961c90 <col:3> 'int' lvalue Var 0x562b14959908 'x' 'int'
    | `-ConditionalOperator 0x562b14962078 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x562b14961ea0 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x562b14961dc0 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x562b14961ce8 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x562b14961cd0 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x562b14961cb0 <col:8> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x562b14961da0 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x562b14961d38 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x562b14961d20 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x562b14961d00 <col:27> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x562b14961d88 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x562b14961d70 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x562b14961d50 <col:46> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x562b14961e80 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x562b14961e18 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x562b14961e00 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x562b14961de0 <col:65> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x562b14961e68 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x562b14961e50 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x562b14961e30 <col:84> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562b14962060 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562b14961ec0 <col:101> 'int' lvalue Var 0x562b14959908 'x' 'int'
    |   `-ParenExpr 0x562b14962040 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x562b14962010 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x562b14961f80 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562b14961f38 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562b14961f20 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562b14961ee0 <col:106> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562b14961f68 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562b14961f50 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562b14961f00 <col:124> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562b14961fe0 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562b14961fa0 <col:141> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x562b14961ff8 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562b14961fc0 <col:153> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
    |-BinaryOperator 0x562b149625b8 <line:839:3, col:208> 'int' '='
    | |-DeclRefExpr 0x562b149620c8 <col:3> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x562b14962588 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x562b14962558 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x562b14962540 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x562b149620e8 <col:15> '_Bool' lvalue Var 0x562b1495a550 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x562b14962570 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562b14962108 <col:31> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x562b14962520 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x562b149624f0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x562b14962318 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x562b14962238 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x562b14962160 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x562b14962148 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x562b14962128 <col:45> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x562b14962218 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x562b149621b0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x562b14962198 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x562b14962178 <col:64> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x562b14962200 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x562b149621e8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x562b149621c8 <col:83> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x562b149622f8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x562b14962290 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x562b14962278 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x562b14962258 <col:102> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x562b149622e0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x562b149622c8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x562b149622a8 <col:121> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562b149624d8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562b14962338 <col:138> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
    |       `-ParenExpr 0x562b149624b8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x562b14962488 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x562b149623f8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x562b149623b0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x562b14962398 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x562b14962358 <col:151> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x562b149623e0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x562b149623c8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x562b14962378 <col:169> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x562b14962458 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562b14962418 <col:186> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x562b14962470 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x562b14962438 <col:198> 'int' lvalue Var 0x562b1495a0b0 'x$w_buff0' 'int'
    |-BinaryOperator 0x562b14962ac8 <line:840:3, col:208> 'int' '='
    | |-DeclRefExpr 0x562b149625d8 <col:3> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x562b14962a98 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x562b14962a68 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x562b14962a50 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x562b149625f8 <col:15> '_Bool' lvalue Var 0x562b1495a550 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x562b14962a80 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562b14962618 <col:31> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x562b14962a30 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x562b14962a00 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x562b14962828 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x562b14962748 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x562b14962670 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x562b14962658 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x562b14962638 <col:45> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x562b14962728 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x562b149626c0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x562b149626a8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x562b14962688 <col:64> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x562b14962710 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x562b149626f8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x562b149626d8 <col:83> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x562b14962808 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x562b149627a0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x562b14962788 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x562b14962768 <col:102> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x562b149627f0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x562b149627d8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x562b149627b8 <col:121> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562b149629e8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562b14962848 <col:138> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x562b149629c8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x562b14962998 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x562b14962908 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x562b149628c0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x562b149628a8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x562b14962868 <col:151> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x562b149628f0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x562b149628d8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x562b14962888 <col:169> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x562b14962968 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562b14962928 <col:186> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x562b14962980 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x562b14962948 <col:198> 'int' lvalue Var 0x562b1495a1a8 'x$w_buff1' 'int'
    |-BinaryOperator 0x562b14963080 <line:841:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x562b14962ae8 <col:3> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562b14963068 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562b14963038 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x562b14962ff0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562b14962fd8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562b14962b08 <col:20> '_Bool' lvalue Var 0x562b1495a550 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562b14963020 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562b14963008 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562b14962b28 <col:36> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x562b14962fb8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x562b14962f88 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x562b14962d48 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562b14962c68 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562b14962b90 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562b14962b68 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562b14962b48 <col:55> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562b14962c48 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562b14962be0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562b14962bc8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562b14962ba8 <col:74> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562b14962c30 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562b14962c18 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562b14962bf8 <col:93> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562b14962d28 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562b14962cc0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562b14962ca8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562b14962c88 <col:112> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562b14962d10 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562b14962cf8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562b14962cd8 <col:131> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562b14962f70 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562b14962f58 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562b14962d68 <col:148> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x562b14962f38 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x562b14962f08 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x562b14962e28 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562b14962de0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562b14962dc8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562b14962d88 <col:166> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562b14962e10 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562b14962df8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562b14962da8 <col:184> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562b14962ec0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562b14962e78 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562b14962e48 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562b14962ef0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x562b14962ed8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x562b14962ea0 <col:212> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562b14963648 <line:842:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x562b149630a0 <col:3> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562b14963630 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562b14963600 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x562b149635b8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562b149635a0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562b149630c0 <col:20> '_Bool' lvalue Var 0x562b1495a550 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562b149635e8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562b149635d0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562b149630e0 <col:36> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x562b14963580 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x562b14963550 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x562b149632f0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562b14963210 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562b14963138 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562b14963120 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562b14963100 <col:55> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562b149631f0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562b14963188 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562b14963170 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562b14963150 <col:74> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562b149631d8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562b149631c0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562b149631a0 <col:93> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562b149632d0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562b14963268 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562b14963250 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562b14963230 <col:112> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562b149632b8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562b149632a0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562b14963280 <col:131> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562b14963538 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562b14963520 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562b14963310 <col:148> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x562b14963500 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x562b149634d0 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x562b149633d0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562b14963388 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562b14963370 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562b14963330 <col:166> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562b149633b8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562b149633a0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562b14963350 <col:184> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562b149634a0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562b14963420 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562b149633f0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562b149634b8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x562b14963478 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x562b14963448 <col:219> 'int' 0
    |-BinaryOperator 0x562b14963c00 <line:843:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x562b14963668 <col:3> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562b14963be8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562b14963bb8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x562b14963b60 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562b14963b48 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562b14963688 <col:20> '_Bool' lvalue Var 0x562b1495a550 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562b14963ba0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562b14963b78 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562b149636a8 <col:36> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x562b14963b28 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x562b14963af8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x562b149638b8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562b149637d8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562b14963700 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562b149636e8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562b149636c8 <col:55> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562b149637b8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562b14963750 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562b14963738 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562b14963718 <col:74> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562b149637a0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562b14963788 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562b14963768 <col:93> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562b14963898 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562b14963830 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562b14963818 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562b149637f8 <col:112> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562b14963880 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562b14963868 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562b14963848 <col:131> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562b14963ae0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562b14963ac8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562b149638d8 <col:148> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x562b14963aa8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x562b14963a78 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x562b14963998 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562b14963950 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562b14963938 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562b149638f8 <col:166> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562b14963980 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562b14963968 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562b14963918 <col:184> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562b14963a30 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562b149639e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562b149639b8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562b14963a60 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x562b14963a48 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x562b14963a10 <col:212> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562b149641c8 <line:844:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x562b14963c20 <col:3> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562b149641b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562b14964180 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x562b14964138 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562b14964120 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562b14963c40 <col:20> '_Bool' lvalue Var 0x562b1495a550 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562b14964168 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562b14964150 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562b14963c60 <col:36> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x562b14964100 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x562b149640d0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x562b14963e70 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562b14963d90 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562b14963cb8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562b14963ca0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562b14963c80 <col:55> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562b14963d70 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562b14963d08 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562b14963cf0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562b14963cd0 <col:74> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562b14963d58 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562b14963d40 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562b14963d20 <col:93> '_Bool' lvalue Var 0x562b1495a220 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562b14963e50 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562b14963de8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562b14963dd0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562b14963db0 <col:112> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562b14963e38 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562b14963e20 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562b14963e00 <col:131> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562b149640b8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562b149640a0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562b14963e90 <col:148> '_Bool' lvalue Var 0x562b14959d58 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x562b14964080 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x562b14964050 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x562b14963f50 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562b14963f08 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562b14963ef0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562b14963eb0 <col:166> '_Bool' lvalue Var 0x562b1495a128 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562b14963f38 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562b14963f20 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562b14963ed0 <col:184> '_Bool' lvalue Var 0x562b14959b00 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562b14964020 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562b14963fa0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562b14963f70 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562b14964038 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x562b14963ff8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x562b14963fc8 <col:219> 'int' 0
    |-BinaryOperator 0x562b14964530 <line:845:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x562b149641e8 <col:3> '_Bool' lvalue Var 0x562b14959808 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562b14964518 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562b14964500 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562b149644e0 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x562b149644c0 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x562b14964428 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x562b14964390 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x562b149642f8 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x562b14964260 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x562b14964248 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x562b14964208 <col:23> 'int' lvalue Var 0x562b14959908 'x' 'int'
    |         | | | | `-IntegerLiteral 0x562b14964228 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x562b149642d8 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x562b149642c0 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x562b14964280 <col:33> 'int' lvalue Var 0x562b1495a440 'z' 'int'
    |         | | |   `-IntegerLiteral 0x562b149642a0 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x562b14964370 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x562b14964358 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x562b14964318 <col:43> 'int' lvalue Var 0x562b14959398 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x562b14964338 <col:66> 'int' 0
    |         | `-BinaryOperator 0x562b14964408 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562b149643f0 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562b149643b0 <col:71> 'int' lvalue Var 0x562b149594b8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x562b149643d0 <col:94> 'int' 2
    |         `-BinaryOperator 0x562b149644a0 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x562b14964488 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562b14964448 <col:99> 'int' lvalue Var 0x562b149595d8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x562b14964468 <col:122> 'int' 0
    |-BinaryOperator 0x562b14964660 <line:846:3, col:37> 'int' '='
    | |-DeclRefExpr 0x562b14964550 <col:3> 'int' lvalue Var 0x562b14959908 'x' 'int'
    | `-ConditionalOperator 0x562b14964630 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x562b149645e8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x562b149645d0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x562b14964570 <col:7> '_Bool' lvalue Var 0x562b149599a0 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x562b14964600 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562b14964590 <col:25> 'int' lvalue Var 0x562b14959a20 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x562b14964618 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x562b149645b0 <col:37> 'int' lvalue Var 0x562b14959908 'x' 'int'
    |-BinaryOperator 0x562b149646f8 <line:847:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x562b14964680 <col:3> '_Bool' lvalue Var 0x562b149599a0 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x562b149646d0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x562b149646a0 <col:28> 'int' 0
    |-CallExpr 0x562b14964750 <line:848:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562b14964738 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562b14964718 <col:3> 'void ()' Function 0x562b148fff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562b149647c8 <line:849:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562b149647b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562b14964770 <col:3> 'void (int)' Function 0x562b148ffbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562b14964808 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562b149647f0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562b14964790 <col:21> '_Bool' lvalue Var 0x562b14959808 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562b14964840 <line:850:3, col:10>
      `-IntegerLiteral 0x562b14964820 <col:10> 'int' 0
