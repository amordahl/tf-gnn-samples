TranslationUnitDecl 0x564f1d457e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564f1d4586d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564f1d4583b0 '__int128'
|-TypedefDecl 0x564f1d458748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564f1d4583d0 'unsigned __int128'
|-TypedefDecl 0x564f1d458a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564f1d458820 'struct __NSConstantString_tag'
|   `-Record 0x564f1d4587a0 '__NSConstantString_tag'
|-TypedefDecl 0x564f1d458af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564f1d458ab0 'char *'
|   `-BuiltinType 0x564f1d457eb0 'char'
|-TypedefDecl 0x564f1d497650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564f1d458d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564f1d458bd0 'struct __va_list_tag'
|     `-Record 0x564f1d458b50 '__va_list_tag'
|-FunctionDecl 0x564f1d497790 <./split_1/mix001_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564f1d4976c0 <col:31> col:34 'int'
|-FunctionDecl 0x564f1d497958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564f1d497a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564f1d497bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564f1d497b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564f1d497df8 <col:40, col:99>
|   |-IfStmt 0x564f1d497dc8 <col:42, col:88>
|   | |-UnaryOperator 0x564f1d497ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564f1d497c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564f1d497c70 <col:47> 'int' lvalue ParmVar 0x564f1d497b38 'expression' 'int'
|   | `-CompoundStmt 0x564f1d497db0 <col:59, col:88>
|   |   `-LabelStmt 0x564f1d497d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564f1d497d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564f1d497d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564f1d497cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x564f1d497a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564f1d497de0 <col:89>
|   `-ReturnStmt 0x564f1d497de8 <col:91>
|-FunctionDecl 0x564f1d497e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564f1d497f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564f1d498280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564f1d497fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564f1d498038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564f1d4980b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564f1d498138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564f1d498340 <line:10:22>
|-FunctionDecl 0x564f1d4be390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564f1d4983b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564f1d498430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564f1d4984b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564f1d498530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564f1d4be450 <line:13:22>
|-FunctionDecl 0x564f1d4be700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564f1d4be4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564f1d4be540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564f1d4be5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564f1d4be7b8 <line:15:22>
|-TypedefDecl 0x564f1d4be828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564f1d457f70 'unsigned char'
|-TypedefDecl 0x564f1d4be898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564f1d457f90 'unsigned short'
|-TypedefDecl 0x564f1d4be908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564f1d457fb0 'unsigned int'
|-TypedefDecl 0x564f1d4be978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4be9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564f1d457ed0 'signed char'
|-TypedefDecl 0x564f1d4bea58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564f1d457f70 'unsigned char'
|-TypedefDecl 0x564f1d4beac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564f1d457ef0 'short'
|-TypedefDecl 0x564f1d4beb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564f1d457f90 'unsigned short'
|-TypedefDecl 0x564f1d4beba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564f1d457f10 'int'
|-TypedefDecl 0x564f1d4bec18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564f1d457fb0 'unsigned int'
|-TypedefDecl 0x564f1d4bec88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4becf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bed68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bedd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bee48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4beeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564f1d457fb0 'unsigned int'
|-TypedefDecl 0x564f1d4bef28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564f1d457fb0 'unsigned int'
|-TypedefDecl 0x564f1d4bef98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bf008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bf078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564f1d457fb0 'unsigned int'
|-TypedefDecl 0x564f1d4bf0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bf158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bf1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bf238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564f1d457f10 'int'
|-RecordDecl 0x564f1d4bf290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x564f1d4bf408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564f1d4bf4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564f1d4bf460 'struct __fsid_t' sugar
|   `-RecordType 0x564f1d4bf310 '__fsid_t'
|     `-Record 0x564f1d4bf290 ''
|-TypedefDecl 0x564f1d4bf548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bf5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bf628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bf698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564f1d457fb0 'unsigned int'
|-TypedefDecl 0x564f1d4bf708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bf778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564f1d457fb0 'unsigned int'
|-TypedefDecl 0x564f1d4bf7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bf858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564f1d457f10 'int'
|-TypedefDecl 0x564f1d4bf8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564f1d457f10 'int'
|-TypedefDecl 0x564f1d4bf938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564f1d457f10 'int'
|-TypedefDecl 0x564f1d4bf9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564f1d458630 'void *'
|   `-BuiltinType 0x564f1d457e70 'void'
|-TypedefDecl 0x564f1d4bfa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bfa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bfaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bfb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bfbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bfc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bfcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bfd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bfd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bfe08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4bfe78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4bff08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564f1d4bfed0 '__off64_t' sugar
|   |-Typedef 0x564f1d4bf1c8 '__off64_t'
|   `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4c0000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564f1d4bffc0 '__quad_t *'
|   `-TypedefType 0x564f1d4bff60 '__quad_t' sugar
|     |-Typedef 0x564f1d4bed68 '__quad_t'
|     `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4c0070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564f1d458ab0 'char *'
|   `-BuiltinType 0x564f1d457eb0 'char'
|-TypedefDecl 0x564f1d4c00e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4c0150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564f1d457fb0 'unsigned int'
|-FunctionDecl 0x564f1d4c0298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564f1d4c01c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564f1d4c15e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x564f1d4c15d8 <line:72:3, col:34>
|     `-CallExpr 0x564f1d4c1598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564f1d4c1580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564f1d4c1510 <col:10> '<builtin fn type>' Function 0x564f1d4c1380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564f1d4c15c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564f1d4c1530 <col:29> 'unsigned int' lvalue ParmVar 0x564f1d4c01c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x564f1d4c1380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564f1d4c1420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564f1d4c1490 <col:10> Implicit
| `-ConstAttr 0x564f1d4c14e8 <col:10> Implicit
|-FunctionDecl 0x564f1d4c1740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564f1d4c1638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564f1d4c1a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x564f1d4c1a48 <line:77:3, col:34>
|     `-CallExpr 0x564f1d4c1a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564f1d4c19f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564f1d4c1978 <col:10> '<builtin fn type>' Function 0x564f1d4c17e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564f1d4c1a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564f1d4c1998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564f1d4c1638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564f1d4c17e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564f1d4c1888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564f1d4c18f8 <col:10> Implicit
| `-ConstAttr 0x564f1d4c1950 <col:10> Implicit
|-TypedefDecl 0x564f1d4c1a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-TypedefDecl 0x564f1d4c1b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564f1d4c1ae0 '__time_t' sugar
|   |-Typedef 0x564f1d4bf708 '__time_t'
|   `-BuiltinType 0x564f1d457f30 'long'
|-RecordDecl 0x564f1d4c1b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x564f1d4c1c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564f1d4c1cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564f1d4c1d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564f1d4c1d10 '__pid_t' sugar
|   |-Typedef 0x564f1d4bf238 '__pid_t'
|   `-BuiltinType 0x564f1d457f10 'int'
|-RecordDecl 0x564f1d4c1da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x564f1d4c1e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564f1d4c1eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x564f1d4c1f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564f1d4c1fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-RecordDecl 0x564f1d4c2030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x564f1d4c22c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564f1d4c33a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564f1d4c2310 'struct cpu_set_t' sugar
|   `-RecordType 0x564f1d4c20b0 'cpu_set_t'
|     `-Record 0x564f1d4c2030 ''
|-FunctionDecl 0x564f1d4c3678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564f1d4c3448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564f1d4c3550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564f1d4c3728 <line:107:19>
|-FunctionDecl 0x564f1d4c3900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564f1d4c3790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564f1d4c39a8 <col:69>
|-FunctionDecl 0x564f1d4c3b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564f1d4c3a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564f1d4c3bc8 <col:64>
|-FunctionDecl 0x564f1d4c3e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564f1d4c3c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564f1d4c3d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564f1d4c3f38 <line:113:22>
|-FunctionDecl 0x564f1d4c41b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564f1d4c3fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564f1d4c4098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564f1d4c4268 <col:88>
|-FunctionDecl 0x564f1d4c4588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564f1d4c42d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564f1d4c43b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564f1d4c4440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564f1d4c4640 <col:62>
|-FunctionDecl 0x564f1d4c47b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564f1d4c46a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564f1d4c4860 <col:63>
|-FunctionDecl 0x564f1d4c4988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564f1d4c4a28 <col:47>
|-FunctionDecl 0x564f1d4c4b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564f1d4c4a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564f1d4c4bd8 <col:69>
|-FunctionDecl 0x564f1d4c4ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564f1d4c4c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564f1d4c4d88 <col:69>
|-FunctionDecl 0x564f1d4c5048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564f1d4c4df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564f1d4c4f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564f1d4c50f8 <col:88>
|-TypedefDecl 0x564f1d4c5188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564f1d4c5150 '__clock_t' sugar
|   |-Typedef 0x564f1d4bf548 '__clock_t'
|   `-BuiltinType 0x564f1d457f30 'long'
|-TypedefDecl 0x564f1d4c5218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564f1d4c51e0 '__clockid_t' sugar
|   |-Typedef 0x564f1d4bf938 '__clockid_t'
|   `-BuiltinType 0x564f1d457f10 'int'
|-TypedefDecl 0x564f1d4c52a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564f1d4c5270 '__timer_t' sugar
|   |-Typedef 0x564f1d4bf9a8 '__timer_t'
|   `-PointerType 0x564f1d458630 'void *'
|     `-BuiltinType 0x564f1d457e70 'void'
|-RecordDecl 0x564f1d4c5300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x564f1d4c53d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564f1d4c5440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564f1d4c54a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564f1d4c5510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564f1d4c5578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564f1d4c55e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564f1d4c5648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564f1d4c56b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564f1d4c5718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564f1d4c5780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564f1d4c57e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564f1d4c5838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564f1d4c5908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564f1d4c5978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564f1d4c5a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564f1d4c5bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564f1d4c5c90 <col:45>
|-FunctionDecl 0x564f1d4c5e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564f1d4c5d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564f1d4c5f18 <col:54>
|-FunctionDecl 0x564f1d4c6118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564f1d4c5f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564f1d4c5ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564f1d4c61c8 <line:157:22>
| `-ConstAttr 0x564f1d4c6220 <col:63>
|-FunctionDecl 0x564f1d4c7050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564f1d4c6318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564f1d4c70f8 <col:56>
|-FunctionDecl 0x564f1d4c74a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564f1d4c7168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564f1d4c71e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564f1d4c7260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564f1d4c7358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564f1d4c7560 <col:54>
|-RecordDecl 0x564f1d4c75b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564f1d4c7668 parent 0x564f1d457e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564f1d4c78c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564f1d4c7968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564f1d4c79d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564f1d4c7a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564f1d4c7b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564f1d4c7c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564f1d4c7bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x564f1d4c7b80 'struct __locale_struct' sugar
|     `-RecordType 0x564f1d4c7640 'struct __locale_struct'
|       `-Record 0x564f1d4c75b8 '__locale_struct'
|-TypedefDecl 0x564f1d4c7cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564f1d4c7cc0 '__locale_t' sugar
|   |-Typedef 0x564f1d4c7c48 '__locale_t'
|   `-PointerType 0x564f1d4c7bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x564f1d4c7b80 'struct __locale_struct' sugar
|       `-RecordType 0x564f1d4c7640 'struct __locale_struct'
|         `-Record 0x564f1d4c75b8 '__locale_struct'
|-FunctionDecl 0x564f1d4c9110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564f1d4c7d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564f1d4c7de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564f1d4c7e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564f1d4c7ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564f1d4c7f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564f1d4c91d8 <col:40>
|-FunctionDecl 0x564f1d4c93c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564f1d4c92a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564f1d4c9470 <col:66>
|-FunctionDecl 0x564f1d4c9580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564f1d4c94d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564f1d4c9628 <col:69>
|-FunctionDecl 0x564f1d4c9858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564f1d4c9690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564f1d4c9720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564f1d4c9908 <col:52>
|-FunctionDecl 0x564f1d4c9ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564f1d4c9970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564f1d4c9a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564f1d4c9b60 <col:55>
|-FunctionDecl 0x564f1d4c9cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564f1d4c9be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564f1d4c9da0 <col:62>
|-FunctionDecl 0x564f1d4c9f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564f1d4c9e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564f1d4c9fc0 <col:60>
|-FunctionDecl 0x564f1d4ca2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564f1d4ca118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564f1d4ca198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564f1d4ca368 <col:44>
|-FunctionDecl 0x564f1d4ca578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564f1d4ca3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564f1d4ca450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564f1d4ca628 <col:49>
|-VarDecl 0x564f1d4ca728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564f1d4ca7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564f1d4ca828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564f1d4ca8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564f1d4caa20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564f1d4caac0 <col:42>
|-VarDecl 0x564f1d4cab30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564f1d4cabb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564f1d4cad38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564f1d4cac28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564f1d4cade0 <col:57>
|-FunctionDecl 0x564f1d4caef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564f1d4cae60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564f1d4caf98 <col:56>
|-FunctionDecl 0x564f1d4cb0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564f1d4cb018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564f1d4cb178 <col:59>
|-FunctionDecl 0x564f1d4cb280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564f1d4cb1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564f1d4cb328 <col:48>
| `-ConstAttr 0x564f1d4cb380 <col:89>
|-FunctionDecl 0x564f1d4cb5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564f1d4cb438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564f1d4cb4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564f1d4cb848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564f1d4cb6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564f1d4cb768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564f1d4cb8f8 <col:88>
|-FunctionDecl 0x564f1d4cba90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564f1d4cb960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564f1d4cb9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564f1d4cbb40 <col:88>
|-FunctionDecl 0x564f1d4cbd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564f1d4cbba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564f1d4cbc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564f1d4cbe08 <line:208:22>
|-FunctionDecl 0x564f1d4cc178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564f1d4cbe70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564f1d4cbef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564f1d4cbf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564f1d4cc010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564f1d4cc478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564f1d4cc278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564f1d4cc350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564f1d4cc528 <col:85>
|-FunctionDecl 0x564f1d4cc918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564f1d4cc590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564f1d4cc6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564f1d4cc7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564f1d4cc9d0 <col:52>
|-FunctionDecl 0x564f1d4ccb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564f1d4cca38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564f1d4ccbf0 <col:61>
|-FunctionDecl 0x564f1d4cd0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564f1d4ccc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564f1d4cccd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564f1d4cce08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564f1d4ccef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564f1d4cd1b0 <col:62>
|-FunctionDecl 0x564f1d4cd3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564f1d4cd218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564f1d4cd2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564f1d4cd478 <line:221:22>
|-FunctionDecl 0x564f1d4cd578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564f1d4cd4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564f1d4cd620 <col:65>
|-TypedefDecl 0x564f1d4cd690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564f1d457fd0 'unsigned long'
|-RecordDecl 0x564f1d4cd6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564f1d4cd830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564f1d4cd898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564f1d4cd948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564f1d4cd8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x564f1d4cd770 'union pthread_attr_t'
|     `-Record 0x564f1d4cd6e8 'pthread_attr_t'
|-RecordDecl 0x564f1d4cd9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564f1d4cdb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564f1d4cdb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564f1d4cdc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564f1d4cdbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564f1d4cda20 'struct __pthread_internal_list'
|     `-Record 0x564f1d4cd9a0 '__pthread_internal_list'
|-RecordDecl 0x564f1d4cdcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x564f1d4cdd58 parent 0x564f1d457e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564f1d4cde30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564f1d4cde98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564f1d4cdf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564f1d4cdf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564f1d4cdfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564f1d4ce038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564f1d4d2110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564f1d4d21c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564f1d4d22b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564f1d4d2318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564f1d4d24a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564f1d4d2440 'union pthread_mutex_t' sugar
|   `-RecordType 0x564f1d4cdd30 'pthread_mutex_t'
|     `-Record 0x564f1d4cdcb0 ''
|-RecordDecl 0x564f1d4d2510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564f1d4d2650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564f1d4d26b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564f1d4d2770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564f1d4d2710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564f1d4d2590 'pthread_mutexattr_t'
|     `-Record 0x564f1d4d2510 ''
|-RecordDecl 0x564f1d4d27e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564f1d4d2888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564f1d4d2950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564f1d4d29b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564f1d4d2a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564f1d4d2a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564f1d4d2af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564f1d4d2b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564f1d4d2bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564f1d4d2c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564f1d4d2ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_1/mix001_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_1/mix001_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564f1d4d2dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564f1d4d2e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564f1d4d2f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564f1d4d2f10 'union pthread_cond_t' sugar
|   `-RecordType 0x564f1d4d2860 'pthread_cond_t'
|     `-Record 0x564f1d4d27e0 ''
|-RecordDecl 0x564f1d4d2fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564f1d4d4130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564f1d4d4198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564f1d4d4250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564f1d4d41f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x564f1d4d3060 'pthread_condattr_t'
|     `-Record 0x564f1d4d2fe0 ''
|-TypedefDecl 0x564f1d4d42d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564f1d457fb0 'unsigned int'
|-TypedefDecl 0x564f1d4d4348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564f1d457f10 'int'
|-RecordDecl 0x564f1d4d43a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564f1d4d4448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564f1d4d4510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564f1d4d4578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564f1d4d45e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564f1d4d4648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564f1d4d46b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564f1d4d4718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564f1d4d4780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564f1d4d47e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564f1d4d4850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564f1d4d48b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564f1d4d4920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564f1d4d49d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_1/mix001_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_1/mix001_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564f1d4d4a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564f1d4d4ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564f1d4d4c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564f1d4d4bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564f1d4d4420 'pthread_rwlock_t'
|     `-Record 0x564f1d4d43a0 ''
|-RecordDecl 0x564f1d4d4ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564f1d4d4de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564f1d4d4e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564f1d4d4f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564f1d4d4ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564f1d4d4d20 'pthread_rwlockattr_t'
|     `-Record 0x564f1d4d4ca0 ''
|-TypedefDecl 0x564f1d4d4f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564f1d457f14 'volatile int' volatile
|   `-BuiltinType 0x564f1d457f10 'int'
|-RecordDecl 0x564f1d4d4fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564f1d4d6140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564f1d4d61a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564f1d4d6260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564f1d4d6200 'union pthread_barrier_t' sugar
|   `-RecordType 0x564f1d4d5060 'pthread_barrier_t'
|     `-Record 0x564f1d4d4fe0 ''
|-RecordDecl 0x564f1d4d62d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564f1d4d63d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564f1d4d6438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564f1d4d64f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564f1d4d6490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564f1d4d6350 'pthread_barrierattr_t'
|     `-Record 0x564f1d4d62d0 ''
|-TypedefDecl 0x564f1d4d6608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564f1d4d65a0 'long [8]' 8 
|   `-BuiltinType 0x564f1d457f30 'long'
|-EnumDecl 0x564f1d4d6660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564f1d4d6728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564f1d4d6778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564f1d4d67c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564f1d4d6898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564f1d4d68e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564f1d4d6938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564f1d4d6988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564f1d4d6a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564f1d4d69f8 <col:26> 'int'
| |   `-DeclRefExpr 0x564f1d4d69d8 <col:26> 'int' EnumConstant 0x564f1d4d6898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564f1d4d6a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564f1d4d6a80 <col:29> 'int'
| |   `-DeclRefExpr 0x564f1d4d6a60 <col:29> 'int' EnumConstant 0x564f1d4d68e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564f1d4d6b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564f1d4d6b08 <col:30> 'int'
| |   `-DeclRefExpr 0x564f1d4d6ae8 <col:30> 'int' EnumConstant 0x564f1d4d6938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564f1d4d6ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564f1d4d6b90 <col:27> 'int'
|     `-DeclRefExpr 0x564f1d4d6b70 <col:27> 'int' EnumConstant 0x564f1d4d6a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564f1d4d6bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564f1d4d6cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564f1d4d6d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564f1d4d6d38 <col:30> 'int'
| |   `-DeclRefExpr 0x564f1d4d6d18 <col:30> 'int' EnumConstant 0x564f1d4d6cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564f1d4d6da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564f1d4d6e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564f1d4d6e10 <col:29> 'int'
|     `-DeclRefExpr 0x564f1d4d6df0 <col:29> 'int' EnumConstant 0x564f1d4d6da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564f1d4d6e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564f1d4d6f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564f1d4d6f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564f1d4d6fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564f1d4d7038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564f1d4d7150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564f1d4d71a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564f1d4d71f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564f1d4d7278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564f1d4d7260 <col:31> 'int'
|     `-DeclRefExpr 0x564f1d4d7240 <col:31> 'int' EnumConstant 0x564f1d4d7150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564f1d4d72c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564f1d4d7398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564f1d4d73e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564f1d4d7438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564f1d4d7508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564f1d4d7558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564f1d4d75a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564f1d4d7678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564f1d4d76c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564f1d4d7718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564f1d4d7958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564f1d4d79c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564f1d4d7a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564f1d4d7b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564f1d4d7b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564f1d4d7c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564f1d4d7cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564f1d4d7d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564f1d4d7dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564f1d4d7e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564f1d4d8488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564f1d4d7f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564f1d4d8030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564f1d4d8270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564f1d4d82f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564f1d4d8548 <col:47>
| |-NonNullAttr 0x564f1d4d85a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x564f1d4d85d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564f1d4d8700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564f1d4d8630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564f1d4d8958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564f1d4d87b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564f1d4d8838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564f1d4d8b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564f1d4d8a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564f1d4d8bd0 <col:60>
|-FunctionDecl 0x564f1d4d8d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564f1d4d8dc0 <col:54>
| `-ConstAttr 0x564f1d4d8e18 <col:95>
|-FunctionDecl 0x564f1d4d8fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564f1d4d8e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564f1d4d8ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564f1d4d9098 <line:394:19>
| `-ConstAttr 0x564f1d4d90f0 <col:60>
|-FunctionDecl 0x564f1d4dab08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564f1d4da9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564f1d4dabb0 <col:71>
| `-NonNullAttr 0x564f1d4dac08 <col:112, col:126> 1
|-FunctionDecl 0x564f1d4dad10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564f1d4dac58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564f1d4dadb8 <line:397:22>
| `-NonNullAttr 0x564f1d4dae10 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4db038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564f1d4dae58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564f1d4daed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564f1d4db0e8 <line:400:22>
| `-NonNullAttr 0x564f1d4db140 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4db348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4db188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564f1d4db208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564f1d4db3f8 <line:403:22>
| `-NonNullAttr 0x564f1d4db450 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4db6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564f1d4db498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564f1d4db540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564f1d4db758 <line:406:22>
| `-NonNullAttr 0x564f1d4db7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4dc9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564f1d4db7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564f1d4db870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564f1d4dca98 <line:409:22>
| `-NonNullAttr 0x564f1d4dcaf0 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4dcd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564f1d4dcb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564f1d4dcbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564f1d4dcdd8 <line:412:22>
| `-NonNullAttr 0x564f1d4dce30 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4dd068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564f1d4dce78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564f1d4dcf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564f1d4dd118 <col:37>
| `-NonNullAttr 0x564f1d4dd170 <col:78, col:95> 1 2
|-FunctionDecl 0x564f1d4dd358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4dd1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564f1d4dd238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564f1d4dd408 <line:418:22>
| `-NonNullAttr 0x564f1d4dd460 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4dd5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4dd4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564f1d4dd528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564f1d4dd698 <line:420:22>
| `-NonNullAttr 0x564f1d4dd6f0 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4dd898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4dd738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564f1d4dd7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564f1d4dd948 <line:423:22>
| `-NonNullAttr 0x564f1d4dd9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4ddb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4dda08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564f1d4dda88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564f1d4ddbf8 <line:426:22>
| `-NonNullAttr 0x564f1d4ddc50 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4dddf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4ddc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564f1d4ddd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564f1d4ddea8 <line:429:22>
| `-NonNullAttr 0x564f1d4ddf00 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4de088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4ddf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564f1d4ddfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564f1d4de138 <line:431:22>
| `-NonNullAttr 0x564f1d4de190 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4de3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564f1d4de1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564f1d4de258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564f1d4de468 <line:434:22>
| |-NonNullAttr 0x564f1d4de4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564f1d4de4f8 <col:100> "" ""
|-FunctionDecl 0x564f1d4de708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564f1d4de548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564f1d4de5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564f1d4de7b8 <line:437:22>
| |-NonNullAttr 0x564f1d4de810 <col:63, col:77> 1
| `-DeprecatedAttr 0x564f1d4de848 <col:97> "" ""
|-FunctionDecl 0x564f1d4dea48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564f1d4de898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564f1d4de910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564f1d4deaf8 <line:440:22>
| `-NonNullAttr 0x564f1d4deb50 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4decd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564f1d4deb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564f1d4dec10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564f1d4ded80 <line:443:22>
| `-NonNullAttr 0x564f1d4dedd8 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4df0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564f1d4dee28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564f1d4deea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564f1d4def20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564f1d4df180 <line:447:22>
| `-NonNullAttr 0x564f1d4df1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564f1d4df488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564f1d4df230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564f1d4df2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564f1d4df328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564f1d4df540 <col:43>
| `-NonNullAttr 0x564f1d4df598 <col:84, col:98> 1
|-FunctionDecl 0x564f1d4df858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564f1d4df5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564f1d4df668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564f1d4df6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564f1d4df910 <line:452:22>
| `-NonNullAttr 0x564f1d4df968 <col:63, col:77> 3
|-FunctionDecl 0x564f1d4dfc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564f1d4df9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564f1d4dfa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564f1d4dfaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564f1d4dfd30 <line:456:22>
| `-NonNullAttr 0x564f1d4dfd88 <col:63, col:80> 2 3
|-FunctionDecl 0x564f1d4dff78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564f1d4dfdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564f1d4dfe58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564f1d4e0028 <line:458:22>
|-FunctionDecl 0x564f1d4e03f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564f1d4e00f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564f1d4e0290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564f1d4e04a8 <col:52, col:69> 1 2
|-FunctionDecl 0x564f1d4e0650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564f1d4e0530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564f1d4e05b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564f1d4e0838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564f1d4e0718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564f1d4e0798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564f1d4e09f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564f1d4e08f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564f1d4e0b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564f1d4e0bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564f1d4e0c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564f1d4e0d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564f1d4e0dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564f1d4e0fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_1/mix001_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564f1d4e1098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564f1d4e1150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564f1d4e10f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564f1d4e0c50 '__pthread_unwind_buf_t'
| |   `-Record 0x564f1d4e0bd0 ''
| `-AlignedAttr 0x564f1d4e11a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564f1d4e1220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564f1d4e1380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564f1d4e13e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564f1d4e1450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564f1d4e14b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564f1d4e16c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564f1d4e15b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564f1d4e1808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564f1d4e1778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564f1d4e1a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564f1d4e18c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564f1d4e1aa8 <line:487:22>
|-RecordDecl 0x564f1d4e1b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564f1d4e1e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564f1d4e1c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564f1d4e1cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564f1d4e1ec8 <col:86>
| `-ReturnsTwiceAttr 0x564f1d4e1f20 <col:12> Implicit
|-FunctionDecl 0x564f1d4e2248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564f1d4e1ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564f1d4e2100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564f1d4e22f8 <line:493:22>
| `-NonNullAttr 0x564f1d4e2350 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e24c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564f1d4e2398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564f1d4e2570 <line:495:22>
| `-NonNullAttr 0x564f1d4e25c8 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e26d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564f1d4e2618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564f1d4e2778 <line:497:22>
| `-NonNullAttr 0x564f1d4e27d0 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4e28d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564f1d4e2818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564f1d4e2978 <line:499:22>
| `-NonNullAttr 0x564f1d4e29d0 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4e3c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564f1d4e3a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564f1d4e3ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564f1d4e3cd8 <col:36>
| `-NonNullAttr 0x564f1d4e3d30 <col:66, col:83> 1 2
|-FunctionDecl 0x564f1d4e3e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564f1d4e3d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564f1d4e3ed8 <line:504:22>
| `-NonNullAttr 0x564f1d4e3f30 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4e41c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4e3fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564f1d4e4060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564f1d4e4278 <line:508:22>
| `-NonNullAttr 0x564f1d4e42d0 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4e4598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4e4318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564f1d4e4398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564f1d4e4418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564f1d4e4650 <line:512:22>
| `-NonNullAttr 0x564f1d4e46a8 <col:63, col:80> 1 3
|-FunctionDecl 0x564f1d4e47b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564f1d4e46f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564f1d4e4858 <line:514:22>
| `-NonNullAttr 0x564f1d4e48b0 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e4ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564f1d4e4960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564f1d4e4b80 <line:516:22>
| `-NonNullAttr 0x564f1d4e4bd8 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e4ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564f1d4e4c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564f1d4e4d88 <line:518:22>
| `-NonNullAttr 0x564f1d4e4de0 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e5008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4e4e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564f1d4e4ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564f1d4e50b8 <line:522:22>
| `-NonNullAttr 0x564f1d4e5110 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4e5318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4e5158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564f1d4e51d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564f1d4e53c8 <line:525:22>
| `-NonNullAttr 0x564f1d4e5420 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e55c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4e5468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564f1d4e54e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564f1d4e5678 <line:528:22>
| `-NonNullAttr 0x564f1d4e56d0 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4e5858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4e5718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564f1d4e5798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564f1d4e5908 <line:530:22>
| `-NonNullAttr 0x564f1d4e5960 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e5b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4e59a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564f1d4e5a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564f1d4e5bd0 <line:534:22>
| `-NonNullAttr 0x564f1d4e5c28 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4e5db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4e5c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564f1d4e5cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564f1d4e5e68 <line:537:22>
| `-NonNullAttr 0x564f1d4e5ec0 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e6068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4e5f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564f1d4e5f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564f1d4e6118 <line:541:22>
| `-NonNullAttr 0x564f1d4e6170 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4e62f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4e61b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564f1d4e6238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564f1d4e63a8 <line:544:22>
| `-NonNullAttr 0x564f1d4e6400 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e65e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564f1d4e6448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564f1d4e64c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564f1d4e6698 <line:547:22>
| `-NonNullAttr 0x564f1d4e66f0 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4e6878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4e6738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564f1d4e67b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564f1d4e6928 <line:550:22>
| `-NonNullAttr 0x564f1d4e6980 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e7cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564f1d4e7aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564f1d4e7bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564f1d4e7da8 <col:29>
| `-NonNullAttr 0x564f1d4e7e00 <col:70, col:84> 1
|-FunctionDecl 0x564f1d4e7f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564f1d4e7e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564f1d4e8020 <line:555:22>
| `-NonNullAttr 0x564f1d4e8078 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e8180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564f1d4e80c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564f1d4e8228 <line:557:22>
| `-NonNullAttr 0x564f1d4e8280 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4e8380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564f1d4e82c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564f1d4e8428 <line:559:19>
| `-NonNullAttr 0x564f1d4e8480 <col:49, col:63> 1
|-FunctionDecl 0x564f1d4e86b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564f1d4e84c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564f1d4e8558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564f1d4e8768 <col:39>
| `-NonNullAttr 0x564f1d4e87c0 <col:69, col:86> 1 2
|-FunctionDecl 0x564f1d4e88c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564f1d4e8808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564f1d4e8968 <line:564:22>
| `-NonNullAttr 0x564f1d4e89c0 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4e8b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564f1d4e8a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564f1d4e8bd0 <line:566:22>
| `-NonNullAttr 0x564f1d4e8c28 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4e8de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564f1d4e8c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564f1d4e8d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564f1d4e8e98 <col:39>
| `-NonNullAttr 0x564f1d4e8ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x564f1d4e8ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564f1d4e8f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564f1d4e9098 <line:571:22>
| `-NonNullAttr 0x564f1d4e90f0 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4e92d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564f1d4e91a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564f1d4e9380 <line:573:22>
| `-NonNullAttr 0x564f1d4e93d8 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e94e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564f1d4e9428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564f1d4e9588 <line:575:22>
| `-NonNullAttr 0x564f1d4e95e0 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e9808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4e9628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564f1d4e96a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564f1d4e98b8 <line:579:22>
| `-NonNullAttr 0x564f1d4e9910 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4e9b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4e9958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564f1d4e99d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564f1d4e9be8 <line:582:22>
| `-NonNullAttr 0x564f1d4e9c40 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4e9de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4e9c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564f1d4e9d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564f1d4e9e98 <line:586:22>
| `-NonNullAttr 0x564f1d4e9ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4ea078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4e9f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564f1d4e9fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564f1d4ea128 <col:36>
| `-NonNullAttr 0x564f1d4ea180 <col:77, col:91> 1
|-FunctionDecl 0x564f1d4ea4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564f1d4ea260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564f1d4ea370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564f1d4ea568 <line:591:22>
| `-NonNullAttr 0x564f1d4ea5c0 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4ea738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564f1d4ea608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564f1d4ea7e0 <line:593:22>
| `-NonNullAttr 0x564f1d4ea838 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4ea940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564f1d4ea888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564f1d4ea9e8 <line:595:22>
| `-NonNullAttr 0x564f1d4eaa40 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4eab58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564f1d4eaaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564f1d4eac00 <line:597:22>
| `-NonNullAttr 0x564f1d4eac58 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4eae88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564f1d4eaca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564f1d4ead20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564f1d4eaf38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564f1d4eb268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564f1d4eafb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564f1d4eb030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564f1d4eb0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564f1d4eb320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564f1d4eb538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564f1d4eb400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564f1d4eb5e0 <line:606:22>
| `-NonNullAttr 0x564f1d4eb638 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4eb740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564f1d4eb688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564f1d4eb7e8 <line:608:22>
| `-NonNullAttr 0x564f1d4eb840 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4ebaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4eb888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564f1d4eb908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564f1d4ebb50 <line:612:22>
| `-NonNullAttr 0x564f1d4ebba8 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4ebdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4ebbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564f1d4ebc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564f1d4ebe68 <col:37>
| `-NonNullAttr 0x564f1d4ebec0 <col:78, col:92> 1
|-FunctionDecl 0x564f1d4ec0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564f1d4ebf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564f1d4ebfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564f1d4ec188 <line:618:22>
| `-NonNullAttr 0x564f1d4ec1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4ec3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564f1d4ec228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564f1d4ec2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564f1d4ec458 <line:621:22>
| `-NonNullAttr 0x564f1d4ec4b0 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4ec758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564f1d4ec590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564f1d4ec610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564f1d4ec808 <line:623:22>
| `-NonNullAttr 0x564f1d4ec860 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4ec9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564f1d4ec8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564f1d4ecab0 <line:625:22>
| `-NonNullAttr 0x564f1d4ecb08 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4ecc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564f1d4ecb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564f1d4eccb8 <line:627:22>
| `-NonNullAttr 0x564f1d4ecd10 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4ece10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564f1d4ecd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564f1d4eceb8 <line:629:22>
| `-NonNullAttr 0x564f1d4ecf10 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4ed010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564f1d4ecf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564f1d4ed0b8 <line:631:22>
| `-NonNullAttr 0x564f1d4ed110 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4ed4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564f1d4ed1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564f1d4ed300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564f1d4ed380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564f1d4ed5a0 <line:635:22>
| `-NonNullAttr 0x564f1d4ed5f8 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4ed778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564f1d4ed648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564f1d4ed820 <line:637:22>
| `-NonNullAttr 0x564f1d4ed878 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4ed980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564f1d4ed8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564f1d4eda28 <line:639:22>
| `-NonNullAttr 0x564f1d4eda80 <col:52, col:66> 1
|-FunctionDecl 0x564f1d4eec88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564f1d4eeb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564f1d4eed30 <line:641:22>
| `-NonNullAttr 0x564f1d4eed88 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4eee90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564f1d4eedd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564f1d4eef38 <line:643:22>
| `-NonNullAttr 0x564f1d4eef90 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4ef1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564f1d4eefd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564f1d4ef058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564f1d4ef268 <line:647:22>
| `-NonNullAttr 0x564f1d4ef2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564f1d4ef4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564f1d4ef308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564f1d4ef388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564f1d4ef578 <line:650:22>
| `-NonNullAttr 0x564f1d4ef5d0 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4ef918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564f1d4ef6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564f1d4ef7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564f1d4ef9c8 <line:653:22>
| `-NonNullAttr 0x564f1d4efa20 <col:63, col:77> 1
|-FunctionDecl 0x564f1d4efb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564f1d4efa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564f1d4efc30 <col:69>
|-FunctionDecl 0x564f1d4efda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564f1d4efc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564f1d4efe50 <col:72>
|-FunctionDecl 0x564f1d4f0088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564f1d4efeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564f1d4eff68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564f1d4f0138 <col:44>
|-FunctionDecl 0x564f1d4f0358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564f1d4f01a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564f1d4f0218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564f1d4f0408 <line:660:22>
| `-NonNullAttr 0x564f1d4f0460 <col:63, col:77> 2
|-FunctionDecl 0x564f1d4f08a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564f1d4f0540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564f1d4f0650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564f1d4f0760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564f1d4f0960 <col:47>
|-FunctionDecl 0x564f1d4f0af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564f1d4f09d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564f1d4f0c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564f1d4f0bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564f1d4f0da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x564f1d4f0d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564f1d4f0e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564f1d4f0f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564f1d4f0fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564f1d4f10a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564f1d4f1120 prev 0x564f1d4f10a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564f1d4f1188 <col:24> 'int' 0
|-VarDecl 0x564f1d4f11c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x564f1d4f1240 prev 0x564f1d4f11c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x564f1d4f12a8 <col:27> 'int' 0
|-VarDecl 0x564f1d4f12e0 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x564f1d4f1360 prev 0x564f1d4f12e0 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x564f1d4f13c8 <col:27> 'int' 0
|-VarDecl 0x564f1d4f1400 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x564f1d4f1480 prev 0x564f1d4f1400 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x564f1d4f14e8 <col:27> 'int' 0
|-VarDecl 0x564f1d4f1520 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x564f1d4f15a0 prev 0x564f1d4f1520 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x564f1d4f1608 <col:27> 'int' 0
|-VarDecl 0x564f1d4f1640 <line:681:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x564f1d4f16c0 prev 0x564f1d4f1640 <line:682:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x564f1d4f1728 <col:27> 'int' 0
|-VarDecl 0x564f1d4f1760 <line:683:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x564f1d4f17e0 prev 0x564f1d4f1760 <line:684:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x564f1d4f1848 <col:27> 'int' 0
|-VarDecl 0x564f1d4f1878 <line:685:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564f1d4f18f0 <line:686:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564f1d4f1970 <line:687:1, col:5> col:5 used x 'int'
|-VarDecl 0x564f1d4f19f0 prev 0x564f1d4f1970 <line:688:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564f1d4f1a58 <col:9> 'int' 0
|-VarDecl 0x564f1d4f1b00 <line:689:1, col:5> col:5 used y 'int'
|-VarDecl 0x564f1d4f1b80 prev 0x564f1d4f1b00 <line:690:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564f1d4f1be8 <col:9> 'int' 0
|-VarDecl 0x564f1d4f1c18 <line:691:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x564f1d4f1c98 <line:692:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x564f1d4f1d10 <line:693:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x564f1d4f1d88 <line:694:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x564f1d4f1e00 <line:695:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x564f1d4f1e78 <line:696:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x564f1d4f1ef0 <line:697:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x564f1d4f1f68 <line:698:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x564f1d4f1fe0 <line:699:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x564f1d4f2058 <line:700:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x564f1d4f20d0 <line:701:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x564f1d4f2150 <line:702:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x564f1d4f21d0 <line:703:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x564f1d4f2248 <line:704:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x564f1d4f22c8 <line:705:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x564f1d4f2340 <line:706:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x564f1d4f23c0 <line:707:1, col:5> col:5 used z 'int'
|-VarDecl 0x564f1d4f2440 prev 0x564f1d4f23c0 <line:708:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564f1d4f24a8 <col:9> 'int' 0
|-VarDecl 0x564f1d4f24d8 <line:709:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564f1d4f2550 <line:710:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564f1d4f2668 prev 0x564f1d4f0af0 <line:711:1, line:728:1> line:711:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564f1d4f25d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564f1d4f2d68 <line:712:1, line:728:1>
|   |-CallExpr 0x564f1d4f2778 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f2760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f2710 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f27d8 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f2798 <col:3> 'int' lvalue Var 0x564f1d4f2440 'z' 'int'
|   | `-IntegerLiteral 0x564f1d4f27b8 <col:7> 'int' 1
|   |-CallExpr 0x564f1d4f2830 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f2818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f27f8 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4f2888 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f2870 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f2850 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f2900 <line:717:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f28a8 <col:3> 'int' lvalue Var 0x564f1d4f1240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x564f1d4f28e8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f28c8 <col:25> 'int' lvalue Var 0x564f1d4f2440 'z' 'int'
|   |-CallExpr 0x564f1d4f2958 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f2940 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f2920 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4f29b0 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f2998 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f2978 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f2a28 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f29d0 <col:3> 'int' lvalue Var 0x564f1d4f1360 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x564f1d4f2a10 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f29f0 <col:25> 'int' lvalue Var 0x564f1d4f19f0 'x' 'int'
|   |-CallExpr 0x564f1d4f2a80 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f2a68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f2a48 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4f2ad8 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f2ac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f2aa0 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x564f1d4f2b48 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f2b30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f2b10 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4f2ba0 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f2b88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f2b68 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f2c58 <line:725:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f2bc0 <col:3> 'int' lvalue Var 0x564f1d4f1120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564f1d4f2c38 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564f1d4f2c20 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4f2be0 <col:22> 'int' lvalue Var 0x564f1d4f1120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564f1d4f2c00 <col:41> 'int' 1
|   |-CallExpr 0x564f1d4f2cb0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f2c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f2c78 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564f1d4f2d58 <line:727:3, col:36>
|     `-CallExpr 0x564f1d4f2d38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564f1d4f2d20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564f1d4f2cd0 <col:10> 'void *(void)' Function 0x564f1d497958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564f1d4f2ea0 prev 0x564f1d4f0c48 <line:729:1, line:759:1> line:729:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564f1d4f2e08 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564f1d4f5eb0 <line:730:1, line:759:1>
|   |-CallExpr 0x564f1d4f2f80 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f2f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f2f48 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f2fe0 <line:732:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f2fa0 <col:3> 'int' lvalue Var 0x564f1d4f19f0 'x' 'int'
|   | `-IntegerLiteral 0x564f1d4f2fc0 <col:7> 'int' 1
|   |-CallExpr 0x564f1d4f3038 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f3020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f3000 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4f3090 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f3078 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f3058 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f3108 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f30b0 <col:3> 'int' lvalue Var 0x564f1d4f1480 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x564f1d4f30f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f30d0 <col:25> 'int' lvalue Var 0x564f1d4f19f0 'x' 'int'
|   |-CallExpr 0x564f1d4f3160 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f3148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f3128 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4f31b8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f31a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f3180 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f3268 <line:738:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f31d8 <col:3> '_Bool' lvalue Var 0x564f1d4f24d8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f3250 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564f1d4f3230 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564f1d4f3218 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564f1d4f31f8 <col:19> 'void *(void)' Function 0x564f1d497958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564f1d4f3318 <line:739:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f3288 <col:3> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f3300 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564f1d4f32e0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564f1d4f32c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564f1d4f32a8 <col:19> 'void *(void)' Function 0x564f1d497958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564f1d4f3390 <line:740:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f3338 <col:3> '_Bool' lvalue Var 0x564f1d4f1c18 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f3378 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f3358 <col:21> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564f1d4f3408 <line:741:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f33b0 <col:3> 'int' lvalue Var 0x564f1d4f1c98 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564f1d4f33f0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f33d0 <col:15> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   |-BinaryOperator 0x564f1d4f3840 <line:742:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f3428 <col:3> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   | `-ConditionalOperator 0x564f1d4f3810 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564f1d4f3638 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564f1d4f3558 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564f1d4f3480 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564f1d4f3468 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564f1d4f3448 <col:8> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564f1d4f3538 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564f1d4f34d0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564f1d4f34b8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564f1d4f3498 <col:27> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x564f1d4f3520 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564f1d4f3508 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564f1d4f34e8 <col:46> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564f1d4f3618 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564f1d4f35b0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564f1d4f3598 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564f1d4f3578 <col:65> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x564f1d4f3600 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564f1d4f35e8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564f1d4f35c8 <col:84> '_Bool' lvalue Var 0x564f1d4f1fe0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564f1d4f37f8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4f3658 <col:101> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   |   `-ParenExpr 0x564f1d4f37d8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564f1d4f37a8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564f1d4f3718 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564f1d4f36d0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564f1d4f36b8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564f1d4f3678 <col:106> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564f1d4f3700 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564f1d4f36e8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564f1d4f3698 <col:124> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564f1d4f3778 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564f1d4f3738 <col:141> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564f1d4f3790 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564f1d4f3758 <col:153> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x564f1d4f3d60 <line:743:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f3860 <col:3> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x564f1d4f3d30 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564f1d4f3d00 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564f1d4f3ce8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564f1d4f3880 <col:15> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564f1d4f3d18 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4f38a0 <col:31> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564f1d4f3cc8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564f1d4f3c98 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564f1d4f3ab0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564f1d4f39d0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564f1d4f38f8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564f1d4f38e0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564f1d4f38c0 <col:45> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564f1d4f39b0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564f1d4f3948 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564f1d4f3930 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564f1d4f3910 <col:64> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564f1d4f3998 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564f1d4f3980 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564f1d4f3960 <col:83> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564f1d4f3a90 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564f1d4f3a28 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564f1d4f3a10 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564f1d4f39f0 <col:102> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564f1d4f3a78 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564f1d4f3a60 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564f1d4f3a40 <col:121> '_Bool' lvalue Var 0x564f1d4f1fe0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564f1d4f3c80 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564f1d4f3ad0 <col:138> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x564f1d4f3c60 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564f1d4f3c30 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564f1d4f3ba0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564f1d4f3b58 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564f1d4f3b40 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564f1d4f3af0 <col:151> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564f1d4f3b88 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564f1d4f3b70 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564f1d4f3b20 <col:169> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564f1d4f3c00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564f1d4f3bc0 <col:186> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564f1d4f3c18 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564f1d4f3be0 <col:198> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x564f1d4f4270 <line:744:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f3d80 <col:3> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x564f1d4f4240 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564f1d4f4210 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564f1d4f41f8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564f1d4f3da0 <col:15> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564f1d4f4228 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4f3dc0 <col:31> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x564f1d4f41d8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564f1d4f41a8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564f1d4f3fd0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564f1d4f3ef0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564f1d4f3e18 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564f1d4f3e00 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564f1d4f3de0 <col:45> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564f1d4f3ed0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564f1d4f3e68 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564f1d4f3e50 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564f1d4f3e30 <col:64> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564f1d4f3eb8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564f1d4f3ea0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564f1d4f3e80 <col:83> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564f1d4f3fb0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564f1d4f3f48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564f1d4f3f30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564f1d4f3f10 <col:102> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564f1d4f3f98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564f1d4f3f80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564f1d4f3f60 <col:121> '_Bool' lvalue Var 0x564f1d4f1fe0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564f1d4f4190 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564f1d4f3ff0 <col:138> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x564f1d4f4170 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564f1d4f4140 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564f1d4f40b0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564f1d4f4068 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564f1d4f4050 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564f1d4f4010 <col:151> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564f1d4f4098 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564f1d4f4080 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564f1d4f4030 <col:169> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564f1d4f4110 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564f1d4f40d0 <col:186> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564f1d4f4128 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564f1d4f40f0 <col:198> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x564f1d4f4818 <line:745:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f4290 <col:3> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f4800 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4f47d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564f1d4f4788 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f4770 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f42b0 <col:20> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4f47b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f47a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f42d0 <col:36> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564f1d4f4750 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564f1d4f4720 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564f1d4f44e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564f1d4f4400 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564f1d4f4328 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564f1d4f4310 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564f1d4f42f0 <col:55> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564f1d4f43e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564f1d4f4378 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564f1d4f4360 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564f1d4f4340 <col:74> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564f1d4f43c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564f1d4f43b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564f1d4f4390 <col:93> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564f1d4f44c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564f1d4f4458 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564f1d4f4440 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564f1d4f4420 <col:112> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564f1d4f44a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564f1d4f4490 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564f1d4f4470 <col:131> '_Bool' lvalue Var 0x564f1d4f1fe0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564f1d4f4708 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564f1d4f46f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564f1d4f4500 <col:148> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564f1d4f46d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564f1d4f46a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564f1d4f45c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564f1d4f4578 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564f1d4f4560 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564f1d4f4520 <col:166> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564f1d4f45a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564f1d4f4590 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564f1d4f4540 <col:184> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564f1d4f4658 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564f1d4f4610 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564f1d4f45e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564f1d4f4688 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564f1d4f4670 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564f1d4f4638 <col:212> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564f1d4f4df0 <line:746:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f4838 <col:3> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f4dd8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4f4da8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564f1d4f4d60 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f4d48 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f4858 <col:20> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4f4d90 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f4d78 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f4878 <col:36> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564f1d4f4d28 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564f1d4f4cf8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564f1d4f4a88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564f1d4f49a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564f1d4f48d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564f1d4f48b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564f1d4f4898 <col:55> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564f1d4f4988 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564f1d4f4920 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564f1d4f4908 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564f1d4f48e8 <col:74> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564f1d4f4970 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564f1d4f4958 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564f1d4f4938 <col:93> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564f1d4f4a68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564f1d4f4a00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564f1d4f49e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564f1d4f49c8 <col:112> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564f1d4f4a50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564f1d4f4a38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564f1d4f4a18 <col:131> '_Bool' lvalue Var 0x564f1d4f1fe0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564f1d4f4ce0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564f1d4f4cc8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564f1d4f4aa8 <col:148> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564f1d4f4ca8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564f1d4f4c78 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564f1d4f4b78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564f1d4f4b30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564f1d4f4b08 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564f1d4f4ac8 <col:166> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564f1d4f4b60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564f1d4f4b48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564f1d4f4ae8 <col:184> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564f1d4f4c48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564f1d4f4bc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564f1d4f4b98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564f1d4f4c60 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564f1d4f4c20 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564f1d4f4bf0 <col:219> 'int' 0
|   |-BinaryOperator 0x564f1d4f5398 <line:747:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f4e10 <col:3> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f5380 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4f5350 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564f1d4f5308 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f52f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f4e30 <col:20> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4f5338 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f5320 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f4e50 <col:36> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x564f1d4f52d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564f1d4f52a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564f1d4f5060 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564f1d4f4f80 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564f1d4f4ea8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564f1d4f4e90 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564f1d4f4e70 <col:55> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564f1d4f4f60 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564f1d4f4ef8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564f1d4f4ee0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564f1d4f4ec0 <col:74> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564f1d4f4f48 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564f1d4f4f30 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564f1d4f4f10 <col:93> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564f1d4f5040 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564f1d4f4fd8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564f1d4f4fc0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564f1d4f4fa0 <col:112> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564f1d4f5028 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564f1d4f5010 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564f1d4f4ff0 <col:131> '_Bool' lvalue Var 0x564f1d4f1fe0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564f1d4f5288 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564f1d4f5270 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564f1d4f5080 <col:148> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x564f1d4f5250 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564f1d4f5220 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564f1d4f5140 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564f1d4f50f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564f1d4f50e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564f1d4f50a0 <col:166> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564f1d4f5128 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564f1d4f5110 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564f1d4f50c0 <col:184> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564f1d4f51d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564f1d4f5190 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564f1d4f5160 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564f1d4f5208 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564f1d4f51f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564f1d4f51b8 <col:212> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564f1d4f5960 <line:748:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f53b8 <col:3> '_Bool' lvalue Var 0x564f1d4f1fe0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f5948 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4f5918 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564f1d4f58d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f58b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f53d8 <col:20> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4f5900 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f58e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f53f8 <col:36> '_Bool' lvalue Var 0x564f1d4f1fe0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x564f1d4f5898 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564f1d4f5868 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564f1d4f5608 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564f1d4f5528 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564f1d4f5450 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564f1d4f5438 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564f1d4f5418 <col:55> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564f1d4f5508 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564f1d4f54a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564f1d4f5488 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564f1d4f5468 <col:74> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564f1d4f54f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564f1d4f54d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564f1d4f54b8 <col:93> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564f1d4f55e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564f1d4f5580 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564f1d4f5568 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564f1d4f5548 <col:112> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564f1d4f55d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564f1d4f55b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564f1d4f5598 <col:131> '_Bool' lvalue Var 0x564f1d4f1fe0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564f1d4f5850 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564f1d4f5838 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564f1d4f5628 <col:148> '_Bool' lvalue Var 0x564f1d4f1fe0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x564f1d4f5818 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564f1d4f57e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564f1d4f56e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564f1d4f56a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564f1d4f5688 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564f1d4f5648 <col:166> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564f1d4f56d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564f1d4f56b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564f1d4f5668 <col:184> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564f1d4f57b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564f1d4f5738 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564f1d4f5708 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564f1d4f57d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564f1d4f5790 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564f1d4f5760 <col:219> 'int' 0
|   |-BinaryOperator 0x564f1d4f59d8 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f5980 <col:3> 'int' lvalue Var 0x564f1d4f15a0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x564f1d4f59c0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f59a0 <col:25> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   |-BinaryOperator 0x564f1d4f5b08 <line:750:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f59f8 <col:3> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   | `-ConditionalOperator 0x564f1d4f5ad8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564f1d4f5a90 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564f1d4f5a78 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564f1d4f5a18 <col:7> '_Bool' lvalue Var 0x564f1d4f1c18 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564f1d4f5aa8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4f5a38 <col:25> 'int' lvalue Var 0x564f1d4f1c98 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564f1d4f5ac0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564f1d4f5a58 <col:37> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   |-BinaryOperator 0x564f1d4f5bb8 <line:751:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f5b40 <col:3> '_Bool' lvalue Var 0x564f1d4f1c18 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564f1d4f5b90 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564f1d4f5b60 <col:28> 'int' 0
|   |-CallExpr 0x564f1d4f5c10 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f5bf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f5bd8 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4f5c68 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f5c50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f5c30 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x564f1d4f5cc0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f5ca8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f5c88 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4f5d18 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f5d00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f5ce0 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f5dd0 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f5d38 <col:3> 'int' lvalue Var 0x564f1d4f1120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564f1d4f5db0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564f1d4f5d98 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4f5d58 <col:22> 'int' lvalue Var 0x564f1d4f1120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564f1d4f5d78 <col:41> 'int' 1
|   |-CallExpr 0x564f1d4f5e28 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f5e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f5df0 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564f1d4f5ea0 <line:758:3, col:36>
|     `-CallExpr 0x564f1d4f5e80 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564f1d4f5e68 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564f1d4f5e48 <col:10> 'void *(void)' Function 0x564f1d497958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564f1d4f6050 prev 0x564f1d4f0da0 <line:760:1, line:804:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564f1d4f5fb8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564f1d4fa300 <line:761:1, line:804:1>
|   |-CallExpr 0x564f1d4f6130 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f6118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f60f8 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f61a8 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f6150 <col:3> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564f1d4f6190 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f6170 <col:15> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x564f1d4f6208 <line:764:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f61c8 <col:3> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x564f1d4f61e8 <col:15> 'int' 1
|   |-BinaryOperator 0x564f1d4f6280 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f6228 <col:3> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f6268 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f6248 <col:20> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564f1d4f6318 <line:766:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f62a0 <col:3> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564f1d4f62f0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564f1d4f62c0 <col:27> 'int' 1
|   |-CallExpr 0x564f1d4f6498 <line:767:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564f1d4f6480 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564f1d4f6338 <col:3> 'void (int)' Function 0x564f1d497bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564f1d4f6438 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564f1d4f6418 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564f1d4f63f8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564f1d4f63b0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564f1d4f6398 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564f1d4f6358 <col:23> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564f1d4f63e0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564f1d4f63c8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564f1d4f6378 <col:41> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564f1d4f6518 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f64c0 <col:3> '_Bool' lvalue Var 0x564f1d4f1ef0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f6500 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f64e0 <col:20> '_Bool' lvalue Var 0x564f1d4f1d10 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564f1d4f6590 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f6538 <col:3> '_Bool' lvalue Var 0x564f1d4f1f68 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f6578 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f6558 <col:20> '_Bool' lvalue Var 0x564f1d4f1d88 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564f1d4f6608 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f65b0 <col:3> '_Bool' lvalue Var 0x564f1d4f1fe0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f65f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f65d0 <col:20> '_Bool' lvalue Var 0x564f1d4f1e00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564f1d4f6680 <line:771:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f6628 <col:3> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f6668 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f6648 <col:20> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564f1d4f6718 <line:772:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f66a0 <col:3> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x564f1d4f66f0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564f1d4f66c0 <col:27> 'int' 1
|   |-CallExpr 0x564f1d4f6770 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f6758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f6738 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4f67c8 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f67b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f6790 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f6878 <line:775:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f67e8 <col:3> '_Bool' lvalue Var 0x564f1d4f24d8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f6860 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564f1d4f6840 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564f1d4f6828 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564f1d4f6808 <col:19> 'void *(void)' Function 0x564f1d497958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564f1d4f6928 <line:776:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f6898 <col:3> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f6910 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564f1d4f68f0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564f1d4f68d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564f1d4f68b8 <col:19> 'void *(void)' Function 0x564f1d497958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564f1d4f69a0 <line:777:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f6948 <col:3> '_Bool' lvalue Var 0x564f1d4f1c18 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f6988 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f6968 <col:21> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564f1d4f6a18 <line:778:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f69c0 <col:3> 'int' lvalue Var 0x564f1d4f1c98 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564f1d4f6a00 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f69e0 <col:15> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   |-BinaryOperator 0x564f1d4f6e70 <line:779:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f6a38 <col:3> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   | `-ConditionalOperator 0x564f1d4f6e40 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564f1d4f6c68 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564f1d4f6b88 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564f1d4f6a90 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564f1d4f6a78 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564f1d4f6a58 <col:8> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564f1d4f6b68 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564f1d4f6ae0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564f1d4f6ac8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564f1d4f6aa8 <col:27> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x564f1d4f6b50 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564f1d4f6b18 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564f1d4f6af8 <col:46> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564f1d4f6c48 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564f1d4f6be0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564f1d4f6bc8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564f1d4f6ba8 <col:65> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x564f1d4f6c30 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564f1d4f6c18 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564f1d4f6bf8 <col:84> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564f1d4f6e28 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4f6c88 <col:101> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   |   `-ParenExpr 0x564f1d4f6e08 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564f1d4f6dd8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564f1d4f6d48 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564f1d4f6d00 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564f1d4f6ce8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564f1d4f6ca8 <col:106> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564f1d4f6d30 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564f1d4f6d18 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564f1d4f6cc8 <col:124> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564f1d4f6da8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564f1d4f6d68 <col:141> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564f1d4f6dc0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564f1d4f6d88 <col:153> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x564f1d4f7380 <line:780:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f6e90 <col:3> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x564f1d4f7350 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564f1d4f7320 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564f1d4f7308 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564f1d4f6eb0 <col:15> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564f1d4f7338 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4f6ed0 <col:31> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564f1d4f72e8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564f1d4f72b8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564f1d4f70e0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564f1d4f7000 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564f1d4f6f28 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564f1d4f6f10 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564f1d4f6ef0 <col:45> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564f1d4f6fe0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564f1d4f6f78 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564f1d4f6f60 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564f1d4f6f40 <col:64> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x564f1d4f6fc8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564f1d4f6fb0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564f1d4f6f90 <col:83> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564f1d4f70c0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564f1d4f7058 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564f1d4f7040 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564f1d4f7020 <col:102> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x564f1d4f70a8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564f1d4f7090 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564f1d4f7070 <col:121> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564f1d4f72a0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564f1d4f7100 <col:138> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x564f1d4f7280 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564f1d4f7250 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564f1d4f71c0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564f1d4f7178 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564f1d4f7160 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564f1d4f7120 <col:151> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564f1d4f71a8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564f1d4f7190 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564f1d4f7140 <col:169> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x564f1d4f7220 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564f1d4f71e0 <col:186> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564f1d4f7238 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564f1d4f7200 <col:198> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x564f1d4f7890 <line:781:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f73a0 <col:3> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x564f1d4f7860 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564f1d4f7830 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564f1d4f7818 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564f1d4f73c0 <col:15> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564f1d4f7848 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4f73e0 <col:31> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x564f1d4f77f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564f1d4f77c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564f1d4f75f0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564f1d4f7510 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564f1d4f7438 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564f1d4f7420 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564f1d4f7400 <col:45> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564f1d4f74f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564f1d4f7488 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564f1d4f7470 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564f1d4f7450 <col:64> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x564f1d4f74d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564f1d4f74c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564f1d4f74a0 <col:83> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564f1d4f75d0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564f1d4f7568 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564f1d4f7550 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564f1d4f7530 <col:102> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x564f1d4f75b8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564f1d4f75a0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564f1d4f7580 <col:121> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564f1d4f77b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564f1d4f7610 <col:138> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x564f1d4f7790 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564f1d4f7760 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564f1d4f76d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564f1d4f7688 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564f1d4f7670 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564f1d4f7630 <col:151> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564f1d4f76b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564f1d4f76a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564f1d4f7650 <col:169> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x564f1d4f7730 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564f1d4f76f0 <col:186> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564f1d4f7748 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564f1d4f7710 <col:198> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x564f1d4f7e58 <line:782:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f78b0 <col:3> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f7e40 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4f7e10 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564f1d4f7dc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f7db0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f78d0 <col:20> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4f7df8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f7de0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f78f0 <col:36> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564f1d4f7d90 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564f1d4f7d60 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564f1d4f7b00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564f1d4f7a20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564f1d4f7948 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564f1d4f7930 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564f1d4f7910 <col:55> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564f1d4f7a00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564f1d4f7998 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564f1d4f7980 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564f1d4f7960 <col:74> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564f1d4f79e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564f1d4f79d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564f1d4f79b0 <col:93> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564f1d4f7ae0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564f1d4f7a78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564f1d4f7a60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564f1d4f7a40 <col:112> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564f1d4f7ac8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564f1d4f7ab0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564f1d4f7a90 <col:131> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564f1d4f7d48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564f1d4f7d30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564f1d4f7b20 <col:148> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564f1d4f7d10 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564f1d4f7ce0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564f1d4f7c00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564f1d4f7bb8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564f1d4f7ba0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564f1d4f7b60 <col:166> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564f1d4f7be8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564f1d4f7bd0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564f1d4f7b80 <col:184> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564f1d4f7c98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564f1d4f7c50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564f1d4f7c20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564f1d4f7cc8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564f1d4f7cb0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564f1d4f7c78 <col:212> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564f1d4f8420 <line:783:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f7e78 <col:3> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f8408 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4f83d8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564f1d4f8390 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f8378 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f7e98 <col:20> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4f83c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f83a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f7eb8 <col:36> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564f1d4f8358 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564f1d4f8328 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564f1d4f80c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564f1d4f7fe8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564f1d4f7f10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564f1d4f7ef8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564f1d4f7ed8 <col:55> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564f1d4f7fc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564f1d4f7f60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564f1d4f7f48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564f1d4f7f28 <col:74> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564f1d4f7fb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564f1d4f7f98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564f1d4f7f78 <col:93> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564f1d4f80a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564f1d4f8040 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564f1d4f8028 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564f1d4f8008 <col:112> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564f1d4f8090 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564f1d4f8078 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564f1d4f8058 <col:131> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564f1d4f8310 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564f1d4f82f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564f1d4f80e8 <col:148> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564f1d4f82d8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564f1d4f82a8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564f1d4f81a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564f1d4f8160 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564f1d4f8148 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564f1d4f8108 <col:166> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564f1d4f8190 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564f1d4f8178 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564f1d4f8128 <col:184> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564f1d4f8278 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564f1d4f81f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564f1d4f81c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564f1d4f8290 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564f1d4f8250 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564f1d4f8220 <col:219> 'int' 0
|   |-BinaryOperator 0x564f1d4f89c8 <line:784:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f8440 <col:3> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f89b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4f8980 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564f1d4f8938 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f8920 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f8460 <col:20> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4f8968 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f8950 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f8480 <col:36> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x564f1d4f8900 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564f1d4f88d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564f1d4f8690 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564f1d4f85b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564f1d4f84d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564f1d4f84c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564f1d4f84a0 <col:55> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564f1d4f8590 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564f1d4f8528 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564f1d4f8510 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564f1d4f84f0 <col:74> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564f1d4f8578 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564f1d4f8560 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564f1d4f8540 <col:93> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564f1d4f8670 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564f1d4f8608 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564f1d4f85f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564f1d4f85d0 <col:112> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564f1d4f8658 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564f1d4f8640 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564f1d4f8620 <col:131> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564f1d4f88b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564f1d4f88a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564f1d4f86b0 <col:148> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x564f1d4f8880 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564f1d4f8850 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564f1d4f8770 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564f1d4f8728 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564f1d4f8710 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564f1d4f86d0 <col:166> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564f1d4f8758 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564f1d4f8740 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564f1d4f86f0 <col:184> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564f1d4f8808 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564f1d4f87c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564f1d4f8790 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564f1d4f8838 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564f1d4f8820 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564f1d4f87e8 <col:212> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564f1d4f8fa8 <line:785:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f89e8 <col:3> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f8f90 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4f8f60 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564f1d4f8f18 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f8f00 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f8a08 <col:20> '_Bool' lvalue Var 0x564f1d4f2550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4f8f48 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564f1d4f8f30 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564f1d4f8a28 <col:36> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x564f1d4f8ee0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564f1d4f8eb0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564f1d4f8c50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564f1d4f8b70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564f1d4f8a80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564f1d4f8a68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564f1d4f8a48 <col:55> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564f1d4f8b38 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564f1d4f8ad0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564f1d4f8ab8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564f1d4f8a98 <col:74> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564f1d4f8b20 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564f1d4f8b08 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564f1d4f8ae8 <col:93> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564f1d4f8c30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564f1d4f8bc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564f1d4f8bb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564f1d4f8b90 <col:112> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564f1d4f8c18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564f1d4f8c00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564f1d4f8be0 <col:131> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564f1d4f8e98 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564f1d4f8e80 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564f1d4f8c70 <col:148> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x564f1d4f8e60 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564f1d4f8e30 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564f1d4f8d30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564f1d4f8ce8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564f1d4f8cd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564f1d4f8c90 <col:166> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564f1d4f8d18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564f1d4f8d00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564f1d4f8cb0 <col:184> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564f1d4f8e00 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564f1d4f8d80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564f1d4f8d50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564f1d4f8e18 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564f1d4f8dd8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564f1d4f8da8 <col:219> 'int' 0
|   |-BinaryOperator 0x564f1d4f9020 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f8fc8 <col:3> 'int' lvalue Var 0x564f1d4f16c0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x564f1d4f9008 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f8fe8 <col:25> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   |-BinaryOperator 0x564f1d4f9150 <line:787:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f9040 <col:3> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   | `-ConditionalOperator 0x564f1d4f9120 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564f1d4f90d8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564f1d4f90c0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564f1d4f9060 <col:7> '_Bool' lvalue Var 0x564f1d4f1c18 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564f1d4f90f0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4f9080 <col:25> 'int' lvalue Var 0x564f1d4f1c98 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564f1d4f9108 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564f1d4f90a0 <col:37> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   |-BinaryOperator 0x564f1d4f91e8 <line:788:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f9170 <col:3> '_Bool' lvalue Var 0x564f1d4f1c18 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564f1d4f91c0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564f1d4f9190 <col:28> 'int' 0
|   |-CallExpr 0x564f1d4f9240 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f9228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f9208 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4f9298 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f9280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f9260 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f9310 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f92b8 <col:3> 'int' lvalue Var 0x564f1d4f17e0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x564f1d4f92f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564f1d4f92d8 <col:25> 'int' lvalue Var 0x564f1d4f2440 'z' 'int'
|   |-CallExpr 0x564f1d4f9368 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f9350 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f9330 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4f93c0 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4f93a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4f9388 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4f96a8 <line:794:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564f1d4f93e0 <col:3> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   | `-ConditionalOperator 0x564f1d4f9678 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564f1d4f94a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564f1d4f9458 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564f1d4f9440 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564f1d4f9400 <col:7> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564f1d4f9488 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564f1d4f9470 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564f1d4f9420 <col:25> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564f1d4f9660 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4f94c0 <col:42> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564f1d4f9640 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564f1d4f9610 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564f1d4f9580 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564f1d4f9538 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564f1d4f9520 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564f1d4f94e0 <col:55> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564f1d4f9568 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564f1d4f9550 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564f1d4f9500 <col:73> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564f1d4f95e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564f1d4f95a0 <col:90> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564f1d4f95f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564f1d4f95c0 <col:102> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
|   |-BinaryOperator 0x564f1d4f98b0 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f96c8 <col:3> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f9898 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4f9868 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564f1d4f9788 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564f1d4f9740 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564f1d4f9728 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564f1d4f96e8 <col:20> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564f1d4f9770 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564f1d4f9758 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564f1d4f9708 <col:38> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4f9820 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564f1d4f97d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564f1d4f97a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564f1d4f9850 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564f1d4f9838 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564f1d4f9800 <col:66> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564f1d4f9bc8 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f98d0 <col:3> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f9bb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4f9b80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564f1d4f9a70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564f1d4f9990 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564f1d4f9948 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564f1d4f9930 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564f1d4f98f0 <col:20> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564f1d4f9978 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564f1d4f9960 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564f1d4f9910 <col:38> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564f1d4f9a50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564f1d4f9a08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564f1d4f99f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564f1d4f99b0 <col:56> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564f1d4f9a38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564f1d4f9a20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564f1d4f99d0 <col:74> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4f9b08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564f1d4f9ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564f1d4f9a90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564f1d4f9b38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564f1d4f9b20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564f1d4f9ae8 <col:102> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564f1d4f9dd0 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f9be8 <col:3> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4f9db8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4f9d88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564f1d4f9ca8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564f1d4f9c60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564f1d4f9c48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564f1d4f9c08 <col:20> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564f1d4f9c90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564f1d4f9c78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564f1d4f9c28 <col:38> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4f9d40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564f1d4f9cf8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564f1d4f9cc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564f1d4f9d70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564f1d4f9d58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564f1d4f9d20 <col:66> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564f1d4fa0b8 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564f1d4f9df0 <col:3> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564f1d4fa0a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564f1d4fa070 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564f1d4f9f90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564f1d4f9eb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564f1d4f9e68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564f1d4f9e50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564f1d4f9e10 <col:20> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564f1d4f9e98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564f1d4f9e80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564f1d4f9e30 <col:38> '_Bool' lvalue Var 0x564f1d4f1e78 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564f1d4f9f70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564f1d4f9f28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564f1d4f9f10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564f1d4f9ed0 <col:56> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564f1d4f9f58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564f1d4f9f40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564f1d4f9ef0 <col:74> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564f1d4fa028 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564f1d4f9fe0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564f1d4f9fb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564f1d4fa058 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564f1d4fa040 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564f1d4fa008 <col:102> '_Bool' lvalue Var 0x564f1d4f2058 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564f1d4fa110 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4fa0f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4fa0d8 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564f1d4fa168 <line:800:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564f1d4fa150 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4fa130 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564f1d4fa220 <line:801:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564f1d4fa188 <col:3> 'int' lvalue Var 0x564f1d4f1120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564f1d4fa200 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564f1d4fa1e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564f1d4fa1a8 <col:22> 'int' lvalue Var 0x564f1d4f1120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564f1d4fa1c8 <col:41> 'int' 1
|   |-CallExpr 0x564f1d4fa278 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564f1d4fa260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564f1d4fa240 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564f1d4fa2f0 <line:803:3, col:36>
|     `-CallExpr 0x564f1d4fa2d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564f1d4fa2b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564f1d4fa298 <col:10> 'void *(void)' Function 0x564f1d497958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564f1d4fa480 prev 0x564f1d4f0e68 <line:805:1, line:807:1> line:805:6 fence 'void ()'
| `-CompoundStmt 0x564f1d4fa520 <line:806:1, line:807:1>
|-FunctionDecl 0x564f1d4fa550 prev 0x564f1d4f0f28 <line:808:1, line:810:1> line:808:6 isync 'void ()'
| `-CompoundStmt 0x564f1d4fa5f0 <line:809:1, line:810:1>
|-FunctionDecl 0x564f1d4fa620 prev 0x564f1d4f0fe8 <line:811:1, line:813:1> line:811:6 lwfence 'void ()'
| `-CompoundStmt 0x564f1d4fa6c0 <line:812:1, line:813:1>
`-FunctionDecl 0x564f1d4fa728 <line:814:1, line:838:1> line:814:5 main 'int ()'
  `-CompoundStmt 0x564f1d4fc568 <line:815:1, line:838:1>
    |-DeclStmt 0x564f1d4fa840 <line:816:3, col:16>
    | `-VarDecl 0x564f1d4fa7d8 <col:3, col:13> col:13 used t19 'pthread_t':'unsigned long'
    |-CallExpr 0x564f1d4faa48 <line:817:3, col:52> 'int'
    | |-ImplicitCastExpr 0x564f1d4faa30 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564f1d4fa858 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564f1d4d8488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564f1d4fa898 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564f1d4fa878 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564f1d4fa7d8 't19' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564f1d4faa88 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564f1d4fa910 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x564f1d4fa8e8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564f1d4fa8b0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x564f1d4faaa0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564f1d4fa930 <col:37> 'void *(void *)' Function 0x564f1d4f2668 'P0' 'void *(void *)'
    | `-ParenExpr 0x564f1d4fa9b0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x564f1d4fa988 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564f1d4fa950 <col:50> 'int' 0
    |-DeclStmt 0x564f1d4fab30 <line:818:3, col:16>
    | `-VarDecl 0x564f1d4faac8 <col:3, col:13> col:13 used t20 'pthread_t':'unsigned long'
    |-CallExpr 0x564f1d4fad00 <line:819:3, col:52> 'int'
    | |-ImplicitCastExpr 0x564f1d4face8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564f1d4fab48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564f1d4d8488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564f1d4fabb0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564f1d4fab90 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564f1d4faac8 't20' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564f1d4fad40 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564f1d4fac28 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x564f1d4fac00 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564f1d4fabc8 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x564f1d4fad58 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564f1d4fac48 <col:37> 'void *(void *)' Function 0x564f1d4f2ea0 'P1' 'void *(void *)'
    | `-ParenExpr 0x564f1d4facc8 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x564f1d4faca0 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564f1d4fac68 <col:50> 'int' 0
    |-DeclStmt 0x564f1d4fade8 <line:820:3, col:16>
    | `-VarDecl 0x564f1d4fad80 <col:3, col:13> col:13 used t21 'pthread_t':'unsigned long'
    |-CallExpr 0x564f1d4faf90 <line:821:3, col:52> 'int'
    | |-ImplicitCastExpr 0x564f1d4faf78 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564f1d4fae00 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564f1d4d8488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564f1d4fae40 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564f1d4fae20 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564f1d4fad80 't21' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564f1d4fafd0 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564f1d4faeb8 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x564f1d4fae90 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564f1d4fae58 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x564f1d4fafe8 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564f1d4faed8 <col:37> 'void *(void *)' Function 0x564f1d4f6050 'P2' 'void *(void *)'
    | `-ParenExpr 0x564f1d4faf58 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x564f1d4faf30 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564f1d4faef8 <col:50> 'int' 0
    |-CallExpr 0x564f1d4fb038 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564f1d4fb020 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564f1d4fb000 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564f1d4fb108 <line:823:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564f1d4fb058 <col:3> '_Bool' lvalue Var 0x564f1d4f1878 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564f1d4fb0f0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564f1d4fb0d0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564f1d4fb0b8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564f1d4fb078 <col:21> 'int' lvalue Var 0x564f1d4f1120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564f1d4fb098 <col:41> 'int' 3
    |-CallExpr 0x564f1d4fb160 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564f1d4fb148 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564f1d4fb128 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564f1d4fb1d8 <line:825:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564f1d4fb1c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564f1d4fb180 <col:3> 'void (int)' Function 0x564f1d497790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564f1d4fb218 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564f1d4fb200 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564f1d4fb1a0 <col:21> '_Bool' lvalue Var 0x564f1d4f1878 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564f1d4fb268 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564f1d4fb250 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564f1d4fb230 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564f1d4fb550 <line:827:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564f1d4fb288 <col:3> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
    | `-ConditionalOperator 0x564f1d4fb520 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564f1d4fb348 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564f1d4fb300 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564f1d4fb2e8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564f1d4fb2a8 <col:7> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564f1d4fb330 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564f1d4fb318 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564f1d4fb2c8 <col:25> '_Bool' lvalue Var 0x564f1d4f1d10 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564f1d4fb508 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564f1d4fb368 <col:42> 'int' lvalue Var 0x564f1d4f21d0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x564f1d4fb4e8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564f1d4fb4b8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564f1d4fb428 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564f1d4fb3e0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564f1d4fb3c8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564f1d4fb388 <col:55> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564f1d4fb410 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564f1d4fb3f8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564f1d4fb3a8 <col:73> '_Bool' lvalue Var 0x564f1d4f1ef0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564f1d4fb488 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564f1d4fb448 <col:90> 'int' lvalue Var 0x564f1d4f22c8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564f1d4fb4a0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564f1d4fb468 <col:102> 'int' lvalue Var 0x564f1d4f1b80 'y' 'int'
    |-BinaryOperator 0x564f1d4fb758 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564f1d4fb570 <col:3> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564f1d4fb740 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564f1d4fb710 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564f1d4fb630 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564f1d4fb5e8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564f1d4fb5d0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564f1d4fb590 <col:20> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564f1d4fb618 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564f1d4fb600 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564f1d4fb5b0 <col:38> '_Bool' lvalue Var 0x564f1d4f1d10 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564f1d4fb6c8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564f1d4fb680 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564f1d4fb650 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564f1d4fb6f8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564f1d4fb6e0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564f1d4fb6a8 <col:66> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564f1d4fba40 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564f1d4fb778 <col:3> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564f1d4fba28 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564f1d4fb9f8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564f1d4fb918 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564f1d4fb838 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564f1d4fb7f0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564f1d4fb7d8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564f1d4fb798 <col:20> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564f1d4fb820 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564f1d4fb808 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564f1d4fb7b8 <col:38> '_Bool' lvalue Var 0x564f1d4f1d10 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564f1d4fb8f8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564f1d4fb8b0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564f1d4fb898 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564f1d4fb858 <col:56> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564f1d4fb8e0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564f1d4fb8c8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564f1d4fb878 <col:74> '_Bool' lvalue Var 0x564f1d4f1ef0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564f1d4fb9b0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564f1d4fb968 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564f1d4fb938 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564f1d4fb9e0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564f1d4fb9c8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564f1d4fb990 <col:102> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564f1d4fbc78 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564f1d4fba60 <col:3> '_Bool' lvalue Var 0x564f1d4f1d10 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564f1d4fbc60 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564f1d4fbc30 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564f1d4fbb20 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564f1d4fbad8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564f1d4fbac0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564f1d4fba80 <col:20> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564f1d4fbb08 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564f1d4fbaf0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564f1d4fbaa0 <col:38> '_Bool' lvalue Var 0x564f1d4f1d10 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564f1d4fbbe8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564f1d4fbba0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564f1d4fbb40 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564f1d4fbc18 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564f1d4fbc00 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564f1d4fbbc8 <col:66> '_Bool' lvalue Var 0x564f1d4f1d10 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564f1d4fbf60 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564f1d4fbc98 <col:3> '_Bool' lvalue Var 0x564f1d4f1ef0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564f1d4fbf48 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564f1d4fbf18 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564f1d4fbe38 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564f1d4fbd58 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564f1d4fbd10 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564f1d4fbcf8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564f1d4fbcb8 <col:20> '_Bool' lvalue Var 0x564f1d4f2248 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564f1d4fbd40 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564f1d4fbd28 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564f1d4fbcd8 <col:38> '_Bool' lvalue Var 0x564f1d4f1d10 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564f1d4fbe18 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564f1d4fbdd0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564f1d4fbdb8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564f1d4fbd78 <col:56> '_Bool' lvalue Var 0x564f1d4f2340 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564f1d4fbe00 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564f1d4fbde8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564f1d4fbd98 <col:74> '_Bool' lvalue Var 0x564f1d4f1ef0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564f1d4fbed0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564f1d4fbe88 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564f1d4fbe58 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564f1d4fbf00 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564f1d4fbee8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564f1d4fbeb0 <col:102> '_Bool' lvalue Var 0x564f1d4f1ef0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564f1d4fbfb8 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564f1d4fbfa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564f1d4fbf80 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564f1d4fc010 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564f1d4fbff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564f1d4fbfd8 <col:3> 'void ()' Function 0x564f1d497e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564f1d4fc410 <line:834:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x564f1d4fc030 <col:3> '_Bool' lvalue Var 0x564f1d4f18f0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564f1d4fc3f8 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564f1d4fc3e0 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564f1d4fc3c0 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x564f1d4fc3a0 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x564f1d4fc308 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x564f1d4fc270 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x564f1d4fc1d8 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x564f1d4fc140 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x564f1d4fc0a8 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x564f1d4fc090 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x564f1d4fc050 <col:23> 'int' lvalue Var 0x564f1d4f1240 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x564f1d4fc070 <col:46> 'int' 1
    |         | | | | `-BinaryOperator 0x564f1d4fc120 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x564f1d4fc108 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x564f1d4fc0c8 <col:51> 'int' lvalue Var 0x564f1d4f1360 '__unbuffered_p0_EBX' 'int'
    |         | | | |   `-IntegerLiteral 0x564f1d4fc0e8 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x564f1d4fc1b8 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x564f1d4fc1a0 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x564f1d4fc160 <col:79> 'int' lvalue Var 0x564f1d4f1480 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x564f1d4fc180 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x564f1d4fc250 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x564f1d4fc238 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x564f1d4fc1f8 <col:107> 'int' lvalue Var 0x564f1d4f15a0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x564f1d4fc218 <col:130> 'int' 0
    |         | `-BinaryOperator 0x564f1d4fc2e8 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564f1d4fc2d0 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564f1d4fc290 <col:135> 'int' lvalue Var 0x564f1d4f16c0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x564f1d4fc2b0 <col:158> 'int' 1
    |         `-BinaryOperator 0x564f1d4fc380 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x564f1d4fc368 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564f1d4fc328 <col:163> 'int' lvalue Var 0x564f1d4f17e0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x564f1d4fc348 <col:186> 'int' 0
    |-CallExpr 0x564f1d4fc468 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564f1d4fc450 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564f1d4fc430 <col:3> 'void ()' Function 0x564f1d497f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564f1d4fc4e0 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564f1d4fc4c8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564f1d4fc488 <col:3> 'void (int)' Function 0x564f1d497bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564f1d4fc520 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564f1d4fc508 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564f1d4fc4a8 <col:21> '_Bool' lvalue Var 0x564f1d4f18f0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564f1d4fc558 <line:837:3, col:10>
      `-IntegerLiteral 0x564f1d4fc538 <col:10> 'int' 0
