TranslationUnitDecl 0x5576ef616e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5576ef6176d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5576ef6173b0 '__int128'
|-TypedefDecl 0x5576ef617748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5576ef6173d0 'unsigned __int128'
|-TypedefDecl 0x5576ef617a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5576ef617820 'struct __NSConstantString_tag'
|   `-Record 0x5576ef6177a0 '__NSConstantString_tag'
|-TypedefDecl 0x5576ef617af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5576ef617ab0 'char *'
|   `-BuiltinType 0x5576ef616eb0 'char'
|-TypedefDecl 0x5576ef656650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5576ef617d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5576ef617bd0 'struct __va_list_tag'
|     `-Record 0x5576ef617b50 '__va_list_tag'
|-FunctionDecl 0x5576ef656790 <./split_1/mix043_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5576ef6566c0 <col:31> col:34 'int'
|-FunctionDecl 0x5576ef656958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5576ef656a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5576ef656bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5576ef656b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5576ef656df8 <col:40, col:99>
|   |-IfStmt 0x5576ef656dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5576ef656ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5576ef656c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5576ef656c70 <col:47> 'int' lvalue ParmVar 0x5576ef656b38 'expression' 'int'
|   | `-CompoundStmt 0x5576ef656db0 <col:59, col:88>
|   |   `-LabelStmt 0x5576ef656d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5576ef656d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5576ef656d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5576ef656cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5576ef656a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5576ef656de0 <col:89>
|   `-ReturnStmt 0x5576ef656de8 <col:91>
|-FunctionDecl 0x5576ef656e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5576ef656f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5576ef657280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5576ef656fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5576ef657038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5576ef6570b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5576ef657138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5576ef657340 <line:10:22>
|-FunctionDecl 0x5576ef67d390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5576ef6573b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5576ef657430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5576ef6574b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5576ef657530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5576ef67d450 <line:13:22>
|-FunctionDecl 0x5576ef67d700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5576ef67d4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5576ef67d540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5576ef67d5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5576ef67d7b8 <line:15:22>
|-TypedefDecl 0x5576ef67d828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5576ef616f70 'unsigned char'
|-TypedefDecl 0x5576ef67d898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5576ef616f90 'unsigned short'
|-TypedefDecl 0x5576ef67d908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5576ef616fb0 'unsigned int'
|-TypedefDecl 0x5576ef67d978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67d9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5576ef616ed0 'signed char'
|-TypedefDecl 0x5576ef67da58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5576ef616f70 'unsigned char'
|-TypedefDecl 0x5576ef67dac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5576ef616ef0 'short'
|-TypedefDecl 0x5576ef67db38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5576ef616f90 'unsigned short'
|-TypedefDecl 0x5576ef67dba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5576ef616f10 'int'
|-TypedefDecl 0x5576ef67dc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5576ef616fb0 'unsigned int'
|-TypedefDecl 0x5576ef67dc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67dcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67dd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67ddd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67de48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67deb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5576ef616fb0 'unsigned int'
|-TypedefDecl 0x5576ef67df28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5576ef616fb0 'unsigned int'
|-TypedefDecl 0x5576ef67df98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67e008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67e078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5576ef616fb0 'unsigned int'
|-TypedefDecl 0x5576ef67e0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67e158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67e1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67e238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5576ef616f10 'int'
|-RecordDecl 0x5576ef67e290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5576ef67e408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5576ef67e4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5576ef67e460 'struct __fsid_t' sugar
|   `-RecordType 0x5576ef67e310 '__fsid_t'
|     `-Record 0x5576ef67e290 ''
|-TypedefDecl 0x5576ef67e548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67e5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67e628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67e698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5576ef616fb0 'unsigned int'
|-TypedefDecl 0x5576ef67e708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67e778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5576ef616fb0 'unsigned int'
|-TypedefDecl 0x5576ef67e7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67e858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5576ef616f10 'int'
|-TypedefDecl 0x5576ef67e8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5576ef616f10 'int'
|-TypedefDecl 0x5576ef67e938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5576ef616f10 'int'
|-TypedefDecl 0x5576ef67e9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5576ef617630 'void *'
|   `-BuiltinType 0x5576ef616e70 'void'
|-TypedefDecl 0x5576ef67ea18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67ea88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67eaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67eb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67ebd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67ec48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67ecb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67ed28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67ed98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67ee08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67ee78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef67ef08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5576ef67eed0 '__off64_t' sugar
|   |-Typedef 0x5576ef67e1c8 '__off64_t'
|   `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67f000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5576ef67efc0 '__quad_t *'
|   `-TypedefType 0x5576ef67ef60 '__quad_t' sugar
|     |-Typedef 0x5576ef67dd68 '__quad_t'
|     `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67f070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5576ef617ab0 'char *'
|   `-BuiltinType 0x5576ef616eb0 'char'
|-TypedefDecl 0x5576ef67f0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef67f150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5576ef616fb0 'unsigned int'
|-FunctionDecl 0x5576ef67f298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5576ef67f1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5576ef6805e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5576ef6805d8 <line:72:3, col:34>
|     `-CallExpr 0x5576ef680598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5576ef680580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5576ef680510 <col:10> '<builtin fn type>' Function 0x5576ef680380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5576ef6805c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5576ef680530 <col:29> 'unsigned int' lvalue ParmVar 0x5576ef67f1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5576ef680380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5576ef680420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5576ef680490 <col:10> Implicit
| `-ConstAttr 0x5576ef6804e8 <col:10> Implicit
|-FunctionDecl 0x5576ef680740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5576ef680638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5576ef680a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5576ef680a48 <line:77:3, col:34>
|     `-CallExpr 0x5576ef680a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5576ef6809f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5576ef680978 <col:10> '<builtin fn type>' Function 0x5576ef6807e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5576ef680a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5576ef680998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5576ef680638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5576ef6807e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5576ef680888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5576ef6808f8 <col:10> Implicit
| `-ConstAttr 0x5576ef680950 <col:10> Implicit
|-TypedefDecl 0x5576ef680a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-TypedefDecl 0x5576ef680b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5576ef680ae0 '__time_t' sugar
|   |-Typedef 0x5576ef67e708 '__time_t'
|   `-BuiltinType 0x5576ef616f30 'long'
|-RecordDecl 0x5576ef680b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5576ef680c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5576ef680cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5576ef680d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5576ef680d10 '__pid_t' sugar
|   |-Typedef 0x5576ef67e238 '__pid_t'
|   `-BuiltinType 0x5576ef616f10 'int'
|-RecordDecl 0x5576ef680da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5576ef680e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5576ef680eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5576ef680f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5576ef680fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-RecordDecl 0x5576ef681030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5576ef6812c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5576ef6823a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5576ef681310 'struct cpu_set_t' sugar
|   `-RecordType 0x5576ef6810b0 'cpu_set_t'
|     `-Record 0x5576ef681030 ''
|-FunctionDecl 0x5576ef682678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5576ef682448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5576ef682550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5576ef682728 <line:107:19>
|-FunctionDecl 0x5576ef682900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5576ef682790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5576ef6829a8 <col:69>
|-FunctionDecl 0x5576ef682b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5576ef682a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5576ef682bc8 <col:64>
|-FunctionDecl 0x5576ef682e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5576ef682c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5576ef682d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5576ef682f38 <line:113:22>
|-FunctionDecl 0x5576ef6831b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5576ef682fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5576ef683098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5576ef683268 <col:88>
|-FunctionDecl 0x5576ef683588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5576ef6832d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5576ef6833b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5576ef683440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5576ef683640 <col:62>
|-FunctionDecl 0x5576ef6837b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5576ef6836a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5576ef683860 <col:63>
|-FunctionDecl 0x5576ef683988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5576ef683a28 <col:47>
|-FunctionDecl 0x5576ef683b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5576ef683a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5576ef683bd8 <col:69>
|-FunctionDecl 0x5576ef683ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5576ef683c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5576ef683d88 <col:69>
|-FunctionDecl 0x5576ef684048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5576ef683df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5576ef683f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5576ef6840f8 <col:88>
|-TypedefDecl 0x5576ef684188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5576ef684150 '__clock_t' sugar
|   |-Typedef 0x5576ef67e548 '__clock_t'
|   `-BuiltinType 0x5576ef616f30 'long'
|-TypedefDecl 0x5576ef684218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5576ef6841e0 '__clockid_t' sugar
|   |-Typedef 0x5576ef67e938 '__clockid_t'
|   `-BuiltinType 0x5576ef616f10 'int'
|-TypedefDecl 0x5576ef6842a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5576ef684270 '__timer_t' sugar
|   |-Typedef 0x5576ef67e9a8 '__timer_t'
|   `-PointerType 0x5576ef617630 'void *'
|     `-BuiltinType 0x5576ef616e70 'void'
|-RecordDecl 0x5576ef684300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5576ef6843d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5576ef684440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5576ef6844a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5576ef684510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5576ef684578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5576ef6845e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5576ef684648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5576ef6846b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5576ef684718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5576ef684780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5576ef6847e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5576ef684838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5576ef684908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5576ef684978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5576ef684a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5576ef684bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5576ef684c90 <col:45>
|-FunctionDecl 0x5576ef684e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5576ef684d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5576ef684f18 <col:54>
|-FunctionDecl 0x5576ef685118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5576ef684f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5576ef684ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5576ef6851c8 <line:157:22>
| `-ConstAttr 0x5576ef685220 <col:63>
|-FunctionDecl 0x5576ef686050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5576ef685318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5576ef6860f8 <col:56>
|-FunctionDecl 0x5576ef6864a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5576ef686168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5576ef6861e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5576ef686260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5576ef686358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5576ef686560 <col:54>
|-RecordDecl 0x5576ef6865b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5576ef686668 parent 0x5576ef616e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5576ef6868c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5576ef686968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5576ef6869d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5576ef686a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5576ef686b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5576ef686c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5576ef686bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5576ef686b80 'struct __locale_struct' sugar
|     `-RecordType 0x5576ef686640 'struct __locale_struct'
|       `-Record 0x5576ef6865b8 '__locale_struct'
|-TypedefDecl 0x5576ef686cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5576ef686cc0 '__locale_t' sugar
|   |-Typedef 0x5576ef686c48 '__locale_t'
|   `-PointerType 0x5576ef686bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5576ef686b80 'struct __locale_struct' sugar
|       `-RecordType 0x5576ef686640 'struct __locale_struct'
|         `-Record 0x5576ef6865b8 '__locale_struct'
|-FunctionDecl 0x5576ef688110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5576ef686d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5576ef686de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5576ef686e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5576ef686ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5576ef686f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5576ef6881d8 <col:40>
|-FunctionDecl 0x5576ef6883c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5576ef6882a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5576ef688470 <col:66>
|-FunctionDecl 0x5576ef688580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5576ef6884d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5576ef688628 <col:69>
|-FunctionDecl 0x5576ef688858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5576ef688690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5576ef688720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5576ef688908 <col:52>
|-FunctionDecl 0x5576ef688ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5576ef688970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5576ef688a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5576ef688b60 <col:55>
|-FunctionDecl 0x5576ef688cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5576ef688be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5576ef688da0 <col:62>
|-FunctionDecl 0x5576ef688f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5576ef688e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5576ef688fc0 <col:60>
|-FunctionDecl 0x5576ef6892b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5576ef689118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5576ef689198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5576ef689368 <col:44>
|-FunctionDecl 0x5576ef689578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5576ef6893d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5576ef689450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5576ef689628 <col:49>
|-VarDecl 0x5576ef689728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5576ef6897a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5576ef689828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5576ef6898f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5576ef689a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5576ef689ac0 <col:42>
|-VarDecl 0x5576ef689b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5576ef689bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5576ef689d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5576ef689c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5576ef689de0 <col:57>
|-FunctionDecl 0x5576ef689ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5576ef689e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5576ef689f98 <col:56>
|-FunctionDecl 0x5576ef68a0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5576ef68a018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5576ef68a178 <col:59>
|-FunctionDecl 0x5576ef68a280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5576ef68a1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5576ef68a328 <col:48>
| `-ConstAttr 0x5576ef68a380 <col:89>
|-FunctionDecl 0x5576ef68a5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5576ef68a438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5576ef68a4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5576ef68a848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5576ef68a6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5576ef68a768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5576ef68a8f8 <col:88>
|-FunctionDecl 0x5576ef68aa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5576ef68a960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5576ef68a9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5576ef68ab40 <col:88>
|-FunctionDecl 0x5576ef68ad58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5576ef68aba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5576ef68ac38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5576ef68ae08 <line:208:22>
|-FunctionDecl 0x5576ef68b178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5576ef68ae70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5576ef68aef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5576ef68af80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5576ef68b010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5576ef68b478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5576ef68b278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5576ef68b350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5576ef68b528 <col:85>
|-FunctionDecl 0x5576ef68b918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5576ef68b590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5576ef68b6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5576ef68b7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5576ef68b9d0 <col:52>
|-FunctionDecl 0x5576ef68bb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5576ef68ba38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5576ef68bbf0 <col:61>
|-FunctionDecl 0x5576ef68c0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5576ef68bc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5576ef68bcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5576ef68be08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5576ef68bef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5576ef68c1b0 <col:62>
|-FunctionDecl 0x5576ef68c3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5576ef68c218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5576ef68c2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5576ef68c478 <line:221:22>
|-FunctionDecl 0x5576ef68c578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5576ef68c4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5576ef68c620 <col:65>
|-TypedefDecl 0x5576ef68c690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5576ef616fd0 'unsigned long'
|-RecordDecl 0x5576ef68c6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5576ef68c830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5576ef68c898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5576ef68c948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5576ef68c8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5576ef68c770 'union pthread_attr_t'
|     `-Record 0x5576ef68c6e8 'pthread_attr_t'
|-RecordDecl 0x5576ef68c9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5576ef68cb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5576ef68cb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5576ef68cc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5576ef68cbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5576ef68ca20 'struct __pthread_internal_list'
|     `-Record 0x5576ef68c9a0 '__pthread_internal_list'
|-RecordDecl 0x5576ef68ccb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5576ef68cd58 parent 0x5576ef616e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5576ef68ce30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5576ef68ce98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5576ef68cf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5576ef68cf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5576ef68cfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5576ef68d038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5576ef691110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5576ef6911c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5576ef6912b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5576ef691318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5576ef6914a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5576ef691440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5576ef68cd30 'pthread_mutex_t'
|     `-Record 0x5576ef68ccb0 ''
|-RecordDecl 0x5576ef691510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5576ef691650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5576ef6916b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5576ef691770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5576ef691710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5576ef691590 'pthread_mutexattr_t'
|     `-Record 0x5576ef691510 ''
|-RecordDecl 0x5576ef6917e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5576ef691888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5576ef691950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5576ef6919b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5576ef691a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5576ef691a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5576ef691af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5576ef691b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5576ef691bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5576ef691c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5576ef691ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_1/mix043_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_1/mix043_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5576ef691dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5576ef691e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5576ef691f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5576ef691f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5576ef691860 'pthread_cond_t'
|     `-Record 0x5576ef6917e0 ''
|-RecordDecl 0x5576ef691fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5576ef693130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5576ef693198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5576ef693250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5576ef6931f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5576ef692060 'pthread_condattr_t'
|     `-Record 0x5576ef691fe0 ''
|-TypedefDecl 0x5576ef6932d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5576ef616fb0 'unsigned int'
|-TypedefDecl 0x5576ef693348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5576ef616f10 'int'
|-RecordDecl 0x5576ef6933a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5576ef693448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5576ef693510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5576ef693578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5576ef6935e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5576ef693648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5576ef6936b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5576ef693718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5576ef693780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5576ef6937e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5576ef693850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5576ef6938b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5576ef693920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5576ef6939d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_1/mix043_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_1/mix043_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5576ef693a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5576ef693ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5576ef693c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5576ef693bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5576ef693420 'pthread_rwlock_t'
|     `-Record 0x5576ef6933a0 ''
|-RecordDecl 0x5576ef693ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5576ef693de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5576ef693e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5576ef693f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5576ef693ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5576ef693d20 'pthread_rwlockattr_t'
|     `-Record 0x5576ef693ca0 ''
|-TypedefDecl 0x5576ef693f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5576ef616f14 'volatile int' volatile
|   `-BuiltinType 0x5576ef616f10 'int'
|-RecordDecl 0x5576ef693fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5576ef695140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5576ef6951a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5576ef695260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5576ef695200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5576ef694060 'pthread_barrier_t'
|     `-Record 0x5576ef693fe0 ''
|-RecordDecl 0x5576ef6952d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5576ef6953d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5576ef695438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5576ef6954f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5576ef695490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5576ef695350 'pthread_barrierattr_t'
|     `-Record 0x5576ef6952d0 ''
|-TypedefDecl 0x5576ef695608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5576ef6955a0 'long [8]' 8 
|   `-BuiltinType 0x5576ef616f30 'long'
|-EnumDecl 0x5576ef695660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5576ef695728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5576ef695778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5576ef6957c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5576ef695898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5576ef6958e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5576ef695938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5576ef695988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5576ef695a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5576ef6959f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5576ef6959d8 <col:26> 'int' EnumConstant 0x5576ef695898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5576ef695a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5576ef695a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5576ef695a60 <col:29> 'int' EnumConstant 0x5576ef6958e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5576ef695b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5576ef695b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5576ef695ae8 <col:30> 'int' EnumConstant 0x5576ef695938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5576ef695ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5576ef695b90 <col:27> 'int'
|     `-DeclRefExpr 0x5576ef695b70 <col:27> 'int' EnumConstant 0x5576ef695a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5576ef695bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5576ef695cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5576ef695d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5576ef695d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5576ef695d18 <col:30> 'int' EnumConstant 0x5576ef695cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5576ef695da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5576ef695e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5576ef695e10 <col:29> 'int'
|     `-DeclRefExpr 0x5576ef695df0 <col:29> 'int' EnumConstant 0x5576ef695da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5576ef695e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5576ef695f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5576ef695f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5576ef695fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5576ef696038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5576ef696150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5576ef6961a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5576ef6961f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5576ef696278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5576ef696260 <col:31> 'int'
|     `-DeclRefExpr 0x5576ef696240 <col:31> 'int' EnumConstant 0x5576ef696150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5576ef6962c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5576ef696398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5576ef6963e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5576ef696438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5576ef696508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5576ef696558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5576ef6965a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5576ef696678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5576ef6966c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5576ef696718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5576ef696958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5576ef6969c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5576ef696a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5576ef696b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5576ef696b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5576ef696c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5576ef696cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5576ef696d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5576ef696dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5576ef696e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5576ef697488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5576ef696f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5576ef697030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576ef697270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5576ef6972f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5576ef697548 <col:47>
| |-NonNullAttr 0x5576ef6975a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5576ef6975d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5576ef697700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5576ef697630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5576ef697958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5576ef6977b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5576ef697838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5576ef697b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5576ef697a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5576ef697bd0 <col:60>
|-FunctionDecl 0x5576ef697d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5576ef697dc0 <col:54>
| `-ConstAttr 0x5576ef697e18 <col:95>
|-FunctionDecl 0x5576ef697fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5576ef697e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5576ef697ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5576ef698098 <line:394:19>
| `-ConstAttr 0x5576ef6980f0 <col:60>
|-FunctionDecl 0x5576ef699b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5576ef6999d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5576ef699bb0 <col:71>
| `-NonNullAttr 0x5576ef699c08 <col:112, col:126> 1
|-FunctionDecl 0x5576ef699d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5576ef699c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5576ef699db8 <line:397:22>
| `-NonNullAttr 0x5576ef699e10 <col:63, col:77> 1
|-FunctionDecl 0x5576ef69a038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5576ef699e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5576ef699ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5576ef69a0e8 <line:400:22>
| `-NonNullAttr 0x5576ef69a140 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef69a348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5576ef69a188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576ef69a208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5576ef69a3f8 <line:403:22>
| `-NonNullAttr 0x5576ef69a450 <col:63, col:77> 1
|-FunctionDecl 0x5576ef69a6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5576ef69a498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5576ef69a540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5576ef69a758 <line:406:22>
| `-NonNullAttr 0x5576ef69a7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef69b9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5576ef69a7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576ef69a870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5576ef69ba98 <line:409:22>
| `-NonNullAttr 0x5576ef69baf0 <col:63, col:77> 1
|-FunctionDecl 0x5576ef69bd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5576ef69bb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576ef69bbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5576ef69bdd8 <line:412:22>
| `-NonNullAttr 0x5576ef69be30 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef69c068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5576ef69be78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576ef69bf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5576ef69c118 <col:37>
| `-NonNullAttr 0x5576ef69c170 <col:78, col:95> 1 2
|-FunctionDecl 0x5576ef69c358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef69c1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576ef69c238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5576ef69c408 <line:418:22>
| `-NonNullAttr 0x5576ef69c460 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef69c5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5576ef69c4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576ef69c528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5576ef69c698 <line:420:22>
| `-NonNullAttr 0x5576ef69c6f0 <col:63, col:77> 1
|-FunctionDecl 0x5576ef69c898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef69c738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576ef69c7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5576ef69c948 <line:423:22>
| `-NonNullAttr 0x5576ef69c9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef69cb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5576ef69ca08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576ef69ca88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5576ef69cbf8 <line:426:22>
| `-NonNullAttr 0x5576ef69cc50 <col:63, col:77> 1
|-FunctionDecl 0x5576ef69cdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef69cc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576ef69cd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5576ef69cea8 <line:429:22>
| `-NonNullAttr 0x5576ef69cf00 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef69d088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5576ef69cf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576ef69cfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5576ef69d138 <line:431:22>
| `-NonNullAttr 0x5576ef69d190 <col:63, col:77> 1
|-FunctionDecl 0x5576ef69d3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5576ef69d1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576ef69d258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5576ef69d468 <line:434:22>
| |-NonNullAttr 0x5576ef69d4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5576ef69d4f8 <col:100> "" ""
|-FunctionDecl 0x5576ef69d708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5576ef69d548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576ef69d5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5576ef69d7b8 <line:437:22>
| |-NonNullAttr 0x5576ef69d810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5576ef69d848 <col:97> "" ""
|-FunctionDecl 0x5576ef69da48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5576ef69d898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576ef69d910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5576ef69daf8 <line:440:22>
| `-NonNullAttr 0x5576ef69db50 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef69dcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5576ef69db98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576ef69dc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5576ef69dd80 <line:443:22>
| `-NonNullAttr 0x5576ef69ddd8 <col:63, col:77> 1
|-FunctionDecl 0x5576ef69e0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5576ef69de28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576ef69dea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5576ef69df20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5576ef69e180 <line:447:22>
| `-NonNullAttr 0x5576ef69e1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5576ef69e488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5576ef69e230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576ef69e2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5576ef69e328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5576ef69e540 <col:43>
| `-NonNullAttr 0x5576ef69e598 <col:84, col:98> 1
|-FunctionDecl 0x5576ef69e858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5576ef69e5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5576ef69e668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5576ef69e6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5576ef69e910 <line:452:22>
| `-NonNullAttr 0x5576ef69e968 <col:63, col:77> 3
|-FunctionDecl 0x5576ef69ec78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5576ef69e9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5576ef69ea60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5576ef69eaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5576ef69ed30 <line:456:22>
| `-NonNullAttr 0x5576ef69ed88 <col:63, col:80> 2 3
|-FunctionDecl 0x5576ef69ef78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5576ef69edd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5576ef69ee58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5576ef69f028 <line:458:22>
|-FunctionDecl 0x5576ef69f3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5576ef69f0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5576ef69f290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5576ef69f4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5576ef69f650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5576ef69f530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5576ef69f5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5576ef69f838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5576ef69f718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5576ef69f798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5576ef69f9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5576ef69f8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5576ef69fb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5576ef69fbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5576ef69fc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5576ef69fd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5576ef69fdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5576ef69ffa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_1/mix043_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5576ef6a0098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5576ef6a0150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5576ef6a00f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5576ef69fc50 '__pthread_unwind_buf_t'
| |   `-Record 0x5576ef69fbd0 ''
| `-AlignedAttr 0x5576ef6a01a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5576ef6a0220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5576ef6a0380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5576ef6a03e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5576ef6a0450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5576ef6a04b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5576ef6a06c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5576ef6a05b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5576ef6a0808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5576ef6a0778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5576ef6a0a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5576ef6a08c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5576ef6a0aa8 <line:487:22>
|-RecordDecl 0x5576ef6a0b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5576ef6a0e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5576ef6a0c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5576ef6a0cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5576ef6a0ec8 <col:86>
| `-ReturnsTwiceAttr 0x5576ef6a0f20 <col:12> Implicit
|-FunctionDecl 0x5576ef6a1248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5576ef6a0ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5576ef6a1100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5576ef6a12f8 <line:493:22>
| `-NonNullAttr 0x5576ef6a1350 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a14c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5576ef6a1398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5576ef6a1570 <line:495:22>
| `-NonNullAttr 0x5576ef6a15c8 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a16d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5576ef6a1618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5576ef6a1778 <line:497:22>
| `-NonNullAttr 0x5576ef6a17d0 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6a18d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5576ef6a1818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5576ef6a1978 <line:499:22>
| `-NonNullAttr 0x5576ef6a19d0 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6a2c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5576ef6a2a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5576ef6a2ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5576ef6a2cd8 <col:36>
| `-NonNullAttr 0x5576ef6a2d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5576ef6a2e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5576ef6a2d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5576ef6a2ed8 <line:504:22>
| `-NonNullAttr 0x5576ef6a2f30 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6a31c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef6a2fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5576ef6a3060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5576ef6a3278 <line:508:22>
| `-NonNullAttr 0x5576ef6a32d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef6a3598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5576ef6a3318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5576ef6a3398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5576ef6a3418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5576ef6a3650 <line:512:22>
| `-NonNullAttr 0x5576ef6a36a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5576ef6a37b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5576ef6a36f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5576ef6a3858 <line:514:22>
| `-NonNullAttr 0x5576ef6a38b0 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a3ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5576ef6a3960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5576ef6a3b80 <line:516:22>
| `-NonNullAttr 0x5576ef6a3bd8 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a3ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5576ef6a3c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5576ef6a3d88 <line:518:22>
| `-NonNullAttr 0x5576ef6a3de0 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a4008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef6a3e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5576ef6a3ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5576ef6a40b8 <line:522:22>
| `-NonNullAttr 0x5576ef6a4110 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef6a4318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5576ef6a4158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576ef6a41d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5576ef6a43c8 <line:525:22>
| `-NonNullAttr 0x5576ef6a4420 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a45c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef6a4468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5576ef6a44e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5576ef6a4678 <line:528:22>
| `-NonNullAttr 0x5576ef6a46d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef6a4858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5576ef6a4718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576ef6a4798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5576ef6a4908 <line:530:22>
| `-NonNullAttr 0x5576ef6a4960 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a4b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef6a49a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5576ef6a4a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5576ef6a4bd0 <line:534:22>
| `-NonNullAttr 0x5576ef6a4c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef6a4db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5576ef6a4c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576ef6a4cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5576ef6a4e68 <line:537:22>
| `-NonNullAttr 0x5576ef6a4ec0 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a5068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef6a4f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5576ef6a4f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5576ef6a5118 <line:541:22>
| `-NonNullAttr 0x5576ef6a5170 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef6a52f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5576ef6a51b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576ef6a5238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5576ef6a53a8 <line:544:22>
| `-NonNullAttr 0x5576ef6a5400 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a55e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5576ef6a5448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576ef6a54c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5576ef6a5698 <line:547:22>
| `-NonNullAttr 0x5576ef6a56f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef6a5878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5576ef6a5738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576ef6a57b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5576ef6a5928 <line:550:22>
| `-NonNullAttr 0x5576ef6a5980 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a6cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5576ef6a6aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5576ef6a6bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5576ef6a6da8 <col:29>
| `-NonNullAttr 0x5576ef6a6e00 <col:70, col:84> 1
|-FunctionDecl 0x5576ef6a6f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576ef6a6e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576ef6a7020 <line:555:22>
| `-NonNullAttr 0x5576ef6a7078 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a7180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576ef6a70c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576ef6a7228 <line:557:22>
| `-NonNullAttr 0x5576ef6a7280 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6a7380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576ef6a72c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576ef6a7428 <line:559:19>
| `-NonNullAttr 0x5576ef6a7480 <col:49, col:63> 1
|-FunctionDecl 0x5576ef6a76b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5576ef6a74c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5576ef6a7558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5576ef6a7768 <col:39>
| `-NonNullAttr 0x5576ef6a77c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5576ef6a78c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576ef6a7808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576ef6a7968 <line:564:22>
| `-NonNullAttr 0x5576ef6a79c0 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6a7b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576ef6a7a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576ef6a7bd0 <line:566:22>
| `-NonNullAttr 0x5576ef6a7c28 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6a7de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5576ef6a7c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5576ef6a7d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5576ef6a7e98 <col:39>
| `-NonNullAttr 0x5576ef6a7ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5576ef6a7ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576ef6a7f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576ef6a8098 <line:571:22>
| `-NonNullAttr 0x5576ef6a80f0 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6a82d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5576ef6a81a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5576ef6a8380 <line:573:22>
| `-NonNullAttr 0x5576ef6a83d8 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a84e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5576ef6a8428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5576ef6a8588 <line:575:22>
| `-NonNullAttr 0x5576ef6a85e0 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a8808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef6a8628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5576ef6a86a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5576ef6a88b8 <line:579:22>
| `-NonNullAttr 0x5576ef6a8910 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef6a8b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5576ef6a8958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5576ef6a89d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5576ef6a8be8 <line:582:22>
| `-NonNullAttr 0x5576ef6a8c40 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a8de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef6a8c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5576ef6a8d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5576ef6a8e98 <line:586:22>
| `-NonNullAttr 0x5576ef6a8ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef6a9078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5576ef6a8f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5576ef6a8fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5576ef6a9128 <col:36>
| `-NonNullAttr 0x5576ef6a9180 <col:77, col:91> 1
|-FunctionDecl 0x5576ef6a94b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5576ef6a9260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5576ef6a9370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5576ef6a9568 <line:591:22>
| `-NonNullAttr 0x5576ef6a95c0 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a9738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5576ef6a9608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5576ef6a97e0 <line:593:22>
| `-NonNullAttr 0x5576ef6a9838 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6a9940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5576ef6a9888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5576ef6a99e8 <line:595:22>
| `-NonNullAttr 0x5576ef6a9a40 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6a9b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5576ef6a9aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5576ef6a9c00 <line:597:22>
| `-NonNullAttr 0x5576ef6a9c58 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6a9e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5576ef6a9ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5576ef6a9d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5576ef6a9f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5576ef6aa268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5576ef6a9fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5576ef6aa030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5576ef6aa0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5576ef6aa320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5576ef6aa538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5576ef6aa400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5576ef6aa5e0 <line:606:22>
| `-NonNullAttr 0x5576ef6aa638 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6aa740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5576ef6aa688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5576ef6aa7e8 <line:608:22>
| `-NonNullAttr 0x5576ef6aa840 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6aaaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef6aa888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5576ef6aa908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5576ef6aab50 <line:612:22>
| `-NonNullAttr 0x5576ef6aaba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef6aadb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5576ef6aabf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5576ef6aac78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5576ef6aae68 <col:37>
| `-NonNullAttr 0x5576ef6aaec0 <col:78, col:92> 1
|-FunctionDecl 0x5576ef6ab0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5576ef6aaf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5576ef6aafb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5576ef6ab188 <line:618:22>
| `-NonNullAttr 0x5576ef6ab1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef6ab3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5576ef6ab228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5576ef6ab2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5576ef6ab458 <line:621:22>
| `-NonNullAttr 0x5576ef6ab4b0 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6ab758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5576ef6ab590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5576ef6ab610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5576ef6ab808 <line:623:22>
| `-NonNullAttr 0x5576ef6ab860 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6ab9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5576ef6ab8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5576ef6abab0 <line:625:22>
| `-NonNullAttr 0x5576ef6abb08 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6abc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5576ef6abb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5576ef6abcb8 <line:627:22>
| `-NonNullAttr 0x5576ef6abd10 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6abe10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5576ef6abd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5576ef6abeb8 <line:629:22>
| `-NonNullAttr 0x5576ef6abf10 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6ac010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5576ef6abf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5576ef6ac0b8 <line:631:22>
| `-NonNullAttr 0x5576ef6ac110 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6ac4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5576ef6ac1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5576ef6ac300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5576ef6ac380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5576ef6ac5a0 <line:635:22>
| `-NonNullAttr 0x5576ef6ac5f8 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6ac778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5576ef6ac648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5576ef6ac820 <line:637:22>
| `-NonNullAttr 0x5576ef6ac878 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6ac980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5576ef6ac8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5576ef6aca28 <line:639:22>
| `-NonNullAttr 0x5576ef6aca80 <col:52, col:66> 1
|-FunctionDecl 0x5576ef6adc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5576ef6adb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5576ef6add30 <line:641:22>
| `-NonNullAttr 0x5576ef6add88 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6ade90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5576ef6addd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5576ef6adf38 <line:643:22>
| `-NonNullAttr 0x5576ef6adf90 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6ae1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576ef6adfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5576ef6ae058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5576ef6ae268 <line:647:22>
| `-NonNullAttr 0x5576ef6ae2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576ef6ae4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5576ef6ae308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5576ef6ae388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5576ef6ae578 <line:650:22>
| `-NonNullAttr 0x5576ef6ae5d0 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6ae918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5576ef6ae6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5576ef6ae7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5576ef6ae9c8 <line:653:22>
| `-NonNullAttr 0x5576ef6aea20 <col:63, col:77> 1
|-FunctionDecl 0x5576ef6aeb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5576ef6aea68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5576ef6aec30 <col:69>
|-FunctionDecl 0x5576ef6aeda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5576ef6aec98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5576ef6aee50 <col:72>
|-FunctionDecl 0x5576ef6af088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5576ef6aeeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5576ef6aef68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5576ef6af138 <col:44>
|-FunctionDecl 0x5576ef6af358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5576ef6af1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5576ef6af218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5576ef6af408 <line:660:22>
| `-NonNullAttr 0x5576ef6af460 <col:63, col:77> 2
|-FunctionDecl 0x5576ef6af8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5576ef6af540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5576ef6af650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5576ef6af760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5576ef6af960 <col:47>
|-FunctionDecl 0x5576ef6afaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5576ef6af9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5576ef6afc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5576ef6afbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5576ef6afda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5576ef6afd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5576ef6afef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5576ef6afe60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5576ef6affc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5576ef6b0080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5576ef6b0140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5576ef6b01f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5576ef6b0278 prev 0x5576ef6b01f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5576ef6b02e0 <col:24> 'int' 0
|-VarDecl 0x5576ef6b0318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5576ef6b0398 prev 0x5576ef6b0318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5576ef6b0400 <col:27> 'int' 0
|-VarDecl 0x5576ef6b0438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5576ef6b04b8 prev 0x5576ef6b0438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5576ef6b0520 <col:27> 'int' 0
|-VarDecl 0x5576ef6b0558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5576ef6b05d8 prev 0x5576ef6b0558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5576ef6b0640 <col:27> 'int' 0
|-VarDecl 0x5576ef6b0678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5576ef6b06f8 prev 0x5576ef6b0678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5576ef6b0760 <col:27> 'int' 0
|-VarDecl 0x5576ef6b0798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x5576ef6b0818 prev 0x5576ef6b0798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5576ef6b0880 <col:9> 'int' 0
|-VarDecl 0x5576ef6b08b8 <line:684:1, col:5> col:5 used b 'int'
|-VarDecl 0x5576ef6b0938 prev 0x5576ef6b08b8 <line:685:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x5576ef6b09a0 <col:9> 'int' 0
|-VarDecl 0x5576ef6b09d0 <line:686:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x5576ef6b0a50 <line:687:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x5576ef6b0b00 <line:688:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x5576ef6b0b78 <line:689:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x5576ef6b0bf0 <line:690:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x5576ef6b0c68 <line:691:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x5576ef6b0ce0 <line:692:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x5576ef6b0d58 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x5576ef6b0dd0 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x5576ef6b0e48 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x5576ef6b0ec0 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x5576ef6b0f38 <line:697:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x5576ef6b0fb0 <line:698:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x5576ef6b1030 <line:699:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x5576ef6b10b0 <line:700:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x5576ef6b1128 <line:701:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x5576ef6b11a8 <line:702:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x5576ef6b1220 <line:703:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x5576ef6b1298 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5576ef6b1310 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5576ef6b1390 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x5576ef6b1410 prev 0x5576ef6b1390 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5576ef6b1478 <col:9> 'int' 0
|-VarDecl 0x5576ef6b14b0 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x5576ef6b1530 prev 0x5576ef6b14b0 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5576ef6b1598 <col:9> 'int' 0
|-VarDecl 0x5576ef6b15d0 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x5576ef6b1650 prev 0x5576ef6b15d0 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5576ef6b16b8 <col:9> 'int' 0
|-VarDecl 0x5576ef6b16e8 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5576ef6b1760 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5576ef6b1878 prev 0x5576ef6afaf0 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5576ef6b17e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5576ef6b3138 <line:715:1, line:743:1>
|   |-CallExpr 0x5576ef6b1988 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b1970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b1920 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b1a00 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b19a8 <col:3> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5576ef6b19e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b19c8 <col:15> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x5576ef6b1a60 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b1a20 <col:3> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x5576ef6b1a40 <col:15> 'int' 1
|   |-BinaryOperator 0x5576ef6b1ad8 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b1a80 <col:3> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b1ac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b1aa0 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576ef6b1b88 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b1b10 <col:3> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5576ef6b1b60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5576ef6b1b30 <col:27> 'int' 1
|   |-CallExpr 0x5576ef6b1d08 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5576ef6b1cf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5576ef6b1ba8 <col:3> 'void (int)' Function 0x5576ef656bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5576ef6b1ca8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5576ef6b1c88 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5576ef6b1c68 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5576ef6b1c20 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5576ef6b1c08 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5576ef6b1bc8 <col:23> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5576ef6b1c50 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5576ef6b1c38 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5576ef6b1be8 <col:41> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576ef6b1d88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b1d30 <col:3> '_Bool' lvalue Var 0x5576ef6b0d58 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b1d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b1d50 <col:20> '_Bool' lvalue Var 0x5576ef6b0b00 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5576ef6b1e00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b1da8 <col:3> '_Bool' lvalue Var 0x5576ef6b0dd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b1de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b1dc8 <col:20> '_Bool' lvalue Var 0x5576ef6b0b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5576ef6b1e78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b1e20 <col:3> '_Bool' lvalue Var 0x5576ef6b0e48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b1e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b1e40 <col:20> '_Bool' lvalue Var 0x5576ef6b0bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5576ef6b1ef0 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b1e98 <col:3> '_Bool' lvalue Var 0x5576ef6b0ec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b1ed8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b1eb8 <col:20> '_Bool' lvalue Var 0x5576ef6b0c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5576ef6b1f68 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b1f10 <col:3> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b1f50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b1f30 <col:20> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5576ef6b2000 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b1f88 <col:3> '_Bool' lvalue Var 0x5576ef6b0b78 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5576ef6b1fd8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5576ef6b1fa8 <col:27> 'int' 1
|   |-CallExpr 0x5576ef6b2058 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b2040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b2020 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b20b0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b2098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b2078 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b2128 <line:730:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b20d0 <col:3> 'int' lvalue Var 0x5576ef6b0398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5576ef6b2110 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b20f0 <col:25> 'int' lvalue Var 0x5576ef6b1410 'x' 'int'
|   |-CallExpr 0x5576ef6b2180 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b2168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b2148 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b21d8 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b21c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b21a0 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b24c0 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b21f8 <col:3> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   | `-ConditionalOperator 0x5576ef6b2490 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5576ef6b22b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5576ef6b2270 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5576ef6b2258 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5576ef6b2218 <col:7> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5576ef6b22a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5576ef6b2288 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5576ef6b2238 <col:25> '_Bool' lvalue Var 0x5576ef6b0b78 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5576ef6b2478 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b22d8 <col:42> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5576ef6b2458 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5576ef6b2428 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5576ef6b2398 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5576ef6b2350 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5576ef6b2338 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5576ef6b22f8 <col:55> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5576ef6b2380 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5576ef6b2368 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5576ef6b2318 <col:73> '_Bool' lvalue Var 0x5576ef6b0dd0 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5576ef6b23f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576ef6b23b8 <col:90> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5576ef6b2410 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b23d8 <col:102> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   |-BinaryOperator 0x5576ef6b26c8 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b24e0 <col:3> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b26b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b2680 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576ef6b25a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576ef6b2558 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576ef6b2540 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576ef6b2500 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576ef6b2588 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576ef6b2570 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576ef6b2520 <col:38> '_Bool' lvalue Var 0x5576ef6b0b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b2638 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b25f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b25c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b2668 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b2650 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b2618 <col:66> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576ef6b29b0 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b26e8 <col:3> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b2998 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b2968 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576ef6b2888 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576ef6b27a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576ef6b2760 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576ef6b2748 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576ef6b2708 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576ef6b2790 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576ef6b2778 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576ef6b2728 <col:38> '_Bool' lvalue Var 0x5576ef6b0b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5576ef6b2868 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576ef6b2820 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576ef6b2808 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576ef6b27c8 <col:56> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576ef6b2850 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576ef6b2838 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576ef6b27e8 <col:74> '_Bool' lvalue Var 0x5576ef6b0dd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b2920 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b28d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b28a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b2950 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b2938 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b2900 <col:102> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5576ef6b2bd0 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b29d0 <col:3> '_Bool' lvalue Var 0x5576ef6b0b78 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b2bb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b2b88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576ef6b2a90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576ef6b2a48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576ef6b2a30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576ef6b29f0 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576ef6b2a78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576ef6b2a60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576ef6b2a10 <col:38> '_Bool' lvalue Var 0x5576ef6b0b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b2b40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b2ae0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b2ab0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b2b70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b2b58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b2b20 <col:66> '_Bool' lvalue Var 0x5576ef6b0b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5576ef6b2eb8 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b2bf0 <col:3> '_Bool' lvalue Var 0x5576ef6b0dd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b2ea0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b2e70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576ef6b2d90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576ef6b2cb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576ef6b2c68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576ef6b2c50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576ef6b2c10 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576ef6b2c98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576ef6b2c80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576ef6b2c30 <col:38> '_Bool' lvalue Var 0x5576ef6b0b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5576ef6b2d70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576ef6b2d28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576ef6b2d10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576ef6b2cd0 <col:56> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576ef6b2d58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576ef6b2d40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576ef6b2cf0 <col:74> '_Bool' lvalue Var 0x5576ef6b0dd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b2e28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b2de0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b2db0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b2e58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b2e40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b2e08 <col:102> '_Bool' lvalue Var 0x5576ef6b0dd0 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5576ef6b2f10 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b2ef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b2ed8 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b2f68 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b2f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b2f30 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b3020 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b2f88 <col:3> 'int' lvalue Var 0x5576ef6b0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5576ef6b3000 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5576ef6b2fe8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b2fa8 <col:22> 'int' lvalue Var 0x5576ef6b0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5576ef6b2fc8 <col:41> 'int' 1
|   |-CallExpr 0x5576ef6b3078 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b3060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b3040 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5576ef6b3128 <line:742:3, col:36>
|     `-CallExpr 0x5576ef6b3108 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5576ef6b30f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5576ef6b3098 <col:10> 'void *(void)' Function 0x5576ef656958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5576ef6b32d0 prev 0x5576ef6afc48 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5576ef6b3238 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5576ef6b4510 <line:745:1, line:763:1>
|   |-CallExpr 0x5576ef6b33b0 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b3398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b3378 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b3410 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b33d0 <col:3> 'int' lvalue Var 0x5576ef6b1410 'x' 'int'
|   | `-IntegerLiteral 0x5576ef6b33f0 <col:7> 'int' 1
|   |-CallExpr 0x5576ef6b3468 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b3450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b3430 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b34c0 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b34a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b3488 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b3538 <line:750:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b34e0 <col:3> 'int' lvalue Var 0x5576ef6b04b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5576ef6b3520 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b3500 <col:25> 'int' lvalue Var 0x5576ef6b1530 'y' 'int'
|   |-CallExpr 0x5576ef6b3590 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b3578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b3558 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b35e8 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b35d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b35b0 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b38d0 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b3608 <col:3> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   | `-ConditionalOperator 0x5576ef6b38a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5576ef6b36c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5576ef6b3680 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5576ef6b3668 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5576ef6b3628 <col:7> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5576ef6b36b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5576ef6b3698 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5576ef6b3648 <col:25> '_Bool' lvalue Var 0x5576ef6b0bf0 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5576ef6b3888 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b36e8 <col:42> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5576ef6b3868 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5576ef6b3838 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5576ef6b37a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5576ef6b3760 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5576ef6b3748 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5576ef6b3708 <col:55> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5576ef6b3790 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5576ef6b3778 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5576ef6b3728 <col:73> '_Bool' lvalue Var 0x5576ef6b0e48 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5576ef6b3808 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576ef6b37c8 <col:90> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5576ef6b3820 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b37e8 <col:102> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   |-BinaryOperator 0x5576ef6b3ad8 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b38f0 <col:3> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b3ac0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b3a90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576ef6b39b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576ef6b3968 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576ef6b3950 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576ef6b3910 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576ef6b3998 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576ef6b3980 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576ef6b3930 <col:38> '_Bool' lvalue Var 0x5576ef6b0bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b3a48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b3a00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b39d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b3a78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b3a60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b3a28 <col:66> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576ef6b3dd8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b3af8 <col:3> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b3dc0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b3d90 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576ef6b3cb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576ef6b3bd0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576ef6b3b88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576ef6b3b70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576ef6b3b30 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576ef6b3bb8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576ef6b3ba0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576ef6b3b50 <col:38> '_Bool' lvalue Var 0x5576ef6b0bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5576ef6b3c90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576ef6b3c48 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576ef6b3c30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576ef6b3bf0 <col:56> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576ef6b3c78 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576ef6b3c60 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576ef6b3c10 <col:74> '_Bool' lvalue Var 0x5576ef6b0e48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b3d48 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b3d00 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b3cd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b3d78 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b3d60 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b3d28 <col:102> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5576ef6b3fe0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b3df8 <col:3> '_Bool' lvalue Var 0x5576ef6b0bf0 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b3fc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b3f98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576ef6b3eb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576ef6b3e70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576ef6b3e58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576ef6b3e18 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576ef6b3ea0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576ef6b3e88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576ef6b3e38 <col:38> '_Bool' lvalue Var 0x5576ef6b0bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b3f50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b3f08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b3ed8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b3f80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b3f68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b3f30 <col:66> '_Bool' lvalue Var 0x5576ef6b0bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5576ef6b42c8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b4000 <col:3> '_Bool' lvalue Var 0x5576ef6b0e48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b42b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b4280 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576ef6b41a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576ef6b40c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576ef6b4078 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576ef6b4060 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576ef6b4020 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576ef6b40a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576ef6b4090 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576ef6b4040 <col:38> '_Bool' lvalue Var 0x5576ef6b0bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5576ef6b4180 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576ef6b4138 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576ef6b4120 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576ef6b40e0 <col:56> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576ef6b4168 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576ef6b4150 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576ef6b4100 <col:74> '_Bool' lvalue Var 0x5576ef6b0e48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b4238 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b41f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b41c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b4268 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b4250 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b4218 <col:102> '_Bool' lvalue Var 0x5576ef6b0e48 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5576ef6b4320 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b4308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b42e8 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b4378 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b4360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b4340 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b4430 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b4398 <col:3> 'int' lvalue Var 0x5576ef6b0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5576ef6b4410 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5576ef6b43f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b43b8 <col:22> 'int' lvalue Var 0x5576ef6b0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5576ef6b43d8 <col:41> 'int' 1
|   |-CallExpr 0x5576ef6b4488 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b4470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b4450 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5576ef6b4500 <line:762:3, col:36>
|     `-CallExpr 0x5576ef6b44e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5576ef6b44c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5576ef6b44a8 <col:10> 'void *(void)' Function 0x5576ef656958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5576ef6b4658 prev 0x5576ef6afda0 <line:764:1, line:783:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5576ef6b45c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5576ef6b5890 <line:765:1, line:783:1>
|   |-CallExpr 0x5576ef6b4738 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b4720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b4700 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b4798 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b4758 <col:3> 'int' lvalue Var 0x5576ef6b1530 'y' 'int'
|   | `-IntegerLiteral 0x5576ef6b4778 <col:7> 'int' 1
|   |-CallExpr 0x5576ef6b47f0 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b47d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b47b8 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b4848 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b4830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b4810 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b48a8 <line:770:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b4868 <col:3> 'int' lvalue Var 0x5576ef6b1650 'z' 'int'
|   | `-IntegerLiteral 0x5576ef6b4888 <col:7> 'int' 1
|   |-CallExpr 0x5576ef6b4900 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b48e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b48c8 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b4958 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b4940 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b4920 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b4c68 <line:773:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b4978 <col:3> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   | `-ConditionalOperator 0x5576ef6b4c38 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5576ef6b4a38 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5576ef6b49f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5576ef6b49d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5576ef6b4998 <col:7> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5576ef6b4a20 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5576ef6b4a08 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5576ef6b49b8 <col:25> '_Bool' lvalue Var 0x5576ef6b0c68 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5576ef6b4c20 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b4a58 <col:42> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5576ef6b4c00 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5576ef6b4bd0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5576ef6b4b40 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5576ef6b4ad0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5576ef6b4ab8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5576ef6b4a78 <col:55> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5576ef6b4b00 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5576ef6b4ae8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5576ef6b4a98 <col:73> '_Bool' lvalue Var 0x5576ef6b0ec0 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5576ef6b4ba0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576ef6b4b60 <col:90> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5576ef6b4bb8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b4b80 <col:102> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   |-BinaryOperator 0x5576ef6b4e70 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b4c88 <col:3> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b4e58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b4e28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576ef6b4d48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576ef6b4d00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576ef6b4ce8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576ef6b4ca8 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576ef6b4d30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576ef6b4d18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576ef6b4cc8 <col:38> '_Bool' lvalue Var 0x5576ef6b0c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b4de0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b4d98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b4d68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b4e10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b4df8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b4dc0 <col:66> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576ef6b5158 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b4e90 <col:3> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b5140 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b5110 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576ef6b5030 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576ef6b4f50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576ef6b4f08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576ef6b4ef0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576ef6b4eb0 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576ef6b4f38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576ef6b4f20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576ef6b4ed0 <col:38> '_Bool' lvalue Var 0x5576ef6b0c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5576ef6b5010 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576ef6b4fc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576ef6b4fb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576ef6b4f70 <col:56> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576ef6b4ff8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576ef6b4fe0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576ef6b4f90 <col:74> '_Bool' lvalue Var 0x5576ef6b0ec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b50c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b5080 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b5050 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b50f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b50e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b50a8 <col:102> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5576ef6b5360 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b5178 <col:3> '_Bool' lvalue Var 0x5576ef6b0c68 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b5348 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b5318 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576ef6b5238 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576ef6b51f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576ef6b51d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576ef6b5198 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576ef6b5220 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576ef6b5208 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576ef6b51b8 <col:38> '_Bool' lvalue Var 0x5576ef6b0c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b52d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b5288 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b5258 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b5300 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b52e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b52b0 <col:66> '_Bool' lvalue Var 0x5576ef6b0c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5576ef6b5648 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b5380 <col:3> '_Bool' lvalue Var 0x5576ef6b0ec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b5630 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b5600 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576ef6b5520 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576ef6b5440 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576ef6b53f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576ef6b53e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576ef6b53a0 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576ef6b5428 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576ef6b5410 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576ef6b53c0 <col:38> '_Bool' lvalue Var 0x5576ef6b0c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5576ef6b5500 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576ef6b54b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576ef6b54a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576ef6b5460 <col:56> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576ef6b54e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576ef6b54d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576ef6b5480 <col:74> '_Bool' lvalue Var 0x5576ef6b0ec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b55b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b5570 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b5540 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b55e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b55d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b5598 <col:102> '_Bool' lvalue Var 0x5576ef6b0ec0 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5576ef6b56a0 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b5688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b5668 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b56f8 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b56e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b56c0 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b57b0 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b5718 <col:3> 'int' lvalue Var 0x5576ef6b0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5576ef6b5790 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5576ef6b5778 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b5738 <col:22> 'int' lvalue Var 0x5576ef6b0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5576ef6b5758 <col:41> 'int' 1
|   |-CallExpr 0x5576ef6b5808 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b57f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b57d0 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5576ef6b5880 <line:782:3, col:36>
|     `-CallExpr 0x5576ef6b5860 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5576ef6b5848 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5576ef6b5828 <col:10> 'void *(void)' Function 0x5576ef656958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5576ef6b59d8 prev 0x5576ef6afef8 <line:784:1, line:822:1> line:784:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5576ef6b5940 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5576ef6b97f0 <line:785:1, line:822:1>
|   |-CallExpr 0x5576ef6b5ab8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b5aa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b5a80 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b5b18 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b5ad8 <col:3> 'int' lvalue Var 0x5576ef6b1650 'z' 'int'
|   | `-IntegerLiteral 0x5576ef6b5af8 <col:7> 'int' 2
|   |-CallExpr 0x5576ef6b5b88 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b5b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b5b50 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b5be0 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b5bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b5ba8 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b5c40 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b5c00 <col:3> 'int' lvalue Var 0x5576ef6b0818 'a' 'int'
|   | `-IntegerLiteral 0x5576ef6b5c20 <col:7> 'int' 1
|   |-CallExpr 0x5576ef6b5c98 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b5c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b5c60 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b5cf0 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b5cd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b5cb8 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b5d68 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b5d10 <col:3> 'int' lvalue Var 0x5576ef6b05d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5576ef6b5d50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b5d30 <col:25> 'int' lvalue Var 0x5576ef6b0818 'a' 'int'
|   |-CallExpr 0x5576ef6b5dc0 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b5da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b5d88 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b5e18 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b5e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b5de0 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b5ec8 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b5e38 <col:3> '_Bool' lvalue Var 0x5576ef6b16e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b5eb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5576ef6b5e90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5576ef6b5e78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5576ef6b5e58 <col:19> 'void *(void)' Function 0x5576ef656958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5576ef6b5f78 <line:797:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b5ee8 <col:3> '_Bool' lvalue Var 0x5576ef6b1760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b5f60 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5576ef6b5f40 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5576ef6b5f28 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5576ef6b5f08 <col:19> 'void *(void)' Function 0x5576ef656958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5576ef6b5ff0 <line:798:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b5f98 <col:3> '_Bool' lvalue Var 0x5576ef6b09d0 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b5fd8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b5fb8 <col:21> '_Bool' lvalue Var 0x5576ef6b1760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5576ef6b6068 <line:799:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b6010 <col:3> 'int' lvalue Var 0x5576ef6b0a50 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5576ef6b6050 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b6030 <col:15> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   |-BinaryOperator 0x5576ef6b64a0 <line:800:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b6088 <col:3> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   | `-ConditionalOperator 0x5576ef6b6470 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5576ef6b6298 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5576ef6b61b8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5576ef6b60e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5576ef6b60c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5576ef6b60a8 <col:8> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5576ef6b6198 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5576ef6b6130 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5576ef6b6118 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5576ef6b60f8 <col:27> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x5576ef6b6180 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5576ef6b6168 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5576ef6b6148 <col:46> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5576ef6b6278 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5576ef6b6210 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5576ef6b61f8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5576ef6b61d8 <col:65> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x5576ef6b6260 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5576ef6b6248 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5576ef6b6228 <col:84> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5576ef6b6458 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b62b8 <col:101> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   |   `-ParenExpr 0x5576ef6b6438 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5576ef6b6408 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5576ef6b6378 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5576ef6b6330 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5576ef6b6318 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5576ef6b62d8 <col:106> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5576ef6b6360 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5576ef6b6348 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5576ef6b62f8 <col:124> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5576ef6b63d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576ef6b6398 <col:141> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5576ef6b63f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b63b8 <col:153> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5576ef6b69b0 <line:801:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b64c0 <col:3> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x5576ef6b6980 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5576ef6b6950 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5576ef6b6938 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5576ef6b64e0 <col:15> '_Bool' lvalue Var 0x5576ef6b1760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5576ef6b6968 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b6500 <col:31> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5576ef6b6918 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5576ef6b68e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5576ef6b6710 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5576ef6b6630 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5576ef6b6558 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5576ef6b6540 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5576ef6b6520 <col:45> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5576ef6b6610 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5576ef6b65a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5576ef6b6590 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5576ef6b6570 <col:64> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5576ef6b65f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5576ef6b65e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5576ef6b65c0 <col:83> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5576ef6b66f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5576ef6b6688 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5576ef6b6670 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5576ef6b6650 <col:102> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5576ef6b66d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5576ef6b66c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5576ef6b66a0 <col:121> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5576ef6b68d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576ef6b6730 <col:138> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x5576ef6b68b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5576ef6b6880 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5576ef6b67f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5576ef6b67a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5576ef6b6790 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5576ef6b6750 <col:151> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5576ef6b67d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5576ef6b67c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5576ef6b6770 <col:169> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5576ef6b6850 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5576ef6b6810 <col:186> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5576ef6b6868 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5576ef6b6830 <col:198> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x5576ef6b6ee0 <line:802:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b69d0 <col:3> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x5576ef6b6eb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5576ef6b6e80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5576ef6b6e68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5576ef6b69f0 <col:15> '_Bool' lvalue Var 0x5576ef6b1760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5576ef6b6e98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b6a10 <col:31> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x5576ef6b6e48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5576ef6b6e18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5576ef6b6c40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5576ef6b6b60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5576ef6b6a68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5576ef6b6a50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5576ef6b6a30 <col:45> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5576ef6b6b20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5576ef6b6ab8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5576ef6b6aa0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5576ef6b6a80 <col:64> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5576ef6b6b08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5576ef6b6af0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5576ef6b6ad0 <col:83> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5576ef6b6c20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5576ef6b6bb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5576ef6b6ba0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5576ef6b6b80 <col:102> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5576ef6b6c08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5576ef6b6bf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5576ef6b6bd0 <col:121> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5576ef6b6e00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576ef6b6c60 <col:138> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x5576ef6b6de0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5576ef6b6db0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5576ef6b6d20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5576ef6b6cd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5576ef6b6cc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5576ef6b6c80 <col:151> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5576ef6b6d08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5576ef6b6cf0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5576ef6b6ca0 <col:169> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5576ef6b6d80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5576ef6b6d40 <col:186> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5576ef6b6d98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5576ef6b6d60 <col:198> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5576ef6b7488 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b6f00 <col:3> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b7470 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b7440 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5576ef6b73f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576ef6b73e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576ef6b6f20 <col:20> '_Bool' lvalue Var 0x5576ef6b1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b7428 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576ef6b7410 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576ef6b6f40 <col:36> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5576ef6b73c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5576ef6b7390 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5576ef6b7150 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576ef6b7070 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576ef6b6f98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576ef6b6f80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576ef6b6f60 <col:55> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576ef6b7050 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576ef6b6fe8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576ef6b6fd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576ef6b6fb0 <col:74> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5576ef6b7038 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576ef6b7020 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576ef6b7000 <col:93> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576ef6b7130 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576ef6b70c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576ef6b70b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576ef6b7090 <col:112> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5576ef6b7118 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576ef6b7100 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576ef6b70e0 <col:131> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5576ef6b7378 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576ef6b7360 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576ef6b7170 <col:148> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5576ef6b7340 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5576ef6b7310 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5576ef6b7230 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576ef6b71e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576ef6b71d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576ef6b7190 <col:166> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576ef6b7218 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576ef6b7200 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576ef6b71b0 <col:184> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5576ef6b72c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576ef6b7280 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576ef6b7250 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576ef6b72f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5576ef6b72e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5576ef6b72a8 <col:212> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576ef6b7a50 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b74a8 <col:3> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b7a38 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b7a08 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5576ef6b79c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576ef6b79a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576ef6b74c8 <col:20> '_Bool' lvalue Var 0x5576ef6b1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b79f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576ef6b79d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576ef6b74e8 <col:36> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5576ef6b7988 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5576ef6b7958 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5576ef6b76f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576ef6b7618 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576ef6b7540 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576ef6b7528 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576ef6b7508 <col:55> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576ef6b75f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576ef6b7590 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576ef6b7578 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576ef6b7558 <col:74> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5576ef6b75e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576ef6b75c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576ef6b75a8 <col:93> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576ef6b76d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576ef6b7670 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576ef6b7658 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576ef6b7638 <col:112> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5576ef6b76c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576ef6b76a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576ef6b7688 <col:131> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5576ef6b7940 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576ef6b7928 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576ef6b7718 <col:148> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5576ef6b7908 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5576ef6b78d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5576ef6b77d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576ef6b7790 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576ef6b7778 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576ef6b7738 <col:166> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576ef6b77c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576ef6b77a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576ef6b7758 <col:184> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5576ef6b78a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576ef6b7828 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576ef6b77f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576ef6b78c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5576ef6b7880 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5576ef6b7850 <col:219> 'int' 0
|   |-BinaryOperator 0x5576ef6b8010 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b7a70 <col:3> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b7ff8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b7fc8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5576ef6b7f80 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576ef6b7f68 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576ef6b7a90 <col:20> '_Bool' lvalue Var 0x5576ef6b1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b7fb0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576ef6b7f98 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576ef6b7ab0 <col:36> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x5576ef6b7f48 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5576ef6b7f18 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5576ef6b7cd8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576ef6b7bf8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576ef6b7b08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576ef6b7af0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576ef6b7ad0 <col:55> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576ef6b7bd8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576ef6b7b70 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576ef6b7b40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576ef6b7b20 <col:74> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5576ef6b7bc0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576ef6b7ba8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576ef6b7b88 <col:93> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576ef6b7cb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576ef6b7c50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576ef6b7c38 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576ef6b7c18 <col:112> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5576ef6b7ca0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576ef6b7c88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576ef6b7c68 <col:131> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5576ef6b7f00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576ef6b7ee8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576ef6b7cf8 <col:148> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x5576ef6b7ec8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5576ef6b7e98 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5576ef6b7db8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576ef6b7d70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576ef6b7d58 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576ef6b7d18 <col:166> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576ef6b7da0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576ef6b7d88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576ef6b7d38 <col:184> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5576ef6b7e50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576ef6b7e08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576ef6b7dd8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576ef6b7e80 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5576ef6b7e68 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5576ef6b7e30 <col:212> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5576ef6b85d8 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b8030 <col:3> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b85c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b8590 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5576ef6b8548 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576ef6b8530 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576ef6b8050 <col:20> '_Bool' lvalue Var 0x5576ef6b1760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b8578 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576ef6b8560 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576ef6b8070 <col:36> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x5576ef6b8510 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5576ef6b84e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5576ef6b8280 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576ef6b81a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576ef6b80c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576ef6b80b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576ef6b8090 <col:55> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576ef6b8180 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576ef6b8118 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576ef6b8100 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576ef6b80e0 <col:74> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5576ef6b8168 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576ef6b8150 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576ef6b8130 <col:93> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576ef6b8260 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576ef6b81f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576ef6b81e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576ef6b81c0 <col:112> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5576ef6b8248 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576ef6b8230 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576ef6b8210 <col:131> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5576ef6b84c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576ef6b84b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576ef6b82a0 <col:148> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x5576ef6b8490 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5576ef6b8460 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5576ef6b8360 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576ef6b8318 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576ef6b8300 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576ef6b82c0 <col:166> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576ef6b8348 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576ef6b8330 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576ef6b82e0 <col:184> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5576ef6b8430 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576ef6b83b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576ef6b8380 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576ef6b8448 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5576ef6b8408 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5576ef6b83d8 <col:219> 'int' 0
|   |-BinaryOperator 0x5576ef6b8650 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b85f8 <col:3> 'int' lvalue Var 0x5576ef6b06f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5576ef6b8638 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576ef6b8618 <col:25> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   |-BinaryOperator 0x5576ef6b8780 <line:808:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b8670 <col:3> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   | `-ConditionalOperator 0x5576ef6b8750 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5576ef6b8708 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5576ef6b86f0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5576ef6b8690 <col:7> '_Bool' lvalue Var 0x5576ef6b09d0 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5576ef6b8720 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b86b0 <col:25> 'int' lvalue Var 0x5576ef6b0a50 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5576ef6b8738 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5576ef6b86d0 <col:37> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   |-BinaryOperator 0x5576ef6b8818 <line:809:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b87a0 <col:3> '_Bool' lvalue Var 0x5576ef6b09d0 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5576ef6b87f0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5576ef6b87c0 <col:28> 'int' 0
|   |-CallExpr 0x5576ef6b8870 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b8858 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b8838 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b88c8 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b88b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b8890 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b8bc8 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b88e8 <col:3> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   | `-ConditionalOperator 0x5576ef6b8b98 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5576ef6b89a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5576ef6b8960 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5576ef6b8948 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5576ef6b8908 <col:7> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5576ef6b8990 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5576ef6b8978 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5576ef6b8928 <col:25> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5576ef6b8b80 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b89c8 <col:42> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5576ef6b8b48 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5576ef6b8b18 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5576ef6b8a88 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5576ef6b8a40 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5576ef6b8a28 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5576ef6b89e8 <col:55> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5576ef6b8a70 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5576ef6b8a58 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5576ef6b8a08 <col:73> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5576ef6b8ae8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576ef6b8aa8 <col:90> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5576ef6b8b00 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b8ac8 <col:102> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
|   |-BinaryOperator 0x5576ef6b8dd0 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b8be8 <col:3> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b8db8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b8d88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576ef6b8ca8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576ef6b8c60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576ef6b8c48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576ef6b8c08 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576ef6b8c90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576ef6b8c78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576ef6b8c28 <col:38> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b8d40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b8cf8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b8cc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b8d70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b8d58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b8d20 <col:66> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576ef6b90b8 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b8df0 <col:3> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b90a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b9070 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576ef6b8f90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576ef6b8eb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576ef6b8e68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576ef6b8e50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576ef6b8e10 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576ef6b8e98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576ef6b8e80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576ef6b8e30 <col:38> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5576ef6b8f70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576ef6b8f28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576ef6b8f10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576ef6b8ed0 <col:56> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576ef6b8f58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576ef6b8f40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576ef6b8ef0 <col:74> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b9028 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b8fe0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b8fb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b9058 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b9040 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b9008 <col:102> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5576ef6b92c0 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b90d8 <col:3> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b92a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b9278 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576ef6b9198 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576ef6b9150 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576ef6b9138 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576ef6b90f8 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576ef6b9180 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576ef6b9168 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576ef6b9118 <col:38> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b9230 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b91e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b91b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b9260 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b9248 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b9210 <col:66> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5576ef6b95a8 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576ef6b92e0 <col:3> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5576ef6b9590 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576ef6b9560 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576ef6b9480 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576ef6b93a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576ef6b9358 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576ef6b9340 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576ef6b9300 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576ef6b9388 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576ef6b9370 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576ef6b9320 <col:38> '_Bool' lvalue Var 0x5576ef6b0ce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5576ef6b9460 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576ef6b9418 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576ef6b9400 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576ef6b93c0 <col:56> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576ef6b9448 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576ef6b9430 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576ef6b93e0 <col:74> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5576ef6b9518 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576ef6b94d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576ef6b94a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576ef6b9548 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576ef6b9530 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576ef6b94f8 <col:102> '_Bool' lvalue Var 0x5576ef6b0f38 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5576ef6b9600 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b95e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b95c8 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576ef6b9658 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b9640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b9620 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576ef6b9710 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5576ef6b9678 <col:3> 'int' lvalue Var 0x5576ef6b0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5576ef6b96f0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5576ef6b96d8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576ef6b9698 <col:22> 'int' lvalue Var 0x5576ef6b0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5576ef6b96b8 <col:41> 'int' 1
|   |-CallExpr 0x5576ef6b9768 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576ef6b9750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576ef6b9730 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5576ef6b97e0 <line:821:3, col:36>
|     `-CallExpr 0x5576ef6b97c0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5576ef6b97a8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5576ef6b9788 <col:10> 'void *(void)' Function 0x5576ef656958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5576ef6b9940 prev 0x5576ef6affc0 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x5576ef6b99e0 <line:824:1, line:825:1>
|-FunctionDecl 0x5576ef6b9a10 prev 0x5576ef6b0080 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x5576ef6b9ab0 <line:827:1, line:828:1>
|-FunctionDecl 0x5576ef6b9ae0 prev 0x5576ef6b0140 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x5576ef6b9b90 <line:830:1, line:831:1>
`-FunctionDecl 0x5576ef6b9bf8 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x5576ef6bbc10 <line:833:1, line:858:1>
    |-DeclStmt 0x5576ef6b9d10 <line:834:3, col:18>
    | `-VarDecl 0x5576ef6b9ca8 <col:3, col:13> col:13 used t1139 'pthread_t':'unsigned long'
    |-CallExpr 0x5576ef6b9f18 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5576ef6b9f00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576ef6b9d28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5576ef697488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5576ef6b9d68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5576ef6b9d48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5576ef6b9ca8 't1139' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5576ef6b9f58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5576ef6b9de0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5576ef6b9db8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5576ef6b9d80 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5576ef6b9f70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576ef6b9e00 <col:39> 'void *(void *)' Function 0x5576ef6b1878 'P0' 'void *(void *)'
    | `-ParenExpr 0x5576ef6b9e80 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5576ef6b9e58 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5576ef6b9e20 <col:52> 'int' 0
    |-DeclStmt 0x5576ef6ba000 <line:836:3, col:18>
    | `-VarDecl 0x5576ef6b9f98 <col:3, col:13> col:13 used t1140 'pthread_t':'unsigned long'
    |-CallExpr 0x5576ef6ba1a8 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5576ef6ba190 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576ef6ba018 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5576ef697488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5576ef6ba058 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5576ef6ba038 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5576ef6b9f98 't1140' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5576ef6ba1e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5576ef6ba0d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5576ef6ba0a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5576ef6ba070 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5576ef6ba200 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576ef6ba0f0 <col:39> 'void *(void *)' Function 0x5576ef6b32d0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5576ef6ba170 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5576ef6ba148 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5576ef6ba110 <col:52> 'int' 0
    |-DeclStmt 0x5576ef6ba290 <line:838:3, col:18>
    | `-VarDecl 0x5576ef6ba228 <col:3, col:13> col:13 used t1141 'pthread_t':'unsigned long'
    |-CallExpr 0x5576ef6ba438 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5576ef6ba420 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576ef6ba2a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5576ef697488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5576ef6ba2e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5576ef6ba2c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5576ef6ba228 't1141' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5576ef6ba478 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5576ef6ba360 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5576ef6ba338 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5576ef6ba300 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5576ef6ba490 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576ef6ba380 <col:39> 'void *(void *)' Function 0x5576ef6b4658 'P2' 'void *(void *)'
    | `-ParenExpr 0x5576ef6ba400 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5576ef6ba3d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5576ef6ba3a0 <col:52> 'int' 0
    |-DeclStmt 0x5576ef6ba520 <line:840:3, col:18>
    | `-VarDecl 0x5576ef6ba4b8 <col:3, col:13> col:13 used t1142 'pthread_t':'unsigned long'
    |-CallExpr 0x5576ef6ba6c8 <line:841:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5576ef6ba6b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576ef6ba538 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5576ef697488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5576ef6ba578 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5576ef6ba558 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5576ef6ba4b8 't1142' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5576ef6ba708 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5576ef6ba5f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5576ef6ba5c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5576ef6ba590 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5576ef6ba720 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576ef6ba610 <col:39> 'void *(void *)' Function 0x5576ef6b59d8 'P3' 'void *(void *)'
    | `-ParenExpr 0x5576ef6ba690 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5576ef6ba668 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5576ef6ba630 <col:52> 'int' 0
    |-CallExpr 0x5576ef6ba770 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5576ef6ba758 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576ef6ba738 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5576ef6ba840 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5576ef6ba790 <col:3> '_Bool' lvalue Var 0x5576ef6b1298 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5576ef6ba828 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5576ef6ba808 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5576ef6ba7f0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5576ef6ba7b0 <col:21> 'int' lvalue Var 0x5576ef6b0278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5576ef6ba7d0 <col:41> 'int' 4
    |-CallExpr 0x5576ef6ba898 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5576ef6ba880 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576ef6ba860 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5576ef6ba910 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5576ef6ba8f8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576ef6ba8b8 <col:3> 'void (int)' Function 0x5576ef656790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5576ef6ba950 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5576ef6ba938 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5576ef6ba8d8 <col:21> '_Bool' lvalue Var 0x5576ef6b1298 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5576ef6ba9a0 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5576ef6ba988 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576ef6ba968 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5576ef6baca8 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5576ef6ba9c0 <col:3> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
    | `-ConditionalOperator 0x5576ef6bac78 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5576ef6baa80 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5576ef6baa38 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5576ef6baa20 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5576ef6ba9e0 <col:7> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5576ef6baa68 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5576ef6baa50 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5576ef6baa00 <col:25> '_Bool' lvalue Var 0x5576ef6b0b00 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5576ef6bac60 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5576ef6baaa0 <col:42> 'int' lvalue Var 0x5576ef6b10b0 'b$w_buff0' 'int'
    |   `-ParenExpr 0x5576ef6bac40 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5576ef6bac10 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5576ef6bab60 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5576ef6bab18 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5576ef6bab00 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5576ef6baac0 <col:55> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5576ef6bab48 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5576ef6bab30 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5576ef6baae0 <col:73> '_Bool' lvalue Var 0x5576ef6b0d58 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5576ef6babe0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5576ef6baba0 <col:90> 'int' lvalue Var 0x5576ef6b11a8 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5576ef6babf8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5576ef6babc0 <col:102> 'int' lvalue Var 0x5576ef6b0938 'b' 'int'
    |-BinaryOperator 0x5576ef6baeb0 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5576ef6bacc8 <col:3> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5576ef6bae98 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5576ef6bae68 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5576ef6bad88 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5576ef6bad40 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5576ef6bad28 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5576ef6bace8 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5576ef6bad70 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5576ef6bad58 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5576ef6bad08 <col:38> '_Bool' lvalue Var 0x5576ef6b0b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5576ef6bae20 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5576ef6badd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5576ef6bada8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5576ef6bae50 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5576ef6bae38 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5576ef6bae00 <col:66> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5576ef6bb198 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5576ef6baed0 <col:3> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5576ef6bb180 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5576ef6bb150 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5576ef6bb070 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5576ef6baf90 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5576ef6baf48 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5576ef6baf30 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5576ef6baef0 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5576ef6baf78 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5576ef6baf60 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5576ef6baf10 <col:38> '_Bool' lvalue Var 0x5576ef6b0b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5576ef6bb050 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5576ef6bb008 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5576ef6baff0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5576ef6bafb0 <col:56> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5576ef6bb038 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5576ef6bb020 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5576ef6bafd0 <col:74> '_Bool' lvalue Var 0x5576ef6b0d58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5576ef6bb108 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5576ef6bb0c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5576ef6bb090 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5576ef6bb138 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5576ef6bb120 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5576ef6bb0e8 <col:102> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5576ef6bb3a0 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5576ef6bb1b8 <col:3> '_Bool' lvalue Var 0x5576ef6b0b00 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5576ef6bb388 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5576ef6bb358 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5576ef6bb278 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5576ef6bb230 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5576ef6bb218 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5576ef6bb1d8 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5576ef6bb260 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5576ef6bb248 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5576ef6bb1f8 <col:38> '_Bool' lvalue Var 0x5576ef6b0b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5576ef6bb310 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5576ef6bb2c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5576ef6bb298 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5576ef6bb340 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5576ef6bb328 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5576ef6bb2f0 <col:66> '_Bool' lvalue Var 0x5576ef6b0b00 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5576ef6bb688 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5576ef6bb3c0 <col:3> '_Bool' lvalue Var 0x5576ef6b0d58 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5576ef6bb670 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5576ef6bb640 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5576ef6bb560 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5576ef6bb480 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5576ef6bb438 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5576ef6bb420 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5576ef6bb3e0 <col:20> '_Bool' lvalue Var 0x5576ef6b1128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5576ef6bb468 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5576ef6bb450 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5576ef6bb400 <col:38> '_Bool' lvalue Var 0x5576ef6b0b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5576ef6bb540 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5576ef6bb4f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5576ef6bb4e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5576ef6bb4a0 <col:56> '_Bool' lvalue Var 0x5576ef6b1220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5576ef6bb528 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5576ef6bb510 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5576ef6bb4c0 <col:74> '_Bool' lvalue Var 0x5576ef6b0d58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5576ef6bb5f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5576ef6bb5b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5576ef6bb580 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5576ef6bb628 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5576ef6bb610 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5576ef6bb5d8 <col:102> '_Bool' lvalue Var 0x5576ef6b0d58 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5576ef6bb6e0 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5576ef6bb6c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576ef6bb6a8 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5576ef6bb738 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5576ef6bb720 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576ef6bb700 <col:3> 'void ()' Function 0x5576ef656e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5576ef6bbaa0 <line:854:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x5576ef6bb758 <col:3> '_Bool' lvalue Var 0x5576ef6b1310 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5576ef6bba88 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5576ef6bba70 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5576ef6bba50 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x5576ef6bba30 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x5576ef6bb998 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x5576ef6bb900 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x5576ef6bb868 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x5576ef6bb7d0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5576ef6bb7b8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5576ef6bb778 <col:23> 'int' lvalue Var 0x5576ef6b1650 'z' 'int'
    |         | | | | `-IntegerLiteral 0x5576ef6bb798 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5576ef6bb848 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5576ef6bb830 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5576ef6bb7f0 <col:33> 'int' lvalue Var 0x5576ef6b0398 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5576ef6bb810 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x5576ef6bb8e0 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5576ef6bb8c8 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5576ef6bb888 <col:61> 'int' lvalue Var 0x5576ef6b04b8 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5576ef6bb8a8 <col:84> 'int' 0
    |         | `-BinaryOperator 0x5576ef6bb978 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5576ef6bb960 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5576ef6bb920 <col:89> 'int' lvalue Var 0x5576ef6b05d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5576ef6bb940 <col:112> 'int' 1
    |         `-BinaryOperator 0x5576ef6bba10 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x5576ef6bb9f8 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5576ef6bb9b8 <col:117> 'int' lvalue Var 0x5576ef6b06f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5576ef6bb9d8 <col:140> 'int' 0
    |-CallExpr 0x5576ef6bbaf8 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5576ef6bbae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576ef6bbac0 <col:3> 'void ()' Function 0x5576ef656f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5576ef6bbb70 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5576ef6bbb58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576ef6bbb18 <col:3> 'void (int)' Function 0x5576ef656bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5576ef6bbbc8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5576ef6bbbb0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5576ef6bbb38 <col:21> '_Bool' lvalue Var 0x5576ef6b1310 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5576ef6bbc00 <line:857:3, col:10>
      `-IntegerLiteral 0x5576ef6bbbe0 <col:10> 'int' 0
