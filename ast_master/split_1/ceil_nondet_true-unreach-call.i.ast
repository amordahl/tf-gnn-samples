TranslationUnitDecl 0x561715e8fe18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561715e906d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561715e903b0 '__int128'
|-TypedefDecl 0x561715e90748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561715e903d0 'unsigned __int128'
|-TypedefDecl 0x561715e90a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561715e90820 'struct __NSConstantString_tag'
|   `-Record 0x561715e907a0 '__NSConstantString_tag'
|-TypedefDecl 0x561715e90af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561715e90ab0 'char *'
|   `-BuiltinType 0x561715e8feb0 'char'
|-TypedefDecl 0x561715ecf650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561715e90d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561715e90bd0 'struct __va_list_tag'
|     `-Record 0x561715e90b50 '__va_list_tag'
|-TypedefDecl 0x561715ecf6c0 <./split_1/ceil_nondet_true-unreach-call.i:22:1, col:15> col:15 float_t 'float'
| `-BuiltinType 0x561715e90010 'float'
|-TypedefDecl 0x561715ecf730 <line:23:1, col:16> col:16 double_t 'double'
| `-BuiltinType 0x561715e90030 'double'
|-FunctionDecl 0x561715ecf878 <line:24:15> col:15 implicit acos 'double (double)' extern
| |-ParmVarDecl 0x561715ecf918 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ecf988 <col:15> Implicit
|-FunctionDecl 0x561715ecf9e0 prev 0x561715ecf878 <col:1, col:62> col:15 acos 'double (double)' extern
| |-ParmVarDecl 0x561715ecf7a0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715ecfa88 <col:49>
|-FunctionDecl 0x561715ecfb90 <col:65, col:128> col:79 __acos 'double (double)' extern
| |-ParmVarDecl 0x561715ecfaf8 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715ecfc38 <col:115>
|-FunctionDecl 0x561715ecfd88 <line:26:15> col:15 implicit asin 'double (double)' extern
| |-ParmVarDecl 0x561715ecfe28 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ecfe98 <col:15> Implicit
|-FunctionDecl 0x561715ecfef0 prev 0x561715ecfd88 <col:1, col:62> col:15 asin 'double (double)' extern
| |-ParmVarDecl 0x561715ecfcf0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715ecff98 <col:49>
|-FunctionDecl 0x561715ed00a0 <col:65, col:128> col:79 __asin 'double (double)' extern
| |-ParmVarDecl 0x561715ed0008 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715ed0148 <col:115>
|-FunctionDecl 0x561715ed0250 <line:28:15> col:15 implicit atan 'double (double)' extern
| |-ParmVarDecl 0x561715ed02f0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ed0360 <col:15> Implicit
|-FunctionDecl 0x561715ed03b8 prev 0x561715ed0250 <col:1, col:62> col:15 atan 'double (double)' extern
| |-ParmVarDecl 0x561715ed01b8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715ed0460 <col:49>
|-FunctionDecl 0x561715ed0568 <col:65, col:128> col:79 __atan 'double (double)' extern
| |-ParmVarDecl 0x561715ed04d0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715ed0610 <col:115>
|-FunctionDecl 0x561715ef44c8 <line:30:15> col:15 implicit atan2 'double (double, double)' extern
| |-ParmVarDecl 0x561715ef4568 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715ef45d0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef4648 <col:15> Implicit
|-FunctionDecl 0x561715ef46a0 prev 0x561715ef44c8 <col:1, col:75> col:15 atan2 'double (double, double)' extern
| |-ParmVarDecl 0x561715ef4368 <col:22, col:29> col:29 __y 'double'
| |-ParmVarDecl 0x561715ef43e8 <col:34, col:41> col:41 __x 'double'
| `-NoThrowAttr 0x561715ef4750 <col:62>
|-FunctionDecl 0x561715ef48e0 <col:78, col:154> col:92 __atan2 'double (double, double)' extern
| |-ParmVarDecl 0x561715ef47c0 <col:101, col:108> col:108 __y 'double'
| |-ParmVarDecl 0x561715ef4840 <col:113, col:120> col:120 __x 'double'
| `-NoThrowAttr 0x561715ef4990 <col:141>
|-FunctionDecl 0x561715ef4a98 <line:33:16> col:16 implicit cos 'double (double)' extern
| |-ParmVarDecl 0x561715ef4b38 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef4ba8 <col:16> Implicit
|-FunctionDecl 0x561715ef4c00 prev 0x561715ef4a98 <col:2, col:62> col:16 cos 'double (double)' extern
| |-ParmVarDecl 0x561715ef4a00 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715ef4ca8 <col:49>
|-FunctionDecl 0x561715ef4db0 <col:65, col:127> col:79 __cos 'double (double)' extern
| |-ParmVarDecl 0x561715ef4d18 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x561715ef4e58 <col:114>
|-FunctionDecl 0x561715ef4f60 <line:35:16> col:16 implicit sin 'double (double)' extern
| |-ParmVarDecl 0x561715ef5000 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef5070 <col:16> Implicit
|-FunctionDecl 0x561715ef50c8 prev 0x561715ef4f60 <col:2, col:62> col:16 sin 'double (double)' extern
| |-ParmVarDecl 0x561715ef4ec8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715ef5170 <col:49>
|-FunctionDecl 0x561715ef5278 <col:65, col:127> col:79 __sin 'double (double)' extern
| |-ParmVarDecl 0x561715ef51e0 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x561715ef6350 <col:114>
|-FunctionDecl 0x561715ef6458 <line:37:15> col:15 implicit tan 'double (double)' extern
| |-ParmVarDecl 0x561715ef64f8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef6568 <col:15> Implicit
|-FunctionDecl 0x561715ef65c0 prev 0x561715ef6458 <col:1, col:61> col:15 tan 'double (double)' extern
| |-ParmVarDecl 0x561715ef63c0 <col:20, col:27> col:27 __x 'double'
| `-NoThrowAttr 0x561715ef6668 <col:48>
|-FunctionDecl 0x561715ef6770 <col:64, col:126> col:78 __tan 'double (double)' extern
| |-ParmVarDecl 0x561715ef66d8 <col:85, col:92> col:92 __x 'double'
| `-NoThrowAttr 0x561715ef6818 <col:113>
|-FunctionDecl 0x561715ef6920 <line:42:15> col:15 implicit cosh 'double (double)' extern
| |-ParmVarDecl 0x561715ef69c0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef6a30 <col:15> Implicit
|-FunctionDecl 0x561715ef6a88 prev 0x561715ef6920 <col:1, col:62> col:15 cosh 'double (double)' extern
| |-ParmVarDecl 0x561715ef6888 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715ef6b30 <col:49>
|-FunctionDecl 0x561715ef6c38 <col:65, col:128> col:79 __cosh 'double (double)' extern
| |-ParmVarDecl 0x561715ef6ba0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715ef6ce0 <col:115>
|-FunctionDecl 0x561715ef6de8 <line:44:15> col:15 implicit sinh 'double (double)' extern
| |-ParmVarDecl 0x561715ef6e88 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef6ef8 <col:15> Implicit
|-FunctionDecl 0x561715ef6f50 prev 0x561715ef6de8 <col:1, col:62> col:15 sinh 'double (double)' extern
| |-ParmVarDecl 0x561715ef6d50 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715ef6ff8 <col:49>
|-FunctionDecl 0x561715ef7100 <col:65, col:128> col:79 __sinh 'double (double)' extern
| |-ParmVarDecl 0x561715ef7068 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715ef71a8 <col:115>
|-FunctionDecl 0x561715ef72b0 <line:46:15> col:15 implicit tanh 'double (double)' extern
| |-ParmVarDecl 0x561715ef7360 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef73d0 <col:15> Implicit
|-FunctionDecl 0x561715ef7428 prev 0x561715ef72b0 <col:1, col:62> col:15 tanh 'double (double)' extern
| |-ParmVarDecl 0x561715ef7218 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715ef74d0 <col:49>
|-FunctionDecl 0x561715ef75d8 <col:65, col:128> col:79 __tanh 'double (double)' extern
| |-ParmVarDecl 0x561715ef7540 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715ef7680 <col:115>
|-FunctionDecl 0x561715ef7788 <line:47:15> col:15 implicit acosh 'double (double)' extern
| |-ParmVarDecl 0x561715ef7828 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef7898 <col:15> Implicit
|-FunctionDecl 0x561715ef78f0 prev 0x561715ef7788 <col:1, col:63> col:15 acosh 'double (double)' extern
| |-ParmVarDecl 0x561715ef76f0 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x561715ef7998 <col:50>
|-FunctionDecl 0x561715ef7aa0 <col:66, col:130> col:80 __acosh 'double (double)' extern
| |-ParmVarDecl 0x561715ef7a08 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x561715ef7b48 <col:117>
|-FunctionDecl 0x561715ef7c50 <line:49:15> col:15 implicit asinh 'double (double)' extern
| |-ParmVarDecl 0x561715ef7cf0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef7d60 <col:15> Implicit
|-FunctionDecl 0x561715ef7db8 prev 0x561715ef7c50 <col:1, col:63> col:15 asinh 'double (double)' extern
| |-ParmVarDecl 0x561715ef7bb8 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x561715ef7e60 <col:50>
|-FunctionDecl 0x561715ef7f68 <col:66, col:130> col:80 __asinh 'double (double)' extern
| |-ParmVarDecl 0x561715ef7ed0 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x561715ef8010 <col:117>
|-FunctionDecl 0x561715ef8118 <line:51:15> col:15 implicit atanh 'double (double)' extern
| |-ParmVarDecl 0x561715ef81b8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef8228 <col:15> Implicit
|-FunctionDecl 0x561715ef8280 prev 0x561715ef8118 <col:1, col:63> col:15 atanh 'double (double)' extern
| |-ParmVarDecl 0x561715ef8080 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x561715ef8328 <col:50>
|-FunctionDecl 0x561715ef8450 <col:66, col:130> col:80 __atanh 'double (double)' extern
| |-ParmVarDecl 0x561715ef83b8 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x561715ef84f8 <col:117>
|-FunctionDecl 0x561715ef8600 <line:59:16> col:16 implicit exp 'double (double)' extern
| |-ParmVarDecl 0x561715ef86a0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef8710 <col:16> Implicit
|-FunctionDecl 0x561715ef8768 prev 0x561715ef8600 <col:2, col:62> col:16 exp 'double (double)' extern
| |-ParmVarDecl 0x561715ef8568 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715ef8810 <col:49>
|-FunctionDecl 0x561715ef8918 <col:65, col:127> col:79 __exp 'double (double)' extern
| |-ParmVarDecl 0x561715ef8880 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x561715ef89c0 <col:114>
|-FunctionDecl 0x561715ef8bc8 <line:62:15> col:15 implicit frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x561715ef8c68 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715ef8cd0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x561715ef8d48 <col:15> Implicit
|-FunctionDecl 0x561715ef8da0 prev 0x561715ef8bc8 <col:1, col:80> col:15 frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x561715ef8a30 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x561715ef8ae8 <col:34, col:39> col:39 __exponent 'int *'
| `-NoThrowAttr 0x561715ef8e50 <col:67>
|-FunctionDecl 0x561715ef8fe0 <col:83, col:164> col:97 __frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x561715ef8ec0 <col:106, col:113> col:113 __x 'double'
| |-ParmVarDecl 0x561715ef8f40 <col:118, col:123> col:123 __exponent 'int *'
| `-NoThrowAttr 0x561715ef9090 <col:151>
|-FunctionDecl 0x561715ef9268 <line:65:15> col:15 implicit ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x561715ef9308 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715ef9380 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x561715ef93f8 <col:15> Implicit
|-FunctionDecl 0x561715ef9450 prev 0x561715ef9268 <col:1, col:79> col:15 ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x561715ef9100 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x561715ef9180 <col:34, col:38> col:38 __exponent 'int'
| `-NoThrowAttr 0x561715ef9500 <col:66>
|-FunctionDecl 0x561715ef9690 <col:82, col:162> col:96 __ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x561715ef9570 <col:105, col:112> col:112 __x 'double'
| |-ParmVarDecl 0x561715ef95f0 <col:117, col:121> col:121 __exponent 'int'
| `-NoThrowAttr 0x561715ef9740 <col:149>
|-FunctionDecl 0x561715ef9848 <line:68:16> col:16 implicit log 'double (double)' extern
| |-ParmVarDecl 0x561715ef98e8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef9958 <col:16> Implicit
|-FunctionDecl 0x561715ef99b0 prev 0x561715ef9848 <col:2, col:62> col:16 log 'double (double)' extern
| |-ParmVarDecl 0x561715ef97b0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715ef9a58 <col:49>
|-FunctionDecl 0x561715ef9b60 <col:65, col:127> col:79 __log 'double (double)' extern
| |-ParmVarDecl 0x561715ef9ac8 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x561715ef9c08 <col:114>
|-FunctionDecl 0x561715ef9d10 <line:71:15> col:15 implicit log10 'double (double)' extern
| |-ParmVarDecl 0x561715ef9db0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715ef9e20 <col:15> Implicit
|-FunctionDecl 0x561715ef9e78 prev 0x561715ef9d10 <col:1, col:63> col:15 log10 'double (double)' extern
| |-ParmVarDecl 0x561715ef9c78 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x561715ef9f20 <col:50>
|-FunctionDecl 0x561715efa028 <col:66, col:130> col:80 __log10 'double (double)' extern
| |-ParmVarDecl 0x561715ef9f90 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x561715efa0d0 <col:117>
|-FunctionDecl 0x561715efa2d8 <line:74:15> col:15 implicit modf 'double (double, double *)' extern
| |-ParmVarDecl 0x561715efaba0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715efac08 <<invalid sloc>> <invalid sloc> 'double *'
| `-NoThrowAttr 0x561715efac80 <col:15> Implicit
|-FunctionDecl 0x561715efacd8 prev 0x561715efa2d8 <col:1, col:78> col:15 modf 'double (double, double *)' extern
| |-ParmVarDecl 0x561715efa140 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x561715efa1f8 <col:33, col:41> col:41 __iptr 'double *'
| `-NoThrowAttr 0x561715efad88 <col:65>
|-FunctionDecl 0x561715efaf38 <col:81, col:194> col:95 __modf 'double (double, double *)' extern
| |-ParmVarDecl 0x561715efadf8 <col:103, col:110> col:110 __x 'double'
| |-ParmVarDecl 0x561715efae78 <col:115, col:123> col:123 __iptr 'double *'
| |-NoThrowAttr 0x561715efafe8 <col:147>
| `-NonNullAttr 0x561715efb040 <col:178, col:192> 2
|-FunctionDecl 0x561715efb128 <line:75:15> col:15 implicit expm1 'double (double)' extern
| |-ParmVarDecl 0x561715efb1c8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715efb238 <col:15> Implicit
|-FunctionDecl 0x561715efb290 prev 0x561715efb128 <col:1, col:63> col:15 expm1 'double (double)' extern
| |-ParmVarDecl 0x561715efb090 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x561715efb338 <col:50>
|-FunctionDecl 0x561715efb440 <col:66, col:130> col:80 __expm1 'double (double)' extern
| |-ParmVarDecl 0x561715efb3a8 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x561715efb4e8 <col:117>
|-FunctionDecl 0x561715efb5f0 <line:78:15> col:15 implicit log1p 'double (double)' extern
| |-ParmVarDecl 0x561715efb690 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715efb700 <col:15> Implicit
|-FunctionDecl 0x561715efb758 prev 0x561715efb5f0 <col:1, col:63> col:15 log1p 'double (double)' extern
| |-ParmVarDecl 0x561715efb558 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x561715efb800 <col:50>
|-FunctionDecl 0x561715efb908 <col:66, col:130> col:80 __log1p 'double (double)' extern
| |-ParmVarDecl 0x561715efb870 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x561715efb9b0 <col:117>
|-FunctionDecl 0x561715efbab8 <line:81:15> col:15 implicit logb 'double (double)' extern
| |-ParmVarDecl 0x561715efbbb0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715efbc20 <col:15> Implicit
|-FunctionDecl 0x561715efbc78 prev 0x561715efbab8 <col:1, col:62> col:15 logb 'double (double)' extern
| |-ParmVarDecl 0x561715efba20 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715efbd20 <col:49>
|-FunctionDecl 0x561715efbe28 <col:65, col:128> col:79 __logb 'double (double)' extern
| |-ParmVarDecl 0x561715efbd90 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715efbed0 <col:115>
|-FunctionDecl 0x561715efbfd8 <line:88:15> col:15 implicit exp2 'double (double)' extern
| |-ParmVarDecl 0x561715efc078 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715efc0e8 <col:15> Implicit
|-FunctionDecl 0x561715efc140 prev 0x561715efbfd8 <col:1, col:62> col:15 exp2 'double (double)' extern
| |-ParmVarDecl 0x561715efbf40 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715efc1e8 <col:49>
|-FunctionDecl 0x561715efc2f0 <col:65, col:128> col:79 __exp2 'double (double)' extern
| |-ParmVarDecl 0x561715efc258 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715efc398 <col:115>
|-FunctionDecl 0x561715efc4a0 <line:91:15> col:15 implicit log2 'double (double)' extern
| |-ParmVarDecl 0x561715efc540 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715efc5b0 <col:15> Implicit
|-FunctionDecl 0x561715efc608 prev 0x561715efc4a0 <col:1, col:62> col:15 log2 'double (double)' extern
| |-ParmVarDecl 0x561715efc408 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715efc6b0 <col:49>
|-FunctionDecl 0x561715efc7b8 <col:65, col:128> col:79 __log2 'double (double)' extern
| |-ParmVarDecl 0x561715efc720 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715efc860 <col:115>
|-FunctionDecl 0x561715efc9f0 <line:92:16> col:16 implicit pow 'double (double, double)' extern
| |-ParmVarDecl 0x561715efca90 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715efcaf8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715efcb70 <col:16> Implicit
|-FunctionDecl 0x561715efcbf0 prev 0x561715efc9f0 <col:2, col:74> col:16 pow 'double (double, double)' extern
| |-ParmVarDecl 0x561715efc8d0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x561715efc950 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x561715efcca0 <col:61>
|-FunctionDecl 0x561715efce30 <col:77, col:151> col:91 __pow 'double (double, double)' extern
| |-ParmVarDecl 0x561715efcd10 <col:98, col:105> col:105 __x 'double'
| |-ParmVarDecl 0x561715efcd90 <col:110, col:117> col:117 __y 'double'
| `-NoThrowAttr 0x561715efcee0 <col:138>
|-FunctionDecl 0x561715efcfe8 <line:95:15> col:15 implicit sqrt 'double (double)' extern
| |-ParmVarDecl 0x561715efd088 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715efd0f8 <col:15> Implicit
|-FunctionDecl 0x561715efd150 prev 0x561715efcfe8 <col:1, col:62> col:15 sqrt 'double (double)' extern
| |-ParmVarDecl 0x561715efcf50 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x561715efd1f8 <col:49>
|-FunctionDecl 0x561715efd300 <col:65, col:128> col:79 __sqrt 'double (double)' extern
| |-ParmVarDecl 0x561715efd268 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715efd3a8 <col:115>
|-FunctionDecl 0x561715efd538 <line:101:15> col:15 implicit hypot 'double (double, double)' extern
| |-ParmVarDecl 0x561715efd5d8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715efd640 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715efd6b8 <col:15> Implicit
|-FunctionDecl 0x561715efd710 prev 0x561715efd538 <col:1, col:75> col:15 hypot 'double (double, double)' extern
| |-ParmVarDecl 0x561715efd418 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x561715efd498 <col:34, col:41> col:41 __y 'double'
| `-NoThrowAttr 0x561715efd7c0 <col:62>
|-FunctionDecl 0x561715efd950 <col:78, col:154> col:92 __hypot 'double (double, double)' extern
| |-ParmVarDecl 0x561715efd830 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x561715efd8b0 <col:113, col:120> col:120 __y 'double'
| `-NoThrowAttr 0x561715efda00 <col:141>
|-FunctionDecl 0x561715efdb08 <line:108:15> col:15 implicit cbrt 'double (double)' extern
| |-ParmVarDecl 0x561715efdbd0 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715efdc40 <col:15> Implicit
| `-ConstAttr 0x561715efdc98 <col:15> Implicit
|-FunctionDecl 0x561715efdcc0 prev 0x561715efdb08 <col:1, col:62> col:15 cbrt 'double (double)' extern
| |-ParmVarDecl 0x561715efda70 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x561715efddc0 <col:15> Inherited Implicit
| `-NoThrowAttr 0x561715efdd68 <col:49>
|-FunctionDecl 0x561715efde98 <col:65, col:128> col:79 __cbrt 'double (double)' extern
| |-ParmVarDecl 0x561715efde00 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715efdf40 <col:115>
|-FunctionDecl 0x561715efe048 <line:109:15> col:15 implicit used ceil 'double (double)' extern
| |-ParmVarDecl 0x561715efe0e8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715efe158 <col:15> Implicit
| `-ConstAttr 0x561715efe1b0 <col:15> Implicit
|-FunctionDecl 0x561715efe1d8 prev 0x561715efe048 <col:1, col:90> col:15 used ceil 'double (double)' extern
| |-ParmVarDecl 0x561715efdfb0 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x561715efe280 <col:49>
| `-ConstAttr 0x561715efe2d8 <col:80>
|-FunctionDecl 0x561715efe3b0 <col:93, col:184> col:107 __ceil 'double (double)' extern
| |-ParmVarDecl 0x561715efe318 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x561715efe458 <col:143>
| `-ConstAttr 0x561715efe4b0 <col:174>
|-FunctionDecl 0x561715efe588 <line:112:15> col:15 implicit fabs 'double (double)' extern
| |-ParmVarDecl 0x561715efe628 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715efe698 <col:15> Implicit
| `-ConstAttr 0x561715efe6f0 <col:15> Implicit
|-FunctionDecl 0x561715efe718 prev 0x561715efe588 <col:1, col:90> col:15 fabs 'double (double)' extern
| |-ParmVarDecl 0x561715efe4f0 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x561715efe7c0 <col:49>
| `-ConstAttr 0x561715efe818 <col:80>
|-FunctionDecl 0x561715efe8f0 <col:93, col:184> col:107 __fabs 'double (double)' extern
| |-ParmVarDecl 0x561715efe858 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x561715efe998 <col:143>
| `-ConstAttr 0x561715efe9f0 <col:174>
|-FunctionDecl 0x561715efeac8 <line:115:15> col:15 implicit floor 'double (double)' extern
| |-ParmVarDecl 0x561715efeb68 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715efebe8 <col:15> Implicit
| `-ConstAttr 0x561715efec40 <col:15> Implicit
|-FunctionDecl 0x561715efec68 prev 0x561715efeac8 <col:1, col:91> col:15 floor 'double (double)' extern
| |-ParmVarDecl 0x561715efea30 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x561715efed10 <col:50>
| `-ConstAttr 0x561715efed68 <col:81>
|-FunctionDecl 0x561715efee40 <col:94, col:186> col:108 __floor 'double (double)' extern
| |-ParmVarDecl 0x561715efeda8 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x561715efeee8 <col:145>
| `-ConstAttr 0x561715efef40 <col:176>
|-FunctionDecl 0x561715eff0a0 <line:118:15> col:15 implicit fmod 'double (double, double)' extern
| |-ParmVarDecl 0x561715eff140 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715eff1a8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715eff220 <col:15> Implicit
|-FunctionDecl 0x561715eff278 prev 0x561715eff0a0 <col:1, col:74> col:15 fmod 'double (double, double)' extern
| |-ParmVarDecl 0x561715efef80 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x561715eff000 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x561715eff328 <col:61>
|-FunctionDecl 0x561715eff4b8 <col:77, col:152> col:91 __fmod 'double (double, double)' extern
| |-ParmVarDecl 0x561715eff398 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x561715eff418 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x561715eff568 <col:139>
|-FunctionDecl 0x561715eff6a8 <line:123:1, col:94> col:12 used __isinf 'int (double)' extern
| |-ParmVarDecl 0x561715eff5d8 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x561715eff750 <col:53>
| `-ConstAttr 0x561715eff7a8 <col:84>
|-FunctionDecl 0x561715eff880 <line:126:12> col:12 implicit __finite 'int (double)' extern
| |-ParmVarDecl 0x561715eff920 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715eff990 <col:12> Implicit
| `-ConstAttr 0x561715eff9e8 <col:12> Implicit
|-FunctionDecl 0x561715effa10 prev 0x561715eff880 <col:1, col:95> col:12 __finite 'int (double)' extern
| |-ParmVarDecl 0x561715eff7e8 <col:22, col:29> col:29 __value 'double'
| |-NoThrowAttr 0x561715effab8 <col:54>
| `-ConstAttr 0x561715effb10 <col:85>
|-FunctionDecl 0x561715f00c30 <line:132:1, col:92> col:12 isinf 'int (double)' extern
| |-ParmVarDecl 0x561715effb50 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x561715f00cd8 <col:51>
| `-ConstAttr 0x561715f00d30 <col:82>
|-FunctionDecl 0x561715f00e08 <line:135:12> col:12 implicit finite 'int (double)' extern
| |-ParmVarDecl 0x561715f00ea8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715f00f18 <col:12> Implicit
| `-ConstAttr 0x561715f00f70 <col:12> Implicit
|-FunctionDecl 0x561715f00f98 prev 0x561715f00e08 <col:1, col:93> col:12 finite 'int (double)' extern
| |-ParmVarDecl 0x561715f00d70 <col:20, col:27> col:27 __value 'double'
| |-NoThrowAttr 0x561715f01040 <col:52>
| `-ConstAttr 0x561715f01098 <col:83>
|-FunctionDecl 0x561715f011f8 <line:138:1, col:74> col:15 drem 'double (double, double)' extern
| |-ParmVarDecl 0x561715f010d8 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x561715f01158 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x561715f012a8 <col:61>
|-FunctionDecl 0x561715f01438 <col:77, col:152> col:91 __drem 'double (double, double)' extern
| |-ParmVarDecl 0x561715f01318 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x561715f01398 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x561715f014e8 <col:139>
|-FunctionDecl 0x561715f015f0 <line:142:1, col:69> col:15 significand 'double (double)' extern
| |-ParmVarDecl 0x561715f01558 <col:28, col:35> col:35 __x 'double'
| `-NoThrowAttr 0x561715f01698 <col:56>
|-FunctionDecl 0x561715f017a0 <col:72, col:142> col:86 __significand 'double (double)' extern
| |-ParmVarDecl 0x561715f01708 <col:101, col:108> col:108 __x 'double'
| `-NoThrowAttr 0x561715f01848 <col:129>
|-FunctionDecl 0x561715f019d8 <line:148:15> col:15 implicit copysign 'double (double, double)' extern
| |-ParmVarDecl 0x561715f01a78 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f01ae0 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715f01b58 <col:15> Implicit
| `-ConstAttr 0x561715f01bb0 <col:15> Implicit
|-FunctionDecl 0x561715f01c10 prev 0x561715f019d8 <col:1, col:106> col:15 copysign 'double (double, double)' extern
| |-ParmVarDecl 0x561715f018b8 <col:25, col:32> col:32 __x 'double'
| |-ParmVarDecl 0x561715f01938 <col:37, col:44> col:44 __y 'double'
| |-NoThrowAttr 0x561715f01cc0 <col:65>
| `-ConstAttr 0x561715f01d18 <col:96>
|-FunctionDecl 0x561715f01e78 <col:109, col:216> col:123 __copysign 'double (double, double)' extern
| |-ParmVarDecl 0x561715f01d58 <col:135, col:142> col:142 __x 'double'
| |-ParmVarDecl 0x561715f01dd8 <col:147, col:154> col:154 __y 'double'
| |-NoThrowAttr 0x561715f01f28 <col:175>
| `-ConstAttr 0x561715f01f80 <col:206>
|-FunctionDecl 0x561715f02098 <line:155:15> col:15 implicit nan 'double (const char *)' extern
| |-ParmVarDecl 0x561715f02138 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x561715f021a8 <col:15> Implicit
| `-PureAttr 0x561715f02200 <col:15> Implicit
|-FunctionDecl 0x561715f02228 prev 0x561715f02098 <col:1, col:97> col:15 nan 'double (const char *)' extern
| |-ParmVarDecl 0x561715f01fc0 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x561715f02350 <col:15> Inherited Implicit
| |-NoThrowAttr 0x561715f022d0 <col:56>
| `-ConstAttr 0x561715f02328 <col:87>
|-FunctionDecl 0x561715f02428 <col:100, col:198> col:114 __nan 'double (const char *)' extern
| |-ParmVarDecl 0x561715f02390 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x561715f024d0 <col:157>
| `-ConstAttr 0x561715f02528 <col:188>
|-FunctionDecl 0x561715f02600 <line:161:1, col:94> col:12 used __isnan 'int (double)' extern
| |-ParmVarDecl 0x561715f02568 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x561715f026a8 <col:53>
| `-ConstAttr 0x561715f02700 <col:84>
|-FunctionDecl 0x561715f027d8 <line:165:1, col:92> col:12 isnan 'int (double)' extern
| |-ParmVarDecl 0x561715f02740 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x561715f02880 <col:51>
| `-ConstAttr 0x561715f028d8 <col:82>
|-FunctionDecl 0x561715f029b0 <line:168:1, col:56> col:15 j0 'double (double)' extern
| |-ParmVarDecl 0x561715f02918 <col:19> col:25 'double'
| `-NoThrowAttr 0x561715f02a58 <col:43>
|-FunctionDecl 0x561715f02b60 <col:59, col:116> col:73 __j0 'double (double)' extern
| |-ParmVarDecl 0x561715f02ac8 <col:79> col:85 'double'
| `-NoThrowAttr 0x561715f02c20 <col:103>
|-FunctionDecl 0x561715f02d28 <line:169:1, col:56> col:15 j1 'double (double)' extern
| |-ParmVarDecl 0x561715f02c90 <col:19> col:25 'double'
| `-NoThrowAttr 0x561715f02dd0 <col:43>
|-FunctionDecl 0x561715f02ed8 <col:59, col:116> col:73 __j1 'double (double)' extern
| |-ParmVarDecl 0x561715f02e40 <col:79> col:85 'double'
| `-NoThrowAttr 0x561715f02f80 <col:103>
|-FunctionDecl 0x561715f03158 <line:170:1, col:61> col:15 jn 'double (int, double)' extern
| |-ParmVarDecl 0x561715f02ff0 <col:19> col:22 'int'
| |-ParmVarDecl 0x561715f03070 <col:24> col:30 'double'
| `-NoThrowAttr 0x561715f03208 <col:48>
|-FunctionDecl 0x561715f03398 <col:64, col:126> col:78 __jn 'double (int, double)' extern
| |-ParmVarDecl 0x561715f03278 <col:84> col:87 'int'
| |-ParmVarDecl 0x561715f032f8 <col:89> col:95 'double'
| `-NoThrowAttr 0x561715f03448 <col:113>
|-FunctionDecl 0x561715f03550 <line:171:1, col:56> col:15 y0 'double (double)' extern
| |-ParmVarDecl 0x561715f034b8 <col:19> col:25 'double'
| `-NoThrowAttr 0x561715f035f8 <col:43>
|-FunctionDecl 0x561715f03700 <col:59, col:116> col:73 __y0 'double (double)' extern
| |-ParmVarDecl 0x561715f03668 <col:79> col:85 'double'
| `-NoThrowAttr 0x561715f037a8 <col:103>
|-FunctionDecl 0x561715f038b0 <line:172:1, col:56> col:15 y1 'double (double)' extern
| |-ParmVarDecl 0x561715f03818 <col:19> col:25 'double'
| `-NoThrowAttr 0x561715f03958 <col:43>
|-FunctionDecl 0x561715f03a60 <col:59, col:116> col:73 __y1 'double (double)' extern
| |-ParmVarDecl 0x561715f039c8 <col:79> col:85 'double'
| `-NoThrowAttr 0x561715f03b08 <col:103>
|-FunctionDecl 0x561715f03cd0 <line:173:1, col:61> col:15 yn 'double (int, double)' extern
| |-ParmVarDecl 0x561715f03b78 <col:19> col:22 'int'
| |-ParmVarDecl 0x561715f03c30 <col:24> col:30 'double'
| `-NoThrowAttr 0x561715f03d80 <col:48>
|-FunctionDecl 0x561715f03f10 <col:64, col:126> col:78 __yn 'double (int, double)' extern
| |-ParmVarDecl 0x561715f03df0 <col:84> col:87 'int'
| |-ParmVarDecl 0x561715f03e70 <col:89> col:95 'double'
| `-NoThrowAttr 0x561715f03fc0 <col:113>
|-FunctionDecl 0x561715f040c8 <line:180:15> col:15 implicit erf 'double (double)' extern
| |-ParmVarDecl 0x561715f04168 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f041d8 <col:15> Implicit
|-FunctionDecl 0x561715f04230 prev 0x561715f040c8 <col:1, col:57> col:15 erf 'double (double)' extern
| |-ParmVarDecl 0x561715f04030 <col:20> col:26 'double'
| `-NoThrowAttr 0x561715f042d8 <col:44>
|-FunctionDecl 0x561715f043e0 <col:60, col:118> col:74 __erf 'double (double)' extern
| |-ParmVarDecl 0x561715f04348 <col:81> col:87 'double'
| `-NoThrowAttr 0x561715f04488 <col:105>
|-FunctionDecl 0x561715f04590 <line:181:15> col:15 implicit erfc 'double (double)' extern
| |-ParmVarDecl 0x561715f04630 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f046a0 <col:15> Implicit
|-FunctionDecl 0x561715f046f8 prev 0x561715f04590 <col:1, col:58> col:15 erfc 'double (double)' extern
| |-ParmVarDecl 0x561715f044f8 <col:21> col:27 'double'
| `-NoThrowAttr 0x561715f047a0 <col:45>
|-FunctionDecl 0x561715f048a8 <col:61, col:120> col:75 __erfc 'double (double)' extern
| |-ParmVarDecl 0x561715f04810 <col:83> col:89 'double'
| `-NoThrowAttr 0x561715f04950 <col:107>
|-FunctionDecl 0x561715f04a58 <line:182:15> col:15 implicit lgamma 'double (double)' extern
| |-ParmVarDecl 0x561715f04af8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f04b68 <col:15> Implicit
|-FunctionDecl 0x561715f04c40 prev 0x561715f04a58 <col:1, col:60> col:15 lgamma 'double (double)' extern
| |-ParmVarDecl 0x561715f049c0 <col:23> col:29 'double'
| `-NoThrowAttr 0x561715f04ce8 <col:47>
|-FunctionDecl 0x561715f04df0 <col:63, col:124> col:77 __lgamma 'double (double)' extern
| |-ParmVarDecl 0x561715f04d58 <col:87> col:93 'double'
| `-NoThrowAttr 0x561715f04e98 <col:111>
|-FunctionDecl 0x561715f04fa0 <line:189:15> col:15 implicit tgamma 'double (double)' extern
| |-ParmVarDecl 0x561715f05040 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f050b0 <col:15> Implicit
|-FunctionDecl 0x561715f05108 prev 0x561715f04fa0 <col:1, col:60> col:15 tgamma 'double (double)' extern
| |-ParmVarDecl 0x561715f04f08 <col:23> col:29 'double'
| `-NoThrowAttr 0x561715f051b0 <col:47>
|-FunctionDecl 0x561715f052b8 <col:63, col:124> col:77 __tgamma 'double (double)' extern
| |-ParmVarDecl 0x561715f05220 <col:87> col:93 'double'
| `-NoThrowAttr 0x561715f05360 <col:111>
|-FunctionDecl 0x561715f05468 <line:195:1, col:59> col:15 gamma 'double (double)' extern
| |-ParmVarDecl 0x561715f053d0 <col:22> col:28 'double'
| `-NoThrowAttr 0x561715f05510 <col:46>
|-FunctionDecl 0x561715f05618 <col:62, col:122> col:76 __gamma 'double (double)' extern
| |-ParmVarDecl 0x561715f05580 <col:85> col:91 'double'
| `-NoThrowAttr 0x561715f056c0 <col:109>
|-FunctionDecl 0x561715f05850 <line:202:1, col:79> col:15 lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x561715f05730 <col:25> col:31 'double'
| |-ParmVarDecl 0x561715f057b0 <col:33, col:38> col:38 __signgamp 'int *'
| `-NoThrowAttr 0x561715f05900 <col:66>
|-FunctionDecl 0x561715f05a90 <col:82, col:162> col:96 __lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x561715f05970 <col:108> col:114 'double'
| |-ParmVarDecl 0x561715f059f0 <col:116, col:121> col:121 __signgamp 'int *'
| `-NoThrowAttr 0x561715f05b40 <col:149>
|-FunctionDecl 0x561715f05c80 <line:210:15> col:15 implicit used rint 'double (double)' extern
| |-ParmVarDecl 0x561715f05d20 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715f05d90 <col:15> Implicit
| `-ConstAttr 0x561715f05de8 <col:15> Implicit
|-FunctionDecl 0x561715f05e10 prev 0x561715f05c80 <col:1, col:62> col:15 used rint 'double (double)' extern
| |-ParmVarDecl 0x561715f05bb0 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x561715f05f10 <col:15> Inherited Implicit
| `-NoThrowAttr 0x561715f05eb8 <col:49>
|-FunctionDecl 0x561715f05fe8 <col:65, col:128> col:79 __rint 'double (double)' extern
| |-ParmVarDecl 0x561715f05f50 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x561715f06090 <col:115>
|-FunctionDecl 0x561715f06220 <line:213:15> col:15 implicit nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x561715f062c0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f06328 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f063a0 <col:15> Implicit
|-FunctionDecl 0x561715f063f8 prev 0x561715f06220 <col:1, col:107> col:15 nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x561715f06100 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x561715f06180 <col:38, col:45> col:45 __y 'double'
| |-NoThrowAttr 0x561715f064a8 <col:66>
| `-ConstAttr 0x561715f06500 <col:97>
|-FunctionDecl 0x561715f06660 <col:110, col:218> col:124 __nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x561715f06540 <col:137, col:144> col:144 __x 'double'
| |-ParmVarDecl 0x561715f065c0 <col:149, col:156> col:156 __y 'double'
| |-NoThrowAttr 0x561715f06710 <col:177>
| `-ConstAttr 0x561715f06768 <col:208>
|-FunctionDecl 0x561715f06908 <line:215:15> col:15 implicit nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x561715f069a8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f06a10 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f06a88 <col:15> Implicit
|-FunctionDecl 0x561715f06ae0 prev 0x561715f06908 <col:1, col:113> col:15 nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x561715f067a8 <col:27, col:34> col:34 __x 'double'
| |-ParmVarDecl 0x561715f06828 <col:39, col:51> col:51 __y 'long double'
| |-NoThrowAttr 0x561715f06b90 <col:72>
| `-ConstAttr 0x561715f06be8 <col:103>
|-FunctionDecl 0x561715f07d90 <col:116, col:230> col:130 __nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x561715f07c70 <col:144, col:151> col:151 __x 'double'
| |-ParmVarDecl 0x561715f07cf0 <col:156, col:168> col:168 __y 'long double'
| |-NoThrowAttr 0x561715f07e40 <col:189>
| `-ConstAttr 0x561715f07e98 <col:220>
|-FunctionDecl 0x561715f07ff8 <line:219:15> col:15 implicit remainder 'double (double, double)' extern
| |-ParmVarDecl 0x561715f08098 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f08100 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f08178 <col:15> Implicit
|-FunctionDecl 0x561715f081d0 prev 0x561715f07ff8 <col:1, col:79> col:15 remainder 'double (double, double)' extern
| |-ParmVarDecl 0x561715f07ed8 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x561715f07f58 <col:38, col:45> col:45 __y 'double'
| `-NoThrowAttr 0x561715f08280 <col:66>
|-FunctionDecl 0x561715f08410 <col:82, col:162> col:96 __remainder 'double (double, double)' extern
| |-ParmVarDecl 0x561715f082f0 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x561715f08370 <col:121, col:128> col:128 __y 'double'
| `-NoThrowAttr 0x561715f084c0 <col:149>
|-FunctionDecl 0x561715f08650 <line:223:15> col:15 implicit scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x561715f086f0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f08758 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x561715f087d0 <col:15> Implicit
|-FunctionDecl 0x561715f08828 prev 0x561715f08650 <col:1, col:73> col:15 scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x561715f08530 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x561715f085b0 <col:35, col:39> col:39 __n 'int'
| `-NoThrowAttr 0x561715f088d8 <col:60>
|-FunctionDecl 0x561715f08a68 <col:76, col:150> col:90 __scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x561715f08948 <col:100, col:107> col:107 __x 'double'
| |-ParmVarDecl 0x561715f089c8 <col:112, col:116> col:116 __n 'int'
| `-NoThrowAttr 0x561715f08b18 <col:137>
|-FunctionDecl 0x561715f08c80 <line:227:12> col:12 implicit ilogb 'int (double)' extern
| |-ParmVarDecl 0x561715f08d20 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f08d90 <col:12> Implicit
|-FunctionDecl 0x561715f08de8 prev 0x561715f08c80 <col:1, col:60> col:12 ilogb 'int (double)' extern
| |-ParmVarDecl 0x561715f08b88 <col:19, col:26> col:26 __x 'double'
| `-NoThrowAttr 0x561715f08e90 <col:47>
|-FunctionDecl 0x561715f08f98 <col:63, col:124> col:74 __ilogb 'int (double)' extern
| |-ParmVarDecl 0x561715f08f00 <col:83, col:90> col:90 __x 'double'
| `-NoThrowAttr 0x561715f09040 <col:111>
|-FunctionDecl 0x561715f09218 <line:232:15> col:15 implicit scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x561715f092b8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f09320 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x561715f09398 <col:15> Implicit
|-FunctionDecl 0x561715f093f0 prev 0x561715f09218 <col:1, col:79> col:15 scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x561715f090b0 <col:24, col:31> col:31 __x 'double'
| |-ParmVarDecl 0x561715f09130 <col:36, col:45> col:45 __n 'long'
| `-NoThrowAttr 0x561715f094a0 <col:66>
|-FunctionDecl 0x561715f09630 <col:82, col:162> col:96 __scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x561715f09510 <col:107, col:114> col:114 __x 'double'
| |-ParmVarDecl 0x561715f09590 <col:119, col:128> col:128 __n 'long'
| `-NoThrowAttr 0x561715f096e0 <col:149>
|-FunctionDecl 0x561715f097e8 <line:236:15> col:15 implicit nearbyint 'double (double)' extern
| |-ParmVarDecl 0x561715f09888 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715f098f8 <col:15> Implicit
| `-ConstAttr 0x561715f09950 <col:15> Implicit
|-FunctionDecl 0x561715f09978 prev 0x561715f097e8 <col:1, col:67> col:15 nearbyint 'double (double)' extern
| |-ParmVarDecl 0x561715f09750 <col:26, col:33> col:33 __x 'double'
| |-ConstAttr 0x561715f09a78 <col:15> Inherited Implicit
| `-NoThrowAttr 0x561715f09a20 <col:54>
|-FunctionDecl 0x561715f09b50 <col:70, col:138> col:84 __nearbyint 'double (double)' extern
| |-ParmVarDecl 0x561715f09ab8 <col:97, col:104> col:104 __x 'double'
| `-NoThrowAttr 0x561715f09bf8 <col:125>
|-FunctionDecl 0x561715f09d28 <line:240:15> col:15 implicit round 'double (double)' extern
| |-ParmVarDecl 0x561715f09dc8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715f09e38 <col:15> Implicit
| `-ConstAttr 0x561715f09e90 <col:15> Implicit
|-FunctionDecl 0x561715f09eb8 prev 0x561715f09d28 <col:1, col:91> col:15 round 'double (double)' extern
| |-ParmVarDecl 0x561715f09c90 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x561715f09f60 <col:50>
| `-ConstAttr 0x561715f09fb8 <col:81>
|-FunctionDecl 0x561715f0a090 <col:94, col:186> col:108 __round 'double (double)' extern
| |-ParmVarDecl 0x561715f09ff8 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x561715f0a138 <col:145>
| `-ConstAttr 0x561715f0a190 <col:176>
|-FunctionDecl 0x561715f0a268 <line:244:15> col:15 implicit trunc 'double (double)' extern
| |-ParmVarDecl 0x561715f0a308 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715f0a378 <col:15> Implicit
| `-ConstAttr 0x561715f0a3d0 <col:15> Implicit
|-FunctionDecl 0x561715f0a3f8 prev 0x561715f0a268 <col:1, col:91> col:15 trunc 'double (double)' extern
| |-ParmVarDecl 0x561715f0a1d0 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x561715f0a4a0 <col:50>
| `-ConstAttr 0x561715f0a4f8 <col:81>
|-FunctionDecl 0x561715f0a5d0 <col:94, col:186> col:108 __trunc 'double (double)' extern
| |-ParmVarDecl 0x561715f0a538 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x561715f0a678 <col:145>
| `-ConstAttr 0x561715f0a6d0 <col:176>
|-FunctionDecl 0x561715f0a908 <line:249:15> col:15 implicit remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x561715f0a9a8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f0aa10 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f0aa78 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x561715f0aaf8 <col:15> Implicit
|-FunctionDecl 0x561715f0ab50 prev 0x561715f0a908 <col:1, col:88> col:15 remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x561715f0a710 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x561715f0a790 <col:35, col:42> col:42 __y 'double'
| |-ParmVarDecl 0x561715f0a810 <col:47, col:52> col:52 __quo 'int *'
| `-NoThrowAttr 0x561715f0ac08 <col:75>
|-FunctionDecl 0x561715f0ae48 <col:91, col:180> col:105 __remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x561715f0aca0 <col:115, col:122> col:122 __x 'double'
| |-ParmVarDecl 0x561715f0ad20 <col:127, col:134> col:134 __y 'double'
| |-ParmVarDecl 0x561715f0ada0 <col:139, col:144> col:144 __quo 'int *'
| `-NoThrowAttr 0x561715f0af00 <col:167>
|-FunctionDecl 0x561715f0b048 <line:256:17> col:17 implicit lrint 'long (double)' extern
| |-ParmVarDecl 0x561715f0b0e8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f0b158 <col:17> Implicit
|-FunctionDecl 0x561715f0b1b0 prev 0x561715f0b048 <col:1, col:65> col:17 lrint 'long (double)' extern
| |-ParmVarDecl 0x561715f0af70 <col:24, col:31> col:31 __x 'double'
| `-NoThrowAttr 0x561715f0b258 <col:52>
|-FunctionDecl 0x561715f0b360 <col:68, col:134> col:84 __lrint 'long (double)' extern
| |-ParmVarDecl 0x561715f0b2c8 <col:93, col:100> col:100 __x 'double'
| `-NoThrowAttr 0x561715f0b408 <col:121>
|-FunctionDecl 0x561715f0b548 <line:258:22> col:22 implicit llrint 'long long (double)' extern
| |-ParmVarDecl 0x561715f0b5e8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f0b658 <col:22> Implicit
|-FunctionDecl 0x561715f0b6b0 prev 0x561715f0b548 <col:1, col:71> col:22 llrint 'long long (double)' extern
| |-ParmVarDecl 0x561715f0b478 <col:30, col:37> col:37 __x 'double'
| `-NoThrowAttr 0x561715f0b758 <col:58>
|-FunctionDecl 0x561715f0b860 <col:74, col:146> col:95 __llrint 'long long (double)' extern
| |-ParmVarDecl 0x561715f0b7c8 <col:105, col:112> col:112 __x 'double'
| `-NoThrowAttr 0x561715f0b908 <col:133>
|-FunctionDecl 0x561715f0ba10 <line:262:17> col:17 implicit lround 'long (double)' extern
| |-ParmVarDecl 0x561715f0bab0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f0bb20 <col:17> Implicit
|-FunctionDecl 0x561715f0bb78 prev 0x561715f0ba10 <col:1, col:66> col:17 lround 'long (double)' extern
| |-ParmVarDecl 0x561715f0b978 <col:25, col:32> col:32 __x 'double'
| `-NoThrowAttr 0x561715f0bc20 <col:53>
|-FunctionDecl 0x561715f0bd48 <col:69, col:136> col:85 __lround 'long (double)' extern
| |-ParmVarDecl 0x561715f0bcb0 <col:95, col:102> col:102 __x 'double'
| `-NoThrowAttr 0x561715f0bdf0 <col:123>
|-FunctionDecl 0x561715f0bef8 <line:264:22> col:22 implicit llround 'long long (double)' extern
| |-ParmVarDecl 0x561715f0bf98 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f0c008 <col:22> Implicit
|-FunctionDecl 0x561715f0c060 prev 0x561715f0bef8 <col:1, col:72> col:22 llround 'long long (double)' extern
| |-ParmVarDecl 0x561715f0be60 <col:31, col:38> col:38 __x 'double'
| `-NoThrowAttr 0x561715f0c108 <col:59>
|-FunctionDecl 0x561715f0c210 <col:75, col:148> col:96 __llround 'long long (double)' extern
| |-ParmVarDecl 0x561715f0c178 <col:107, col:114> col:114 __x 'double'
| `-NoThrowAttr 0x561715f0c2b8 <col:135>
|-FunctionDecl 0x561715f0c448 <line:268:15> col:15 implicit fdim 'double (double, double)' extern
| |-ParmVarDecl 0x561715f0c4e8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f0c550 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x561715f0c5c8 <col:15> Implicit
|-FunctionDecl 0x561715f0c620 prev 0x561715f0c448 <col:1, col:74> col:15 fdim 'double (double, double)' extern
| |-ParmVarDecl 0x561715f0c328 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x561715f0c3a8 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x561715f0c6d0 <col:61>
|-FunctionDecl 0x561715f0c860 <col:77, col:152> col:91 __fdim 'double (double, double)' extern
| |-ParmVarDecl 0x561715f0c740 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x561715f0c7c0 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x561715f0c910 <col:139>
|-FunctionDecl 0x561715f0caa0 <line:271:15> col:15 implicit fmax 'double (double, double)' extern
| |-ParmVarDecl 0x561715f0cb40 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f0cba8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715f0cc20 <col:15> Implicit
| `-ConstAttr 0x561715f0cc78 <col:15> Implicit
|-FunctionDecl 0x561715effbf0 prev 0x561715f0caa0 <col:1, col:102> col:15 fmax 'double (double, double)' extern
| |-ParmVarDecl 0x561715f0c980 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x561715f0ca00 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x561715effca0 <col:61>
| `-ConstAttr 0x561715effcf8 <col:92>
|-FunctionDecl 0x561715effe58 <col:105, col:208> col:119 __fmax 'double (double, double)' extern
| |-ParmVarDecl 0x561715effd38 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x561715effdb8 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x561715efff08 <col:167>
| `-ConstAttr 0x561715efff60 <col:198>
|-FunctionDecl 0x561715f000c0 <line:274:15> col:15 implicit fmin 'double (double, double)' extern
| |-ParmVarDecl 0x561715f00160 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f001c8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x561715f00240 <col:15> Implicit
| `-ConstAttr 0x561715f00298 <col:15> Implicit
|-FunctionDecl 0x561715f002c0 prev 0x561715f000c0 <col:1, col:102> col:15 fmin 'double (double, double)' extern
| |-ParmVarDecl 0x561715efffa0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x561715f00020 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x561715f00370 <col:61>
| `-ConstAttr 0x561715f003c8 <col:92>
|-FunctionDecl 0x561715f00528 <col:105, col:208> col:119 __fmin 'double (double, double)' extern
| |-ParmVarDecl 0x561715f00408 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x561715f00488 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x561715f005d8 <col:167>
| `-ConstAttr 0x561715f00630 <col:198>
|-FunctionDecl 0x561715f00708 <line:278:1, line:279:32> line:278:12 __fpclassify 'int (double)' extern
| |-ParmVarDecl 0x561715f00670 <col:26, col:33> col:33 __value 'double'
| |-NoThrowAttr 0x561715f007b0 <col:58>
| `-ConstAttr 0x561715f00808 <line:279:22>
|-FunctionDecl 0x561715f008e0 <line:282:1, line:283:32> line:282:12 __signbit 'int (double)' extern
| |-ParmVarDecl 0x561715f00848 <col:23, col:30> col:30 __value 'double'
| |-NoThrowAttr 0x561715f00988 <col:55>
| `-ConstAttr 0x561715f009e0 <line:283:22>
|-FunctionDecl 0x561715f0ed10 <line:287:15> col:15 implicit fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x561715f0edb0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f0ee18 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x561715f0ee80 <<invalid sloc>> <invalid sloc> 'double'
| |-ConstAttr 0x561715f0ef00 <col:15> Implicit
| `-NoThrowAttr 0x561715f0ef58 <col:15> Implicit
|-FunctionDecl 0x561715f0ef80 prev 0x561715f0ed10 <col:1, col:85> col:15 fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x561715f00a20 <col:20, col:27> col:27 __x 'double'
| |-ParmVarDecl 0x561715f00aa0 <col:32, col:39> col:39 __y 'double'
| |-ParmVarDecl 0x561715f00b20 <col:44, col:51> col:51 __z 'double'
| |-ConstAttr 0x561715f0f090 <col:15> Inherited Implicit
| `-NoThrowAttr 0x561715f0f038 <col:72>
|-FunctionDecl 0x561715f0f278 <col:88, col:174> col:102 __fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x561715f0f0d0 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x561715f0f150 <col:121, col:128> col:128 __y 'double'
| |-ParmVarDecl 0x561715f0f1d0 <col:133, col:140> col:140 __z 'double'
| `-NoThrowAttr 0x561715f0f330 <col:161>
|-FunctionDecl 0x561715f0f4c0 <line:288:1, col:75> col:15 scalb 'double (double, double)' extern
| |-ParmVarDecl 0x561715f0f3a0 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x561715f0f420 <col:34, col:41> col:41 __n 'double'
| `-NoThrowAttr 0x561715f0f570 <col:62>
|-FunctionDecl 0x561715f0f700 <col:78, col:154> col:92 __scalb 'double (double, double)' extern
| |-ParmVarDecl 0x561715f0f5e0 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x561715f0f660 <col:113, col:120> col:120 __n 'double'
| `-NoThrowAttr 0x561715f0f7b0 <col:141>
|-FunctionDecl 0x561715f0f8f8 <line:289:14> col:14 implicit acosf 'float (float)' extern
| |-ParmVarDecl 0x561715f0f998 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f0fa08 <col:14> Implicit
|-FunctionDecl 0x561715f0fa60 prev 0x561715f0f8f8 <col:1, col:61> col:14 acosf 'float (float)' extern
| |-ParmVarDecl 0x561715f0f820 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f0fb08 <col:48>
|-FunctionDecl 0x561715f0fc10 <col:64, col:126> col:77 __acosf 'float (float)' extern
| |-ParmVarDecl 0x561715f0fb78 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f0fce0 <col:113>
|-FunctionDecl 0x561715f0fde8 <line:291:14> col:14 implicit asinf 'float (float)' extern
| |-ParmVarDecl 0x561715f0fe88 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f0fef8 <col:14> Implicit
|-FunctionDecl 0x561715f0ff50 prev 0x561715f0fde8 <col:1, col:61> col:14 asinf 'float (float)' extern
| |-ParmVarDecl 0x561715f0fd50 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f0fff8 <col:48>
|-FunctionDecl 0x561715f10100 <col:64, col:126> col:77 __asinf 'float (float)' extern
| |-ParmVarDecl 0x561715f10068 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f101a8 <col:113>
|-FunctionDecl 0x561715f102b0 <line:293:14> col:14 implicit atanf 'float (float)' extern
| |-ParmVarDecl 0x561715f10350 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f103c0 <col:14> Implicit
|-FunctionDecl 0x561715f10418 prev 0x561715f102b0 <col:1, col:61> col:14 atanf 'float (float)' extern
| |-ParmVarDecl 0x561715f10218 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f104c0 <col:48>
|-FunctionDecl 0x561715f105c8 <col:64, col:126> col:77 __atanf 'float (float)' extern
| |-ParmVarDecl 0x561715f10530 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f10670 <col:113>
|-FunctionDecl 0x561715f10848 <line:295:14> col:14 implicit atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x561715f108e8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f10950 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f109c8 <col:14> Implicit
|-FunctionDecl 0x561715f10a20 prev 0x561715f10848 <col:1, col:73> col:14 atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x561715f106e0 <col:22, col:28> col:28 __y 'float'
| |-ParmVarDecl 0x561715f10760 <col:33, col:39> col:39 __x 'float'
| `-NoThrowAttr 0x561715f10ad0 <col:60>
|-FunctionDecl 0x561715f10cf0 <col:76, col:150> col:89 __atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x561715f10b40 <col:99, col:105> col:105 __y 'float'
| |-ParmVarDecl 0x561715f10bc0 <col:110, col:116> col:116 __x 'float'
| `-NoThrowAttr 0x561715f10da0 <col:137>
|-FunctionDecl 0x561715f10ea8 <line:298:15> col:15 implicit cosf 'float (float)' extern
| |-ParmVarDecl 0x561715f10f48 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f10fb8 <col:15> Implicit
|-FunctionDecl 0x561715f11010 prev 0x561715f10ea8 <col:2, col:61> col:15 cosf 'float (float)' extern
| |-ParmVarDecl 0x561715f10e10 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f110b8 <col:48>
|-FunctionDecl 0x561715f111c0 <col:64, col:125> col:77 __cosf 'float (float)' extern
| |-ParmVarDecl 0x561715f11128 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x561715f11268 <col:112>
|-FunctionDecl 0x561715f11370 <line:300:15> col:15 implicit sinf 'float (float)' extern
| |-ParmVarDecl 0x561715f11410 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f11480 <col:15> Implicit
|-FunctionDecl 0x561715f114d8 prev 0x561715f11370 <col:2, col:61> col:15 sinf 'float (float)' extern
| |-ParmVarDecl 0x561715f112d8 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f11580 <col:48>
|-FunctionDecl 0x561715f11688 <col:64, col:125> col:77 __sinf 'float (float)' extern
| |-ParmVarDecl 0x561715f115f0 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x561715f11730 <col:112>
|-FunctionDecl 0x561715f11838 <line:302:14> col:14 implicit tanf 'float (float)' extern
| |-ParmVarDecl 0x561715f118d8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f11948 <col:14> Implicit
|-FunctionDecl 0x561715f119a0 prev 0x561715f11838 <col:1, col:60> col:14 tanf 'float (float)' extern
| |-ParmVarDecl 0x561715f117a0 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x561715f11a48 <col:47>
|-FunctionDecl 0x561715f11b50 <col:63, col:124> col:76 __tanf 'float (float)' extern
| |-ParmVarDecl 0x561715f11ab8 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x561715f11bf8 <col:111>
|-FunctionDecl 0x561715f11d30 <line:307:14> col:14 implicit coshf 'float (float)' extern
| |-ParmVarDecl 0x561715f11dd0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f11e40 <col:14> Implicit
|-FunctionDecl 0x561715f11e98 prev 0x561715f11d30 <col:1, col:61> col:14 coshf 'float (float)' extern
| |-ParmVarDecl 0x561715f11c68 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f11f40 <col:48>
|-FunctionDecl 0x561715f12048 <col:64, col:126> col:77 __coshf 'float (float)' extern
| |-ParmVarDecl 0x561715f11fb0 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f120f0 <col:113>
|-FunctionDecl 0x561715f121f8 <line:309:14> col:14 implicit sinhf 'float (float)' extern
| |-ParmVarDecl 0x561715f12298 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f12308 <col:14> Implicit
|-FunctionDecl 0x561715f12360 prev 0x561715f121f8 <col:1, col:61> col:14 sinhf 'float (float)' extern
| |-ParmVarDecl 0x561715f12160 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f12408 <col:48>
|-FunctionDecl 0x561715f12510 <col:64, col:126> col:77 __sinhf 'float (float)' extern
| |-ParmVarDecl 0x561715f12478 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f125b8 <col:113>
|-FunctionDecl 0x561715f126c0 <line:311:14> col:14 implicit tanhf 'float (float)' extern
| |-ParmVarDecl 0x561715f12760 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f127d0 <col:14> Implicit
|-FunctionDecl 0x561715f12828 prev 0x561715f126c0 <col:1, col:61> col:14 tanhf 'float (float)' extern
| |-ParmVarDecl 0x561715f12628 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f128d0 <col:48>
|-FunctionDecl 0x561715f129d8 <col:64, col:126> col:77 __tanhf 'float (float)' extern
| |-ParmVarDecl 0x561715f12940 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f12a80 <col:113>
|-FunctionDecl 0x561715f12b88 <line:312:14> col:14 implicit acoshf 'float (float)' extern
| |-ParmVarDecl 0x561715f12c28 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f12c98 <col:14> Implicit
|-FunctionDecl 0x561715f12d10 prev 0x561715f12b88 <col:1, col:62> col:14 acoshf 'float (float)' extern
| |-ParmVarDecl 0x561715f12af0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x561715f12db8 <col:49>
|-FunctionDecl 0x561715f12ec0 <col:65, col:128> col:78 __acoshf 'float (float)' extern
| |-ParmVarDecl 0x561715f12e28 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x561715f12f68 <col:115>
|-FunctionDecl 0x561715f13070 <line:314:14> col:14 implicit asinhf 'float (float)' extern
| |-ParmVarDecl 0x561715f13110 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f13180 <col:14> Implicit
|-FunctionDecl 0x561715f131d8 prev 0x561715f13070 <col:1, col:62> col:14 asinhf 'float (float)' extern
| |-ParmVarDecl 0x561715f12fd8 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x561715f13280 <col:49>
|-FunctionDecl 0x561715f13388 <col:65, col:128> col:78 __asinhf 'float (float)' extern
| |-ParmVarDecl 0x561715f132f0 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x561715f13430 <col:115>
|-FunctionDecl 0x561715f13538 <line:316:14> col:14 implicit atanhf 'float (float)' extern
| |-ParmVarDecl 0x561715f135d8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f13648 <col:14> Implicit
|-FunctionDecl 0x561715f136a0 prev 0x561715f13538 <col:1, col:62> col:14 atanhf 'float (float)' extern
| |-ParmVarDecl 0x561715f134a0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x561715f13748 <col:49>
|-FunctionDecl 0x561715f13850 <col:65, col:128> col:78 __atanhf 'float (float)' extern
| |-ParmVarDecl 0x561715f137b8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x561715f138f8 <col:115>
|-FunctionDecl 0x561715f13a00 <line:324:15> col:15 implicit expf 'float (float)' extern
| |-ParmVarDecl 0x561715f13aa0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f13b10 <col:15> Implicit
|-FunctionDecl 0x561715f13b68 prev 0x561715f13a00 <col:2, col:61> col:15 expf 'float (float)' extern
| |-ParmVarDecl 0x561715f13968 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f13c10 <col:48>
|-FunctionDecl 0x561715f13d50 <col:64, col:125> col:77 __expf 'float (float)' extern
| |-ParmVarDecl 0x561715f13c80 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x561715f13df8 <col:112>
|-FunctionDecl 0x561715f13fc8 <line:327:14> col:14 implicit frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x561715f14068 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f140d0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x561715f14148 <col:14> Implicit
|-FunctionDecl 0x561715f141a0 prev 0x561715f13fc8 <col:1, col:79> col:14 frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x561715f13e68 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x561715f13ee8 <col:33, col:38> col:38 __exponent 'int *'
| `-NoThrowAttr 0x561715f14250 <col:66>
|-FunctionDecl 0x561715f143e0 <col:82, col:162> col:95 __frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x561715f142c0 <col:105, col:111> col:111 __x 'float'
| |-ParmVarDecl 0x561715f14340 <col:116, col:121> col:121 __exponent 'int *'
| `-NoThrowAttr 0x561715f14490 <col:149>
|-FunctionDecl 0x561715f14668 <line:330:14> col:14 implicit ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x561715f14708 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f14770 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x561715f147e8 <col:14> Implicit
|-FunctionDecl 0x561715f14840 prev 0x561715f14668 <col:1, col:78> col:14 ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x561715f14500 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x561715f14580 <col:33, col:37> col:37 __exponent 'int'
| `-NoThrowAttr 0x561715f148f0 <col:65>
|-FunctionDecl 0x561715f14a80 <col:81, col:160> col:94 __ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x561715f14960 <col:104, col:110> col:110 __x 'float'
| |-ParmVarDecl 0x561715f149e0 <col:115, col:119> col:119 __exponent 'int'
| `-NoThrowAttr 0x561715f14b30 <col:147>
|-FunctionDecl 0x561715f14c38 <line:333:15> col:15 implicit logf 'float (float)' extern
| |-ParmVarDecl 0x561715f14d30 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f14da0 <col:15> Implicit
|-FunctionDecl 0x561715f14df8 prev 0x561715f14c38 <col:2, col:61> col:15 logf 'float (float)' extern
| |-ParmVarDecl 0x561715f14ba0 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f14ea0 <col:48>
|-FunctionDecl 0x561715f14fa8 <col:64, col:125> col:77 __logf 'float (float)' extern
| |-ParmVarDecl 0x561715f14f10 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x561715f15050 <col:112>
|-FunctionDecl 0x561715f15158 <line:336:14> col:14 implicit log10f 'float (float)' extern
| |-ParmVarDecl 0x561715f151f8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f15268 <col:14> Implicit
|-FunctionDecl 0x561715f152c0 prev 0x561715f15158 <col:1, col:62> col:14 log10f 'float (float)' extern
| |-ParmVarDecl 0x561715f150c0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x561715f15368 <col:49>
|-FunctionDecl 0x561715f15470 <col:65, col:128> col:78 __log10f 'float (float)' extern
| |-ParmVarDecl 0x561715f153d8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x561715f15518 <col:115>
|-FunctionDecl 0x561715f15718 <line:339:14> col:14 implicit modff 'float (float, float *)' extern
| |-ParmVarDecl 0x561715f157b8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f15820 <<invalid sloc>> <invalid sloc> 'float *'
| `-NoThrowAttr 0x561715f15898 <col:14> Implicit
|-FunctionDecl 0x561715f158f0 prev 0x561715f15718 <col:1, col:76> col:14 modff 'float (float, float *)' extern
| |-ParmVarDecl 0x561715f15588 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x561715f15638 <col:32, col:39> col:39 __iptr 'float *'
| `-NoThrowAttr 0x561715f159a0 <col:63>
|-FunctionDecl 0x561715f15b50 <col:79, col:190> col:92 __modff 'float (float, float *)' extern
| |-ParmVarDecl 0x561715f15a10 <col:101, col:107> col:107 __x 'float'
| |-ParmVarDecl 0x561715f15a90 <col:112, col:119> col:119 __iptr 'float *'
| |-NoThrowAttr 0x561715f15c00 <col:143>
| `-NonNullAttr 0x561715f15c58 <col:174, col:188> 2
|-FunctionDecl 0x561715f15d70 <line:340:14> col:14 implicit expm1f 'float (float)' extern
| |-ParmVarDecl 0x561715f15e10 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f15e80 <col:14> Implicit
|-FunctionDecl 0x561715f15ed8 prev 0x561715f15d70 <col:1, col:62> col:14 expm1f 'float (float)' extern
| |-ParmVarDecl 0x561715f15cb0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x561715f15f80 <col:49>
|-FunctionDecl 0x561715f16088 <col:65, col:128> col:78 __expm1f 'float (float)' extern
| |-ParmVarDecl 0x561715f15ff0 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x561715f16130 <col:115>
|-FunctionDecl 0x561715f16238 <line:343:14> col:14 implicit log1pf 'float (float)' extern
| |-ParmVarDecl 0x561715f162d8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f16348 <col:14> Implicit
|-FunctionDecl 0x561715f163a0 prev 0x561715f16238 <col:1, col:62> col:14 log1pf 'float (float)' extern
| |-ParmVarDecl 0x561715f161a0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x561715f16448 <col:49>
|-FunctionDecl 0x561715f16550 <col:65, col:128> col:78 __log1pf 'float (float)' extern
| |-ParmVarDecl 0x561715f164b8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x561715f165f8 <col:115>
|-FunctionDecl 0x561715f16700 <line:346:14> col:14 implicit logbf 'float (float)' extern
| |-ParmVarDecl 0x561715f167a0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f16810 <col:14> Implicit
|-FunctionDecl 0x561715f16868 prev 0x561715f16700 <col:1, col:61> col:14 logbf 'float (float)' extern
| |-ParmVarDecl 0x561715f16668 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f16910 <col:48>
|-FunctionDecl 0x561715f16a18 <col:64, col:126> col:77 __logbf 'float (float)' extern
| |-ParmVarDecl 0x561715f16980 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f16ac0 <col:113>
|-FunctionDecl 0x561715f16bc8 <line:353:14> col:14 implicit exp2f 'float (float)' extern
| |-ParmVarDecl 0x561715f16c68 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f16cd8 <col:14> Implicit
|-FunctionDecl 0x561715f17d60 prev 0x561715f16bc8 <col:1, col:61> col:14 exp2f 'float (float)' extern
| |-ParmVarDecl 0x561715f16b30 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f17e08 <col:48>
|-FunctionDecl 0x561715f17f10 <col:64, col:126> col:77 __exp2f 'float (float)' extern
| |-ParmVarDecl 0x561715f17e78 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f17fb8 <col:113>
|-FunctionDecl 0x561715f180c0 <line:356:14> col:14 implicit log2f 'float (float)' extern
| |-ParmVarDecl 0x561715f18160 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f181d0 <col:14> Implicit
|-FunctionDecl 0x561715f18228 prev 0x561715f180c0 <col:1, col:61> col:14 log2f 'float (float)' extern
| |-ParmVarDecl 0x561715f18028 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f182d0 <col:48>
|-FunctionDecl 0x561715f183d8 <col:64, col:126> col:77 __log2f 'float (float)' extern
| |-ParmVarDecl 0x561715f18340 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f18480 <col:113>
|-FunctionDecl 0x561715f18610 <line:357:15> col:15 implicit powf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f186b0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f18718 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f18790 <col:15> Implicit
|-FunctionDecl 0x561715f187e8 prev 0x561715f18610 <col:2, col:72> col:15 powf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f184f0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x561715f18570 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x561715f18898 <col:59>
|-FunctionDecl 0x561715f18a28 <col:75, col:147> col:88 __powf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f18908 <col:96, col:102> col:102 __x 'float'
| |-ParmVarDecl 0x561715f18988 <col:107, col:113> col:113 __y 'float'
| `-NoThrowAttr 0x561715f18ad8 <col:134>
|-FunctionDecl 0x561715f18be0 <line:360:14> col:14 implicit sqrtf 'float (float)' extern
| |-ParmVarDecl 0x561715f18c80 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f18cf0 <col:14> Implicit
|-FunctionDecl 0x561715f18d70 prev 0x561715f18be0 <col:1, col:61> col:14 sqrtf 'float (float)' extern
| |-ParmVarDecl 0x561715f18b48 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x561715f18e18 <col:48>
|-FunctionDecl 0x561715f18f20 <col:64, col:126> col:77 __sqrtf 'float (float)' extern
| |-ParmVarDecl 0x561715f18e88 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f18fc8 <col:113>
|-FunctionDecl 0x561715f19158 <line:366:14> col:14 implicit hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f191f8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f19260 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f192d8 <col:14> Implicit
|-FunctionDecl 0x561715f19330 prev 0x561715f19158 <col:1, col:73> col:14 hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f19038 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x561715f190b8 <col:33, col:39> col:39 __y 'float'
| `-NoThrowAttr 0x561715f193e0 <col:60>
|-FunctionDecl 0x561715f19570 <col:76, col:150> col:89 __hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f19450 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x561715f194d0 <col:110, col:116> col:116 __y 'float'
| `-NoThrowAttr 0x561715f19620 <col:137>
|-FunctionDecl 0x561715f19728 <line:373:14> col:14 implicit cbrtf 'float (float)' extern
| |-ParmVarDecl 0x561715f197c8 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f19838 <col:14> Implicit
| `-ConstAttr 0x561715f19890 <col:14> Implicit
|-FunctionDecl 0x561715f198b8 prev 0x561715f19728 <col:1, col:61> col:14 cbrtf 'float (float)' extern
| |-ParmVarDecl 0x561715f19690 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x561715f199b8 <col:14> Inherited Implicit
| `-NoThrowAttr 0x561715f19960 <col:48>
|-FunctionDecl 0x561715f19a90 <col:64, col:126> col:77 __cbrtf 'float (float)' extern
| |-ParmVarDecl 0x561715f199f8 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f19b38 <col:113>
|-FunctionDecl 0x561715f19c40 <line:374:14> col:14 implicit ceilf 'float (float)' extern
| |-ParmVarDecl 0x561715f19ce0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f19d80 <col:14> Implicit
| `-ConstAttr 0x561715f19dd8 <col:14> Implicit
|-FunctionDecl 0x561715f19e00 prev 0x561715f19c40 <col:1, col:89> col:14 ceilf 'float (float)' extern
| |-ParmVarDecl 0x561715f19ba8 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x561715f19ea8 <col:48>
| `-ConstAttr 0x561715f19f00 <col:79>
|-FunctionDecl 0x561715f19fd8 <col:92, col:182> col:105 __ceilf 'float (float)' extern
| |-ParmVarDecl 0x561715f19f40 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x561715f1a080 <col:141>
| `-ConstAttr 0x561715f1a0d8 <col:172>
|-FunctionDecl 0x561715f1a1b0 <line:377:14> col:14 implicit fabsf 'float (float)' extern
| |-ParmVarDecl 0x561715f1a250 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f1a2c0 <col:14> Implicit
| `-ConstAttr 0x561715f1a318 <col:14> Implicit
|-FunctionDecl 0x561715f1a340 prev 0x561715f1a1b0 <col:1, col:89> col:14 fabsf 'float (float)' extern
| |-ParmVarDecl 0x561715f1a118 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x561715f1a3e8 <col:48>
| `-ConstAttr 0x561715f1a440 <col:79>
|-FunctionDecl 0x561715f1a518 <col:92, col:182> col:105 __fabsf 'float (float)' extern
| |-ParmVarDecl 0x561715f1a480 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x561715f1a5c0 <col:141>
| `-ConstAttr 0x561715f1a618 <col:172>
|-FunctionDecl 0x561715f1a6f0 <line:380:14> col:14 implicit floorf 'float (float)' extern
| |-ParmVarDecl 0x561715f1a790 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f1a800 <col:14> Implicit
| `-ConstAttr 0x561715f1a858 <col:14> Implicit
|-FunctionDecl 0x561715f1a880 prev 0x561715f1a6f0 <col:1, col:90> col:14 floorf 'float (float)' extern
| |-ParmVarDecl 0x561715f1a658 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x561715f1a928 <col:49>
| `-ConstAttr 0x561715f1a980 <col:80>
|-FunctionDecl 0x561715f1aa58 <col:93, col:184> col:106 __floorf 'float (float)' extern
| |-ParmVarDecl 0x561715f1a9c0 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x561715f1ab00 <col:143>
| `-ConstAttr 0x561715f1ab58 <col:174>
|-FunctionDecl 0x561715f1acb8 <line:383:14> col:14 implicit fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f1ad90 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f1adf8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f1ae70 <col:14> Implicit
|-FunctionDecl 0x561715f1aec8 prev 0x561715f1acb8 <col:1, col:72> col:14 fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f1ab98 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x561715f1ac18 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x561715f1af78 <col:59>
|-FunctionDecl 0x561715f1b108 <col:75, col:148> col:88 __fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f1afe8 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x561715f1b068 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x561715f1b1b8 <col:135>
|-FunctionDecl 0x561715f1b2f8 <line:388:1, col:94> col:12 used __isinff 'int (float)' extern
| |-ParmVarDecl 0x561715f1b228 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x561715f1b3a0 <col:53>
| `-ConstAttr 0x561715f1b3f8 <col:84>
|-FunctionDecl 0x561715f1b4d0 <line:391:12> col:12 implicit __finitef 'int (float)' extern
| |-ParmVarDecl 0x561715f1b570 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f1b5e0 <col:12> Implicit
| `-ConstAttr 0x561715f1b638 <col:12> Implicit
|-FunctionDecl 0x561715f1b660 prev 0x561715f1b4d0 <col:1, col:95> col:12 __finitef 'int (float)' extern
| |-ParmVarDecl 0x561715f1b438 <col:23, col:29> col:29 __value 'float'
| |-NoThrowAttr 0x561715f1b708 <col:54>
| `-ConstAttr 0x561715f1b760 <col:85>
|-FunctionDecl 0x561715f1b838 <line:397:1, col:92> col:12 isinff 'int (float)' extern
| |-ParmVarDecl 0x561715f1b7a0 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x561715f1b8e0 <col:51>
| `-ConstAttr 0x561715f1b938 <col:82>
|-FunctionDecl 0x561715f1ba10 <line:400:12> col:12 implicit finitef 'int (float)' extern
| |-ParmVarDecl 0x561715f1bab0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f1bb20 <col:12> Implicit
| `-ConstAttr 0x561715f1bb78 <col:12> Implicit
|-FunctionDecl 0x561715f1bba0 prev 0x561715f1ba10 <col:1, col:93> col:12 finitef 'int (float)' extern
| |-ParmVarDecl 0x561715f1b978 <col:21, col:27> col:27 __value 'float'
| |-NoThrowAttr 0x561715f1bc48 <col:52>
| `-ConstAttr 0x561715f1bca0 <col:83>
|-FunctionDecl 0x561715f1be40 <line:403:1, col:72> col:14 dremf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f1bce0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x561715f1bda0 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x561715f1bef0 <col:59>
|-FunctionDecl 0x561715f1c080 <col:75, col:148> col:88 __dremf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f1bf60 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x561715f1bfe0 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x561715f1c130 <col:135>
|-FunctionDecl 0x561715f1c238 <line:407:1, col:68> col:14 significandf 'float (float)' extern
| |-ParmVarDecl 0x561715f1c1a0 <col:28, col:34> col:34 __x 'float'
| `-NoThrowAttr 0x561715f1c2e0 <col:55>
|-FunctionDecl 0x561715f1c3e8 <col:71, col:140> col:84 __significandf 'float (float)' extern
| |-ParmVarDecl 0x561715f1c350 <col:100, col:106> col:106 __x 'float'
| `-NoThrowAttr 0x561715f1c490 <col:127>
|-FunctionDecl 0x561715f1c620 <line:413:14> col:14 implicit copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f1c6c0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f1c728 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f1c7a0 <col:14> Implicit
| `-ConstAttr 0x561715f1c7f8 <col:14> Implicit
|-FunctionDecl 0x561715f1c820 prev 0x561715f1c620 <col:1, col:104> col:14 copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f1c500 <col:25, col:31> col:31 __x 'float'
| |-ParmVarDecl 0x561715f1c580 <col:36, col:42> col:42 __y 'float'
| |-NoThrowAttr 0x561715f1c8d0 <col:63>
| `-ConstAttr 0x561715f1c928 <col:94>
|-FunctionDecl 0x561715f1ca88 <col:107, col:212> col:120 __copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f1c968 <col:133, col:139> col:139 __x 'float'
| |-ParmVarDecl 0x561715f1c9e8 <col:144, col:150> col:150 __y 'float'
| |-NoThrowAttr 0x561715f1cb38 <col:171>
| `-ConstAttr 0x561715f1cb90 <col:202>
|-FunctionDecl 0x561715f1cca8 <line:420:14> col:14 implicit nanf 'float (const char *)' extern
| |-ParmVarDecl 0x561715f1cdb0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x561715f1ce20 <col:14> Implicit
| `-PureAttr 0x561715f1ce78 <col:14> Implicit
|-FunctionDecl 0x561715f1cea0 prev 0x561715f1cca8 <col:1, col:97> col:14 nanf 'float (const char *)' extern
| |-ParmVarDecl 0x561715f1cbd0 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x561715f1cfc8 <col:14> Inherited Implicit
| |-NoThrowAttr 0x561715f1cf48 <col:56>
| `-ConstAttr 0x561715f1cfa0 <col:87>
|-FunctionDecl 0x561715f1d0a0 <col:100, col:198> col:113 __nanf 'float (const char *)' extern
| |-ParmVarDecl 0x561715f1d008 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x561715f1d148 <col:157>
| `-ConstAttr 0x561715f1d1a0 <col:188>
|-FunctionDecl 0x561715f1d278 <line:426:1, col:94> col:12 used __isnanf 'int (float)' extern
| |-ParmVarDecl 0x561715f1d1e0 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x561715f1d320 <col:53>
| `-ConstAttr 0x561715f1d378 <col:84>
|-FunctionDecl 0x561715f1d450 <line:430:1, col:92> col:12 isnanf 'int (float)' extern
| |-ParmVarDecl 0x561715f1d3b8 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x561715f1d4f8 <col:51>
| `-ConstAttr 0x561715f1d550 <col:82>
|-FunctionDecl 0x561715f1d628 <line:433:1, col:55> col:14 j0f 'float (float)' extern
| |-ParmVarDecl 0x561715f1d590 <col:19> col:24 'float'
| `-NoThrowAttr 0x561715f1d6d0 <col:42>
|-FunctionDecl 0x561715f1d7d8 <col:58, col:114> col:71 __j0f 'float (float)' extern
| |-ParmVarDecl 0x561715f1d740 <col:78> col:83 'float'
| `-NoThrowAttr 0x561715f1d880 <col:101>
|-FunctionDecl 0x561715f1d988 <line:434:1, col:55> col:14 j1f 'float (float)' extern
| |-ParmVarDecl 0x561715f1d8f0 <col:19> col:24 'float'
| `-NoThrowAttr 0x561715f1da30 <col:42>
|-FunctionDecl 0x561715f1db38 <col:58, col:114> col:71 __j1f 'float (float)' extern
| |-ParmVarDecl 0x561715f1daa0 <col:78> col:83 'float'
| `-NoThrowAttr 0x561715f1dbe0 <col:101>
|-FunctionDecl 0x561715f1ddf8 <line:435:1, col:60> col:14 jnf 'float (int, float)' extern
| |-ParmVarDecl 0x561715f1dc50 <col:19> col:22 'int'
| |-ParmVarDecl 0x561715f1dcd0 <col:24> col:29 'float'
| `-NoThrowAttr 0x561715f1dea8 <col:47>
|-FunctionDecl 0x561715f1e038 <col:63, col:124> col:76 __jnf 'float (int, float)' extern
| |-ParmVarDecl 0x561715f1df18 <col:83> col:86 'int'
| |-ParmVarDecl 0x561715f1df98 <col:88> col:93 'float'
| `-NoThrowAttr 0x561715f1e0e8 <col:111>
|-FunctionDecl 0x561715f1e1f0 <line:436:1, col:55> col:14 y0f 'float (float)' extern
| |-ParmVarDecl 0x561715f1e158 <col:19> col:24 'float'
| `-NoThrowAttr 0x561715f1e298 <col:42>
|-FunctionDecl 0x561715f1e3a0 <col:58, col:114> col:71 __y0f 'float (float)' extern
| |-ParmVarDecl 0x561715f1e308 <col:78> col:83 'float'
| `-NoThrowAttr 0x561715f1e448 <col:101>
|-FunctionDecl 0x561715f1e550 <line:437:1, col:55> col:14 y1f 'float (float)' extern
| |-ParmVarDecl 0x561715f1e4b8 <col:19> col:24 'float'
| `-NoThrowAttr 0x561715f1e5f8 <col:42>
|-FunctionDecl 0x561715f1e700 <col:58, col:114> col:71 __y1f 'float (float)' extern
| |-ParmVarDecl 0x561715f1e668 <col:78> col:83 'float'
| `-NoThrowAttr 0x561715f1e7a8 <col:101>
|-FunctionDecl 0x561715f1e938 <line:438:1, col:60> col:14 ynf 'float (int, float)' extern
| |-ParmVarDecl 0x561715f1e818 <col:19> col:22 'int'
| |-ParmVarDecl 0x561715f1e898 <col:24> col:29 'float'
| `-NoThrowAttr 0x561715f1e9e8 <col:47>
|-FunctionDecl 0x561715f1eb78 <col:63, col:124> col:76 __ynf 'float (int, float)' extern
| |-ParmVarDecl 0x561715f1ea58 <col:83> col:86 'int'
| |-ParmVarDecl 0x561715f1ead8 <col:88> col:93 'float'
| `-NoThrowAttr 0x561715f1ec28 <col:111>
|-FunctionDecl 0x561715f1edd0 <line:445:14> col:14 implicit erff 'float (float)' extern
| |-ParmVarDecl 0x561715f1ee70 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f1eee0 <col:14> Implicit
|-FunctionDecl 0x561715f1ef38 prev 0x561715f1edd0 <col:1, col:56> col:14 erff 'float (float)' extern
| |-ParmVarDecl 0x561715f1ec98 <col:20> col:25 'float'
| `-NoThrowAttr 0x561715f1efe0 <col:43>
|-FunctionDecl 0x561715f1f0e8 <col:59, col:116> col:72 __erff 'float (float)' extern
| |-ParmVarDecl 0x561715f1f050 <col:80> col:85 'float'
| `-NoThrowAttr 0x561715f1f190 <col:103>
|-FunctionDecl 0x561715f1f298 <line:446:14> col:14 implicit erfcf 'float (float)' extern
| |-ParmVarDecl 0x561715f1f338 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f1f3a8 <col:14> Implicit
|-FunctionDecl 0x561715f1f400 prev 0x561715f1f298 <col:1, col:57> col:14 erfcf 'float (float)' extern
| |-ParmVarDecl 0x561715f1f200 <col:21> col:26 'float'
| `-NoThrowAttr 0x561715f1f4a8 <col:44>
|-FunctionDecl 0x561715f1f5b0 <col:60, col:118> col:73 __erfcf 'float (float)' extern
| |-ParmVarDecl 0x561715f1f518 <col:82> col:87 'float'
| `-NoThrowAttr 0x561715f1f658 <col:105>
|-FunctionDecl 0x561715f1f760 <line:447:14> col:14 implicit lgammaf 'float (float)' extern
| |-ParmVarDecl 0x561715f1f800 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f1f870 <col:14> Implicit
|-FunctionDecl 0x561715f1f8c8 prev 0x561715f1f760 <col:1, col:59> col:14 lgammaf 'float (float)' extern
| |-ParmVarDecl 0x561715f1f6c8 <col:23> col:28 'float'
| `-NoThrowAttr 0x561715f1f970 <col:46>
|-FunctionDecl 0x561715f1fa78 <col:62, col:122> col:75 __lgammaf 'float (float)' extern
| |-ParmVarDecl 0x561715f1f9e0 <col:86> col:91 'float'
| `-NoThrowAttr 0x561715f1fb20 <col:109>
|-FunctionDecl 0x561715f1fc28 <line:454:14> col:14 implicit tgammaf 'float (float)' extern
| |-ParmVarDecl 0x561715f1fcc8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f1fd38 <col:14> Implicit
|-FunctionDecl 0x561715f20df0 prev 0x561715f1fc28 <col:1, col:59> col:14 tgammaf 'float (float)' extern
| |-ParmVarDecl 0x561715f1fb90 <col:23> col:28 'float'
| `-NoThrowAttr 0x561715f20e98 <col:46>
|-FunctionDecl 0x561715f20fa0 <col:62, col:122> col:75 __tgammaf 'float (float)' extern
| |-ParmVarDecl 0x561715f20f08 <col:86> col:91 'float'
| `-NoThrowAttr 0x561715f21048 <col:109>
|-FunctionDecl 0x561715f21150 <line:460:1, col:58> col:14 gammaf 'float (float)' extern
| |-ParmVarDecl 0x561715f210b8 <col:22> col:27 'float'
| `-NoThrowAttr 0x561715f211f8 <col:45>
|-FunctionDecl 0x561715f21300 <col:61, col:120> col:74 __gammaf 'float (float)' extern
| |-ParmVarDecl 0x561715f21268 <col:84> col:89 'float'
| `-NoThrowAttr 0x561715f213a8 <col:107>
|-FunctionDecl 0x561715f21538 <line:467:1, col:78> col:14 lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x561715f21418 <col:25> col:30 'float'
| |-ParmVarDecl 0x561715f21498 <col:32, col:37> col:37 __signgamp 'int *'
| `-NoThrowAttr 0x561715f215e8 <col:65>
|-FunctionDecl 0x561715f21778 <col:81, col:160> col:94 __lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x561715f21658 <col:107> col:112 'float'
| |-ParmVarDecl 0x561715f216d8 <col:114, col:119> col:119 __signgamp 'int *'
| `-NoThrowAttr 0x561715f21828 <col:147>
|-FunctionDecl 0x561715f21930 <line:475:14> col:14 implicit rintf 'float (float)' extern
| |-ParmVarDecl 0x561715f219d0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f21a40 <col:14> Implicit
| `-ConstAttr 0x561715f21a98 <col:14> Implicit
|-FunctionDecl 0x561715f21ac0 prev 0x561715f21930 <col:1, col:61> col:14 rintf 'float (float)' extern
| |-ParmVarDecl 0x561715f21898 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x561715f21bc0 <col:14> Inherited Implicit
| `-NoThrowAttr 0x561715f21b68 <col:48>
|-FunctionDecl 0x561715f21c98 <col:64, col:126> col:77 __rintf 'float (float)' extern
| |-ParmVarDecl 0x561715f21c00 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x561715f21d40 <col:113>
|-FunctionDecl 0x561715f21f20 <line:478:14> col:14 implicit nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f21fc0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f22028 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f220a0 <col:14> Implicit
|-FunctionDecl 0x561715f220f8 prev 0x561715f21f20 <col:1, col:105> col:14 nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f21e00 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x561715f21e80 <col:37, col:43> col:43 __y 'float'
| |-NoThrowAttr 0x561715f221a8 <col:64>
| `-ConstAttr 0x561715f22200 <col:95>
|-FunctionDecl 0x561715f22360 <col:108, col:214> col:121 __nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f22240 <col:135, col:141> col:141 __x 'float'
| |-ParmVarDecl 0x561715f222c0 <col:146, col:152> col:152 __y 'float'
| |-NoThrowAttr 0x561715f22410 <col:173>
| `-ConstAttr 0x561715f22468 <col:204>
|-FunctionDecl 0x561715f22608 <line:480:14> col:14 implicit nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x561715f226a8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f22710 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f22788 <col:14> Implicit
|-FunctionDecl 0x561715f227e0 prev 0x561715f22608 <col:1, col:112> col:14 nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x561715f224a8 <col:27, col:33> col:33 __x 'float'
| |-ParmVarDecl 0x561715f22528 <col:38, col:50> col:50 __y 'long double'
| |-NoThrowAttr 0x561715f22890 <col:71>
| `-ConstAttr 0x561715f228e8 <col:102>
|-FunctionDecl 0x561715f22a48 <col:115, col:228> col:128 __nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x561715f22928 <col:143, col:149> col:149 __x 'float'
| |-ParmVarDecl 0x561715f229a8 <col:154, col:166> col:166 __y 'long double'
| |-NoThrowAttr 0x561715f22af8 <col:187>
| `-ConstAttr 0x561715f22b50 <col:218>
|-FunctionDecl 0x561715f22cb0 <line:484:14> col:14 implicit remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f22d50 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f22e10 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f22e88 <col:14> Implicit
|-FunctionDecl 0x561715f22ee0 prev 0x561715f22cb0 <col:1, col:77> col:14 remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f22b90 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x561715f22c10 <col:37, col:43> col:43 __y 'float'
| `-NoThrowAttr 0x561715f22f90 <col:64>
|-FunctionDecl 0x561715f23120 <col:80, col:158> col:93 __remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f23000 <col:107, col:113> col:113 __x 'float'
| |-ParmVarDecl 0x561715f23080 <col:118, col:124> col:124 __y 'float'
| `-NoThrowAttr 0x561715f231d0 <col:145>
|-FunctionDecl 0x561715f23360 <line:488:14> col:14 implicit scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x561715f23400 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f23468 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x561715f234e0 <col:14> Implicit
|-FunctionDecl 0x561715f23538 prev 0x561715f23360 <col:1, col:72> col:14 scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x561715f23240 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x561715f232c0 <col:34, col:38> col:38 __n 'int'
| `-NoThrowAttr 0x561715f235e8 <col:59>
|-FunctionDecl 0x561715f23778 <col:75, col:148> col:88 __scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x561715f23658 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x561715f236d8 <col:110, col:114> col:114 __n 'int'
| `-NoThrowAttr 0x561715f23828 <col:135>
|-FunctionDecl 0x561715f23930 <line:492:12> col:12 implicit ilogbf 'int (float)' extern
| |-ParmVarDecl 0x561715f239d0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f23a40 <col:12> Implicit
|-FunctionDecl 0x561715f23a98 prev 0x561715f23930 <col:1, col:60> col:12 ilogbf 'int (float)' extern
| |-ParmVarDecl 0x561715f23898 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x561715f23b40 <col:47>
|-FunctionDecl 0x561715f23c48 <col:63, col:124> col:74 __ilogbf 'int (float)' extern
| |-ParmVarDecl 0x561715f23bb0 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x561715f23cf0 <col:111>
|-FunctionDecl 0x561715f23f08 <line:497:14> col:14 implicit scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x561715f23fa8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f24010 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x561715f24088 <col:14> Implicit
|-FunctionDecl 0x561715f240e0 prev 0x561715f23f08 <col:1, col:78> col:14 scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x561715f23d60 <col:24, col:30> col:30 __x 'float'
| |-ParmVarDecl 0x561715f23e20 <col:35, col:44> col:44 __n 'long'
| `-NoThrowAttr 0x561715f24190 <col:65>
|-FunctionDecl 0x561715f24320 <col:81, col:160> col:94 __scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x561715f24200 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x561715f24280 <col:117, col:126> col:126 __n 'long'
| `-NoThrowAttr 0x561715f243d0 <col:147>
|-FunctionDecl 0x561715f244d8 <line:501:14> col:14 implicit nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x561715f24578 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f245e8 <col:14> Implicit
| `-ConstAttr 0x561715f24640 <col:14> Implicit
|-FunctionDecl 0x561715f24668 prev 0x561715f244d8 <col:1, col:66> col:14 nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x561715f24440 <col:26, col:32> col:32 __x 'float'
| |-ConstAttr 0x561715f24768 <col:14> Inherited Implicit
| `-NoThrowAttr 0x561715f24710 <col:53>
|-FunctionDecl 0x561715f24840 <col:69, col:136> col:82 __nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x561715f247a8 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x561715f248e8 <col:123>
|-FunctionDecl 0x561715f249f0 <line:505:14> col:14 implicit roundf 'float (float)' extern
| |-ParmVarDecl 0x561715f24a90 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f24b00 <col:14> Implicit
| `-ConstAttr 0x561715f24b58 <col:14> Implicit
|-FunctionDecl 0x561715f24b80 prev 0x561715f249f0 <col:1, col:90> col:14 roundf 'float (float)' extern
| |-ParmVarDecl 0x561715f24958 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x561715f24c28 <col:49>
| `-ConstAttr 0x561715f24c80 <col:80>
|-FunctionDecl 0x561715f24d58 <col:93, col:184> col:106 __roundf 'float (float)' extern
| |-ParmVarDecl 0x561715f24cc0 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x561715f24e30 <col:143>
| `-ConstAttr 0x561715f24e88 <col:174>
|-FunctionDecl 0x561715f24f60 <line:509:14> col:14 implicit truncf 'float (float)' extern
| |-ParmVarDecl 0x561715f25000 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f25070 <col:14> Implicit
| `-ConstAttr 0x561715f250c8 <col:14> Implicit
|-FunctionDecl 0x561715f250f0 prev 0x561715f24f60 <col:1, col:90> col:14 truncf 'float (float)' extern
| |-ParmVarDecl 0x561715f24ec8 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x561715f25198 <col:49>
| `-ConstAttr 0x561715f251f0 <col:80>
|-FunctionDecl 0x561715f252c8 <col:93, col:184> col:106 __truncf 'float (float)' extern
| |-ParmVarDecl 0x561715f25230 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x561715f25370 <col:143>
| `-ConstAttr 0x561715f253c8 <col:174>
|-FunctionDecl 0x561715f255f8 <line:514:14> col:14 implicit remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x561715f25698 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f25700 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f25768 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x561715f257e8 <col:14> Implicit
|-FunctionDecl 0x561715f25840 prev 0x561715f255f8 <col:1, col:86> col:14 remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x561715f25408 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x561715f25488 <col:34, col:40> col:40 __y 'float'
| |-ParmVarDecl 0x561715f25508 <col:45, col:50> col:50 __quo 'int *'
| `-NoThrowAttr 0x561715f258f8 <col:73>
|-FunctionDecl 0x561715f25b10 <col:89, col:176> col:102 __remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x561715f25968 <col:113, col:119> col:119 __x 'float'
| |-ParmVarDecl 0x561715f259e8 <col:124, col:130> col:130 __y 'float'
| |-ParmVarDecl 0x561715f25a68 <col:135, col:140> col:140 __quo 'int *'
| `-NoThrowAttr 0x561715f25bc8 <col:163>
|-FunctionDecl 0x561715f25d08 <line:521:17> col:17 implicit lrintf 'long (float)' extern
| |-ParmVarDecl 0x561715f25da8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f25e40 <col:17> Implicit
|-FunctionDecl 0x561715f25e98 prev 0x561715f25d08 <col:1, col:65> col:17 lrintf 'long (float)' extern
| |-ParmVarDecl 0x561715f25c38 <col:25, col:31> col:31 __x 'float'
| `-NoThrowAttr 0x561715f25f40 <col:52>
|-FunctionDecl 0x561715f26048 <col:68, col:134> col:84 __lrintf 'long (float)' extern
| |-ParmVarDecl 0x561715f25fb0 <col:94, col:100> col:100 __x 'float'
| `-NoThrowAttr 0x561715f260f0 <col:121>
|-FunctionDecl 0x561715f26238 <line:523:22> col:22 implicit llrintf 'long long (float)' extern
| |-ParmVarDecl 0x561715f262d8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f26348 <col:22> Implicit
|-FunctionDecl 0x561715f263a0 prev 0x561715f26238 <col:1, col:71> col:22 llrintf 'long long (float)' extern
| |-ParmVarDecl 0x561715f26160 <col:31, col:37> col:37 __x 'float'
| `-NoThrowAttr 0x561715f26448 <col:58>
|-FunctionDecl 0x561715f26550 <col:74, col:146> col:95 __llrintf 'long long (float)' extern
| |-ParmVarDecl 0x561715f264b8 <col:106, col:112> col:112 __x 'float'
| `-NoThrowAttr 0x561715f265f8 <col:133>
|-FunctionDecl 0x561715f26700 <line:527:17> col:17 implicit lroundf 'long (float)' extern
| |-ParmVarDecl 0x561715f267a0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f26810 <col:17> Implicit
|-FunctionDecl 0x561715f26868 prev 0x561715f26700 <col:1, col:66> col:17 lroundf 'long (float)' extern
| |-ParmVarDecl 0x561715f26668 <col:26, col:32> col:32 __x 'float'
| `-NoThrowAttr 0x561715f26910 <col:53>
|-FunctionDecl 0x561715f26a18 <col:69, col:136> col:85 __lroundf 'long (float)' extern
| |-ParmVarDecl 0x561715f26980 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x561715f26ac0 <col:123>
|-FunctionDecl 0x561715f26bc8 <line:529:22> col:22 implicit llroundf 'long long (float)' extern
| |-ParmVarDecl 0x561715f26c68 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f26cd8 <col:22> Implicit
|-FunctionDecl 0x561715f26d30 prev 0x561715f26bc8 <col:1, col:72> col:22 llroundf 'long long (float)' extern
| |-ParmVarDecl 0x561715f26b30 <col:32, col:38> col:38 __x 'float'
| `-NoThrowAttr 0x561715f26dd8 <col:59>
|-FunctionDecl 0x561715f0cd70 <col:75, col:148> col:96 __llroundf 'long long (float)' extern
| |-ParmVarDecl 0x561715f0ccd8 <col:108, col:114> col:114 __x 'float'
| `-NoThrowAttr 0x561715f0ce18 <col:135>
|-FunctionDecl 0x561715f0cfa8 <line:533:14> col:14 implicit fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f0d048 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f0d0b0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x561715f0d128 <col:14> Implicit
|-FunctionDecl 0x561715f0d180 prev 0x561715f0cfa8 <col:1, col:72> col:14 fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f0ce88 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x561715f0cf08 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x561715f0d230 <col:59>
|-FunctionDecl 0x561715f0d3c0 <col:75, col:148> col:88 __fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f0d2a0 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x561715f0d320 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x561715f0d470 <col:135>
|-FunctionDecl 0x561715f0d600 <line:536:14> col:14 implicit fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f0d6a0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f0d708 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f0d780 <col:14> Implicit
| `-ConstAttr 0x561715f0d7d8 <col:14> Implicit
|-FunctionDecl 0x561715f0d800 prev 0x561715f0d600 <col:1, col:100> col:14 fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f0d4e0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x561715f0d560 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x561715f0d8b0 <col:59>
| `-ConstAttr 0x561715f0d908 <col:90>
|-FunctionDecl 0x561715f0da68 <col:103, col:204> col:116 __fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f0d948 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x561715f0d9c8 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x561715f0db18 <col:163>
| `-ConstAttr 0x561715f0db70 <col:194>
|-FunctionDecl 0x561715f2ae98 <line:539:14> col:14 implicit fminf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f2af38 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f2afa0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x561715f2b018 <col:14> Implicit
| `-ConstAttr 0x561715f2b070 <col:14> Implicit
|-FunctionDecl 0x561715f2b098 prev 0x561715f2ae98 <col:1, col:100> col:14 fminf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f0dbb0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x561715f0dc30 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x561715f2b148 <col:59>
| `-ConstAttr 0x561715f2b1a0 <col:90>
|-FunctionDecl 0x561715f2b300 <col:103, col:204> col:116 __fminf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f2b1e0 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x561715f2b260 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x561715f2b3b0 <col:163>
| `-ConstAttr 0x561715f2b408 <col:194>
|-FunctionDecl 0x561715f2b4e0 <line:543:1, line:544:32> line:543:12 __fpclassifyf 'int (float)' extern
| |-ParmVarDecl 0x561715f2b448 <col:27, col:33> col:33 __value 'float'
| |-NoThrowAttr 0x561715f2b588 <col:58>
| `-ConstAttr 0x561715f2b5e0 <line:544:22>
|-FunctionDecl 0x561715f2b6b8 <line:547:1, line:548:32> line:547:12 __signbitf 'int (float)' extern
| |-ParmVarDecl 0x561715f2b620 <col:24, col:30> col:30 __value 'float'
| |-NoThrowAttr 0x561715f2b760 <col:55>
| `-ConstAttr 0x561715f2b7b8 <line:548:22>
|-FunctionDecl 0x561715f2b9e8 <line:552:14> col:14 implicit fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x561715f2ba88 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f2baf0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x561715f2bb58 <<invalid sloc>> <invalid sloc> 'float'
| |-ConstAttr 0x561715f2bbd8 <col:14> Implicit
| `-NoThrowAttr 0x561715f2bc30 <col:14> Implicit
|-FunctionDecl 0x561715f2bc58 prev 0x561715f2b9e8 <col:1, col:82> col:14 fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x561715f2b7f8 <col:20, col:26> col:26 __x 'float'
| |-ParmVarDecl 0x561715f2b878 <col:31, col:37> col:37 __y 'float'
| |-ParmVarDecl 0x561715f2b8f8 <col:42, col:48> col:48 __z 'float'
| |-ConstAttr 0x561715f2bd68 <col:14> Inherited Implicit
| `-NoThrowAttr 0x561715f2bd10 <col:69>
|-FunctionDecl 0x561715f2bf98 <col:85, col:168> col:98 __fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x561715f2bda8 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x561715f2be70 <col:117, col:123> col:123 __y 'float'
| |-ParmVarDecl 0x561715f2bef0 <col:128, col:134> col:134 __z 'float'
| `-NoThrowAttr 0x561715f2c050 <col:155>
|-FunctionDecl 0x561715f2c1e0 <line:553:1, col:73> col:14 scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f2c0c0 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x561715f2c140 <col:33, col:39> col:39 __n 'float'
| `-NoThrowAttr 0x561715f2c290 <col:60>
|-FunctionDecl 0x561715f2c420 <col:76, col:150> col:89 __scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x561715f2c300 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x561715f2c380 <col:110, col:116> col:116 __n 'float'
| `-NoThrowAttr 0x561715f2c4d0 <col:137>
|-FunctionDecl 0x561715f2c618 <line:554:20> col:20 implicit acosl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2c6b8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2c728 <col:20> Implicit
|-FunctionDecl 0x561715f2c780 prev 0x561715f2c618 <col:1, col:73> col:20 acosl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2c540 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f2c828 <col:60>
|-FunctionDecl 0x561715f2c930 <col:76, col:150> col:95 __acosl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2c898 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f2c9d8 <col:137>
|-FunctionDecl 0x561715f2cae0 <line:556:20> col:20 implicit asinl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2cb80 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2cbf0 <col:20> Implicit
|-FunctionDecl 0x561715f2cc48 prev 0x561715f2cae0 <col:1, col:73> col:20 asinl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2ca48 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f2ccf0 <col:60>
|-FunctionDecl 0x561715f2ce80 <col:76, col:150> col:95 __asinl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2cd60 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f2cf28 <col:137>
|-FunctionDecl 0x561715f2d030 <line:558:20> col:20 implicit atanl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2d0d0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2d140 <col:20> Implicit
|-FunctionDecl 0x561715f2d198 prev 0x561715f2d030 <col:1, col:73> col:20 atanl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2cf98 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f2d240 <col:60>
|-FunctionDecl 0x561715f2d348 <col:76, col:150> col:95 __atanl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2d2b0 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f2d3f0 <col:137>
|-FunctionDecl 0x561715f2d5c8 <line:560:20> col:20 implicit atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f2d668 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f2d6d0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2d748 <col:20> Implicit
|-FunctionDecl 0x561715f2d7a0 prev 0x561715f2d5c8 <col:1, col:91> col:20 atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f2d460 <col:28, col:40> col:40 __y 'long double'
| |-ParmVarDecl 0x561715f2d4e0 <col:45, col:57> col:57 __x 'long double'
| `-NoThrowAttr 0x561715f2d850 <col:78>
|-FunctionDecl 0x561715f2d9e0 <col:94, col:186> col:113 __atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f2d8c0 <col:123, col:135> col:135 __y 'long double'
| |-ParmVarDecl 0x561715f2d940 <col:140, col:152> col:152 __x 'long double'
| `-NoThrowAttr 0x561715f2da90 <col:173>
|-FunctionDecl 0x561715f2db98 <line:563:21> col:21 implicit cosl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2dc38 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2dca8 <col:21> Implicit
|-FunctionDecl 0x561715f2dd00 prev 0x561715f2db98 <col:2, col:73> col:21 cosl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2db00 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f2dda8 <col:60>
|-FunctionDecl 0x561715f2dec0 <col:76, col:149> col:95 __cosl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2de18 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x561715f2df68 <col:136>
|-FunctionDecl 0x561715f2e070 <line:565:21> col:21 implicit sinl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2e110 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2e180 <col:21> Implicit
|-FunctionDecl 0x561715f2e1d8 prev 0x561715f2e070 <col:2, col:73> col:21 sinl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2dfd8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f2e280 <col:60>
|-FunctionDecl 0x561715f2e388 <col:76, col:149> col:95 __sinl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2e2f0 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x561715f2e430 <col:136>
|-FunctionDecl 0x561715f2e538 <line:567:20> col:20 implicit tanl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2e5d8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2e648 <col:20> Implicit
|-FunctionDecl 0x561715f2e6a0 prev 0x561715f2e538 <col:1, col:72> col:20 tanl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2e4a0 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x561715f2e748 <col:59>
|-FunctionDecl 0x561715f2e850 <col:75, col:148> col:94 __tanl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2e7b8 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x561715f2e8f8 <col:135>
|-FunctionDecl 0x561715f2ea00 <line:572:20> col:20 implicit coshl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2eaa0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2eb10 <col:20> Implicit
|-FunctionDecl 0x561715f2eb68 prev 0x561715f2ea00 <col:1, col:73> col:20 coshl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2e968 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f2ec10 <col:60>
|-FunctionDecl 0x561715f2ed18 <col:76, col:150> col:95 __coshl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2ec80 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f2edc0 <col:137>
|-FunctionDecl 0x561715f2ef38 <line:574:20> col:20 implicit sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2efd8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2f048 <col:20> Implicit
|-FunctionDecl 0x561715f2f0a0 prev 0x561715f2ef38 <col:1, col:73> col:20 sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2eea0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f2f148 <col:60>
|-FunctionDecl 0x561715f2f250 <col:76, col:150> col:95 __sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2f1b8 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f2f2f8 <col:137>
|-FunctionDecl 0x561715f2f400 <line:576:20> col:20 implicit tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2f4a0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2f510 <col:20> Implicit
|-FunctionDecl 0x561715f2f568 prev 0x561715f2f400 <col:1, col:73> col:20 tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2f368 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f2f610 <col:60>
|-FunctionDecl 0x561715f2f718 <col:76, col:150> col:95 __tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2f680 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f2f7c0 <col:137>
|-FunctionDecl 0x561715f2f8c8 <line:577:20> col:20 implicit acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2f968 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2f9d8 <col:20> Implicit
|-FunctionDecl 0x561715f2fa30 prev 0x561715f2f8c8 <col:1, col:74> col:20 acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2f830 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x561715f2fad8 <col:61>
|-FunctionDecl 0x561715f2fbe0 <col:77, col:152> col:96 __acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2fb48 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x561715f2fc88 <col:139>
|-FunctionDecl 0x561715f2fd90 <line:579:20> col:20 implicit asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2fe30 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f2feb0 <col:20> Implicit
|-FunctionDecl 0x561715f2ff08 prev 0x561715f2fd90 <col:1, col:74> col:20 asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f2fcf8 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x561715f2ffb0 <col:61>
|-FunctionDecl 0x561715f300b8 <col:77, col:152> col:96 __asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f30020 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x561715f30160 <col:139>
|-FunctionDecl 0x561715f30268 <line:581:20> col:20 implicit atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f30308 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f30378 <col:20> Implicit
|-FunctionDecl 0x561715f303d0 prev 0x561715f30268 <col:1, col:74> col:20 atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f301d0 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x561715f30478 <col:61>
|-FunctionDecl 0x561715f30580 <col:77, col:152> col:96 __atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f304e8 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x561715f30628 <col:139>
|-FunctionDecl 0x561715f30730 <line:589:21> col:21 implicit expl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f307d0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f30840 <col:21> Implicit
|-FunctionDecl 0x561715f30898 prev 0x561715f30730 <col:2, col:73> col:21 expl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f30698 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f30940 <col:60>
|-FunctionDecl 0x561715f30a48 <col:76, col:149> col:95 __expl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f309b0 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x561715f30af0 <col:136>
|-FunctionDecl 0x561715f30cc8 <line:592:20> col:20 implicit frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x561715f30d68 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f30dd0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x561715f30e48 <col:20> Implicit
|-FunctionDecl 0x561715f30ec0 prev 0x561715f30cc8 <col:1, col:91> col:20 frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x561715f30b60 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x561715f30be0 <col:45, col:50> col:50 __exponent 'int *'
| `-NoThrowAttr 0x561715f30f70 <col:78>
|-FunctionDecl 0x561715f31100 <col:94, col:186> col:113 __frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x561715f30fe0 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x561715f31060 <col:140, col:145> col:145 __exponent 'int *'
| `-NoThrowAttr 0x561715f311b0 <col:173>
|-FunctionDecl 0x561715f31388 <line:595:20> col:20 implicit ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x561715f31428 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f31490 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x561715f31508 <col:20> Implicit
|-FunctionDecl 0x561715f31560 prev 0x561715f31388 <col:1, col:90> col:20 ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x561715f31220 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x561715f312a0 <col:45, col:49> col:49 __exponent 'int'
| `-NoThrowAttr 0x561715f31610 <col:77>
|-FunctionDecl 0x561715f317a0 <col:93, col:184> col:112 __ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x561715f31680 <col:122, col:134> col:134 __x 'long double'
| |-ParmVarDecl 0x561715f31700 <col:139, col:143> col:143 __exponent 'int'
| `-NoThrowAttr 0x561715f31850 <col:171>
|-FunctionDecl 0x561715f31958 <line:598:21> col:21 implicit logl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f319f8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f31a68 <col:21> Implicit
|-FunctionDecl 0x561715f31ac0 prev 0x561715f31958 <col:2, col:73> col:21 logl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f318c0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f31b68 <col:60>
|-FunctionDecl 0x561715f31c70 <col:76, col:149> col:95 __logl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f31bd8 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x561715f31d18 <col:136>
|-FunctionDecl 0x561715f31e20 <line:601:20> col:20 implicit log10l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f31ed0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f31f40 <col:20> Implicit
|-FunctionDecl 0x561715f31f98 prev 0x561715f31e20 <col:1, col:74> col:20 log10l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f31d88 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x561715f32040 <col:61>
|-FunctionDecl 0x561715f32148 <col:77, col:152> col:96 __log10l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f320b0 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x561715f321f0 <col:139>
|-FunctionDecl 0x561715f323f8 <line:604:20> col:20 implicit modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x561715f32498 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f32500 <<invalid sloc>> <invalid sloc> 'long double *'
| `-NoThrowAttr 0x561715f32578 <col:20> Implicit
|-FunctionDecl 0x561715f325d0 prev 0x561715f323f8 <col:1, col:94> col:20 modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x561715f32260 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x561715f32318 <col:44, col:57> col:57 __iptr 'long double *'
| `-NoThrowAttr 0x561715f32680 <col:81>
|-FunctionDecl 0x561715f32830 <col:97, col:226> col:116 __modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x561715f326f0 <col:125, col:137> col:137 __x 'long double'
| |-ParmVarDecl 0x561715f32770 <col:142, col:155> col:155 __iptr 'long double *'
| |-NoThrowAttr 0x561715f328e0 <col:179>
| `-NonNullAttr 0x561715f32938 <col:210, col:224> 2
|-FunctionDecl 0x561715f32a28 <line:605:20> col:20 implicit expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f32ac8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f32b38 <col:20> Implicit
|-FunctionDecl 0x561715f32b90 prev 0x561715f32a28 <col:1, col:74> col:20 expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f32990 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x561715f32c38 <col:61>
|-FunctionDecl 0x561715f32d40 <col:77, col:152> col:96 __expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f32ca8 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x561715f32de8 <col:139>
|-FunctionDecl 0x561715f32f10 <line:608:20> col:20 implicit log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f32fb0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f33020 <col:20> Implicit
|-FunctionDecl 0x561715f33078 prev 0x561715f32f10 <col:1, col:74> col:20 log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f32e58 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x561715f33120 <col:61>
|-FunctionDecl 0x561715f33228 <col:77, col:152> col:96 __log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f33190 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x561715f332d0 <col:139>
|-FunctionDecl 0x561715f333d8 <line:611:20> col:20 implicit logbl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f33478 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f334e8 <col:20> Implicit
|-FunctionDecl 0x561715f33540 prev 0x561715f333d8 <col:1, col:73> col:20 logbl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f33340 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f335e8 <col:60>
|-FunctionDecl 0x561715f336f0 <col:76, col:150> col:95 __logbl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f33658 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f33798 <col:137>
|-FunctionDecl 0x561715f338a0 <line:618:20> col:20 implicit exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f33940 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f339b0 <col:20> Implicit
|-FunctionDecl 0x561715f33a08 prev 0x561715f338a0 <col:1, col:73> col:20 exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f33808 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f33ab0 <col:60>
|-FunctionDecl 0x561715f33bb8 <col:76, col:150> col:95 __exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f33b20 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f33c60 <col:137>
|-FunctionDecl 0x561715f33d68 <line:621:20> col:20 implicit log2l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f33e08 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f33e78 <col:20> Implicit
|-FunctionDecl 0x561715f33ef0 prev 0x561715f33d68 <col:1, col:73> col:20 log2l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f33cd0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f33f98 <col:60>
|-FunctionDecl 0x561715f340a0 <col:76, col:150> col:95 __log2l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f34008 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f34148 <col:137>
|-FunctionDecl 0x561715f342d8 <line:622:21> col:21 implicit powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f34378 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f343e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f34458 <col:21> Implicit
|-FunctionDecl 0x561715f344b0 prev 0x561715f342d8 <col:2, col:90> col:21 powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f341b8 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x561715f34238 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x561715f34560 <col:77>
|-FunctionDecl 0x561715f346f0 <col:93, col:183> col:112 __powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f345d0 <col:120, col:132> col:132 __x 'long double'
| |-ParmVarDecl 0x561715f34650 <col:137, col:149> col:149 __y 'long double'
| `-NoThrowAttr 0x561715f347a0 <col:170>
|-FunctionDecl 0x561715f348a8 <line:625:20> col:20 implicit sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f34948 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f349b8 <col:20> Implicit
|-FunctionDecl 0x561715f34a10 prev 0x561715f348a8 <col:1, col:73> col:20 sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f34810 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x561715f34ab8 <col:60>
|-FunctionDecl 0x561715f34bc0 <col:76, col:150> col:95 __sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f34b28 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f34c68 <col:137>
|-FunctionDecl 0x561715f34df8 <line:631:20> col:20 implicit hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f34f00 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f34f68 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f34fe0 <col:20> Implicit
|-FunctionDecl 0x561715f35038 prev 0x561715f34df8 <col:1, col:91> col:20 hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f34cd8 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x561715f34d58 <col:45, col:57> col:57 __y 'long double'
| `-NoThrowAttr 0x561715f350e8 <col:78>
|-FunctionDecl 0x561715f35278 <col:94, col:186> col:113 __hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f35158 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x561715f351d8 <col:140, col:152> col:152 __y 'long double'
| `-NoThrowAttr 0x561715f35328 <col:173>
|-FunctionDecl 0x561715f35430 <line:638:20> col:20 implicit cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f354d0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f35540 <col:20> Implicit
| `-ConstAttr 0x561715f35598 <col:20> Implicit
|-FunctionDecl 0x561715f355c0 prev 0x561715f35430 <col:1, col:73> col:20 cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f35398 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x561715f356c0 <col:20> Inherited Implicit
| `-NoThrowAttr 0x561715f35668 <col:60>
|-FunctionDecl 0x561715f35798 <col:76, col:150> col:95 __cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f35700 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f35840 <col:137>
|-FunctionDecl 0x561715f35948 <line:639:20> col:20 implicit ceill 'long double (long double)' extern
| |-ParmVarDecl 0x561715f359e8 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f35a58 <col:20> Implicit
| `-ConstAttr 0x561715f35ab0 <col:20> Implicit
|-FunctionDecl 0x561715f35ad8 prev 0x561715f35948 <col:1, col:101> col:20 ceill 'long double (long double)' extern
| |-ParmVarDecl 0x561715f358b0 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x561715f35b80 <col:60>
| `-ConstAttr 0x561715f35bd8 <col:91>
|-FunctionDecl 0x561715f35cb0 <col:104, col:206> col:123 __ceill 'long double (long double)' extern
| |-ParmVarDecl 0x561715f35c18 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x561715f35d58 <col:165>
| `-ConstAttr 0x561715f35db0 <col:196>
|-FunctionDecl 0x561715f35f10 <line:642:20> col:20 implicit fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f35fb0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f36020 <col:20> Implicit
| `-ConstAttr 0x561715f36078 <col:20> Implicit
|-FunctionDecl 0x561715f360a0 prev 0x561715f35f10 <col:1, col:101> col:20 fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f35df0 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x561715f36148 <col:60>
| `-ConstAttr 0x561715f361a0 <col:91>
|-FunctionDecl 0x561715f36278 <col:104, col:206> col:123 __fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f361e0 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x561715f36320 <col:165>
| `-ConstAttr 0x561715f36378 <col:196>
|-FunctionDecl 0x561715f36450 <line:645:20> col:20 implicit floorl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f364f0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f36560 <col:20> Implicit
| `-ConstAttr 0x561715f365b8 <col:20> Implicit
|-FunctionDecl 0x561715f365e0 prev 0x561715f36450 <col:1, col:102> col:20 floorl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f363b8 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x561715f36688 <col:61>
| `-ConstAttr 0x561715f366e0 <col:92>
|-FunctionDecl 0x561715f367b8 <col:105, col:208> col:124 __floorl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f36720 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x561715f36860 <col:167>
| `-ConstAttr 0x561715f368b8 <col:198>
|-FunctionDecl 0x561715f36a18 <line:648:20> col:20 implicit fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f36ab8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f36b20 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f36b98 <col:20> Implicit
|-FunctionDecl 0x561715f36bf0 prev 0x561715f36a18 <col:1, col:90> col:20 fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f368f8 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x561715f36978 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x561715f36ca0 <col:77>
|-FunctionDecl 0x561715f36e30 <col:93, col:184> col:112 __fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f36d10 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x561715f36d90 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x561715f36ee0 <col:171>
|-FunctionDecl 0x561715f37038 <line:653:1, col:100> col:12 used __isinfl 'int (long double)' extern
| |-ParmVarDecl 0x561715f36f68 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x561715f370e0 <col:59>
| `-ConstAttr 0x561715f37138 <col:90>
|-FunctionDecl 0x561715f37210 <line:656:12> col:12 implicit __finitel 'int (long double)' extern
| |-ParmVarDecl 0x561715f372b0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f37320 <col:12> Implicit
| `-ConstAttr 0x561715f37378 <col:12> Implicit
|-FunctionDecl 0x561715f373a0 prev 0x561715f37210 <col:1, col:101> col:12 __finitel 'int (long double)' extern
| |-ParmVarDecl 0x561715f37178 <col:23, col:35> col:35 __value 'long double'
| |-NoThrowAttr 0x561715f37448 <col:60>
| `-ConstAttr 0x561715f374a0 <col:91>
|-FunctionDecl 0x561715f37578 <line:662:1, col:98> col:12 isinfl 'int (long double)' extern
| |-ParmVarDecl 0x561715f374e0 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x561715f37620 <col:57>
| `-ConstAttr 0x561715f37678 <col:88>
|-FunctionDecl 0x561715f37750 <line:665:12> col:12 implicit finitel 'int (long double)' extern
| |-ParmVarDecl 0x561715f377f0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f37860 <col:12> Implicit
| `-ConstAttr 0x561715f378b8 <col:12> Implicit
|-FunctionDecl 0x561715f378e0 prev 0x561715f37750 <col:1, col:99> col:12 finitel 'int (long double)' extern
| |-ParmVarDecl 0x561715f376b8 <col:21, col:33> col:33 __value 'long double'
| |-NoThrowAttr 0x561715f37988 <col:58>
| `-ConstAttr 0x561715f379e0 <col:89>
|-FunctionDecl 0x561715f37b40 <line:668:1, col:90> col:20 dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f37a20 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x561715f37aa0 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x561715f37bf0 <col:77>
|-FunctionDecl 0x561715f37d80 <col:93, col:184> col:112 __dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f37c60 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x561715f37ce0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x561715f37e30 <col:171>
|-FunctionDecl 0x561715f37f60 <line:672:1, col:80> col:20 significandl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f37ea0 <col:34, col:46> col:46 __x 'long double'
| `-NoThrowAttr 0x561715f38008 <col:67>
|-FunctionDecl 0x561715f38110 <col:83, col:164> col:102 __significandl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f38078 <col:118, col:130> col:130 __x 'long double'
| `-NoThrowAttr 0x561715f381b8 <col:151>
|-FunctionDecl 0x561715f38348 <line:678:20> col:20 implicit copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f383e8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f38450 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f384c8 <col:20> Implicit
| `-ConstAttr 0x561715f38520 <col:20> Implicit
|-FunctionDecl 0x561715f38548 prev 0x561715f38348 <col:1, col:122> col:20 copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f38228 <col:31, col:43> col:43 __x 'long double'
| |-ParmVarDecl 0x561715f382a8 <col:48, col:60> col:60 __y 'long double'
| |-NoThrowAttr 0x561715f385f8 <col:81>
| `-ConstAttr 0x561715f38650 <col:112>
|-FunctionDecl 0x561715f387b0 <col:125, col:248> col:144 __copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f38690 <col:157, col:169> col:169 __x 'long double'
| |-ParmVarDecl 0x561715f38710 <col:174, col:186> col:186 __y 'long double'
| |-NoThrowAttr 0x561715f38860 <col:207>
| `-ConstAttr 0x561715f388b8 <col:238>
|-FunctionDecl 0x561715f389c8 <line:685:20> col:20 implicit nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x561715f38a68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x561715f38ad8 <col:20> Implicit
| `-PureAttr 0x561715f38b30 <col:20> Implicit
|-FunctionDecl 0x561715f38b58 prev 0x561715f389c8 <col:1, col:103> col:20 nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x561715f388f8 <col:26, col:38> col:38 __tagb 'const char *'
| |-PureAttr 0x561715f38c80 <col:20> Inherited Implicit
| |-NoThrowAttr 0x561715f38c00 <col:62>
| `-ConstAttr 0x561715f38c58 <col:93>
|-FunctionDecl 0x561715f38d58 <col:106, col:210> col:125 __nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x561715f38cc0 <col:133, col:145> col:145 __tagb 'const char *'
| |-NoThrowAttr 0x561715f38e00 <col:169>
| `-ConstAttr 0x561715f38e58 <col:200>
|-FunctionDecl 0x561715f38f40 <line:691:1, col:100> col:12 used __isnanl 'int (long double)' extern
| |-ParmVarDecl 0x561715f38e98 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x561715f38fe8 <col:59>
| `-ConstAttr 0x561715f39040 <col:90>
|-FunctionDecl 0x561715f39118 <line:695:1, col:98> col:12 isnanl 'int (long double)' extern
| |-ParmVarDecl 0x561715f39080 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x561715f391c0 <col:57>
| `-ConstAttr 0x561715f39218 <col:88>
|-FunctionDecl 0x561715f392f0 <line:698:1, col:67> col:20 j0l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f39258 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x561715f39398 <col:54>
|-FunctionDecl 0x561715f394a0 <col:70, col:138> col:89 __j0l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f39408 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x561715f39548 <col:125>
|-FunctionDecl 0x561715f39650 <line:699:1, col:67> col:20 j1l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f395b8 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x561715f396f8 <col:54>
|-FunctionDecl 0x561715f39800 <col:70, col:138> col:89 __j1l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f39768 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x561715f398a8 <col:125>
|-FunctionDecl 0x561715f39a78 <line:700:1, col:72> col:20 jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x561715f39918 <col:25> col:28 'int'
| |-ParmVarDecl 0x561715f39998 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x561715f39b28 <col:59>
|-FunctionDecl 0x561715f39cb8 <col:75, col:148> col:94 __jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x561715f39b98 <col:101> col:104 'int'
| |-ParmVarDecl 0x561715f39c18 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x561715f39d68 <col:135>
|-FunctionDecl 0x561715f39e70 <line:701:1, col:67> col:20 y0l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f39dd8 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x561715f39f18 <col:54>
|-FunctionDecl 0x561715f3b040 <col:70, col:138> col:89 __y0l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f3afa8 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x561715f3b0e8 <col:125>
|-FunctionDecl 0x561715f3b1f0 <line:702:1, col:67> col:20 y1l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f3b158 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x561715f3b298 <col:54>
|-FunctionDecl 0x561715f3b3a0 <col:70, col:138> col:89 __y1l 'long double (long double)' extern
| |-ParmVarDecl 0x561715f3b308 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x561715f3b448 <col:125>
|-FunctionDecl 0x561715f3b5d8 <line:703:1, col:72> col:20 ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x561715f3b4b8 <col:25> col:28 'int'
| |-ParmVarDecl 0x561715f3b538 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x561715f3b688 <col:59>
|-FunctionDecl 0x561715f3b818 <col:75, col:148> col:94 __ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x561715f3b6f8 <col:101> col:104 'int'
| |-ParmVarDecl 0x561715f3b778 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x561715f3b8c8 <col:135>
|-FunctionDecl 0x561715f3b9d0 <line:710:20> col:20 implicit erfl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f3ba70 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f3bae0 <col:20> Implicit
|-FunctionDecl 0x561715f3bb38 prev 0x561715f3b9d0 <col:1, col:68> col:20 erfl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f3b938 <col:26, col:31> col:37 'long double'
| `-NoThrowAttr 0x561715f3bbe0 <col:55>
|-FunctionDecl 0x561715f3bce8 <col:71, col:140> col:90 __erfl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f3bc50 <col:98, col:103> col:109 'long double'
| `-NoThrowAttr 0x561715f3bd90 <col:127>
|-FunctionDecl 0x561715f3be98 <line:711:20> col:20 implicit erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f16d50 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f16dc0 <col:20> Implicit
|-FunctionDecl 0x561715f16e18 prev 0x561715f3be98 <col:1, col:69> col:20 erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f3be00 <col:27, col:32> col:38 'long double'
| `-NoThrowAttr 0x561715f16ec0 <col:56>
|-FunctionDecl 0x561715f16fc8 <col:72, col:142> col:91 __erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f16f30 <col:100, col:105> col:111 'long double'
| `-NoThrowAttr 0x561715f17070 <col:129>
|-FunctionDecl 0x561715f17178 <line:712:20> col:20 implicit lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x561715f17218 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f17288 <col:20> Implicit
|-FunctionDecl 0x561715f172e0 prev 0x561715f17178 <col:1, col:71> col:20 lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x561715f170e0 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x561715f17388 <col:58>
|-FunctionDecl 0x561715f17490 <col:74, col:146> col:93 __lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x561715f173f8 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x561715f17538 <col:133>
|-FunctionDecl 0x561715f17640 <line:719:20> col:20 implicit tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x561715f176e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f17750 <col:20> Implicit
|-FunctionDecl 0x561715f177a8 prev 0x561715f17640 <col:1, col:71> col:20 tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x561715f175a8 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x561715f17850 <col:58>
|-FunctionDecl 0x561715f17958 <col:74, col:146> col:93 __tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x561715f178c0 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x561715f17a00 <col:133>
|-FunctionDecl 0x561715f17b08 <line:725:1, col:70> col:20 gammal 'long double (long double)' extern
| |-ParmVarDecl 0x561715f17a70 <col:28, col:33> col:39 'long double'
| `-NoThrowAttr 0x561715f17bb0 <col:57>
|-FunctionDecl 0x561715f3df80 <col:73, col:144> col:92 __gammal 'long double (long double)' extern
| |-ParmVarDecl 0x561715f17c20 <col:102, col:107> col:113 'long double'
| `-NoThrowAttr 0x561715f3e028 <col:131>
|-FunctionDecl 0x561715f3e1b8 <line:732:1, col:90> col:20 lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x561715f3e098 <col:31, col:36> col:42 'long double'
| |-ParmVarDecl 0x561715f3e118 <col:44, col:49> col:49 __signgamp 'int *'
| `-NoThrowAttr 0x561715f3e268 <col:77>
|-FunctionDecl 0x561715f3e3f8 <col:93, col:184> col:112 __lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x561715f3e2d8 <col:125, col:130> col:136 'long double'
| |-ParmVarDecl 0x561715f3e358 <col:138, col:143> col:143 __signgamp 'int *'
| `-NoThrowAttr 0x561715f3e4a8 <col:171>
|-FunctionDecl 0x561715f3e5b0 <line:740:20> col:20 implicit rintl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f3e650 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f3e6c0 <col:20> Implicit
| `-ConstAttr 0x561715f3e718 <col:20> Implicit
|-FunctionDecl 0x561715f3e740 prev 0x561715f3e5b0 <col:1, col:73> col:20 rintl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f3e518 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x561715f3e840 <col:20> Inherited Implicit
| `-NoThrowAttr 0x561715f3e7e8 <col:60>
|-FunctionDecl 0x561715f3e918 <col:76, col:150> col:95 __rintl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f3e880 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x561715f3e9c0 <col:137>
|-FunctionDecl 0x561715f3eb50 <line:743:20> col:20 implicit nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f3ebf0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f3ec58 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f3ecd0 <col:20> Implicit
|-FunctionDecl 0x561715f3ed28 prev 0x561715f3eb50 <col:1, col:123> col:20 nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f3ea30 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x561715f3eab0 <col:49, col:61> col:61 __y 'long double'
| |-NoThrowAttr 0x561715f3edd8 <col:82>
| `-ConstAttr 0x561715f3ee30 <col:113>
|-FunctionDecl 0x561715f3efc8 <col:126, col:250> col:145 __nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f3ee70 <col:159, col:171> col:171 __x 'long double'
| |-ParmVarDecl 0x561715f3eef0 <col:176, col:188> col:188 __y 'long double'
| |-NoThrowAttr 0x561715f3f078 <col:209>
| `-ConstAttr 0x561715f3f0d0 <col:240>
|-FunctionDecl 0x561715f3f230 <line:745:20> col:20 implicit nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f3f2d0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f3f338 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f3f3b0 <col:20> Implicit
|-FunctionDecl 0x561715f3f408 prev 0x561715f3f230 <col:1, col:124> col:20 nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f3f110 <col:33, col:45> col:45 __x 'long double'
| |-ParmVarDecl 0x561715f3f190 <col:50, col:62> col:62 __y 'long double'
| |-NoThrowAttr 0x561715f3f4b8 <col:83>
| `-ConstAttr 0x561715f3f510 <col:114>
|-FunctionDecl 0x561715f3f670 <col:127, col:252> col:146 __nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f3f550 <col:161, col:173> col:173 __x 'long double'
| |-ParmVarDecl 0x561715f3f5d0 <col:178, col:190> col:190 __y 'long double'
| |-NoThrowAttr 0x561715f3f720 <col:211>
| `-ConstAttr 0x561715f3f778 <col:242>
|-FunctionDecl 0x561715f3f8d8 <line:749:20> col:20 implicit remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f3f978 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f3f9e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f3fa58 <col:20> Implicit
|-FunctionDecl 0x561715f3fab0 prev 0x561715f3f8d8 <col:1, col:95> col:20 remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f3f7b8 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x561715f3f838 <col:49, col:61> col:61 __y 'long double'
| `-NoThrowAttr 0x561715f3fb60 <col:82>
|-FunctionDecl 0x561715f3fcf0 <col:98, col:194> col:117 __remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f3fbd0 <col:131, col:143> col:143 __x 'long double'
| |-ParmVarDecl 0x561715f3fc50 <col:148, col:160> col:160 __y 'long double'
| `-NoThrowAttr 0x561715f3fda0 <col:181>
|-FunctionDecl 0x561715f3ffa0 <line:753:20> col:20 implicit scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x561715f40040 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f400a8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x561715f40120 <col:20> Implicit
|-FunctionDecl 0x561715f40178 prev 0x561715f3ffa0 <col:1, col:84> col:20 scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x561715f3fe10 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x561715f3fe90 <col:46, col:50> col:50 __n 'int'
| `-NoThrowAttr 0x561715f40228 <col:71>
|-FunctionDecl 0x561715f403b8 <col:87, col:172> col:106 __scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x561715f40298 <col:117, col:129> col:129 __x 'long double'
| |-ParmVarDecl 0x561715f40318 <col:134, col:138> col:138 __n 'int'
| `-NoThrowAttr 0x561715f40468 <col:159>
|-FunctionDecl 0x561715f40570 <line:757:12> col:12 implicit ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x561715f40610 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f40680 <col:12> Implicit
|-FunctionDecl 0x561715f406d8 prev 0x561715f40570 <col:1, col:66> col:12 ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x561715f404d8 <col:20, col:32> col:32 __x 'long double'
| `-NoThrowAttr 0x561715f40780 <col:53>
|-FunctionDecl 0x561715f40888 <col:69, col:136> col:80 __ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x561715f407f0 <col:90, col:102> col:102 __x 'long double'
| `-NoThrowAttr 0x561715f40930 <col:123>
|-FunctionDecl 0x561715f40b08 <line:762:20> col:20 implicit scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x561715f40ba8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f40c10 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x561715f40c88 <col:20> Implicit
|-FunctionDecl 0x561715f40ce0 prev 0x561715f40b08 <col:1, col:90> col:20 scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x561715f409a0 <col:30, col:42> col:42 __x 'long double'
| |-ParmVarDecl 0x561715f40a20 <col:47, col:56> col:56 __n 'long'
| `-NoThrowAttr 0x561715f40d90 <col:77>
|-FunctionDecl 0x561715f40fb0 <col:93, col:184> col:112 __scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x561715f40e00 <col:124, col:136> col:136 __x 'long double'
| |-ParmVarDecl 0x561715f40e80 <col:141, col:150> col:150 __n 'long'
| `-NoThrowAttr 0x561715f41060 <col:171>
|-FunctionDecl 0x561715f41168 <line:766:20> col:20 implicit nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f41208 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f41278 <col:20> Implicit
| `-ConstAttr 0x561715f412d0 <col:20> Implicit
|-FunctionDecl 0x561715f412f8 prev 0x561715f41168 <col:1, col:78> col:20 nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f410d0 <col:32, col:44> col:44 __x 'long double'
| |-ConstAttr 0x561715f413f8 <col:20> Inherited Implicit
| `-NoThrowAttr 0x561715f413a0 <col:65>
|-FunctionDecl 0x561715f414d0 <col:81, col:160> col:100 __nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f41438 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x561715f41578 <col:147>
|-FunctionDecl 0x561715f41680 <line:770:20> col:20 implicit roundl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f41720 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f41790 <col:20> Implicit
| `-ConstAttr 0x561715f417e8 <col:20> Implicit
|-FunctionDecl 0x561715f41810 prev 0x561715f41680 <col:1, col:102> col:20 roundl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f415e8 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x561715f418b8 <col:61>
| `-ConstAttr 0x561715f41910 <col:92>
|-FunctionDecl 0x561715f419e8 <col:105, col:208> col:124 __roundl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f41950 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x561715f41a90 <col:167>
| `-ConstAttr 0x561715f41ae8 <col:198>
|-FunctionDecl 0x561715f41bc0 <line:774:20> col:20 implicit truncl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f41c60 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f41cd0 <col:20> Implicit
| `-ConstAttr 0x561715f41d28 <col:20> Implicit
|-FunctionDecl 0x561715f41d50 prev 0x561715f41bc0 <col:1, col:102> col:20 truncl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f41b28 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x561715f41df8 <col:61>
| `-ConstAttr 0x561715f41e50 <col:92>
|-FunctionDecl 0x561715f41fc0 <col:105, col:208> col:124 __truncl 'long double (long double)' extern
| |-ParmVarDecl 0x561715f41e90 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x561715f42068 <col:167>
| `-ConstAttr 0x561715f420c0 <col:198>
|-FunctionDecl 0x561715f422f8 <line:779:20> col:20 implicit remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x561715f42398 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f42400 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f42468 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x561715f424e8 <col:20> Implicit
|-FunctionDecl 0x561715f42540 prev 0x561715f422f8 <col:1, col:104> col:20 remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x561715f42100 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x561715f42180 <col:46, col:58> col:58 __y 'long double'
| |-ParmVarDecl 0x561715f42200 <col:63, col:68> col:68 __quo 'int *'
| `-NoThrowAttr 0x561715f425f8 <col:91>
|-FunctionDecl 0x561715f42810 <col:107, col:212> col:126 __remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x561715f42668 <col:137, col:149> col:149 __x 'long double'
| |-ParmVarDecl 0x561715f426e8 <col:154, col:166> col:166 __y 'long double'
| |-ParmVarDecl 0x561715f42768 <col:171, col:176> col:176 __quo 'int *'
| `-NoThrowAttr 0x561715f428c8 <col:199>
|-FunctionDecl 0x561715f42a08 <line:786:17> col:17 implicit lrintl 'long (long double)' extern
| |-ParmVarDecl 0x561715f42aa8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f42b18 <col:17> Implicit
|-FunctionDecl 0x561715f42b70 prev 0x561715f42a08 <col:1, col:71> col:17 lrintl 'long (long double)' extern
| |-ParmVarDecl 0x561715f42938 <col:25, col:37> col:37 __x 'long double'
| `-NoThrowAttr 0x561715f42c18 <col:58>
|-FunctionDecl 0x561715f42d20 <col:74, col:146> col:90 __lrintl 'long (long double)' extern
| |-ParmVarDecl 0x561715f42c88 <col:100, col:112> col:112 __x 'long double'
| `-NoThrowAttr 0x561715f42dc8 <col:133>
|-FunctionDecl 0x561715f42f08 <line:788:22> col:22 implicit llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x561715f42fd0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f43040 <col:22> Implicit
|-FunctionDecl 0x561715f43098 prev 0x561715f42f08 <col:1, col:77> col:22 llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x561715f42e38 <col:31, col:43> col:43 __x 'long double'
| `-NoThrowAttr 0x561715f43140 <col:64>
|-FunctionDecl 0x561715f43248 <col:80, col:158> col:101 __llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x561715f431b0 <col:112, col:124> col:124 __x 'long double'
| `-NoThrowAttr 0x561715f432f0 <col:145>
|-FunctionDecl 0x561715f433f8 <line:792:17> col:17 implicit lroundl 'long (long double)' extern
| |-ParmVarDecl 0x561715f43498 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f43508 <col:17> Implicit
|-FunctionDecl 0x561715f43560 prev 0x561715f433f8 <col:1, col:72> col:17 lroundl 'long (long double)' extern
| |-ParmVarDecl 0x561715f43360 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x561715f43608 <col:59>
|-FunctionDecl 0x561715f43710 <col:75, col:148> col:91 __lroundl 'long (long double)' extern
| |-ParmVarDecl 0x561715f43678 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x561715f437b8 <col:135>
|-FunctionDecl 0x561715f438c0 <line:794:22> col:22 implicit llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x561715f43960 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f439d0 <col:22> Implicit
|-FunctionDecl 0x561715f43a28 prev 0x561715f438c0 <col:1, col:78> col:22 llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x561715f43828 <col:32, col:44> col:44 __x 'long double'
| `-NoThrowAttr 0x561715f43ad0 <col:65>
|-FunctionDecl 0x561715f43bd8 <col:81, col:160> col:102 __llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x561715f43b40 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x561715f43c80 <col:147>
|-FunctionDecl 0x561715f43e10 <line:798:20> col:20 implicit fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f43eb0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f43f18 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x561715f43f90 <col:20> Implicit
|-FunctionDecl 0x561715f44010 prev 0x561715f43e10 <col:1, col:90> col:20 fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f43cf0 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x561715f43d70 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x561715f440c0 <col:77>
|-FunctionDecl 0x561715f44250 <col:93, col:184> col:112 __fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f44130 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x561715f441b0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x561715f44300 <col:171>
|-FunctionDecl 0x561715f44490 <line:801:20> col:20 implicit fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f44530 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f44598 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f44610 <col:20> Implicit
| `-ConstAttr 0x561715f44668 <col:20> Implicit
|-FunctionDecl 0x561715f44690 prev 0x561715f44490 <col:1, col:118> col:20 fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f44370 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x561715f443f0 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x561715f44740 <col:77>
| `-ConstAttr 0x561715f44798 <col:108>
|-FunctionDecl 0x561715f448f8 <col:121, col:240> col:140 __fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f447d8 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x561715f44858 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x561715f449a8 <col:199>
| `-ConstAttr 0x561715f44a00 <col:230>
|-FunctionDecl 0x561715f44b60 <line:804:20> col:20 implicit fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f44c00 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f44c68 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x561715f44ce0 <col:20> Implicit
| `-ConstAttr 0x561715f44d38 <col:20> Implicit
|-FunctionDecl 0x561715f44d60 prev 0x561715f44b60 <col:1, col:118> col:20 fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f44a40 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x561715f44ac0 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x561715f44e10 <col:77>
| `-ConstAttr 0x561715f44e68 <col:108>
|-FunctionDecl 0x561715f44ff0 <col:121, col:240> col:140 __fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f44ea8 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x561715f44f28 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x561715f450a0 <col:199>
| `-ConstAttr 0x561715f450f8 <col:230>
|-FunctionDecl 0x561715f451d0 <line:808:1, line:809:32> line:808:12 __fpclassifyl 'int (long double)' extern
| |-ParmVarDecl 0x561715f45138 <col:27, col:39> col:39 __value 'long double'
| |-NoThrowAttr 0x561715f45278 <col:64>
| `-ConstAttr 0x561715f452d0 <line:809:22>
|-FunctionDecl 0x561715f453a8 <line:812:1, line:813:32> line:812:12 __signbitl 'int (long double)' extern
| |-ParmVarDecl 0x561715f45310 <col:24, col:36> col:36 __value 'long double'
| |-NoThrowAttr 0x561715f45450 <col:61>
| `-ConstAttr 0x561715f454a8 <line:813:22>
|-FunctionDecl 0x561715f456d8 <line:817:20> col:20 implicit fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x561715f45778 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f457e0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x561715f45848 <<invalid sloc>> <invalid sloc> 'long double'
| |-ConstAttr 0x561715f458c8 <col:20> Implicit
| `-NoThrowAttr 0x561715f45920 <col:20> Implicit
|-FunctionDecl 0x561715f45948 prev 0x561715f456d8 <col:1, col:106> col:20 fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x561715f454e8 <col:26, col:38> col:38 __x 'long double'
| |-ParmVarDecl 0x561715f45568 <col:43, col:55> col:55 __y 'long double'
| |-ParmVarDecl 0x561715f455e8 <col:60, col:72> col:72 __z 'long double'
| |-ConstAttr 0x561715f45a58 <col:20> Inherited Implicit
| `-NoThrowAttr 0x561715f45a00 <col:93>
|-FunctionDecl 0x561715f45c40 <col:109, col:216> col:128 __fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x561715f45a98 <col:136, col:148> col:148 __x 'long double'
| |-ParmVarDecl 0x561715f45b18 <col:153, col:165> col:165 __y 'long double'
| |-ParmVarDecl 0x561715f45b98 <col:170, col:182> col:182 __z 'long double'
| `-NoThrowAttr 0x561715f45cf8 <col:203>
|-FunctionDecl 0x561715f45e88 <line:818:1, col:91> col:20 scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f45d68 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x561715f45de8 <col:45, col:57> col:57 __n 'long double'
| `-NoThrowAttr 0x561715f45f38 <col:78>
|-FunctionDecl 0x561715f46120 <col:94, col:186> col:113 __scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x561715f46000 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x561715f46080 <col:140, col:152> col:152 __n 'long double'
| `-NoThrowAttr 0x561715f461d0 <col:173>
|-VarDecl 0x561715f46240 <line:819:1, col:12> col:12 signgam 'int' extern
|-EnumDecl 0x561715f462a8 <line:820:1, line:837:3> line:820:1
| |-EnumConstantDecl 0x561715f463b0 <line:822:5, line:824:7> line:822:5 FP_NAN 'int'
| | `-ConstantExpr 0x561715f46398 <line:824:7> 'int'
| |   `-IntegerLiteral 0x561715f46378 <col:7> 'int' 0
| |-EnumConstantDecl 0x561715f46438 <line:825:5, line:827:7> line:825:5 FP_INFINITE 'int'
| | `-ConstantExpr 0x561715f46420 <line:827:7> 'int'
| |   `-IntegerLiteral 0x561715f46400 <col:7> 'int' 1
| |-EnumConstantDecl 0x561715f464c0 <line:828:5, line:830:7> line:828:5 FP_ZERO 'int'
| | `-ConstantExpr 0x561715f464a8 <line:830:7> 'int'
| |   `-IntegerLiteral 0x561715f46488 <col:7> 'int' 2
| |-EnumConstantDecl 0x561715f46548 <line:831:5, line:833:7> line:831:5 FP_SUBNORMAL 'int'
| | `-ConstantExpr 0x561715f46530 <line:833:7> 'int'
| |   `-IntegerLiteral 0x561715f46510 <col:7> 'int' 3
| `-EnumConstantDecl 0x561715f465d0 <line:834:5, line:836:7> line:834:5 FP_NORMAL 'int'
|   `-ConstantExpr 0x561715f465b8 <line:836:7> 'int'
|     `-IntegerLiteral 0x561715f46598 <col:7> 'int' 4
|-EnumDecl 0x561715f46620 <line:838:9, line:845:1> line:838:9
| |-EnumConstantDecl 0x561715f46738 <line:840:3, col:13> col:3 _IEEE_ 'int'
| | `-ConstantExpr 0x561715f46720 <col:12, col:13> 'int'
| |   `-UnaryOperator 0x561715f46708 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x561715f466e8 <col:13> 'int' 1
| |-EnumConstantDecl 0x561715f46788 <line:841:3> col:3 _SVID_ 'int'
| |-EnumConstantDecl 0x561715f467d8 <line:842:3> col:3 _XOPEN_ 'int'
| |-EnumConstantDecl 0x561715f46828 <line:843:3> col:3 _POSIX_ 'int'
| `-EnumConstantDecl 0x561715f46878 <line:844:3> col:3 _ISOC_ 'int'
|-TypedefDecl 0x561715f46930 <line:838:1, line:845:3> col:3 referenced _LIB_VERSION_TYPE 'enum _LIB_VERSION_TYPE':'_LIB_VERSION_TYPE'
| `-ElaboratedType 0x561715f468d0 'enum _LIB_VERSION_TYPE' sugar
|   `-EnumType 0x561715f466c0 '_LIB_VERSION_TYPE'
|     `-Enum 0x561715f46620 ''
|-VarDecl 0x561715f469d8 <line:850:1, col:26> col:26 _LIB_VERSION '_LIB_VERSION_TYPE':'_LIB_VERSION_TYPE' extern
|-RecordDecl 0x561715f46a40 <line:851:1, line:859:3> line:851:8 struct exception definition
| |-FieldDecl 0x561715f46b00 <line:854:5, col:9> col:9 type 'int'
| |-FieldDecl 0x561715f46b68 <line:855:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x561715f46bd0 <line:856:5, col:12> col:12 arg1 'double'
| |-FieldDecl 0x561715f46c38 <line:857:5, col:12> col:12 arg2 'double'
| `-FieldDecl 0x561715f46ca0 <line:858:5, col:12> col:12 retval 'double'
|-FunctionDecl 0x561715f46ec8 <line:864:1, col:44> col:12 matherr 'int (struct exception *)' extern
| `-ParmVarDecl 0x561715f46db8 <col:21, col:39> col:39 __exc 'struct exception *'
|-EnumDecl 0x561715f47010 <line:865:1, line:883:3> line:865:1
| |-EnumConstantDecl 0x561715f47110 <line:867:5, line:869:7> line:867:5 FE_INVALID 'int'
| | `-ConstantExpr 0x561715f470f8 <line:869:7> 'int'
| |   `-IntegerLiteral 0x561715f470d8 <col:7> 'int' 1
| |-EnumConstantDecl 0x561715f47198 <line:870:5, col:19> col:5 __FE_DENORM 'int'
| | `-ConstantExpr 0x561715f47180 <col:19> 'int'
| |   `-IntegerLiteral 0x561715f47160 <col:19> 'int' 2
| |-EnumConstantDecl 0x561715f47220 <line:871:5, line:873:7> line:871:5 FE_DIVBYZERO 'int'
| | `-ConstantExpr 0x561715f47208 <line:873:7> 'int'
| |   `-IntegerLiteral 0x561715f471e8 <col:7> 'int' 4
| |-EnumConstantDecl 0x561715f472a8 <line:874:5, line:876:7> line:874:5 FE_OVERFLOW 'int'
| | `-ConstantExpr 0x561715f47290 <line:876:7> 'int'
| |   `-IntegerLiteral 0x561715f47270 <col:7> 'int' 8
| |-EnumConstantDecl 0x561715f47330 <line:877:5, line:879:7> line:877:5 FE_UNDERFLOW 'int'
| | `-ConstantExpr 0x561715f47318 <line:879:7> 'int'
| |   `-IntegerLiteral 0x561715f472f8 <col:7> 'int' 16
| `-EnumConstantDecl 0x561715f473b8 <line:880:5, line:882:7> line:880:5 FE_INEXACT 'int'
|   `-ConstantExpr 0x561715f473a0 <line:882:7> 'int'
|     `-IntegerLiteral 0x561715f47380 <col:7> 'int' 32
|-EnumDecl 0x561715f47408 <line:891:1, line:905:3> line:891:1
| |-EnumConstantDecl 0x561715f47510 <line:893:5, line:895:7> line:893:5 FE_TONEAREST 'int'
| | `-ConstantExpr 0x561715f474f8 <line:895:7> 'int'
| |   `-IntegerLiteral 0x561715f474d8 <col:7> 'int' 0
| |-EnumConstantDecl 0x561715f47598 <line:896:5, line:898:7> line:896:5 FE_DOWNWARD 'int'
| | `-ConstantExpr 0x561715f47580 <line:898:7> 'int'
| |   `-IntegerLiteral 0x561715f47560 <col:7> 'int' 1024
| |-EnumConstantDecl 0x561715f47620 <line:899:5, line:901:7> line:899:5 FE_UPWARD 'int'
| | `-ConstantExpr 0x561715f47608 <line:901:7> 'int'
| |   `-IntegerLiteral 0x561715f475e8 <col:7> 'int' 2048
| `-EnumConstantDecl 0x561715f476a8 <line:902:5, line:904:7> line:902:5 FE_TOWARDZERO 'int'
|   `-ConstantExpr 0x561715f47690 <line:904:7> 'int'
|     `-IntegerLiteral 0x561715f47670 <col:7> 'int' 3072
|-TypedefDecl 0x561715f47710 <line:909:1, col:28> col:28 referenced fexcept_t 'unsigned short'
| `-BuiltinType 0x561715e8ff90 'unsigned short'
|-RecordDecl 0x561715f47768 <line:916:9, line:934:3> line:916:9 struct definition
| |-FieldDecl 0x561715f47830 <line:918:5, col:24> col:24 __control_word 'unsigned short'
| |-FieldDecl 0x561715f47898 <line:919:5, col:24> col:24 __glibc_reserved1 'unsigned short'
| |-FieldDecl 0x561715f47900 <line:920:5, col:24> col:24 __status_word 'unsigned short'
| |-FieldDecl 0x561715f47968 <line:921:5, col:24> col:24 __glibc_reserved2 'unsigned short'
| |-FieldDecl 0x561715f479d0 <line:922:5, col:24> col:24 __tags 'unsigned short'
| |-FieldDecl 0x561715f47a38 <line:923:5, col:24> col:24 __glibc_reserved3 'unsigned short'
| |-FieldDecl 0x561715f47aa0 <line:924:5, col:18> col:18 __eip 'unsigned int'
| |-FieldDecl 0x561715f47b08 <line:925:5, col:24> col:24 __cs_selector 'unsigned short'
| |-FieldDecl 0x561715f47ba8 <line:926:5, col:27> col:18 __opcode 'unsigned int'
| | `-ConstantExpr 0x561715f47b90 <col:27> 'int'
| |   `-IntegerLiteral 0x561715f47b58 <col:27> 'int' 11
| |-FieldDecl 0x561715f47c48 <line:927:5, col:36> col:18 __glibc_reserved4 'unsigned int'
| | `-ConstantExpr 0x561715f47c30 <col:36> 'int'
| |   `-IntegerLiteral 0x561715f47bf8 <col:36> 'int' 5
| |-FieldDecl 0x561715f47cb0 <line:928:5, col:18> col:18 __data_offset 'unsigned int'
| |-FieldDecl 0x561715f47d18 <line:929:5, col:24> col:24 __data_selector 'unsigned short'
| `-FieldDecl 0x561715f47d80 <line:930:5, col:24> col:24 __glibc_reserved5 'unsigned short'
|-TypedefDecl 0x561715f47e30 <line:916:1, line:935:1> col:1 referenced fenv_t 'struct fenv_t':'fenv_t'
| `-ElaboratedType 0x561715f47dd0 'struct fenv_t' sugar
|   `-RecordType 0x561715f477f0 'fenv_t'
|     `-Record 0x561715f47768 ''
|-FunctionDecl 0x561715f49030 <line:942:1, col:71> col:12 feclearexcept 'int (int)' extern
| |-ParmVarDecl 0x561715f47eb8 <col:27, col:31> col:31 __excepts 'int'
| `-NoThrowAttr 0x561715f490d8 <col:58>
|-FunctionDecl 0x561715f49378 <line:946:1, col:93> col:12 fegetexceptflag 'int (fexcept_t *, int)' extern
| |-ParmVarDecl 0x561715f491d0 <col:29, col:40> col:40 __flagp 'fexcept_t *'
| |-ParmVarDecl 0x561715f49250 <col:49, col:53> col:53 __excepts 'int'
| `-NoThrowAttr 0x561715f49428 <col:80>
|-FunctionDecl 0x561715f49530 <line:949:1, col:71> col:12 feraiseexcept 'int (int)' extern
| |-ParmVarDecl 0x561715f49498 <col:27, col:31> col:31 __excepts 'int'
| `-NoThrowAttr 0x561715f495d8 <col:58>
|-FunctionDecl 0x561715f49848 <line:953:1, col:99> col:12 fesetexceptflag 'int (const fexcept_t *, int)' extern
| |-ParmVarDecl 0x561715f496a0 <col:29, col:46> col:46 __flagp 'const fexcept_t *'
| |-ParmVarDecl 0x561715f49720 <col:55, col:59> col:59 __excepts 'int'
| `-NoThrowAttr 0x561715f498f8 <col:86>
|-FunctionDecl 0x561715f49a00 <line:957:1, col:70> col:12 fetestexcept 'int (int)' extern
| |-ParmVarDecl 0x561715f49968 <col:26, col:30> col:30 __excepts 'int'
| `-NoThrowAttr 0x561715f49aa8 <col:57>
|-FunctionDecl 0x561715f49bd8 <line:963:1, col:59> col:12 used fegetround 'int (void)' extern
| `-NoThrowAttr 0x561715f49c78 <col:46>
|-FunctionDecl 0x561715f49d80 <line:966:1, col:79> col:12 used fesetround 'int (int)' extern
| |-ParmVarDecl 0x561715f49ce8 <col:24, col:28> col:28 __rounding_direction 'int'
| `-NoThrowAttr 0x561715f49e28 <col:66>
|-FunctionDecl 0x561715f4a070 <line:973:1, col:67> col:12 fegetenv 'int (fenv_t *)' extern
| |-ParmVarDecl 0x561715f49f20 <col:22, col:30> col:30 __envp 'fenv_t *'
| `-NoThrowAttr 0x561715f4a118 <col:54>
|-FunctionDecl 0x561715f4a218 <line:978:1, col:71> col:12 feholdexcept 'int (fenv_t *)' extern
| |-ParmVarDecl 0x561715f4a180 <col:26, col:34> col:34 __envp 'fenv_t *'
| `-NoThrowAttr 0x561715f4a2c0 <col:58>
|-FunctionDecl 0x561715f4a4a8 <line:982:1, col:73> col:12 fesetenv 'int (const fenv_t *)' extern
| |-ParmVarDecl 0x561715f4a390 <col:22, col:36> col:36 __envp 'const fenv_t *'
| `-NoThrowAttr 0x561715f4a550 <col:60>
|-FunctionDecl 0x561715f4a650 <line:987:1, col:76> col:12 feupdateenv 'int (const fenv_t *)' extern
| |-ParmVarDecl 0x561715f4a5b8 <col:25, col:39> col:39 __envp 'const fenv_t *'
| `-NoThrowAttr 0x561715f4a6f8 <col:63>
|-FunctionDecl 0x561715f4a830 <line:989:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561715f4a768 <col:31> col:34 'int'
|-FunctionDecl 0x561715f4a960 <line:990:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561715f4aaa8 <line:991:1, col:88> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561715f4aa18 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x561715f4acf0 <col:34, col:88>
|   |-IfStmt 0x561715f4acc8 <col:36, col:78>
|   | |-UnaryOperator 0x561715f4aba8 <col:40, col:46> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561715f4ab90 <col:41, col:46> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x561715f4ab70 <col:41, col:46> 'int' lvalue
|   | |     `-DeclRefExpr 0x561715f4ab50 <col:42> 'int' lvalue ParmVar 0x561715f4aa18 'cond' 'int'
|   | `-CompoundStmt 0x561715f4acb0 <col:49, col:78>
|   |   `-LabelStmt 0x561715f4ac98 <col:51, col:75> 'ERROR'
|   |     `-CallExpr 0x561715f4ac28 <col:58, col:75> 'void'
|   |       `-ImplicitCastExpr 0x561715f4ac10 <col:58> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561715f4abc0 <col:58> 'void () __attribute__((noreturn))' Function 0x561715f4a960 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x561715f4ace0 <col:80>
|-FunctionDecl 0x561715f4ad68 <line:993:1, col:33> col:8 used __VERIFIER_nondet_double 'double ()'
`-FunctionDecl 0x561715f4aea8 <line:995:1, line:1017:1> line:995:5 main 'int (void)'
  `-CompoundStmt 0x561715f4e730 <line:996:1, line:1017:1>
    |-DeclStmt 0x561715f4b0b8 <line:997:3, col:40>
    | `-VarDecl 0x561715f4af98 <col:3, col:39> col:10 used d 'double' cinit
    |   `-CallExpr 0x561715f4b098 <col:14, col:39> 'double'
    |     `-ImplicitCastExpr 0x561715f4b080 <col:14> 'double (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x561715f4b000 <col:14> 'double ()' Function 0x561715f4ad68 '__VERIFIER_nondet_double' 'double ()'
    |-CallExpr 0x561715f4b5e8 <line:998:3, col:128> 'void'
    | |-ImplicitCastExpr 0x561715f4b5d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561715f4b0d0 <col:3> 'void (int)' Function 0x561715f4a830 '__VERIFIER_assume' 'void (int)'
    | `-UnaryOperator 0x561715f4b580 <col:21, col:127> 'int' prefix '!' cannot overflow
    |   `-ParenExpr 0x561715f4b560 <col:22, col:127> 'int'
    |     `-ConditionalOperator 0x561715f4b530 <col:23, col:126> 'int'
    |       |-BinaryOperator 0x561715f4b188 <col:23, col:50> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x561715f4b130 <col:23, col:32> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x561715f4b110 <col:30, col:32> 'double' lvalue
    |       | |   `-DeclRefExpr 0x561715f4b0f0 <col:31> 'double' lvalue Var 0x561715f4af98 'd' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x561715f4b168 <col:37, col:50> 'unsigned long' sizeof 'float'
    |       |-CallExpr 0x561715f4b238 <col:54, col:65> 'int'
    |       | |-ImplicitCastExpr 0x561715f4b220 <col:54> 'int (*)(float)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x561715f4b1a8 <col:54> 'int (float)' Function 0x561715f1b2f8 '__isinff' 'int (float)'
    |       | `-ImplicitCastExpr 0x561715f4b278 <col:64> 'float' <FloatingCast>
    |       |   `-ImplicitCastExpr 0x561715f4b260 <col:64> 'double' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561715f4b1c8 <col:64> 'double' lvalue Var 0x561715f4af98 'd' 'double'
    |       `-ConditionalOperator 0x561715f4b500 <col:69, col:126> 'int'
    |         |-BinaryOperator 0x561715f4b328 <col:69, col:97> 'int' '=='
    |         | |-UnaryExprOrTypeTraitExpr 0x561715f4b2d0 <col:69, col:78> 'unsigned long' sizeof
    |         | | `-ParenExpr 0x561715f4b2b0 <col:76, col:78> 'double' lvalue
    |         | |   `-DeclRefExpr 0x561715f4b290 <col:77> 'double' lvalue Var 0x561715f4af98 'd' 'double' non_odr_use_unevaluated
    |         | `-UnaryExprOrTypeTraitExpr 0x561715f4b308 <col:83, col:97> 'unsigned long' sizeof 'double'
    |         |-CallExpr 0x561715f4b3d8 <col:101, col:111> 'int'
    |         | |-ImplicitCastExpr 0x561715f4b3c0 <col:101> 'int (*)(double)' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x561715f4b348 <col:101> 'int (double)' Function 0x561715eff6a8 '__isinf' 'int (double)'
    |         | `-ImplicitCastExpr 0x561715f4b400 <col:110> 'double' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561715f4b368 <col:110> 'double' lvalue Var 0x561715f4af98 'd' 'double'
    |         `-CallExpr 0x561715f4b4a8 <col:115, col:126> 'int'
    |           |-ImplicitCastExpr 0x561715f4b490 <col:115> 'int (*)(long double)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x561715f4b418 <col:115> 'int (long double)' Function 0x561715f37038 '__isinfl' 'int (long double)'
    |           `-ImplicitCastExpr 0x561715f4b4e8 <col:125> 'long double' <FloatingCast>
    |             `-ImplicitCastExpr 0x561715f4b4d0 <col:125> 'double' <LValueToRValue>
    |               `-DeclRefExpr 0x561715f4b438 <col:125> 'double' lvalue Var 0x561715f4af98 'd' 'double'
    |-CallExpr 0x561715f4ba48 <line:999:3, col:128> 'void'
    | |-ImplicitCastExpr 0x561715f4ba30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561715f4b610 <col:3> 'void (int)' Function 0x561715f4a830 '__VERIFIER_assume' 'void (int)'
    | `-UnaryOperator 0x561715f4ba18 <col:21, col:127> 'int' prefix '!' cannot overflow
    |   `-ParenExpr 0x561715f4b9f8 <col:22, col:127> 'int'
    |     `-ConditionalOperator 0x561715f4b9c8 <col:23, col:126> 'int'
    |       |-BinaryOperator 0x561715f4b6c8 <col:23, col:50> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x561715f4b670 <col:23, col:32> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x561715f4b650 <col:30, col:32> 'double' lvalue
    |       | |   `-DeclRefExpr 0x561715f4b630 <col:31> 'double' lvalue Var 0x561715f4af98 'd' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x561715f4b6a8 <col:37, col:50> 'unsigned long' sizeof 'float'
    |       |-CallExpr 0x561715f4b740 <col:54, col:65> 'int'
    |       | |-ImplicitCastExpr 0x561715f4b728 <col:54> 'int (*)(float)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x561715f4b6e8 <col:54> 'int (float)' Function 0x561715f1d278 '__isnanf' 'int (float)'
    |       | `-ImplicitCastExpr 0x561715f4b780 <col:64> 'float' <FloatingCast>
    |       |   `-ImplicitCastExpr 0x561715f4b768 <col:64> 'double' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561715f4b708 <col:64> 'double' lvalue Var 0x561715f4af98 'd' 'double'
    |       `-ConditionalOperator 0x561715f4b998 <col:69, col:126> 'int'
    |         |-BinaryOperator 0x561715f4b830 <col:69, col:97> 'int' '=='
    |         | |-UnaryExprOrTypeTraitExpr 0x561715f4b7d8 <col:69, col:78> 'unsigned long' sizeof
    |         | | `-ParenExpr 0x561715f4b7b8 <col:76, col:78> 'double' lvalue
    |         | |   `-DeclRefExpr 0x561715f4b798 <col:77> 'double' lvalue Var 0x561715f4af98 'd' 'double' non_odr_use_unevaluated
    |         | `-UnaryExprOrTypeTraitExpr 0x561715f4b810 <col:83, col:97> 'unsigned long' sizeof 'double'
    |         |-CallExpr 0x561715f4b8a8 <col:101, col:111> 'int'
    |         | |-ImplicitCastExpr 0x561715f4b890 <col:101> 'int (*)(double)' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x561715f4b850 <col:101> 'int (double)' Function 0x561715f02600 '__isnan' 'int (double)'
    |         | `-ImplicitCastExpr 0x561715f4b8d0 <col:110> 'double' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561715f4b870 <col:110> 'double' lvalue Var 0x561715f4af98 'd' 'double'
    |         `-CallExpr 0x561715f4b940 <col:115, col:126> 'int'
    |           |-ImplicitCastExpr 0x561715f4b928 <col:115> 'int (*)(long double)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x561715f4b8e8 <col:115> 'int (long double)' Function 0x561715f38f40 '__isnanl' 'int (long double)'
    |           `-ImplicitCastExpr 0x561715f4b980 <col:125> 'long double' <FloatingCast>
    |             `-ImplicitCastExpr 0x561715f4b968 <col:125> 'double' <LValueToRValue>
    |               `-DeclRefExpr 0x561715f4b908 <col:125> 'double' lvalue Var 0x561715f4af98 'd' 'double'
    |-DeclStmt 0x561715f4bb78 <line:1001:3, col:32>
    | `-VarDecl 0x561715f4ba88 <col:3, col:31> col:7 used save_round 'int' cinit
    |   `-CallExpr 0x561715f4bb58 <col:20, col:31> 'int'
    |     `-ImplicitCastExpr 0x561715f4bb40 <col:20> 'int (*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x561715f4baf0 <col:20> 'int (void)' Function 0x561715f49bd8 'fegetround' 'int (void)'
    |-CallExpr 0x561715f4bc18 <line:1002:3, col:19> 'int'
    | |-ImplicitCastExpr 0x561715f4bc00 <col:3> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561715f4bb90 <col:3> 'int (int)' Function 0x561715f49d80 'fesetround' 'int (int)'
    | `-IntegerLiteral 0x561715f4bbb0 <col:14> 'int' 2048
    |-DeclStmt 0x561715f4bd88 <line:1003:3, col:26>
    | `-VarDecl 0x561715f4bc58 <col:3, col:25> col:10 used result 'double' cinit
    |   `-CallExpr 0x561715f4bd48 <col:19, col:25> 'double'
    |     |-ImplicitCastExpr 0x561715f4bd30 <col:19> 'double (*)(double)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x561715f4bcc0 <col:19> 'double (double)' Function 0x561715f05e10 'rint' 'double (double)'
    |     `-ImplicitCastExpr 0x561715f4bd70 <col:24> 'double' <LValueToRValue>
    |       `-DeclRefExpr 0x561715f4bce0 <col:24> 'double' lvalue Var 0x561715f4af98 'd' 'double'
    |-CallExpr 0x561715f4bdf8 <line:1004:3, col:24> 'int'
    | |-ImplicitCastExpr 0x561715f4bde0 <col:3> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561715f4bda0 <col:3> 'int (int)' Function 0x561715f49d80 'fesetround' 'int (int)'
    | `-ImplicitCastExpr 0x561715f4be20 <col:14> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x561715f4bdc0 <col:14> 'int' lvalue Var 0x561715f4ba88 'save_round' 'int'
    |-CallExpr 0x561715f4bf60 <line:1006:3, col:38> 'void'
    | |-ImplicitCastExpr 0x561715f4bf48 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561715f4be38 <col:3> 'void (int)' Function 0x561715f4aaa8 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x561715f4bf28 <col:21, col:32> 'int' '=='
    |   |-CallExpr 0x561715f4beb0 <col:21, col:27> 'double'
    |   | |-ImplicitCastExpr 0x561715f4be98 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x561715f4be58 <col:21> 'double (double)' Function 0x561715efe1d8 'ceil' 'double (double)'
    |   | `-ImplicitCastExpr 0x561715f4bed8 <col:26> 'double' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561715f4be78 <col:26> 'double' lvalue Var 0x561715f4af98 'd' 'double'
    |   `-ImplicitCastExpr 0x561715f4bf10 <col:32> 'double' <LValueToRValue>
    |     `-DeclRefExpr 0x561715f4bef0 <col:32> 'double' lvalue Var 0x561715f4bc58 'result' 'double'
    |-DeclStmt 0x561715f4d090 <line:1008:3, col:41>
    | `-VarDecl 0x561715f4bfa0 <col:3, col:40> col:10 used d1 'double' cinit
    |   `-CallExpr 0x561715f4d070 <col:15, col:40> 'double'
    |     `-ImplicitCastExpr 0x561715f4c028 <col:15> 'double (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x561715f4c008 <col:15> 'double ()' Function 0x561715f4ad68 '__VERIFIER_nondet_double' 'double ()'
    |-CallExpr 0x561715f4d4c8 <line:1009:3, col:132> 'void'
    | |-ImplicitCastExpr 0x561715f4d4b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561715f4d0a8 <col:3> 'void (int)' Function 0x561715f4a830 '__VERIFIER_assume' 'void (int)'
    | `-ParenExpr 0x561715f4d490 <col:21, col:131> 'int'
    |   `-ConditionalOperator 0x561715f4d460 <col:22, col:130> 'int'
    |     |-BinaryOperator 0x561715f4d160 <col:22, col:50> 'int' '=='
    |     | |-UnaryExprOrTypeTraitExpr 0x561715f4d108 <col:22, col:32> 'unsigned long' sizeof
    |     | | `-ParenExpr 0x561715f4d0e8 <col:29, col:32> 'double' lvalue
    |     | |   `-DeclRefExpr 0x561715f4d0c8 <col:30> 'double' lvalue Var 0x561715f4bfa0 'd1' 'double' non_odr_use_unevaluated
    |     | `-UnaryExprOrTypeTraitExpr 0x561715f4d140 <col:37, col:50> 'unsigned long' sizeof 'float'
    |     |-CallExpr 0x561715f4d1d8 <col:54, col:66> 'int'
    |     | |-ImplicitCastExpr 0x561715f4d1c0 <col:54> 'int (*)(float)' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x561715f4d180 <col:54> 'int (float)' Function 0x561715f1b2f8 '__isinff' 'int (float)'
    |     | `-ImplicitCastExpr 0x561715f4d218 <col:64> 'float' <FloatingCast>
    |     |   `-ImplicitCastExpr 0x561715f4d200 <col:64> 'double' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561715f4d1a0 <col:64> 'double' lvalue Var 0x561715f4bfa0 'd1' 'double'
    |     `-ConditionalOperator 0x561715f4d430 <col:70, col:130> 'int'
    |       |-BinaryOperator 0x561715f4d2c8 <col:70, col:99> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x561715f4d270 <col:70, col:80> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x561715f4d250 <col:77, col:80> 'double' lvalue
    |       | |   `-DeclRefExpr 0x561715f4d230 <col:78> 'double' lvalue Var 0x561715f4bfa0 'd1' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x561715f4d2a8 <col:85, col:99> 'unsigned long' sizeof 'double'
    |       |-CallExpr 0x561715f4d340 <col:103, col:114> 'int'
    |       | |-ImplicitCastExpr 0x561715f4d328 <col:103> 'int (*)(double)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x561715f4d2e8 <col:103> 'int (double)' Function 0x561715eff6a8 '__isinf' 'int (double)'
    |       | `-ImplicitCastExpr 0x561715f4d368 <col:112> 'double' <LValueToRValue>
    |       |   `-DeclRefExpr 0x561715f4d308 <col:112> 'double' lvalue Var 0x561715f4bfa0 'd1' 'double'
    |       `-CallExpr 0x561715f4d3d8 <col:118, col:130> 'int'
    |         |-ImplicitCastExpr 0x561715f4d3c0 <col:118> 'int (*)(long double)' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x561715f4d380 <col:118> 'int (long double)' Function 0x561715f37038 '__isinfl' 'int (long double)'
    |         `-ImplicitCastExpr 0x561715f4d418 <col:128> 'long double' <FloatingCast>
    |           `-ImplicitCastExpr 0x561715f4d400 <col:128> 'double' <LValueToRValue>
    |             `-DeclRefExpr 0x561715f4d3a0 <col:128> 'double' lvalue Var 0x561715f4bfa0 'd1' 'double'
    |-CallExpr 0x561715f4db20 <line:1010:3, col:162> 'void'
    | |-ImplicitCastExpr 0x561715f4db08 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561715f4d4f0 <col:3> 'void (int)' Function 0x561715f4aaa8 '__VERIFIER_assert' 'void (int)'
    | `-ParenExpr 0x561715f4dae8 <col:21, col:161> 'int'
    |   `-ConditionalOperator 0x561715f4dab8 <col:22, col:160> 'int'
    |     |-BinaryOperator 0x561715f4d620 <col:22, col:56> 'int' '=='
    |     | |-UnaryExprOrTypeTraitExpr 0x561715f4d5c8 <col:22, col:38> 'unsigned long' sizeof
    |     | | `-ParenExpr 0x561715f4d5a8 <col:29, col:38> 'double'
    |     | |   `-CallExpr 0x561715f4d568 <col:30, col:37> 'double'
    |     | |     |-ImplicitCastExpr 0x561715f4d550 <col:30> 'double (*)(double)' <FunctionToPointerDecay>
    |     | |     | `-DeclRefExpr 0x561715f4d510 <col:30> 'double (double)' Function 0x561715efe1d8 'ceil' 'double (double)' non_odr_use_unevaluated
    |     | |     `-ImplicitCastExpr 0x561715f4d590 <col:35> 'double' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x561715f4d530 <col:35> 'double' lvalue Var 0x561715f4bfa0 'd1' 'double' non_odr_use_unevaluated
    |     | `-UnaryExprOrTypeTraitExpr 0x561715f4d600 <col:43, col:56> 'unsigned long' sizeof 'float'
    |     |-CallExpr 0x561715f4d710 <col:60, col:78> 'int'
    |     | |-ImplicitCastExpr 0x561715f4d6f8 <col:60> 'int (*)(float)' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x561715f4d640 <col:60> 'int (float)' Function 0x561715f1b2f8 '__isinff' 'int (float)'
    |     | `-ImplicitCastExpr 0x561715f4d738 <col:70, col:77> 'float' <FloatingCast>
    |     |   `-CallExpr 0x561715f4d6b8 <col:70, col:77> 'double'
    |     |     |-ImplicitCastExpr 0x561715f4d6a0 <col:70> 'double (*)(double)' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x561715f4d660 <col:70> 'double (double)' Function 0x561715efe1d8 'ceil' 'double (double)'
    |     |     `-ImplicitCastExpr 0x561715f4d6e0 <col:75> 'double' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561715f4d680 <col:75> 'double' lvalue Var 0x561715f4bfa0 'd1' 'double'
    |     `-ConditionalOperator 0x561715f4da88 <col:82, col:160> 'int'
    |       |-BinaryOperator 0x561715f4d860 <col:82, col:117> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x561715f4d808 <col:82, col:98> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x561715f4d7e8 <col:89, col:98> 'double'
    |       | |   `-CallExpr 0x561715f4d7a8 <col:90, col:97> 'double'
    |       | |     |-ImplicitCastExpr 0x561715f4d790 <col:90> 'double (*)(double)' <FunctionToPointerDecay>
    |       | |     | `-DeclRefExpr 0x561715f4d750 <col:90> 'double (double)' Function 0x561715efe1d8 'ceil' 'double (double)' non_odr_use_unevaluated
    |       | |     `-ImplicitCastExpr 0x561715f4d7d0 <col:95> 'double' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x561715f4d770 <col:95> 'double' lvalue Var 0x561715f4bfa0 'd1' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x561715f4d840 <col:103, col:117> 'unsigned long' sizeof 'double'
    |       |-CallExpr 0x561715f4d950 <col:121, col:138> 'int'
    |       | |-ImplicitCastExpr 0x561715f4d938 <col:121> 'int (*)(double)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x561715f4d880 <col:121> 'int (double)' Function 0x561715eff6a8 '__isinf' 'int (double)'
    |       | `-CallExpr 0x561715f4d8f8 <col:130, col:137> 'double'
    |       |   |-ImplicitCastExpr 0x561715f4d8e0 <col:130> 'double (*)(double)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x561715f4d8a0 <col:130> 'double (double)' Function 0x561715efe1d8 'ceil' 'double (double)'
    |       |   `-ImplicitCastExpr 0x561715f4d920 <col:135> 'double' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561715f4d8c0 <col:135> 'double' lvalue Var 0x561715f4bfa0 'd1' 'double'
    |       `-CallExpr 0x561715f4da48 <col:142, col:160> 'int'
    |         |-ImplicitCastExpr 0x561715f4da30 <col:142> 'int (*)(long double)' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x561715f4d978 <col:142> 'int (long double)' Function 0x561715f37038 '__isinfl' 'int (long double)'
    |         `-ImplicitCastExpr 0x561715f4da70 <col:152, col:159> 'long double' <FloatingCast>
    |           `-CallExpr 0x561715f4d9f0 <col:152, col:159> 'double'
    |             |-ImplicitCastExpr 0x561715f4d9d8 <col:152> 'double (*)(double)' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 0x561715f4d998 <col:152> 'double (double)' Function 0x561715efe1d8 'ceil' 'double (double)'
    |             `-ImplicitCastExpr 0x561715f4da18 <col:157> 'double' <LValueToRValue>
    |               `-DeclRefExpr 0x561715f4d9b8 <col:157> 'double' lvalue Var 0x561715f4bfa0 'd1' 'double'
    |-DeclStmt 0x561715f4dc20 <line:1012:3, col:41>
    | `-VarDecl 0x561715f4db60 <col:3, col:40> col:10 used d2 'double' cinit
    |   `-CallExpr 0x561715f4dc00 <col:15, col:40> 'double'
    |     `-ImplicitCastExpr 0x561715f4dbe8 <col:15> 'double (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x561715f4dbc8 <col:15> 'double ()' Function 0x561715f4ad68 '__VERIFIER_nondet_double' 'double ()'
    |-CallExpr 0x561715f4e080 <line:1013:3, col:132> 'void'
    | |-ImplicitCastExpr 0x561715f4e040 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561715f4dc38 <col:3> 'void (int)' Function 0x561715f4a830 '__VERIFIER_assume' 'void (int)'
    | `-ParenExpr 0x561715f4e020 <col:21, col:131> 'int'
    |   `-ConditionalOperator 0x561715f4dff0 <col:22, col:130> 'int'
    |     |-BinaryOperator 0x561715f4dcf0 <col:22, col:50> 'int' '=='
    |     | |-UnaryExprOrTypeTraitExpr 0x561715f4dc98 <col:22, col:32> 'unsigned long' sizeof
    |     | | `-ParenExpr 0x561715f4dc78 <col:29, col:32> 'double' lvalue
    |     | |   `-DeclRefExpr 0x561715f4dc58 <col:30> 'double' lvalue Var 0x561715f4db60 'd2' 'double' non_odr_use_unevaluated
    |     | `-UnaryExprOrTypeTraitExpr 0x561715f4dcd0 <col:37, col:50> 'unsigned long' sizeof 'float'
    |     |-CallExpr 0x561715f4dd68 <col:54, col:66> 'int'
    |     | |-ImplicitCastExpr 0x561715f4dd50 <col:54> 'int (*)(float)' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x561715f4dd10 <col:54> 'int (float)' Function 0x561715f1b2f8 '__isinff' 'int (float)'
    |     | `-ImplicitCastExpr 0x561715f4dda8 <col:64> 'float' <FloatingCast>
    |     |   `-ImplicitCastExpr 0x561715f4dd90 <col:64> 'double' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561715f4dd30 <col:64> 'double' lvalue Var 0x561715f4db60 'd2' 'double'
    |     `-ConditionalOperator 0x561715f4dfc0 <col:70, col:130> 'int'
    |       |-BinaryOperator 0x561715f4de58 <col:70, col:99> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x561715f4de00 <col:70, col:80> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x561715f4dde0 <col:77, col:80> 'double' lvalue
    |       | |   `-DeclRefExpr 0x561715f4ddc0 <col:78> 'double' lvalue Var 0x561715f4db60 'd2' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x561715f4de38 <col:85, col:99> 'unsigned long' sizeof 'double'
    |       |-CallExpr 0x561715f4ded0 <col:103, col:114> 'int'
    |       | |-ImplicitCastExpr 0x561715f4deb8 <col:103> 'int (*)(double)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x561715f4de78 <col:103> 'int (double)' Function 0x561715eff6a8 '__isinf' 'int (double)'
    |       | `-ImplicitCastExpr 0x561715f4def8 <col:112> 'double' <LValueToRValue>
    |       |   `-DeclRefExpr 0x561715f4de98 <col:112> 'double' lvalue Var 0x561715f4db60 'd2' 'double'
    |       `-CallExpr 0x561715f4df68 <col:118, col:130> 'int'
    |         |-ImplicitCastExpr 0x561715f4df50 <col:118> 'int (*)(long double)' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x561715f4df10 <col:118> 'int (long double)' Function 0x561715f37038 '__isinfl' 'int (long double)'
    |         `-ImplicitCastExpr 0x561715f4dfa8 <col:128> 'long double' <FloatingCast>
    |           `-ImplicitCastExpr 0x561715f4df90 <col:128> 'double' <LValueToRValue>
    |             `-DeclRefExpr 0x561715f4df30 <col:128> 'double' lvalue Var 0x561715f4db60 'd2' 'double'
    |-CallExpr 0x561715f4e6d8 <line:1014:3, col:162> 'void'
    | |-ImplicitCastExpr 0x561715f4e6c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561715f4e0a8 <col:3> 'void (int)' Function 0x561715f4aaa8 '__VERIFIER_assert' 'void (int)'
    | `-ParenExpr 0x561715f4e6a0 <col:21, col:161> 'int'
    |   `-ConditionalOperator 0x561715f4e670 <col:22, col:160> 'int'
    |     |-BinaryOperator 0x561715f4e1d8 <col:22, col:56> 'int' '=='
    |     | |-UnaryExprOrTypeTraitExpr 0x561715f4e180 <col:22, col:38> 'unsigned long' sizeof
    |     | | `-ParenExpr 0x561715f4e160 <col:29, col:38> 'double'
    |     | |   `-CallExpr 0x561715f4e120 <col:30, col:37> 'double'
    |     | |     |-ImplicitCastExpr 0x561715f4e108 <col:30> 'double (*)(double)' <FunctionToPointerDecay>
    |     | |     | `-DeclRefExpr 0x561715f4e0c8 <col:30> 'double (double)' Function 0x561715efe1d8 'ceil' 'double (double)' non_odr_use_unevaluated
    |     | |     `-ImplicitCastExpr 0x561715f4e148 <col:35> 'double' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x561715f4e0e8 <col:35> 'double' lvalue Var 0x561715f4db60 'd2' 'double' non_odr_use_unevaluated
    |     | `-UnaryExprOrTypeTraitExpr 0x561715f4e1b8 <col:43, col:56> 'unsigned long' sizeof 'float'
    |     |-CallExpr 0x561715f4e2c8 <col:60, col:78> 'int'
    |     | |-ImplicitCastExpr 0x561715f4e2b0 <col:60> 'int (*)(float)' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x561715f4e1f8 <col:60> 'int (float)' Function 0x561715f1b2f8 '__isinff' 'int (float)'
    |     | `-ImplicitCastExpr 0x561715f4e2f0 <col:70, col:77> 'float' <FloatingCast>
    |     |   `-CallExpr 0x561715f4e270 <col:70, col:77> 'double'
    |     |     |-ImplicitCastExpr 0x561715f4e258 <col:70> 'double (*)(double)' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x561715f4e218 <col:70> 'double (double)' Function 0x561715efe1d8 'ceil' 'double (double)'
    |     |     `-ImplicitCastExpr 0x561715f4e298 <col:75> 'double' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561715f4e238 <col:75> 'double' lvalue Var 0x561715f4db60 'd2' 'double'
    |     `-ConditionalOperator 0x561715f4e640 <col:82, col:160> 'int'
    |       |-BinaryOperator 0x561715f4e418 <col:82, col:117> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x561715f4e3c0 <col:82, col:98> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x561715f4e3a0 <col:89, col:98> 'double'
    |       | |   `-CallExpr 0x561715f4e360 <col:90, col:97> 'double'
    |       | |     |-ImplicitCastExpr 0x561715f4e348 <col:90> 'double (*)(double)' <FunctionToPointerDecay>
    |       | |     | `-DeclRefExpr 0x561715f4e308 <col:90> 'double (double)' Function 0x561715efe1d8 'ceil' 'double (double)' non_odr_use_unevaluated
    |       | |     `-ImplicitCastExpr 0x561715f4e388 <col:95> 'double' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x561715f4e328 <col:95> 'double' lvalue Var 0x561715f4db60 'd2' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x561715f4e3f8 <col:103, col:117> 'unsigned long' sizeof 'double'
    |       |-CallExpr 0x561715f4e508 <col:121, col:138> 'int'
    |       | |-ImplicitCastExpr 0x561715f4e4f0 <col:121> 'int (*)(double)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x561715f4e438 <col:121> 'int (double)' Function 0x561715eff6a8 '__isinf' 'int (double)'
    |       | `-CallExpr 0x561715f4e4b0 <col:130, col:137> 'double'
    |       |   |-ImplicitCastExpr 0x561715f4e498 <col:130> 'double (*)(double)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x561715f4e458 <col:130> 'double (double)' Function 0x561715efe1d8 'ceil' 'double (double)'
    |       |   `-ImplicitCastExpr 0x561715f4e4d8 <col:135> 'double' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561715f4e478 <col:135> 'double' lvalue Var 0x561715f4db60 'd2' 'double'
    |       `-CallExpr 0x561715f4e600 <col:142, col:160> 'int'
    |         |-ImplicitCastExpr 0x561715f4e5e8 <col:142> 'int (*)(long double)' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x561715f4e530 <col:142> 'int (long double)' Function 0x561715f37038 '__isinfl' 'int (long double)'
    |         `-ImplicitCastExpr 0x561715f4e628 <col:152, col:159> 'long double' <FloatingCast>
    |           `-CallExpr 0x561715f4e5a8 <col:152, col:159> 'double'
    |             |-ImplicitCastExpr 0x561715f4e590 <col:152> 'double (*)(double)' <FunctionToPointerDecay>
    |             | `-DeclRefExpr 0x561715f4e550 <col:152> 'double (double)' Function 0x561715efe1d8 'ceil' 'double (double)'
    |             `-ImplicitCastExpr 0x561715f4e5d0 <col:157> 'double' <LValueToRValue>
    |               `-DeclRefExpr 0x561715f4e570 <col:157> 'double' lvalue Var 0x561715f4db60 'd2' 'double'
    `-ReturnStmt 0x561715f4e720 <line:1016:3, col:10>
      `-IntegerLiteral 0x561715f4e700 <col:10> 'int' 0
