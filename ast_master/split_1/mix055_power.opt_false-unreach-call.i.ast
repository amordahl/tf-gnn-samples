TranslationUnitDecl 0x56173b5e2e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56173b5e36d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56173b5e33b0 '__int128'
|-TypedefDecl 0x56173b5e3748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56173b5e33d0 'unsigned __int128'
|-TypedefDecl 0x56173b5e3a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56173b5e3820 'struct __NSConstantString_tag'
|   `-Record 0x56173b5e37a0 '__NSConstantString_tag'
|-TypedefDecl 0x56173b5e3af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56173b5e3ab0 'char *'
|   `-BuiltinType 0x56173b5e2eb0 'char'
|-TypedefDecl 0x56173b622650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56173b5e3d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56173b5e3bd0 'struct __va_list_tag'
|     `-Record 0x56173b5e3b50 '__va_list_tag'
|-FunctionDecl 0x56173b622790 <./split_1/mix055_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56173b6226c0 <col:31> col:34 'int'
|-FunctionDecl 0x56173b622958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56173b622a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56173b622bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56173b622b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56173b622df8 <col:40, col:99>
|   |-IfStmt 0x56173b622dc8 <col:42, col:88>
|   | |-UnaryOperator 0x56173b622ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56173b622c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56173b622c70 <col:47> 'int' lvalue ParmVar 0x56173b622b38 'expression' 'int'
|   | `-CompoundStmt 0x56173b622db0 <col:59, col:88>
|   |   `-LabelStmt 0x56173b622d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56173b622d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56173b622d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56173b622cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x56173b622a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56173b622de0 <col:89>
|   `-ReturnStmt 0x56173b622de8 <col:91>
|-FunctionDecl 0x56173b622e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56173b622f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56173b623280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56173b622fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56173b623038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56173b6230b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56173b623138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56173b623340 <line:10:22>
|-FunctionDecl 0x56173b649390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56173b6233b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56173b623430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56173b6234b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56173b623530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56173b649450 <line:13:22>
|-FunctionDecl 0x56173b649700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56173b6494c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56173b649540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56173b6495c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56173b6497b8 <line:15:22>
|-TypedefDecl 0x56173b649828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56173b5e2f70 'unsigned char'
|-TypedefDecl 0x56173b649898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56173b5e2f90 'unsigned short'
|-TypedefDecl 0x56173b649908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56173b5e2fb0 'unsigned int'
|-TypedefDecl 0x56173b649978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b6499e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56173b5e2ed0 'signed char'
|-TypedefDecl 0x56173b649a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56173b5e2f70 'unsigned char'
|-TypedefDecl 0x56173b649ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56173b5e2ef0 'short'
|-TypedefDecl 0x56173b649b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56173b5e2f90 'unsigned short'
|-TypedefDecl 0x56173b649ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56173b5e2f10 'int'
|-TypedefDecl 0x56173b649c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56173b5e2fb0 'unsigned int'
|-TypedefDecl 0x56173b649c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b649cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b649d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b649dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b649e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b649eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56173b5e2fb0 'unsigned int'
|-TypedefDecl 0x56173b649f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56173b5e2fb0 'unsigned int'
|-TypedefDecl 0x56173b649f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b64a008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b64a078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56173b5e2fb0 'unsigned int'
|-TypedefDecl 0x56173b64a0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b64a158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64a1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64a238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56173b5e2f10 'int'
|-RecordDecl 0x56173b64a290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56173b64a408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56173b64a4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56173b64a460 'struct __fsid_t' sugar
|   `-RecordType 0x56173b64a310 '__fsid_t'
|     `-Record 0x56173b64a290 ''
|-TypedefDecl 0x56173b64a548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64a5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b64a628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b64a698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56173b5e2fb0 'unsigned int'
|-TypedefDecl 0x56173b64a708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64a778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56173b5e2fb0 'unsigned int'
|-TypedefDecl 0x56173b64a7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64a858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56173b5e2f10 'int'
|-TypedefDecl 0x56173b64a8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56173b5e2f10 'int'
|-TypedefDecl 0x56173b64a938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56173b5e2f10 'int'
|-TypedefDecl 0x56173b64a9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56173b5e3630 'void *'
|   `-BuiltinType 0x56173b5e2e70 'void'
|-TypedefDecl 0x56173b64aa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64aa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64aaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64ab68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b64abd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b64ac48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b64acb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b64ad28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64ad98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64ae08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64ae78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b64af08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56173b64aed0 '__off64_t' sugar
|   |-Typedef 0x56173b64a1c8 '__off64_t'
|   `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64b000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56173b64afc0 '__quad_t *'
|   `-TypedefType 0x56173b64af60 '__quad_t' sugar
|     |-Typedef 0x56173b649d68 '__quad_t'
|     `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64b070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56173b5e3ab0 'char *'
|   `-BuiltinType 0x56173b5e2eb0 'char'
|-TypedefDecl 0x56173b64b0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b64b150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56173b5e2fb0 'unsigned int'
|-FunctionDecl 0x56173b64b298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56173b64b1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56173b64c5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56173b64c5d8 <line:72:3, col:34>
|     `-CallExpr 0x56173b64c598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56173b64c580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56173b64c510 <col:10> '<builtin fn type>' Function 0x56173b64c380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56173b64c5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56173b64c530 <col:29> 'unsigned int' lvalue ParmVar 0x56173b64b1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56173b64c380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56173b64c420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56173b64c490 <col:10> Implicit
| `-ConstAttr 0x56173b64c4e8 <col:10> Implicit
|-FunctionDecl 0x56173b64c740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56173b64c638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56173b64ca58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56173b64ca48 <line:77:3, col:34>
|     `-CallExpr 0x56173b64ca08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56173b64c9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56173b64c978 <col:10> '<builtin fn type>' Function 0x56173b64c7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56173b64ca30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56173b64c998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56173b64c638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56173b64c7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56173b64c888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56173b64c8f8 <col:10> Implicit
| `-ConstAttr 0x56173b64c950 <col:10> Implicit
|-TypedefDecl 0x56173b64ca88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-TypedefDecl 0x56173b64cb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56173b64cae0 '__time_t' sugar
|   |-Typedef 0x56173b64a708 '__time_t'
|   `-BuiltinType 0x56173b5e2f30 'long'
|-RecordDecl 0x56173b64cb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56173b64cc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56173b64ccb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56173b64cd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56173b64cd10 '__pid_t' sugar
|   |-Typedef 0x56173b64a238 '__pid_t'
|   `-BuiltinType 0x56173b5e2f10 'int'
|-RecordDecl 0x56173b64cda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56173b64ce60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56173b64ceb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56173b64cf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56173b64cfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-RecordDecl 0x56173b64d030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56173b64d2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56173b64e3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56173b64d310 'struct cpu_set_t' sugar
|   `-RecordType 0x56173b64d0b0 'cpu_set_t'
|     `-Record 0x56173b64d030 ''
|-FunctionDecl 0x56173b64e678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56173b64e448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56173b64e550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56173b64e728 <line:107:19>
|-FunctionDecl 0x56173b64e900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56173b64e790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56173b64e9a8 <col:69>
|-FunctionDecl 0x56173b64eb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56173b64ea10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56173b64ebc8 <col:64>
|-FunctionDecl 0x56173b64ee88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56173b64ec30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56173b64ed68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56173b64ef38 <line:113:22>
|-FunctionDecl 0x56173b64f1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56173b64efa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56173b64f098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56173b64f268 <col:88>
|-FunctionDecl 0x56173b64f588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56173b64f2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56173b64f3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56173b64f440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56173b64f640 <col:62>
|-FunctionDecl 0x56173b64f7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56173b64f6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56173b64f860 <col:63>
|-FunctionDecl 0x56173b64f988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56173b64fa28 <col:47>
|-FunctionDecl 0x56173b64fb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56173b64fa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56173b64fbd8 <col:69>
|-FunctionDecl 0x56173b64fce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56173b64fc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56173b64fd88 <col:69>
|-FunctionDecl 0x56173b650048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56173b64fdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56173b64ff28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56173b6500f8 <col:88>
|-TypedefDecl 0x56173b650188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56173b650150 '__clock_t' sugar
|   |-Typedef 0x56173b64a548 '__clock_t'
|   `-BuiltinType 0x56173b5e2f30 'long'
|-TypedefDecl 0x56173b650218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56173b6501e0 '__clockid_t' sugar
|   |-Typedef 0x56173b64a938 '__clockid_t'
|   `-BuiltinType 0x56173b5e2f10 'int'
|-TypedefDecl 0x56173b6502a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56173b650270 '__timer_t' sugar
|   |-Typedef 0x56173b64a9a8 '__timer_t'
|   `-PointerType 0x56173b5e3630 'void *'
|     `-BuiltinType 0x56173b5e2e70 'void'
|-RecordDecl 0x56173b650300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56173b6503d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56173b650440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56173b6504a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56173b650510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56173b650578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56173b6505e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56173b650648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56173b6506b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56173b650718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56173b650780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56173b6507e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56173b650838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56173b650908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56173b650978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56173b650a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56173b650bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56173b650c90 <col:45>
|-FunctionDecl 0x56173b650e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56173b650d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56173b650f18 <col:54>
|-FunctionDecl 0x56173b651118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56173b650f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56173b650ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56173b6511c8 <line:157:22>
| `-ConstAttr 0x56173b651220 <col:63>
|-FunctionDecl 0x56173b652050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56173b651318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56173b6520f8 <col:56>
|-FunctionDecl 0x56173b6524a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56173b652168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56173b6521e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56173b652260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56173b652358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56173b652560 <col:54>
|-RecordDecl 0x56173b6525b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56173b652668 parent 0x56173b5e2e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56173b6528c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56173b652968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56173b6529d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56173b652a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56173b652b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56173b652c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56173b652bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x56173b652b80 'struct __locale_struct' sugar
|     `-RecordType 0x56173b652640 'struct __locale_struct'
|       `-Record 0x56173b6525b8 '__locale_struct'
|-TypedefDecl 0x56173b652cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56173b652cc0 '__locale_t' sugar
|   |-Typedef 0x56173b652c48 '__locale_t'
|   `-PointerType 0x56173b652bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x56173b652b80 'struct __locale_struct' sugar
|       `-RecordType 0x56173b652640 'struct __locale_struct'
|         `-Record 0x56173b6525b8 '__locale_struct'
|-FunctionDecl 0x56173b654110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56173b652d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56173b652de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56173b652e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56173b652ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56173b652f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56173b6541d8 <col:40>
|-FunctionDecl 0x56173b6543c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56173b6542a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56173b654470 <col:66>
|-FunctionDecl 0x56173b654580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56173b6544d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56173b654628 <col:69>
|-FunctionDecl 0x56173b654858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56173b654690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56173b654720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56173b654908 <col:52>
|-FunctionDecl 0x56173b654ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56173b654970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56173b654a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56173b654b60 <col:55>
|-FunctionDecl 0x56173b654cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56173b654be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56173b654da0 <col:62>
|-FunctionDecl 0x56173b654f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56173b654e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56173b654fc0 <col:60>
|-FunctionDecl 0x56173b6552b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56173b655118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56173b655198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56173b655368 <col:44>
|-FunctionDecl 0x56173b655578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56173b6553d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56173b655450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56173b655628 <col:49>
|-VarDecl 0x56173b655728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56173b6557a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56173b655828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56173b6558f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56173b655a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56173b655ac0 <col:42>
|-VarDecl 0x56173b655b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56173b655bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56173b655d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56173b655c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56173b655de0 <col:57>
|-FunctionDecl 0x56173b655ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56173b655e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56173b655f98 <col:56>
|-FunctionDecl 0x56173b6560d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56173b656018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56173b656178 <col:59>
|-FunctionDecl 0x56173b656280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56173b6561e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56173b656328 <col:48>
| `-ConstAttr 0x56173b656380 <col:89>
|-FunctionDecl 0x56173b6565e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56173b656438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56173b6564c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56173b656848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56173b6566d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56173b656768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56173b6568f8 <col:88>
|-FunctionDecl 0x56173b656a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56173b656960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56173b6569f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56173b656b40 <col:88>
|-FunctionDecl 0x56173b656d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56173b656ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56173b656c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56173b656e08 <line:208:22>
|-FunctionDecl 0x56173b657178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56173b656e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56173b656ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56173b656f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56173b657010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56173b657478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56173b657278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56173b657350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56173b657528 <col:85>
|-FunctionDecl 0x56173b657918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56173b657590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56173b6576c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56173b6577d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56173b6579d0 <col:52>
|-FunctionDecl 0x56173b657b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56173b657a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56173b657bf0 <col:61>
|-FunctionDecl 0x56173b6580f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56173b657c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56173b657cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56173b657e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56173b657ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56173b6581b0 <col:62>
|-FunctionDecl 0x56173b6583c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56173b658218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56173b6582a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56173b658478 <line:221:22>
|-FunctionDecl 0x56173b658578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56173b6584e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56173b658620 <col:65>
|-TypedefDecl 0x56173b658690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56173b5e2fd0 'unsigned long'
|-RecordDecl 0x56173b6586e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56173b658830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56173b658898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56173b658948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56173b6588f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56173b658770 'union pthread_attr_t'
|     `-Record 0x56173b6586e8 'pthread_attr_t'
|-RecordDecl 0x56173b6589a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56173b658b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56173b658b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56173b658c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56173b658be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56173b658a20 'struct __pthread_internal_list'
|     `-Record 0x56173b6589a0 '__pthread_internal_list'
|-RecordDecl 0x56173b658cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56173b658d58 parent 0x56173b5e2e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56173b658e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56173b658e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56173b658f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56173b658f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56173b658fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56173b659038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56173b65d110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56173b65d1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56173b65d2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56173b65d318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56173b65d4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56173b65d440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56173b658d30 'pthread_mutex_t'
|     `-Record 0x56173b658cb0 ''
|-RecordDecl 0x56173b65d510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56173b65d650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56173b65d6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56173b65d770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56173b65d710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56173b65d590 'pthread_mutexattr_t'
|     `-Record 0x56173b65d510 ''
|-RecordDecl 0x56173b65d7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56173b65d888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56173b65d950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56173b65d9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56173b65da20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56173b65da88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56173b65daf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56173b65db58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56173b65dbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56173b65dc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56173b65dce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_1/mix055_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_1/mix055_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56173b65ddd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56173b65de38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56173b65df70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56173b65df10 'union pthread_cond_t' sugar
|   `-RecordType 0x56173b65d860 'pthread_cond_t'
|     `-Record 0x56173b65d7e0 ''
|-RecordDecl 0x56173b65dfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56173b65f130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56173b65f198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56173b65f250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56173b65f1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56173b65e060 'pthread_condattr_t'
|     `-Record 0x56173b65dfe0 ''
|-TypedefDecl 0x56173b65f2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56173b5e2fb0 'unsigned int'
|-TypedefDecl 0x56173b65f348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56173b5e2f10 'int'
|-RecordDecl 0x56173b65f3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56173b65f448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56173b65f510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56173b65f578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56173b65f5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56173b65f648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56173b65f6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56173b65f718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56173b65f780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56173b65f7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56173b65f850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56173b65f8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56173b65f920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56173b65f9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_1/mix055_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_1/mix055_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56173b65fa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56173b65fae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56173b65fc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56173b65fbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56173b65f420 'pthread_rwlock_t'
|     `-Record 0x56173b65f3a0 ''
|-RecordDecl 0x56173b65fca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56173b65fde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56173b65fe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56173b65ff00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56173b65fea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56173b65fd20 'pthread_rwlockattr_t'
|     `-Record 0x56173b65fca0 ''
|-TypedefDecl 0x56173b65ff88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56173b5e2f14 'volatile int' volatile
|   `-BuiltinType 0x56173b5e2f10 'int'
|-RecordDecl 0x56173b65ffe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56173b661140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56173b6611a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56173b661260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56173b661200 'union pthread_barrier_t' sugar
|   `-RecordType 0x56173b660060 'pthread_barrier_t'
|     `-Record 0x56173b65ffe0 ''
|-RecordDecl 0x56173b6612d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56173b6613d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56173b661438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56173b6614f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56173b661490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56173b661350 'pthread_barrierattr_t'
|     `-Record 0x56173b6612d0 ''
|-TypedefDecl 0x56173b661608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56173b6615a0 'long [8]' 8 
|   `-BuiltinType 0x56173b5e2f30 'long'
|-EnumDecl 0x56173b661660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56173b661728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56173b661778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56173b6617c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56173b661898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56173b6618e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56173b661938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56173b661988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56173b661a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56173b6619f8 <col:26> 'int'
| |   `-DeclRefExpr 0x56173b6619d8 <col:26> 'int' EnumConstant 0x56173b661898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56173b661a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56173b661a80 <col:29> 'int'
| |   `-DeclRefExpr 0x56173b661a60 <col:29> 'int' EnumConstant 0x56173b6618e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56173b661b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56173b661b08 <col:30> 'int'
| |   `-DeclRefExpr 0x56173b661ae8 <col:30> 'int' EnumConstant 0x56173b661938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56173b661ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56173b661b90 <col:27> 'int'
|     `-DeclRefExpr 0x56173b661b70 <col:27> 'int' EnumConstant 0x56173b661a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56173b661bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56173b661cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56173b661d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56173b661d38 <col:30> 'int'
| |   `-DeclRefExpr 0x56173b661d18 <col:30> 'int' EnumConstant 0x56173b661cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56173b661da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56173b661e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56173b661e10 <col:29> 'int'
|     `-DeclRefExpr 0x56173b661df0 <col:29> 'int' EnumConstant 0x56173b661da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56173b661e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56173b661f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56173b661f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56173b661fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56173b662038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56173b662150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56173b6621a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56173b6621f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56173b662278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56173b662260 <col:31> 'int'
|     `-DeclRefExpr 0x56173b662240 <col:31> 'int' EnumConstant 0x56173b662150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56173b6622c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56173b662398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56173b6623e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56173b662438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56173b662508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56173b662558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56173b6625a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56173b662678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56173b6626c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56173b662718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56173b662958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56173b6629c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56173b662a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56173b662b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56173b662b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56173b662c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56173b662cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56173b662d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56173b662dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56173b662e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56173b663488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56173b662f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56173b663030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56173b663270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56173b6632f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56173b663548 <col:47>
| |-NonNullAttr 0x56173b6635a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56173b6635d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56173b663700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56173b663630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56173b663958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56173b6637b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56173b663838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56173b663b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56173b663a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56173b663bd0 <col:60>
|-FunctionDecl 0x56173b663d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56173b663dc0 <col:54>
| `-ConstAttr 0x56173b663e18 <col:95>
|-FunctionDecl 0x56173b663fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56173b663e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56173b663ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56173b664098 <line:394:19>
| `-ConstAttr 0x56173b6640f0 <col:60>
|-FunctionDecl 0x56173b665b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56173b6659d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56173b665bb0 <col:71>
| `-NonNullAttr 0x56173b665c08 <col:112, col:126> 1
|-FunctionDecl 0x56173b665d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56173b665c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56173b665db8 <line:397:22>
| `-NonNullAttr 0x56173b665e10 <col:63, col:77> 1
|-FunctionDecl 0x56173b666038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56173b665e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56173b665ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56173b6660e8 <line:400:22>
| `-NonNullAttr 0x56173b666140 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b666348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56173b666188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56173b666208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56173b6663f8 <line:403:22>
| `-NonNullAttr 0x56173b666450 <col:63, col:77> 1
|-FunctionDecl 0x56173b6666a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56173b666498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56173b666540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56173b666758 <line:406:22>
| `-NonNullAttr 0x56173b6667b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b6679e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56173b6667f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56173b666870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56173b667a98 <line:409:22>
| `-NonNullAttr 0x56173b667af0 <col:63, col:77> 1
|-FunctionDecl 0x56173b667d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56173b667b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56173b667bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56173b667dd8 <line:412:22>
| `-NonNullAttr 0x56173b667e30 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b668068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56173b667e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56173b667f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56173b668118 <col:37>
| `-NonNullAttr 0x56173b668170 <col:78, col:95> 1 2
|-FunctionDecl 0x56173b668358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b6681b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56173b668238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56173b668408 <line:418:22>
| `-NonNullAttr 0x56173b668460 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b6685e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56173b6684a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56173b668528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56173b668698 <line:420:22>
| `-NonNullAttr 0x56173b6686f0 <col:63, col:77> 1
|-FunctionDecl 0x56173b668898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b668738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56173b6687b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56173b668948 <line:423:22>
| `-NonNullAttr 0x56173b6689c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b668b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56173b668a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56173b668a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56173b668bf8 <line:426:22>
| `-NonNullAttr 0x56173b668c50 <col:63, col:77> 1
|-FunctionDecl 0x56173b668df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b668c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56173b668d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56173b668ea8 <line:429:22>
| `-NonNullAttr 0x56173b668f00 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b669088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56173b668f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56173b668fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56173b669138 <line:431:22>
| `-NonNullAttr 0x56173b669190 <col:63, col:77> 1
|-FunctionDecl 0x56173b6693b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56173b6691d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56173b669258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56173b669468 <line:434:22>
| |-NonNullAttr 0x56173b6694c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56173b6694f8 <col:100> "" ""
|-FunctionDecl 0x56173b669708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56173b669548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56173b6695c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56173b6697b8 <line:437:22>
| |-NonNullAttr 0x56173b669810 <col:63, col:77> 1
| `-DeprecatedAttr 0x56173b669848 <col:97> "" ""
|-FunctionDecl 0x56173b669a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56173b669898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56173b669910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56173b669af8 <line:440:22>
| `-NonNullAttr 0x56173b669b50 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b669cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56173b669b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56173b669c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56173b669d80 <line:443:22>
| `-NonNullAttr 0x56173b669dd8 <col:63, col:77> 1
|-FunctionDecl 0x56173b66a0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56173b669e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56173b669ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56173b669f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56173b66a180 <line:447:22>
| `-NonNullAttr 0x56173b66a1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56173b66a488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56173b66a230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56173b66a2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56173b66a328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56173b66a540 <col:43>
| `-NonNullAttr 0x56173b66a598 <col:84, col:98> 1
|-FunctionDecl 0x56173b66a858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56173b66a5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56173b66a668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56173b66a6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56173b66a910 <line:452:22>
| `-NonNullAttr 0x56173b66a968 <col:63, col:77> 3
|-FunctionDecl 0x56173b66ac78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56173b66a9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56173b66aa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56173b66aaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56173b66ad30 <line:456:22>
| `-NonNullAttr 0x56173b66ad88 <col:63, col:80> 2 3
|-FunctionDecl 0x56173b66af78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56173b66add8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56173b66ae58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56173b66b028 <line:458:22>
|-FunctionDecl 0x56173b66b3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56173b66b0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56173b66b290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56173b66b4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56173b66b650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56173b66b530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56173b66b5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56173b66b838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56173b66b718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56173b66b798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56173b66b9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56173b66b8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56173b66bb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56173b66bbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56173b66bc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56173b66bd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56173b66bdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56173b66bfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_1/mix055_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56173b66c098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56173b66c150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56173b66c0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56173b66bc50 '__pthread_unwind_buf_t'
| |   `-Record 0x56173b66bbd0 ''
| `-AlignedAttr 0x56173b66c1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56173b66c220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56173b66c380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56173b66c3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56173b66c450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56173b66c4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56173b66c6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56173b66c5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56173b66c808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56173b66c778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56173b66ca00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56173b66c8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56173b66caa8 <line:487:22>
|-RecordDecl 0x56173b66cb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56173b66ce18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56173b66cc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56173b66ccf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56173b66cec8 <col:86>
| `-ReturnsTwiceAttr 0x56173b66cf20 <col:12> Implicit
|-FunctionDecl 0x56173b66d248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56173b66cff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56173b66d100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56173b66d2f8 <line:493:22>
| `-NonNullAttr 0x56173b66d350 <col:63, col:77> 1
|-FunctionDecl 0x56173b66d4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56173b66d398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56173b66d570 <line:495:22>
| `-NonNullAttr 0x56173b66d5c8 <col:63, col:77> 1
|-FunctionDecl 0x56173b66d6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56173b66d618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56173b66d778 <line:497:22>
| `-NonNullAttr 0x56173b66d7d0 <col:52, col:66> 1
|-FunctionDecl 0x56173b66d8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56173b66d818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56173b66d978 <line:499:22>
| `-NonNullAttr 0x56173b66d9d0 <col:52, col:66> 1
|-FunctionDecl 0x56173b66ec28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56173b66ea38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56173b66eac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56173b66ecd8 <col:36>
| `-NonNullAttr 0x56173b66ed30 <col:66, col:83> 1 2
|-FunctionDecl 0x56173b66ee30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56173b66ed78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56173b66eed8 <line:504:22>
| `-NonNullAttr 0x56173b66ef30 <col:52, col:66> 1
|-FunctionDecl 0x56173b66f1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b66efe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56173b66f060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56173b66f278 <line:508:22>
| `-NonNullAttr 0x56173b66f2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b66f598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56173b66f318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56173b66f398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56173b66f418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56173b66f650 <line:512:22>
| `-NonNullAttr 0x56173b66f6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56173b66f7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56173b66f6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56173b66f858 <line:514:22>
| `-NonNullAttr 0x56173b66f8b0 <col:63, col:77> 1
|-FunctionDecl 0x56173b66fad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56173b66f960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56173b66fb80 <line:516:22>
| `-NonNullAttr 0x56173b66fbd8 <col:63, col:77> 1
|-FunctionDecl 0x56173b66fce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56173b66fc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56173b66fd88 <line:518:22>
| `-NonNullAttr 0x56173b66fde0 <col:63, col:77> 1
|-FunctionDecl 0x56173b670008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b66fe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56173b66fea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56173b6700b8 <line:522:22>
| `-NonNullAttr 0x56173b670110 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b670318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56173b670158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56173b6701d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56173b6703c8 <line:525:22>
| `-NonNullAttr 0x56173b670420 <col:63, col:77> 1
|-FunctionDecl 0x56173b6705c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b670468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56173b6704e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56173b670678 <line:528:22>
| `-NonNullAttr 0x56173b6706d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b670858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56173b670718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56173b670798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56173b670908 <line:530:22>
| `-NonNullAttr 0x56173b670960 <col:63, col:77> 1
|-FunctionDecl 0x56173b670b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b6709a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56173b670a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56173b670bd0 <line:534:22>
| `-NonNullAttr 0x56173b670c28 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b670db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56173b670c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56173b670cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56173b670e68 <line:537:22>
| `-NonNullAttr 0x56173b670ec0 <col:63, col:77> 1
|-FunctionDecl 0x56173b671068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b670f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56173b670f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56173b671118 <line:541:22>
| `-NonNullAttr 0x56173b671170 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b6712f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56173b6711b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56173b671238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56173b6713a8 <line:544:22>
| `-NonNullAttr 0x56173b671400 <col:63, col:77> 1
|-FunctionDecl 0x56173b6715e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56173b671448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56173b6714c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56173b671698 <line:547:22>
| `-NonNullAttr 0x56173b6716f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b671878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56173b671738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56173b6717b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56173b671928 <line:550:22>
| `-NonNullAttr 0x56173b671980 <col:63, col:77> 1
|-FunctionDecl 0x56173b672cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56173b672aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56173b672bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56173b672da8 <col:29>
| `-NonNullAttr 0x56173b672e00 <col:70, col:84> 1
|-FunctionDecl 0x56173b672f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56173b672e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56173b673020 <line:555:22>
| `-NonNullAttr 0x56173b673078 <col:63, col:77> 1
|-FunctionDecl 0x56173b673180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56173b6730c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56173b673228 <line:557:22>
| `-NonNullAttr 0x56173b673280 <col:52, col:66> 1
|-FunctionDecl 0x56173b673380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56173b6732c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56173b673428 <line:559:19>
| `-NonNullAttr 0x56173b673480 <col:49, col:63> 1
|-FunctionDecl 0x56173b6736b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56173b6734c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56173b673558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56173b673768 <col:39>
| `-NonNullAttr 0x56173b6737c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56173b6738c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56173b673808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56173b673968 <line:564:22>
| `-NonNullAttr 0x56173b6739c0 <col:52, col:66> 1
|-FunctionDecl 0x56173b673b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56173b673a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56173b673bd0 <line:566:22>
| `-NonNullAttr 0x56173b673c28 <col:52, col:66> 1
|-FunctionDecl 0x56173b673de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56173b673c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56173b673d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56173b673e98 <col:39>
| `-NonNullAttr 0x56173b673ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56173b673ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56173b673f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56173b674098 <line:571:22>
| `-NonNullAttr 0x56173b6740f0 <col:52, col:66> 1
|-FunctionDecl 0x56173b6742d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56173b6741a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56173b674380 <line:573:22>
| `-NonNullAttr 0x56173b6743d8 <col:63, col:77> 1
|-FunctionDecl 0x56173b6744e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56173b674428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56173b674588 <line:575:22>
| `-NonNullAttr 0x56173b6745e0 <col:63, col:77> 1
|-FunctionDecl 0x56173b674808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b674628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56173b6746a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56173b6748b8 <line:579:22>
| `-NonNullAttr 0x56173b674910 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b674b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56173b674958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56173b6749d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56173b674be8 <line:582:22>
| `-NonNullAttr 0x56173b674c40 <col:63, col:77> 1
|-FunctionDecl 0x56173b674de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b674c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56173b674d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56173b674e98 <line:586:22>
| `-NonNullAttr 0x56173b674ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b675078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56173b674f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56173b674fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56173b675128 <col:36>
| `-NonNullAttr 0x56173b675180 <col:77, col:91> 1
|-FunctionDecl 0x56173b6754b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56173b675260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56173b675370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56173b675568 <line:591:22>
| `-NonNullAttr 0x56173b6755c0 <col:63, col:77> 1
|-FunctionDecl 0x56173b675738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56173b675608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56173b6757e0 <line:593:22>
| `-NonNullAttr 0x56173b675838 <col:63, col:77> 1
|-FunctionDecl 0x56173b675940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56173b675888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56173b6759e8 <line:595:22>
| `-NonNullAttr 0x56173b675a40 <col:52, col:66> 1
|-FunctionDecl 0x56173b675b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56173b675aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56173b675c00 <line:597:22>
| `-NonNullAttr 0x56173b675c58 <col:52, col:66> 1
|-FunctionDecl 0x56173b675e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56173b675ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56173b675d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56173b675f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56173b676268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56173b675fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56173b676030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56173b6760c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56173b676320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56173b676538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56173b676400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56173b6765e0 <line:606:22>
| `-NonNullAttr 0x56173b676638 <col:63, col:77> 1
|-FunctionDecl 0x56173b676740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56173b676688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56173b6767e8 <line:608:22>
| `-NonNullAttr 0x56173b676840 <col:63, col:77> 1
|-FunctionDecl 0x56173b676aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b676888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56173b676908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56173b676b50 <line:612:22>
| `-NonNullAttr 0x56173b676ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b676db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56173b676bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56173b676c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56173b676e68 <col:37>
| `-NonNullAttr 0x56173b676ec0 <col:78, col:92> 1
|-FunctionDecl 0x56173b6770d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56173b676f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56173b676fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56173b677188 <line:618:22>
| `-NonNullAttr 0x56173b6771e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b6773a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56173b677228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56173b6772a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56173b677458 <line:621:22>
| `-NonNullAttr 0x56173b6774b0 <col:63, col:77> 1
|-FunctionDecl 0x56173b677758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56173b677590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56173b677610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56173b677808 <line:623:22>
| `-NonNullAttr 0x56173b677860 <col:63, col:77> 1
|-FunctionDecl 0x56173b6779d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56173b6778a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56173b677ab0 <line:625:22>
| `-NonNullAttr 0x56173b677b08 <col:63, col:77> 1
|-FunctionDecl 0x56173b677c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56173b677b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56173b677cb8 <line:627:22>
| `-NonNullAttr 0x56173b677d10 <col:52, col:66> 1
|-FunctionDecl 0x56173b677e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56173b677d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56173b677eb8 <line:629:22>
| `-NonNullAttr 0x56173b677f10 <col:52, col:66> 1
|-FunctionDecl 0x56173b678010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56173b677f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56173b6780b8 <line:631:22>
| `-NonNullAttr 0x56173b678110 <col:52, col:66> 1
|-FunctionDecl 0x56173b6784e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56173b6781f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56173b678300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56173b678380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56173b6785a0 <line:635:22>
| `-NonNullAttr 0x56173b6785f8 <col:63, col:77> 1
|-FunctionDecl 0x56173b678778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56173b678648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56173b678820 <line:637:22>
| `-NonNullAttr 0x56173b678878 <col:63, col:77> 1
|-FunctionDecl 0x56173b678980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56173b6788c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56173b678a28 <line:639:22>
| `-NonNullAttr 0x56173b678a80 <col:52, col:66> 1
|-FunctionDecl 0x56173b679c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56173b679b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56173b679d30 <line:641:22>
| `-NonNullAttr 0x56173b679d88 <col:63, col:77> 1
|-FunctionDecl 0x56173b679e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56173b679dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56173b679f38 <line:643:22>
| `-NonNullAttr 0x56173b679f90 <col:63, col:77> 1
|-FunctionDecl 0x56173b67a1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56173b679fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56173b67a058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56173b67a268 <line:647:22>
| `-NonNullAttr 0x56173b67a2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56173b67a4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56173b67a308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56173b67a388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56173b67a578 <line:650:22>
| `-NonNullAttr 0x56173b67a5d0 <col:63, col:77> 1
|-FunctionDecl 0x56173b67a918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56173b67a6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56173b67a7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56173b67a9c8 <line:653:22>
| `-NonNullAttr 0x56173b67aa20 <col:63, col:77> 1
|-FunctionDecl 0x56173b67ab88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56173b67aa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56173b67ac30 <col:69>
|-FunctionDecl 0x56173b67ada8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56173b67ac98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56173b67ae50 <col:72>
|-FunctionDecl 0x56173b67b088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56173b67aeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56173b67af68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56173b67b138 <col:44>
|-FunctionDecl 0x56173b67b358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56173b67b1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56173b67b218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56173b67b408 <line:660:22>
| `-NonNullAttr 0x56173b67b460 <col:63, col:77> 2
|-FunctionDecl 0x56173b67b8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56173b67b540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56173b67b650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56173b67b760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56173b67b960 <col:47>
|-FunctionDecl 0x56173b67baf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56173b67b9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56173b67bc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56173b67bbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56173b67bda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56173b67bd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56173b67bef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56173b67be60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56173b67bfc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56173b67c080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56173b67c140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56173b67c1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56173b67c278 prev 0x56173b67c1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56173b67c2e0 <col:24> 'int' 0
|-VarDecl 0x56173b67c318 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56173b67c398 prev 0x56173b67c318 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56173b67c400 <col:27> 'int' 0
|-VarDecl 0x56173b67c438 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56173b67c4b8 prev 0x56173b67c438 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56173b67c520 <col:27> 'int' 0
|-VarDecl 0x56173b67c558 <line:678:1, col:5> col:5 used a 'int'
|-VarDecl 0x56173b67c5d8 prev 0x56173b67c558 <line:679:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56173b67c640 <col:9> 'int' 0
|-VarDecl 0x56173b67c670 <line:680:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56173b67c6e8 <line:681:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56173b67c768 <line:682:1, col:5> col:5 used x 'int'
|-VarDecl 0x56173b67c7e8 prev 0x56173b67c768 <line:683:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56173b67c850 <col:9> 'int' 0
|-VarDecl 0x56173b67c888 <line:684:1, col:5> col:5 used y 'int'
|-VarDecl 0x56173b67c908 prev 0x56173b67c888 <line:685:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56173b67c970 <col:9> 'int' 0
|-VarDecl 0x56173b67c9a8 <line:686:1, col:5> col:5 used z 'int'
|-VarDecl 0x56173b67ca28 prev 0x56173b67c9a8 <line:687:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56173b67ca90 <col:9> 'int' 0
|-VarDecl 0x56173b67cb00 <line:688:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x56173b67cb80 <line:689:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x56173b67cbf8 <line:690:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x56173b67cc70 <line:691:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x56173b67cce8 <line:692:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x56173b67cd60 <line:693:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x56173b67cdd8 <line:694:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x56173b67ce50 <line:695:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x56173b67cec8 <line:696:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x56173b67cf40 <line:697:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x56173b67cfb8 <line:698:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x56173b67d030 <line:699:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x56173b67d0a8 <line:700:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x56173b67d128 <line:701:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x56173b67d1a8 <line:702:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x56173b67d220 <line:703:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x56173b67d2a0 <line:704:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x56173b67d318 <line:705:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x56173b67d390 <line:706:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56173b67d408 <line:707:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56173b67d520 prev 0x56173b67baf0 <line:708:1, line:722:1> line:708:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56173b67d488 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56173b67db10 <line:709:1, line:722:1>
|   |-CallExpr 0x56173b67d638 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67d620 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67d5c8 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67d698 <line:711:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56173b67d658 <col:3> 'int' lvalue Var 0x56173b67c5d8 'a' 'int'
|   | `-IntegerLiteral 0x56173b67d678 <col:7> 'int' 1
|   |-CallExpr 0x56173b67d6f0 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67d6d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67d6b8 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b67d748 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67d730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67d710 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67d7a8 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56173b67d768 <col:3> 'int' lvalue Var 0x56173b67c7e8 'x' 'int'
|   | `-IntegerLiteral 0x56173b67d788 <col:7> 'int' 1
|   |-CallExpr 0x56173b67d800 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67d7e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67d7c8 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b67d858 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67d840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67d820 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56173b67d8b0 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67d898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67d878 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b67d908 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67d8f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67d8d0 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67d9c0 <line:719:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56173b67d928 <col:3> 'int' lvalue Var 0x56173b67c278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56173b67d9a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56173b67d988 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56173b67d948 <col:22> 'int' lvalue Var 0x56173b67c278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56173b67d968 <col:41> 'int' 1
|   |-CallExpr 0x56173b67da18 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67da00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67d9e0 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56173b67dac8 <line:721:3, col:36>
|     `-CallExpr 0x56173b67daa8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56173b67da90 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56173b67da38 <col:10> 'void *(void)' Function 0x56173b622958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56173b67dc30 prev 0x56173b67bc48 <line:723:1, line:737:1> line:723:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56173b67db98 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56173b67e190 <line:724:1, line:737:1>
|   |-CallExpr 0x56173b67dd10 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67dcf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67dcd8 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67dd70 <line:726:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56173b67dd30 <col:3> 'int' lvalue Var 0x56173b67c7e8 'x' 'int'
|   | `-IntegerLiteral 0x56173b67dd50 <col:7> 'int' 2
|   |-CallExpr 0x56173b67ddc8 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67ddb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67dd90 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b67de20 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67de08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67dde8 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67de98 <line:729:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56173b67de40 <col:3> 'int' lvalue Var 0x56173b67c398 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56173b67de80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56173b67de60 <col:25> 'int' lvalue Var 0x56173b67c908 'y' 'int'
|   |-CallExpr 0x56173b67def0 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67ded8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67deb8 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b67df48 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67df30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67df10 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56173b67dfa0 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67df88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67df68 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b67dff8 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67dfe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67dfc0 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67e0b0 <line:734:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56173b67e018 <col:3> 'int' lvalue Var 0x56173b67c278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56173b67e090 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56173b67e078 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56173b67e038 <col:22> 'int' lvalue Var 0x56173b67c278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56173b67e058 <col:41> 'int' 1
|   |-CallExpr 0x56173b67e108 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67e0f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67e0d0 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56173b67e180 <line:736:3, col:36>
|     `-CallExpr 0x56173b67e160 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56173b67e148 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56173b67e128 <col:10> 'void *(void)' Function 0x56173b622958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56173b67e2b0 prev 0x56173b67bda0 <line:738:1, line:757:1> line:738:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56173b67e218 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56173b67f4e0 <line:739:1, line:757:1>
|   |-CallExpr 0x56173b67e390 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67e378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67e358 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67e3f0 <line:741:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56173b67e3b0 <col:3> 'int' lvalue Var 0x56173b67c908 'y' 'int'
|   | `-IntegerLiteral 0x56173b67e3d0 <col:7> 'int' 1
|   |-CallExpr 0x56173b67e448 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67e430 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67e410 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b67e4a0 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67e488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67e468 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67e500 <line:744:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56173b67e4c0 <col:3> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
|   | `-IntegerLiteral 0x56173b67e4e0 <col:7> 'int' 1
|   |-CallExpr 0x56173b67e558 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67e540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67e520 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b67e5b0 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67e598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67e578 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67e898 <line:747:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56173b67e5d0 <col:3> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
|   | `-ConditionalOperator 0x56173b67e868 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56173b67e690 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56173b67e648 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56173b67e630 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56173b67e5f0 <col:7> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56173b67e678 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56173b67e660 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56173b67e610 <col:25> '_Bool' lvalue Var 0x56173b67cd60 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56173b67e850 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56173b67e6b0 <col:42> 'int' lvalue Var 0x56173b67d1a8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56173b67e830 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56173b67e800 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56173b67e770 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56173b67e728 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56173b67e710 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56173b67e6d0 <col:55> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56173b67e758 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56173b67e740 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56173b67e6f0 <col:73> '_Bool' lvalue Var 0x56173b67cfb8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56173b67e7d0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56173b67e790 <col:90> 'int' lvalue Var 0x56173b67d2a0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56173b67e7e8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56173b67e7b0 <col:102> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
|   |-BinaryOperator 0x56173b67eaa0 <line:748:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67e8b8 <col:3> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56173b67ea88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56173b67ea58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56173b67e978 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56173b67e930 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56173b67e918 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56173b67e8d8 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56173b67e960 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56173b67e948 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56173b67e8f8 <col:38> '_Bool' lvalue Var 0x56173b67cd60 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56173b67ea10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56173b67e9c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56173b67e998 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56173b67ea40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56173b67ea28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56173b67e9f0 <col:66> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56173b67eda8 <line:749:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67eac0 <col:3> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56173b67ed90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56173b67ed60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56173b67ec80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56173b67eba0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56173b67eb58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56173b67eb40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56173b67eae0 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56173b67eb88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56173b67eb70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56173b67eb20 <col:38> '_Bool' lvalue Var 0x56173b67cd60 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56173b67ec60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56173b67ec18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56173b67ec00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56173b67ebc0 <col:56> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56173b67ec48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56173b67ec30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56173b67ebe0 <col:74> '_Bool' lvalue Var 0x56173b67cfb8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56173b67ed18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56173b67ecd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56173b67eca0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56173b67ed48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56173b67ed30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56173b67ecf8 <col:102> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56173b67efb0 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67edc8 <col:3> '_Bool' lvalue Var 0x56173b67cd60 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56173b67ef98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56173b67ef68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56173b67ee88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56173b67ee40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56173b67ee28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56173b67ede8 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56173b67ee70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56173b67ee58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56173b67ee08 <col:38> '_Bool' lvalue Var 0x56173b67cd60 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56173b67ef20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56173b67eed8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56173b67eea8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56173b67ef50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56173b67ef38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56173b67ef00 <col:66> '_Bool' lvalue Var 0x56173b67cd60 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56173b67f298 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67efd0 <col:3> '_Bool' lvalue Var 0x56173b67cfb8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56173b67f280 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56173b67f250 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56173b67f170 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56173b67f090 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56173b67f048 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56173b67f030 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56173b67eff0 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56173b67f078 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56173b67f060 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56173b67f010 <col:38> '_Bool' lvalue Var 0x56173b67cd60 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56173b67f150 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56173b67f108 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56173b67f0f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56173b67f0b0 <col:56> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56173b67f138 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56173b67f120 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56173b67f0d0 <col:74> '_Bool' lvalue Var 0x56173b67cfb8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56173b67f208 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56173b67f1c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56173b67f190 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56173b67f238 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56173b67f220 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56173b67f1e8 <col:102> '_Bool' lvalue Var 0x56173b67cfb8 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56173b67f2f0 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67f2d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67f2b8 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b67f348 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67f330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67f310 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67f400 <line:754:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56173b67f368 <col:3> 'int' lvalue Var 0x56173b67c278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56173b67f3e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56173b67f3c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56173b67f388 <col:22> 'int' lvalue Var 0x56173b67c278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56173b67f3a8 <col:41> 'int' 1
|   |-CallExpr 0x56173b67f458 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67f440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67f420 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56173b67f4d0 <line:756:3, col:36>
|     `-CallExpr 0x56173b67f4b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56173b67f498 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56173b67f478 <col:10> 'void *(void)' Function 0x56173b622958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56173b67f628 prev 0x56173b67bef8 <line:758:1, line:787:1> line:758:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x56173b67f590 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56173b680e90 <line:759:1, line:787:1>
|   |-CallExpr 0x56173b67f708 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67f6f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67f6d0 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67f780 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56173b67f728 <col:3> 'int' lvalue Var 0x56173b67d2a0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56173b67f768 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56173b67f748 <col:15> 'int' lvalue Var 0x56173b67d1a8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56173b67f7e0 <line:762:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56173b67f7a0 <col:3> 'int' lvalue Var 0x56173b67d1a8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x56173b67f7c0 <col:15> 'int' 2
|   |-BinaryOperator 0x56173b67f858 <line:763:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67f800 <col:3> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56173b67f840 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56173b67f820 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56173b67f8f0 <line:764:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67f878 <col:3> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56173b67f8c8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56173b67f898 <col:27> 'int' 1
|   |-CallExpr 0x56173b67fa78 <line:765:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56173b67fa60 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56173b67f910 <col:3> 'void (int)' Function 0x56173b622bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56173b67fa10 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56173b67f9f0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56173b67f9d0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56173b67f988 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56173b67f970 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56173b67f930 <col:23> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56173b67f9b8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56173b67f9a0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56173b67f950 <col:41> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56173b67faf8 <line:766:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67faa0 <col:3> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56173b67fae0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56173b67fac0 <col:20> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56173b67fb88 <line:767:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67fb30 <col:3> '_Bool' lvalue Var 0x56173b67cec8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56173b67fb70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56173b67fb50 <col:20> '_Bool' lvalue Var 0x56173b67cc70 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56173b67fc00 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67fba8 <col:3> '_Bool' lvalue Var 0x56173b67cf40 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56173b67fbe8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56173b67fbc8 <col:20> '_Bool' lvalue Var 0x56173b67cce8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56173b67fc78 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67fc20 <col:3> '_Bool' lvalue Var 0x56173b67cfb8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56173b67fc60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56173b67fc40 <col:20> '_Bool' lvalue Var 0x56173b67cd60 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56173b67fcf0 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67fc98 <col:3> '_Bool' lvalue Var 0x56173b67d030 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56173b67fcd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56173b67fcb8 <col:20> '_Bool' lvalue Var 0x56173b67cdd8 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56173b67fd88 <line:771:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56173b67fd10 <col:3> '_Bool' lvalue Var 0x56173b67cdd8 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x56173b67fd60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56173b67fd30 <col:27> 'int' 1
|   |-CallExpr 0x56173b67fde0 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67fdc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67fda8 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b67fe38 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67fe20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67fe00 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b67feb0 <line:774:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56173b67fe58 <col:3> 'int' lvalue Var 0x56173b67c4b8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x56173b67fe98 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56173b67fe78 <col:25> 'int' lvalue Var 0x56173b67c5d8 'a' 'int'
|   |-CallExpr 0x56173b67ff08 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b67fef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67fed0 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b67ff60 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b67ff48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b67ff28 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b680248 <line:777:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56173b67ff80 <col:3> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
|   | `-ConditionalOperator 0x56173b680218 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56173b680040 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56173b67fff8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56173b67ffe0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56173b67ffa0 <col:7> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56173b680028 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56173b680010 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56173b67ffc0 <col:25> '_Bool' lvalue Var 0x56173b67cdd8 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56173b680200 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56173b680060 <col:42> 'int' lvalue Var 0x56173b67d1a8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56173b6801e0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56173b6801b0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56173b680120 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56173b6800d8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56173b6800c0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56173b680080 <col:55> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56173b680108 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56173b6800f0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56173b6800a0 <col:73> '_Bool' lvalue Var 0x56173b67d030 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56173b680180 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56173b680140 <col:90> 'int' lvalue Var 0x56173b67d2a0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56173b680198 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56173b680160 <col:102> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
|   |-BinaryOperator 0x56173b680450 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56173b680268 <col:3> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56173b680438 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56173b680408 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56173b680328 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56173b6802e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56173b6802c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56173b680288 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56173b680310 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56173b6802f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56173b6802a8 <col:38> '_Bool' lvalue Var 0x56173b67cdd8 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56173b6803c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56173b680378 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56173b680348 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56173b6803f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56173b6803d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56173b6803a0 <col:66> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56173b680738 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56173b680470 <col:3> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56173b680720 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56173b6806f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56173b680610 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56173b680530 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56173b6804e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56173b6804d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56173b680490 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56173b680518 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56173b680500 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56173b6804b0 <col:38> '_Bool' lvalue Var 0x56173b67cdd8 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56173b6805f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56173b6805a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56173b680590 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56173b680550 <col:56> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56173b6805d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56173b6805c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56173b680570 <col:74> '_Bool' lvalue Var 0x56173b67d030 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56173b6806a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56173b680660 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56173b680630 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56173b6806d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56173b6806c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56173b680688 <col:102> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56173b680940 <line:780:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56173b680758 <col:3> '_Bool' lvalue Var 0x56173b67cdd8 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56173b680928 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56173b6808f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56173b680818 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56173b6807d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56173b6807b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56173b680778 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56173b680800 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56173b6807e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56173b680798 <col:38> '_Bool' lvalue Var 0x56173b67cdd8 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56173b6808b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56173b680868 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56173b680838 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56173b6808e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56173b6808c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56173b680890 <col:66> '_Bool' lvalue Var 0x56173b67cdd8 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56173b680c48 <line:781:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56173b680960 <col:3> '_Bool' lvalue Var 0x56173b67d030 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56173b680c30 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56173b680c00 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56173b680b00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56173b680a20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56173b6809d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56173b6809c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56173b680980 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56173b680a08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56173b6809f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56173b6809a0 <col:38> '_Bool' lvalue Var 0x56173b67cdd8 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56173b680ae0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56173b680a98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56173b680a80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56173b680a40 <col:56> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56173b680ac8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56173b680ab0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56173b680a60 <col:74> '_Bool' lvalue Var 0x56173b67d030 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56173b680bb8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56173b680b70 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56173b680b40 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56173b680be8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56173b680bd0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56173b680b98 <col:102> '_Bool' lvalue Var 0x56173b67d030 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x56173b680ca0 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b680c88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b680c68 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56173b680cf8 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56173b680ce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b680cc0 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56173b680db0 <line:784:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56173b680d18 <col:3> 'int' lvalue Var 0x56173b67c278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56173b680d90 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56173b680d78 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56173b680d38 <col:22> 'int' lvalue Var 0x56173b67c278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56173b680d58 <col:41> 'int' 1
|   |-CallExpr 0x56173b680e08 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56173b680df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56173b680dd0 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56173b680e80 <line:786:3, col:36>
|     `-CallExpr 0x56173b680e60 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56173b680e48 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56173b680e28 <col:10> 'void *(void)' Function 0x56173b622958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56173b680f98 prev 0x56173b67bfc0 <line:788:1, line:790:1> line:788:6 fence 'void ()'
| `-CompoundStmt 0x56173b681038 <line:789:1, line:790:1>
|-FunctionDecl 0x56173b681068 prev 0x56173b67c080 <line:791:1, line:793:1> line:791:6 isync 'void ()'
| `-CompoundStmt 0x56173b681108 <line:792:1, line:793:1>
|-FunctionDecl 0x56173b681138 prev 0x56173b67c140 <line:794:1, line:796:1> line:794:6 lwfence 'void ()'
| `-CompoundStmt 0x56173b6811d8 <line:795:1, line:796:1>
`-FunctionDecl 0x56173b681248 <line:797:1, line:836:1> line:797:5 main 'int ()'
  `-CompoundStmt 0x56173b685ba0 <line:798:1, line:836:1>
    |-DeclStmt 0x56173b681360 <line:799:3, col:18>
    | `-VarDecl 0x56173b6812f8 <col:3, col:13> col:13 used t1463 'pthread_t':'unsigned long'
    |-CallExpr 0x56173b681568 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56173b681550 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56173b681378 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56173b663488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56173b6813b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56173b681398 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56173b6812f8 't1463' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56173b6815a8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56173b681430 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56173b681408 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56173b6813d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56173b6815c0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56173b681450 <col:39> 'void *(void *)' Function 0x56173b67d520 'P0' 'void *(void *)'
    | `-ParenExpr 0x56173b6814d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56173b6814a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56173b681470 <col:52> 'int' 0
    |-DeclStmt 0x56173b681650 <line:801:3, col:18>
    | `-VarDecl 0x56173b6815e8 <col:3, col:13> col:13 used t1464 'pthread_t':'unsigned long'
    |-CallExpr 0x56173b6817f8 <line:802:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56173b6817e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56173b681668 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56173b663488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56173b6816a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56173b681688 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56173b6815e8 't1464' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56173b681838 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56173b681720 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56173b6816f8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56173b6816c0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56173b681850 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56173b681740 <col:39> 'void *(void *)' Function 0x56173b67dc30 'P1' 'void *(void *)'
    | `-ParenExpr 0x56173b6817c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56173b681798 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56173b681760 <col:52> 'int' 0
    |-DeclStmt 0x56173b6818e0 <line:803:3, col:18>
    | `-VarDecl 0x56173b681878 <col:3, col:13> col:13 used t1465 'pthread_t':'unsigned long'
    |-CallExpr 0x56173b681a88 <line:804:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56173b681a70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56173b6818f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56173b663488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56173b681938 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56173b681918 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56173b681878 't1465' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56173b681ac8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56173b6819b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56173b681988 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56173b681950 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56173b681ae0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56173b6819d0 <col:39> 'void *(void *)' Function 0x56173b67e2b0 'P2' 'void *(void *)'
    | `-ParenExpr 0x56173b681a50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56173b681a28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56173b6819f0 <col:52> 'int' 0
    |-DeclStmt 0x56173b681bb8 <line:805:3, col:18>
    | `-VarDecl 0x56173b681b50 <col:3, col:13> col:13 used t1466 'pthread_t':'unsigned long'
    |-CallExpr 0x56173b681d60 <line:806:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56173b681d48 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56173b681bd0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56173b663488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56173b681c10 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56173b681bf0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56173b681b50 't1466' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56173b681da0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56173b681c88 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56173b681c60 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56173b681c28 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56173b681db8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56173b681ca8 <col:39> 'void *(void *)' Function 0x56173b67f628 'P3' 'void *(void *)'
    | `-ParenExpr 0x56173b681d28 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56173b681d00 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56173b681cc8 <col:52> 'int' 0
    |-CallExpr 0x56173b681e08 <line:807:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56173b681df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56173b681dd0 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56173b681ed8 <line:808:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56173b681e28 <col:3> '_Bool' lvalue Var 0x56173b67c670 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56173b681ec0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56173b681ea0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56173b681e88 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56173b681e48 <col:21> 'int' lvalue Var 0x56173b67c278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56173b681e68 <col:41> 'int' 4
    |-CallExpr 0x56173b681f30 <line:809:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56173b681f18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56173b681ef8 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56173b681fa8 <line:810:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56173b681f90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56173b681f50 <col:3> 'void (int)' Function 0x56173b622790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56173b681fe8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56173b681fd0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56173b681f70 <col:21> '_Bool' lvalue Var 0x56173b67c670 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56173b682038 <line:811:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56173b682020 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56173b682000 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56173b682320 <line:812:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56173b682058 <col:3> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
    | `-ConditionalOperator 0x56173b6822f0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56173b682118 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56173b6820d0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56173b6820b8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56173b682078 <col:7> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56173b682100 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56173b6820e8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56173b682098 <col:25> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56173b6822d8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56173b682138 <col:42> 'int' lvalue Var 0x56173b67d1a8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x56173b6822b8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56173b682288 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56173b6821f8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56173b6821b0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56173b682198 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56173b682158 <col:55> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56173b6821e0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56173b6821c8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56173b682178 <col:73> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56173b682258 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56173b682218 <col:90> 'int' lvalue Var 0x56173b67d2a0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56173b682270 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56173b682238 <col:102> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
    |-BinaryOperator 0x56173b682528 <line:813:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56173b682340 <col:3> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56173b682510 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56173b6824e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56173b682400 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56173b6823b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56173b6823a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56173b682360 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56173b6823e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56173b6823d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56173b682380 <col:38> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56173b682498 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56173b682450 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56173b682420 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56173b6824c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56173b6824b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56173b682478 <col:66> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56173b682810 <line:814:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56173b682548 <col:3> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56173b6827f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56173b6827c8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56173b6826e8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56173b682608 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56173b6825c0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56173b6825a8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56173b682568 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56173b6825f0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56173b6825d8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56173b682588 <col:38> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56173b6826c8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56173b682680 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56173b682668 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56173b682628 <col:56> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56173b6826b0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56173b682698 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56173b682648 <col:74> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56173b682780 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56173b682738 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56173b682708 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56173b6827b0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56173b682798 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56173b682760 <col:102> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56173b682a18 <line:815:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56173b682830 <col:3> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56173b682a00 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56173b6829d0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56173b6828f0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56173b6828a8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56173b682890 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56173b682850 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56173b6828d8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56173b6828c0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56173b682870 <col:38> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56173b682988 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56173b682940 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56173b682910 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56173b6829b8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56173b6829a0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56173b682968 <col:66> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56173b682d28 <line:816:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56173b682a38 <col:3> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56173b682d10 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56173b682ce0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56173b682c00 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56173b682af8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56173b682ab0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56173b682a98 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56173b682a58 <col:20> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56173b682ae0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56173b682ac8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56173b682a78 <col:38> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56173b682be0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56173b682b98 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56173b682b80 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56173b682b18 <col:56> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56173b682bc8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56173b682bb0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56173b682b60 <col:74> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56173b682c98 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56173b682c50 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56173b682c20 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56173b682cc8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56173b682cb0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56173b682c78 <col:102> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56173b682d80 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56173b682d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56173b682d48 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56173b682dd8 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56173b682dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56173b682da0 <col:3> 'void ()' Function 0x56173b622e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56173b682e88 <line:819:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x56173b682df8 <col:3> '_Bool' lvalue Var 0x56173b67d390 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x56173b682e70 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x56173b682e50 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x56173b682e38 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56173b682e18 <col:19> 'void *(void)' Function 0x56173b622958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x56173b682f38 <line:820:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x56173b682ea8 <col:3> '_Bool' lvalue Var 0x56173b67d408 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x56173b682f20 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x56173b682f00 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x56173b682ee8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56173b682ec8 <col:19> 'void *(void)' Function 0x56173b622958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x56173b682fb0 <line:821:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x56173b682f58 <col:3> '_Bool' lvalue Var 0x56173b67cb00 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x56173b682f98 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x56173b682f78 <col:21> '_Bool' lvalue Var 0x56173b67d408 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x56173b683028 <line:822:3, col:15> 'int' '='
    | |-DeclRefExpr 0x56173b682fd0 <col:3> 'int' lvalue Var 0x56173b67cb80 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x56173b683010 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x56173b682ff0 <col:15> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
    |-BinaryOperator 0x56173b683460 <line:823:3, col:162> 'int' '='
    | |-DeclRefExpr 0x56173b683048 <col:3> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
    | `-ConditionalOperator 0x56173b683430 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x56173b683258 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x56173b683178 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x56173b6830a0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x56173b683088 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x56173b683068 <col:8> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x56173b683158 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x56173b6830f0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x56173b6830d8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x56173b6830b8 <col:27> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x56173b683140 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x56173b683128 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x56173b683108 <col:46> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x56173b683238 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x56173b6831d0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x56173b6831b8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x56173b683198 <col:65> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x56173b683220 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x56173b683208 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x56173b6831e8 <col:84> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56173b683418 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56173b683278 <col:101> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
    |   `-ParenExpr 0x56173b6833f8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x56173b6833c8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x56173b683338 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56173b6832f0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56173b6832d8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56173b683298 <col:106> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56173b683320 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56173b683308 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56173b6832b8 <col:124> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56173b683398 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56173b683358 <col:141> 'int' lvalue Var 0x56173b67d1a8 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x56173b6833b0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56173b683378 <col:153> 'int' lvalue Var 0x56173b67d2a0 'z$w_buff1' 'int'
    |-BinaryOperator 0x56173b683970 <line:824:3, col:208> 'int' '='
    | |-DeclRefExpr 0x56173b683480 <col:3> 'int' lvalue Var 0x56173b67d1a8 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x56173b683940 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x56173b683910 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56173b6838f8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56173b6834a0 <col:15> '_Bool' lvalue Var 0x56173b67d408 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x56173b683928 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56173b6834c0 <col:31> 'int' lvalue Var 0x56173b67d1a8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x56173b6838d8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x56173b6838a8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x56173b6836d0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x56173b6835f0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x56173b683518 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x56173b683500 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x56173b6834e0 <col:45> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x56173b6835d0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x56173b683568 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x56173b683550 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x56173b683530 <col:64> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x56173b6835b8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x56173b6835a0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x56173b683580 <col:83> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x56173b6836b0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x56173b683648 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x56173b683630 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x56173b683610 <col:102> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x56173b683698 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x56173b683680 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x56173b683660 <col:121> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56173b683890 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56173b6836f0 <col:138> 'int' lvalue Var 0x56173b67d1a8 'z$w_buff0' 'int'
    |       `-ParenExpr 0x56173b683870 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x56173b683840 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x56173b6837b0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x56173b683768 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x56173b683750 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x56173b683710 <col:151> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x56173b683798 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x56173b683780 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x56173b683730 <col:169> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x56173b683810 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56173b6837d0 <col:186> 'int' lvalue Var 0x56173b67d1a8 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x56173b683828 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x56173b6837f0 <col:198> 'int' lvalue Var 0x56173b67d1a8 'z$w_buff0' 'int'
    |-BinaryOperator 0x56173b683e98 <line:825:3, col:208> 'int' '='
    | |-DeclRefExpr 0x56173b683990 <col:3> 'int' lvalue Var 0x56173b67d2a0 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x56173b683e68 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x56173b683e38 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56173b683e20 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56173b6839b0 <col:15> '_Bool' lvalue Var 0x56173b67d408 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x56173b683e50 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56173b6839d0 <col:31> 'int' lvalue Var 0x56173b67d2a0 'z$w_buff1' 'int'
    |   `-ParenExpr 0x56173b683e00 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x56173b683dd0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x56173b683bf8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x56173b683b00 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x56173b683a28 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x56173b683a10 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x56173b6839f0 <col:45> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x56173b683ae0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x56173b683a78 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x56173b683a60 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x56173b683a40 <col:64> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x56173b683ac8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x56173b683ab0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x56173b683a90 <col:83> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x56173b683bd8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x56173b683b70 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x56173b683b40 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x56173b683b20 <col:102> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x56173b683bc0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x56173b683ba8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x56173b683b88 <col:121> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56173b683db8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56173b683c18 <col:138> 'int' lvalue Var 0x56173b67d2a0 'z$w_buff1' 'int'
    |       `-ParenExpr 0x56173b683d98 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x56173b683d68 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x56173b683cd8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x56173b683c90 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x56173b683c78 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x56173b683c38 <col:151> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x56173b683cc0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x56173b683ca8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x56173b683c58 <col:169> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x56173b683d38 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56173b683cf8 <col:186> 'int' lvalue Var 0x56173b67d2a0 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x56173b683d50 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x56173b683d18 <col:198> 'int' lvalue Var 0x56173b67d2a0 'z$w_buff1' 'int'
    |-BinaryOperator 0x56173b684440 <line:826:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x56173b683eb8 <col:3> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56173b684428 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56173b6843f8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x56173b6843b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56173b684398 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56173b683ed8 <col:20> '_Bool' lvalue Var 0x56173b67d408 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56173b6843e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56173b6843c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56173b683ef8 <col:36> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x56173b684378 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x56173b684348 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x56173b684108 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56173b684028 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56173b683f50 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56173b683f38 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56173b683f18 <col:55> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56173b684008 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56173b683fa0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56173b683f88 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56173b683f68 <col:74> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56173b683ff0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56173b683fd8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56173b683fb8 <col:93> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56173b6840e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56173b684080 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56173b684068 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56173b684048 <col:112> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56173b6840d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56173b6840b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56173b684098 <col:131> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56173b684330 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56173b684318 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56173b684128 <col:148> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x56173b6842f8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x56173b6842c8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x56173b6841e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56173b6841a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56173b684188 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56173b684148 <col:166> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56173b6841d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56173b6841b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56173b684168 <col:184> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56173b684280 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56173b684238 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56173b684208 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56173b6842b0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x56173b684298 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x56173b684260 <col:212> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56173b684a08 <line:827:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x56173b684460 <col:3> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56173b6849f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56173b6849c0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x56173b684978 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56173b684960 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56173b684480 <col:20> '_Bool' lvalue Var 0x56173b67d408 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56173b6849a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56173b684990 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56173b6844a0 <col:36> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x56173b684940 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x56173b684910 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x56173b6846b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56173b6845d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56173b6844f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56173b6844e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56173b6844c0 <col:55> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56173b6845b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56173b684548 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56173b684530 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56173b684510 <col:74> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56173b684598 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56173b684580 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56173b684560 <col:93> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56173b684690 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56173b684628 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56173b684610 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56173b6845f0 <col:112> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56173b684678 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56173b684660 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56173b684640 <col:131> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56173b6848f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56173b6848e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56173b6846d0 <col:148> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x56173b6848c0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x56173b684890 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x56173b684790 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56173b684748 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56173b684730 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56173b6846f0 <col:166> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56173b684778 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56173b684760 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56173b684710 <col:184> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56173b684860 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56173b6847e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56173b6847b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56173b684878 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x56173b684838 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x56173b684808 <col:219> 'int' 0
    |-BinaryOperator 0x56173b684fd0 <line:828:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x56173b684a28 <col:3> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56173b684fb8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56173b684f88 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x56173b684f40 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56173b684f28 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56173b684a48 <col:20> '_Bool' lvalue Var 0x56173b67d408 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56173b684f70 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56173b684f58 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56173b684a68 <col:36> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x56173b684f08 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x56173b684ed8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x56173b684c98 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56173b684bb8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56173b684ac0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56173b684aa8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56173b684a88 <col:55> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56173b684b98 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56173b684b10 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56173b684af8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56173b684ad8 <col:74> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56173b684b80 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56173b684b48 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56173b684b28 <col:93> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56173b684c78 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56173b684c10 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56173b684bf8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56173b684bd8 <col:112> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56173b684c60 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56173b684c48 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56173b684c28 <col:131> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56173b684ec0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56173b684ea8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56173b684cb8 <col:148> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x56173b684e88 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x56173b684e58 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x56173b684d78 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56173b684d30 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56173b684d18 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56173b684cd8 <col:166> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56173b684d60 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56173b684d48 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56173b684cf8 <col:184> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56173b684e10 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56173b684dc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56173b684d98 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56173b684e40 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x56173b684e28 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x56173b684df0 <col:212> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56173b685598 <line:829:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x56173b684ff0 <col:3> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56173b685580 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56173b685550 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x56173b685508 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56173b6854f0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56173b685010 <col:20> '_Bool' lvalue Var 0x56173b67d408 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56173b685538 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56173b685520 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56173b685030 <col:36> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x56173b6854d0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x56173b6854a0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x56173b685240 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56173b685160 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56173b685088 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56173b685070 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56173b685050 <col:55> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56173b685140 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56173b6850d8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56173b6850c0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56173b6850a0 <col:74> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56173b685128 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56173b685110 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56173b6850f0 <col:93> '_Bool' lvalue Var 0x56173b67d318 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56173b685220 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56173b6851b8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56173b6851a0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56173b685180 <col:112> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56173b685208 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56173b6851f0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56173b6851d0 <col:131> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56173b685488 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56173b685470 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56173b685260 <col:148> '_Bool' lvalue Var 0x56173b67ce50 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x56173b685450 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x56173b685420 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x56173b685320 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56173b6852d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56173b6852c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56173b685280 <col:166> '_Bool' lvalue Var 0x56173b67d220 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56173b685308 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56173b6852f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56173b6852a0 <col:184> '_Bool' lvalue Var 0x56173b67cbf8 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56173b6853f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56173b685370 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56173b685340 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56173b685408 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x56173b6853c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x56173b685398 <col:219> 'int' 0
    |-BinaryOperator 0x56173b685868 <line:830:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x56173b6855b8 <col:3> '_Bool' lvalue Var 0x56173b67c6e8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56173b685850 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56173b685838 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56173b685818 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x56173b6857f8 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x56173b685760 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x56173b6856c8 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x56173b685630 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x56173b685618 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x56173b6855d8 <col:23> 'int' lvalue Var 0x56173b67c7e8 'x' 'int'
    |         | | | `-IntegerLiteral 0x56173b6855f8 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x56173b6856a8 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56173b685690 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56173b685650 <col:33> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
    |         | |   `-IntegerLiteral 0x56173b685670 <col:38> 'int' 2
    |         | `-BinaryOperator 0x56173b685740 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56173b685728 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56173b6856e8 <col:43> 'int' lvalue Var 0x56173b67c398 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x56173b685708 <col:66> 'int' 0
    |         `-BinaryOperator 0x56173b6857d8 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x56173b6857c0 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56173b685780 <col:71> 'int' lvalue Var 0x56173b67c4b8 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x56173b6857a0 <col:94> 'int' 0
    |-BinaryOperator 0x56173b685998 <line:831:3, col:37> 'int' '='
    | |-DeclRefExpr 0x56173b685888 <col:3> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
    | `-ConditionalOperator 0x56173b685968 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x56173b685920 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56173b685908 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56173b6858a8 <col:7> '_Bool' lvalue Var 0x56173b67cb00 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x56173b685938 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56173b6858c8 <col:25> 'int' lvalue Var 0x56173b67cb80 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x56173b685950 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x56173b6858e8 <col:37> 'int' lvalue Var 0x56173b67ca28 'z' 'int'
    |-BinaryOperator 0x56173b685a30 <line:832:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x56173b6859b8 <col:3> '_Bool' lvalue Var 0x56173b67cb00 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x56173b685a08 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x56173b6859d8 <col:28> 'int' 0
    |-CallExpr 0x56173b685a88 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56173b685a70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56173b685a50 <col:3> 'void ()' Function 0x56173b622f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56173b685b00 <line:834:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56173b685ae8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56173b685aa8 <col:3> 'void (int)' Function 0x56173b622bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56173b685b40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56173b685b28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56173b685ac8 <col:21> '_Bool' lvalue Var 0x56173b67c6e8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56173b685b90 <line:835:3, col:10>
      `-IntegerLiteral 0x56173b685b58 <col:10> 'int' 0
