TranslationUnitDecl 0x5640602f5e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5640602f66d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5640602f63b0 '__int128'
|-TypedefDecl 0x5640602f6748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5640602f63d0 'unsigned __int128'
|-TypedefDecl 0x5640602f6a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5640602f6820 'struct __NSConstantString_tag'
|   `-Record 0x5640602f67a0 '__NSConstantString_tag'
|-TypedefDecl 0x5640602f6af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5640602f6ab0 'char *'
|   `-BuiltinType 0x5640602f5eb0 'char'
|-TypedefDecl 0x564060335650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5640602f6d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5640602f6bd0 'struct __va_list_tag'
|     `-Record 0x5640602f6b50 '__va_list_tag'
|-FunctionDecl 0x564060335790 <./split_1/mix026_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5640603356c0 <col:31> col:34 'int'
|-FunctionDecl 0x564060335958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564060335a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564060335bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564060335b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564060335df8 <col:40, col:99>
|   |-IfStmt 0x564060335dc8 <col:42, col:88>
|   | |-UnaryOperator 0x564060335ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564060335c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564060335c70 <col:47> 'int' lvalue ParmVar 0x564060335b38 'expression' 'int'
|   | `-CompoundStmt 0x564060335db0 <col:59, col:88>
|   |   `-LabelStmt 0x564060335d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564060335d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564060335d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564060335cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x564060335a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564060335de0 <col:89>
|   `-ReturnStmt 0x564060335de8 <col:91>
|-FunctionDecl 0x564060335e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564060335f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564060336280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564060335fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564060336038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5640603360b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564060336138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564060336340 <line:10:22>
|-FunctionDecl 0x56406035c390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5640603363b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564060336430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5640603364b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564060336530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56406035c450 <line:13:22>
|-FunctionDecl 0x56406035c700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56406035c4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56406035c540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56406035c5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56406035c7b8 <line:15:22>
|-TypedefDecl 0x56406035c828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5640602f5f70 'unsigned char'
|-TypedefDecl 0x56406035c898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5640602f5f90 'unsigned short'
|-TypedefDecl 0x56406035c908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5640602f5fb0 'unsigned int'
|-TypedefDecl 0x56406035c978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035c9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5640602f5ed0 'signed char'
|-TypedefDecl 0x56406035ca58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5640602f5f70 'unsigned char'
|-TypedefDecl 0x56406035cac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5640602f5ef0 'short'
|-TypedefDecl 0x56406035cb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5640602f5f90 'unsigned short'
|-TypedefDecl 0x56406035cba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5640602f5f10 'int'
|-TypedefDecl 0x56406035cc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5640602f5fb0 'unsigned int'
|-TypedefDecl 0x56406035cc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035ccf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035cd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035cdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035ce48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035ceb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5640602f5fb0 'unsigned int'
|-TypedefDecl 0x56406035cf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5640602f5fb0 'unsigned int'
|-TypedefDecl 0x56406035cf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035d008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035d078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5640602f5fb0 'unsigned int'
|-TypedefDecl 0x56406035d0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035d158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035d1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035d238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5640602f5f10 'int'
|-RecordDecl 0x56406035d290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56406035d408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56406035d4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56406035d460 'struct __fsid_t' sugar
|   `-RecordType 0x56406035d310 '__fsid_t'
|     `-Record 0x56406035d290 ''
|-TypedefDecl 0x56406035d548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035d5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035d628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035d698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5640602f5fb0 'unsigned int'
|-TypedefDecl 0x56406035d708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035d778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5640602f5fb0 'unsigned int'
|-TypedefDecl 0x56406035d7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035d858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5640602f5f10 'int'
|-TypedefDecl 0x56406035d8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5640602f5f10 'int'
|-TypedefDecl 0x56406035d938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5640602f5f10 'int'
|-TypedefDecl 0x56406035d9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5640602f6630 'void *'
|   `-BuiltinType 0x5640602f5e70 'void'
|-TypedefDecl 0x56406035da18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035da88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035daf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035db68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035dbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035dc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035dcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035dd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035dd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035de08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035de78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035df08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56406035ded0 '__off64_t' sugar
|   |-Typedef 0x56406035d1c8 '__off64_t'
|   `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035e000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56406035dfc0 '__quad_t *'
|   `-TypedefType 0x56406035df60 '__quad_t' sugar
|     |-Typedef 0x56406035cd68 '__quad_t'
|     `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035e070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5640602f6ab0 'char *'
|   `-BuiltinType 0x5640602f5eb0 'char'
|-TypedefDecl 0x56406035e0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x56406035e150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5640602f5fb0 'unsigned int'
|-FunctionDecl 0x56406035e298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56406035e1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56406035f5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56406035f5d8 <line:72:3, col:34>
|     `-CallExpr 0x56406035f598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56406035f580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56406035f510 <col:10> '<builtin fn type>' Function 0x56406035f380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56406035f5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56406035f530 <col:29> 'unsigned int' lvalue ParmVar 0x56406035e1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56406035f380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56406035f420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56406035f490 <col:10> Implicit
| `-ConstAttr 0x56406035f4e8 <col:10> Implicit
|-FunctionDecl 0x56406035f740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56406035f638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56406035fa58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56406035fa48 <line:77:3, col:34>
|     `-CallExpr 0x56406035fa08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56406035f9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56406035f978 <col:10> '<builtin fn type>' Function 0x56406035f7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56406035fa30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56406035f998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56406035f638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56406035f7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56406035f888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56406035f8f8 <col:10> Implicit
| `-ConstAttr 0x56406035f950 <col:10> Implicit
|-TypedefDecl 0x56406035fa88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-TypedefDecl 0x56406035fb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56406035fae0 '__time_t' sugar
|   |-Typedef 0x56406035d708 '__time_t'
|   `-BuiltinType 0x5640602f5f30 'long'
|-RecordDecl 0x56406035fb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56406035fc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56406035fcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56406035fd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56406035fd10 '__pid_t' sugar
|   |-Typedef 0x56406035d238 '__pid_t'
|   `-BuiltinType 0x5640602f5f10 'int'
|-RecordDecl 0x56406035fda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56406035fe60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56406035feb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56406035ff70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56406035ffd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-RecordDecl 0x564060360030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5640603602c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5640603613a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564060360310 'struct cpu_set_t' sugar
|   `-RecordType 0x5640603600b0 'cpu_set_t'
|     `-Record 0x564060360030 ''
|-FunctionDecl 0x564060361678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564060361448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564060361550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564060361728 <line:107:19>
|-FunctionDecl 0x564060361900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564060361790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5640603619a8 <col:69>
|-FunctionDecl 0x564060361b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564060361a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564060361bc8 <col:64>
|-FunctionDecl 0x564060361e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564060361c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564060361d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564060361f38 <line:113:22>
|-FunctionDecl 0x5640603621b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564060361fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564060362098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564060362268 <col:88>
|-FunctionDecl 0x564060362588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5640603622d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5640603623b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564060362440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564060362640 <col:62>
|-FunctionDecl 0x5640603627b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5640603626a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564060362860 <col:63>
|-FunctionDecl 0x564060362988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564060362a28 <col:47>
|-FunctionDecl 0x564060362b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564060362a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564060362bd8 <col:69>
|-FunctionDecl 0x564060362ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564060362c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564060362d88 <col:69>
|-FunctionDecl 0x564060363048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564060362df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564060362f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5640603630f8 <col:88>
|-TypedefDecl 0x564060363188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564060363150 '__clock_t' sugar
|   |-Typedef 0x56406035d548 '__clock_t'
|   `-BuiltinType 0x5640602f5f30 'long'
|-TypedefDecl 0x564060363218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5640603631e0 '__clockid_t' sugar
|   |-Typedef 0x56406035d938 '__clockid_t'
|   `-BuiltinType 0x5640602f5f10 'int'
|-TypedefDecl 0x5640603632a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564060363270 '__timer_t' sugar
|   |-Typedef 0x56406035d9a8 '__timer_t'
|   `-PointerType 0x5640602f6630 'void *'
|     `-BuiltinType 0x5640602f5e70 'void'
|-RecordDecl 0x564060363300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5640603633d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564060363440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5640603634a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564060363510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564060363578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5640603635e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564060363648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5640603636b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564060363718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564060363780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5640603637e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564060363838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564060363908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564060363978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564060363a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564060363bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564060363c90 <col:45>
|-FunctionDecl 0x564060363e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564060363d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564060363f18 <col:54>
|-FunctionDecl 0x564060364118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564060363f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564060363ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5640603641c8 <line:157:22>
| `-ConstAttr 0x564060364220 <col:63>
|-FunctionDecl 0x564060365050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564060364318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5640603650f8 <col:56>
|-FunctionDecl 0x5640603654a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564060365168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5640603651e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564060365260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564060365358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564060365560 <col:54>
|-RecordDecl 0x5640603655b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564060365668 parent 0x5640602f5e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5640603658c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564060365968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5640603659d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564060365a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564060365b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564060365c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564060365bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x564060365b80 'struct __locale_struct' sugar
|     `-RecordType 0x564060365640 'struct __locale_struct'
|       `-Record 0x5640603655b8 '__locale_struct'
|-TypedefDecl 0x564060365cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564060365cc0 '__locale_t' sugar
|   |-Typedef 0x564060365c48 '__locale_t'
|   `-PointerType 0x564060365bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x564060365b80 'struct __locale_struct' sugar
|       `-RecordType 0x564060365640 'struct __locale_struct'
|         `-Record 0x5640603655b8 '__locale_struct'
|-FunctionDecl 0x564060367110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564060365d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564060365de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564060365e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564060365ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564060365f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5640603671d8 <col:40>
|-FunctionDecl 0x5640603673c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5640603672a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564060367470 <col:66>
|-FunctionDecl 0x564060367580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5640603674d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564060367628 <col:69>
|-FunctionDecl 0x564060367858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564060367690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564060367720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564060367908 <col:52>
|-FunctionDecl 0x564060367ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564060367970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564060367a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564060367b60 <col:55>
|-FunctionDecl 0x564060367cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564060367be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564060367da0 <col:62>
|-FunctionDecl 0x564060367f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564060367e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564060367fc0 <col:60>
|-FunctionDecl 0x5640603682b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564060368118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564060368198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564060368368 <col:44>
|-FunctionDecl 0x564060368578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5640603683d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564060368450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564060368628 <col:49>
|-VarDecl 0x564060368728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5640603687a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564060368828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5640603688f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564060368a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564060368ac0 <col:42>
|-VarDecl 0x564060368b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564060368bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564060368d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564060368c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564060368de0 <col:57>
|-FunctionDecl 0x564060368ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564060368e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564060368f98 <col:56>
|-FunctionDecl 0x5640603690d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564060369018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564060369178 <col:59>
|-FunctionDecl 0x564060369280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5640603691e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564060369328 <col:48>
| `-ConstAttr 0x564060369380 <col:89>
|-FunctionDecl 0x5640603695e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564060369438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5640603694c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564060369848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5640603696d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564060369768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5640603698f8 <col:88>
|-FunctionDecl 0x564060369a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564060369960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5640603699f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564060369b40 <col:88>
|-FunctionDecl 0x564060369d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564060369ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564060369c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564060369e08 <line:208:22>
|-FunctionDecl 0x56406036a178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564060369e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564060369ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564060369f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56406036a010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56406036a478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56406036a278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56406036a350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56406036a528 <col:85>
|-FunctionDecl 0x56406036a918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56406036a590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56406036a6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56406036a7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56406036a9d0 <col:52>
|-FunctionDecl 0x56406036ab48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56406036aa38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56406036abf0 <col:61>
|-FunctionDecl 0x56406036b0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56406036ac58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56406036acd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56406036ae08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56406036aef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56406036b1b0 <col:62>
|-FunctionDecl 0x56406036b3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56406036b218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56406036b2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56406036b478 <line:221:22>
|-FunctionDecl 0x56406036b578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56406036b4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56406036b620 <col:65>
|-TypedefDecl 0x56406036b690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5640602f5fd0 'unsigned long'
|-RecordDecl 0x56406036b6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56406036b830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56406036b898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56406036b948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56406036b8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56406036b770 'union pthread_attr_t'
|     `-Record 0x56406036b6e8 'pthread_attr_t'
|-RecordDecl 0x56406036b9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56406036bb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56406036bb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56406036bc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56406036bbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56406036ba20 'struct __pthread_internal_list'
|     `-Record 0x56406036b9a0 '__pthread_internal_list'
|-RecordDecl 0x56406036bcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56406036bd58 parent 0x5640602f5e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56406036be30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56406036be98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56406036bf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56406036bf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56406036bfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56406036c038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564060370110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5640603701c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5640603702b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564060370318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5640603704a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564060370440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56406036bd30 'pthread_mutex_t'
|     `-Record 0x56406036bcb0 ''
|-RecordDecl 0x564060370510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564060370650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5640603706b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564060370770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564060370710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564060370590 'pthread_mutexattr_t'
|     `-Record 0x564060370510 ''
|-RecordDecl 0x5640603707e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564060370888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564060370950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5640603709b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564060370a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564060370a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564060370af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564060370b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564060370bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564060370c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564060370ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_1/mix026_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_1/mix026_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564060370dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564060370e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564060370f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564060370f10 'union pthread_cond_t' sugar
|   `-RecordType 0x564060370860 'pthread_cond_t'
|     `-Record 0x5640603707e0 ''
|-RecordDecl 0x564060370fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564060372130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564060372198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564060372250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5640603721f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x564060371060 'pthread_condattr_t'
|     `-Record 0x564060370fe0 ''
|-TypedefDecl 0x5640603722d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5640602f5fb0 'unsigned int'
|-TypedefDecl 0x564060372348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5640602f5f10 'int'
|-RecordDecl 0x5640603723a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564060372448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564060372510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564060372578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5640603725e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564060372648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5640603726b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564060372718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564060372780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5640603727e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564060372850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5640603728b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564060372920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5640603729d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_1/mix026_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_1/mix026_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564060372a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564060372ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564060372c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564060372bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564060372420 'pthread_rwlock_t'
|     `-Record 0x5640603723a0 ''
|-RecordDecl 0x564060372ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564060372de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564060372e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564060372f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564060372ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564060372d20 'pthread_rwlockattr_t'
|     `-Record 0x564060372ca0 ''
|-TypedefDecl 0x564060372f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5640602f5f14 'volatile int' volatile
|   `-BuiltinType 0x5640602f5f10 'int'
|-RecordDecl 0x564060372fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564060374140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5640603741a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564060374260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564060374200 'union pthread_barrier_t' sugar
|   `-RecordType 0x564060373060 'pthread_barrier_t'
|     `-Record 0x564060372fe0 ''
|-RecordDecl 0x5640603742d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5640603743d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564060374438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5640603744f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564060374490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564060374350 'pthread_barrierattr_t'
|     `-Record 0x5640603742d0 ''
|-TypedefDecl 0x564060374608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5640603745a0 'long [8]' 8 
|   `-BuiltinType 0x5640602f5f30 'long'
|-EnumDecl 0x564060374660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564060374728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564060374778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5640603747c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564060374898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5640603748e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564060374938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564060374988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564060374a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5640603749f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5640603749d8 <col:26> 'int' EnumConstant 0x564060374898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564060374a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564060374a80 <col:29> 'int'
| |   `-DeclRefExpr 0x564060374a60 <col:29> 'int' EnumConstant 0x5640603748e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564060374b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564060374b08 <col:30> 'int'
| |   `-DeclRefExpr 0x564060374ae8 <col:30> 'int' EnumConstant 0x564060374938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564060374ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564060374b90 <col:27> 'int'
|     `-DeclRefExpr 0x564060374b70 <col:27> 'int' EnumConstant 0x564060374a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564060374bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564060374cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564060374d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564060374d38 <col:30> 'int'
| |   `-DeclRefExpr 0x564060374d18 <col:30> 'int' EnumConstant 0x564060374cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564060374da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564060374e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564060374e10 <col:29> 'int'
|     `-DeclRefExpr 0x564060374df0 <col:29> 'int' EnumConstant 0x564060374da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564060374e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564060374f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564060374f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564060374fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564060375038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564060375150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5640603751a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5640603751f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564060375278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564060375260 <col:31> 'int'
|     `-DeclRefExpr 0x564060375240 <col:31> 'int' EnumConstant 0x564060375150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5640603752c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564060375398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5640603753e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564060375438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564060375508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564060375558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5640603755a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564060375678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5640603756c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564060375718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564060375958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5640603759c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564060375a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564060375b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564060375b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564060375c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564060375cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564060375d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564060375dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564060375e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564060376488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564060375f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564060376030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564060376270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5640603762f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564060376548 <col:47>
| |-NonNullAttr 0x5640603765a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5640603765d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564060376700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564060376630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564060376958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5640603767b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564060376838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564060376b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564060376a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564060376bd0 <col:60>
|-FunctionDecl 0x564060376d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564060376dc0 <col:54>
| `-ConstAttr 0x564060376e18 <col:95>
|-FunctionDecl 0x564060376fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564060376e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564060376ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564060377098 <line:394:19>
| `-ConstAttr 0x5640603770f0 <col:60>
|-FunctionDecl 0x564060378b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5640603789d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564060378bb0 <col:71>
| `-NonNullAttr 0x564060378c08 <col:112, col:126> 1
|-FunctionDecl 0x564060378d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564060378c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564060378db8 <line:397:22>
| `-NonNullAttr 0x564060378e10 <col:63, col:77> 1
|-FunctionDecl 0x564060379038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564060378e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564060378ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5640603790e8 <line:400:22>
| `-NonNullAttr 0x564060379140 <col:63, col:80> 1 2
|-FunctionDecl 0x564060379348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564060379188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564060379208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5640603793f8 <line:403:22>
| `-NonNullAttr 0x564060379450 <col:63, col:77> 1
|-FunctionDecl 0x5640603796a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564060379498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564060379540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564060379758 <line:406:22>
| `-NonNullAttr 0x5640603797b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56406037a9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5640603797f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564060379870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56406037aa98 <line:409:22>
| `-NonNullAttr 0x56406037aaf0 <col:63, col:77> 1
|-FunctionDecl 0x56406037ad28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56406037ab38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56406037abc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56406037add8 <line:412:22>
| `-NonNullAttr 0x56406037ae30 <col:63, col:80> 1 2
|-FunctionDecl 0x56406037b068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56406037ae78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56406037af08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56406037b118 <col:37>
| `-NonNullAttr 0x56406037b170 <col:78, col:95> 1 2
|-FunctionDecl 0x56406037b358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56406037b1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56406037b238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56406037b408 <line:418:22>
| `-NonNullAttr 0x56406037b460 <col:63, col:80> 1 2
|-FunctionDecl 0x56406037b5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56406037b4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56406037b528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56406037b698 <line:420:22>
| `-NonNullAttr 0x56406037b6f0 <col:63, col:77> 1
|-FunctionDecl 0x56406037b898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56406037b738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56406037b7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56406037b948 <line:423:22>
| `-NonNullAttr 0x56406037b9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56406037bb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56406037ba08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56406037ba88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56406037bbf8 <line:426:22>
| `-NonNullAttr 0x56406037bc50 <col:63, col:77> 1
|-FunctionDecl 0x56406037bdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56406037bc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56406037bd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56406037bea8 <line:429:22>
| `-NonNullAttr 0x56406037bf00 <col:63, col:80> 1 2
|-FunctionDecl 0x56406037c088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56406037bf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56406037bfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56406037c138 <line:431:22>
| `-NonNullAttr 0x56406037c190 <col:63, col:77> 1
|-FunctionDecl 0x56406037c3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56406037c1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56406037c258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56406037c468 <line:434:22>
| |-NonNullAttr 0x56406037c4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56406037c4f8 <col:100> "" ""
|-FunctionDecl 0x56406037c708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56406037c548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56406037c5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56406037c7b8 <line:437:22>
| |-NonNullAttr 0x56406037c810 <col:63, col:77> 1
| `-DeprecatedAttr 0x56406037c848 <col:97> "" ""
|-FunctionDecl 0x56406037ca48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56406037c898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56406037c910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56406037caf8 <line:440:22>
| `-NonNullAttr 0x56406037cb50 <col:63, col:80> 1 2
|-FunctionDecl 0x56406037ccd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56406037cb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56406037cc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56406037cd80 <line:443:22>
| `-NonNullAttr 0x56406037cdd8 <col:63, col:77> 1
|-FunctionDecl 0x56406037d0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56406037ce28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56406037cea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56406037cf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56406037d180 <line:447:22>
| `-NonNullAttr 0x56406037d1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56406037d488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56406037d230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56406037d2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56406037d328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56406037d540 <col:43>
| `-NonNullAttr 0x56406037d598 <col:84, col:98> 1
|-FunctionDecl 0x56406037d858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56406037d5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56406037d668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56406037d6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56406037d910 <line:452:22>
| `-NonNullAttr 0x56406037d968 <col:63, col:77> 3
|-FunctionDecl 0x56406037dc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56406037d9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56406037da60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56406037daf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56406037dd30 <line:456:22>
| `-NonNullAttr 0x56406037dd88 <col:63, col:80> 2 3
|-FunctionDecl 0x56406037df78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56406037ddd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56406037de58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56406037e028 <line:458:22>
|-FunctionDecl 0x56406037e3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56406037e0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56406037e290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56406037e4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56406037e650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56406037e530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56406037e5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56406037e838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56406037e718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56406037e798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56406037e9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56406037e8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56406037eb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56406037ebd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56406037ec78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56406037ed68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56406037edd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56406037efa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_1/mix026_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56406037f098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56406037f150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56406037f0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56406037ec50 '__pthread_unwind_buf_t'
| |   `-Record 0x56406037ebd0 ''
| `-AlignedAttr 0x56406037f1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56406037f220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56406037f380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56406037f3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56406037f450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56406037f4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56406037f6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56406037f5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56406037f808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56406037f778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56406037fa00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56406037f8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56406037faa8 <line:487:22>
|-RecordDecl 0x56406037fb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56406037fe18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56406037fc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56406037fcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56406037fec8 <col:86>
| `-ReturnsTwiceAttr 0x56406037ff20 <col:12> Implicit
|-FunctionDecl 0x564060380248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56406037fff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564060380100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5640603802f8 <line:493:22>
| `-NonNullAttr 0x564060380350 <col:63, col:77> 1
|-FunctionDecl 0x5640603804c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564060380398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564060380570 <line:495:22>
| `-NonNullAttr 0x5640603805c8 <col:63, col:77> 1
|-FunctionDecl 0x5640603806d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564060380618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564060380778 <line:497:22>
| `-NonNullAttr 0x5640603807d0 <col:52, col:66> 1
|-FunctionDecl 0x5640603808d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564060380818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564060380978 <line:499:22>
| `-NonNullAttr 0x5640603809d0 <col:52, col:66> 1
|-FunctionDecl 0x564060381c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564060381a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564060381ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564060381cd8 <col:36>
| `-NonNullAttr 0x564060381d30 <col:66, col:83> 1 2
|-FunctionDecl 0x564060381e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564060381d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564060381ed8 <line:504:22>
| `-NonNullAttr 0x564060381f30 <col:52, col:66> 1
|-FunctionDecl 0x5640603821c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564060381fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564060382060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564060382278 <line:508:22>
| `-NonNullAttr 0x5640603822d0 <col:63, col:80> 1 2
|-FunctionDecl 0x564060382598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564060382318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564060382398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564060382418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564060382650 <line:512:22>
| `-NonNullAttr 0x5640603826a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5640603827b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5640603826f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564060382858 <line:514:22>
| `-NonNullAttr 0x5640603828b0 <col:63, col:77> 1
|-FunctionDecl 0x564060382ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564060382960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564060382b80 <line:516:22>
| `-NonNullAttr 0x564060382bd8 <col:63, col:77> 1
|-FunctionDecl 0x564060382ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564060382c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564060382d88 <line:518:22>
| `-NonNullAttr 0x564060382de0 <col:63, col:77> 1
|-FunctionDecl 0x564060383008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564060382e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564060382ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5640603830b8 <line:522:22>
| `-NonNullAttr 0x564060383110 <col:63, col:80> 1 2
|-FunctionDecl 0x564060383318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564060383158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640603831d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5640603833c8 <line:525:22>
| `-NonNullAttr 0x564060383420 <col:63, col:77> 1
|-FunctionDecl 0x5640603835c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564060383468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5640603834e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564060383678 <line:528:22>
| `-NonNullAttr 0x5640603836d0 <col:63, col:80> 1 2
|-FunctionDecl 0x564060383858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564060383718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564060383798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564060383908 <line:530:22>
| `-NonNullAttr 0x564060383960 <col:63, col:77> 1
|-FunctionDecl 0x564060383b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640603839a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564060383a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564060383bd0 <line:534:22>
| `-NonNullAttr 0x564060383c28 <col:63, col:80> 1 2
|-FunctionDecl 0x564060383db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564060383c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564060383cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564060383e68 <line:537:22>
| `-NonNullAttr 0x564060383ec0 <col:63, col:77> 1
|-FunctionDecl 0x564060384068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564060383f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564060383f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564060384118 <line:541:22>
| `-NonNullAttr 0x564060384170 <col:63, col:80> 1 2
|-FunctionDecl 0x5640603842f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5640603841b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564060384238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5640603843a8 <line:544:22>
| `-NonNullAttr 0x564060384400 <col:63, col:77> 1
|-FunctionDecl 0x5640603845e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564060384448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640603844c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564060384698 <line:547:22>
| `-NonNullAttr 0x5640603846f0 <col:63, col:80> 1 2
|-FunctionDecl 0x564060384878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564060384738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640603847b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564060384928 <line:550:22>
| `-NonNullAttr 0x564060384980 <col:63, col:77> 1
|-FunctionDecl 0x564060385cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564060385aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564060385bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564060385da8 <col:29>
| `-NonNullAttr 0x564060385e00 <col:70, col:84> 1
|-FunctionDecl 0x564060385f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564060385e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564060386020 <line:555:22>
| `-NonNullAttr 0x564060386078 <col:63, col:77> 1
|-FunctionDecl 0x564060386180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640603860c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564060386228 <line:557:22>
| `-NonNullAttr 0x564060386280 <col:52, col:66> 1
|-FunctionDecl 0x564060386380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640603862c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564060386428 <line:559:19>
| `-NonNullAttr 0x564060386480 <col:49, col:63> 1
|-FunctionDecl 0x5640603866b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5640603864c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564060386558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564060386768 <col:39>
| `-NonNullAttr 0x5640603867c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5640603868c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564060386808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564060386968 <line:564:22>
| `-NonNullAttr 0x5640603869c0 <col:52, col:66> 1
|-FunctionDecl 0x564060386b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564060386a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564060386bd0 <line:566:22>
| `-NonNullAttr 0x564060386c28 <col:52, col:66> 1
|-FunctionDecl 0x564060386de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564060386c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564060386d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564060386e98 <col:39>
| `-NonNullAttr 0x564060386ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x564060386ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564060386f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564060387098 <line:571:22>
| `-NonNullAttr 0x5640603870f0 <col:52, col:66> 1
|-FunctionDecl 0x5640603872d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5640603871a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564060387380 <line:573:22>
| `-NonNullAttr 0x5640603873d8 <col:63, col:77> 1
|-FunctionDecl 0x5640603874e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564060387428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564060387588 <line:575:22>
| `-NonNullAttr 0x5640603875e0 <col:63, col:77> 1
|-FunctionDecl 0x564060387808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564060387628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5640603876a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5640603878b8 <line:579:22>
| `-NonNullAttr 0x564060387910 <col:63, col:80> 1 2
|-FunctionDecl 0x564060387b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564060387958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5640603879d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564060387be8 <line:582:22>
| `-NonNullAttr 0x564060387c40 <col:63, col:77> 1
|-FunctionDecl 0x564060387de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564060387c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564060387d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564060387e98 <line:586:22>
| `-NonNullAttr 0x564060387ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x564060388078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564060387f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564060387fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564060388128 <col:36>
| `-NonNullAttr 0x564060388180 <col:77, col:91> 1
|-FunctionDecl 0x5640603884b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564060388260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564060388370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564060388568 <line:591:22>
| `-NonNullAttr 0x5640603885c0 <col:63, col:77> 1
|-FunctionDecl 0x564060388738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564060388608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5640603887e0 <line:593:22>
| `-NonNullAttr 0x564060388838 <col:63, col:77> 1
|-FunctionDecl 0x564060388940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564060388888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5640603889e8 <line:595:22>
| `-NonNullAttr 0x564060388a40 <col:52, col:66> 1
|-FunctionDecl 0x564060388b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564060388aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564060388c00 <line:597:22>
| `-NonNullAttr 0x564060388c58 <col:52, col:66> 1
|-FunctionDecl 0x564060388e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564060388ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564060388d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564060388f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564060389268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564060388fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564060389030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5640603890c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564060389320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564060389538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564060389400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5640603895e0 <line:606:22>
| `-NonNullAttr 0x564060389638 <col:63, col:77> 1
|-FunctionDecl 0x564060389740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564060389688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5640603897e8 <line:608:22>
| `-NonNullAttr 0x564060389840 <col:63, col:77> 1
|-FunctionDecl 0x564060389aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564060389888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564060389908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564060389b50 <line:612:22>
| `-NonNullAttr 0x564060389ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x564060389db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564060389bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564060389c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564060389e68 <col:37>
| `-NonNullAttr 0x564060389ec0 <col:78, col:92> 1
|-FunctionDecl 0x56406038a0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564060389f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564060389fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56406038a188 <line:618:22>
| `-NonNullAttr 0x56406038a1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56406038a3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56406038a228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56406038a2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56406038a458 <line:621:22>
| `-NonNullAttr 0x56406038a4b0 <col:63, col:77> 1
|-FunctionDecl 0x56406038a758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56406038a590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56406038a610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56406038a808 <line:623:22>
| `-NonNullAttr 0x56406038a860 <col:63, col:77> 1
|-FunctionDecl 0x56406038a9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56406038a8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56406038aab0 <line:625:22>
| `-NonNullAttr 0x56406038ab08 <col:63, col:77> 1
|-FunctionDecl 0x56406038ac10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56406038ab58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56406038acb8 <line:627:22>
| `-NonNullAttr 0x56406038ad10 <col:52, col:66> 1
|-FunctionDecl 0x56406038ae10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56406038ad58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56406038aeb8 <line:629:22>
| `-NonNullAttr 0x56406038af10 <col:52, col:66> 1
|-FunctionDecl 0x56406038b010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56406038af58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56406038b0b8 <line:631:22>
| `-NonNullAttr 0x56406038b110 <col:52, col:66> 1
|-FunctionDecl 0x56406038b4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56406038b1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56406038b300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56406038b380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56406038b5a0 <line:635:22>
| `-NonNullAttr 0x56406038b5f8 <col:63, col:77> 1
|-FunctionDecl 0x56406038b778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56406038b648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56406038b820 <line:637:22>
| `-NonNullAttr 0x56406038b878 <col:63, col:77> 1
|-FunctionDecl 0x56406038b980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56406038b8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56406038ba28 <line:639:22>
| `-NonNullAttr 0x56406038ba80 <col:52, col:66> 1
|-FunctionDecl 0x56406038cc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56406038cb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56406038cd30 <line:641:22>
| `-NonNullAttr 0x56406038cd88 <col:63, col:77> 1
|-FunctionDecl 0x56406038ce90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56406038cdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56406038cf38 <line:643:22>
| `-NonNullAttr 0x56406038cf90 <col:63, col:77> 1
|-FunctionDecl 0x56406038d1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56406038cfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56406038d058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56406038d268 <line:647:22>
| `-NonNullAttr 0x56406038d2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56406038d4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56406038d308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56406038d388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56406038d578 <line:650:22>
| `-NonNullAttr 0x56406038d5d0 <col:63, col:77> 1
|-FunctionDecl 0x56406038d918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56406038d6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56406038d7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56406038d9c8 <line:653:22>
| `-NonNullAttr 0x56406038da20 <col:63, col:77> 1
|-FunctionDecl 0x56406038db88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56406038da68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56406038dc30 <col:69>
|-FunctionDecl 0x56406038dda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56406038dc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56406038de50 <col:72>
|-FunctionDecl 0x56406038e088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56406038deb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56406038df68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56406038e138 <col:44>
|-FunctionDecl 0x56406038e358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56406038e1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56406038e218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56406038e408 <line:660:22>
| `-NonNullAttr 0x56406038e460 <col:63, col:77> 2
|-FunctionDecl 0x56406038e8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56406038e540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56406038e650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56406038e760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56406038e960 <col:47>
|-FunctionDecl 0x56406038eaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56406038e9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56406038ec48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56406038ebb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56406038eda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56406038ed08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56406038eef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56406038ee60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56406038efc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56406038f080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56406038f140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56406038f1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56406038f278 prev 0x56406038f1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56406038f2e0 <col:24> 'int' 0
|-VarDecl 0x56406038f318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56406038f398 prev 0x56406038f318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56406038f400 <col:27> 'int' 0
|-VarDecl 0x56406038f438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56406038f4b8 prev 0x56406038f438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56406038f520 <col:27> 'int' 0
|-VarDecl 0x56406038f558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56406038f5d8 prev 0x56406038f558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56406038f640 <col:27> 'int' 0
|-VarDecl 0x56406038f678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x56406038f6f8 prev 0x56406038f678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x56406038f760 <col:27> 'int' 0
|-VarDecl 0x56406038f798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x56406038f818 prev 0x56406038f798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56406038f880 <col:9> 'int' 0
|-VarDecl 0x56406038f8b0 <line:684:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56406038f928 <line:685:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56406038f9a8 <line:686:1, col:5> col:5 used x 'int'
|-VarDecl 0x56406038fa28 prev 0x56406038f9a8 <line:687:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56406038fa90 <col:9> 'int' 0
|-VarDecl 0x56406038fb00 <line:688:1, col:5> col:5 used y 'int'
|-VarDecl 0x56406038fb80 prev 0x56406038fb00 <line:689:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56406038fbe8 <col:9> 'int' 0
|-VarDecl 0x56406038fc18 <line:690:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x56406038fc98 <line:691:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x56406038fd10 <line:692:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x56406038fd88 <line:693:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x56406038fe00 <line:694:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x56406038fe78 <line:695:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x56406038fef0 <line:696:1, col:7> col:7 used y$r_buff0_thd4 '_Bool'
|-VarDecl 0x56406038ff68 <line:697:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x56406038ffe0 <line:698:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x564060390058 <line:699:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5640603900d0 <line:700:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x564060390148 <line:701:1, col:7> col:7 used y$r_buff1_thd4 '_Bool'
|-VarDecl 0x5640603901c0 <line:702:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x564060390240 <line:703:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5640603902c0 <line:704:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x564060390338 <line:705:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5640603903b8 <line:706:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x564060390430 <line:707:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5640603904b0 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x564060390530 prev 0x5640603904b0 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564060390598 <col:9> 'int' 0
|-VarDecl 0x5640603905c8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564060390640 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564060390758 prev 0x56406038eaf0 <line:712:1, line:726:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5640603906c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564060390d38 <line:713:1, line:726:1>
|   |-CallExpr 0x564060390868 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060390850 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060390800 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640603908c8 <line:715:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564060390888 <col:3> 'int' lvalue Var 0x56406038f818 'a' 'int'
|   | `-IntegerLiteral 0x5640603908a8 <col:7> 'int' 1
|   |-CallExpr 0x564060390920 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060390908 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640603908e8 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564060390978 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060390960 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060390940 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640603909f0 <line:718:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564060390998 <col:3> 'int' lvalue Var 0x56406038f398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5640603909d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640603909b8 <col:25> 'int' lvalue Var 0x56406038fa28 'x' 'int'
|   |-CallExpr 0x564060390a48 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060390a30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060390a10 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564060390aa0 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060390a88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060390a68 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x564060390b10 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060390ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060390ac0 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564060390b68 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060390b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060390b30 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564060390c20 <line:723:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564060390b88 <col:3> 'int' lvalue Var 0x56406038f278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564060390c00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564060390be8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564060390ba8 <col:22> 'int' lvalue Var 0x56406038f278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564060390bc8 <col:41> 'int' 1
|   |-CallExpr 0x564060390c78 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060390c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060390c40 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564060390d28 <line:725:3, col:36>
|     `-CallExpr 0x564060390d08 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564060390cf0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564060390c98 <col:10> 'void *(void)' Function 0x564060335958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564060390e58 prev 0x56406038ec48 <line:727:1, line:754:1> line:727:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564060390dc0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564060393d68 <line:728:1, line:754:1>
|   |-CallExpr 0x564060390f38 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060390f20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060390f00 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564060390f98 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564060390f58 <col:3> 'int' lvalue Var 0x56406038fa28 'x' 'int'
|   | `-IntegerLiteral 0x564060390f78 <col:7> 'int' 1
|   |-CallExpr 0x564060390ff0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060390fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060390fb8 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564060391048 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060391030 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060391010 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640603910f8 <line:733:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564060391068 <col:3> '_Bool' lvalue Var 0x5640603905c8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5640603910e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5640603910c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5640603910a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564060391088 <col:19> 'void *(void)' Function 0x564060335958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5640603911a8 <line:734:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564060391118 <col:3> '_Bool' lvalue Var 0x564060390640 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564060391190 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564060391170 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564060391158 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564060391138 <col:19> 'void *(void)' Function 0x564060335958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564060391220 <line:735:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5640603911c8 <col:3> '_Bool' lvalue Var 0x56406038fc18 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564060391208 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640603911e8 <col:21> '_Bool' lvalue Var 0x564060390640 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564060391298 <line:736:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564060391240 <col:3> 'int' lvalue Var 0x56406038fc98 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564060391280 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564060391260 <col:15> 'int' lvalue Var 0x56406038fb80 'y' 'int'
|   |-BinaryOperator 0x5640603916d0 <line:737:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5640603912b8 <col:3> 'int' lvalue Var 0x56406038fb80 'y' 'int'
|   | `-ConditionalOperator 0x5640603916a0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5640603914c8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5640603913e8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564060391310 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5640603912f8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5640603912d8 <col:8> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5640603913c8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564060391360 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564060391348 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564060391328 <col:27> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5640603913b0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564060391398 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564060391378 <col:46> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5640603914a8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564060391440 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564060391428 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564060391408 <col:65> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x564060391490 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564060391478 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564060391458 <col:84> '_Bool' lvalue Var 0x564060390058 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564060391688 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640603914e8 <col:101> 'int' lvalue Var 0x56406038fb80 'y' 'int'
|   |   `-ParenExpr 0x564060391668 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564060391638 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5640603915a8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564060391560 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564060391548 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564060391508 <col:106> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564060391590 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564060391578 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564060391528 <col:124> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564060391608 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640603915c8 <col:141> 'int' lvalue Var 0x5640603902c0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564060391620 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640603915e8 <col:153> 'int' lvalue Var 0x5640603903b8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x564060391c00 <line:738:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5640603916f0 <col:3> 'int' lvalue Var 0x5640603902c0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x564060391bd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564060391ba0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564060391b88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564060391710 <col:15> '_Bool' lvalue Var 0x564060390640 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564060391bb8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564060391730 <col:31> 'int' lvalue Var 0x5640603902c0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564060391b68 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564060391b38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564060391940 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564060391860 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564060391788 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564060391770 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564060391750 <col:45> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564060391840 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5640603917d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5640603917c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5640603917a0 <col:64> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564060391828 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564060391810 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5640603917f0 <col:83> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564060391920 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5640603918b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5640603918a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564060391880 <col:102> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564060391908 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5640603918f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5640603918d0 <col:121> '_Bool' lvalue Var 0x564060390058 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564060391b20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564060391960 <col:138> 'int' lvalue Var 0x5640603902c0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x564060391ae0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564060391ab0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564060391a20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5640603919d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5640603919c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564060391980 <col:151> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564060391a08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5640603919f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5640603919a0 <col:169> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564060391a80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564060391a40 <col:186> 'int' lvalue Var 0x5640603902c0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564060391a98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564060391a60 <col:198> 'int' lvalue Var 0x5640603902c0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x564060392110 <line:739:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564060391c20 <col:3> 'int' lvalue Var 0x5640603903b8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5640603920e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5640603920b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564060392098 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564060391c40 <col:15> '_Bool' lvalue Var 0x564060390640 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5640603920c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564060391c60 <col:31> 'int' lvalue Var 0x5640603903b8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x564060392078 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564060392048 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564060391e70 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564060391d90 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564060391cb8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564060391ca0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564060391c80 <col:45> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564060391d70 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564060391d08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564060391cf0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564060391cd0 <col:64> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564060391d58 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564060391d40 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564060391d20 <col:83> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564060391e50 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564060391de8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564060391dd0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564060391db0 <col:102> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564060391e38 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564060391e20 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564060391e00 <col:121> '_Bool' lvalue Var 0x564060390058 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564060392030 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564060391e90 <col:138> 'int' lvalue Var 0x5640603903b8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x564060392010 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564060391fe0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564060391f50 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564060391f08 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564060391ef0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564060391eb0 <col:151> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564060391f38 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564060391f20 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564060391ed0 <col:169> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564060391fb0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564060391f70 <col:186> 'int' lvalue Var 0x5640603903b8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564060391fc8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564060391f90 <col:198> 'int' lvalue Var 0x5640603903b8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5640603926b8 <line:740:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564060392130 <col:3> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640603926a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564060392670 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564060392628 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564060392610 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564060392150 <col:20> '_Bool' lvalue Var 0x564060390640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564060392658 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564060392640 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564060392170 <col:36> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5640603925f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5640603925c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564060392380 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5640603922a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5640603921c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5640603921b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564060392190 <col:55> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564060392280 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564060392218 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564060392200 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5640603921e0 <col:74> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564060392268 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564060392250 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564060392230 <col:93> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564060392360 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5640603922f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5640603922e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5640603922c0 <col:112> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564060392348 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564060392330 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564060392310 <col:131> '_Bool' lvalue Var 0x564060390058 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5640603925a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564060392590 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5640603923a0 <col:148> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564060392570 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564060392540 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564060392460 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564060392418 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564060392400 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5640603923c0 <col:166> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564060392448 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564060392430 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5640603923e0 <col:184> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5640603924f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5640603924b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564060392480 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564060392528 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564060392510 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5640603924d8 <col:212> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564060392ca8 <line:741:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5640603926d8 <col:3> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564060392c90 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564060392c60 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564060392c18 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564060392c00 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640603926f8 <col:20> '_Bool' lvalue Var 0x564060390640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564060392c48 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564060392c30 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564060392718 <col:36> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564060392be0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564060392bb0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564060392928 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564060392848 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564060392770 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564060392758 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564060392738 <col:55> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564060392828 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5640603927c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5640603927a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564060392788 <col:74> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564060392810 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5640603927f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5640603927d8 <col:93> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564060392908 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5640603928a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564060392888 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564060392868 <col:112> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5640603928f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5640603928d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5640603928b8 <col:131> '_Bool' lvalue Var 0x564060390058 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564060392b98 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564060392b80 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564060392948 <col:148> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564060392b60 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564060392b30 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564060392a08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5640603929c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5640603929a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564060392968 <col:166> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5640603929f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5640603929d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564060392988 <col:184> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564060392ad8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564060392a58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564060392a28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564060392af0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564060392ab0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564060392a80 <col:219> 'int' 0
|   |-BinaryOperator 0x564060393250 <line:742:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564060392cc8 <col:3> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564060393238 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564060393208 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5640603931c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640603931a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564060392ce8 <col:20> '_Bool' lvalue Var 0x564060390640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640603931f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640603931d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564060392d08 <col:36> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x564060393188 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564060393158 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564060392f18 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564060392e38 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564060392d60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564060392d48 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564060392d28 <col:55> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564060392e18 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564060392db0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564060392d98 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564060392d78 <col:74> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564060392e00 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564060392de8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564060392dc8 <col:93> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564060392ef8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564060392e90 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564060392e78 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564060392e58 <col:112> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564060392ee0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564060392ec8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564060392ea8 <col:131> '_Bool' lvalue Var 0x564060390058 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564060393140 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564060393128 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564060392f38 <col:148> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x564060393108 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5640603930d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564060392ff8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564060392fb0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564060392f98 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564060392f58 <col:166> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564060392fe0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564060392fc8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564060392f78 <col:184> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564060393090 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564060393048 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564060393018 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5640603930c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5640603930a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564060393070 <col:212> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564060393818 <line:743:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564060393270 <col:3> '_Bool' lvalue Var 0x564060390058 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564060393800 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640603937d0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564060393788 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564060393770 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564060393290 <col:20> '_Bool' lvalue Var 0x564060390640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640603937b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640603937a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640603932b0 <col:36> '_Bool' lvalue Var 0x564060390058 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x564060393750 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564060393720 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5640603934c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5640603933e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564060393308 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5640603932f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5640603932d0 <col:55> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5640603933c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564060393358 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564060393340 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564060393320 <col:74> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5640603933a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564060393390 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564060393370 <col:93> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5640603934a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564060393438 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564060393420 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564060393400 <col:112> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564060393488 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564060393470 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564060393450 <col:131> '_Bool' lvalue Var 0x564060390058 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564060393708 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5640603936f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5640603934e0 <col:148> '_Bool' lvalue Var 0x564060390058 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5640603936d0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5640603936a0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5640603935a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564060393558 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564060393540 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564060393500 <col:166> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564060393588 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564060393570 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564060393520 <col:184> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564060393670 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5640603935f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5640603935c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564060393688 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564060393648 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564060393618 <col:219> 'int' 0
|   |-BinaryOperator 0x564060393890 <line:744:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564060393838 <col:3> 'int' lvalue Var 0x56406038f4b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x564060393878 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564060393858 <col:25> 'int' lvalue Var 0x56406038fb80 'y' 'int'
|   |-BinaryOperator 0x5640603939c0 <line:745:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5640603938b0 <col:3> 'int' lvalue Var 0x56406038fb80 'y' 'int'
|   | `-ConditionalOperator 0x564060393990 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564060393948 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564060393930 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5640603938d0 <col:7> '_Bool' lvalue Var 0x56406038fc18 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564060393960 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640603938f0 <col:25> 'int' lvalue Var 0x56406038fc98 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564060393978 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564060393910 <col:37> 'int' lvalue Var 0x56406038fb80 'y' 'int'
|   |-BinaryOperator 0x564060393a58 <line:746:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5640603939e0 <col:3> '_Bool' lvalue Var 0x56406038fc18 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564060393a30 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564060393a00 <col:28> 'int' 0
|   |-CallExpr 0x564060393ab0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060393a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060393a78 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564060393b08 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060393af0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060393ad0 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x564060393b78 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060393b60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060393b40 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564060393bd0 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060393bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060393b98 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564060393c88 <line:751:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564060393bf0 <col:3> 'int' lvalue Var 0x56406038f278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564060393c68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564060393c50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564060393c10 <col:22> 'int' lvalue Var 0x56406038f278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564060393c30 <col:41> 'int' 1
|   |-CallExpr 0x564060393ce0 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060393cc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060393ca8 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564060393d58 <line:753:3, col:36>
|     `-CallExpr 0x564060393d38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564060393d20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564060393d00 <col:10> 'void *(void)' Function 0x564060335958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564060393ef0 prev 0x56406038eda0 <line:755:1, line:784:1> line:755:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564060393e58 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564060395718 <line:756:1, line:784:1>
|   |-CallExpr 0x564060393fd0 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060393fb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060393f98 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564060394048 <line:758:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564060393ff0 <col:3> 'int' lvalue Var 0x5640603903b8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564060394030 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564060394010 <col:15> 'int' lvalue Var 0x5640603902c0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5640603940a8 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564060394068 <col:3> 'int' lvalue Var 0x5640603902c0 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x564060394088 <col:15> 'int' 1
|   |-BinaryOperator 0x564060394120 <line:760:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640603940c8 <col:3> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564060394108 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640603940e8 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640603941b8 <line:761:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564060394140 <col:3> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564060394190 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564060394160 <col:27> 'int' 1
|   |-CallExpr 0x564060394338 <line:762:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564060394320 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5640603941d8 <col:3> 'void (int)' Function 0x564060335bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5640603942d8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5640603942b8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564060394298 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564060394250 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564060394238 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5640603941f8 <col:23> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564060394280 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564060394268 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564060394218 <col:41> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640603943b8 <line:763:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564060394360 <col:3> '_Bool' lvalue Var 0x56406038ff68 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5640603943a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564060394380 <col:20> '_Bool' lvalue Var 0x56406038fd10 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564060394430 <line:764:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640603943d8 <col:3> '_Bool' lvalue Var 0x56406038ffe0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564060394418 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640603943f8 <col:20> '_Bool' lvalue Var 0x56406038fd88 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5640603944a8 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564060394450 <col:3> '_Bool' lvalue Var 0x564060390058 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564060394490 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564060394470 <col:20> '_Bool' lvalue Var 0x56406038fe00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564060394520 <line:766:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640603944c8 <col:3> '_Bool' lvalue Var 0x5640603900d0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564060394508 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640603944e8 <col:20> '_Bool' lvalue Var 0x56406038fe78 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564060394598 <line:767:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564060394540 <col:3> '_Bool' lvalue Var 0x564060390148 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564060394580 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564060394560 <col:20> '_Bool' lvalue Var 0x56406038fef0 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x564060394630 <line:768:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5640603945b8 <col:3> '_Bool' lvalue Var 0x56406038fe78 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x564060394608 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5640603945d8 <col:27> 'int' 1
|   |-CallExpr 0x564060394688 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060394670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060394650 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640603946e0 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640603946c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640603946a8 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564060394740 <line:771:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564060394700 <col:3> 'int' lvalue Var 0x564060390530 'z' 'int'
|   | `-IntegerLiteral 0x564060394720 <col:7> 'int' 1
|   |-CallExpr 0x564060394798 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060394780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060394760 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640603947f0 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640603947d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640603947b8 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564060394ad8 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564060394810 <col:3> 'int' lvalue Var 0x56406038fb80 'y' 'int'
|   | `-ConditionalOperator 0x564060394aa8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5640603948d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564060394888 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564060394870 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564060394830 <col:7> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5640603948b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5640603948a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564060394850 <col:25> '_Bool' lvalue Var 0x56406038fe78 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564060394a90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640603948f0 <col:42> 'int' lvalue Var 0x5640603902c0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564060394a70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564060394a40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5640603949b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564060394968 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564060394950 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564060394910 <col:55> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564060394998 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564060394980 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564060394930 <col:73> '_Bool' lvalue Var 0x5640603900d0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564060394a10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640603949d0 <col:90> 'int' lvalue Var 0x5640603903b8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564060394a28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640603949f0 <col:102> 'int' lvalue Var 0x56406038fb80 'y' 'int'
|   |-BinaryOperator 0x564060394cf8 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564060394af8 <col:3> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564060394ce0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564060394cb0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564060394bd0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564060394b88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564060394b70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564060394b18 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564060394bb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564060394ba0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564060394b50 <col:38> '_Bool' lvalue Var 0x56406038fe78 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564060394c68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564060394c20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564060394bf0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564060394c98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564060394c80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564060394c48 <col:66> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564060394fe0 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564060394d18 <col:3> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564060394fc8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564060394f98 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564060394eb8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564060394dd8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564060394d90 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564060394d78 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564060394d38 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564060394dc0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564060394da8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564060394d58 <col:38> '_Bool' lvalue Var 0x56406038fe78 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564060394e98 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564060394e50 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564060394e38 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564060394df8 <col:56> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564060394e80 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564060394e68 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564060394e18 <col:74> '_Bool' lvalue Var 0x5640603900d0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564060394f50 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564060394f08 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564060394ed8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564060394f80 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564060394f68 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564060394f30 <col:102> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5640603951e8 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564060395000 <col:3> '_Bool' lvalue Var 0x56406038fe78 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5640603951d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640603951a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640603950c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564060395078 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564060395060 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564060395020 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640603950a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564060395090 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564060395040 <col:38> '_Bool' lvalue Var 0x56406038fe78 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564060395158 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564060395110 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640603950e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564060395188 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564060395170 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564060395138 <col:66> '_Bool' lvalue Var 0x56406038fe78 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5640603954d0 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564060395208 <col:3> '_Bool' lvalue Var 0x5640603900d0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5640603954b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564060395488 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640603953a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640603952c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564060395280 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564060395268 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564060395228 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640603952b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564060395298 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564060395248 <col:38> '_Bool' lvalue Var 0x56406038fe78 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564060395388 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564060395340 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564060395328 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640603952e8 <col:56> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564060395370 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564060395358 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564060395308 <col:74> '_Bool' lvalue Var 0x5640603900d0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564060395440 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640603953f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640603953c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564060395470 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564060395458 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564060395420 <col:102> '_Bool' lvalue Var 0x5640603900d0 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564060395528 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060395510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640603954f0 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564060395580 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060395568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060395548 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564060395638 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5640603955a0 <col:3> 'int' lvalue Var 0x56406038f278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564060395618 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564060395600 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640603955c0 <col:22> 'int' lvalue Var 0x56406038f278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5640603955e0 <col:41> 'int' 1
|   |-CallExpr 0x564060395690 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060395678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060395658 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564060395708 <line:783:3, col:36>
|     `-CallExpr 0x5640603956e8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5640603956d0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5640603956b0 <col:10> 'void *(void)' Function 0x564060335958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5640603958b0 prev 0x56406038eef8 <line:785:1, line:807:1> line:785:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x564060395818 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564060396c50 <line:786:1, line:807:1>
|   |-CallExpr 0x564060395990 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060395978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060395958 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640603959f0 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5640603959b0 <col:3> 'int' lvalue Var 0x564060390530 'z' 'int'
|   | `-IntegerLiteral 0x5640603959d0 <col:7> 'int' 2
|   |-CallExpr 0x564060395a48 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060395a30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060395a10 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564060395aa0 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060395a88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060395a68 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564060395b18 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564060395ac0 <col:3> 'int' lvalue Var 0x56406038f5d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x564060395b00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564060395ae0 <col:25> 'int' lvalue Var 0x564060390530 'z' 'int'
|   |-CallExpr 0x564060395b98 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060395b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060395b60 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564060395bf0 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060395bd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060395bb8 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564060395c68 <line:794:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564060395c10 <col:3> 'int' lvalue Var 0x56406038f6f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x564060395c50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564060395c30 <col:25> 'int' lvalue Var 0x56406038f818 'a' 'int'
|   |-CallExpr 0x564060395cc0 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060395ca8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060395c88 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564060395d18 <line:796:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060395d00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060395ce0 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564060396000 <line:797:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564060395d38 <col:3> 'int' lvalue Var 0x56406038fb80 'y' 'int'
|   | `-ConditionalOperator 0x564060395fd0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564060395df8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564060395db0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564060395d98 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564060395d58 <col:7> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564060395de0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564060395dc8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564060395d78 <col:25> '_Bool' lvalue Var 0x56406038fef0 'y$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x564060395fb8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564060395e18 <col:42> 'int' lvalue Var 0x5640603902c0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564060395f98 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564060395f68 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564060395ed8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564060395e90 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564060395e78 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564060395e38 <col:55> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564060395ec0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564060395ea8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564060395e58 <col:73> '_Bool' lvalue Var 0x564060390148 'y$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x564060395f38 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564060395ef8 <col:90> 'int' lvalue Var 0x5640603903b8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564060395f50 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564060395f18 <col:102> 'int' lvalue Var 0x56406038fb80 'y' 'int'
|   |-BinaryOperator 0x564060396208 <line:798:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564060396020 <col:3> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640603961f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640603961c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640603960e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564060396098 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564060396080 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564060396040 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640603960c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640603960b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564060396060 <col:38> '_Bool' lvalue Var 0x56406038fef0 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564060396178 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564060396130 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564060396100 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640603961a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564060396190 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564060396158 <col:66> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640603964f0 <line:799:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564060396228 <col:3> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640603964d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640603964a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640603963c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640603962e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640603962a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564060396288 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564060396248 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640603962d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640603962b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564060396268 <col:38> '_Bool' lvalue Var 0x56406038fef0 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5640603963a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564060396360 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564060396348 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564060396308 <col:56> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564060396390 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564060396378 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564060396328 <col:74> '_Bool' lvalue Var 0x564060390148 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564060396460 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564060396418 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640603963e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564060396490 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564060396478 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564060396440 <col:102> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5640603966f8 <line:800:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564060396510 <col:3> '_Bool' lvalue Var 0x56406038fef0 'y$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5640603966e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640603966b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640603965d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564060396588 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564060396570 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564060396530 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640603965b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640603965a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564060396550 <col:38> '_Bool' lvalue Var 0x56406038fef0 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564060396668 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564060396620 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640603965f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564060396698 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564060396680 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564060396648 <col:66> '_Bool' lvalue Var 0x56406038fef0 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5640603969e0 <line:801:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564060396718 <col:3> '_Bool' lvalue Var 0x564060390148 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5640603969c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564060396998 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640603968b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640603967d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564060396790 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564060396778 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564060396738 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640603967c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640603967a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564060396758 <col:38> '_Bool' lvalue Var 0x56406038fef0 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x564060396898 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564060396850 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564060396838 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640603967f8 <col:56> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564060396880 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564060396868 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564060396818 <col:74> '_Bool' lvalue Var 0x564060390148 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564060396950 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564060396908 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640603968d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564060396980 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564060396968 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564060396930 <col:102> '_Bool' lvalue Var 0x564060390148 'y$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x564060396a38 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060396a20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060396a00 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564060396a90 <line:803:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564060396a78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060396a58 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564060396b70 <line:804:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564060396ab0 <col:3> 'int' lvalue Var 0x56406038f278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564060396b28 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564060396b10 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564060396ad0 <col:22> 'int' lvalue Var 0x56406038f278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564060396af0 <col:41> 'int' 1
|   |-CallExpr 0x564060396bc8 <line:805:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564060396bb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564060396b90 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564060396c40 <line:806:3, col:36>
|     `-CallExpr 0x564060396c20 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564060396c08 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564060396be8 <col:10> 'void *(void)' Function 0x564060335958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564060396d20 prev 0x56406038efc0 <line:808:1, line:810:1> line:808:6 fence 'void ()'
| `-CompoundStmt 0x564060396dc0 <line:809:1, line:810:1>
|-FunctionDecl 0x564060396df0 prev 0x56406038f080 <line:811:1, line:813:1> line:811:6 isync 'void ()'
| `-CompoundStmt 0x564060396e90 <line:812:1, line:813:1>
|-FunctionDecl 0x564060396ec0 prev 0x56406038f140 <line:814:1, line:816:1> line:814:6 lwfence 'void ()'
| `-CompoundStmt 0x564060396f60 <line:815:1, line:816:1>
`-FunctionDecl 0x564060396fc8 <line:817:1, line:843:1> line:817:5 main 'int ()'
  `-CompoundStmt 0x564060398ff0 <line:818:1, line:843:1>
    |-DeclStmt 0x5640603970e0 <line:819:3, col:17>
    | `-VarDecl 0x564060397078 <col:3, col:13> col:13 used t703 'pthread_t':'unsigned long'
    |-CallExpr 0x5640603972e8 <line:820:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5640603972d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640603970f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564060376488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564060397138 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564060397118 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564060397078 't703' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564060397328 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5640603971b0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564060397188 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564060397150 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564060397340 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640603971d0 <col:38> 'void *(void *)' Function 0x564060390758 'P0' 'void *(void *)'
    | `-ParenExpr 0x564060397250 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564060397228 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5640603971f0 <col:51> 'int' 0
    |-DeclStmt 0x5640603973d0 <line:821:3, col:17>
    | `-VarDecl 0x564060397368 <col:3, col:13> col:13 used t704 'pthread_t':'unsigned long'
    |-CallExpr 0x564060397578 <line:822:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564060397560 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640603973e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564060376488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564060397428 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564060397408 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564060397368 't704' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5640603975b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5640603974a0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564060397478 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564060397440 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5640603975d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640603974c0 <col:38> 'void *(void *)' Function 0x564060390e58 'P1' 'void *(void *)'
    | `-ParenExpr 0x564060397540 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564060397518 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5640603974e0 <col:51> 'int' 0
    |-DeclStmt 0x564060397660 <line:823:3, col:17>
    | `-VarDecl 0x5640603975f8 <col:3, col:13> col:13 used t705 'pthread_t':'unsigned long'
    |-CallExpr 0x564060397808 <line:824:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5640603977f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564060397678 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564060376488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5640603976b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564060397698 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5640603975f8 't705' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564060397848 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564060397730 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564060397708 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5640603976d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564060397860 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564060397750 <col:38> 'void *(void *)' Function 0x564060393ef0 'P2' 'void *(void *)'
    | `-ParenExpr 0x5640603977d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5640603977a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564060397770 <col:51> 'int' 0
    |-DeclStmt 0x5640603978f0 <line:825:3, col:17>
    | `-VarDecl 0x564060397888 <col:3, col:13> col:13 used t706 'pthread_t':'unsigned long'
    |-CallExpr 0x564060397a98 <line:826:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564060397a80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564060397908 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564060376488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564060397948 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564060397928 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564060397888 't706' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564060397ad8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5640603979c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564060397998 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564060397960 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564060397af0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640603979e0 <col:38> 'void *(void *)' Function 0x5640603958b0 'P3' 'void *(void *)'
    | `-ParenExpr 0x564060397a60 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564060397a38 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564060397a00 <col:51> 'int' 0
    |-CallExpr 0x564060397b40 <line:827:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564060397b28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564060397b08 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564060397c30 <line:828:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564060397b80 <col:3> '_Bool' lvalue Var 0x56406038f8b0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564060397c18 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564060397bf8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564060397be0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564060397ba0 <col:21> 'int' lvalue Var 0x56406038f278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564060397bc0 <col:41> 'int' 4
    |-CallExpr 0x564060397c88 <line:829:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564060397c70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564060397c50 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564060397d00 <line:830:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564060397ce8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564060397ca8 <col:3> 'void (int)' Function 0x564060335790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564060397d40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564060397d28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564060397cc8 <col:21> '_Bool' lvalue Var 0x56406038f8b0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564060397d90 <line:831:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564060397d78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564060397d58 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564060398078 <line:832:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564060397db0 <col:3> 'int' lvalue Var 0x56406038fb80 'y' 'int'
    | `-ConditionalOperator 0x564060398048 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564060397e70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564060397e28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564060397e10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564060397dd0 <col:7> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564060397e58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564060397e40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564060397df0 <col:25> '_Bool' lvalue Var 0x56406038fd10 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564060398030 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564060397e90 <col:42> 'int' lvalue Var 0x5640603902c0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x564060398010 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564060397fe0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564060397f50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564060397f08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564060397ef0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564060397eb0 <col:55> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564060397f38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564060397f20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564060397ed0 <col:73> '_Bool' lvalue Var 0x56406038ff68 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564060397fb0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564060397f70 <col:90> 'int' lvalue Var 0x5640603903b8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564060397fc8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564060397f90 <col:102> 'int' lvalue Var 0x56406038fb80 'y' 'int'
    |-BinaryOperator 0x564060398280 <line:833:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564060398098 <col:3> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564060398268 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564060398238 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564060398158 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564060398110 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5640603980f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5640603980b8 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564060398140 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564060398128 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5640603980d8 <col:38> '_Bool' lvalue Var 0x56406038fd10 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640603981f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5640603981a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564060398178 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564060398220 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564060398208 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640603981d0 <col:66> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564060398568 <line:834:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5640603982a0 <col:3> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564060398550 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564060398520 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564060398440 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564060398360 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564060398318 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564060398300 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5640603982c0 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564060398348 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564060398330 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5640603982e0 <col:38> '_Bool' lvalue Var 0x56406038fd10 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564060398420 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5640603983d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5640603983c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564060398380 <col:56> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564060398408 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5640603983f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5640603983a0 <col:74> '_Bool' lvalue Var 0x56406038ff68 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640603984d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564060398490 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564060398460 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564060398508 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5640603984f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640603984b8 <col:102> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564060398770 <line:835:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564060398588 <col:3> '_Bool' lvalue Var 0x56406038fd10 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564060398758 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564060398728 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564060398648 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564060398600 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5640603985e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5640603985a8 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564060398630 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564060398618 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5640603985c8 <col:38> '_Bool' lvalue Var 0x56406038fd10 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640603986e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564060398698 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564060398668 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564060398710 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5640603986f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640603986c0 <col:66> '_Bool' lvalue Var 0x56406038fd10 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564060398a58 <line:836:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564060398790 <col:3> '_Bool' lvalue Var 0x56406038ff68 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564060398a40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564060398a10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564060398930 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564060398850 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564060398808 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5640603987f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5640603987b0 <col:20> '_Bool' lvalue Var 0x564060390338 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564060398838 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564060398820 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5640603987d0 <col:38> '_Bool' lvalue Var 0x56406038fd10 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564060398910 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5640603988c8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5640603988b0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564060398870 <col:56> '_Bool' lvalue Var 0x564060390430 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5640603988f8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5640603988e0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564060398890 <col:74> '_Bool' lvalue Var 0x56406038ff68 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640603989c8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564060398980 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564060398950 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5640603989f8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5640603989e0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640603989a8 <col:102> '_Bool' lvalue Var 0x56406038ff68 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564060398ab0 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564060398a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564060398a78 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564060398b08 <line:838:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564060398af0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564060398ad0 <col:3> 'void ()' Function 0x564060335e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564060398e98 <line:839:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x564060398b28 <col:3> '_Bool' lvalue Var 0x56406038f928 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564060398e80 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564060398e68 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564060398e48 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x564060398e28 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x564060398d90 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x564060398cf8 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x564060398c60 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x564060398bc8 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x564060398bb0 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x564060398b48 <col:23> 'int' lvalue Var 0x564060390530 'z' 'int'
    |         | | | | `-IntegerLiteral 0x564060398b90 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x564060398c40 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x564060398c28 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x564060398be8 <col:33> 'int' lvalue Var 0x56406038f398 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x564060398c08 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x564060398cd8 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x564060398cc0 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x564060398c80 <col:61> 'int' lvalue Var 0x56406038f4b8 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x564060398ca0 <col:84> 'int' 0
    |         | `-BinaryOperator 0x564060398d70 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564060398d58 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564060398d18 <col:89> 'int' lvalue Var 0x56406038f5d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x564060398d38 <col:112> 'int' 2
    |         `-BinaryOperator 0x564060398e08 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x564060398df0 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564060398db0 <col:117> 'int' lvalue Var 0x56406038f6f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x564060398dd0 <col:140> 'int' 0
    |-CallExpr 0x564060398ef0 <line:840:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564060398ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564060398eb8 <col:3> 'void ()' Function 0x564060335f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564060398f68 <line:841:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564060398f50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564060398f10 <col:3> 'void (int)' Function 0x564060335bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564060398fa8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564060398f90 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564060398f30 <col:21> '_Bool' lvalue Var 0x56406038f928 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564060398fe0 <line:842:3, col:10>
      `-IntegerLiteral 0x564060398fc0 <col:10> 'int' 0
