TranslationUnitDecl 0x55a353538df8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55a3535396b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55a353539390 '__int128'
|-TypedefDecl 0x55a353539728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55a3535393b0 'unsigned __int128'
|-TypedefDecl 0x55a353539a30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55a353539800 'struct __NSConstantString_tag'
|   `-Record 0x55a353539780 '__NSConstantString_tag'
|-TypedefDecl 0x55a353539ad8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55a353539a90 'char *'
|   `-BuiltinType 0x55a353538e90 'char'
|-TypedefDecl 0x55a3535788c0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55a353539d70 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55a353539bb0 'struct __va_list_tag'
|     `-Record 0x55a353539b30 '__va_list_tag'
|-FunctionDecl 0x55a3535789a0 <./split_1/jain_7_false-no-overflow.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55a353578b58 <line:3:1, col:38> col:12 used __VERIFIER_nondet_int 'int (void)' extern
|-FunctionDecl 0x55a353578ce0 <line:4:1, line:9:1> line:4:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55a353578c10 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x55a353578f30 <col:34, line:9:1>
|   |-IfStmt 0x55a353578f08 <line:5:3, line:7:3>
|   | |-UnaryOperator 0x55a353578de0 <line:5:7, col:13> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55a353578dc8 <col:8, col:13> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x55a353578da8 <col:8, col:13> 'int' lvalue
|   | |     `-DeclRefExpr 0x55a353578d88 <col:9> 'int' lvalue ParmVar 0x55a353578c10 'cond' 'int'
|   | `-CompoundStmt 0x55a353578ef0 <col:16, line:7:3>
|   |   `-LabelStmt 0x55a353578ed8 <line:6:5, col:29> 'ERROR'
|   |     `-CallExpr 0x55a353578e68 <col:12, col:29> 'void'
|   |       `-ImplicitCastExpr 0x55a353578e50 <col:12> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55a353578df8 <col:12> 'void () __attribute__((noreturn))' Function 0x55a3535789a0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x55a353578f20 <line:8:3>
`-FunctionDecl 0x55a353578fa8 <line:10:1, line:27:1> line:10:5 main 'int ()'
  `-CompoundStmt 0x55a35359da00 <line:11:1, line:27:1>
    |-DeclStmt 0x55a3535791e8 <line:12:3, col:12>
    | |-VarDecl 0x55a353579060 <col:3, col:7> col:7 used x 'int'
    | |-VarDecl 0x55a3535790e0 <col:3, col:9> col:9 used y 'int'
    | `-VarDecl 0x55a353579160 <col:3, col:11> col:11 used z 'int'
    |-BinaryOperator 0x55a353579240 <line:14:3, col:5> 'int' '='
    | |-DeclRefExpr 0x55a353579200 <col:3> 'int' lvalue Var 0x55a353579060 'x' 'int'
    | `-IntegerLiteral 0x55a353579220 <col:5> 'int' 0
    |-BinaryOperator 0x55a3535792a0 <line:15:3, col:5> 'int' '='
    | |-DeclRefExpr 0x55a353579260 <col:3> 'int' lvalue Var 0x55a3535790e0 'y' 'int'
    | `-IntegerLiteral 0x55a353579280 <col:5> 'int' 0
    |-BinaryOperator 0x55a353579300 <line:16:3, col:5> 'int' '='
    | |-DeclRefExpr 0x55a3535792c0 <col:3> 'int' lvalue Var 0x55a353579160 'z' 'int'
    | `-IntegerLiteral 0x55a3535792e0 <col:5> 'int' 0
    |-WhileStmt 0x55a35359d9b0 <line:18:3, line:25:5>
    | |-IntegerLiteral 0x55a353579320 <line:18:9> 'int' 1
    | `-CompoundStmt 0x55a35359d980 <line:19:5, line:25:5>
    |   |-BinaryOperator 0x55a353579480 <line:20:7, col:44> 'int' '='
    |   | |-DeclRefExpr 0x55a353579340 <col:7> 'int' lvalue Var 0x55a353579060 'x' 'int'
    |   | `-BinaryOperator 0x55a353579460 <col:11, col:44> 'int' '+'
    |   |   |-ImplicitCastExpr 0x55a353579448 <col:11> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x55a353579360 <col:11> 'int' lvalue Var 0x55a353579060 'x' 'int'
    |   |   `-BinaryOperator 0x55a353579428 <col:14, col:44> 'int' '*'
    |   |     |-IntegerLiteral 0x55a353579380 <col:14> 'int' 1048576
    |   |     `-CallExpr 0x55a353579408 <col:22, col:44> 'int'
    |   |       `-ImplicitCastExpr 0x55a3535793f0 <col:22> 'int (*)(void)' <FunctionToPointerDecay>
    |   |         `-DeclRefExpr 0x55a3535793a0 <col:22> 'int (void)' Function 0x55a353578b58 '__VERIFIER_nondet_int' 'int (void)'
    |   |-BinaryOperator 0x55a3535795b0 <line:21:7, col:44> 'int' '='
    |   | |-DeclRefExpr 0x55a3535794a0 <col:7> 'int' lvalue Var 0x55a3535790e0 'y' 'int'
    |   | `-BinaryOperator 0x55a353579590 <col:11, col:44> 'int' '+'
    |   |   |-ImplicitCastExpr 0x55a353579578 <col:11> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x55a3535794c0 <col:11> 'int' lvalue Var 0x55a3535790e0 'y' 'int'
    |   |   `-BinaryOperator 0x55a353579558 <col:14, col:44> 'int' '*'
    |   |     |-IntegerLiteral 0x55a3535794e0 <col:14> 'int' 2097152
    |   |     `-CallExpr 0x55a353579538 <col:22, col:44> 'int'
    |   |       `-ImplicitCastExpr 0x55a353579520 <col:22> 'int (*)(void)' <FunctionToPointerDecay>
    |   |         `-DeclRefExpr 0x55a353579500 <col:22> 'int (void)' Function 0x55a353578b58 '__VERIFIER_nondet_int' 'int (void)'
    |   |-BinaryOperator 0x55a3535796e0 <line:22:7, col:44> 'int' '='
    |   | |-DeclRefExpr 0x55a3535795d0 <col:7> 'int' lvalue Var 0x55a353579160 'z' 'int'
    |   | `-BinaryOperator 0x55a3535796c0 <col:11, col:44> 'int' '+'
    |   |   |-ImplicitCastExpr 0x55a3535796a8 <col:11> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x55a3535795f0 <col:11> 'int' lvalue Var 0x55a353579160 'z' 'int'
    |   |   `-BinaryOperator 0x55a353579688 <col:14, col:44> 'int' '*'
    |   |     |-IntegerLiteral 0x55a353579610 <col:14> 'int' 4194304
    |   |     `-CallExpr 0x55a353579668 <col:22, col:44> 'int'
    |   |       `-ImplicitCastExpr 0x55a353579650 <col:22> 'int (*)(void)' <FunctionToPointerDecay>
    |   |         `-DeclRefExpr 0x55a353579630 <col:22> 'int (void)' Function 0x55a353578b58 '__VERIFIER_nondet_int' 'int (void)'
    |   `-CallExpr 0x55a35359d958 <line:24:7, col:43> 'void'
    |     |-ImplicitCastExpr 0x55a35359d940 <col:7> 'void (*)(int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x55a353579700 <col:7> 'void (int)' Function 0x55a353578ce0 '__VERIFIER_assert' 'void (int)'
    |     `-BinaryOperator 0x55a35359d8f0 <col:25, col:36> 'int' '!='
    |       |-BinaryOperator 0x55a353579868 <col:25, col:33> 'int' '+'
    |       | |-BinaryOperator 0x55a353579810 <col:25, col:31> 'int' '-'
    |       | | |-BinaryOperator 0x55a353579778 <col:25, col:27> 'int' '*'
    |       | | | |-IntegerLiteral 0x55a353579720 <col:25> 'int' 4
    |       | | | `-ImplicitCastExpr 0x55a353579760 <col:27> 'int' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55a353579740 <col:27> 'int' lvalue Var 0x55a353579060 'x' 'int'
    |       | | `-BinaryOperator 0x55a3535797f0 <col:29, col:31> 'int' '*'
    |       | |   |-IntegerLiteral 0x55a353579798 <col:29> 'int' 2
    |       | |   `-ImplicitCastExpr 0x55a3535797d8 <col:31> 'int' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x55a3535797b8 <col:31> 'int' lvalue Var 0x55a3535790e0 'y' 'int'
    |       | `-ImplicitCastExpr 0x55a353579850 <col:33> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x55a353579830 <col:33> 'int' lvalue Var 0x55a353579160 'z' 'int'
    |       `-IntegerLiteral 0x55a353579888 <col:36> 'int' 1048576
    `-ReturnStmt 0x55a35359d9f0 <line:26:5, col:12>
      `-IntegerLiteral 0x55a35359d9d0 <col:12> 'int' 0
