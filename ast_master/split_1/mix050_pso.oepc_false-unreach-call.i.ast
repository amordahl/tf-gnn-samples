TranslationUnitDecl 0x559cd6f3be18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559cd6f3c6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559cd6f3c3b0 '__int128'
|-TypedefDecl 0x559cd6f3c748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559cd6f3c3d0 'unsigned __int128'
|-TypedefDecl 0x559cd6f3ca50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559cd6f3c820 'struct __NSConstantString_tag'
|   `-Record 0x559cd6f3c7a0 '__NSConstantString_tag'
|-TypedefDecl 0x559cd6f3caf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559cd6f3cab0 'char *'
|   `-BuiltinType 0x559cd6f3beb0 'char'
|-TypedefDecl 0x559cd6f7b650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559cd6f3cd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559cd6f3cbd0 'struct __va_list_tag'
|     `-Record 0x559cd6f3cb50 '__va_list_tag'
|-FunctionDecl 0x559cd6f7b790 <./split_1/mix050_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x559cd6f7b6c0 <col:31> col:34 'int'
|-FunctionDecl 0x559cd6f7b958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x559cd6f7ba80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559cd6f7bbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559cd6f7bb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x559cd6f7bdf8 <col:40, col:99>
|   |-IfStmt 0x559cd6f7bdc8 <col:42, col:88>
|   | |-UnaryOperator 0x559cd6f7bca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x559cd6f7bc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x559cd6f7bc70 <col:47> 'int' lvalue ParmVar 0x559cd6f7bb38 'expression' 'int'
|   | `-CompoundStmt 0x559cd6f7bdb0 <col:59, col:88>
|   |   `-LabelStmt 0x559cd6f7bd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x559cd6f7bd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x559cd6f7bd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x559cd6f7bcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x559cd6f7ba80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x559cd6f7bde0 <col:89>
|   `-ReturnStmt 0x559cd6f7bde8 <col:91>
|-FunctionDecl 0x559cd6f7be40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x559cd6f7bf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x559cd6f7c280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559cd6f7bfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x559cd6f7c038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x559cd6f7c0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559cd6f7c138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559cd6f7c340 <line:10:22>
|-FunctionDecl 0x559cd6fa2390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559cd6f7c3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x559cd6f7c430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x559cd6f7c4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559cd6f7c530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559cd6fa2450 <line:13:22>
|-FunctionDecl 0x559cd6fa2700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559cd6fa24c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559cd6fa2540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x559cd6fa25c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x559cd6fa27b8 <line:15:22>
|-TypedefDecl 0x559cd6fa2828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559cd6f3bf70 'unsigned char'
|-TypedefDecl 0x559cd6fa2898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559cd6f3bf90 'unsigned short'
|-TypedefDecl 0x559cd6fa2908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559cd6f3bfb0 'unsigned int'
|-TypedefDecl 0x559cd6fa2978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa29e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559cd6f3bed0 'signed char'
|-TypedefDecl 0x559cd6fa2a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559cd6f3bf70 'unsigned char'
|-TypedefDecl 0x559cd6fa2ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559cd6f3bef0 'short'
|-TypedefDecl 0x559cd6fa2b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559cd6f3bf90 'unsigned short'
|-TypedefDecl 0x559cd6fa2ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559cd6f3bf10 'int'
|-TypedefDecl 0x559cd6fa2c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559cd6f3bfb0 'unsigned int'
|-TypedefDecl 0x559cd6fa2c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa2cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa2d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa2dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa2e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa2eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559cd6f3bfb0 'unsigned int'
|-TypedefDecl 0x559cd6fa2f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559cd6f3bfb0 'unsigned int'
|-TypedefDecl 0x559cd6fa2f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa3008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa3078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559cd6f3bfb0 'unsigned int'
|-TypedefDecl 0x559cd6fa30e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa3158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa31c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa3238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559cd6f3bf10 'int'
|-RecordDecl 0x559cd6fa3290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x559cd6fa3408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x559cd6fa34c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559cd6fa3460 'struct __fsid_t' sugar
|   `-RecordType 0x559cd6fa3310 '__fsid_t'
|     `-Record 0x559cd6fa3290 ''
|-TypedefDecl 0x559cd6fa3548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa35b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa3628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa3698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559cd6f3bfb0 'unsigned int'
|-TypedefDecl 0x559cd6fa3708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa3778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559cd6f3bfb0 'unsigned int'
|-TypedefDecl 0x559cd6fa37e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa3858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559cd6f3bf10 'int'
|-TypedefDecl 0x559cd6fa38c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559cd6f3bf10 'int'
|-TypedefDecl 0x559cd6fa3938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559cd6f3bf10 'int'
|-TypedefDecl 0x559cd6fa39a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559cd6f3c630 'void *'
|   `-BuiltinType 0x559cd6f3be70 'void'
|-TypedefDecl 0x559cd6fa3a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa3a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa3af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa3b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa3bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa3c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa3cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa3d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa3d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa3e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa3e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa3f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559cd6fa3ed0 '__off64_t' sugar
|   |-Typedef 0x559cd6fa31c8 '__off64_t'
|   `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa4000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559cd6fa3fc0 '__quad_t *'
|   `-TypedefType 0x559cd6fa3f60 '__quad_t' sugar
|     |-Typedef 0x559cd6fa2d68 '__quad_t'
|     `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa4070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559cd6f3cab0 'char *'
|   `-BuiltinType 0x559cd6f3beb0 'char'
|-TypedefDecl 0x559cd6fa40e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa4150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559cd6f3bfb0 'unsigned int'
|-FunctionDecl 0x559cd6fa4298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x559cd6fa41c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x559cd6fa55e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x559cd6fa55d8 <line:72:3, col:34>
|     `-CallExpr 0x559cd6fa5598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559cd6fa5580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559cd6fa5510 <col:10> '<builtin fn type>' Function 0x559cd6fa5380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x559cd6fa55c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559cd6fa5530 <col:29> 'unsigned int' lvalue ParmVar 0x559cd6fa41c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x559cd6fa5380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559cd6fa5420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559cd6fa5490 <col:10> Implicit
| `-ConstAttr 0x559cd6fa54e8 <col:10> Implicit
|-FunctionDecl 0x559cd6fa5740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559cd6fa5638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559cd6fa5a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x559cd6fa5a48 <line:77:3, col:34>
|     `-CallExpr 0x559cd6fa5a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x559cd6fa59f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559cd6fa5978 <col:10> '<builtin fn type>' Function 0x559cd6fa57e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559cd6fa5a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559cd6fa5998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559cd6fa5638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x559cd6fa57e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559cd6fa5888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x559cd6fa58f8 <col:10> Implicit
| `-ConstAttr 0x559cd6fa5950 <col:10> Implicit
|-TypedefDecl 0x559cd6fa5a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-TypedefDecl 0x559cd6fa5b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559cd6fa5ae0 '__time_t' sugar
|   |-Typedef 0x559cd6fa3708 '__time_t'
|   `-BuiltinType 0x559cd6f3bf30 'long'
|-RecordDecl 0x559cd6fa5b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x559cd6fa5c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559cd6fa5cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559cd6fa5d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559cd6fa5d10 '__pid_t' sugar
|   |-Typedef 0x559cd6fa3238 '__pid_t'
|   `-BuiltinType 0x559cd6f3bf10 'int'
|-RecordDecl 0x559cd6fa5da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x559cd6fa5e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559cd6fa5eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x559cd6fa5f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559cd6fa5fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-RecordDecl 0x559cd6fa6030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x559cd6fa62c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x559cd6fa73a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559cd6fa6310 'struct cpu_set_t' sugar
|   `-RecordType 0x559cd6fa60b0 'cpu_set_t'
|     `-Record 0x559cd6fa6030 ''
|-FunctionDecl 0x559cd6fa7678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559cd6fa7448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559cd6fa7550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559cd6fa7728 <line:107:19>
|-FunctionDecl 0x559cd6fa7900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559cd6fa7790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x559cd6fa79a8 <col:69>
|-FunctionDecl 0x559cd6fa7b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559cd6fa7a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559cd6fa7bc8 <col:64>
|-FunctionDecl 0x559cd6fa7e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559cd6fa7c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559cd6fa7d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559cd6fa7f38 <line:113:22>
|-FunctionDecl 0x559cd6fa81b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559cd6fa7fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559cd6fa8098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x559cd6fa8268 <col:88>
|-FunctionDecl 0x559cd6fa8588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559cd6fa82d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559cd6fa83b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x559cd6fa8440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559cd6fa8640 <col:62>
|-FunctionDecl 0x559cd6fa87b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x559cd6fa86a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x559cd6fa8860 <col:63>
|-FunctionDecl 0x559cd6fa8988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x559cd6fa8a28 <col:47>
|-FunctionDecl 0x559cd6fa8b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x559cd6fa8a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559cd6fa8bd8 <col:69>
|-FunctionDecl 0x559cd6fa8ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x559cd6fa8c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559cd6fa8d88 <col:69>
|-FunctionDecl 0x559cd6fa9048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559cd6fa8df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559cd6fa8f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x559cd6fa90f8 <col:88>
|-TypedefDecl 0x559cd6fa9188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x559cd6fa9150 '__clock_t' sugar
|   |-Typedef 0x559cd6fa3548 '__clock_t'
|   `-BuiltinType 0x559cd6f3bf30 'long'
|-TypedefDecl 0x559cd6fa9218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x559cd6fa91e0 '__clockid_t' sugar
|   |-Typedef 0x559cd6fa3938 '__clockid_t'
|   `-BuiltinType 0x559cd6f3bf10 'int'
|-TypedefDecl 0x559cd6fa92a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x559cd6fa9270 '__timer_t' sugar
|   |-Typedef 0x559cd6fa39a8 '__timer_t'
|   `-PointerType 0x559cd6f3c630 'void *'
|     `-BuiltinType 0x559cd6f3be70 'void'
|-RecordDecl 0x559cd6fa9300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x559cd6fa93d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x559cd6fa9440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x559cd6fa94a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x559cd6fa9510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x559cd6fa9578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x559cd6fa95e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x559cd6fa9648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x559cd6fa96b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x559cd6fa9718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x559cd6fa9780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x559cd6fa97e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x559cd6fa9838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x559cd6fa9908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x559cd6fa9978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x559cd6fa9a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x559cd6fa9bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x559cd6fa9c90 <col:45>
|-FunctionDecl 0x559cd6fa9e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x559cd6fa9d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x559cd6fa9f18 <col:54>
|-FunctionDecl 0x559cd6faa118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x559cd6fa9f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x559cd6fa9ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x559cd6faa1c8 <line:157:22>
| `-ConstAttr 0x559cd6faa220 <col:63>
|-FunctionDecl 0x559cd6fab050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559cd6faa318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559cd6fab0f8 <col:56>
|-FunctionDecl 0x559cd6fab4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x559cd6fab168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x559cd6fab1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559cd6fab260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x559cd6fab358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x559cd6fab560 <col:54>
|-RecordDecl 0x559cd6fab5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x559cd6fab668 parent 0x559cd6f3be18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x559cd6fab8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x559cd6fab968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x559cd6fab9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x559cd6faba38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x559cd6fabb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x559cd6fabc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x559cd6fabbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x559cd6fabb80 'struct __locale_struct' sugar
|     `-RecordType 0x559cd6fab640 'struct __locale_struct'
|       `-Record 0x559cd6fab5b8 '__locale_struct'
|-TypedefDecl 0x559cd6fabcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x559cd6fabcc0 '__locale_t' sugar
|   |-Typedef 0x559cd6fabc48 '__locale_t'
|   `-PointerType 0x559cd6fabbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x559cd6fabb80 'struct __locale_struct' sugar
|       `-RecordType 0x559cd6fab640 'struct __locale_struct'
|         `-Record 0x559cd6fab5b8 '__locale_struct'
|-FunctionDecl 0x559cd6fad110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x559cd6fabd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x559cd6fabde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559cd6fabe60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x559cd6fabef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559cd6fabf68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x559cd6fad1d8 <col:40>
|-FunctionDecl 0x559cd6fad3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559cd6fad2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x559cd6fad470 <col:66>
|-FunctionDecl 0x559cd6fad580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559cd6fad4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x559cd6fad628 <col:69>
|-FunctionDecl 0x559cd6fad858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559cd6fad690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559cd6fad720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559cd6fad908 <col:52>
|-FunctionDecl 0x559cd6fadab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559cd6fad970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559cd6fada00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559cd6fadb60 <col:55>
|-FunctionDecl 0x559cd6fadcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x559cd6fadbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x559cd6fadda0 <col:62>
|-FunctionDecl 0x559cd6fadf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x559cd6fade08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x559cd6fadfc0 <col:60>
|-FunctionDecl 0x559cd6fae2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559cd6fae118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559cd6fae198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559cd6fae368 <col:44>
|-FunctionDecl 0x559cd6fae578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559cd6fae3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559cd6fae450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559cd6fae628 <col:49>
|-VarDecl 0x559cd6fae728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x559cd6fae7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559cd6fae828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x559cd6fae8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559cd6faea20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559cd6faeac0 <col:42>
|-VarDecl 0x559cd6faeb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559cd6faebb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559cd6faed38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559cd6faec28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559cd6faede0 <col:57>
|-FunctionDecl 0x559cd6faeef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559cd6faee60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559cd6faef98 <col:56>
|-FunctionDecl 0x559cd6faf0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559cd6faf018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559cd6faf178 <col:59>
|-FunctionDecl 0x559cd6faf280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x559cd6faf1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559cd6faf328 <col:48>
| `-ConstAttr 0x559cd6faf380 <col:89>
|-FunctionDecl 0x559cd6faf5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559cd6faf438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x559cd6faf4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559cd6faf848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559cd6faf6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559cd6faf768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x559cd6faf8f8 <col:88>
|-FunctionDecl 0x559cd6fafa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559cd6faf960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559cd6faf9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559cd6fafb40 <col:88>
|-FunctionDecl 0x559cd6fafd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559cd6fafba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559cd6fafc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559cd6fafe08 <line:208:22>
|-FunctionDecl 0x559cd6fb0178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559cd6fafe70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559cd6fafef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559cd6faff80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559cd6fb0010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559cd6fb0478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559cd6fb0278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559cd6fb0350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559cd6fb0528 <col:85>
|-FunctionDecl 0x559cd6fb0918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559cd6fb0590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559cd6fb06c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x559cd6fb07d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x559cd6fb09d0 <col:52>
|-FunctionDecl 0x559cd6fb0b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559cd6fb0a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559cd6fb0bf0 <col:61>
|-FunctionDecl 0x559cd6fb10f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559cd6fb0c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559cd6fb0cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559cd6fb0e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559cd6fb0ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x559cd6fb11b0 <col:62>
|-FunctionDecl 0x559cd6fb13c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559cd6fb1218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559cd6fb12a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559cd6fb1478 <line:221:22>
|-FunctionDecl 0x559cd6fb1578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x559cd6fb14e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559cd6fb1620 <col:65>
|-TypedefDecl 0x559cd6fb1690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559cd6f3bfd0 'unsigned long'
|-RecordDecl 0x559cd6fb16e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x559cd6fb1830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559cd6fb1898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559cd6fb1948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x559cd6fb18f0 'union pthread_attr_t' sugar
|   `-RecordType 0x559cd6fb1770 'union pthread_attr_t'
|     `-Record 0x559cd6fb16e8 'pthread_attr_t'
|-RecordDecl 0x559cd6fb19a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559cd6fb1b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559cd6fb1b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559cd6fb1c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559cd6fb1be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559cd6fb1a20 'struct __pthread_internal_list'
|     `-Record 0x559cd6fb19a0 '__pthread_internal_list'
|-RecordDecl 0x559cd6fb1cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x559cd6fb1d58 parent 0x559cd6f3be18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559cd6fb1e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559cd6fb1e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559cd6fb1f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559cd6fb1f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559cd6fb1fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559cd6fb2038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559cd6fb6110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x559cd6fb61c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x559cd6fb62b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559cd6fb6318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559cd6fb64a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559cd6fb6440 'union pthread_mutex_t' sugar
|   `-RecordType 0x559cd6fb1d30 'pthread_mutex_t'
|     `-Record 0x559cd6fb1cb0 ''
|-RecordDecl 0x559cd6fb6510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x559cd6fb6650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559cd6fb66b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559cd6fb6770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559cd6fb6710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559cd6fb6590 'pthread_mutexattr_t'
|     `-Record 0x559cd6fb6510 ''
|-RecordDecl 0x559cd6fb67e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x559cd6fb6888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x559cd6fb6950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559cd6fb69b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559cd6fb6a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559cd6fb6a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559cd6fb6af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559cd6fb6b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559cd6fb6bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559cd6fb6c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559cd6fb6ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_1/mix050_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_1/mix050_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x559cd6fb6dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559cd6fb6e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559cd6fb6f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559cd6fb6f10 'union pthread_cond_t' sugar
|   `-RecordType 0x559cd6fb6860 'pthread_cond_t'
|     `-Record 0x559cd6fb67e0 ''
|-RecordDecl 0x559cd6fb6fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x559cd6fb8130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559cd6fb8198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559cd6fb8250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x559cd6fb81f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x559cd6fb7060 'pthread_condattr_t'
|     `-Record 0x559cd6fb6fe0 ''
|-TypedefDecl 0x559cd6fb82d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559cd6f3bfb0 'unsigned int'
|-TypedefDecl 0x559cd6fb8348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559cd6f3bf10 'int'
|-RecordDecl 0x559cd6fb83a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x559cd6fb8448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x559cd6fb8510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559cd6fb8578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x559cd6fb85e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x559cd6fb8648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x559cd6fb86b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x559cd6fb8718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x559cd6fb8780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x559cd6fb87e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x559cd6fb8850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x559cd6fb88b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x559cd6fb8920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x559cd6fb89d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_1/mix050_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_1/mix050_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x559cd6fb8a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559cd6fb8ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559cd6fb8c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x559cd6fb8bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x559cd6fb8420 'pthread_rwlock_t'
|     `-Record 0x559cd6fb83a0 ''
|-RecordDecl 0x559cd6fb8ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x559cd6fb8de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x559cd6fb8e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559cd6fb8f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x559cd6fb8ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x559cd6fb8d20 'pthread_rwlockattr_t'
|     `-Record 0x559cd6fb8ca0 ''
|-TypedefDecl 0x559cd6fb8f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559cd6f3bf14 'volatile int' volatile
|   `-BuiltinType 0x559cd6f3bf10 'int'
|-RecordDecl 0x559cd6fb8fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x559cd6fba140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x559cd6fba1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559cd6fba260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x559cd6fba200 'union pthread_barrier_t' sugar
|   `-RecordType 0x559cd6fb9060 'pthread_barrier_t'
|     `-Record 0x559cd6fb8fe0 ''
|-RecordDecl 0x559cd6fba2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x559cd6fba3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559cd6fba438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559cd6fba4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x559cd6fba490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x559cd6fba350 'pthread_barrierattr_t'
|     `-Record 0x559cd6fba2d0 ''
|-TypedefDecl 0x559cd6fba608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x559cd6fba5a0 'long [8]' 8 
|   `-BuiltinType 0x559cd6f3bf30 'long'
|-EnumDecl 0x559cd6fba660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x559cd6fba728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x559cd6fba778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x559cd6fba7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x559cd6fba898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x559cd6fba8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x559cd6fba938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x559cd6fba988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x559cd6fbaa10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x559cd6fba9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x559cd6fba9d8 <col:26> 'int' EnumConstant 0x559cd6fba898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x559cd6fbaa98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x559cd6fbaa80 <col:29> 'int'
| |   `-DeclRefExpr 0x559cd6fbaa60 <col:29> 'int' EnumConstant 0x559cd6fba8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x559cd6fbab20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x559cd6fbab08 <col:30> 'int'
| |   `-DeclRefExpr 0x559cd6fbaae8 <col:30> 'int' EnumConstant 0x559cd6fba938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x559cd6fbaba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x559cd6fbab90 <col:27> 'int'
|     `-DeclRefExpr 0x559cd6fbab70 <col:27> 'int' EnumConstant 0x559cd6fbaa10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x559cd6fbabf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x559cd6fbacc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x559cd6fbad50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x559cd6fbad38 <col:30> 'int'
| |   `-DeclRefExpr 0x559cd6fbad18 <col:30> 'int' EnumConstant 0x559cd6fbacc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x559cd6fbada0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x559cd6fbae28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x559cd6fbae10 <col:29> 'int'
|     `-DeclRefExpr 0x559cd6fbadf0 <col:29> 'int' EnumConstant 0x559cd6fbada0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x559cd6fbae78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x559cd6fbaf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x559cd6fbaf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x559cd6fbafe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x559cd6fbb038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x559cd6fbb150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x559cd6fbb1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x559cd6fbb1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x559cd6fbb278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x559cd6fbb260 <col:31> 'int'
|     `-DeclRefExpr 0x559cd6fbb240 <col:31> 'int' EnumConstant 0x559cd6fbb150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x559cd6fbb2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x559cd6fbb398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x559cd6fbb3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x559cd6fbb438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x559cd6fbb508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x559cd6fbb558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x559cd6fbb5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x559cd6fbb678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x559cd6fbb6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x559cd6fbb718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x559cd6fbb958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x559cd6fbb9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x559cd6fbba28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x559cd6fbbb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x559cd6fbbb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x559cd6fbbc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x559cd6fbbcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x559cd6fbbd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x559cd6fbbdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x559cd6fbbe28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x559cd6fbc488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x559cd6fbbf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x559cd6fbc030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cd6fbc270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x559cd6fbc2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x559cd6fbc548 <col:47>
| |-NonNullAttr 0x559cd6fbc5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x559cd6fbc5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x559cd6fbc700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x559cd6fbc630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x559cd6fbc958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x559cd6fbc7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x559cd6fbc838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x559cd6fbcb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x559cd6fbca18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x559cd6fbcbd0 <col:60>
|-FunctionDecl 0x559cd6fbcd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x559cd6fbcdc0 <col:54>
| `-ConstAttr 0x559cd6fbce18 <col:95>
|-FunctionDecl 0x559cd6fbcfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x559cd6fbce50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559cd6fbcec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x559cd6fbd098 <line:394:19>
| `-ConstAttr 0x559cd6fbd0f0 <col:60>
|-FunctionDecl 0x559cd6fbeb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559cd6fbe9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559cd6fbebb0 <col:71>
| `-NonNullAttr 0x559cd6fbec08 <col:112, col:126> 1
|-FunctionDecl 0x559cd6fbed10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559cd6fbec58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559cd6fbedb8 <line:397:22>
| `-NonNullAttr 0x559cd6fbee10 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fbf038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559cd6fbee58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559cd6fbeed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x559cd6fbf0e8 <line:400:22>
| `-NonNullAttr 0x559cd6fbf140 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fbf348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fbf188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cd6fbf208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x559cd6fbf3f8 <line:403:22>
| `-NonNullAttr 0x559cd6fbf450 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fbf6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559cd6fbf498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559cd6fbf540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559cd6fbf758 <line:406:22>
| `-NonNullAttr 0x559cd6fbf7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fc09e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559cd6fbf7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cd6fbf870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559cd6fc0a98 <line:409:22>
| `-NonNullAttr 0x559cd6fc0af0 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc0d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559cd6fc0b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cd6fc0bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559cd6fc0dd8 <line:412:22>
| `-NonNullAttr 0x559cd6fc0e30 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fc1068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559cd6fc0e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cd6fc0f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559cd6fc1118 <col:37>
| `-NonNullAttr 0x559cd6fc1170 <col:78, col:95> 1 2
|-FunctionDecl 0x559cd6fc1358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fc11b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cd6fc1238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559cd6fc1408 <line:418:22>
| `-NonNullAttr 0x559cd6fc1460 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fc15e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fc14a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cd6fc1528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559cd6fc1698 <line:420:22>
| `-NonNullAttr 0x559cd6fc16f0 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc1898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fc1738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cd6fc17b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559cd6fc1948 <line:423:22>
| `-NonNullAttr 0x559cd6fc19c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fc1b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fc1a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cd6fc1a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559cd6fc1bf8 <line:426:22>
| `-NonNullAttr 0x559cd6fc1c50 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc1df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fc1c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cd6fc1d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559cd6fc1ea8 <line:429:22>
| `-NonNullAttr 0x559cd6fc1f00 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fc2088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fc1f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cd6fc1fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559cd6fc2138 <line:431:22>
| `-NonNullAttr 0x559cd6fc2190 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc23b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x559cd6fc21d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cd6fc2258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559cd6fc2468 <line:434:22>
| |-NonNullAttr 0x559cd6fc24c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x559cd6fc24f8 <col:100> "" ""
|-FunctionDecl 0x559cd6fc2708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559cd6fc2548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cd6fc25c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x559cd6fc27b8 <line:437:22>
| |-NonNullAttr 0x559cd6fc2810 <col:63, col:77> 1
| `-DeprecatedAttr 0x559cd6fc2848 <col:97> "" ""
|-FunctionDecl 0x559cd6fc2a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559cd6fc2898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cd6fc2910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559cd6fc2af8 <line:440:22>
| `-NonNullAttr 0x559cd6fc2b50 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fc2cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559cd6fc2b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cd6fc2c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559cd6fc2d80 <line:443:22>
| `-NonNullAttr 0x559cd6fc2dd8 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc30c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559cd6fc2e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559cd6fc2ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559cd6fc2f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559cd6fc3180 <line:447:22>
| `-NonNullAttr 0x559cd6fc31d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559cd6fc3488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559cd6fc3230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559cd6fc32b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559cd6fc3328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559cd6fc3540 <col:43>
| `-NonNullAttr 0x559cd6fc3598 <col:84, col:98> 1
|-FunctionDecl 0x559cd6fc3858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559cd6fc35e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559cd6fc3668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x559cd6fc36f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559cd6fc3910 <line:452:22>
| `-NonNullAttr 0x559cd6fc3968 <col:63, col:77> 3
|-FunctionDecl 0x559cd6fc3c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559cd6fc39e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559cd6fc3a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559cd6fc3af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559cd6fc3d30 <line:456:22>
| `-NonNullAttr 0x559cd6fc3d88 <col:63, col:80> 2 3
|-FunctionDecl 0x559cd6fc3f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559cd6fc3dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559cd6fc3e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559cd6fc4028 <line:458:22>
|-FunctionDecl 0x559cd6fc43f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x559cd6fc40f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559cd6fc4290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x559cd6fc44a8 <col:52, col:69> 1 2
|-FunctionDecl 0x559cd6fc4650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559cd6fc4530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x559cd6fc45b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559cd6fc4838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559cd6fc4718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559cd6fc4798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x559cd6fc49f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x559cd6fc48f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559cd6fc4b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559cd6fc4bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x559cd6fc4c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x559cd6fc4d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559cd6fc4dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559cd6fc4fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_1/mix050_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x559cd6fc5098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559cd6fc5150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x559cd6fc50f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559cd6fc4c50 '__pthread_unwind_buf_t'
| |   `-Record 0x559cd6fc4bd0 ''
| `-AlignedAttr 0x559cd6fc51a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559cd6fc5220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559cd6fc5380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x559cd6fc53e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559cd6fc5450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x559cd6fc54b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x559cd6fc56c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559cd6fc55b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559cd6fc5808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559cd6fc5778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559cd6fc5a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559cd6fc58c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559cd6fc5aa8 <line:487:22>
|-RecordDecl 0x559cd6fc5b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559cd6fc5e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559cd6fc5c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559cd6fc5cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559cd6fc5ec8 <col:86>
| `-ReturnsTwiceAttr 0x559cd6fc5f20 <col:12> Implicit
|-FunctionDecl 0x559cd6fc6248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559cd6fc5ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559cd6fc6100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x559cd6fc62f8 <line:493:22>
| `-NonNullAttr 0x559cd6fc6350 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc64c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559cd6fc6398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559cd6fc6570 <line:495:22>
| `-NonNullAttr 0x559cd6fc65c8 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc66d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559cd6fc6618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559cd6fc6778 <line:497:22>
| `-NonNullAttr 0x559cd6fc67d0 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fc68d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559cd6fc6818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559cd6fc6978 <line:499:22>
| `-NonNullAttr 0x559cd6fc69d0 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fc7c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559cd6fc7a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559cd6fc7ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559cd6fc7cd8 <col:36>
| `-NonNullAttr 0x559cd6fc7d30 <col:66, col:83> 1 2
|-FunctionDecl 0x559cd6fc7e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559cd6fc7d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559cd6fc7ed8 <line:504:22>
| `-NonNullAttr 0x559cd6fc7f30 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fc81c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fc7fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559cd6fc8060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559cd6fc8278 <line:508:22>
| `-NonNullAttr 0x559cd6fc82d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fc8598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fc8318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559cd6fc8398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x559cd6fc8418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x559cd6fc8650 <line:512:22>
| `-NonNullAttr 0x559cd6fc86a8 <col:63, col:80> 1 3
|-FunctionDecl 0x559cd6fc87b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559cd6fc86f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559cd6fc8858 <line:514:22>
| `-NonNullAttr 0x559cd6fc88b0 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc8ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559cd6fc8960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559cd6fc8b80 <line:516:22>
| `-NonNullAttr 0x559cd6fc8bd8 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc8ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559cd6fc8c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559cd6fc8d88 <line:518:22>
| `-NonNullAttr 0x559cd6fc8de0 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc9008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fc8e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559cd6fc8ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x559cd6fc90b8 <line:522:22>
| `-NonNullAttr 0x559cd6fc9110 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fc9318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fc9158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cd6fc91d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x559cd6fc93c8 <line:525:22>
| `-NonNullAttr 0x559cd6fc9420 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc95c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fc9468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559cd6fc94e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x559cd6fc9678 <line:528:22>
| `-NonNullAttr 0x559cd6fc96d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fc9858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fc9718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cd6fc9798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x559cd6fc9908 <line:530:22>
| `-NonNullAttr 0x559cd6fc9960 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fc9b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fc99a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559cd6fc9a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x559cd6fc9bd0 <line:534:22>
| `-NonNullAttr 0x559cd6fc9c28 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fc9db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fc9c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cd6fc9cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x559cd6fc9e68 <line:537:22>
| `-NonNullAttr 0x559cd6fc9ec0 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fca068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fc9f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559cd6fc9f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559cd6fca118 <line:541:22>
| `-NonNullAttr 0x559cd6fca170 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fca2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fca1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cd6fca238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x559cd6fca3a8 <line:544:22>
| `-NonNullAttr 0x559cd6fca400 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fca5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x559cd6fca448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cd6fca4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x559cd6fca698 <line:547:22>
| `-NonNullAttr 0x559cd6fca6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fca878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fca738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559cd6fca7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x559cd6fca928 <line:550:22>
| `-NonNullAttr 0x559cd6fca980 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fcbcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x559cd6fcbaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559cd6fcbbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x559cd6fcbda8 <col:29>
| `-NonNullAttr 0x559cd6fcbe00 <col:70, col:84> 1
|-FunctionDecl 0x559cd6fcbf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cd6fcbe48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cd6fcc020 <line:555:22>
| `-NonNullAttr 0x559cd6fcc078 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fcc180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cd6fcc0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cd6fcc228 <line:557:22>
| `-NonNullAttr 0x559cd6fcc280 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fcc380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cd6fcc2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cd6fcc428 <line:559:19>
| `-NonNullAttr 0x559cd6fcc480 <col:49, col:63> 1
|-FunctionDecl 0x559cd6fcc6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559cd6fcc4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559cd6fcc558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559cd6fcc768 <col:39>
| `-NonNullAttr 0x559cd6fcc7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x559cd6fcc8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cd6fcc808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cd6fcc968 <line:564:22>
| `-NonNullAttr 0x559cd6fcc9c0 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fccb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cd6fcca70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cd6fccbd0 <line:566:22>
| `-NonNullAttr 0x559cd6fccc28 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fccde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559cd6fccc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559cd6fccd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559cd6fcce98 <col:39>
| `-NonNullAttr 0x559cd6fccef0 <col:69, col:86> 1 2
|-FunctionDecl 0x559cd6fccff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559cd6fccf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559cd6fcd098 <line:571:22>
| `-NonNullAttr 0x559cd6fcd0f0 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fcd2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559cd6fcd1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559cd6fcd380 <line:573:22>
| `-NonNullAttr 0x559cd6fcd3d8 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fcd4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559cd6fcd428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559cd6fcd588 <line:575:22>
| `-NonNullAttr 0x559cd6fcd5e0 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fcd808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fcd628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559cd6fcd6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x559cd6fcd8b8 <line:579:22>
| `-NonNullAttr 0x559cd6fcd910 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fcdb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fcd958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559cd6fcd9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x559cd6fcdbe8 <line:582:22>
| `-NonNullAttr 0x559cd6fcdc40 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fcdde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fcdc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559cd6fcdd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x559cd6fcde98 <line:586:22>
| `-NonNullAttr 0x559cd6fcdef0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fce078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fcdf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559cd6fcdfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559cd6fce128 <col:36>
| `-NonNullAttr 0x559cd6fce180 <col:77, col:91> 1
|-FunctionDecl 0x559cd6fce4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559cd6fce260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559cd6fce370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559cd6fce568 <line:591:22>
| `-NonNullAttr 0x559cd6fce5c0 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fce738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559cd6fce608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559cd6fce7e0 <line:593:22>
| `-NonNullAttr 0x559cd6fce838 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fce940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559cd6fce888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559cd6fce9e8 <line:595:22>
| `-NonNullAttr 0x559cd6fcea40 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fceb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559cd6fceaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559cd6fcec00 <line:597:22>
| `-NonNullAttr 0x559cd6fcec58 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fcee88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559cd6fceca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559cd6fced20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559cd6fcef38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x559cd6fcf268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559cd6fcefb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559cd6fcf030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559cd6fcf0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559cd6fcf320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x559cd6fcf538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559cd6fcf400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559cd6fcf5e0 <line:606:22>
| `-NonNullAttr 0x559cd6fcf638 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fcf740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559cd6fcf688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559cd6fcf7e8 <line:608:22>
| `-NonNullAttr 0x559cd6fcf840 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fcfaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fcf888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559cd6fcf908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559cd6fcfb50 <line:612:22>
| `-NonNullAttr 0x559cd6fcfba8 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fcfdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fcfbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559cd6fcfc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559cd6fcfe68 <col:37>
| `-NonNullAttr 0x559cd6fcfec0 <col:78, col:92> 1
|-FunctionDecl 0x559cd6fd00d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559cd6fcff08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559cd6fcffb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559cd6fd0188 <line:618:22>
| `-NonNullAttr 0x559cd6fd01e0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fd03a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559cd6fd0228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559cd6fd02a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559cd6fd0458 <line:621:22>
| `-NonNullAttr 0x559cd6fd04b0 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fd0758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559cd6fd0590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559cd6fd0610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559cd6fd0808 <line:623:22>
| `-NonNullAttr 0x559cd6fd0860 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fd09d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559cd6fd08a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559cd6fd0ab0 <line:625:22>
| `-NonNullAttr 0x559cd6fd0b08 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fd0c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559cd6fd0b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559cd6fd0cb8 <line:627:22>
| `-NonNullAttr 0x559cd6fd0d10 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fd0e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559cd6fd0d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559cd6fd0eb8 <line:629:22>
| `-NonNullAttr 0x559cd6fd0f10 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fd1010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559cd6fd0f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559cd6fd10b8 <line:631:22>
| `-NonNullAttr 0x559cd6fd1110 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fd14e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x559cd6fd11f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559cd6fd1300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559cd6fd1380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x559cd6fd15a0 <line:635:22>
| `-NonNullAttr 0x559cd6fd15f8 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fd1778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559cd6fd1648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559cd6fd1820 <line:637:22>
| `-NonNullAttr 0x559cd6fd1878 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fd1980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559cd6fd18c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559cd6fd1a28 <line:639:22>
| `-NonNullAttr 0x559cd6fd1a80 <col:52, col:66> 1
|-FunctionDecl 0x559cd6fd2c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559cd6fd2b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559cd6fd2d30 <line:641:22>
| `-NonNullAttr 0x559cd6fd2d88 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fd2e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559cd6fd2dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559cd6fd2f38 <line:643:22>
| `-NonNullAttr 0x559cd6fd2f90 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fd31b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559cd6fd2fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559cd6fd3058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559cd6fd3268 <line:647:22>
| `-NonNullAttr 0x559cd6fd32c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559cd6fd34c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559cd6fd3308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559cd6fd3388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559cd6fd3578 <line:650:22>
| `-NonNullAttr 0x559cd6fd35d0 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fd3918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x559cd6fd36b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x559cd6fd37d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x559cd6fd39c8 <line:653:22>
| `-NonNullAttr 0x559cd6fd3a20 <col:63, col:77> 1
|-FunctionDecl 0x559cd6fd3b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559cd6fd3a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559cd6fd3c30 <col:69>
|-FunctionDecl 0x559cd6fd3da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559cd6fd3c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559cd6fd3e50 <col:72>
|-FunctionDecl 0x559cd6fd4088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559cd6fd3eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559cd6fd3f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559cd6fd4138 <col:44>
|-FunctionDecl 0x559cd6fd4358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559cd6fd41a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559cd6fd4218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559cd6fd4408 <line:660:22>
| `-NonNullAttr 0x559cd6fd4460 <col:63, col:77> 2
|-FunctionDecl 0x559cd6fd48a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559cd6fd4540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559cd6fd4650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559cd6fd4760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559cd6fd4960 <col:47>
|-FunctionDecl 0x559cd6fd4af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559cd6fd49d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559cd6fd4c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559cd6fd4bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559cd6fd4da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x559cd6fd4d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559cd6fd4ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x559cd6fd4e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559cd6fd4fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559cd6fd5080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559cd6fd5140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559cd6fd51f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559cd6fd5278 prev 0x559cd6fd51f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559cd6fd52e0 <col:24> 'int' 0
|-VarDecl 0x559cd6fd5318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x559cd6fd5398 prev 0x559cd6fd5318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x559cd6fd5400 <col:27> 'int' 0
|-VarDecl 0x559cd6fd5438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x559cd6fd54b8 prev 0x559cd6fd5438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x559cd6fd5520 <col:27> 'int' 0
|-VarDecl 0x559cd6fd5558 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x559cd6fd55d8 prev 0x559cd6fd5558 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x559cd6fd5640 <col:27> 'int' 0
|-VarDecl 0x559cd6fd5678 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x559cd6fd56f8 prev 0x559cd6fd5678 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x559cd6fd5760 <col:27> 'int' 0
|-VarDecl 0x559cd6fd5798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x559cd6fd5818 prev 0x559cd6fd5798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x559cd6fd5880 <col:9> 'int' 0
|-VarDecl 0x559cd6fd58b0 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x559cd6fd5930 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x559cd6fd59a8 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x559cd6fd5a20 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x559cd6fd5b00 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x559cd6fd5b78 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x559cd6fd5bf0 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x559cd6fd5c68 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x559cd6fd5ce0 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x559cd6fd5d58 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x559cd6fd5dd0 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x559cd6fd5e48 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x559cd6fd5ec0 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x559cd6fd5f40 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x559cd6fd5fc0 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x559cd6fd6038 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x559cd6fd60b8 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x559cd6fd6130 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x559cd6fd61a8 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559cd6fd6220 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559cd6fd62a0 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x559cd6fd6320 prev 0x559cd6fd62a0 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559cd6fd6388 <col:9> 'int' 0
|-VarDecl 0x559cd6fd63c0 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x559cd6fd6440 prev 0x559cd6fd63c0 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559cd6fd64a8 <col:9> 'int' 0
|-VarDecl 0x559cd6fd64e0 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x559cd6fd6560 prev 0x559cd6fd64e0 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x559cd6fd65c8 <col:9> 'int' 0
|-VarDecl 0x559cd6fd65f8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559cd6fd6670 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559cd6fd6788 prev 0x559cd6fd4af0 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559cd6fd66f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559cd6fd8048 <line:713:1, line:741:1>
|   |-CallExpr 0x559cd6fd6898 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd6880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd6830 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fd6910 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd68b8 <col:3> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x559cd6fd68f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fd68d8 <col:15> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x559cd6fd6970 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd6930 <col:3> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x559cd6fd6950 <col:15> 'int' 1
|   |-BinaryOperator 0x559cd6fd69e8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd6990 <col:3> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd69d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fd69b0 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cd6fd6a80 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd6a08 <col:3> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559cd6fd6a58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559cd6fd6a28 <col:27> 'int' 1
|   |-CallExpr 0x559cd6fd6c18 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559cd6fd6c00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559cd6fd6aa0 <col:3> 'void (int)' Function 0x559cd6f7bbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559cd6fd6bb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559cd6fd6b90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559cd6fd6b70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559cd6fd6b28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559cd6fd6b10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559cd6fd6ac0 <col:23> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559cd6fd6b58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559cd6fd6b40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559cd6fd6ae0 <col:41> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cd6fd6c98 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd6c40 <col:3> '_Bool' lvalue Var 0x559cd6fd5c68 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd6c80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fd6c60 <col:20> '_Bool' lvalue Var 0x559cd6fd59a8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559cd6fd6d10 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd6cb8 <col:3> '_Bool' lvalue Var 0x559cd6fd5ce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd6cf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fd6cd8 <col:20> '_Bool' lvalue Var 0x559cd6fd5a20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559cd6fd6d88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd6d30 <col:3> '_Bool' lvalue Var 0x559cd6fd5d58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd6d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fd6d50 <col:20> '_Bool' lvalue Var 0x559cd6fd5b00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559cd6fd6e00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd6da8 <col:3> '_Bool' lvalue Var 0x559cd6fd5dd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd6de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fd6dc8 <col:20> '_Bool' lvalue Var 0x559cd6fd5b78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559cd6fd6e78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd6e20 <col:3> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd6e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fd6e40 <col:20> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559cd6fd6f10 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd6e98 <col:3> '_Bool' lvalue Var 0x559cd6fd5a20 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x559cd6fd6ee8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559cd6fd6eb8 <col:27> 'int' 1
|   |-CallExpr 0x559cd6fd6f68 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd6f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd6f30 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fd6fc0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd6fa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd6f88 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fd7038 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd6fe0 <col:3> 'int' lvalue Var 0x559cd6fd5398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x559cd6fd7020 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fd7000 <col:25> 'int' lvalue Var 0x559cd6fd6320 'x' 'int'
|   |-CallExpr 0x559cd6fd7090 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd7078 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd7058 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fd70e8 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd70d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd70b0 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fd73d0 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd7108 <col:3> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   | `-ConditionalOperator 0x559cd6fd73a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559cd6fd71c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559cd6fd7180 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559cd6fd7168 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559cd6fd7128 <col:7> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559cd6fd71b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559cd6fd7198 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559cd6fd7148 <col:25> '_Bool' lvalue Var 0x559cd6fd5a20 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559cd6fd7388 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fd71e8 <col:42> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x559cd6fd7368 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559cd6fd7338 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559cd6fd72a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559cd6fd7260 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559cd6fd7248 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559cd6fd7208 <col:55> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559cd6fd7290 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559cd6fd7278 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559cd6fd7228 <col:73> '_Bool' lvalue Var 0x559cd6fd5ce0 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559cd6fd7308 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cd6fd72c8 <col:90> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559cd6fd7320 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd72e8 <col:102> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   |-BinaryOperator 0x559cd6fd75d8 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd73f0 <col:3> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd75c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fd7590 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cd6fd74b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cd6fd7468 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cd6fd7450 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cd6fd7410 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cd6fd7498 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cd6fd7480 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cd6fd7430 <col:38> '_Bool' lvalue Var 0x559cd6fd5a20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fd7548 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fd7500 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fd74d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fd7578 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fd7560 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd7528 <col:66> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cd6fd78c0 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd75f8 <col:3> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd78a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fd7878 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cd6fd7798 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cd6fd76b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cd6fd7670 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cd6fd7658 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cd6fd7618 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cd6fd76a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cd6fd7688 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cd6fd7638 <col:38> '_Bool' lvalue Var 0x559cd6fd5a20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559cd6fd7778 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cd6fd7730 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cd6fd7718 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cd6fd76d8 <col:56> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cd6fd7760 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cd6fd7748 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cd6fd76f8 <col:74> '_Bool' lvalue Var 0x559cd6fd5ce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fd7830 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fd77e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fd77b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fd7860 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fd7848 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd7810 <col:102> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559cd6fd7ac8 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd78e0 <col:3> '_Bool' lvalue Var 0x559cd6fd5a20 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd7ab0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fd7a80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cd6fd79a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cd6fd7958 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cd6fd7940 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cd6fd7900 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cd6fd7988 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cd6fd7970 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cd6fd7920 <col:38> '_Bool' lvalue Var 0x559cd6fd5a20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fd7a38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fd79f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fd79c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fd7a68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fd7a50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd7a18 <col:66> '_Bool' lvalue Var 0x559cd6fd5a20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559cd6fd7dc8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd7ae8 <col:3> '_Bool' lvalue Var 0x559cd6fd5ce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd7db0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fd7d80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cd6fd7ca0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cd6fd7bc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cd6fd7b78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cd6fd7b60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cd6fd7b20 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cd6fd7ba8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cd6fd7b90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cd6fd7b40 <col:38> '_Bool' lvalue Var 0x559cd6fd5a20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559cd6fd7c80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cd6fd7c38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cd6fd7c20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cd6fd7be0 <col:56> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cd6fd7c68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cd6fd7c50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cd6fd7c00 <col:74> '_Bool' lvalue Var 0x559cd6fd5ce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fd7d38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fd7cf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fd7cc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fd7d68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fd7d50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd7d18 <col:102> '_Bool' lvalue Var 0x559cd6fd5ce0 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559cd6fd7e20 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd7e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd7de8 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fd7e78 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd7e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd7e40 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fd7f30 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd7e98 <col:3> 'int' lvalue Var 0x559cd6fd5278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559cd6fd7f10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559cd6fd7ef8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fd7eb8 <col:22> 'int' lvalue Var 0x559cd6fd5278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559cd6fd7ed8 <col:41> 'int' 1
|   |-CallExpr 0x559cd6fd7f88 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd7f70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd7f50 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559cd6fd8038 <line:740:3, col:36>
|     `-CallExpr 0x559cd6fd8018 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559cd6fd8000 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559cd6fd7fa8 <col:10> 'void *(void)' Function 0x559cd6f7b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559cd6fd81e0 prev 0x559cd6fd4c48 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559cd6fd8148 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559cd6fd9430 <line:743:1, line:761:1>
|   |-CallExpr 0x559cd6fd82c0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd82a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd8288 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fd8320 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd82e0 <col:3> 'int' lvalue Var 0x559cd6fd6320 'x' 'int'
|   | `-IntegerLiteral 0x559cd6fd8300 <col:7> 'int' 1
|   |-CallExpr 0x559cd6fd8378 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd8360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd8340 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fd83d0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd83b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd8398 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fd8448 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd83f0 <col:3> 'int' lvalue Var 0x559cd6fd54b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x559cd6fd8430 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fd8410 <col:25> 'int' lvalue Var 0x559cd6fd6440 'y' 'int'
|   |-CallExpr 0x559cd6fd84a0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd8488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd8468 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fd84f8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd84e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd84c0 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fd87e0 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd8518 <col:3> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   | `-ConditionalOperator 0x559cd6fd87b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559cd6fd85d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559cd6fd8590 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559cd6fd8578 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559cd6fd8538 <col:7> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559cd6fd85c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559cd6fd85a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559cd6fd8558 <col:25> '_Bool' lvalue Var 0x559cd6fd5b00 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559cd6fd8798 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fd85f8 <col:42> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x559cd6fd8778 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559cd6fd8748 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559cd6fd86b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559cd6fd8670 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559cd6fd8658 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559cd6fd8618 <col:55> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559cd6fd86a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559cd6fd8688 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559cd6fd8638 <col:73> '_Bool' lvalue Var 0x559cd6fd5d58 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559cd6fd8718 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cd6fd86d8 <col:90> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559cd6fd8730 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd86f8 <col:102> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   |-BinaryOperator 0x559cd6fd89e8 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd8800 <col:3> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd89d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fd89a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cd6fd88c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cd6fd8878 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cd6fd8860 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cd6fd8820 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cd6fd88a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cd6fd8890 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cd6fd8840 <col:38> '_Bool' lvalue Var 0x559cd6fd5b00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fd8958 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fd8910 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fd88e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fd8988 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fd8970 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd8938 <col:66> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cd6fd8cf8 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd8a08 <col:3> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd8ce0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fd8cb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cd6fd8bd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cd6fd8ac8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cd6fd8a80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cd6fd8a68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cd6fd8a28 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cd6fd8ab0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cd6fd8a98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cd6fd8a48 <col:38> '_Bool' lvalue Var 0x559cd6fd5b00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559cd6fd8bb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cd6fd8b68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cd6fd8b50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cd6fd8ae8 <col:56> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cd6fd8b98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cd6fd8b80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cd6fd8b30 <col:74> '_Bool' lvalue Var 0x559cd6fd5d58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fd8c68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fd8c20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fd8bf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fd8c98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fd8c80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd8c48 <col:102> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559cd6fd8f00 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd8d18 <col:3> '_Bool' lvalue Var 0x559cd6fd5b00 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd8ee8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fd8eb8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cd6fd8dd8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cd6fd8d90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cd6fd8d78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cd6fd8d38 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cd6fd8dc0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cd6fd8da8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cd6fd8d58 <col:38> '_Bool' lvalue Var 0x559cd6fd5b00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fd8e70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fd8e28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fd8df8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fd8ea0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fd8e88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd8e50 <col:66> '_Bool' lvalue Var 0x559cd6fd5b00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559cd6fd91e8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd8f20 <col:3> '_Bool' lvalue Var 0x559cd6fd5d58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd91d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fd91a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cd6fd90c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cd6fd8fe0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cd6fd8f98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cd6fd8f80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cd6fd8f40 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cd6fd8fc8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cd6fd8fb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cd6fd8f60 <col:38> '_Bool' lvalue Var 0x559cd6fd5b00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559cd6fd90a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cd6fd9058 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cd6fd9040 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cd6fd9000 <col:56> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cd6fd9088 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cd6fd9070 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cd6fd9020 <col:74> '_Bool' lvalue Var 0x559cd6fd5d58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fd9158 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fd9110 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fd90e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fd9188 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fd9170 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd9138 <col:102> '_Bool' lvalue Var 0x559cd6fd5d58 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x559cd6fd9240 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd9228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd9208 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fd9298 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd9280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd9260 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fd9350 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd92b8 <col:3> 'int' lvalue Var 0x559cd6fd5278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559cd6fd9330 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559cd6fd9318 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fd92d8 <col:22> 'int' lvalue Var 0x559cd6fd5278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559cd6fd92f8 <col:41> 'int' 1
|   |-CallExpr 0x559cd6fd93a8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd9390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd9370 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559cd6fd9420 <line:760:3, col:36>
|     `-CallExpr 0x559cd6fd9400 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559cd6fd93e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559cd6fd93c8 <col:10> 'void *(void)' Function 0x559cd6f7b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559cd6fd9578 prev 0x559cd6fd4da0 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x559cd6fd94e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559cd6fda7b0 <line:763:1, line:781:1>
|   |-CallExpr 0x559cd6fd9658 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd9640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd9620 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fd96b8 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd9678 <col:3> 'int' lvalue Var 0x559cd6fd6440 'y' 'int'
|   | `-IntegerLiteral 0x559cd6fd9698 <col:7> 'int' 1
|   |-CallExpr 0x559cd6fd9710 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd96f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd96d8 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fd9768 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd9750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd9730 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fd97e0 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd9788 <col:3> 'int' lvalue Var 0x559cd6fd55d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x559cd6fd97c8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fd97a8 <col:25> 'int' lvalue Var 0x559cd6fd6560 'z' 'int'
|   |-CallExpr 0x559cd6fd9838 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd9820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd9800 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fd9890 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fd9878 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fd9858 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fd9b88 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559cd6fd98b0 <col:3> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   | `-ConditionalOperator 0x559cd6fd9b58 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559cd6fd9970 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559cd6fd9928 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559cd6fd9910 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559cd6fd98d0 <col:7> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559cd6fd9958 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559cd6fd9940 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559cd6fd98f0 <col:25> '_Bool' lvalue Var 0x559cd6fd5b78 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559cd6fd9b40 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fd9990 <col:42> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x559cd6fd9b10 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559cd6fd9ae0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559cd6fd9a50 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559cd6fd9a08 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559cd6fd99f0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559cd6fd99b0 <col:55> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559cd6fd9a38 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559cd6fd9a20 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559cd6fd99d0 <col:73> '_Bool' lvalue Var 0x559cd6fd5dd0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559cd6fd9ab0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cd6fd9a70 <col:90> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559cd6fd9ac8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd9a90 <col:102> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   |-BinaryOperator 0x559cd6fd9d90 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd9ba8 <col:3> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fd9d78 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fd9d48 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cd6fd9c68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cd6fd9c20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cd6fd9c08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cd6fd9bc8 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cd6fd9c50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cd6fd9c38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cd6fd9be8 <col:38> '_Bool' lvalue Var 0x559cd6fd5b78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fd9d00 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fd9cb8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fd9c88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fd9d30 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fd9d18 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd9ce0 <col:66> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cd6fda078 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fd9db0 <col:3> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fda060 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fda030 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cd6fd9f50 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cd6fd9e70 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cd6fd9e28 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cd6fd9e10 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cd6fd9dd0 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cd6fd9e58 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cd6fd9e40 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cd6fd9df0 <col:38> '_Bool' lvalue Var 0x559cd6fd5b78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559cd6fd9f30 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cd6fd9ee8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cd6fd9ed0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cd6fd9e90 <col:56> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cd6fd9f18 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cd6fd9f00 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cd6fd9eb0 <col:74> '_Bool' lvalue Var 0x559cd6fd5dd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fd9fe8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fd9fa0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fd9f70 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fda018 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fda000 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fd9fc8 <col:102> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559cd6fda280 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fda098 <col:3> '_Bool' lvalue Var 0x559cd6fd5b78 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fda268 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fda238 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cd6fda158 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cd6fda110 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cd6fda0f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cd6fda0b8 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cd6fda140 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cd6fda128 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cd6fda0d8 <col:38> '_Bool' lvalue Var 0x559cd6fd5b78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fda1f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fda1a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fda178 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fda220 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fda208 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fda1d0 <col:66> '_Bool' lvalue Var 0x559cd6fd5b78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559cd6fda568 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fda2a0 <col:3> '_Bool' lvalue Var 0x559cd6fd5dd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fda550 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fda520 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cd6fda440 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cd6fda360 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cd6fda318 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cd6fda300 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cd6fda2c0 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cd6fda348 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cd6fda330 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cd6fda2e0 <col:38> '_Bool' lvalue Var 0x559cd6fd5b78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559cd6fda420 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cd6fda3d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cd6fda3c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cd6fda380 <col:56> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cd6fda408 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cd6fda3f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cd6fda3a0 <col:74> '_Bool' lvalue Var 0x559cd6fd5dd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fda4d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fda490 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fda460 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fda508 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fda4f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fda4b8 <col:102> '_Bool' lvalue Var 0x559cd6fd5dd0 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x559cd6fda5c0 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fda5a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fda588 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fda618 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fda600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fda5e0 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fda6d0 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559cd6fda638 <col:3> 'int' lvalue Var 0x559cd6fd5278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559cd6fda6b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559cd6fda698 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fda658 <col:22> 'int' lvalue Var 0x559cd6fd5278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559cd6fda678 <col:41> 'int' 1
|   |-CallExpr 0x559cd6fda728 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fda710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fda6f0 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559cd6fda7a0 <line:780:3, col:36>
|     `-CallExpr 0x559cd6fda780 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559cd6fda768 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559cd6fda748 <col:10> 'void *(void)' Function 0x559cd6f7b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559cd6fda8f8 prev 0x559cd6fd4ef8 <line:782:1, line:814:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x559cd6fda860 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559cd6fde4d8 <line:783:1, line:814:1>
|   |-CallExpr 0x559cd6fda9d8 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fda9c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fda9a0 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fdaa38 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559cd6fda9f8 <col:3> 'int' lvalue Var 0x559cd6fd6560 'z' 'int'
|   | `-IntegerLiteral 0x559cd6fdaa18 <col:7> 'int' 1
|   |-CallExpr 0x559cd6fdaa90 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fdaa78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fdaa58 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fdaae8 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fdaad0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fdaab0 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fdabc0 <line:788:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fdab08 <col:3> '_Bool' lvalue Var 0x559cd6fd65f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fdaba8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559cd6fdab88 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559cd6fdab70 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559cd6fdab50 <col:19> 'void *(void)' Function 0x559cd6f7b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559cd6fdac70 <line:789:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fdabe0 <col:3> '_Bool' lvalue Var 0x559cd6fd6670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fdac58 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559cd6fdac38 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559cd6fdac20 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559cd6fdac00 <col:19> 'void *(void)' Function 0x559cd6f7b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559cd6fdace8 <line:790:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fdac90 <col:3> '_Bool' lvalue Var 0x559cd6fd58b0 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fdacd0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fdacb0 <col:21> '_Bool' lvalue Var 0x559cd6fd6670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559cd6fdad60 <line:791:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559cd6fdad08 <col:3> 'int' lvalue Var 0x559cd6fd5930 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559cd6fdad48 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fdad28 <col:15> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   |-BinaryOperator 0x559cd6fdb198 <line:792:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559cd6fdad80 <col:3> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   | `-ConditionalOperator 0x559cd6fdb168 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559cd6fdaf90 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559cd6fdaeb0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559cd6fdadd8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559cd6fdadc0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559cd6fdada0 <col:8> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559cd6fdae90 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559cd6fdae28 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559cd6fdae10 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559cd6fdadf0 <col:27> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x559cd6fdae78 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559cd6fdae60 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559cd6fdae40 <col:46> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559cd6fdaf70 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559cd6fdaf08 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559cd6fdaef0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559cd6fdaed0 <col:65> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x559cd6fdaf58 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559cd6fdaf40 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559cd6fdaf20 <col:84> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x559cd6fdb150 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fdafb0 <col:101> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   |   `-ParenExpr 0x559cd6fdb130 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559cd6fdb100 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559cd6fdb070 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559cd6fdb028 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559cd6fdb010 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559cd6fdafd0 <col:106> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559cd6fdb058 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559cd6fdb040 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559cd6fdaff0 <col:124> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559cd6fdb0d0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cd6fdb090 <col:141> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559cd6fdb0e8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fdb0b0 <col:153> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x559cd6fdb6a8 <line:793:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559cd6fdb1b8 <col:3> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x559cd6fdb678 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559cd6fdb648 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559cd6fdb630 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559cd6fdb1d8 <col:15> '_Bool' lvalue Var 0x559cd6fd6670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559cd6fdb660 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fdb1f8 <col:31> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x559cd6fdb610 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559cd6fdb5e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559cd6fdb408 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559cd6fdb328 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559cd6fdb250 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559cd6fdb238 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559cd6fdb218 <col:45> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559cd6fdb308 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559cd6fdb2a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559cd6fdb288 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559cd6fdb268 <col:64> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x559cd6fdb2f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559cd6fdb2d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559cd6fdb2b8 <col:83> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559cd6fdb3e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559cd6fdb380 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559cd6fdb368 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559cd6fdb348 <col:102> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x559cd6fdb3d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559cd6fdb3b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559cd6fdb398 <col:121> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559cd6fdb5c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cd6fdb428 <col:138> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x559cd6fdb5a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559cd6fdb578 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559cd6fdb4e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559cd6fdb4a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559cd6fdb488 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559cd6fdb448 <col:151> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559cd6fdb4d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559cd6fdb4b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559cd6fdb468 <col:169> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x559cd6fdb548 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559cd6fdb508 <col:186> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559cd6fdb560 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559cd6fdb528 <col:198> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x559cd6fdbbd8 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559cd6fdb6c8 <col:3> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x559cd6fdbba8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559cd6fdbb78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559cd6fdbb60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559cd6fdb6e8 <col:15> '_Bool' lvalue Var 0x559cd6fd6670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559cd6fdbb90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fdb708 <col:31> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x559cd6fdbb20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559cd6fdbaf0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559cd6fdb918 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559cd6fdb838 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559cd6fdb760 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559cd6fdb748 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559cd6fdb728 <col:45> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559cd6fdb818 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559cd6fdb7b0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559cd6fdb798 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559cd6fdb778 <col:64> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x559cd6fdb800 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559cd6fdb7e8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559cd6fdb7c8 <col:83> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559cd6fdb8f8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559cd6fdb890 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559cd6fdb878 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559cd6fdb858 <col:102> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x559cd6fdb8e0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559cd6fdb8c8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559cd6fdb8a8 <col:121> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559cd6fdbad8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cd6fdb938 <col:138> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x559cd6fdbab8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559cd6fdba88 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559cd6fdb9f8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559cd6fdb9b0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559cd6fdb998 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559cd6fdb958 <col:151> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559cd6fdb9e0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559cd6fdb9c8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559cd6fdb978 <col:169> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x559cd6fdba58 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559cd6fdba18 <col:186> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559cd6fdba70 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559cd6fdba38 <col:198> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x559cd6fdc180 <line:795:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fdbbf8 <col:3> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fdc168 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fdc138 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559cd6fdc0f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cd6fdc0d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cd6fdbc18 <col:20> '_Bool' lvalue Var 0x559cd6fd6670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fdc120 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cd6fdc108 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cd6fdbc38 <col:36> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559cd6fdc0b8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559cd6fdc088 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559cd6fdbe48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cd6fdbd68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cd6fdbc90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cd6fdbc78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cd6fdbc58 <col:55> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cd6fdbd48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cd6fdbce0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cd6fdbcc8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cd6fdbca8 <col:74> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559cd6fdbd30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cd6fdbd18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cd6fdbcf8 <col:93> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cd6fdbe28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cd6fdbdc0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cd6fdbda8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cd6fdbd88 <col:112> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559cd6fdbe10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cd6fdbdf8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cd6fdbdd8 <col:131> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559cd6fdc070 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cd6fdc058 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cd6fdbe68 <col:148> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559cd6fdc038 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559cd6fdc008 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559cd6fdbf28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cd6fdbee0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cd6fdbec8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cd6fdbe88 <col:166> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cd6fdbf10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cd6fdbef8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cd6fdbea8 <col:184> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559cd6fdbfc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cd6fdbf78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cd6fdbf48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cd6fdbff0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559cd6fdbfd8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559cd6fdbfa0 <col:212> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cd6fdc748 <line:796:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fdc1a0 <col:3> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fdc730 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fdc700 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559cd6fdc6b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cd6fdc6a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cd6fdc1c0 <col:20> '_Bool' lvalue Var 0x559cd6fd6670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fdc6e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cd6fdc6d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cd6fdc1e0 <col:36> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559cd6fdc680 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559cd6fdc650 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559cd6fdc3f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cd6fdc310 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cd6fdc238 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cd6fdc220 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cd6fdc200 <col:55> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cd6fdc2f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cd6fdc288 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cd6fdc270 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cd6fdc250 <col:74> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559cd6fdc2d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cd6fdc2c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cd6fdc2a0 <col:93> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cd6fdc3d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cd6fdc368 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cd6fdc350 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cd6fdc330 <col:112> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559cd6fdc3b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cd6fdc3a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cd6fdc380 <col:131> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559cd6fdc638 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cd6fdc620 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cd6fdc410 <col:148> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559cd6fdc600 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559cd6fdc5d0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559cd6fdc4d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cd6fdc488 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cd6fdc470 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cd6fdc430 <col:166> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cd6fdc4b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cd6fdc4a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cd6fdc450 <col:184> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559cd6fdc5a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cd6fdc520 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cd6fdc4f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cd6fdc5b8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559cd6fdc578 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559cd6fdc548 <col:219> 'int' 0
|   |-BinaryOperator 0x559cd6fdcd00 <line:797:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fdc768 <col:3> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fdcce8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fdccb8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559cd6fdcc70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cd6fdcc58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cd6fdc788 <col:20> '_Bool' lvalue Var 0x559cd6fd6670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fdcca0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cd6fdcc88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cd6fdc7a8 <col:36> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x559cd6fdcc38 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559cd6fdcc08 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559cd6fdc9b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cd6fdc8d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cd6fdc800 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cd6fdc7e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cd6fdc7c8 <col:55> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cd6fdc8b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cd6fdc850 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cd6fdc838 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cd6fdc818 <col:74> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559cd6fdc8a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cd6fdc888 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cd6fdc868 <col:93> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cd6fdc998 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cd6fdc930 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cd6fdc918 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cd6fdc8f8 <col:112> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559cd6fdc980 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cd6fdc968 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cd6fdc948 <col:131> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559cd6fdcbf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cd6fdcbd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cd6fdc9d8 <col:148> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x559cd6fdcbb8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559cd6fdcb88 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559cd6fdca98 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cd6fdca50 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cd6fdca38 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cd6fdc9f8 <col:166> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cd6fdca80 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cd6fdca68 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cd6fdca18 <col:184> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559cd6fdcb30 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cd6fdcae8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cd6fdcab8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cd6fdcb70 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559cd6fdcb48 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559cd6fdcb10 <col:212> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559cd6fdd2c8 <line:798:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fdcd20 <col:3> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fdd2b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fdd280 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559cd6fdd238 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cd6fdd220 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cd6fdcd40 <col:20> '_Bool' lvalue Var 0x559cd6fd6670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fdd268 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559cd6fdd250 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559cd6fdcd60 <col:36> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x559cd6fdd200 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559cd6fdd1d0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559cd6fdcf70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559cd6fdce90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559cd6fdcdb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559cd6fdcda0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559cd6fdcd80 <col:55> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559cd6fdce70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559cd6fdce08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559cd6fdcdf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559cd6fdcdd0 <col:74> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559cd6fdce58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559cd6fdce40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559cd6fdce20 <col:93> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559cd6fdcf50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559cd6fdcee8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559cd6fdced0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559cd6fdceb0 <col:112> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559cd6fdcf38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559cd6fdcf20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559cd6fdcf00 <col:131> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559cd6fdd1b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559cd6fdd1a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559cd6fdcf90 <col:148> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x559cd6fdd180 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559cd6fdd150 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559cd6fdd050 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559cd6fdd008 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559cd6fdcff0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559cd6fdcfb0 <col:166> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559cd6fdd038 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559cd6fdd020 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559cd6fdcfd0 <col:184> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559cd6fdd120 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559cd6fdd0a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559cd6fdd070 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559cd6fdd138 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559cd6fdd0f8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559cd6fdd0c8 <col:219> 'int' 0
|   |-BinaryOperator 0x559cd6fdd340 <line:799:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559cd6fdd2e8 <col:3> 'int' lvalue Var 0x559cd6fd56f8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x559cd6fdd328 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559cd6fdd308 <col:25> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   |-BinaryOperator 0x559cd6fdd470 <line:800:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559cd6fdd360 <col:3> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   | `-ConditionalOperator 0x559cd6fdd440 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559cd6fdd3f8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559cd6fdd3e0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559cd6fdd380 <col:7> '_Bool' lvalue Var 0x559cd6fd58b0 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559cd6fdd410 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fdd3a0 <col:25> 'int' lvalue Var 0x559cd6fd5930 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559cd6fdd428 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559cd6fdd3c0 <col:37> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   |-BinaryOperator 0x559cd6fdd508 <line:801:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fdd490 <col:3> '_Bool' lvalue Var 0x559cd6fd58b0 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559cd6fdd4e0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559cd6fdd4b0 <col:28> 'int' 0
|   |-CallExpr 0x559cd6fdd560 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fdd548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fdd528 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fdd5b8 <line:803:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fdd5a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fdd580 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fdd8a0 <line:804:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559cd6fdd5d8 <col:3> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   | `-ConditionalOperator 0x559cd6fdd870 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559cd6fdd698 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559cd6fdd650 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559cd6fdd638 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559cd6fdd5f8 <col:7> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559cd6fdd680 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559cd6fdd668 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559cd6fdd618 <col:25> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x559cd6fdd858 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fdd6b8 <col:42> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x559cd6fdd838 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559cd6fdd808 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559cd6fdd778 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559cd6fdd730 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559cd6fdd718 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559cd6fdd6d8 <col:55> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559cd6fdd760 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559cd6fdd748 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559cd6fdd6f8 <col:73> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559cd6fdd7d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559cd6fdd798 <col:90> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559cd6fdd7f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fdd7b8 <col:102> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
|   |-BinaryOperator 0x559cd6fddaa8 <line:805:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fdd8c0 <col:3> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fdda90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fdda60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cd6fdd980 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cd6fdd938 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cd6fdd920 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cd6fdd8e0 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cd6fdd968 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cd6fdd950 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cd6fdd900 <col:38> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fdda18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fdd9d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fdd9a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fdda48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fdda30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fdd9f8 <col:66> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559cd6fddda0 <line:806:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fddac8 <col:3> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fddd88 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fddd58 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cd6fddc78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cd6fddb98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cd6fddb40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cd6fddb28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cd6fddae8 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cd6fddb80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cd6fddb58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cd6fddb08 <col:38> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559cd6fddc58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cd6fddc10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cd6fddbf8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cd6fddbb8 <col:56> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cd6fddc40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cd6fddc28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cd6fddbd8 <col:74> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fddd10 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fddcc8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fddc98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fddd40 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fddd28 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fddcf0 <col:102> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559cd6fddfa8 <line:807:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fdddc0 <col:3> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fddf90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fddf60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559cd6fdde80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559cd6fdde38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559cd6fdde20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559cd6fddde0 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559cd6fdde68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559cd6fdde50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559cd6fdde00 <col:38> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fddf18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fdded0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fddea0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fddf48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fddf30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fddef8 <col:66> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559cd6fde290 <line:808:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559cd6fddfc8 <col:3> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559cd6fde278 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559cd6fde248 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559cd6fde168 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559cd6fde088 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559cd6fde040 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559cd6fde028 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559cd6fddfe8 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559cd6fde070 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559cd6fde058 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559cd6fde008 <col:38> '_Bool' lvalue Var 0x559cd6fd5bf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559cd6fde148 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559cd6fde100 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559cd6fde0e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559cd6fde0a8 <col:56> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559cd6fde130 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559cd6fde118 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559cd6fde0c8 <col:74> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559cd6fde200 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559cd6fde1b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559cd6fde188 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559cd6fde230 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559cd6fde218 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559cd6fde1e0 <col:102> '_Bool' lvalue Var 0x559cd6fd5e48 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x559cd6fde2e8 <line:809:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fde2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fde2b0 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559cd6fde340 <line:810:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559cd6fde328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fde308 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559cd6fde3f8 <line:811:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559cd6fde360 <col:3> 'int' lvalue Var 0x559cd6fd5278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559cd6fde3d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559cd6fde3c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559cd6fde380 <col:22> 'int' lvalue Var 0x559cd6fd5278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559cd6fde3a0 <col:41> 'int' 1
|   |-CallExpr 0x559cd6fde450 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559cd6fde438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559cd6fde418 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559cd6fde4c8 <line:813:3, col:36>
|     `-CallExpr 0x559cd6fde4a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559cd6fde490 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559cd6fde470 <col:10> 'void *(void)' Function 0x559cd6f7b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559cd6fde5f8 prev 0x559cd6fd4fc0 <line:815:1, line:817:1> line:815:6 fence 'void ()'
| `-CompoundStmt 0x559cd6fde698 <line:816:1, line:817:1>
|-FunctionDecl 0x559cd6fde6c8 prev 0x559cd6fd5080 <line:818:1, line:820:1> line:818:6 isync 'void ()'
| `-CompoundStmt 0x559cd6fde768 <line:819:1, line:820:1>
|-FunctionDecl 0x559cd6fde798 prev 0x559cd6fd5140 <line:821:1, line:823:1> line:821:6 lwfence 'void ()'
| `-CompoundStmt 0x559cd6fde838 <line:822:1, line:823:1>
`-FunctionDecl 0x559cd6fde8a8 <line:824:1, line:850:1> line:824:5 main 'int ()'
  `-CompoundStmt 0x559cd6fe0810 <line:825:1, line:850:1>
    |-DeclStmt 0x559cd6fde9c0 <line:826:3, col:18>
    | `-VarDecl 0x559cd6fde958 <col:3, col:13> col:13 used t1331 'pthread_t':'unsigned long'
    |-CallExpr 0x559cd6fdebd8 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559cd6fdebc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cd6fde9d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559cd6fbc488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559cd6fdea18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559cd6fde9f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559cd6fde958 't1331' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559cd6fdec18 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559cd6fdea90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559cd6fdea68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559cd6fdea30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559cd6fdec30 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cd6fdeab0 <col:39> 'void *(void *)' Function 0x559cd6fd6788 'P0' 'void *(void *)'
    | `-ParenExpr 0x559cd6fdeb30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559cd6fdeb08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559cd6fdead0 <col:52> 'int' 0
    |-DeclStmt 0x559cd6fdecc0 <line:828:3, col:18>
    | `-VarDecl 0x559cd6fdec58 <col:3, col:13> col:13 used t1332 'pthread_t':'unsigned long'
    |-CallExpr 0x559cd6fdee68 <line:829:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559cd6fdee50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cd6fdecd8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559cd6fbc488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559cd6fded18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559cd6fdecf8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559cd6fdec58 't1332' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559cd6fdeea8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559cd6fded90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559cd6fded68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559cd6fded30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559cd6fdeec0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cd6fdedb0 <col:39> 'void *(void *)' Function 0x559cd6fd81e0 'P1' 'void *(void *)'
    | `-ParenExpr 0x559cd6fdee30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559cd6fdee08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559cd6fdedd0 <col:52> 'int' 0
    |-DeclStmt 0x559cd6fdef50 <line:830:3, col:18>
    | `-VarDecl 0x559cd6fdeee8 <col:3, col:13> col:13 used t1333 'pthread_t':'unsigned long'
    |-CallExpr 0x559cd6fdf0f8 <line:831:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559cd6fdf0e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cd6fdef68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559cd6fbc488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559cd6fdefa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559cd6fdef88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559cd6fdeee8 't1333' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559cd6fdf138 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559cd6fdf020 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559cd6fdeff8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559cd6fdefc0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559cd6fdf150 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cd6fdf040 <col:39> 'void *(void *)' Function 0x559cd6fd9578 'P2' 'void *(void *)'
    | `-ParenExpr 0x559cd6fdf0c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559cd6fdf098 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559cd6fdf060 <col:52> 'int' 0
    |-DeclStmt 0x559cd6fdf1e0 <line:832:3, col:18>
    | `-VarDecl 0x559cd6fdf178 <col:3, col:13> col:13 used t1334 'pthread_t':'unsigned long'
    |-CallExpr 0x559cd6fdf388 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559cd6fdf370 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cd6fdf1f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559cd6fbc488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559cd6fdf238 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559cd6fdf218 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559cd6fdf178 't1334' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559cd6fdf3c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559cd6fdf2b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559cd6fdf288 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559cd6fdf250 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559cd6fdf3e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cd6fdf2d0 <col:39> 'void *(void *)' Function 0x559cd6fda8f8 'P3' 'void *(void *)'
    | `-ParenExpr 0x559cd6fdf350 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559cd6fdf328 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559cd6fdf2f0 <col:52> 'int' 0
    |-CallExpr 0x559cd6fdf430 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559cd6fdf418 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cd6fdf3f8 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559cd6fdf500 <line:835:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559cd6fdf450 <col:3> '_Bool' lvalue Var 0x559cd6fd61a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559cd6fdf4e8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559cd6fdf4c8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559cd6fdf4b0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559cd6fdf470 <col:21> 'int' lvalue Var 0x559cd6fd5278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559cd6fdf490 <col:41> 'int' 4
    |-CallExpr 0x559cd6fdf558 <line:836:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559cd6fdf540 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cd6fdf520 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559cd6fdf5d0 <line:837:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559cd6fdf5b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cd6fdf578 <col:3> 'void (int)' Function 0x559cd6f7b790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559cd6fdf610 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559cd6fdf5f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559cd6fdf598 <col:21> '_Bool' lvalue Var 0x559cd6fd61a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559cd6fdf660 <line:838:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559cd6fdf648 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cd6fdf628 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559cd6fdf948 <line:839:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559cd6fdf680 <col:3> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
    | `-ConditionalOperator 0x559cd6fdf918 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559cd6fdf740 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559cd6fdf6f8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559cd6fdf6e0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559cd6fdf6a0 <col:7> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559cd6fdf728 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559cd6fdf710 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559cd6fdf6c0 <col:25> '_Bool' lvalue Var 0x559cd6fd59a8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559cd6fdf900 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559cd6fdf760 <col:42> 'int' lvalue Var 0x559cd6fd5fc0 'a$w_buff0' 'int'
    |   `-ParenExpr 0x559cd6fdf8e0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559cd6fdf8b0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559cd6fdf820 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559cd6fdf7d8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559cd6fdf7c0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559cd6fdf780 <col:55> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559cd6fdf808 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559cd6fdf7f0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559cd6fdf7a0 <col:73> '_Bool' lvalue Var 0x559cd6fd5c68 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559cd6fdf880 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559cd6fdf840 <col:90> 'int' lvalue Var 0x559cd6fd60b8 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559cd6fdf898 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559cd6fdf860 <col:102> 'int' lvalue Var 0x559cd6fd5818 'a' 'int'
    |-BinaryOperator 0x559cd6fdfb50 <line:840:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559cd6fdf968 <col:3> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559cd6fdfb38 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559cd6fdfb08 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559cd6fdfa28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559cd6fdf9e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559cd6fdf9c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559cd6fdf988 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559cd6fdfa10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559cd6fdf9f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559cd6fdf9a8 <col:38> '_Bool' lvalue Var 0x559cd6fd59a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559cd6fdfac0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559cd6fdfa78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559cd6fdfa48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559cd6fdfaf0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559cd6fdfad8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559cd6fdfaa0 <col:66> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559cd6fdfe48 <line:841:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559cd6fdfb70 <col:3> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559cd6fdfe30 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559cd6fdfe00 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559cd6fdfd20 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559cd6fdfc40 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559cd6fdfbf8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559cd6fdfbe0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559cd6fdfba0 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559cd6fdfc28 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559cd6fdfc10 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559cd6fdfbc0 <col:38> '_Bool' lvalue Var 0x559cd6fd59a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559cd6fdfd00 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559cd6fdfcb8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559cd6fdfca0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559cd6fdfc60 <col:56> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559cd6fdfce8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559cd6fdfcd0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559cd6fdfc80 <col:74> '_Bool' lvalue Var 0x559cd6fd5c68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559cd6fdfdb8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559cd6fdfd70 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559cd6fdfd40 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559cd6fdfde8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559cd6fdfdd0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559cd6fdfd98 <col:102> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559cd6fe0050 <line:842:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559cd6fdfe68 <col:3> '_Bool' lvalue Var 0x559cd6fd59a8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559cd6fe0038 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559cd6fe0008 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559cd6fdff28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559cd6fdfee0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559cd6fdfec8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559cd6fdfe88 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559cd6fdff10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559cd6fdfef8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559cd6fdfea8 <col:38> '_Bool' lvalue Var 0x559cd6fd59a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559cd6fdffc0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559cd6fdff78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559cd6fdff48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559cd6fdfff0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559cd6fdffd8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559cd6fdffa0 <col:66> '_Bool' lvalue Var 0x559cd6fd59a8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559cd6fe0338 <line:843:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559cd6fe0070 <col:3> '_Bool' lvalue Var 0x559cd6fd5c68 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559cd6fe0320 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559cd6fe02f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559cd6fe0210 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559cd6fe0130 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559cd6fe00e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559cd6fe00d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559cd6fe0090 <col:20> '_Bool' lvalue Var 0x559cd6fd6038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559cd6fe0118 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559cd6fe0100 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559cd6fe00b0 <col:38> '_Bool' lvalue Var 0x559cd6fd59a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559cd6fe01f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559cd6fe01a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559cd6fe0190 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559cd6fe0150 <col:56> '_Bool' lvalue Var 0x559cd6fd6130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559cd6fe01d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559cd6fe01c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559cd6fe0170 <col:74> '_Bool' lvalue Var 0x559cd6fd5c68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559cd6fe02a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559cd6fe0260 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559cd6fe0230 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559cd6fe02d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559cd6fe02c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559cd6fe0288 <col:102> '_Bool' lvalue Var 0x559cd6fd5c68 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559cd6fe0390 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559cd6fe0378 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cd6fe0358 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559cd6fe03e8 <line:845:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559cd6fe03d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cd6fe03b0 <col:3> 'void ()' Function 0x559cd6f7be40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559cd6fe06b8 <line:846:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x559cd6fe0408 <col:3> '_Bool' lvalue Var 0x559cd6fd6220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559cd6fe06a0 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559cd6fe0688 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559cd6fe0668 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x559cd6fe0648 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x559cd6fe05b0 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x559cd6fe0518 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x559cd6fe0480 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x559cd6fe0468 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x559cd6fe0428 <col:23> 'int' lvalue Var 0x559cd6fd5398 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x559cd6fe0448 <col:46> 'int' 0
    |         | | `-BinaryOperator 0x559cd6fe04f8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x559cd6fe04e0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x559cd6fe04a0 <col:51> 'int' lvalue Var 0x559cd6fd54b8 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x559cd6fe04c0 <col:74> 'int' 0
    |         | `-BinaryOperator 0x559cd6fe0590 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559cd6fe0578 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559cd6fe0538 <col:79> 'int' lvalue Var 0x559cd6fd55d8 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x559cd6fe0558 <col:102> 'int' 0
    |         `-BinaryOperator 0x559cd6fe0628 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x559cd6fe0610 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559cd6fe05d0 <col:107> 'int' lvalue Var 0x559cd6fd56f8 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x559cd6fe05f0 <col:130> 'int' 0
    |-CallExpr 0x559cd6fe0710 <line:847:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559cd6fe06f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559cd6fe06d8 <col:3> 'void ()' Function 0x559cd6f7bf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559cd6fe0788 <line:848:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559cd6fe0770 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559cd6fe0730 <col:3> 'void (int)' Function 0x559cd6f7bbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559cd6fe07c8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559cd6fe07b0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559cd6fe0750 <col:21> '_Bool' lvalue Var 0x559cd6fd6220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559cd6fe0800 <line:849:3, col:10>
      `-IntegerLiteral 0x559cd6fe07e0 <col:10> 'int' 0
