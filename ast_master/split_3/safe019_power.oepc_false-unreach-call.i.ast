TranslationUnitDecl 0x564ee72c1e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564ee72c26d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564ee72c23b0 '__int128'
|-TypedefDecl 0x564ee72c2748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564ee72c23d0 'unsigned __int128'
|-TypedefDecl 0x564ee72c2a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564ee72c2820 'struct __NSConstantString_tag'
|   `-Record 0x564ee72c27a0 '__NSConstantString_tag'
|-TypedefDecl 0x564ee72c2af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564ee72c2ab0 'char *'
|   `-BuiltinType 0x564ee72c1eb0 'char'
|-TypedefDecl 0x564ee7301650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564ee72c2d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564ee72c2bd0 'struct __va_list_tag'
|     `-Record 0x564ee72c2b50 '__va_list_tag'
|-FunctionDecl 0x564ee7301770 <./split_3/safe019_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x564ee7301940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564ee7301870 <col:31> col:34 'int'
|-FunctionDecl 0x564ee7301ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564ee7301be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564ee7301d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564ee7301c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564ee7301f58 <col:40, col:99>
|   |-IfStmt 0x564ee7301f28 <col:42, col:88>
|   | |-UnaryOperator 0x564ee7301e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564ee7301df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564ee7301dd0 <col:47> 'int' lvalue ParmVar 0x564ee7301c98 'expression' 'int'
|   | `-CompoundStmt 0x564ee7301f10 <col:59, col:88>
|   |   `-LabelStmt 0x564ee7301ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564ee7301e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564ee7301e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564ee7301e20 <col:68> 'void () __attribute__((noreturn))' Function 0x564ee7301be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564ee7301f40 <col:89>
|   `-ReturnStmt 0x564ee7301f48 <col:91>
|-FunctionDecl 0x564ee7301fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564ee7302060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564ee73023e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564ee7302118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564ee7302198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564ee7302218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564ee7302298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564ee73024a0 <line:11:22>
|-FunctionDecl 0x564ee7328520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564ee7302510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564ee7302590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564ee7328350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564ee73283d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564ee73285e0 <line:14:22>
|-FunctionDecl 0x564ee7328890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564ee7328650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564ee73286d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564ee7328750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564ee7328948 <line:16:22>
|-TypedefDecl 0x564ee73289b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564ee72c1f70 'unsigned char'
|-TypedefDecl 0x564ee7328a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564ee72c1f90 'unsigned short'
|-TypedefDecl 0x564ee7328a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564ee72c1fb0 'unsigned int'
|-TypedefDecl 0x564ee7328b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee7328b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564ee72c1ed0 'signed char'
|-TypedefDecl 0x564ee7328be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564ee72c1f70 'unsigned char'
|-TypedefDecl 0x564ee7328c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564ee72c1ef0 'short'
|-TypedefDecl 0x564ee7328cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564ee72c1f90 'unsigned short'
|-TypedefDecl 0x564ee7328d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564ee72c1f10 'int'
|-TypedefDecl 0x564ee7328da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564ee72c1fb0 'unsigned int'
|-TypedefDecl 0x564ee7328e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee7328e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee7328ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee7328f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee7328fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee7329048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564ee72c1fb0 'unsigned int'
|-TypedefDecl 0x564ee73290b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564ee72c1fb0 'unsigned int'
|-TypedefDecl 0x564ee7329128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee7329198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee7329208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564ee72c1fb0 'unsigned int'
|-TypedefDecl 0x564ee7329278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee73292e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee7329378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee73293e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564ee72c1f10 'int'
|-RecordDecl 0x564ee7329440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x564ee7329588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564ee7329640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564ee73295e0 'struct __fsid_t' sugar
|   `-RecordType 0x564ee73294c0 '__fsid_t'
|     `-Record 0x564ee7329440 ''
|-TypedefDecl 0x564ee73296c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee7329738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee73297a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee7329818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564ee72c1fb0 'unsigned int'
|-TypedefDecl 0x564ee7329888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee73298f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564ee72c1fb0 'unsigned int'
|-TypedefDecl 0x564ee7329968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee73299d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564ee72c1f10 'int'
|-TypedefDecl 0x564ee7329a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564ee72c1f10 'int'
|-TypedefDecl 0x564ee7329ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564ee72c1f10 'int'
|-TypedefDecl 0x564ee7329b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564ee72c2630 'void *'
|   `-BuiltinType 0x564ee72c1e70 'void'
|-TypedefDecl 0x564ee7329b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee7329c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee7329c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee7329ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee7329d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee7329dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee7329e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee7329ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee7329f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee7329f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee7329ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee732a088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564ee732a050 '__off64_t' sugar
|   |-Typedef 0x564ee7329378 '__off64_t'
|   `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee732a180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564ee732a140 '__quad_t *'
|   `-TypedefType 0x564ee732a0e0 '__quad_t' sugar
|     |-Typedef 0x564ee7328ef8 '__quad_t'
|     `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee732a1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564ee72c2ab0 'char *'
|   `-BuiltinType 0x564ee72c1eb0 'char'
|-TypedefDecl 0x564ee732a260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee732a2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564ee72c1fb0 'unsigned int'
|-FunctionDecl 0x564ee732b458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564ee732b380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564ee732b768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x564ee732b758 <line:73:3, col:34>
|     `-CallExpr 0x564ee732b718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564ee732b700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564ee732b690 <col:10> '<builtin fn type>' Function 0x564ee732b500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564ee732b740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564ee732b6b0 <col:29> 'unsigned int' lvalue ParmVar 0x564ee732b380 '__bsx' 'unsigned int'
|-FunctionDecl 0x564ee732b500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564ee732b5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564ee732b610 <col:10> Implicit
| `-ConstAttr 0x564ee732b668 <col:10> Implicit
|-FunctionDecl 0x564ee732b8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564ee732b7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564ee732bbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x564ee732bbc8 <line:78:3, col:34>
|     `-CallExpr 0x564ee732bb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564ee732bb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564ee732baf8 <col:10> '<builtin fn type>' Function 0x564ee732b968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564ee732bbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564ee732bb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564ee732b7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564ee732b968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564ee732ba08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564ee732ba78 <col:10> Implicit
| `-ConstAttr 0x564ee732bad0 <col:10> Implicit
|-TypedefDecl 0x564ee732bc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-TypedefDecl 0x564ee732bc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564ee732bc60 '__time_t' sugar
|   |-Typedef 0x564ee7329888 '__time_t'
|   `-BuiltinType 0x564ee72c1f30 'long'
|-RecordDecl 0x564ee732bcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x564ee732bda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564ee732be38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564ee732bec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564ee732be90 '__pid_t' sugar
|   |-Typedef 0x564ee73293e8 '__pid_t'
|   `-BuiltinType 0x564ee72c1f10 'int'
|-RecordDecl 0x564ee732bf20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x564ee732bfe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564ee732c030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x564ee732c0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564ee732c158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-RecordDecl 0x564ee732c1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x564ee732d480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564ee732d530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564ee732d4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x564ee732c230 'cpu_set_t'
|     `-Record 0x564ee732c1b0 ''
|-FunctionDecl 0x564ee732d808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564ee732d5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564ee732d6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564ee732d8b8 <line:108:19>
|-FunctionDecl 0x564ee732da90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564ee732d920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564ee732db38 <col:69>
|-FunctionDecl 0x564ee732dcb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564ee732dba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564ee732dd58 <col:64>
|-FunctionDecl 0x564ee732e018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564ee732ddc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564ee732def8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564ee732e0c8 <line:114:22>
|-FunctionDecl 0x564ee732e3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564ee732e130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564ee732e228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564ee732e460 <col:88>
|-FunctionDecl 0x564ee732e718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564ee732e4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564ee732e548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564ee732e5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564ee732e7d0 <col:62>
|-FunctionDecl 0x564ee732e948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564ee732e838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564ee732e9f0 <col:63>
|-FunctionDecl 0x564ee732eb18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564ee732ebb8 <col:47>
|-FunctionDecl 0x564ee732ecc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564ee732ec28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564ee732ed68 <col:69>
|-FunctionDecl 0x564ee732ee70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564ee732edd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564ee732ef18 <col:69>
|-FunctionDecl 0x564ee732f1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564ee732ef80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564ee732f0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564ee732f288 <col:88>
|-TypedefDecl 0x564ee732f318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564ee732f2e0 '__clock_t' sugar
|   |-Typedef 0x564ee73296c8 '__clock_t'
|   `-BuiltinType 0x564ee72c1f30 'long'
|-TypedefDecl 0x564ee732f3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564ee732f370 '__clockid_t' sugar
|   |-Typedef 0x564ee7329ab8 '__clockid_t'
|   `-BuiltinType 0x564ee72c1f10 'int'
|-TypedefDecl 0x564ee732f458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564ee732f420 '__timer_t' sugar
|   |-Typedef 0x564ee7329b28 '__timer_t'
|   `-PointerType 0x564ee72c2630 'void *'
|     `-BuiltinType 0x564ee72c1e70 'void'
|-RecordDecl 0x564ee732f4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x564ee732f570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564ee732f5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564ee732f640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564ee732f6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564ee732f710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564ee732f778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564ee732f7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564ee732f848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564ee732f8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564ee732f918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564ee732f980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564ee732f9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x564ee732fa98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564ee732fb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564ee732fbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564ee732fd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564ee732fe20 <col:45>
|-FunctionDecl 0x564ee7330000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564ee732fef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564ee73300a8 <col:54>
|-FunctionDecl 0x564ee73302a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564ee7330110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564ee7330188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564ee7330358 <line:158:22>
| `-ConstAttr 0x564ee7330ff0 <col:63>
|-FunctionDecl 0x564ee73311f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564ee73310e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564ee7331298 <col:56>
|-FunctionDecl 0x564ee7331640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564ee7331308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564ee7331380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564ee7331400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564ee73314f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564ee7331700 <col:54>
|-RecordDecl 0x564ee7331758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x564ee7331808 parent 0x564ee72c1e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564ee7331a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564ee7331b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564ee7331b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564ee7331bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564ee7331cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564ee7331de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564ee7331d90 'struct __locale_struct *'
|   `-ElaboratedType 0x564ee7331d20 'struct __locale_struct' sugar
|     `-RecordType 0x564ee73317e0 'struct __locale_struct'
|       `-Record 0x564ee7331758 '__locale_struct'
|-TypedefDecl 0x564ee7331e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564ee7331e60 '__locale_t' sugar
|   |-Typedef 0x564ee7331de8 '__locale_t'
|   `-PointerType 0x564ee7331d90 'struct __locale_struct *'
|     `-ElaboratedType 0x564ee7331d20 'struct __locale_struct' sugar
|       `-RecordType 0x564ee73317e0 'struct __locale_struct'
|         `-Record 0x564ee7331758 '__locale_struct'
|-FunctionDecl 0x564ee73332a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564ee7331f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564ee7331f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564ee7333028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564ee73330b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564ee7333130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564ee7333368 <col:40>
|-FunctionDecl 0x564ee7333558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564ee7333430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564ee7333600 <col:66>
|-FunctionDecl 0x564ee7333710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564ee7333668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564ee73337b8 <col:69>
|-FunctionDecl 0x564ee73339e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564ee7333820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564ee73338b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564ee7333a98 <col:52>
|-FunctionDecl 0x564ee7333c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564ee7333b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564ee7333b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564ee7333cf0 <col:55>
|-FunctionDecl 0x564ee7333e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564ee7333d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564ee7333f30 <col:62>
|-FunctionDecl 0x564ee7334168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564ee7333f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564ee7334210 <col:60>
|-FunctionDecl 0x564ee7334438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564ee7334290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564ee7334310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564ee73344e8 <col:44>
|-FunctionDecl 0x564ee73346f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564ee7334550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564ee73345d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564ee73347a8 <col:49>
|-VarDecl 0x564ee73348a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564ee7334928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564ee73349a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564ee7334a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564ee7334ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564ee7334c40 <col:42>
|-VarDecl 0x564ee7334cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564ee7334d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564ee7334eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564ee7334da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564ee7334f60 <col:57>
|-FunctionDecl 0x564ee73350d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564ee7334fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564ee7335178 <col:56>
|-FunctionDecl 0x564ee7335288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564ee73351f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564ee7335330 <col:59>
|-FunctionDecl 0x564ee7335438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564ee73353a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564ee73354e0 <col:48>
| `-ConstAttr 0x564ee7335538 <col:89>
|-FunctionDecl 0x564ee7335798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564ee73355e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564ee7335678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564ee73359f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564ee7335888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564ee7335918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564ee7335aa8 <col:88>
|-FunctionDecl 0x564ee7335c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564ee7335b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564ee7335ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564ee7335cf0 <col:88>
|-FunctionDecl 0x564ee7335f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564ee7335d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564ee7335de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564ee7335fb8 <line:209:22>
|-FunctionDecl 0x564ee7336358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564ee7336020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564ee73360e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564ee7336170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564ee7336200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564ee7336658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564ee7336458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564ee7336530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564ee7336708 <col:85>
|-FunctionDecl 0x564ee7336af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564ee7336770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564ee73368a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564ee73369b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564ee7336bb0 <col:52>
|-FunctionDecl 0x564ee7336d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564ee7336c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564ee7336dd0 <col:61>
|-FunctionDecl 0x564ee7337248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564ee7336e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564ee7336eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564ee7336fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564ee73370f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564ee7337308 <col:62>
|-FunctionDecl 0x564ee7337528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564ee7337370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564ee7337400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564ee73375d8 <line:222:22>
|-FunctionDecl 0x564ee73376d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564ee7337640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564ee7337780 <col:65>
|-TypedefDecl 0x564ee73377f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564ee72c1fd0 'unsigned long'
|-RecordDecl 0x564ee7337848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x564ee7337990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564ee73379f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564ee7337aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564ee7337a50 'union pthread_attr_t' sugar
|   `-RecordType 0x564ee73378d0 'union pthread_attr_t'
|     `-Record 0x564ee7337848 'pthread_attr_t'
|-RecordDecl 0x564ee7337b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564ee7337c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564ee7337cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564ee7337da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564ee7337d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564ee7337b80 'struct __pthread_internal_list'
|     `-Record 0x564ee7337b00 '__pthread_internal_list'
|-RecordDecl 0x564ee7337e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x564ee7337eb8 parent 0x564ee72c1e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564ee7337f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564ee7337ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564ee7338060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564ee733c110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564ee733c178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564ee733c1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564ee733c268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564ee733c320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564ee733c410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564ee733c478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564ee733c600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564ee733c5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x564ee7337e90 'pthread_mutex_t'
|     `-Record 0x564ee7337e10 ''
|-RecordDecl 0x564ee733c670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x564ee733c7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564ee733c818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564ee733c8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564ee733c870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564ee733c6f0 'pthread_mutexattr_t'
|     `-Record 0x564ee733c670 ''
|-RecordDecl 0x564ee733c940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x564ee733c9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x564ee733cab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564ee733cb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564ee733cb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564ee733cbe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564ee733cc50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564ee733ccb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564ee733cd20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564ee733cd88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564ee733ce40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_3/safe019_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_3/safe019_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x564ee733cf30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564ee733cf98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564ee733e130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564ee733d070 'union pthread_cond_t' sugar
|   `-RecordType 0x564ee733c9c0 'pthread_cond_t'
|     `-Record 0x564ee733c940 ''
|-RecordDecl 0x564ee733e1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x564ee733e2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564ee733e308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564ee733e3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564ee733e360 'union pthread_condattr_t' sugar
|   `-RecordType 0x564ee733e220 'pthread_condattr_t'
|     `-Record 0x564ee733e1a0 ''
|-TypedefDecl 0x564ee733e448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564ee72c1fb0 'unsigned int'
|-TypedefDecl 0x564ee733e4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564ee72c1f10 'int'
|-RecordDecl 0x564ee733e510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x564ee733e5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x564ee733e680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564ee733e6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564ee733e750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564ee733e7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564ee733e820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564ee733e888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564ee733e8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564ee733e958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564ee733e9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564ee733ea28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564ee733ea90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564ee733eb40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_3/safe019_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_3/safe019_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x564ee733ebe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564ee733ec50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564ee733eda0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564ee733ed40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564ee733e590 'pthread_rwlock_t'
|     `-Record 0x564ee733e510 ''
|-RecordDecl 0x564ee733ee10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x564ee733ef50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564ee733efb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564ee733f070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564ee733f010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564ee733ee90 'pthread_rwlockattr_t'
|     `-Record 0x564ee733ee10 ''
|-TypedefDecl 0x564ee7340140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564ee72c1f14 'volatile int' volatile
|   `-BuiltinType 0x564ee72c1f10 'int'
|-RecordDecl 0x564ee7340198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x564ee73402e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564ee7340348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564ee7340400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564ee73403a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x564ee7340220 'pthread_barrier_t'
|     `-Record 0x564ee7340198 ''
|-RecordDecl 0x564ee7340470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x564ee7340570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564ee73405d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564ee7340690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564ee7340630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564ee73404f0 'pthread_barrierattr_t'
|     `-Record 0x564ee7340470 ''
|-TypedefDecl 0x564ee73407a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564ee7340740 'long [8]' 8 
|   `-BuiltinType 0x564ee72c1f30 'long'
|-EnumDecl 0x564ee7340800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x564ee73408c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564ee7340918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564ee7340968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x564ee7340a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564ee7340a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564ee7340ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564ee7340b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564ee7340bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564ee7340b98 <col:26> 'int'
| |   `-DeclRefExpr 0x564ee7340b78 <col:26> 'int' EnumConstant 0x564ee7340a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564ee7340c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564ee7340c20 <col:29> 'int'
| |   `-DeclRefExpr 0x564ee7340c00 <col:29> 'int' EnumConstant 0x564ee7340a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564ee7340cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564ee7340ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x564ee7340c88 <col:30> 'int' EnumConstant 0x564ee7340ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564ee7340d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564ee7340d30 <col:27> 'int'
|     `-DeclRefExpr 0x564ee7340d10 <col:27> 'int' EnumConstant 0x564ee7340bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564ee7340d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x564ee7340e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564ee7340ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564ee7340ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x564ee7340eb8 <col:30> 'int' EnumConstant 0x564ee7340e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564ee7340f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564ee7340fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564ee7340fb0 <col:29> 'int'
|     `-DeclRefExpr 0x564ee7340f90 <col:29> 'int' EnumConstant 0x564ee7340f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564ee7341018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x564ee73410e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564ee7341150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564ee73411a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564ee73411f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x564ee73412b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564ee7341308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564ee7341358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564ee73413e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564ee73413c8 <col:31> 'int'
|     `-DeclRefExpr 0x564ee73413a8 <col:31> 'int' EnumConstant 0x564ee73412b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564ee7341430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x564ee73414f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564ee7341548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564ee7341598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x564ee7341668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564ee73416b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564ee7341708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x564ee73417d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564ee7341828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564ee7341878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564ee7341ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564ee7341b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564ee7341b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564ee7341ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564ee7341cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x564ee7341dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564ee7341e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564ee7341e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x564ee7341f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564ee7341f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564ee73425b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564ee7342080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564ee73421a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564ee73423a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564ee7342420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564ee7342678 <col:47>
| |-NonNullAttr 0x564ee73426d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x564ee7342708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x564ee7342830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564ee7342760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564ee7342a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564ee73428e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564ee7342968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564ee7342c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564ee7342b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564ee7342d00 <col:60>
|-FunctionDecl 0x564ee7342e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564ee7342ef0 <col:54>
| `-ConstAttr 0x564ee7342f48 <col:95>
|-FunctionDecl 0x564ee7344990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564ee7342f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564ee7342ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564ee7344a40 <line:395:19>
| `-ConstAttr 0x564ee7344a98 <col:60>
|-FunctionDecl 0x564ee7344c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564ee7344b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564ee7344d10 <col:71>
| `-NonNullAttr 0x564ee7344d68 <col:112, col:126> 1
|-FunctionDecl 0x564ee7344e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564ee7344db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564ee7344f18 <line:398:22>
| `-NonNullAttr 0x564ee7344f70 <col:63, col:77> 1
|-FunctionDecl 0x564ee7345198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564ee7344fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564ee7345038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564ee7345248 <line:401:22>
| `-NonNullAttr 0x564ee73452a0 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee73454a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564ee73452e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564ee7345368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564ee7345558 <line:404:22>
| `-NonNullAttr 0x564ee73455b0 <col:63, col:77> 1
|-FunctionDecl 0x564ee7345808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564ee73455f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564ee73456a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564ee73458b8 <line:407:22>
| `-NonNullAttr 0x564ee7345910 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee7346b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564ee73469b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564ee7346a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564ee7346c18 <line:410:22>
| `-NonNullAttr 0x564ee7346c70 <col:63, col:77> 1
|-FunctionDecl 0x564ee7346ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564ee7346cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564ee7346d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564ee7346f58 <line:413:22>
| `-NonNullAttr 0x564ee7346fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee73471e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564ee7346ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564ee7347088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564ee7347298 <col:37>
| `-NonNullAttr 0x564ee73472f0 <col:78, col:95> 1 2
|-FunctionDecl 0x564ee73474d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee7347338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564ee73473b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564ee7347588 <line:419:22>
| `-NonNullAttr 0x564ee73475e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee7347768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564ee7347628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564ee73476a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564ee7347818 <line:421:22>
| `-NonNullAttr 0x564ee7347870 <col:63, col:77> 1
|-FunctionDecl 0x564ee7347a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee73478b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564ee7347938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564ee7347ae8 <line:424:22>
| `-NonNullAttr 0x564ee7347b40 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee7347cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564ee7347b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564ee7347c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564ee7347d78 <line:427:22>
| `-NonNullAttr 0x564ee7347dd0 <col:63, col:77> 1
|-FunctionDecl 0x564ee7347f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee7347e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564ee7347e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564ee7348028 <line:430:22>
| `-NonNullAttr 0x564ee7348080 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee7348208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564ee73480c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564ee7348148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564ee73482b8 <line:432:22>
| `-NonNullAttr 0x564ee7348310 <col:63, col:77> 1
|-FunctionDecl 0x564ee7348538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564ee7348358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564ee73483d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564ee73485e8 <line:435:22>
| |-NonNullAttr 0x564ee7348640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564ee7348678 <col:100> "" ""
|-FunctionDecl 0x564ee7348888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564ee73486c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564ee7348748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564ee7348938 <line:438:22>
| |-NonNullAttr 0x564ee7348990 <col:63, col:77> 1
| `-DeprecatedAttr 0x564ee73489d8 <col:97> "" ""
|-FunctionDecl 0x564ee7348bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564ee7348a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564ee7348aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564ee7348c78 <line:441:22>
| `-NonNullAttr 0x564ee7348cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee7348e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564ee7348d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564ee7348d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564ee7348f00 <line:444:22>
| `-NonNullAttr 0x564ee7348f58 <col:63, col:77> 1
|-FunctionDecl 0x564ee7349248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564ee7348fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564ee7349028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564ee73490a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564ee7349300 <line:448:22>
| `-NonNullAttr 0x564ee7349358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564ee7349608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564ee73493b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564ee7349430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564ee73494a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564ee73496c0 <col:43>
| `-NonNullAttr 0x564ee7349718 <col:84, col:98> 1
|-FunctionDecl 0x564ee7349a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564ee7349768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564ee73497e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564ee7349878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564ee7349ad8 <line:453:22>
| `-NonNullAttr 0x564ee7349b30 <col:63, col:77> 3
|-FunctionDecl 0x564ee7349e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564ee7349b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564ee7349bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564ee7349c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564ee7349ec0 <line:457:22>
| `-NonNullAttr 0x564ee7349f18 <col:63, col:80> 2 3
|-FunctionDecl 0x564ee734a108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564ee7349f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564ee7349fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564ee734a1b8 <line:459:22>
|-FunctionDecl 0x564ee734a588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564ee734a280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564ee734a420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564ee734a638 <col:52, col:69> 1 2
|-FunctionDecl 0x564ee734a7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564ee734a6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564ee734a740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564ee734a9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564ee734a8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564ee734a928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564ee734ab48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564ee734aab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564ee734ac88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564ee734ad28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x564ee734add8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x564ee734aec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564ee734af30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564ee734b100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_3/safe019_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x564ee734b1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564ee734b2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564ee734b250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564ee734adb0 '__pthread_unwind_buf_t'
| |   `-Record 0x564ee734ad28 ''
| `-AlignedAttr 0x564ee734b308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564ee734b380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564ee734b4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564ee734b548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564ee734b5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564ee734b618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564ee734b820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564ee734b710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564ee734ba00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564ee734b8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564ee734bbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564ee734bab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564ee734bc68 <line:488:22>
|-RecordDecl 0x564ee734bcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564ee734bfd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564ee734be38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564ee734beb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564ee734c088 <col:86>
| `-ReturnsTwiceAttr 0x564ee734c0e0 <col:12> Implicit
|-FunctionDecl 0x564ee734c408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564ee734c1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564ee734c2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564ee734c4b8 <line:494:22>
| `-NonNullAttr 0x564ee734c510 <col:63, col:77> 1
|-FunctionDecl 0x564ee734c688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564ee734c558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564ee734c730 <line:496:22>
| `-NonNullAttr 0x564ee734c788 <col:63, col:77> 1
|-FunctionDecl 0x564ee734c890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564ee734c7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564ee734c938 <line:498:22>
| `-NonNullAttr 0x564ee734c990 <col:52, col:66> 1
|-FunctionDecl 0x564ee734dad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564ee734da20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564ee734db80 <line:500:22>
| `-NonNullAttr 0x564ee734dbd8 <col:52, col:66> 1
|-FunctionDecl 0x564ee734de18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564ee734dc28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564ee734dcb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564ee734dec8 <col:36>
| `-NonNullAttr 0x564ee734df20 <col:66, col:83> 1 2
|-FunctionDecl 0x564ee734e020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564ee734df68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564ee734e0c8 <line:505:22>
| `-NonNullAttr 0x564ee734e120 <col:52, col:66> 1
|-FunctionDecl 0x564ee734e3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee734e1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564ee734e250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564ee734e468 <line:509:22>
| `-NonNullAttr 0x564ee734e4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee734e788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564ee734e508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564ee734e588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564ee734e608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564ee734e840 <line:513:22>
| `-NonNullAttr 0x564ee734e898 <col:63, col:80> 1 3
|-FunctionDecl 0x564ee734ea30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564ee734e8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564ee734ead8 <line:515:22>
| `-NonNullAttr 0x564ee734eb30 <col:63, col:77> 1
|-FunctionDecl 0x564ee734ed18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564ee734ebe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564ee734edc0 <line:517:22>
| `-NonNullAttr 0x564ee734ee18 <col:63, col:77> 1
|-FunctionDecl 0x564ee734ef20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564ee734ee68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564ee734efc8 <line:519:22>
| `-NonNullAttr 0x564ee734f020 <col:63, col:77> 1
|-FunctionDecl 0x564ee734f248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee734f068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564ee734f0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564ee734f2f8 <line:523:22>
| `-NonNullAttr 0x564ee734f350 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee734f558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564ee734f398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564ee734f418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564ee734f608 <line:526:22>
| `-NonNullAttr 0x564ee734f660 <col:63, col:77> 1
|-FunctionDecl 0x564ee734f808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee734f6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564ee734f728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564ee734f8b8 <line:529:22>
| `-NonNullAttr 0x564ee734f910 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee734fb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564ee734f958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564ee734fa40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564ee734fbb0 <line:531:22>
| `-NonNullAttr 0x564ee734fc08 <col:63, col:77> 1
|-FunctionDecl 0x564ee734fdb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee734fc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564ee734fcd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564ee734fe68 <line:535:22>
| `-NonNullAttr 0x564ee734fec0 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee7350048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564ee734ff08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564ee734ff88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564ee73500f8 <line:538:22>
| `-NonNullAttr 0x564ee7350150 <col:63, col:77> 1
|-FunctionDecl 0x564ee73502f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee7350198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564ee7350218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564ee73503a8 <line:542:22>
| `-NonNullAttr 0x564ee7350400 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee7350588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564ee7350448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564ee73504c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564ee7350638 <line:545:22>
| `-NonNullAttr 0x564ee7350690 <col:63, col:77> 1
|-FunctionDecl 0x564ee7350878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564ee73506d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564ee7350758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564ee7350928 <line:548:22>
| `-NonNullAttr 0x564ee7350980 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee7351b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564ee73509c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564ee7351a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564ee7351be8 <line:551:22>
| `-NonNullAttr 0x564ee7351c40 <col:63, col:77> 1
|-FunctionDecl 0x564ee7351f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564ee7351d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564ee7351e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564ee7352028 <col:29>
| `-NonNullAttr 0x564ee7352080 <col:70, col:84> 1
|-FunctionDecl 0x564ee73521f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564ee73520c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564ee73522a0 <line:556:22>
| `-NonNullAttr 0x564ee73522f8 <col:63, col:77> 1
|-FunctionDecl 0x564ee7352400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564ee7352348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564ee73524a8 <line:558:22>
| `-NonNullAttr 0x564ee7352500 <col:52, col:66> 1
|-FunctionDecl 0x564ee7352600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564ee7352548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564ee73526a8 <line:560:19>
| `-NonNullAttr 0x564ee7352700 <col:49, col:63> 1
|-FunctionDecl 0x564ee7352938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564ee7352748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564ee73527d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564ee73529e8 <col:39>
| `-NonNullAttr 0x564ee7352a70 <col:69, col:86> 1 2
|-FunctionDecl 0x564ee7352b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564ee7352ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564ee7352c18 <line:565:22>
| `-NonNullAttr 0x564ee7352c70 <col:52, col:66> 1
|-FunctionDecl 0x564ee7352d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564ee7352cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564ee7352e18 <line:567:22>
| `-NonNullAttr 0x564ee7352e70 <col:52, col:66> 1
|-FunctionDecl 0x564ee7353028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564ee7352eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564ee7352f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564ee73530d8 <col:39>
| `-NonNullAttr 0x564ee7353130 <col:69, col:86> 1 2
|-FunctionDecl 0x564ee7353230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564ee7353178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564ee73532d8 <line:572:22>
| `-NonNullAttr 0x564ee7353330 <col:52, col:66> 1
|-FunctionDecl 0x564ee7353518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564ee73533e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564ee73535c0 <line:574:22>
| `-NonNullAttr 0x564ee7353618 <col:63, col:77> 1
|-FunctionDecl 0x564ee7353720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564ee7353668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564ee73537c8 <line:576:22>
| `-NonNullAttr 0x564ee7353820 <col:63, col:77> 1
|-FunctionDecl 0x564ee7353a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee7353868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564ee73538e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564ee7353b30 <line:580:22>
| `-NonNullAttr 0x564ee7353b88 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee7353d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564ee7353bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564ee7353c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564ee7353e48 <line:583:22>
| `-NonNullAttr 0x564ee7353ea0 <col:63, col:77> 1
|-FunctionDecl 0x564ee7354048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee7353ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564ee7353f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564ee73540f8 <line:587:22>
| `-NonNullAttr 0x564ee7354150 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee73542d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564ee7354198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564ee7354218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564ee7354388 <col:36>
| `-NonNullAttr 0x564ee73543e0 <col:77, col:91> 1
|-FunctionDecl 0x564ee7354718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564ee73544c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564ee73545d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564ee73547c8 <line:592:22>
| `-NonNullAttr 0x564ee7354820 <col:63, col:77> 1
|-FunctionDecl 0x564ee7354998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564ee7354868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564ee7354a40 <line:594:22>
| `-NonNullAttr 0x564ee7354ac0 <col:63, col:77> 1
|-FunctionDecl 0x564ee7354bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564ee7354b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564ee7354c68 <line:596:22>
| `-NonNullAttr 0x564ee7354cc0 <col:52, col:66> 1
|-FunctionDecl 0x564ee7354dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564ee7354d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564ee7354e68 <line:598:22>
| `-NonNullAttr 0x564ee7354ec0 <col:52, col:66> 1
|-FunctionDecl 0x564ee73550e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564ee7354f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564ee7354f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564ee7355198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x564ee73554c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564ee7355218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564ee7355290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564ee7355320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564ee7355580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x564ee7355798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564ee7355660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564ee7355840 <line:607:22>
| `-NonNullAttr 0x564ee7355898 <col:63, col:77> 1
|-FunctionDecl 0x564ee73559a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564ee73558e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564ee7355a48 <line:609:22>
| `-NonNullAttr 0x564ee7355ad0 <col:63, col:77> 1
|-FunctionDecl 0x564ee7355cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee7355b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564ee7355b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564ee7355da8 <line:613:22>
| `-NonNullAttr 0x564ee7355e00 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee7356008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564ee7355e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564ee7355ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564ee73560b8 <col:37>
| `-NonNullAttr 0x564ee7356110 <col:78, col:92> 1
|-FunctionDecl 0x564ee7356328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564ee7356158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564ee7356200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564ee73563d8 <line:619:22>
| `-NonNullAttr 0x564ee7356430 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee73565f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564ee7356478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564ee73564f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564ee73566a8 <line:622:22>
| `-NonNullAttr 0x564ee7356700 <col:63, col:77> 1
|-FunctionDecl 0x564ee73569a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564ee73567e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564ee7356860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564ee7356a58 <line:624:22>
| `-NonNullAttr 0x564ee7356ae0 <col:63, col:77> 1
|-FunctionDecl 0x564ee7356c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564ee7356b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564ee7356d00 <line:626:22>
| `-NonNullAttr 0x564ee7356d58 <col:63, col:77> 1
|-FunctionDecl 0x564ee7356e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564ee7356da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564ee7356f08 <line:628:22>
| `-NonNullAttr 0x564ee7356f60 <col:52, col:66> 1
|-FunctionDecl 0x564ee7357060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564ee7356fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564ee7357108 <line:630:22>
| `-NonNullAttr 0x564ee7357160 <col:52, col:66> 1
|-FunctionDecl 0x564ee7357260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564ee73571a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564ee7357308 <line:632:22>
| `-NonNullAttr 0x564ee7357360 <col:52, col:66> 1
|-FunctionDecl 0x564ee7357738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564ee7357440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564ee7357550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564ee73575d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564ee73577f0 <line:636:22>
| `-NonNullAttr 0x564ee7357848 <col:63, col:77> 1
|-FunctionDecl 0x564ee73579c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564ee7357898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564ee7357a70 <line:638:22>
| `-NonNullAttr 0x564ee7358b00 <col:63, col:77> 1
|-FunctionDecl 0x564ee7358c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564ee7358b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564ee7358ca8 <line:640:22>
| `-NonNullAttr 0x564ee7358d00 <col:52, col:66> 1
|-FunctionDecl 0x564ee7358ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564ee7358db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564ee7358f90 <line:642:22>
| `-NonNullAttr 0x564ee7358fe8 <col:63, col:77> 1
|-FunctionDecl 0x564ee73590f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564ee7359038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564ee7359198 <line:644:22>
| `-NonNullAttr 0x564ee73591f0 <col:63, col:77> 1
|-FunctionDecl 0x564ee7359418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564ee7359238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564ee73592b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564ee73594c8 <line:648:22>
| `-NonNullAttr 0x564ee7359520 <col:63, col:80> 1 2
|-FunctionDecl 0x564ee7359728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564ee7359568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564ee73595e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564ee73597d8 <line:651:22>
| `-NonNullAttr 0x564ee7359830 <col:63, col:77> 1
|-FunctionDecl 0x564ee7359b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564ee7359910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564ee7359a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564ee7359c48 <line:654:22>
| `-NonNullAttr 0x564ee7359ca0 <col:63, col:77> 1
|-FunctionDecl 0x564ee7359df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564ee7359ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564ee7359ea0 <col:69>
|-FunctionDecl 0x564ee735a018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564ee7359f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564ee735a0c0 <col:72>
|-FunctionDecl 0x564ee735a2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564ee735a128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564ee735a1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564ee735a3a8 <col:44>
|-FunctionDecl 0x564ee735a5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564ee735a410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564ee735a488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564ee735a678 <line:661:22>
| `-NonNullAttr 0x564ee735a6d0 <col:63, col:77> 2
|-FunctionDecl 0x564ee735ab30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564ee735a7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564ee735a8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564ee735a9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564ee735abe8 <col:47>
|-FunctionDecl 0x564ee735acf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564ee735ac58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564ee735ae48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564ee735adb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564ee735afa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x564ee735af08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564ee735b0f8 <line:669:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x564ee735b060 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564ee735b1c0 <line:670:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564ee735b280 <line:671:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564ee735b340 <line:672:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564ee735b3f8 <line:673:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564ee735b478 prev 0x564ee735b3f8 <line:674:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564ee735b4e0 <col:24> 'int' 0
|-VarDecl 0x564ee735b518 <line:675:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x564ee735b598 prev 0x564ee735b518 <line:676:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x564ee735b600 <col:27> 'int' 0
|-VarDecl 0x564ee735b630 <line:677:1, col:7> col:7 __unbuffered_p0_EAX$flush_delayed '_Bool'
|-VarDecl 0x564ee735b6b0 <line:678:1, col:5> col:5 __unbuffered_p0_EAX$mem_tmp 'int'
|-VarDecl 0x564ee735b728 <line:679:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x564ee735b7a0 <line:680:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x564ee735b818 <line:681:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x564ee735b890 <line:682:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x564ee735b908 <line:683:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd4 '_Bool'
|-VarDecl 0x564ee735b980 <line:684:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x564ee735b9f8 <line:685:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x564ee735ba70 <line:686:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x564ee735bb00 <line:687:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x564ee735bb78 <line:688:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd4 '_Bool'
|-VarDecl 0x564ee735bbf0 <line:689:1, col:7> col:7 used __unbuffered_p0_EAX$read_delayed '_Bool'
|-VarDecl 0x564ee735bc70 <line:690:1, col:6> col:6 used __unbuffered_p0_EAX$read_delayed_var 'int *'
|-VarDecl 0x564ee735bcf0 <line:691:1, col:5> col:5 __unbuffered_p0_EAX$w_buff0 'int'
|-VarDecl 0x564ee735bd68 <line:692:1, col:7> col:7 __unbuffered_p0_EAX$w_buff0_used '_Bool'
|-VarDecl 0x564ee735bde8 <line:693:1, col:5> col:5 __unbuffered_p0_EAX$w_buff1 'int'
|-VarDecl 0x564ee735be60 <line:694:1, col:7> col:7 __unbuffered_p0_EAX$w_buff1_used '_Bool'
|-VarDecl 0x564ee735bee0 <line:695:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x564ee735bf60 prev 0x564ee735bee0 <line:696:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x564ee735bfc8 <col:27> 'int' 0
|-VarDecl 0x564ee735c000 <line:697:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x564ee735c080 prev 0x564ee735c000 <line:698:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x564ee735c0e8 <col:27> 'int' 0
|-VarDecl 0x564ee735c118 <line:699:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564ee735c190 <line:700:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564ee735c210 <line:701:1, col:5> col:5 used x 'int'
|-VarDecl 0x564ee735c290 prev 0x564ee735c210 <line:702:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564ee735c2f8 <col:9> 'int' 0
|-VarDecl 0x564ee735c330 <line:703:1, col:5> col:5 used y 'int'
|-VarDecl 0x564ee735c3b0 prev 0x564ee735c330 <line:704:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564ee735c418 <col:9> 'int' 0
|-VarDecl 0x564ee735c448 <line:705:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x564ee735c4c8 <line:706:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x564ee735c540 <line:707:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x564ee735c5b8 <line:708:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x564ee735c630 <line:709:1, col:7> col:7 y$r_buff0_thd2 '_Bool'
|-VarDecl 0x564ee735c6a8 <line:710:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x564ee735c720 <line:711:1, col:7> col:7 used y$r_buff0_thd4 '_Bool'
|-VarDecl 0x564ee735c798 <line:712:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x564ee735c810 <line:713:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x564ee735c888 <line:714:1, col:7> col:7 y$r_buff1_thd2 '_Bool'
|-VarDecl 0x564ee735c900 <line:715:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x564ee735c978 <line:716:1, col:7> col:7 used y$r_buff1_thd4 '_Bool'
|-VarDecl 0x564ee735c9f0 <line:717:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x564ee735ca70 <line:718:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x564ee735db20 <line:719:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x564ee735db98 <line:720:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x564ee735dc18 <line:721:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x564ee735dc90 <line:722:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x564ee735dd08 <line:723:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564ee735dd80 <line:724:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x564ee735ddf8 <line:725:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564ee735df10 prev 0x564ee735acf0 <line:726:1, line:756:1> line:726:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564ee735de78 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564ee7362848 <line:727:1, line:756:1>
|   |-CallExpr 0x564ee735e028 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee735e010 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee735dfb8 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee735e0f8 <line:729:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x564ee735e048 <col:3> '_Bool' lvalue Var 0x564ee735dd08 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x564ee735e0d8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x564ee735e0c0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x564ee735e068 <col:19> '_Bool (void)' Function 0x564ee7301770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x564ee735e190 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x564ee735e118 <col:3> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x564ee735e170 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x564ee735e158 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x564ee735e138 <col:19> '_Bool (void)' Function 0x564ee7301770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x564ee735e208 <line:731:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564ee735e1b0 <col:3> '_Bool' lvalue Var 0x564ee735c448 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564ee735e1f0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564ee735e1d0 <col:21> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564ee735e280 <line:732:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564ee735e228 <col:3> 'int' lvalue Var 0x564ee735c4c8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564ee735e268 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564ee735e248 <col:15> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   |-BinaryOperator 0x564ee735e318 <line:733:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x564ee735e2a0 <col:3> '_Bool' lvalue Var 0x564ee735dd80 'weak$$choice1' '_Bool'
|   | `-CallExpr 0x564ee735e2f8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x564ee735e2e0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x564ee735e2c0 <col:19> '_Bool (void)' Function 0x564ee7301770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x564ee735ed50 <line:734:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x564ee735e338 <col:3> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   | `-ConditionalOperator 0x564ee735ed20 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x564ee735e390 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x564ee735e378 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564ee735e358 <col:8> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x564ee735ed08 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564ee735e3a8 <col:25> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   |   `-ParenExpr 0x564ee735ece8 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x564ee735ecb8 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x564ee735e468 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564ee735e420 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564ee735e408 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564ee735e3c8 <col:30> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564ee735e450 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564ee735e438 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564ee735e3e8 <col:48> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564ee735eca0 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564ee735e488 <col:65> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x564ee735ec80 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x564ee735ec50 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x564ee735e628 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x564ee735e5b8 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x564ee735e548 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x564ee735e530 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x564ee735e518 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x564ee735e4a8 <col:78> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x564ee735e500 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x564ee735e4e8 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x564ee735e4c8 <col:97> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |           | | `-ImplicitCastExpr 0x564ee735e5a0 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x564ee735e588 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x564ee735e568 <col:115> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x564ee735e610 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x564ee735e5f8 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564ee735e5d8 <col:134> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |           |-ParenExpr 0x564ee735e810 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x564ee735e7e0 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x564ee735e7b0 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x564ee735e798 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x564ee735e648 <col:152> '_Bool' lvalue Var 0x564ee735dd08 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x564ee735e7c8 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x564ee735e668 <col:168> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   |           |   `-ParenExpr 0x564ee735e778 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x564ee735e748 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x564ee735e700 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x564ee735e6e8 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x564ee735e688 <col:173> '_Bool' lvalue Var 0x564ee735dd80 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x564ee735e718 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x564ee735e6a8 <col:189> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x564ee735e730 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x564ee735e6c8 <col:201> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x564ee735ec30 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x564ee735ec00 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x564ee735e9b0 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x564ee735e940 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x564ee735e8d0 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x564ee735e888 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x564ee735e870 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x564ee735e830 <col:216> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x564ee735e8b8 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x564ee735e8a0 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x564ee735e850 <col:234> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x564ee735e928 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x564ee735e910 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x564ee735e8f0 <col:252> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x564ee735e998 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x564ee735e980 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x564ee735e960 <col:271> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |               |-ParenExpr 0x564ee735eac0 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x564ee735ea90 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x564ee735ea48 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x564ee735ea30 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x564ee735e9d0 <col:289> '_Bool' lvalue Var 0x564ee735dd08 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x564ee735ea60 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x564ee735e9f0 <col:305> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x564ee735ea78 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x564ee735ea10 <col:317> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x564ee735ebe0 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x564ee735ebb0 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x564ee735eb68 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x564ee735eb50 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x564ee735eae0 <col:331> '_Bool' lvalue Var 0x564ee735dd08 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x564ee735eb80 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x564ee735eb00 <col:347> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x564ee735eb98 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x564ee735eb30 <col:359> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   |-BinaryOperator 0x564ee735f4f0 <line:735:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x564ee735ed70 <col:3> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x564ee735f4c0 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x564ee735f490 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564ee735f478 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564ee735ed90 <col:15> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564ee735f4a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564ee735edb0 <col:31> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564ee735f458 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x564ee735f428 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x564ee735ee08 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x564ee735edf0 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564ee735edd0 <col:45> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x564ee735f410 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564ee735ee20 <col:62> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x564ee735f3f0 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x564ee735f3c0 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x564ee735eee0 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564ee735ee98 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564ee735ee80 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564ee735ee40 <col:75> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564ee735eec8 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564ee735eeb0 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564ee735ee60 <col:93> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x564ee735f3a8 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564ee735ef00 <col:110> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |           `-ParenExpr 0x564ee735f388 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x564ee735f358 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x564ee735f0a0 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x564ee735f030 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x564ee735efc0 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x564ee735efa8 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x564ee735ef90 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x564ee735ef20 <col:123> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x564ee735ef78 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x564ee735ef60 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x564ee735ef40 <col:142> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x564ee735f018 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x564ee735f000 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x564ee735efe0 <col:160> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x564ee735f088 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x564ee735f070 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x564ee735f050 <col:179> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x564ee735f340 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x564ee735f0c0 <col:196> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x564ee735f320 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x564ee735f2f0 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x564ee735f260 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x564ee735f1f0 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x564ee735f180 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x564ee735f138 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x564ee735f120 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x564ee735f0e0 <col:209> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x564ee735f168 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x564ee735f150 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x564ee735f100 <col:227> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x564ee735f1d8 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x564ee735f1c0 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x564ee735f1a0 <col:245> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x564ee735f248 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x564ee735f230 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x564ee735f210 <col:264> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x564ee735f2c0 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x564ee735f280 <col:281> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x564ee735f2d8 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x564ee735f2a0 <col:293> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |-BinaryOperator 0x564ee735fca8 <line:736:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x564ee735f510 <col:3> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x564ee735fc78 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x564ee735fc48 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564ee735fc30 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564ee735f530 <col:15> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564ee735fc60 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564ee735f550 <col:31> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x564ee735fc10 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x564ee735fbe0 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x564ee735f5a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x564ee735f590 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564ee735f570 <col:45> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x564ee735fbc8 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564ee735f5c0 <col:62> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x564ee735fba8 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x564ee735fb78 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x564ee735f680 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564ee735f638 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564ee735f620 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564ee735f5e0 <col:75> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564ee735f668 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564ee735f650 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564ee735f600 <col:93> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x564ee735fb60 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564ee735f6a0 <col:110> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x564ee735fb40 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x564ee735faf8 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x564ee735f840 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x564ee735f7d0 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x564ee735f760 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x564ee735f748 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x564ee735f730 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x564ee735f6c0 <col:123> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x564ee735f718 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x564ee735f700 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x564ee735f6e0 <col:142> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x564ee735f7b8 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x564ee735f7a0 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x564ee735f780 <col:160> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x564ee735f828 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x564ee735f810 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x564ee735f7f0 <col:179> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x564ee735fae0 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x564ee735f860 <col:196> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
|   |               `-ParenExpr 0x564ee735fac0 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x564ee735fa90 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x564ee735fa00 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x564ee735f990 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x564ee735f920 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x564ee735f8d8 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x564ee735f8c0 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x564ee735f880 <col:209> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x564ee735f908 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x564ee735f8f0 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x564ee735f8a0 <col:227> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x564ee735f978 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x564ee735f960 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x564ee735f940 <col:245> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x564ee735f9e8 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x564ee735f9d0 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x564ee735f9b0 <col:264> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x564ee735fa60 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x564ee735fa20 <col:281> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x564ee735fa78 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x564ee735fa40 <col:293> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
|   |-BinaryOperator 0x564ee7360580 <line:737:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x564ee735fcc8 <col:3> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564ee7360568 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee7360538 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x564ee73604f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564ee73604d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564ee735fce8 <col:20> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee7360520 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564ee7360508 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564ee735fd08 <col:36> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564ee73604b8 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x564ee7360488 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x564ee735fd60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x564ee735fd48 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564ee735fd28 <col:55> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x564ee7360470 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564ee7360458 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564ee735fd78 <col:72> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564ee7360438 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x564ee7360408 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x564ee735fe38 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564ee735fdf0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564ee735fdd8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564ee735fd98 <col:90> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564ee735fe20 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564ee735fe08 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564ee735fdb8 <col:108> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x564ee73603f0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564ee735fe88 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564ee735fe58 <col:132> 'int' 0
|   |             `-ParenExpr 0x564ee73603d0 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x564ee73603a0 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x564ee7360030 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x564ee735ffc0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x564ee735ff50 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x564ee735ff38 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x564ee735ff20 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x564ee735feb0 <col:137> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x564ee735ff08 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x564ee735fef0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x564ee735fed0 <col:156> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x564ee735ffa8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x564ee735ff90 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x564ee735ff70 <col:174> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x564ee7360018 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x564ee7360000 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x564ee735ffe0 <col:193> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |                 |-BinaryOperator 0x564ee73600f0 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x564ee73600d8 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x564ee73600c0 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x564ee7360050 <col:210> '_Bool' lvalue Var 0x564ee735dd08 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x564ee73600a8 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x564ee7360090 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x564ee7360070 <col:228> '_Bool' lvalue Var 0x564ee735dd80 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x564ee7360380 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x564ee7360350 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x564ee7360290 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x564ee7360220 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x564ee73601b0 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x564ee7360168 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x564ee7360150 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x564ee7360110 <col:245> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x564ee7360198 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x564ee7360180 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x564ee7360130 <col:263> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x564ee7360208 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x564ee73601f0 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x564ee73601d0 <col:281> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x564ee7360278 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x564ee7360260 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x564ee7360240 <col:300> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x564ee7360308 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x564ee73602f0 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x564ee73602b0 <col:317> '_Bool' lvalue Var 0x564ee735dd08 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x564ee7360338 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x564ee7360320 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x564ee73602d0 <col:333> '_Bool' lvalue Var 0x564ee735dd08 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x564ee7360e38 <line:738:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x564ee73605a0 <col:3> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564ee7360e20 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee7360df0 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x564ee7360da8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564ee7360d90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564ee73605c0 <col:20> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee7360dd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564ee7360dc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564ee73605e0 <col:36> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564ee7360d70 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x564ee7360d40 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x564ee7360638 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x564ee7360620 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564ee7360600 <col:55> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x564ee7360d28 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564ee7360d10 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564ee7360650 <col:72> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564ee7360cf0 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x564ee7360cc0 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x564ee7360710 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564ee73606c8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564ee73606b0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564ee7360670 <col:90> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564ee73606f8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564ee73606e0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564ee7360690 <col:108> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x564ee7360ca8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564ee7360760 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564ee7360730 <col:132> 'int' 0
|   |             `-ParenExpr 0x564ee7360c88 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x564ee7360c58 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x564ee7360908 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x564ee7360898 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x564ee7360828 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x564ee7360810 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x564ee73607f8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x564ee7360788 <col:137> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x564ee73607e0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x564ee73607c8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x564ee73607a8 <col:156> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x564ee7360880 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x564ee7360868 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x564ee7360848 <col:174> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x564ee73608f0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x564ee73608d8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x564ee73608b8 <col:193> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x564ee7360c40 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x564ee7360c28 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x564ee7360928 <col:210> '_Bool' lvalue Var 0x564ee735dd08 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x564ee7360c08 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x564ee7360bd8 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x564ee7360ac8 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x564ee7360a58 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x564ee73609e8 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x564ee73609a0 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x564ee7360988 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x564ee7360948 <col:227> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x564ee73609d0 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x564ee73609b8 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x564ee7360968 <col:245> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x564ee7360a40 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x564ee7360a28 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x564ee7360a08 <col:263> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x564ee7360ab0 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x564ee7360a98 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x564ee7360a78 <col:282> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x564ee7360ba8 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x564ee7360b18 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x564ee7360ae8 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x564ee7360bc0 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x564ee7360b80 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x564ee7360b50 <col:317> 'int' 0
|   |-BinaryOperator 0x564ee73616e0 <line:739:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x564ee7360e58 <col:3> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564ee73616c8 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee7361698 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x564ee7361650 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564ee7361638 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564ee7360e78 <col:20> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee7361680 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564ee7361668 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564ee7360e98 <col:36> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x564ee7361618 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x564ee73615e8 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x564ee7360ef0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x564ee7360ed8 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564ee7360eb8 <col:55> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x564ee73615d0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564ee73615b8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564ee7360f08 <col:72> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x564ee7361598 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x564ee7361568 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x564ee7360fc8 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564ee7360f80 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564ee7360f68 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564ee7360f28 <col:90> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564ee7360fb0 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564ee7360f98 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564ee7360f48 <col:108> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x564ee7361550 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564ee7361018 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564ee7360fe8 <col:132> 'int' 0
|   |             `-ParenExpr 0x564ee7361530 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x564ee7361500 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x564ee73611c0 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x564ee7361150 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x564ee73610e0 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x564ee73610c8 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x564ee73610b0 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x564ee7361040 <col:137> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x564ee7361098 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x564ee7361080 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x564ee7361060 <col:156> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x564ee7361138 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x564ee7361120 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x564ee7361100 <col:174> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x564ee73611a8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x564ee7361190 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x564ee7361170 <col:193> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x564ee73614e8 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x564ee73614d0 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x564ee73611e0 <col:210> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |                 `-ParenExpr 0x564ee73614b0 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x564ee7361480 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x564ee7361380 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x564ee7361310 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x564ee73612a0 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x564ee7361258 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x564ee7361240 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x564ee7361200 <col:228> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x564ee7361288 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x564ee7361270 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x564ee7361220 <col:246> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x564ee73612f8 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x564ee73612e0 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x564ee73612c0 <col:264> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x564ee7361368 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x564ee7361350 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x564ee7361330 <col:283> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x564ee7361450 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x564ee73613d0 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x564ee73613a0 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x564ee7361468 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x564ee7361428 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x564ee73613f8 <col:318> 'int' 0
|   |-BinaryOperator 0x564ee73620a8 <line:740:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x564ee7361700 <col:3> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564ee7362090 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee7362060 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x564ee7362018 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564ee7362000 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564ee7361720 <col:20> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee7362048 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564ee7362030 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564ee7361740 <col:36> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x564ee7361fe0 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x564ee7361fb0 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x564ee7361798 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x564ee7361780 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564ee7361760 <col:55> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x564ee7361f98 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564ee7361f80 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564ee73617b0 <col:72> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x564ee7361f60 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x564ee7361f30 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x564ee7361870 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564ee7361828 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564ee7361810 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564ee73617d0 <col:90> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564ee7361858 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564ee7361840 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564ee73617f0 <col:108> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x564ee7361f18 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564ee73618c0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564ee7361890 <col:132> 'int' 0
|   |             `-ParenExpr 0x564ee7361ef8 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x564ee7361ec8 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x564ee7361a68 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x564ee73619f8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x564ee7361988 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x564ee7361970 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x564ee7361958 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x564ee73618e8 <col:137> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x564ee7361940 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x564ee7361928 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x564ee7361908 <col:156> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x564ee73619e0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x564ee73619c8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x564ee73619a8 <col:174> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x564ee7361a50 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x564ee7361a38 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x564ee7361a18 <col:193> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ParenExpr 0x564ee7361bd8 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x564ee7361ba8 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x564ee7361b38 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x564ee7361b20 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x564ee7361a88 <col:211> '_Bool' lvalue Var 0x564ee735dd08 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x564ee7361b78 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x564ee7361b60 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x564ee7361aa8 <col:227> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x564ee7361b90 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x564ee7361af8 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x564ee7361ac8 <col:251> 'int' 0
|   |                 `-ParenExpr 0x564ee7361ea8 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x564ee7361e78 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x564ee7361d78 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x564ee7361d08 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x564ee7361c98 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x564ee7361c50 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x564ee7361c38 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x564ee7361bf8 <col:257> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x564ee7361c80 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x564ee7361c68 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x564ee7361c18 <col:275> '_Bool' lvalue Var 0x564ee735c810 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x564ee7361cf0 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x564ee7361cd8 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x564ee7361cb8 <col:293> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x564ee7361d60 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x564ee7361d48 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x564ee7361d28 <col:312> '_Bool' lvalue Var 0x564ee735c5b8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x564ee7361e48 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x564ee7361dc8 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x564ee7361d98 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x564ee7361e60 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x564ee7361e20 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x564ee7361df0 <col:347> 'int' 0
|   |-BinaryOperator 0x564ee7362140 <line:741:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564ee73620c8 <col:3> '_Bool' lvalue Var 0x564ee735bbf0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564ee7362118 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564ee73620e8 <col:45> 'int' 1
|   |-BinaryOperator 0x564ee73621b8 <line:742:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x564ee7362160 <col:3> 'int *' lvalue Var 0x564ee735bc70 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x564ee73621a0 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x564ee7362180 <col:43> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   |-BinaryOperator 0x564ee7362230 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564ee73621d8 <col:3> 'int' lvalue Var 0x564ee735b598 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x564ee7362218 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564ee73621f8 <col:25> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   |-BinaryOperator 0x564ee7362360 <line:744:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564ee7362250 <col:3> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   | `-ConditionalOperator 0x564ee7362330 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564ee73622e8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564ee73622d0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564ee7362270 <col:7> '_Bool' lvalue Var 0x564ee735c448 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564ee7362300 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564ee7362290 <col:25> 'int' lvalue Var 0x564ee735c4c8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564ee7362318 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564ee73622b0 <col:37> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   |-BinaryOperator 0x564ee73623f8 <line:745:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564ee7362380 <col:3> '_Bool' lvalue Var 0x564ee735c448 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564ee73623d0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564ee73623a0 <col:28> 'int' 0
|   |-CallExpr 0x564ee7362450 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee7362438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362418 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564ee73624a8 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee7362490 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362470 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee7362520 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564ee73624c8 <col:3> 'int' lvalue Var 0x564ee735bf60 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x564ee7362508 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564ee73624e8 <col:25> 'int' lvalue Var 0x564ee735c290 'x' 'int'
|   |-CallExpr 0x564ee7362578 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee7362560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362540 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564ee73625d0 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee73625b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362598 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x564ee7362628 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee7362610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee73625f0 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564ee7362680 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee7362668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362648 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee7362738 <line:753:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564ee73626a0 <col:3> 'int' lvalue Var 0x564ee735b478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564ee7362718 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564ee7362700 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564ee73626c0 <col:22> 'int' lvalue Var 0x564ee735b478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564ee73626e0 <col:41> 'int' 1
|   |-CallExpr 0x564ee7362790 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee7362778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362758 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564ee7362838 <line:755:3, col:36>
|     `-CallExpr 0x564ee7362818 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564ee7362800 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564ee73627b0 <col:10> 'void *(void)' Function 0x564ee7301ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564ee73629e8 prev 0x564ee735ae48 <line:757:1, line:768:1> line:757:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564ee7362950 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564ee7362e48 <line:758:1, line:768:1>
|   |-CallExpr 0x564ee7362ac8 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee7362ab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362a90 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee7362b28 <line:760:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564ee7362ae8 <col:3> 'int' lvalue Var 0x564ee735c290 'x' 'int'
|   | `-IntegerLiteral 0x564ee7362b08 <col:7> 'int' 1
|   |-CallExpr 0x564ee7362ba8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee7362b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362b70 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564ee7362c00 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee7362be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362bc8 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x564ee7362c58 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee7362c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362c20 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564ee7362cb0 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee7362c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362c78 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee7362d68 <line:765:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564ee7362cd0 <col:3> 'int' lvalue Var 0x564ee735b478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564ee7362d48 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564ee7362d30 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564ee7362cf0 <col:22> 'int' lvalue Var 0x564ee735b478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564ee7362d10 <col:41> 'int' 1
|   |-CallExpr 0x564ee7362dc0 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee7362da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362d88 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564ee7362e38 <line:767:3, col:36>
|     `-CallExpr 0x564ee7362e18 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564ee7362e00 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564ee7362de0 <col:10> 'void *(void)' Function 0x564ee7301ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564ee7362f50 prev 0x564ee735afa0 <line:769:1, line:788:1> line:769:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564ee7362eb8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564ee7364188 <line:770:1, line:788:1>
|   |-CallExpr 0x564ee7363030 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee7363018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7362ff8 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee73630a8 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564ee7363050 <col:3> 'int' lvalue Var 0x564ee735c080 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x564ee7363090 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564ee7363070 <col:25> 'int' lvalue Var 0x564ee735c290 'x' 'int'
|   |-CallExpr 0x564ee7363100 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee73630e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee73630c8 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564ee7363158 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee7363140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7363120 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee73631b8 <line:775:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564ee7363178 <col:3> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   | `-IntegerLiteral 0x564ee7363198 <col:7> 'int' 1
|   |-CallExpr 0x564ee7363210 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee73631f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee73631d8 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564ee7363268 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee7363250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7363230 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee7363550 <line:778:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564ee7363288 <col:3> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   | `-ConditionalOperator 0x564ee7363520 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564ee7363348 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564ee7363300 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564ee73632e8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564ee73632a8 <col:7> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564ee7363330 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564ee7363318 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564ee73632c8 <col:25> '_Bool' lvalue Var 0x564ee735c6a8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564ee7363508 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564ee7363368 <col:42> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564ee73634e8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564ee73634b8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564ee7363428 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564ee73633e0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564ee73633c8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564ee7363388 <col:55> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564ee7363410 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564ee73633f8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564ee73633a8 <col:73> '_Bool' lvalue Var 0x564ee735c900 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564ee7363488 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564ee7363448 <col:90> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564ee73634a0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564ee7363468 <col:102> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   |-BinaryOperator 0x564ee7363758 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564ee7363570 <col:3> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564ee7363740 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee7363710 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564ee7363630 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564ee73635e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564ee73635d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564ee7363590 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564ee7363618 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564ee7363600 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564ee73635b0 <col:38> '_Bool' lvalue Var 0x564ee735c6a8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee73636c8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564ee7363680 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564ee7363650 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564ee73636f8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564ee73636e0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564ee73636a8 <col:66> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564ee7363a40 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564ee7363778 <col:3> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564ee7363a28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee73639f8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564ee7363918 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564ee7363838 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564ee73637f0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564ee73637d8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564ee7363798 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564ee7363820 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564ee7363808 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564ee73637b8 <col:38> '_Bool' lvalue Var 0x564ee735c6a8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564ee73638f8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564ee73638b0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564ee7363898 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564ee7363858 <col:56> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564ee73638e0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564ee73638c8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564ee7363878 <col:74> '_Bool' lvalue Var 0x564ee735c900 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee73639b0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564ee7363968 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564ee7363938 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564ee73639e0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564ee73639c8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564ee7363990 <col:102> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564ee7363c58 <line:781:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564ee7363a60 <col:3> '_Bool' lvalue Var 0x564ee735c6a8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564ee7363c40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee7363c10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564ee7363b20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564ee7363ad8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564ee7363ac0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564ee7363a80 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564ee7363b08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564ee7363af0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564ee7363aa0 <col:38> '_Bool' lvalue Var 0x564ee735c6a8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee7363bc8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564ee7363b80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564ee7363b40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564ee7363bf8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564ee7363be0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564ee7363ba8 <col:66> '_Bool' lvalue Var 0x564ee735c6a8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564ee7363f40 <line:782:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564ee7363c78 <col:3> '_Bool' lvalue Var 0x564ee735c900 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564ee7363f28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee7363ef8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564ee7363e18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564ee7363d38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564ee7363cf0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564ee7363cd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564ee7363c98 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564ee7363d20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564ee7363d08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564ee7363cb8 <col:38> '_Bool' lvalue Var 0x564ee735c6a8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564ee7363df8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564ee7363db0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564ee7363d98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564ee7363d58 <col:56> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564ee7363de0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564ee7363dc8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564ee7363d78 <col:74> '_Bool' lvalue Var 0x564ee735c900 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee7363eb0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564ee7363e68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564ee7363e38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564ee7363ee0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564ee7363ec8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564ee7363e90 <col:102> '_Bool' lvalue Var 0x564ee735c900 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564ee7363f98 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee7363f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7363f60 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564ee7363ff0 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee7363fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7363fb8 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee73640a8 <line:785:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564ee7364010 <col:3> 'int' lvalue Var 0x564ee735b478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564ee7364088 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564ee7364070 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564ee7364030 <col:22> 'int' lvalue Var 0x564ee735b478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564ee7364050 <col:41> 'int' 1
|   |-CallExpr 0x564ee7364100 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee73640e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee73640c8 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564ee7364178 <line:787:3, col:36>
|     `-CallExpr 0x564ee7364158 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564ee7364140 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564ee7364120 <col:10> 'void *(void)' Function 0x564ee7301ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564ee73642d0 prev 0x564ee735b0f8 <line:789:1, line:805:1> line:789:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x564ee7364238 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564ee73653f0 <line:790:1, line:805:1>
|   |-CallExpr 0x564ee73643b0 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee7364398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7364378 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee7364410 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564ee73643d0 <col:3> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   | `-IntegerLiteral 0x564ee73643f0 <col:7> 'int' 2
|   |-CallExpr 0x564ee7364468 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee7364450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7364430 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564ee73644c0 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee73644a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7364488 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee73647a8 <line:795:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564ee73644e0 <col:3> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   | `-ConditionalOperator 0x564ee7364778 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564ee73645a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564ee7364558 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564ee7364540 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564ee7364500 <col:7> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564ee7364588 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564ee7364570 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564ee7364520 <col:25> '_Bool' lvalue Var 0x564ee735c720 'y$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x564ee7364760 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564ee73645c0 <col:42> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x564ee7364740 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564ee7364710 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564ee7364680 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564ee7364638 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564ee7364620 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564ee73645e0 <col:55> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564ee7364668 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564ee7364650 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564ee7364600 <col:73> '_Bool' lvalue Var 0x564ee735c978 'y$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x564ee73646e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564ee73646a0 <col:90> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564ee73646f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564ee73646c0 <col:102> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
|   |-BinaryOperator 0x564ee73649b0 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564ee73647c8 <col:3> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564ee7364998 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee7364968 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564ee7364888 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564ee7364840 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564ee7364828 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564ee73647e8 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564ee7364870 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564ee7364858 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564ee7364808 <col:38> '_Bool' lvalue Var 0x564ee735c720 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee7364920 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564ee73648d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564ee73648a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564ee7364950 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564ee7364938 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564ee7364900 <col:66> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564ee7364cb8 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564ee73649d0 <col:3> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564ee7364ca0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee7364c70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564ee7364b90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564ee7364a90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564ee7364a48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564ee7364a30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564ee73649f0 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564ee7364a78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564ee7364a60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564ee7364a10 <col:38> '_Bool' lvalue Var 0x564ee735c720 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x564ee7364b50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564ee7364b08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564ee7364af0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564ee7364ab0 <col:56> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564ee7364b38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564ee7364b20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564ee7364ad0 <col:74> '_Bool' lvalue Var 0x564ee735c978 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee7364c28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564ee7364be0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564ee7364bb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564ee7364c58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564ee7364c40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564ee7364c08 <col:102> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564ee7364ec0 <line:798:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564ee7364cd8 <col:3> '_Bool' lvalue Var 0x564ee735c720 'y$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564ee7364ea8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee7364e78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564ee7364d98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564ee7364d50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564ee7364d38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564ee7364cf8 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564ee7364d80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564ee7364d68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564ee7364d18 <col:38> '_Bool' lvalue Var 0x564ee735c720 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee7364e30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564ee7364de8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564ee7364db8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564ee7364e60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564ee7364e48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564ee7364e10 <col:66> '_Bool' lvalue Var 0x564ee735c720 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x564ee73651a8 <line:799:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564ee7364ee0 <col:3> '_Bool' lvalue Var 0x564ee735c978 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x564ee7365190 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564ee7365160 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564ee7365080 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564ee7364fa0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564ee7364f58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564ee7364f40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564ee7364f00 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564ee7364f88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564ee7364f70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564ee7364f20 <col:38> '_Bool' lvalue Var 0x564ee735c720 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x564ee7365060 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564ee7365018 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564ee7365000 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564ee7364fc0 <col:56> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564ee7365048 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564ee7365030 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564ee7364fe0 <col:74> '_Bool' lvalue Var 0x564ee735c978 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x564ee7365118 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564ee73650d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564ee73650a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564ee7365148 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564ee7365130 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564ee73650f8 <col:102> '_Bool' lvalue Var 0x564ee735c978 'y$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x564ee7365200 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee73651e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee73651c8 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564ee7365258 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564ee7365240 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7365220 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564ee7365310 <line:802:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564ee7365278 <col:3> 'int' lvalue Var 0x564ee735b478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564ee73652f0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564ee73652d8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564ee7365298 <col:22> 'int' lvalue Var 0x564ee735b478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564ee73652b8 <col:41> 'int' 1
|   |-CallExpr 0x564ee7365368 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564ee7365350 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564ee7365330 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564ee73653e0 <line:804:3, col:36>
|     `-CallExpr 0x564ee73653c0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564ee73653a8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564ee7365388 <col:10> 'void *(void)' Function 0x564ee7301ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564ee7365490 prev 0x564ee735b1c0 <line:806:1, line:808:1> line:806:6 fence 'void ()'
| `-CompoundStmt 0x564ee7365530 <line:807:1, line:808:1>
|-FunctionDecl 0x564ee7365560 prev 0x564ee735b280 <line:809:1, line:811:1> line:809:6 isync 'void ()'
| `-CompoundStmt 0x564ee7365600 <line:810:1, line:811:1>
|-FunctionDecl 0x564ee7365630 prev 0x564ee735b340 <line:812:1, line:814:1> line:812:6 lwfence 'void ()'
| `-CompoundStmt 0x564ee73656d0 <line:813:1, line:814:1>
`-FunctionDecl 0x564ee7365738 <line:815:1, line:856:1> line:815:5 main 'int ()'
  `-CompoundStmt 0x564ee736a338 <line:816:1, line:856:1>
    |-DeclStmt 0x564ee7365850 <line:817:3, col:18>
    | `-VarDecl 0x564ee73657e8 <col:3, col:13> col:13 used t2227 'pthread_t':'unsigned long'
    |-CallExpr 0x564ee7365a58 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564ee7365a40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564ee7365868 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564ee73425b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564ee73658a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564ee7365888 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564ee73657e8 't2227' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564ee7365a98 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564ee7365920 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564ee73658f8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564ee73658c0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564ee7365ab0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564ee7365940 <col:39> 'void *(void *)' Function 0x564ee735df10 'P0' 'void *(void *)'
    | `-ParenExpr 0x564ee73659c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564ee7365998 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564ee7365960 <col:52> 'int' 0
    |-DeclStmt 0x564ee7365b40 <line:819:3, col:18>
    | `-VarDecl 0x564ee7365ad8 <col:3, col:13> col:13 used t2228 'pthread_t':'unsigned long'
    |-CallExpr 0x564ee7365d10 <line:820:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564ee7365cf8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564ee7365b58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564ee73425b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564ee7365bc0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564ee7365ba0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564ee7365ad8 't2228' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564ee7365d50 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564ee7365c38 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564ee7365c10 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564ee7365bd8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564ee7365d68 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564ee7365c58 <col:39> 'void *(void *)' Function 0x564ee73629e8 'P1' 'void *(void *)'
    | `-ParenExpr 0x564ee7365cd8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564ee7365cb0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564ee7365c78 <col:52> 'int' 0
    |-DeclStmt 0x564ee7365df8 <line:821:3, col:18>
    | `-VarDecl 0x564ee7365d90 <col:3, col:13> col:13 used t2229 'pthread_t':'unsigned long'
    |-CallExpr 0x564ee7365fa0 <line:822:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564ee7365f88 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564ee7365e10 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564ee73425b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564ee7365e50 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564ee7365e30 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564ee7365d90 't2229' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564ee7365fe0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564ee7365ec8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564ee7365ea0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564ee7365e68 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564ee7365ff8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564ee7365ee8 <col:39> 'void *(void *)' Function 0x564ee7362f50 'P2' 'void *(void *)'
    | `-ParenExpr 0x564ee7365f68 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564ee7365f40 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564ee7365f08 <col:52> 'int' 0
    |-DeclStmt 0x564ee7366088 <line:823:3, col:18>
    | `-VarDecl 0x564ee7366020 <col:3, col:13> col:13 used t2230 'pthread_t':'unsigned long'
    |-CallExpr 0x564ee7366230 <line:824:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564ee7366218 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564ee73660a0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564ee73425b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564ee73660e0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564ee73660c0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564ee7366020 't2230' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564ee7366270 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564ee7366158 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564ee7366130 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564ee73660f8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564ee7366288 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564ee7366178 <col:39> 'void *(void *)' Function 0x564ee73642d0 'P3' 'void *(void *)'
    | `-ParenExpr 0x564ee73661f8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564ee73661d0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564ee7366198 <col:52> 'int' 0
    |-CallExpr 0x564ee73662d8 <line:825:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564ee73662c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564ee73662a0 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564ee73663a8 <line:826:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564ee73662f8 <col:3> '_Bool' lvalue Var 0x564ee735c118 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564ee7366390 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564ee7366370 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564ee7366358 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564ee7366318 <col:21> 'int' lvalue Var 0x564ee735b478 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564ee7366338 <col:41> 'int' 4
    |-CallExpr 0x564ee7366400 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564ee73663e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564ee73663c8 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564ee73664a8 <line:828:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564ee7366490 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564ee7366420 <col:3> 'void (int)' Function 0x564ee7301940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564ee73664e8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564ee73664d0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564ee7366440 <col:21> '_Bool' lvalue Var 0x564ee735c118 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564ee7366538 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564ee7366520 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564ee7366500 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564ee7366820 <line:830:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564ee7366558 <col:3> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
    | `-ConditionalOperator 0x564ee73667f0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564ee7366618 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564ee73665d0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564ee73665b8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564ee7366578 <col:7> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564ee7366600 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564ee73665e8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564ee7366598 <col:25> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564ee73667d8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564ee7366638 <col:42> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
    |   `-ParenExpr 0x564ee73667b8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564ee7366788 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564ee73666f8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564ee73666b0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564ee7366698 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564ee7366658 <col:55> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564ee73666e0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564ee73666c8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564ee7366678 <col:73> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564ee7366758 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564ee7366718 <col:90> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564ee7366770 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564ee7366738 <col:102> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
    |-BinaryOperator 0x564ee7366a28 <line:831:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564ee7366840 <col:3> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564ee7366a10 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564ee73669e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564ee7366900 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564ee73668b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564ee73668a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564ee7366860 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564ee73668e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564ee73668d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564ee7366880 <col:38> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564ee7366998 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564ee7366950 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564ee7366920 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564ee73669c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564ee73669b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564ee7366978 <col:66> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564ee7366d28 <line:832:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564ee7366a48 <col:3> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564ee7366d10 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564ee7366ce0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564ee7366c00 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564ee7366b08 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564ee7366ac0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564ee7366aa8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564ee7366a68 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564ee7366af0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564ee7366ad8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564ee7366a88 <col:38> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564ee7366be0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564ee7366b80 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564ee7366b68 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564ee7366b28 <col:56> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564ee7366bc8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564ee7366bb0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564ee7366b48 <col:74> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564ee7366c98 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564ee7366c50 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564ee7366c20 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564ee7366cc8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564ee7366cb0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564ee7366c78 <col:102> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564ee7366f30 <line:833:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564ee7366d48 <col:3> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564ee7366f18 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564ee7366ee8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564ee7366e08 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564ee7366dc0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564ee7366da8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564ee7366d68 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564ee7366df0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564ee7366dd8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564ee7366d88 <col:38> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564ee7366ea0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564ee7366e58 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564ee7366e28 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564ee7366ed0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564ee7366eb8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564ee7366e80 <col:66> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564ee7367218 <line:834:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564ee7366f50 <col:3> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564ee7367200 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564ee73671d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564ee73670f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564ee7367010 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564ee7366fc8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564ee7366fb0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564ee7366f70 <col:20> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564ee7366ff8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564ee7366fe0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564ee7366f90 <col:38> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564ee73670d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564ee7367088 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564ee7367070 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564ee7367030 <col:56> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564ee73670b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564ee73670a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564ee7367050 <col:74> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564ee7367188 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564ee7367140 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564ee7367110 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564ee73671b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564ee73671a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564ee7367168 <col:102> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564ee7367270 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564ee7367258 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564ee7367238 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564ee73672c8 <line:836:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564ee73672b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564ee7367290 <col:3> 'void ()' Function 0x564ee7301fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564ee7367360 <line:837:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x564ee73672e8 <col:3> '_Bool' lvalue Var 0x564ee735dd08 'weak$$choice0' '_Bool'
    | `-CallExpr 0x564ee7367340 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x564ee7367328 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x564ee7367308 <col:19> '_Bool (void)' Function 0x564ee7301770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x564ee73673f8 <line:838:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x564ee7367380 <col:3> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
    | `-CallExpr 0x564ee73673d8 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x564ee73673c0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x564ee73673a0 <col:19> '_Bool (void)' Function 0x564ee7301770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x564ee7367470 <line:839:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x564ee7367418 <col:3> '_Bool' lvalue Var 0x564ee735c448 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x564ee7367458 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x564ee7367438 <col:21> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x564ee73674e8 <line:840:3, col:15> 'int' '='
    | |-DeclRefExpr 0x564ee7367490 <col:3> 'int' lvalue Var 0x564ee735c4c8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x564ee73674d0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x564ee73674b0 <col:15> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
    |-BinaryOperator 0x564ee7367920 <line:841:3, col:162> 'int' '='
    | |-DeclRefExpr 0x564ee7367508 <col:3> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
    | `-ConditionalOperator 0x564ee73678f0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x564ee7367718 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x564ee7367638 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x564ee7367560 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x564ee7367548 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x564ee7367528 <col:8> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x564ee7367618 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x564ee73675b0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x564ee7367598 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x564ee7367578 <col:27> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x564ee7367600 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x564ee73675e8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x564ee73675c8 <col:46> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x564ee73676f8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x564ee7367690 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x564ee7367678 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x564ee7367658 <col:65> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x564ee73676e0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x564ee73676c8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x564ee73676a8 <col:84> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564ee73678d8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564ee7367738 <col:101> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
    |   `-ParenExpr 0x564ee73678b8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x564ee7367888 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x564ee73677f8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564ee73677b0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564ee7367798 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564ee7367758 <col:106> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564ee73677e0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564ee73677c8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564ee7367778 <col:124> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564ee7367858 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564ee7367818 <col:141> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x564ee7367870 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564ee7367838 <col:153> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
    |-BinaryOperator 0x564ee7367e40 <line:842:3, col:208> 'int' '='
    | |-DeclRefExpr 0x564ee7367940 <col:3> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x564ee7367e10 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x564ee7367de0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564ee7367dc8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564ee7367960 <col:15> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x564ee7367df8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564ee7367980 <col:31> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
    |   `-ParenExpr 0x564ee7367da8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x564ee7367d78 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x564ee7367b90 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x564ee7367ab0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x564ee73679d8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x564ee73679c0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x564ee73679a0 <col:45> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x564ee7367a90 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x564ee7367a28 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x564ee7367a10 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x564ee73679f0 <col:64> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x564ee7367a78 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x564ee7367a60 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x564ee7367a40 <col:83> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x564ee7367b70 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x564ee7367b08 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x564ee7367af0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x564ee7367ad0 <col:102> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x564ee7367b58 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x564ee7367b40 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x564ee7367b20 <col:121> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564ee7367d60 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564ee7367bc0 <col:138> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
    |       `-ParenExpr 0x564ee7367d40 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x564ee7367d10 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x564ee7367c80 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x564ee7367c38 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x564ee7367c20 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x564ee7367be0 <col:151> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x564ee7367c68 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x564ee7367c50 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x564ee7367c00 <col:169> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x564ee7367ce0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564ee7367ca0 <col:186> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x564ee7367cf8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x564ee7367cc0 <col:198> 'int' lvalue Var 0x564ee735db20 'y$w_buff0' 'int'
    |-BinaryOperator 0x564ee7368350 <line:843:3, col:208> 'int' '='
    | |-DeclRefExpr 0x564ee7367e60 <col:3> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x564ee7368320 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x564ee73682f0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564ee73682d8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564ee7367e80 <col:15> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x564ee7368308 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564ee7367ea0 <col:31> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
    |   `-ParenExpr 0x564ee73682b8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x564ee7368288 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x564ee73680b0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x564ee7367fd0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x564ee7367ef8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x564ee7367ee0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x564ee7367ec0 <col:45> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x564ee7367fb0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x564ee7367f48 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x564ee7367f30 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x564ee7367f10 <col:64> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x564ee7367f98 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x564ee7367f80 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x564ee7367f60 <col:83> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x564ee7368090 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x564ee7368028 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x564ee7368010 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x564ee7367ff0 <col:102> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x564ee7368078 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x564ee7368060 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x564ee7368040 <col:121> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564ee7368270 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564ee73680d0 <col:138> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
    |       `-ParenExpr 0x564ee7368250 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x564ee7368220 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x564ee7368190 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x564ee7368148 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x564ee7368130 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x564ee73680f0 <col:151> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x564ee7368178 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x564ee7368160 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x564ee7368110 <col:169> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x564ee73681f0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564ee73681b0 <col:186> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x564ee7368208 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x564ee73681d0 <col:198> 'int' lvalue Var 0x564ee735dc18 'y$w_buff1' 'int'
    |-BinaryOperator 0x564ee73688f8 <line:844:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x564ee7368370 <col:3> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564ee73688e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564ee73688b0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x564ee7368868 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564ee7368850 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564ee7368390 <col:20> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564ee7368898 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564ee7368880 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564ee73683b0 <col:36> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x564ee7368830 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x564ee7368800 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x564ee73685c0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564ee73684e0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564ee7368408 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564ee73683f0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564ee73683d0 <col:55> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564ee73684c0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564ee7368458 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564ee7368440 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564ee7368420 <col:74> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564ee73684a8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564ee7368490 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564ee7368470 <col:93> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564ee73685a0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564ee7368538 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564ee7368520 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564ee7368500 <col:112> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564ee7368588 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564ee7368570 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564ee7368550 <col:131> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564ee73687e8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564ee73687d0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564ee73685e0 <col:148> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x564ee73687b0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x564ee7368780 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x564ee73686a0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564ee7368658 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564ee7368640 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564ee7368600 <col:166> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564ee7368688 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564ee7368670 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564ee7368620 <col:184> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564ee7368738 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564ee73686f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564ee73686c0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564ee7368768 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x564ee7368750 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x564ee7368718 <col:212> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564ee7368ee8 <line:845:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x564ee7368918 <col:3> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564ee7368ed0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564ee7368ea0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x564ee7368e58 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564ee7368e40 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564ee7368938 <col:20> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564ee7368e88 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564ee7368e70 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564ee7368958 <col:36> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x564ee7368e20 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x564ee7368df0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x564ee7368b68 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564ee7368a88 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564ee73689b0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564ee7368998 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564ee7368978 <col:55> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564ee7368a68 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564ee7368a00 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564ee73689e8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564ee73689c8 <col:74> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564ee7368a50 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564ee7368a38 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564ee7368a18 <col:93> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564ee7368b48 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564ee7368ae0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564ee7368ac8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564ee7368aa8 <col:112> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564ee7368b30 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564ee7368b18 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564ee7368af8 <col:131> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564ee7368dd8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564ee7368dc0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564ee7368b88 <col:148> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x564ee7368da0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x564ee7368d70 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x564ee7368c70 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564ee7368c28 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564ee7368c10 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564ee7368bd0 <col:166> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564ee7368c58 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564ee7368c40 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564ee7368bf0 <col:184> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564ee7368d40 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564ee7368cc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564ee7368c90 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564ee7368d58 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x564ee7368d18 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x564ee7368ce8 <col:219> 'int' 0
    |-BinaryOperator 0x564ee7369490 <line:846:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x564ee7368f08 <col:3> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564ee7369478 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564ee7369448 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x564ee7369400 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564ee73693e8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564ee7368f28 <col:20> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564ee7369430 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564ee7369418 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564ee7368f48 <col:36> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x564ee73693c8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x564ee7369398 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x564ee7369158 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564ee7369078 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564ee7368fa0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564ee7368f88 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564ee7368f68 <col:55> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564ee7369058 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564ee7368ff0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564ee7368fd8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564ee7368fb8 <col:74> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564ee7369040 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564ee7369028 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564ee7369008 <col:93> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564ee7369138 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564ee73690d0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564ee73690b8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564ee7369098 <col:112> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564ee7369120 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564ee7369108 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564ee73690e8 <col:131> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564ee7369380 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564ee7369368 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564ee7369178 <col:148> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x564ee7369348 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x564ee7369318 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x564ee7369238 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564ee73691f0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564ee73691d8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564ee7369198 <col:166> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564ee7369220 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564ee7369208 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564ee73691b8 <col:184> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564ee73692d0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564ee7369288 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564ee7369258 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564ee7369300 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x564ee73692e8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x564ee73692b0 <col:212> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564ee7369a58 <line:847:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x564ee73694b0 <col:3> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564ee7369a40 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564ee7369a10 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x564ee73699c8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564ee73699b0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564ee73694d0 <col:20> '_Bool' lvalue Var 0x564ee735ddf8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564ee73699f8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564ee73699e0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564ee73694f0 <col:36> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x564ee7369990 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x564ee7369960 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x564ee7369700 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564ee7369620 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564ee7369548 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564ee7369530 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564ee7369510 <col:55> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564ee7369600 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564ee7369598 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564ee7369580 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564ee7369560 <col:74> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564ee73695e8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564ee73695d0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564ee73695b0 <col:93> '_Bool' lvalue Var 0x564ee735dc90 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564ee73696e0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564ee7369678 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564ee7369660 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564ee7369640 <col:112> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564ee73696c8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564ee73696b0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564ee7369690 <col:131> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564ee7369948 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564ee7369930 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564ee7369720 <col:148> '_Bool' lvalue Var 0x564ee735c798 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x564ee7369910 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x564ee73698e0 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x564ee73697e0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564ee7369798 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564ee7369780 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564ee7369740 <col:166> '_Bool' lvalue Var 0x564ee735db98 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564ee73697c8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564ee73697b0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564ee7369760 <col:184> '_Bool' lvalue Var 0x564ee735c540 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564ee73698b0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564ee7369830 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564ee7369800 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564ee73698c8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x564ee7369888 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x564ee7369858 <col:219> 'int' 0
    |-BinaryOperator 0x564ee7369af0 <line:848:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x564ee7369a78 <col:3> '_Bool' lvalue Var 0x564ee735dd80 'weak$$choice1' '_Bool'
    | `-CallExpr 0x564ee7369ad0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x564ee7369ab8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x564ee7369a98 <col:19> '_Bool (void)' Function 0x564ee7301770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x564ee7369d48 <line:849:3, col:140> 'int' '='
    | |-DeclRefExpr 0x564ee7369b10 <col:3> 'int' lvalue Var 0x564ee735b598 '__unbuffered_p0_EAX' 'int'
    | `-ConditionalOperator 0x564ee7369d18 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x564ee7369ce8 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564ee7369cd0 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564ee7369b30 <col:25> '_Bool' lvalue Var 0x564ee735bbf0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x564ee7369c90 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x564ee7369c60 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x564ee7369c18 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x564ee7369c00 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x564ee7369b50 <col:61> '_Bool' lvalue Var 0x564ee735dd80 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x564ee7369c30 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x564ee7369ba8 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x564ee7369b90 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x564ee7369b70 <col:78> 'int *' lvalue Var 0x564ee735bc70 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x564ee7369c48 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564ee7369be0 <col:117> 'int' lvalue Var 0x564ee735b598 '__unbuffered_p0_EAX' 'int'
    |   `-ImplicitCastExpr 0x564ee7369d00 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x564ee7369cb0 <col:140> 'int' lvalue Var 0x564ee735b598 '__unbuffered_p0_EAX' 'int'
    |-BinaryOperator 0x564ee736a018 <line:850:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x564ee7369d68 <col:3> '_Bool' lvalue Var 0x564ee735c190 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564ee736a000 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564ee7369fe8 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564ee7369fc8 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x564ee7369fa8 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x564ee7369f10 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x564ee7369e78 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x564ee7369de0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x564ee7369dc8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x564ee7369d88 <col:23> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
    |         | | | `-IntegerLiteral 0x564ee7369da8 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x564ee7369e58 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x564ee7369e40 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x564ee7369e00 <col:33> 'int' lvalue Var 0x564ee735b598 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x564ee7369e20 <col:56> 'int' 2
    |         | `-BinaryOperator 0x564ee7369ef0 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564ee7369ed8 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564ee7369e98 <col:61> 'int' lvalue Var 0x564ee735bf60 '__unbuffered_p0_EBX' 'int'
    |         |   `-IntegerLiteral 0x564ee7369eb8 <col:84> 'int' 0
    |         `-BinaryOperator 0x564ee7369f88 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x564ee7369f70 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564ee7369f30 <col:89> 'int' lvalue Var 0x564ee735c080 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x564ee7369f50 <col:112> 'int' 1
    |-BinaryOperator 0x564ee736a148 <line:851:3, col:37> 'int' '='
    | |-DeclRefExpr 0x564ee736a038 <col:3> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
    | `-ConditionalOperator 0x564ee736a118 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x564ee736a0d0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564ee736a0b8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564ee736a058 <col:7> '_Bool' lvalue Var 0x564ee735c448 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x564ee736a0e8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564ee736a078 <col:25> 'int' lvalue Var 0x564ee735c4c8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x564ee736a100 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x564ee736a098 <col:37> 'int' lvalue Var 0x564ee735c3b0 'y' 'int'
    |-BinaryOperator 0x564ee736a1e0 <line:852:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x564ee736a168 <col:3> '_Bool' lvalue Var 0x564ee735c448 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x564ee736a1b8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x564ee736a188 <col:28> 'int' 0
    |-CallExpr 0x564ee736a238 <line:853:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564ee736a220 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564ee736a200 <col:3> 'void ()' Function 0x564ee7302060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564ee736a2b0 <line:854:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564ee736a298 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564ee736a258 <col:3> 'void (int)' Function 0x564ee7301d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564ee736a2f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564ee736a2d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564ee736a278 <col:21> '_Bool' lvalue Var 0x564ee735c190 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564ee736a328 <line:855:3, col:10>
      `-IntegerLiteral 0x564ee736a308 <col:10> 'int' 0
