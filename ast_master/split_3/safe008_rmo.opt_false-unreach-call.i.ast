TranslationUnitDecl 0x562254a5de18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562254a5e6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562254a5e3b0 '__int128'
|-TypedefDecl 0x562254a5e748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562254a5e3d0 'unsigned __int128'
|-TypedefDecl 0x562254a5ea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562254a5e820 'struct __NSConstantString_tag'
|   `-Record 0x562254a5e7a0 '__NSConstantString_tag'
|-TypedefDecl 0x562254a5eaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562254a5eab0 'char *'
|   `-BuiltinType 0x562254a5deb0 'char'
|-TypedefDecl 0x562254a9d650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562254a5ed90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562254a5ebd0 'struct __va_list_tag'
|     `-Record 0x562254a5eb50 '__va_list_tag'
|-FunctionDecl 0x562254a9d790 <./split_3/safe008_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x562254a9d6c0 <col:31> col:34 'int'
|-FunctionDecl 0x562254a9d958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562254a9da80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562254a9dbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562254a9db38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562254a9ddf8 <col:40, col:99>
|   |-IfStmt 0x562254a9ddc8 <col:42, col:88>
|   | |-UnaryOperator 0x562254a9dca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562254a9dc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562254a9dc70 <col:47> 'int' lvalue ParmVar 0x562254a9db38 'expression' 'int'
|   | `-CompoundStmt 0x562254a9ddb0 <col:59, col:88>
|   |   `-LabelStmt 0x562254a9dd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562254a9dd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562254a9dd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562254a9dcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x562254a9da80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562254a9dde0 <col:89>
|   `-ReturnStmt 0x562254a9dde8 <col:91>
|-FunctionDecl 0x562254a9de40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562254a9df00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562254a9e280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562254a9dfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562254a9e038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x562254a9e0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562254a9e138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562254a9e340 <line:10:22>
|-FunctionDecl 0x562254ac4390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562254a9e3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562254a9e430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x562254a9e4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562254a9e530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562254ac4450 <line:13:22>
|-FunctionDecl 0x562254ac4700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562254ac44c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562254ac4540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x562254ac45c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x562254ac47b8 <line:15:22>
|-TypedefDecl 0x562254ac4828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562254a5df70 'unsigned char'
|-TypedefDecl 0x562254ac4898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562254a5df90 'unsigned short'
|-TypedefDecl 0x562254ac4908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562254a5dfb0 'unsigned int'
|-TypedefDecl 0x562254ac4978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac49e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562254a5ded0 'signed char'
|-TypedefDecl 0x562254ac4a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562254a5df70 'unsigned char'
|-TypedefDecl 0x562254ac4ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562254a5def0 'short'
|-TypedefDecl 0x562254ac4b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562254a5df90 'unsigned short'
|-TypedefDecl 0x562254ac4ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562254a5df10 'int'
|-TypedefDecl 0x562254ac4c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562254a5dfb0 'unsigned int'
|-TypedefDecl 0x562254ac4c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac4cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac4d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac4dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac4e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac4eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562254a5dfb0 'unsigned int'
|-TypedefDecl 0x562254ac4f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562254a5dfb0 'unsigned int'
|-TypedefDecl 0x562254ac4f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac5008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac5078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562254a5dfb0 'unsigned int'
|-TypedefDecl 0x562254ac50e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac5158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac51c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac5238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562254a5df10 'int'
|-RecordDecl 0x562254ac5290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x562254ac5408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x562254ac54c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562254ac5460 'struct __fsid_t' sugar
|   `-RecordType 0x562254ac5310 '__fsid_t'
|     `-Record 0x562254ac5290 ''
|-TypedefDecl 0x562254ac5548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac55b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac5628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac5698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562254a5dfb0 'unsigned int'
|-TypedefDecl 0x562254ac5708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac5778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562254a5dfb0 'unsigned int'
|-TypedefDecl 0x562254ac57e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac5858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562254a5df10 'int'
|-TypedefDecl 0x562254ac58c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562254a5df10 'int'
|-TypedefDecl 0x562254ac5938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562254a5df10 'int'
|-TypedefDecl 0x562254ac59a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562254a5e630 'void *'
|   `-BuiltinType 0x562254a5de70 'void'
|-TypedefDecl 0x562254ac5a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac5a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac5af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac5b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac5bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac5c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac5cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac5d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac5d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac5e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac5e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac5f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562254ac5ed0 '__off64_t' sugar
|   |-Typedef 0x562254ac51c8 '__off64_t'
|   `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac6000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562254ac5fc0 '__quad_t *'
|   `-TypedefType 0x562254ac5f60 '__quad_t' sugar
|     |-Typedef 0x562254ac4d68 '__quad_t'
|     `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac6070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562254a5eab0 'char *'
|   `-BuiltinType 0x562254a5deb0 'char'
|-TypedefDecl 0x562254ac60e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254ac6150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562254a5dfb0 'unsigned int'
|-FunctionDecl 0x562254ac6298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x562254ac61c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x562254ac75e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x562254ac75d8 <line:72:3, col:34>
|     `-CallExpr 0x562254ac7598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x562254ac7580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562254ac7510 <col:10> '<builtin fn type>' Function 0x562254ac7380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x562254ac75c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562254ac7530 <col:29> 'unsigned int' lvalue ParmVar 0x562254ac61c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x562254ac7380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x562254ac7420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x562254ac7490 <col:10> Implicit
| `-ConstAttr 0x562254ac74e8 <col:10> Implicit
|-FunctionDecl 0x562254ac7740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x562254ac7638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x562254ac7a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x562254ac7a48 <line:77:3, col:34>
|     `-CallExpr 0x562254ac7a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x562254ac79f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562254ac7978 <col:10> '<builtin fn type>' Function 0x562254ac77e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x562254ac7a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x562254ac7998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x562254ac7638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x562254ac77e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x562254ac7888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x562254ac78f8 <col:10> Implicit
| `-ConstAttr 0x562254ac7950 <col:10> Implicit
|-TypedefDecl 0x562254ac7a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-TypedefDecl 0x562254ac7b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x562254ac7ae0 '__time_t' sugar
|   |-Typedef 0x562254ac5708 '__time_t'
|   `-BuiltinType 0x562254a5df30 'long'
|-RecordDecl 0x562254ac7b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x562254ac7c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x562254ac7cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x562254ac7d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x562254ac7d10 '__pid_t' sugar
|   |-Typedef 0x562254ac5238 '__pid_t'
|   `-BuiltinType 0x562254a5df10 'int'
|-RecordDecl 0x562254ac7da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x562254ac7e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x562254ac7eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x562254ac7f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x562254ac7fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-RecordDecl 0x562254ac8030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x562254ac82c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x562254ac93a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x562254ac8310 'struct cpu_set_t' sugar
|   `-RecordType 0x562254ac80b0 'cpu_set_t'
|     `-Record 0x562254ac8030 ''
|-FunctionDecl 0x562254ac9678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x562254ac9448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562254ac9550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x562254ac9728 <line:107:19>
|-FunctionDecl 0x562254ac9900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x562254ac9790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x562254ac99a8 <col:69>
|-FunctionDecl 0x562254ac9b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x562254ac9a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x562254ac9bc8 <col:64>
|-FunctionDecl 0x562254ac9e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x562254ac9c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562254ac9d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562254ac9f38 <line:113:22>
|-FunctionDecl 0x562254aca1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562254ac9fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562254aca098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562254aca268 <col:88>
|-FunctionDecl 0x562254aca588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562254aca2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562254aca3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x562254aca440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562254aca640 <col:62>
|-FunctionDecl 0x562254aca7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562254aca6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x562254aca860 <col:63>
|-FunctionDecl 0x562254aca988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562254acaa28 <col:47>
|-FunctionDecl 0x562254acab30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562254acaa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562254acabd8 <col:69>
|-FunctionDecl 0x562254acace0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562254acac48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562254acad88 <col:69>
|-FunctionDecl 0x562254acb048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562254acadf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562254acaf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562254acb0f8 <col:88>
|-TypedefDecl 0x562254acb188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x562254acb150 '__clock_t' sugar
|   |-Typedef 0x562254ac5548 '__clock_t'
|   `-BuiltinType 0x562254a5df30 'long'
|-TypedefDecl 0x562254acb218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562254acb1e0 '__clockid_t' sugar
|   |-Typedef 0x562254ac5938 '__clockid_t'
|   `-BuiltinType 0x562254a5df10 'int'
|-TypedefDecl 0x562254acb2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562254acb270 '__timer_t' sugar
|   |-Typedef 0x562254ac59a8 '__timer_t'
|   `-PointerType 0x562254a5e630 'void *'
|     `-BuiltinType 0x562254a5de70 'void'
|-RecordDecl 0x562254acb300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x562254acb3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x562254acb440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562254acb4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x562254acb510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562254acb578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562254acb5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x562254acb648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562254acb6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x562254acb718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562254acb780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562254acb7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x562254acb838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x562254acb908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562254acb978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562254acba20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562254acbbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562254acbc90 <col:45>
|-FunctionDecl 0x562254acbe70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562254acbd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x562254acbf18 <col:54>
|-FunctionDecl 0x562254acc118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562254acbf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562254acbff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562254acc1c8 <line:157:22>
| `-ConstAttr 0x562254acc220 <col:63>
|-FunctionDecl 0x562254acd050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562254acc318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562254acd0f8 <col:56>
|-FunctionDecl 0x562254acd4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562254acd168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562254acd1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562254acd260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562254acd358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562254acd560 <col:54>
|-RecordDecl 0x562254acd5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x562254acd668 parent 0x562254a5de18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562254acd8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562254acd968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562254acd9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562254acda38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562254acdb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562254acdc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562254acdbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x562254acdb80 'struct __locale_struct' sugar
|     `-RecordType 0x562254acd640 'struct __locale_struct'
|       `-Record 0x562254acd5b8 '__locale_struct'
|-TypedefDecl 0x562254acdcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562254acdcc0 '__locale_t' sugar
|   |-Typedef 0x562254acdc48 '__locale_t'
|   `-PointerType 0x562254acdbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x562254acdb80 'struct __locale_struct' sugar
|       `-RecordType 0x562254acd640 'struct __locale_struct'
|         `-Record 0x562254acd5b8 '__locale_struct'
|-FunctionDecl 0x562254acf110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562254acdd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562254acdde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562254acde60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562254acdef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562254acdf68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562254acf1d8 <col:40>
|-FunctionDecl 0x562254acf3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562254acf2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562254acf470 <col:66>
|-FunctionDecl 0x562254acf580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562254acf4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562254acf628 <col:69>
|-FunctionDecl 0x562254acf858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562254acf690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562254acf720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562254acf908 <col:52>
|-FunctionDecl 0x562254acfab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562254acf970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562254acfa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562254acfb60 <col:55>
|-FunctionDecl 0x562254acfcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562254acfbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562254acfda0 <col:62>
|-FunctionDecl 0x562254acff18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562254acfe08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562254acffc0 <col:60>
|-FunctionDecl 0x562254ad02b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562254ad0118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562254ad0198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562254ad0368 <col:44>
|-FunctionDecl 0x562254ad0578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562254ad03d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562254ad0450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562254ad0628 <col:49>
|-VarDecl 0x562254ad0728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562254ad07a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562254ad0828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562254ad08f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562254ad0a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562254ad0ac0 <col:42>
|-VarDecl 0x562254ad0b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562254ad0bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562254ad0d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562254ad0c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562254ad0de0 <col:57>
|-FunctionDecl 0x562254ad0ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562254ad0e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562254ad0f98 <col:56>
|-FunctionDecl 0x562254ad10d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562254ad1018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562254ad1178 <col:59>
|-FunctionDecl 0x562254ad1280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x562254ad11e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562254ad1328 <col:48>
| `-ConstAttr 0x562254ad1380 <col:89>
|-FunctionDecl 0x562254ad15e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562254ad1438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562254ad14c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562254ad1848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562254ad16d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562254ad1768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562254ad18f8 <col:88>
|-FunctionDecl 0x562254ad1a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562254ad1960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562254ad19f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562254ad1b40 <col:88>
|-FunctionDecl 0x562254ad1d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562254ad1ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562254ad1c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562254ad1e08 <line:208:22>
|-FunctionDecl 0x562254ad2178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562254ad1e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562254ad1ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562254ad1f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562254ad2010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562254ad2478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562254ad2278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562254ad2350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562254ad2528 <col:85>
|-FunctionDecl 0x562254ad2918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562254ad2590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562254ad26c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x562254ad27d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562254ad29d0 <col:52>
|-FunctionDecl 0x562254ad2b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562254ad2a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562254ad2bf0 <col:61>
|-FunctionDecl 0x562254ad30f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562254ad2c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562254ad2cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562254ad2e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562254ad2ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562254ad31b0 <col:62>
|-FunctionDecl 0x562254ad33c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562254ad3218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562254ad32a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562254ad3478 <line:221:22>
|-FunctionDecl 0x562254ad3578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562254ad34e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562254ad3620 <col:65>
|-TypedefDecl 0x562254ad3690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562254a5dfd0 'unsigned long'
|-RecordDecl 0x562254ad36e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x562254ad3830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562254ad3898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562254ad3948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562254ad38f0 'union pthread_attr_t' sugar
|   `-RecordType 0x562254ad3770 'union pthread_attr_t'
|     `-Record 0x562254ad36e8 'pthread_attr_t'
|-RecordDecl 0x562254ad39a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562254ad3b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562254ad3b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562254ad3c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562254ad3be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562254ad3a20 'struct __pthread_internal_list'
|     `-Record 0x562254ad39a0 '__pthread_internal_list'
|-RecordDecl 0x562254ad3cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x562254ad3d58 parent 0x562254a5de18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562254ad3e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562254ad3e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562254ad3f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562254ad3f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562254ad3fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562254ad4038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x562254ad8110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x562254ad81c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x562254ad82b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x562254ad8318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562254ad84a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x562254ad8440 'union pthread_mutex_t' sugar
|   `-RecordType 0x562254ad3d30 'pthread_mutex_t'
|     `-Record 0x562254ad3cb0 ''
|-RecordDecl 0x562254ad8510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x562254ad8650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562254ad86b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562254ad8770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x562254ad8710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x562254ad8590 'pthread_mutexattr_t'
|     `-Record 0x562254ad8510 ''
|-RecordDecl 0x562254ad87e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x562254ad8888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x562254ad8950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562254ad89b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x562254ad8a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x562254ad8a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x562254ad8af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x562254ad8b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562254ad8bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562254ad8c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562254ad8ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_3/safe008_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_3/safe008_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x562254ad8dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x562254ad8e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562254ad8f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562254ad8f10 'union pthread_cond_t' sugar
|   `-RecordType 0x562254ad8860 'pthread_cond_t'
|     `-Record 0x562254ad87e0 ''
|-RecordDecl 0x562254ad8fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x562254ada130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562254ada198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562254ada250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562254ada1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x562254ad9060 'pthread_condattr_t'
|     `-Record 0x562254ad8fe0 ''
|-TypedefDecl 0x562254ada2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562254a5dfb0 'unsigned int'
|-TypedefDecl 0x562254ada348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562254a5df10 'int'
|-RecordDecl 0x562254ada3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x562254ada448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x562254ada510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562254ada578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562254ada5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562254ada648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562254ada6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562254ada718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562254ada780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562254ada7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562254ada850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562254ada8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562254ada920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562254ada9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_3/safe008_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_3/safe008_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x562254adaa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562254adaae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562254adac30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562254adabd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562254ada420 'pthread_rwlock_t'
|     `-Record 0x562254ada3a0 ''
|-RecordDecl 0x562254adaca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x562254adade0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562254adae48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562254adaf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562254adaea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562254adad20 'pthread_rwlockattr_t'
|     `-Record 0x562254adaca0 ''
|-TypedefDecl 0x562254adaf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562254a5df14 'volatile int' volatile
|   `-BuiltinType 0x562254a5df10 'int'
|-RecordDecl 0x562254adafe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x562254adc140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562254adc1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562254adc260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562254adc200 'union pthread_barrier_t' sugar
|   `-RecordType 0x562254adb060 'pthread_barrier_t'
|     `-Record 0x562254adafe0 ''
|-RecordDecl 0x562254adc2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x562254adc3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562254adc438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562254adc4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562254adc490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562254adc350 'pthread_barrierattr_t'
|     `-Record 0x562254adc2d0 ''
|-TypedefDecl 0x562254adc608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562254adc5a0 'long [8]' 8 
|   `-BuiltinType 0x562254a5df30 'long'
|-EnumDecl 0x562254adc660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x562254adc728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562254adc778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562254adc7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x562254adc898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562254adc8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562254adc938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562254adc988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562254adca10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562254adc9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x562254adc9d8 <col:26> 'int' EnumConstant 0x562254adc898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562254adca98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562254adca80 <col:29> 'int'
| |   `-DeclRefExpr 0x562254adca60 <col:29> 'int' EnumConstant 0x562254adc8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562254adcb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562254adcb08 <col:30> 'int'
| |   `-DeclRefExpr 0x562254adcae8 <col:30> 'int' EnumConstant 0x562254adc938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562254adcba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562254adcb90 <col:27> 'int'
|     `-DeclRefExpr 0x562254adcb70 <col:27> 'int' EnumConstant 0x562254adca10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562254adcbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x562254adccc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562254adcd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562254adcd38 <col:30> 'int'
| |   `-DeclRefExpr 0x562254adcd18 <col:30> 'int' EnumConstant 0x562254adccc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562254adcda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562254adce28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562254adce10 <col:29> 'int'
|     `-DeclRefExpr 0x562254adcdf0 <col:29> 'int' EnumConstant 0x562254adcda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562254adce78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x562254adcf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562254adcf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562254adcfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562254add038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x562254add150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562254add1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562254add1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562254add278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562254add260 <col:31> 'int'
|     `-DeclRefExpr 0x562254add240 <col:31> 'int' EnumConstant 0x562254add150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562254add2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x562254add398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562254add3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562254add438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x562254add508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562254add558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562254add5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x562254add678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562254add6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562254add718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562254add958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562254add9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562254adda28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562254addb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562254addb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x562254addc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562254addcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562254addd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x562254adddd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562254adde28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562254ade488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562254addf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562254ade030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562254ade270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562254ade2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562254ade548 <col:47>
| |-NonNullAttr 0x562254ade5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x562254ade5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x562254ade700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562254ade630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562254ade958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562254ade7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562254ade838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562254adeb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562254adea18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562254adebd0 <col:60>
|-FunctionDecl 0x562254aded20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562254adedc0 <col:54>
| `-ConstAttr 0x562254adee18 <col:95>
|-FunctionDecl 0x562254adefe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562254adee50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562254adeec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562254adf098 <line:394:19>
| `-ConstAttr 0x562254adf0f0 <col:60>
|-FunctionDecl 0x562254ae0b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562254ae09d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562254ae0bb0 <col:71>
| `-NonNullAttr 0x562254ae0c08 <col:112, col:126> 1
|-FunctionDecl 0x562254ae0d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562254ae0c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562254ae0db8 <line:397:22>
| `-NonNullAttr 0x562254ae0e10 <col:63, col:77> 1
|-FunctionDecl 0x562254ae1038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562254ae0e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562254ae0ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562254ae10e8 <line:400:22>
| `-NonNullAttr 0x562254ae1140 <col:63, col:80> 1 2
|-FunctionDecl 0x562254ae1348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562254ae1188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562254ae1208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562254ae13f8 <line:403:22>
| `-NonNullAttr 0x562254ae1450 <col:63, col:77> 1
|-FunctionDecl 0x562254ae16a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562254ae1498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562254ae1540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562254ae1758 <line:406:22>
| `-NonNullAttr 0x562254ae17b0 <col:63, col:80> 1 2
|-FunctionDecl 0x562254ae29e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562254ae17f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562254ae1870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562254ae2a98 <line:409:22>
| `-NonNullAttr 0x562254ae2af0 <col:63, col:77> 1
|-FunctionDecl 0x562254ae2d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562254ae2b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562254ae2bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562254ae2dd8 <line:412:22>
| `-NonNullAttr 0x562254ae2e30 <col:63, col:80> 1 2
|-FunctionDecl 0x562254ae3068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562254ae2e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562254ae2f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562254ae3118 <col:37>
| `-NonNullAttr 0x562254ae3170 <col:78, col:95> 1 2
|-FunctionDecl 0x562254ae3358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254ae31b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562254ae3238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562254ae3408 <line:418:22>
| `-NonNullAttr 0x562254ae3460 <col:63, col:80> 1 2
|-FunctionDecl 0x562254ae35e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562254ae34a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562254ae3528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562254ae3698 <line:420:22>
| `-NonNullAttr 0x562254ae36f0 <col:63, col:77> 1
|-FunctionDecl 0x562254ae3898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254ae3738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562254ae37b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562254ae3948 <line:423:22>
| `-NonNullAttr 0x562254ae39c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562254ae3b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562254ae3a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562254ae3a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562254ae3bf8 <line:426:22>
| `-NonNullAttr 0x562254ae3c50 <col:63, col:77> 1
|-FunctionDecl 0x562254ae3df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254ae3c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562254ae3d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562254ae3ea8 <line:429:22>
| `-NonNullAttr 0x562254ae3f00 <col:63, col:80> 1 2
|-FunctionDecl 0x562254ae4088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562254ae3f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562254ae3fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562254ae4138 <line:431:22>
| `-NonNullAttr 0x562254ae4190 <col:63, col:77> 1
|-FunctionDecl 0x562254ae43b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x562254ae41d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562254ae4258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562254ae4468 <line:434:22>
| |-NonNullAttr 0x562254ae44c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x562254ae44f8 <col:100> "" ""
|-FunctionDecl 0x562254ae4708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562254ae4548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562254ae45c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x562254ae47b8 <line:437:22>
| |-NonNullAttr 0x562254ae4810 <col:63, col:77> 1
| `-DeprecatedAttr 0x562254ae4848 <col:97> "" ""
|-FunctionDecl 0x562254ae4a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562254ae4898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562254ae4910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562254ae4af8 <line:440:22>
| `-NonNullAttr 0x562254ae4b50 <col:63, col:80> 1 2
|-FunctionDecl 0x562254ae4cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562254ae4b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562254ae4c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562254ae4d80 <line:443:22>
| `-NonNullAttr 0x562254ae4dd8 <col:63, col:77> 1
|-FunctionDecl 0x562254ae50c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562254ae4e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562254ae4ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562254ae4f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562254ae5180 <line:447:22>
| `-NonNullAttr 0x562254ae51d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562254ae5488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562254ae5230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562254ae52b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562254ae5328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562254ae5540 <col:43>
| `-NonNullAttr 0x562254ae5598 <col:84, col:98> 1
|-FunctionDecl 0x562254ae5858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562254ae55e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562254ae5668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x562254ae56f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562254ae5910 <line:452:22>
| `-NonNullAttr 0x562254ae5968 <col:63, col:77> 3
|-FunctionDecl 0x562254ae5c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562254ae59e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562254ae5a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562254ae5af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562254ae5d30 <line:456:22>
| `-NonNullAttr 0x562254ae5d88 <col:63, col:80> 2 3
|-FunctionDecl 0x562254ae5f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562254ae5dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562254ae5e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x562254ae6028 <line:458:22>
|-FunctionDecl 0x562254ae63f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x562254ae60f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x562254ae6290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x562254ae64a8 <col:52, col:69> 1 2
|-FunctionDecl 0x562254ae6650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x562254ae6530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x562254ae65b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x562254ae6838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x562254ae6718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x562254ae6798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x562254ae69f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x562254ae68f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x562254ae6b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x562254ae6bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x562254ae6c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x562254ae6d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x562254ae6dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x562254ae6fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_3/safe008_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x562254ae7098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x562254ae7150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x562254ae70f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x562254ae6c50 '__pthread_unwind_buf_t'
| |   `-Record 0x562254ae6bd0 ''
| `-AlignedAttr 0x562254ae71a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x562254ae7220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x562254ae7380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x562254ae73e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x562254ae7450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x562254ae74b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x562254ae76c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562254ae75b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562254ae7808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562254ae7778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562254ae7a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562254ae78c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x562254ae7aa8 <line:487:22>
|-RecordDecl 0x562254ae7b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x562254ae7e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x562254ae7c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x562254ae7cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x562254ae7ec8 <col:86>
| `-ReturnsTwiceAttr 0x562254ae7f20 <col:12> Implicit
|-FunctionDecl 0x562254ae8248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562254ae7ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x562254ae8100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x562254ae82f8 <line:493:22>
| `-NonNullAttr 0x562254ae8350 <col:63, col:77> 1
|-FunctionDecl 0x562254ae84c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562254ae8398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562254ae8570 <line:495:22>
| `-NonNullAttr 0x562254ae85c8 <col:63, col:77> 1
|-FunctionDecl 0x562254ae86d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562254ae8618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562254ae8778 <line:497:22>
| `-NonNullAttr 0x562254ae87d0 <col:52, col:66> 1
|-FunctionDecl 0x562254ae88d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562254ae8818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562254ae8978 <line:499:22>
| `-NonNullAttr 0x562254ae89d0 <col:52, col:66> 1
|-FunctionDecl 0x562254ae9c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562254ae9a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562254ae9ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562254ae9cd8 <col:36>
| `-NonNullAttr 0x562254ae9d30 <col:66, col:83> 1 2
|-FunctionDecl 0x562254ae9e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562254ae9d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562254ae9ed8 <line:504:22>
| `-NonNullAttr 0x562254ae9f30 <col:52, col:66> 1
|-FunctionDecl 0x562254aea1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254ae9fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562254aea060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562254aea278 <line:508:22>
| `-NonNullAttr 0x562254aea2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562254aea598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562254aea318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562254aea398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562254aea418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562254aea650 <line:512:22>
| `-NonNullAttr 0x562254aea6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x562254aea7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562254aea6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562254aea858 <line:514:22>
| `-NonNullAttr 0x562254aea8b0 <col:63, col:77> 1
|-FunctionDecl 0x562254aeaad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562254aea960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562254aeab80 <line:516:22>
| `-NonNullAttr 0x562254aeabd8 <col:63, col:77> 1
|-FunctionDecl 0x562254aeace0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562254aeac28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562254aead88 <line:518:22>
| `-NonNullAttr 0x562254aeade0 <col:63, col:77> 1
|-FunctionDecl 0x562254aeb008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254aeae28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562254aeaea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562254aeb0b8 <line:522:22>
| `-NonNullAttr 0x562254aeb110 <col:63, col:80> 1 2
|-FunctionDecl 0x562254aeb318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562254aeb158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562254aeb1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562254aeb3c8 <line:525:22>
| `-NonNullAttr 0x562254aeb420 <col:63, col:77> 1
|-FunctionDecl 0x562254aeb5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254aeb468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562254aeb4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562254aeb678 <line:528:22>
| `-NonNullAttr 0x562254aeb6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562254aeb858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562254aeb718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562254aeb798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562254aeb908 <line:530:22>
| `-NonNullAttr 0x562254aeb960 <col:63, col:77> 1
|-FunctionDecl 0x562254aebb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254aeb9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562254aeba40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562254aebbd0 <line:534:22>
| `-NonNullAttr 0x562254aebc28 <col:63, col:80> 1 2
|-FunctionDecl 0x562254aebdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562254aebc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562254aebcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x562254aebe68 <line:537:22>
| `-NonNullAttr 0x562254aebec0 <col:63, col:77> 1
|-FunctionDecl 0x562254aec068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254aebf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562254aebf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562254aec118 <line:541:22>
| `-NonNullAttr 0x562254aec170 <col:63, col:80> 1 2
|-FunctionDecl 0x562254aec2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562254aec1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562254aec238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562254aec3a8 <line:544:22>
| `-NonNullAttr 0x562254aec400 <col:63, col:77> 1
|-FunctionDecl 0x562254aec5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562254aec448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562254aec4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562254aec698 <line:547:22>
| `-NonNullAttr 0x562254aec6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x562254aec878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562254aec738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562254aec7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562254aec928 <line:550:22>
| `-NonNullAttr 0x562254aec980 <col:63, col:77> 1
|-FunctionDecl 0x562254aedcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562254aedaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562254aedbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562254aedda8 <col:29>
| `-NonNullAttr 0x562254aede00 <col:70, col:84> 1
|-FunctionDecl 0x562254aedf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562254aede48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562254aee020 <line:555:22>
| `-NonNullAttr 0x562254aee078 <col:63, col:77> 1
|-FunctionDecl 0x562254aee180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562254aee0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562254aee228 <line:557:22>
| `-NonNullAttr 0x562254aee280 <col:52, col:66> 1
|-FunctionDecl 0x562254aee380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562254aee2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562254aee428 <line:559:19>
| `-NonNullAttr 0x562254aee480 <col:49, col:63> 1
|-FunctionDecl 0x562254aee6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562254aee4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562254aee558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562254aee768 <col:39>
| `-NonNullAttr 0x562254aee7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x562254aee8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562254aee808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562254aee968 <line:564:22>
| `-NonNullAttr 0x562254aee9c0 <col:52, col:66> 1
|-FunctionDecl 0x562254aeeb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562254aeea70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562254aeebd0 <line:566:22>
| `-NonNullAttr 0x562254aeec28 <col:52, col:66> 1
|-FunctionDecl 0x562254aeede8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562254aeec78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562254aeed08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562254aeee98 <col:39>
| `-NonNullAttr 0x562254aeeef0 <col:69, col:86> 1 2
|-FunctionDecl 0x562254aeeff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562254aeef38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562254aef098 <line:571:22>
| `-NonNullAttr 0x562254aef0f0 <col:52, col:66> 1
|-FunctionDecl 0x562254aef2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562254aef1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562254aef380 <line:573:22>
| `-NonNullAttr 0x562254aef3d8 <col:63, col:77> 1
|-FunctionDecl 0x562254aef4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562254aef428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562254aef588 <line:575:22>
| `-NonNullAttr 0x562254aef5e0 <col:63, col:77> 1
|-FunctionDecl 0x562254aef808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254aef628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562254aef6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562254aef8b8 <line:579:22>
| `-NonNullAttr 0x562254aef910 <col:63, col:80> 1 2
|-FunctionDecl 0x562254aefb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562254aef958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562254aef9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562254aefbe8 <line:582:22>
| `-NonNullAttr 0x562254aefc40 <col:63, col:77> 1
|-FunctionDecl 0x562254aefde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254aefc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562254aefd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562254aefe98 <line:586:22>
| `-NonNullAttr 0x562254aefef0 <col:63, col:80> 1 2
|-FunctionDecl 0x562254af0078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562254aeff38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562254aeffb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562254af0128 <col:36>
| `-NonNullAttr 0x562254af0180 <col:77, col:91> 1
|-FunctionDecl 0x562254af04b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562254af0260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562254af0370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562254af0568 <line:591:22>
| `-NonNullAttr 0x562254af05c0 <col:63, col:77> 1
|-FunctionDecl 0x562254af0738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562254af0608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562254af07e0 <line:593:22>
| `-NonNullAttr 0x562254af0838 <col:63, col:77> 1
|-FunctionDecl 0x562254af0940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562254af0888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562254af09e8 <line:595:22>
| `-NonNullAttr 0x562254af0a40 <col:52, col:66> 1
|-FunctionDecl 0x562254af0b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562254af0aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562254af0c00 <line:597:22>
| `-NonNullAttr 0x562254af0c58 <col:52, col:66> 1
|-FunctionDecl 0x562254af0e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562254af0ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562254af0d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562254af0f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x562254af1268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562254af0fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562254af1030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562254af10c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562254af1320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x562254af1538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562254af1400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562254af15e0 <line:606:22>
| `-NonNullAttr 0x562254af1638 <col:63, col:77> 1
|-FunctionDecl 0x562254af1740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562254af1688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562254af17e8 <line:608:22>
| `-NonNullAttr 0x562254af1840 <col:63, col:77> 1
|-FunctionDecl 0x562254af1aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254af1888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562254af1908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562254af1b50 <line:612:22>
| `-NonNullAttr 0x562254af1ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x562254af1db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562254af1bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562254af1c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562254af1e68 <col:37>
| `-NonNullAttr 0x562254af1ec0 <col:78, col:92> 1
|-FunctionDecl 0x562254af20d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562254af1f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562254af1fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562254af2188 <line:618:22>
| `-NonNullAttr 0x562254af21e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562254af23a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562254af2228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562254af22a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562254af2458 <line:621:22>
| `-NonNullAttr 0x562254af24b0 <col:63, col:77> 1
|-FunctionDecl 0x562254af2758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562254af2590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562254af2610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562254af2808 <line:623:22>
| `-NonNullAttr 0x562254af2860 <col:63, col:77> 1
|-FunctionDecl 0x562254af29d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562254af28a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562254af2ab0 <line:625:22>
| `-NonNullAttr 0x562254af2b08 <col:63, col:77> 1
|-FunctionDecl 0x562254af2c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562254af2b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562254af2cb8 <line:627:22>
| `-NonNullAttr 0x562254af2d10 <col:52, col:66> 1
|-FunctionDecl 0x562254af2e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562254af2d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562254af2eb8 <line:629:22>
| `-NonNullAttr 0x562254af2f10 <col:52, col:66> 1
|-FunctionDecl 0x562254af3010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562254af2f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562254af30b8 <line:631:22>
| `-NonNullAttr 0x562254af3110 <col:52, col:66> 1
|-FunctionDecl 0x562254af34e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562254af31f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562254af3300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562254af3380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x562254af35a0 <line:635:22>
| `-NonNullAttr 0x562254af35f8 <col:63, col:77> 1
|-FunctionDecl 0x562254af3778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562254af3648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562254af3820 <line:637:22>
| `-NonNullAttr 0x562254af3878 <col:63, col:77> 1
|-FunctionDecl 0x562254af3980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562254af38c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562254af3a28 <line:639:22>
| `-NonNullAttr 0x562254af3a80 <col:52, col:66> 1
|-FunctionDecl 0x562254af4c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562254af4b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562254af4d30 <line:641:22>
| `-NonNullAttr 0x562254af4d88 <col:63, col:77> 1
|-FunctionDecl 0x562254af4e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562254af4dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562254af4f38 <line:643:22>
| `-NonNullAttr 0x562254af4f90 <col:63, col:77> 1
|-FunctionDecl 0x562254af51b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562254af4fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562254af5058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562254af5268 <line:647:22>
| `-NonNullAttr 0x562254af52c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562254af54c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562254af5308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562254af5388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562254af5578 <line:650:22>
| `-NonNullAttr 0x562254af55d0 <col:63, col:77> 1
|-FunctionDecl 0x562254af5918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x562254af56b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x562254af57d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x562254af59c8 <line:653:22>
| `-NonNullAttr 0x562254af5a20 <col:63, col:77> 1
|-FunctionDecl 0x562254af5b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562254af5a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562254af5c30 <col:69>
|-FunctionDecl 0x562254af5da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562254af5c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562254af5e50 <col:72>
|-FunctionDecl 0x562254af6088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562254af5eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562254af5f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562254af6138 <col:44>
|-FunctionDecl 0x562254af6358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x562254af61a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562254af6218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562254af6408 <line:660:22>
| `-NonNullAttr 0x562254af6460 <col:63, col:77> 2
|-FunctionDecl 0x562254af68a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562254af6540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562254af6650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562254af6760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562254af6960 <col:47>
|-FunctionDecl 0x562254af6af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x562254af69d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562254af6c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562254af6bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562254af6da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x562254af6d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562254af6e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562254af6f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562254af6fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x562254af70a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562254af7120 prev 0x562254af70a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x562254af7188 <col:24> 'int' 0
|-VarDecl 0x562254af71c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x562254af7240 prev 0x562254af71c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x562254af72a8 <col:27> 'int' 0
|-VarDecl 0x562254af72e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x562254af7360 prev 0x562254af72e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x562254af73c8 <col:27> 'int' 0
|-VarDecl 0x562254af73f8 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562254af7470 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562254af74f0 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x562254af7570 prev 0x562254af74f0 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562254af75d8 <col:9> 'int' 0
|-VarDecl 0x562254af7610 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x562254af7690 prev 0x562254af7610 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562254af76f8 <col:9> 'int' 0
|-VarDecl 0x562254af7730 <line:683:1, col:5> col:5 used z 'int'
|-VarDecl 0x562254af77b0 prev 0x562254af7730 <line:684:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x562254af7818 <col:9> 'int' 0
|-VarDecl 0x562254af7848 <line:685:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x562254af78c8 <line:686:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x562254af7940 <line:687:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x562254af79b8 <line:688:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x562254af7a30 <line:689:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x562254af7b00 <line:690:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x562254af7b78 <line:691:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x562254af7bf0 <line:692:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x562254af7c68 <line:693:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x562254af7ce0 <line:694:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x562254af7d58 <line:695:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x562254af7dd8 <line:696:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x562254af7e58 <line:697:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x562254af7ed0 <line:698:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x562254af7f50 <line:699:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x562254af7fc8 <line:700:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x562254af8040 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562254af80b8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562254af81d0 prev 0x562254af6af0 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x562254af8138 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562254af99f8 <line:704:1, line:731:1>
|   |-CallExpr 0x562254af82e8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254af82d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af8278 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254af8360 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562254af8308 <col:3> 'int' lvalue Var 0x562254af7f50 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562254af8348 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562254af8328 <col:15> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
|   |-BinaryOperator 0x562254af83c0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562254af8380 <col:3> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x562254af83a0 <col:15> 'int' 2
|   |-BinaryOperator 0x562254af8438 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562254af83e0 <col:3> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562254af8420 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562254af8400 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562254af84d0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562254af8458 <col:3> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562254af84a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562254af8478 <col:27> 'int' 1
|   |-CallExpr 0x562254af8658 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562254af8640 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562254af84f0 <col:3> 'void (int)' Function 0x562254a9dbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562254af85f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562254af85d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562254af85b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562254af8568 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562254af8550 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562254af8510 <col:23> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562254af8598 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562254af8580 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562254af8530 <col:41> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562254af86d8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562254af8680 <col:3> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562254af86c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562254af86a0 <col:20> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562254af8750 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562254af86f8 <col:3> '_Bool' lvalue Var 0x562254af7bf0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562254af8738 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562254af8718 <col:20> '_Bool' lvalue Var 0x562254af79b8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562254af87c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562254af8770 <col:3> '_Bool' lvalue Var 0x562254af7c68 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562254af87b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562254af8790 <col:20> '_Bool' lvalue Var 0x562254af7a30 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562254af8840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562254af87e8 <col:3> '_Bool' lvalue Var 0x562254af7ce0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562254af8828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562254af8808 <col:20> '_Bool' lvalue Var 0x562254af7b00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562254af88d8 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562254af8860 <col:3> '_Bool' lvalue Var 0x562254af79b8 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x562254af88b0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562254af8880 <col:27> 'int' 1
|   |-CallExpr 0x562254af8930 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254af8918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af88f8 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562254af8988 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254af8970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af8950 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254af89e8 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562254af89a8 <col:3> 'int' lvalue Var 0x562254af7570 'x' 'int'
|   | `-IntegerLiteral 0x562254af89c8 <col:7> 'int' 1
|   |-CallExpr 0x562254af8a40 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254af8a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af8a08 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562254af8a98 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254af8a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af8a60 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254af8d98 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562254af8ab8 <col:3> 'int' lvalue Var 0x562254af77b0 'z' 'int'
|   | `-ConditionalOperator 0x562254af8d68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562254af8b90 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562254af8b48 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562254af8b30 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562254af8ad8 <col:7> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562254af8b78 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562254af8b60 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562254af8b10 <col:25> '_Bool' lvalue Var 0x562254af79b8 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x562254af8d50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562254af8bb0 <col:42> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562254af8d30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562254af8d00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562254af8c70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562254af8c28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562254af8c10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562254af8bd0 <col:55> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562254af8c58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562254af8c40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562254af8bf0 <col:73> '_Bool' lvalue Var 0x562254af7bf0 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562254af8cd0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562254af8c90 <col:90> 'int' lvalue Var 0x562254af7f50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562254af8ce8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254af8cb0 <col:102> 'int' lvalue Var 0x562254af77b0 'z' 'int'
|   |-BinaryOperator 0x562254af8fa0 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562254af8db8 <col:3> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562254af8f88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254af8f58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562254af8e78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562254af8e30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562254af8e18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562254af8dd8 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562254af8e60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562254af8e48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562254af8df8 <col:38> '_Bool' lvalue Var 0x562254af79b8 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562254af8f10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254af8ec8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254af8e98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562254af8f40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254af8f28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254af8ef0 <col:66> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562254af9288 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562254af8fc0 <col:3> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562254af9270 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254af9240 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562254af9160 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562254af9080 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562254af9038 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562254af9020 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562254af8fe0 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562254af9068 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562254af9050 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562254af9000 <col:38> '_Bool' lvalue Var 0x562254af79b8 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562254af9140 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562254af90f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562254af90e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562254af90a0 <col:56> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562254af9128 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562254af9110 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562254af90c0 <col:74> '_Bool' lvalue Var 0x562254af7bf0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562254af91f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254af91b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254af9180 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562254af9228 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254af9210 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254af91d8 <col:102> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562254af9490 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562254af92a8 <col:3> '_Bool' lvalue Var 0x562254af79b8 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562254af9478 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254af9448 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562254af9368 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562254af9320 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562254af9308 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562254af92c8 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562254af9350 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562254af9338 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562254af92e8 <col:38> '_Bool' lvalue Var 0x562254af79b8 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562254af9400 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254af93b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254af9388 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562254af9430 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254af9418 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254af93e0 <col:66> '_Bool' lvalue Var 0x562254af79b8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562254af9778 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562254af94b0 <col:3> '_Bool' lvalue Var 0x562254af7bf0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562254af9760 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254af9730 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562254af9650 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562254af9570 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562254af9528 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562254af9510 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562254af94d0 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562254af9558 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562254af9540 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562254af94f0 <col:38> '_Bool' lvalue Var 0x562254af79b8 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562254af9630 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562254af95e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562254af95d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562254af9590 <col:56> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562254af9618 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562254af9600 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562254af95b0 <col:74> '_Bool' lvalue Var 0x562254af7bf0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562254af96e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254af96a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254af9670 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562254af9718 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254af9700 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254af96c8 <col:102> '_Bool' lvalue Var 0x562254af7bf0 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x562254af97d0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254af97b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af9798 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562254af9828 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254af9810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af97f0 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254af98e0 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562254af9848 <col:3> 'int' lvalue Var 0x562254af7120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562254af98c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562254af98a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562254af9868 <col:22> 'int' lvalue Var 0x562254af7120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562254af9888 <col:41> 'int' 1
|   |-CallExpr 0x562254af9938 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254af9920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af9900 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562254af99e8 <line:730:3, col:36>
|     `-CallExpr 0x562254af99c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562254af99b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562254af9958 <col:10> 'void *(void)' Function 0x562254a9d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562254af9bb8 prev 0x562254af6c48 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562254af9b20 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562254afadf0 <line:733:1, line:751:1>
|   |-CallExpr 0x562254af9c98 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254af9c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af9c60 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254af9d10 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562254af9cb8 <col:3> 'int' lvalue Var 0x562254af7240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562254af9cf8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562254af9cd8 <col:25> 'int' lvalue Var 0x562254af7570 'x' 'int'
|   |-CallExpr 0x562254af9d68 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254af9d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af9d30 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562254af9dc0 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254af9da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af9d88 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254af9e20 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562254af9de0 <col:3> 'int' lvalue Var 0x562254af7690 'y' 'int'
|   | `-IntegerLiteral 0x562254af9e00 <col:7> 'int' 1
|   |-CallExpr 0x562254af9e78 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254af9e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af9e40 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562254af9ed0 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254af9eb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254af9e98 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254afa1b8 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562254af9ef0 <col:3> 'int' lvalue Var 0x562254af77b0 'z' 'int'
|   | `-ConditionalOperator 0x562254afa188 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562254af9fb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562254af9f68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562254af9f50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562254af9f10 <col:7> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562254af9f98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562254af9f80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562254af9f30 <col:25> '_Bool' lvalue Var 0x562254af7a30 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562254afa170 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562254af9fd0 <col:42> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562254afa150 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562254afa120 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562254afa090 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562254afa048 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562254afa030 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562254af9ff0 <col:55> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562254afa078 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562254afa060 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562254afa010 <col:73> '_Bool' lvalue Var 0x562254af7c68 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562254afa0f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562254afa0b0 <col:90> 'int' lvalue Var 0x562254af7f50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562254afa108 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254afa0d0 <col:102> 'int' lvalue Var 0x562254af77b0 'z' 'int'
|   |-BinaryOperator 0x562254afa3c0 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562254afa1d8 <col:3> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562254afa3a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254afa378 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562254afa298 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562254afa250 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562254afa238 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562254afa1f8 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562254afa280 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562254afa268 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562254afa218 <col:38> '_Bool' lvalue Var 0x562254af7a30 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562254afa330 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254afa2e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254afa2b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562254afa360 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254afa348 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254afa310 <col:66> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562254afa6a8 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562254afa3e0 <col:3> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562254afa690 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254afa660 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562254afa580 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562254afa4a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562254afa458 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562254afa440 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562254afa400 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562254afa488 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562254afa470 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562254afa420 <col:38> '_Bool' lvalue Var 0x562254af7a30 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562254afa560 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562254afa518 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562254afa500 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562254afa4c0 <col:56> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562254afa548 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562254afa530 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562254afa4e0 <col:74> '_Bool' lvalue Var 0x562254af7c68 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562254afa618 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254afa5d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254afa5a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562254afa648 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254afa630 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254afa5f8 <col:102> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562254afa8b0 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562254afa6c8 <col:3> '_Bool' lvalue Var 0x562254af7a30 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562254afa898 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254afa868 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562254afa788 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562254afa740 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562254afa728 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562254afa6e8 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562254afa770 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562254afa758 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562254afa708 <col:38> '_Bool' lvalue Var 0x562254af7a30 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562254afa820 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254afa7d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254afa7a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562254afa850 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254afa838 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254afa800 <col:66> '_Bool' lvalue Var 0x562254af7a30 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562254afaba8 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562254afa8d0 <col:3> '_Bool' lvalue Var 0x562254af7c68 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562254afab90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254afab60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562254afaa70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562254afa990 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562254afa948 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562254afa930 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562254afa8f0 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562254afa978 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562254afa960 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562254afa910 <col:38> '_Bool' lvalue Var 0x562254af7a30 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562254afaa50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562254afaa08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562254afa9f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562254afa9b0 <col:56> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562254afaa38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562254afaa20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562254afa9d0 <col:74> '_Bool' lvalue Var 0x562254af7c68 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562254afab08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254afaac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254afaa90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562254afab48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254afab30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254afaae8 <col:102> '_Bool' lvalue Var 0x562254af7c68 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x562254afac00 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254afabe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254afabc8 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562254afac58 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254afac40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254afac20 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254afad10 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562254afac78 <col:3> 'int' lvalue Var 0x562254af7120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562254afacf0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562254afacd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562254afac98 <col:22> 'int' lvalue Var 0x562254af7120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562254afacb8 <col:41> 'int' 1
|   |-CallExpr 0x562254afad68 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254afad50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254afad30 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562254afade0 <line:750:3, col:36>
|     `-CallExpr 0x562254afadc0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562254afada8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562254afad88 <col:10> 'void *(void)' Function 0x562254a9d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562254afaf38 prev 0x562254af6da0 <line:752:1, line:771:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x562254afaea0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562254afc178 <line:753:1, line:771:1>
|   |-CallExpr 0x562254afb018 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254afb000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254afafe0 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254afb090 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562254afb038 <col:3> 'int' lvalue Var 0x562254af7360 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x562254afb078 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562254afb058 <col:25> 'int' lvalue Var 0x562254af7690 'y' 'int'
|   |-CallExpr 0x562254afb0e8 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254afb0d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254afb0b0 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562254afb140 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254afb128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254afb108 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254afb1a0 <line:758:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562254afb160 <col:3> 'int' lvalue Var 0x562254af77b0 'z' 'int'
|   | `-IntegerLiteral 0x562254afb180 <col:7> 'int' 1
|   |-CallExpr 0x562254afb1f8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254afb1e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254afb1c0 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562254afb250 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254afb238 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254afb218 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254afb538 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562254afb270 <col:3> 'int' lvalue Var 0x562254af77b0 'z' 'int'
|   | `-ConditionalOperator 0x562254afb508 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562254afb330 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562254afb2e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562254afb2d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562254afb290 <col:7> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562254afb318 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562254afb300 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562254afb2b0 <col:25> '_Bool' lvalue Var 0x562254af7b00 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562254afb4f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562254afb350 <col:42> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562254afb4d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562254afb4a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562254afb410 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562254afb3c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562254afb3b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562254afb370 <col:55> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562254afb3f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562254afb3e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562254afb390 <col:73> '_Bool' lvalue Var 0x562254af7ce0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562254afb470 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562254afb430 <col:90> 'int' lvalue Var 0x562254af7f50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562254afb488 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254afb450 <col:102> 'int' lvalue Var 0x562254af77b0 'z' 'int'
|   |-BinaryOperator 0x562254afb740 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562254afb558 <col:3> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562254afb728 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254afb6f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562254afb618 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562254afb5d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562254afb5b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562254afb578 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562254afb600 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562254afb5e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562254afb598 <col:38> '_Bool' lvalue Var 0x562254af7b00 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562254afb6b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254afb668 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254afb638 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562254afb6e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254afb6c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254afb690 <col:66> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562254afba28 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562254afb760 <col:3> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562254afba10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254afb9e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562254afb900 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562254afb820 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562254afb7d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562254afb7c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562254afb780 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562254afb808 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562254afb7f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562254afb7a0 <col:38> '_Bool' lvalue Var 0x562254af7b00 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562254afb8e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562254afb898 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562254afb880 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562254afb840 <col:56> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562254afb8c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562254afb8b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562254afb860 <col:74> '_Bool' lvalue Var 0x562254af7ce0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562254afb998 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254afb950 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254afb920 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562254afb9c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254afb9b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254afb978 <col:102> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562254afbc48 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562254afba48 <col:3> '_Bool' lvalue Var 0x562254af7b00 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562254afbc30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254afbc00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562254afbb08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562254afbac0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562254afbaa8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562254afba68 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562254afbaf0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562254afbad8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562254afba88 <col:38> '_Bool' lvalue Var 0x562254af7b00 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562254afbbb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254afbb70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254afbb40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562254afbbe8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254afbbd0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254afbb98 <col:66> '_Bool' lvalue Var 0x562254af7b00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562254afbf30 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562254afbc68 <col:3> '_Bool' lvalue Var 0x562254af7ce0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562254afbf18 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562254afbee8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562254afbe08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562254afbd28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562254afbce0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562254afbcc8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562254afbc88 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562254afbd10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562254afbcf8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562254afbca8 <col:38> '_Bool' lvalue Var 0x562254af7b00 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562254afbde8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562254afbda0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562254afbd88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562254afbd48 <col:56> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562254afbdd0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562254afbdb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562254afbd68 <col:74> '_Bool' lvalue Var 0x562254af7ce0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562254afbea0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562254afbe58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562254afbe28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562254afbed0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562254afbeb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562254afbe80 <col:102> '_Bool' lvalue Var 0x562254af7ce0 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x562254afbf88 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254afbf70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254afbf50 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562254afbfe0 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562254afbfc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254afbfa8 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562254afc098 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562254afc000 <col:3> 'int' lvalue Var 0x562254af7120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562254afc078 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562254afc060 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562254afc020 <col:22> 'int' lvalue Var 0x562254af7120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562254afc040 <col:41> 'int' 1
|   |-CallExpr 0x562254afc0f0 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562254afc0d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562254afc0b8 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562254afc168 <line:770:3, col:36>
|     `-CallExpr 0x562254afc148 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562254afc130 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562254afc110 <col:10> 'void *(void)' Function 0x562254a9d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562254afc230 prev 0x562254af6e68 <line:772:1, line:774:1> line:772:6 fence 'void ()'
| `-CompoundStmt 0x562254afc2d0 <line:773:1, line:774:1>
|-FunctionDecl 0x562254afc300 prev 0x562254af6f28 <line:775:1, line:777:1> line:775:6 isync 'void ()'
| `-CompoundStmt 0x562254afc3a0 <line:776:1, line:777:1>
|-FunctionDecl 0x562254afc3d0 prev 0x562254af6fe8 <line:778:1, line:780:1> line:778:6 lwfence 'void ()'
| `-CompoundStmt 0x562254afc470 <line:779:1, line:780:1>
`-FunctionDecl 0x562254afc4d8 <line:781:1, line:818:1> line:781:5 main 'int ()'
  `-CompoundStmt 0x562254b00b90 <line:782:1, line:818:1>
    |-DeclStmt 0x562254afc5f0 <line:783:3, col:18>
    | `-VarDecl 0x562254afc588 <col:3, col:13> col:13 used t1978 'pthread_t':'unsigned long'
    |-CallExpr 0x562254afc7f8 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562254afc7e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562254afc608 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562254ade488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562254afc648 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562254afc628 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562254afc588 't1978' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562254afc838 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562254afc6c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562254afc698 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562254afc660 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562254afc850 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562254afc6e0 <col:39> 'void *(void *)' Function 0x562254af81d0 'P0' 'void *(void *)'
    | `-ParenExpr 0x562254afc760 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562254afc738 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562254afc700 <col:52> 'int' 0
    |-DeclStmt 0x562254afc8e0 <line:785:3, col:18>
    | `-VarDecl 0x562254afc878 <col:3, col:13> col:13 used t1979 'pthread_t':'unsigned long'
    |-CallExpr 0x562254afca88 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562254afca70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562254afc8f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562254ade488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562254afc938 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562254afc918 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562254afc878 't1979' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562254afcac8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562254afc9b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562254afc988 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562254afc950 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562254afcae0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562254afc9d0 <col:39> 'void *(void *)' Function 0x562254af9bb8 'P1' 'void *(void *)'
    | `-ParenExpr 0x562254afca50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562254afca28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562254afc9f0 <col:52> 'int' 0
    |-DeclStmt 0x562254afcbb8 <line:787:3, col:18>
    | `-VarDecl 0x562254afcb50 <col:3, col:13> col:13 used t1980 'pthread_t':'unsigned long'
    |-CallExpr 0x562254afcd60 <line:788:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562254afcd48 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562254afcbd0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562254ade488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562254afcc10 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562254afcbf0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562254afcb50 't1980' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562254afcda0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562254afcc88 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562254afcc60 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562254afcc28 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562254afcdb8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562254afcca8 <col:39> 'void *(void *)' Function 0x562254afaf38 'P2' 'void *(void *)'
    | `-ParenExpr 0x562254afcd28 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562254afcd00 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562254afccc8 <col:52> 'int' 0
    |-CallExpr 0x562254afce08 <line:789:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562254afcdf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562254afcdd0 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562254afced8 <line:790:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562254afce28 <col:3> '_Bool' lvalue Var 0x562254af73f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562254afcec0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562254afcea0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562254afce88 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562254afce48 <col:21> 'int' lvalue Var 0x562254af7120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562254afce68 <col:41> 'int' 3
    |-CallExpr 0x562254afcf30 <line:791:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562254afcf18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562254afcef8 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562254afcfa8 <line:792:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562254afcf90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562254afcf50 <col:3> 'void (int)' Function 0x562254a9d790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562254afcfe8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562254afcfd0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562254afcf70 <col:21> '_Bool' lvalue Var 0x562254af73f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562254afd038 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562254afd020 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562254afd000 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562254afd320 <line:794:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562254afd058 <col:3> 'int' lvalue Var 0x562254af77b0 'z' 'int'
    | `-ConditionalOperator 0x562254afd2f0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562254afd118 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562254afd0d0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562254afd0b8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562254afd078 <col:7> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562254afd100 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562254afd0e8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562254afd098 <col:25> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562254afd2d8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562254afd138 <col:42> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
    |   `-ParenExpr 0x562254afd2b8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562254afd288 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562254afd1f8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562254afd1b0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562254afd198 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562254afd158 <col:55> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562254afd1e0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562254afd1c8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562254afd178 <col:73> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562254afd258 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562254afd218 <col:90> 'int' lvalue Var 0x562254af7f50 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562254afd270 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562254afd238 <col:102> 'int' lvalue Var 0x562254af77b0 'z' 'int'
    |-BinaryOperator 0x562254afd528 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562254afd340 <col:3> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562254afd510 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562254afd4e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562254afd400 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562254afd3b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562254afd3a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562254afd360 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562254afd3e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562254afd3d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562254afd380 <col:38> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562254afd498 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562254afd450 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562254afd420 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562254afd4c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562254afd4b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562254afd478 <col:66> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562254afd810 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562254afd548 <col:3> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562254afd7f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562254afd7c8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562254afd6e8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562254afd608 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562254afd5c0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562254afd5a8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562254afd568 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562254afd5f0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562254afd5d8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562254afd588 <col:38> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562254afd6c8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562254afd680 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562254afd668 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562254afd628 <col:56> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562254afd6b0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562254afd698 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562254afd648 <col:74> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562254afd780 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562254afd738 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562254afd708 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562254afd7b0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562254afd798 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562254afd760 <col:102> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562254afda18 <line:797:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562254afd830 <col:3> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562254afda00 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562254afd9d0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562254afd8f0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562254afd8a8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562254afd890 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562254afd850 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562254afd8d8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562254afd8c0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562254afd870 <col:38> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562254afd988 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562254afd940 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562254afd910 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562254afd9b8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562254afd9a0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562254afd968 <col:66> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562254afdd28 <line:798:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562254afda38 <col:3> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562254afdd10 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562254afdce0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562254afdc00 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562254afdaf8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562254afdab0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562254afda98 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562254afda58 <col:20> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562254afdae0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562254afdac8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562254afda78 <col:38> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562254afdbe0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562254afdb98 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562254afdb80 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562254afdb18 <col:56> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562254afdbc8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562254afdbb0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562254afdb60 <col:74> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562254afdc98 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562254afdc50 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562254afdc20 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562254afdcc8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562254afdcb0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562254afdc78 <col:102> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562254afdd80 <line:799:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562254afdd68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562254afdd48 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562254afddd8 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562254afddc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562254afdda0 <col:3> 'void ()' Function 0x562254a9de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562254afde88 <line:801:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x562254afddf8 <col:3> '_Bool' lvalue Var 0x562254af8040 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x562254afde70 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x562254afde50 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x562254afde38 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x562254afde18 <col:19> 'void *(void)' Function 0x562254a9d958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x562254afdf38 <line:802:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x562254afdea8 <col:3> '_Bool' lvalue Var 0x562254af80b8 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x562254afdf20 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x562254afdf00 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x562254afdee8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x562254afdec8 <col:19> 'void *(void)' Function 0x562254a9d958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x562254afdfb0 <line:803:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x562254afdf58 <col:3> '_Bool' lvalue Var 0x562254af7848 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x562254afdf98 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x562254afdf78 <col:21> '_Bool' lvalue Var 0x562254af80b8 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x562254afe028 <line:804:3, col:15> 'int' '='
    | |-DeclRefExpr 0x562254afdfd0 <col:3> 'int' lvalue Var 0x562254af78c8 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x562254afe010 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x562254afdff0 <col:15> 'int' lvalue Var 0x562254af77b0 'z' 'int'
    |-BinaryOperator 0x562254afe460 <line:805:3, col:162> 'int' '='
    | |-DeclRefExpr 0x562254afe048 <col:3> 'int' lvalue Var 0x562254af77b0 'z' 'int'
    | `-ConditionalOperator 0x562254afe430 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x562254afe258 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x562254afe178 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x562254afe0a0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x562254afe088 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x562254afe068 <col:8> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x562254afe158 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x562254afe0f0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x562254afe0d8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x562254afe0b8 <col:27> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x562254afe140 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x562254afe128 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x562254afe108 <col:46> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x562254afe238 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x562254afe1d0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x562254afe1b8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x562254afe198 <col:65> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x562254afe220 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x562254afe208 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x562254afe1e8 <col:84> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562254afe418 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562254afe278 <col:101> 'int' lvalue Var 0x562254af77b0 'z' 'int'
    |   `-ParenExpr 0x562254afe3f8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x562254afe3c8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x562254afe338 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562254afe2f0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562254afe2d8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562254afe298 <col:106> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562254afe320 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562254afe308 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562254afe2b8 <col:124> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562254afe398 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562254afe358 <col:141> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x562254afe3b0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562254afe378 <col:153> 'int' lvalue Var 0x562254af7f50 'z$w_buff1' 'int'
    |-BinaryOperator 0x562254afe970 <line:806:3, col:208> 'int' '='
    | |-DeclRefExpr 0x562254afe480 <col:3> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x562254afe940 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x562254afe910 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x562254afe8f8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x562254afe4a0 <col:15> '_Bool' lvalue Var 0x562254af80b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x562254afe928 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562254afe4c0 <col:31> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
    |   `-ParenExpr 0x562254afe8d8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x562254afe8a8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x562254afe6d0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x562254afe5f0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x562254afe518 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x562254afe500 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x562254afe4e0 <col:45> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x562254afe5d0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x562254afe568 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x562254afe550 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x562254afe530 <col:64> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x562254afe5b8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x562254afe5a0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x562254afe580 <col:83> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x562254afe6b0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x562254afe648 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x562254afe630 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x562254afe610 <col:102> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x562254afe698 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x562254afe680 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x562254afe660 <col:121> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562254afe890 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562254afe6f0 <col:138> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
    |       `-ParenExpr 0x562254afe870 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x562254afe840 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x562254afe7b0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x562254afe768 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x562254afe750 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x562254afe710 <col:151> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x562254afe798 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x562254afe780 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x562254afe730 <col:169> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x562254afe810 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562254afe7d0 <col:186> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x562254afe828 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x562254afe7f0 <col:198> 'int' lvalue Var 0x562254af7e58 'z$w_buff0' 'int'
    |-BinaryOperator 0x562254afee98 <line:807:3, col:208> 'int' '='
    | |-DeclRefExpr 0x562254afe990 <col:3> 'int' lvalue Var 0x562254af7f50 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x562254afee68 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x562254afee38 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x562254afee20 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x562254afe9b0 <col:15> '_Bool' lvalue Var 0x562254af80b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x562254afee50 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562254afe9d0 <col:31> 'int' lvalue Var 0x562254af7f50 'z$w_buff1' 'int'
    |   `-ParenExpr 0x562254afee00 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x562254afedd0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x562254afebf8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x562254afeb00 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x562254afea28 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x562254afea10 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x562254afe9f0 <col:45> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x562254afeae0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x562254afea78 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x562254afea60 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x562254afea40 <col:64> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x562254afeac8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x562254afeab0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x562254afea90 <col:83> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x562254afebd8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x562254afeb70 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x562254afeb40 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x562254afeb20 <col:102> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x562254afebc0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x562254afeba8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x562254afeb88 <col:121> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562254afedb8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562254afec18 <col:138> 'int' lvalue Var 0x562254af7f50 'z$w_buff1' 'int'
    |       `-ParenExpr 0x562254afed98 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x562254afed68 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x562254afecd8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x562254afec90 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x562254afec78 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x562254afec38 <col:151> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x562254afecc0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x562254afeca8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x562254afec58 <col:169> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x562254afed38 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562254afecf8 <col:186> 'int' lvalue Var 0x562254af7f50 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x562254afed50 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x562254afed18 <col:198> 'int' lvalue Var 0x562254af7f50 'z$w_buff1' 'int'
    |-BinaryOperator 0x562254aff440 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x562254afeeb8 <col:3> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562254aff428 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562254aff3f8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x562254aff3b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562254aff398 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562254afeed8 <col:20> '_Bool' lvalue Var 0x562254af80b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562254aff3e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562254aff3c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562254afeef8 <col:36> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x562254aff378 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x562254aff348 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x562254aff108 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562254aff028 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562254afef50 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562254afef38 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562254afef18 <col:55> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562254aff008 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562254afefa0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562254afef88 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562254afef68 <col:74> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562254afeff0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562254afefd8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562254afefb8 <col:93> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562254aff0e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562254aff080 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562254aff068 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562254aff048 <col:112> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562254aff0d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562254aff0b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562254aff098 <col:131> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562254aff330 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562254aff318 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562254aff128 <col:148> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x562254aff2f8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x562254aff2c8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x562254aff1e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562254aff1a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562254aff188 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562254aff148 <col:166> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562254aff1d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562254aff1b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562254aff168 <col:184> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562254aff280 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562254aff238 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562254aff208 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562254aff2b0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x562254aff298 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x562254aff260 <col:212> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562254affa08 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x562254aff460 <col:3> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562254aff9f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562254aff9c0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x562254aff978 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562254aff960 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562254aff480 <col:20> '_Bool' lvalue Var 0x562254af80b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562254aff9a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562254aff990 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562254aff4a0 <col:36> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x562254aff940 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x562254aff910 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x562254aff6b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562254aff5d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562254aff4f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562254aff4e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562254aff4c0 <col:55> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562254aff5b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562254aff548 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562254aff530 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562254aff510 <col:74> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562254aff598 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562254aff580 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562254aff560 <col:93> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562254aff690 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562254aff628 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562254aff610 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562254aff5f0 <col:112> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562254aff678 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562254aff660 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562254aff640 <col:131> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562254aff8f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562254aff8e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562254aff6d0 <col:148> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x562254aff8c0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x562254aff890 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x562254aff790 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562254aff748 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562254aff730 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562254aff6f0 <col:166> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562254aff778 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562254aff760 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562254aff710 <col:184> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562254aff860 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562254aff7e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562254aff7b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562254aff878 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x562254aff838 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x562254aff808 <col:219> 'int' 0
    |-BinaryOperator 0x562254afffd0 <line:810:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x562254affa28 <col:3> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562254afffb8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562254afff88 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x562254afff40 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562254afff28 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562254affa48 <col:20> '_Bool' lvalue Var 0x562254af80b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562254afff70 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562254afff58 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562254affa68 <col:36> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x562254afff08 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x562254affed8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x562254affc98 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562254affbb8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562254affac0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562254affaa8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562254affa88 <col:55> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562254affb98 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562254affb10 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562254affaf8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562254affad8 <col:74> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562254affb80 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562254affb48 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562254affb28 <col:93> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562254affc78 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562254affc10 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562254affbf8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562254affbd8 <col:112> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562254affc60 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562254affc48 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562254affc28 <col:131> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562254affec0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562254affea8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562254affcb8 <col:148> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x562254affe88 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x562254affe58 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x562254affd78 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562254affd30 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562254affd18 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562254affcd8 <col:166> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562254affd60 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562254affd48 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562254affcf8 <col:184> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562254affe10 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562254affdc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562254affd98 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562254affe40 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x562254affe28 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x562254affdf0 <col:212> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562254b00598 <line:811:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x562254affff0 <col:3> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562254b00580 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562254b00550 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x562254b00508 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562254b004f0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562254b00010 <col:20> '_Bool' lvalue Var 0x562254af80b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562254b00538 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562254b00520 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562254b00030 <col:36> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x562254b004d0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x562254b004a0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x562254b00240 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562254b00160 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562254b00088 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562254b00070 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562254b00050 <col:55> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562254b00140 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562254b000d8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562254b000c0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562254b000a0 <col:74> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562254b00128 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562254b00110 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562254b000f0 <col:93> '_Bool' lvalue Var 0x562254af7fc8 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562254b00220 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562254b001b8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562254b001a0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562254b00180 <col:112> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562254b00208 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562254b001f0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562254b001d0 <col:131> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562254b00488 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562254b00470 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562254b00260 <col:148> '_Bool' lvalue Var 0x562254af7b78 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x562254b00450 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x562254b00420 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x562254b00320 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562254b002d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562254b002c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562254b00280 <col:166> '_Bool' lvalue Var 0x562254af7ed0 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562254b00308 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562254b002f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562254b002a0 <col:184> '_Bool' lvalue Var 0x562254af7940 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562254b003f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562254b00370 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562254b00340 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562254b00408 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x562254b003c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x562254b00398 <col:219> 'int' 0
    |-BinaryOperator 0x562254b007d0 <line:812:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x562254b005b8 <col:3> '_Bool' lvalue Var 0x562254af7470 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562254b007b8 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562254b007a0 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562254b00780 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x562254b00760 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x562254b006c8 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x562254b00630 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x562254b00618 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x562254b005d8 <col:23> 'int' lvalue Var 0x562254af77b0 'z' 'int'
    |         | | `-IntegerLiteral 0x562254b005f8 <col:28> 'int' 2
    |         | `-BinaryOperator 0x562254b006a8 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562254b00690 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562254b00650 <col:33> 'int' lvalue Var 0x562254af7240 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x562254b00670 <col:56> 'int' 1
    |         `-BinaryOperator 0x562254b00740 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x562254b00728 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562254b006e8 <col:61> 'int' lvalue Var 0x562254af7360 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x562254b00708 <col:84> 'int' 1
    |-BinaryOperator 0x562254b00900 <line:813:3, col:37> 'int' '='
    | |-DeclRefExpr 0x562254b007f0 <col:3> 'int' lvalue Var 0x562254af77b0 'z' 'int'
    | `-ConditionalOperator 0x562254b008d0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x562254b00888 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x562254b00870 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x562254b00810 <col:7> '_Bool' lvalue Var 0x562254af7848 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x562254b008a0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562254b00830 <col:25> 'int' lvalue Var 0x562254af78c8 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x562254b008b8 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x562254b00850 <col:37> 'int' lvalue Var 0x562254af77b0 'z' 'int'
    |-BinaryOperator 0x562254b00998 <line:814:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x562254b00920 <col:3> '_Bool' lvalue Var 0x562254af7848 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x562254b00970 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x562254b00940 <col:28> 'int' 0
    |-CallExpr 0x562254b009f0 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562254b009d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562254b009b8 <col:3> 'void ()' Function 0x562254a9df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562254b00a68 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562254b00a50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562254b00a10 <col:3> 'void (int)' Function 0x562254a9dbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562254b00aa8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562254b00a90 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562254b00a30 <col:21> '_Bool' lvalue Var 0x562254af7470 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562254b00ae0 <line:817:3, col:10>
      `-IntegerLiteral 0x562254b00ac0 <col:10> 'int' 0
