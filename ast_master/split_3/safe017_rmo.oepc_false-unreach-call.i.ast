TranslationUnitDecl 0x561f64acce18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561f64acd6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561f64acd3b0 '__int128'
|-TypedefDecl 0x561f64acd748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561f64acd3d0 'unsigned __int128'
|-TypedefDecl 0x561f64acda50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561f64acd820 'struct __NSConstantString_tag'
|   `-Record 0x561f64acd7a0 '__NSConstantString_tag'
|-TypedefDecl 0x561f64acdaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561f64acdab0 'char *'
|   `-BuiltinType 0x561f64acceb0 'char'
|-TypedefDecl 0x561f64b0c650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561f64acdd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561f64acdbd0 'struct __va_list_tag'
|     `-Record 0x561f64acdb50 '__va_list_tag'
|-FunctionDecl 0x561f64b0c790 <./split_3/safe017_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561f64b0c6c0 <col:31> col:34 'int'
|-FunctionDecl 0x561f64b0c958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561f64b0ca80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561f64b0cbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561f64b0cb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561f64b0cdf8 <col:40, col:99>
|   |-IfStmt 0x561f64b0cdc8 <col:42, col:88>
|   | |-UnaryOperator 0x561f64b0cca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561f64b0cc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561f64b0cc70 <col:47> 'int' lvalue ParmVar 0x561f64b0cb38 'expression' 'int'
|   | `-CompoundStmt 0x561f64b0cdb0 <col:59, col:88>
|   |   `-LabelStmt 0x561f64b0cd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561f64b0cd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561f64b0cd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561f64b0ccc0 <col:68> 'void () __attribute__((noreturn))' Function 0x561f64b0ca80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561f64b0cde0 <col:89>
|   `-ReturnStmt 0x561f64b0cde8 <col:91>
|-FunctionDecl 0x561f64b0ce40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561f64b0cf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x561f64b0d280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561f64b0cfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x561f64b0d038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x561f64b0d0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561f64b0d138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561f64b0d340 <line:10:22>
|-FunctionDecl 0x561f64b33390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561f64b0d3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x561f64b0d430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x561f64b0d4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561f64b0d530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561f64b33450 <line:13:22>
|-FunctionDecl 0x561f64b33700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561f64b334c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561f64b33540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x561f64b335c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x561f64b337b8 <line:15:22>
|-TypedefDecl 0x561f64b33828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561f64accf70 'unsigned char'
|-TypedefDecl 0x561f64b33898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561f64accf90 'unsigned short'
|-TypedefDecl 0x561f64b33908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561f64accfb0 'unsigned int'
|-TypedefDecl 0x561f64b33978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b339e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561f64acced0 'signed char'
|-TypedefDecl 0x561f64b33a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561f64accf70 'unsigned char'
|-TypedefDecl 0x561f64b33ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561f64accef0 'short'
|-TypedefDecl 0x561f64b33b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561f64accf90 'unsigned short'
|-TypedefDecl 0x561f64b33ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561f64accf10 'int'
|-TypedefDecl 0x561f64b33c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561f64accfb0 'unsigned int'
|-TypedefDecl 0x561f64b33c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b33cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b33d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b33dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b33e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b33eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561f64accfb0 'unsigned int'
|-TypedefDecl 0x561f64b33f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561f64accfb0 'unsigned int'
|-TypedefDecl 0x561f64b33f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b34008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b34078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561f64accfb0 'unsigned int'
|-TypedefDecl 0x561f64b340e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b34158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b341c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b34238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561f64accf10 'int'
|-RecordDecl 0x561f64b34290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x561f64b34408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x561f64b344c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561f64b34460 'struct __fsid_t' sugar
|   `-RecordType 0x561f64b34310 '__fsid_t'
|     `-Record 0x561f64b34290 ''
|-TypedefDecl 0x561f64b34548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b345b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b34628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b34698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561f64accfb0 'unsigned int'
|-TypedefDecl 0x561f64b34708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b34778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561f64accfb0 'unsigned int'
|-TypedefDecl 0x561f64b347e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b34858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561f64accf10 'int'
|-TypedefDecl 0x561f64b348c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561f64accf10 'int'
|-TypedefDecl 0x561f64b34938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561f64accf10 'int'
|-TypedefDecl 0x561f64b349a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x561f64acd630 'void *'
|   `-BuiltinType 0x561f64acce70 'void'
|-TypedefDecl 0x561f64b34a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b34a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b34af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b34b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b34bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b34c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b34cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b34d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b34d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b34e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b34e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b34f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561f64b34ed0 '__off64_t' sugar
|   |-Typedef 0x561f64b341c8 '__off64_t'
|   `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b35000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561f64b34fc0 '__quad_t *'
|   `-TypedefType 0x561f64b34f60 '__quad_t' sugar
|     |-Typedef 0x561f64b33d68 '__quad_t'
|     `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b35070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561f64acdab0 'char *'
|   `-BuiltinType 0x561f64acceb0 'char'
|-TypedefDecl 0x561f64b350e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b35150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561f64accfb0 'unsigned int'
|-FunctionDecl 0x561f64b35298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x561f64b351c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561f64b365e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x561f64b365d8 <line:72:3, col:34>
|     `-CallExpr 0x561f64b36598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561f64b36580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561f64b36510 <col:10> '<builtin fn type>' Function 0x561f64b36380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561f64b365c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561f64b36530 <col:29> 'unsigned int' lvalue ParmVar 0x561f64b351c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x561f64b36380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561f64b36420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561f64b36490 <col:10> Implicit
| `-ConstAttr 0x561f64b364e8 <col:10> Implicit
|-FunctionDecl 0x561f64b36740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561f64b36638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561f64b36a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x561f64b36a48 <line:77:3, col:34>
|     `-CallExpr 0x561f64b36a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561f64b369f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561f64b36978 <col:10> '<builtin fn type>' Function 0x561f64b367e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561f64b36a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561f64b36998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561f64b36638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561f64b367e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561f64b36888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561f64b368f8 <col:10> Implicit
| `-ConstAttr 0x561f64b36950 <col:10> Implicit
|-TypedefDecl 0x561f64b36a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-TypedefDecl 0x561f64b36b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561f64b36ae0 '__time_t' sugar
|   |-Typedef 0x561f64b34708 '__time_t'
|   `-BuiltinType 0x561f64accf30 'long'
|-RecordDecl 0x561f64b36b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x561f64b36c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561f64b36cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561f64b36d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561f64b36d10 '__pid_t' sugar
|   |-Typedef 0x561f64b34238 '__pid_t'
|   `-BuiltinType 0x561f64accf10 'int'
|-RecordDecl 0x561f64b36da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x561f64b36e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561f64b36eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x561f64b36f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561f64b36fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-RecordDecl 0x561f64b37030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x561f64b372c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x561f64b383a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561f64b37310 'struct cpu_set_t' sugar
|   `-RecordType 0x561f64b370b0 'cpu_set_t'
|     `-Record 0x561f64b37030 ''
|-FunctionDecl 0x561f64b38678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561f64b38448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561f64b38550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561f64b38728 <line:107:19>
|-FunctionDecl 0x561f64b38900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561f64b38790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561f64b389a8 <col:69>
|-FunctionDecl 0x561f64b38b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561f64b38a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561f64b38bc8 <col:64>
|-FunctionDecl 0x561f64b38e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561f64b38c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561f64b38d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561f64b38f38 <line:113:22>
|-FunctionDecl 0x561f64b391b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561f64b38fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561f64b39098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561f64b39268 <col:88>
|-FunctionDecl 0x561f64b39588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561f64b392d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561f64b393b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561f64b39440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561f64b39640 <col:62>
|-FunctionDecl 0x561f64b397b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561f64b396a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561f64b39860 <col:63>
|-FunctionDecl 0x561f64b39988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561f64b39a28 <col:47>
|-FunctionDecl 0x561f64b39b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561f64b39a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561f64b39bd8 <col:69>
|-FunctionDecl 0x561f64b39ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561f64b39c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561f64b39d88 <col:69>
|-FunctionDecl 0x561f64b3a048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561f64b39df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561f64b39f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561f64b3a0f8 <col:88>
|-TypedefDecl 0x561f64b3a188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561f64b3a150 '__clock_t' sugar
|   |-Typedef 0x561f64b34548 '__clock_t'
|   `-BuiltinType 0x561f64accf30 'long'
|-TypedefDecl 0x561f64b3a218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x561f64b3a1e0 '__clockid_t' sugar
|   |-Typedef 0x561f64b34938 '__clockid_t'
|   `-BuiltinType 0x561f64accf10 'int'
|-TypedefDecl 0x561f64b3a2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561f64b3a270 '__timer_t' sugar
|   |-Typedef 0x561f64b349a8 '__timer_t'
|   `-PointerType 0x561f64acd630 'void *'
|     `-BuiltinType 0x561f64acce70 'void'
|-RecordDecl 0x561f64b3a300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x561f64b3a3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561f64b3a440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x561f64b3a4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561f64b3a510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561f64b3a578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561f64b3a5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561f64b3a648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561f64b3a6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561f64b3a718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561f64b3a780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561f64b3a7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561f64b3a838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x561f64b3a908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561f64b3a978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561f64b3aa20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561f64b3abf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561f64b3ac90 <col:45>
|-FunctionDecl 0x561f64b3ae70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561f64b3ad60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561f64b3af18 <col:54>
|-FunctionDecl 0x561f64b3b118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561f64b3af80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561f64b3aff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x561f64b3b1c8 <line:157:22>
| `-ConstAttr 0x561f64b3b220 <col:63>
|-FunctionDecl 0x561f64b3c050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561f64b3b318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561f64b3c0f8 <col:56>
|-FunctionDecl 0x561f64b3c4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561f64b3c168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x561f64b3c1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561f64b3c260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561f64b3c358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561f64b3c560 <col:54>
|-RecordDecl 0x561f64b3c5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x561f64b3c668 parent 0x561f64acce18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561f64b3c8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561f64b3c968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561f64b3c9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561f64b3ca38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561f64b3cb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561f64b3cc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561f64b3cbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x561f64b3cb80 'struct __locale_struct' sugar
|     `-RecordType 0x561f64b3c640 'struct __locale_struct'
|       `-Record 0x561f64b3c5b8 '__locale_struct'
|-TypedefDecl 0x561f64b3ccf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561f64b3ccc0 '__locale_t' sugar
|   |-Typedef 0x561f64b3cc48 '__locale_t'
|   `-PointerType 0x561f64b3cbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x561f64b3cb80 'struct __locale_struct' sugar
|       `-RecordType 0x561f64b3c640 'struct __locale_struct'
|         `-Record 0x561f64b3c5b8 '__locale_struct'
|-FunctionDecl 0x561f64b3e110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561f64b3cd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561f64b3cde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561f64b3ce60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561f64b3cef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561f64b3cf68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x561f64b3e1d8 <col:40>
|-FunctionDecl 0x561f64b3e3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561f64b3e2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561f64b3e470 <col:66>
|-FunctionDecl 0x561f64b3e580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561f64b3e4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561f64b3e628 <col:69>
|-FunctionDecl 0x561f64b3e858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561f64b3e690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561f64b3e720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561f64b3e908 <col:52>
|-FunctionDecl 0x561f64b3eab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561f64b3e970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561f64b3ea00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561f64b3eb60 <col:55>
|-FunctionDecl 0x561f64b3ecf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x561f64b3ebe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x561f64b3eda0 <col:62>
|-FunctionDecl 0x561f64b3ef18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561f64b3ee08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x561f64b3efc0 <col:60>
|-FunctionDecl 0x561f64b3f2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561f64b3f118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561f64b3f198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x561f64b3f368 <col:44>
|-FunctionDecl 0x561f64b3f578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561f64b3f3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561f64b3f450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561f64b3f628 <col:49>
|-VarDecl 0x561f64b3f728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561f64b3f7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561f64b3f828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561f64b3f8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561f64b3fa20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561f64b3fac0 <col:42>
|-VarDecl 0x561f64b3fb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561f64b3fbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561f64b3fd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561f64b3fc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561f64b3fde0 <col:57>
|-FunctionDecl 0x561f64b3fef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561f64b3fe60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561f64b3ff98 <col:56>
|-FunctionDecl 0x561f64b400d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561f64b40018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x561f64b40178 <col:59>
|-FunctionDecl 0x561f64b40280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561f64b401e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561f64b40328 <col:48>
| `-ConstAttr 0x561f64b40380 <col:89>
|-FunctionDecl 0x561f64b405e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561f64b40438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561f64b404c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561f64b40848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561f64b406d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561f64b40768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561f64b408f8 <col:88>
|-FunctionDecl 0x561f64b40a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561f64b40960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561f64b409f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561f64b40b40 <col:88>
|-FunctionDecl 0x561f64b40d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561f64b40ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561f64b40c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561f64b40e08 <line:208:22>
|-FunctionDecl 0x561f64b41178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561f64b40e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561f64b40ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x561f64b40f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561f64b41010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x561f64b41478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x561f64b41278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x561f64b41350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561f64b41528 <col:85>
|-FunctionDecl 0x561f64b41918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561f64b41590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561f64b416c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561f64b417d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561f64b419d0 <col:52>
|-FunctionDecl 0x561f64b41b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561f64b41a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561f64b41bf0 <col:61>
|-FunctionDecl 0x561f64b420f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x561f64b41c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561f64b41cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561f64b41e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561f64b41ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561f64b421b0 <col:62>
|-FunctionDecl 0x561f64b423c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561f64b42218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561f64b422a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x561f64b42478 <line:221:22>
|-FunctionDecl 0x561f64b42578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561f64b424e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561f64b42620 <col:65>
|-TypedefDecl 0x561f64b42690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561f64accfd0 'unsigned long'
|-RecordDecl 0x561f64b426e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x561f64b42830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561f64b42898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561f64b42948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561f64b428f0 'union pthread_attr_t' sugar
|   `-RecordType 0x561f64b42770 'union pthread_attr_t'
|     `-Record 0x561f64b426e8 'pthread_attr_t'
|-RecordDecl 0x561f64b429a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561f64b42b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x561f64b42b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x561f64b42c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x561f64b42be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561f64b42a20 'struct __pthread_internal_list'
|     `-Record 0x561f64b429a0 '__pthread_internal_list'
|-RecordDecl 0x561f64b42cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x561f64b42d58 parent 0x561f64acce18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x561f64b42e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561f64b42e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x561f64b42f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x561f64b42f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x561f64b42fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561f64b43038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561f64b47110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561f64b471c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561f64b472b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561f64b47318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561f64b474a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561f64b47440 'union pthread_mutex_t' sugar
|   `-RecordType 0x561f64b42d30 'pthread_mutex_t'
|     `-Record 0x561f64b42cb0 ''
|-RecordDecl 0x561f64b47510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x561f64b47650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561f64b476b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561f64b47770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561f64b47710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561f64b47590 'pthread_mutexattr_t'
|     `-Record 0x561f64b47510 ''
|-RecordDecl 0x561f64b477e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x561f64b47888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x561f64b47950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561f64b479b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561f64b47a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561f64b47a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561f64b47af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561f64b47b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561f64b47bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561f64b47c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561f64b47ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_3/safe017_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_3/safe017_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x561f64b47dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561f64b47e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561f64b47f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561f64b47f10 'union pthread_cond_t' sugar
|   `-RecordType 0x561f64b47860 'pthread_cond_t'
|     `-Record 0x561f64b477e0 ''
|-RecordDecl 0x561f64b47fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x561f64b49130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561f64b49198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561f64b49250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561f64b491f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x561f64b48060 'pthread_condattr_t'
|     `-Record 0x561f64b47fe0 ''
|-TypedefDecl 0x561f64b492d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561f64accfb0 'unsigned int'
|-TypedefDecl 0x561f64b49348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561f64accf10 'int'
|-RecordDecl 0x561f64b493a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x561f64b49448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x561f64b49510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561f64b49578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561f64b495e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561f64b49648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561f64b496b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561f64b49718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561f64b49780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561f64b497e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561f64b49850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561f64b498b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561f64b49920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561f64b499d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_3/safe017_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_3/safe017_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x561f64b49a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561f64b49ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561f64b49c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561f64b49bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561f64b49420 'pthread_rwlock_t'
|     `-Record 0x561f64b493a0 ''
|-RecordDecl 0x561f64b49ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x561f64b49de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561f64b49e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561f64b49f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561f64b49ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561f64b49d20 'pthread_rwlockattr_t'
|     `-Record 0x561f64b49ca0 ''
|-TypedefDecl 0x561f64b49f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561f64accf14 'volatile int' volatile
|   `-BuiltinType 0x561f64accf10 'int'
|-RecordDecl 0x561f64b49fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x561f64b4b140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561f64b4b1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561f64b4b260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561f64b4b200 'union pthread_barrier_t' sugar
|   `-RecordType 0x561f64b4a060 'pthread_barrier_t'
|     `-Record 0x561f64b49fe0 ''
|-RecordDecl 0x561f64b4b2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x561f64b4b3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561f64b4b438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561f64b4b4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561f64b4b490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561f64b4b350 'pthread_barrierattr_t'
|     `-Record 0x561f64b4b2d0 ''
|-TypedefDecl 0x561f64b4b608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561f64b4b5a0 'long [8]' 8 
|   `-BuiltinType 0x561f64accf30 'long'
|-EnumDecl 0x561f64b4b660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x561f64b4b728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561f64b4b778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561f64b4b7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x561f64b4b898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561f64b4b8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561f64b4b938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561f64b4b988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561f64b4ba10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561f64b4b9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x561f64b4b9d8 <col:26> 'int' EnumConstant 0x561f64b4b898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561f64b4ba98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561f64b4ba80 <col:29> 'int'
| |   `-DeclRefExpr 0x561f64b4ba60 <col:29> 'int' EnumConstant 0x561f64b4b8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561f64b4bb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561f64b4bb08 <col:30> 'int'
| |   `-DeclRefExpr 0x561f64b4bae8 <col:30> 'int' EnumConstant 0x561f64b4b938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561f64b4bba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561f64b4bb90 <col:27> 'int'
|     `-DeclRefExpr 0x561f64b4bb70 <col:27> 'int' EnumConstant 0x561f64b4ba10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561f64b4bbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x561f64b4bcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561f64b4bd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561f64b4bd38 <col:30> 'int'
| |   `-DeclRefExpr 0x561f64b4bd18 <col:30> 'int' EnumConstant 0x561f64b4bcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561f64b4bda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561f64b4be28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561f64b4be10 <col:29> 'int'
|     `-DeclRefExpr 0x561f64b4bdf0 <col:29> 'int' EnumConstant 0x561f64b4bda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561f64b4be78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x561f64b4bf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561f64b4bf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561f64b4bfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561f64b4c038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x561f64b4c150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561f64b4c1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561f64b4c1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561f64b4c278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561f64b4c260 <col:31> 'int'
|     `-DeclRefExpr 0x561f64b4c240 <col:31> 'int' EnumConstant 0x561f64b4c150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561f64b4c2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x561f64b4c398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561f64b4c3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561f64b4c438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x561f64b4c508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561f64b4c558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561f64b4c5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x561f64b4c678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561f64b4c6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561f64b4c718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561f64b4c958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561f64b4c9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561f64b4ca28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561f64b4cb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561f64b4cb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x561f64b4cc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561f64b4ccb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561f64b4cd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x561f64b4cdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561f64b4ce28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x561f64b4d488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561f64b4cf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x561f64b4d030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561f64b4d270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561f64b4d2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x561f64b4d548 <col:47>
| |-NonNullAttr 0x561f64b4d5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x561f64b4d5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x561f64b4d700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561f64b4d630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561f64b4d958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561f64b4d7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561f64b4d838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561f64b4db28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561f64b4da18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561f64b4dbd0 <col:60>
|-FunctionDecl 0x561f64b4dd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561f64b4ddc0 <col:54>
| `-ConstAttr 0x561f64b4de18 <col:95>
|-FunctionDecl 0x561f64b4dfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x561f64b4de50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561f64b4dec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561f64b4e098 <line:394:19>
| `-ConstAttr 0x561f64b4e0f0 <col:60>
|-FunctionDecl 0x561f64b4fb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561f64b4f9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561f64b4fbb0 <col:71>
| `-NonNullAttr 0x561f64b4fc08 <col:112, col:126> 1
|-FunctionDecl 0x561f64b4fd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561f64b4fc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561f64b4fdb8 <line:397:22>
| `-NonNullAttr 0x561f64b4fe10 <col:63, col:77> 1
|-FunctionDecl 0x561f64b50038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x561f64b4fe58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561f64b4fed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561f64b500e8 <line:400:22>
| `-NonNullAttr 0x561f64b50140 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b50348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561f64b50188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561f64b50208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561f64b503f8 <line:403:22>
| `-NonNullAttr 0x561f64b50450 <col:63, col:77> 1
|-FunctionDecl 0x561f64b506a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x561f64b50498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561f64b50540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561f64b50758 <line:406:22>
| `-NonNullAttr 0x561f64b507b0 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b519e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561f64b507f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561f64b50870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561f64b51a98 <line:409:22>
| `-NonNullAttr 0x561f64b51af0 <col:63, col:77> 1
|-FunctionDecl 0x561f64b51d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561f64b51b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561f64b51bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561f64b51dd8 <line:412:22>
| `-NonNullAttr 0x561f64b51e30 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b52068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561f64b51e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561f64b51f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561f64b52118 <col:37>
| `-NonNullAttr 0x561f64b52170 <col:78, col:95> 1 2
|-FunctionDecl 0x561f64b52358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b521b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561f64b52238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561f64b52408 <line:418:22>
| `-NonNullAttr 0x561f64b52460 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b525e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561f64b524a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561f64b52528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561f64b52698 <line:420:22>
| `-NonNullAttr 0x561f64b526f0 <col:63, col:77> 1
|-FunctionDecl 0x561f64b52898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b52738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561f64b527b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561f64b52948 <line:423:22>
| `-NonNullAttr 0x561f64b529c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b52b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561f64b52a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561f64b52a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x561f64b52bf8 <line:426:22>
| `-NonNullAttr 0x561f64b52c50 <col:63, col:77> 1
|-FunctionDecl 0x561f64b52df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b52c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561f64b52d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x561f64b52ea8 <line:429:22>
| `-NonNullAttr 0x561f64b52f00 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b53088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561f64b52f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561f64b52fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561f64b53138 <line:431:22>
| `-NonNullAttr 0x561f64b53190 <col:63, col:77> 1
|-FunctionDecl 0x561f64b533b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x561f64b531d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561f64b53258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561f64b53468 <line:434:22>
| |-NonNullAttr 0x561f64b534c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x561f64b534f8 <col:100> "" ""
|-FunctionDecl 0x561f64b53708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561f64b53548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561f64b535c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x561f64b537b8 <line:437:22>
| |-NonNullAttr 0x561f64b53810 <col:63, col:77> 1
| `-DeprecatedAttr 0x561f64b53848 <col:97> "" ""
|-FunctionDecl 0x561f64b53a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561f64b53898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561f64b53910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561f64b53af8 <line:440:22>
| `-NonNullAttr 0x561f64b53b50 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b53cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561f64b53b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561f64b53c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561f64b53d80 <line:443:22>
| `-NonNullAttr 0x561f64b53dd8 <col:63, col:77> 1
|-FunctionDecl 0x561f64b540c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561f64b53e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561f64b53ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561f64b53f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561f64b54180 <line:447:22>
| `-NonNullAttr 0x561f64b541d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561f64b54488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561f64b54230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561f64b542b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561f64b54328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561f64b54540 <col:43>
| `-NonNullAttr 0x561f64b54598 <col:84, col:98> 1
|-FunctionDecl 0x561f64b54858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561f64b545e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561f64b54668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561f64b546f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561f64b54910 <line:452:22>
| `-NonNullAttr 0x561f64b54968 <col:63, col:77> 3
|-FunctionDecl 0x561f64b54c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561f64b549e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561f64b54a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561f64b54af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561f64b54d30 <line:456:22>
| `-NonNullAttr 0x561f64b54d88 <col:63, col:80> 2 3
|-FunctionDecl 0x561f64b54f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561f64b54dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561f64b54e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561f64b55028 <line:458:22>
|-FunctionDecl 0x561f64b553f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561f64b550f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561f64b55290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561f64b554a8 <col:52, col:69> 1 2
|-FunctionDecl 0x561f64b55650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561f64b55530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561f64b555b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561f64b55838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561f64b55718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561f64b55798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561f64b559f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561f64b558f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561f64b55b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561f64b55bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x561f64b55c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x561f64b55d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561f64b55dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561f64b55fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_3/safe017_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x561f64b56098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561f64b56150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561f64b560f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561f64b55c50 '__pthread_unwind_buf_t'
| |   `-Record 0x561f64b55bd0 ''
| `-AlignedAttr 0x561f64b561a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561f64b56220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561f64b56380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561f64b563e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561f64b56450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561f64b564b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561f64b566c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561f64b565b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561f64b56808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561f64b56778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561f64b56a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561f64b568c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561f64b56aa8 <line:487:22>
|-RecordDecl 0x561f64b56b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561f64b56e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561f64b56c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561f64b56cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561f64b56ec8 <col:86>
| `-ReturnsTwiceAttr 0x561f64b56f20 <col:12> Implicit
|-FunctionDecl 0x561f64b57248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561f64b56ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561f64b57100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561f64b572f8 <line:493:22>
| `-NonNullAttr 0x561f64b57350 <col:63, col:77> 1
|-FunctionDecl 0x561f64b574c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561f64b57398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561f64b57570 <line:495:22>
| `-NonNullAttr 0x561f64b575c8 <col:63, col:77> 1
|-FunctionDecl 0x561f64b576d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561f64b57618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561f64b57778 <line:497:22>
| `-NonNullAttr 0x561f64b577d0 <col:52, col:66> 1
|-FunctionDecl 0x561f64b578d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561f64b57818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561f64b57978 <line:499:22>
| `-NonNullAttr 0x561f64b579d0 <col:52, col:66> 1
|-FunctionDecl 0x561f64b58c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561f64b58a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561f64b58ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561f64b58cd8 <col:36>
| `-NonNullAttr 0x561f64b58d30 <col:66, col:83> 1 2
|-FunctionDecl 0x561f64b58e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561f64b58d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561f64b58ed8 <line:504:22>
| `-NonNullAttr 0x561f64b58f30 <col:52, col:66> 1
|-FunctionDecl 0x561f64b591c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b58fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561f64b59060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561f64b59278 <line:508:22>
| `-NonNullAttr 0x561f64b592d0 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b59598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561f64b59318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561f64b59398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561f64b59418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561f64b59650 <line:512:22>
| `-NonNullAttr 0x561f64b596a8 <col:63, col:80> 1 3
|-FunctionDecl 0x561f64b597b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561f64b596f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561f64b59858 <line:514:22>
| `-NonNullAttr 0x561f64b598b0 <col:63, col:77> 1
|-FunctionDecl 0x561f64b59ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561f64b59960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561f64b59b80 <line:516:22>
| `-NonNullAttr 0x561f64b59bd8 <col:63, col:77> 1
|-FunctionDecl 0x561f64b59ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561f64b59c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561f64b59d88 <line:518:22>
| `-NonNullAttr 0x561f64b59de0 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5a008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b59e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561f64b59ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561f64b5a0b8 <line:522:22>
| `-NonNullAttr 0x561f64b5a110 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b5a318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561f64b5a158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561f64b5a1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561f64b5a3c8 <line:525:22>
| `-NonNullAttr 0x561f64b5a420 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5a5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b5a468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561f64b5a4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561f64b5a678 <line:528:22>
| `-NonNullAttr 0x561f64b5a6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b5a858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561f64b5a718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561f64b5a798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561f64b5a908 <line:530:22>
| `-NonNullAttr 0x561f64b5a960 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5ab20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b5a9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561f64b5aa40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561f64b5abd0 <line:534:22>
| `-NonNullAttr 0x561f64b5ac28 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b5adb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561f64b5ac78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561f64b5acf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561f64b5ae68 <line:537:22>
| `-NonNullAttr 0x561f64b5aec0 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5b068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b5af08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561f64b5af88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561f64b5b118 <line:541:22>
| `-NonNullAttr 0x561f64b5b170 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b5b2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561f64b5b1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561f64b5b238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561f64b5b3a8 <line:544:22>
| `-NonNullAttr 0x561f64b5b400 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5b5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561f64b5b448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561f64b5b4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561f64b5b698 <line:547:22>
| `-NonNullAttr 0x561f64b5b6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b5b878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561f64b5b738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561f64b5b7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561f64b5b928 <line:550:22>
| `-NonNullAttr 0x561f64b5b980 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5ccf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561f64b5caa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561f64b5cbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561f64b5cda8 <col:29>
| `-NonNullAttr 0x561f64b5ce00 <col:70, col:84> 1
|-FunctionDecl 0x561f64b5cf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561f64b5ce48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561f64b5d020 <line:555:22>
| `-NonNullAttr 0x561f64b5d078 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5d180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561f64b5d0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561f64b5d228 <line:557:22>
| `-NonNullAttr 0x561f64b5d280 <col:52, col:66> 1
|-FunctionDecl 0x561f64b5d380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561f64b5d2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561f64b5d428 <line:559:19>
| `-NonNullAttr 0x561f64b5d480 <col:49, col:63> 1
|-FunctionDecl 0x561f64b5d6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561f64b5d4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561f64b5d558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561f64b5d768 <col:39>
| `-NonNullAttr 0x561f64b5d7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x561f64b5d8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561f64b5d808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561f64b5d968 <line:564:22>
| `-NonNullAttr 0x561f64b5d9c0 <col:52, col:66> 1
|-FunctionDecl 0x561f64b5db28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561f64b5da70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561f64b5dbd0 <line:566:22>
| `-NonNullAttr 0x561f64b5dc28 <col:52, col:66> 1
|-FunctionDecl 0x561f64b5dde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561f64b5dc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561f64b5dd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561f64b5de98 <col:39>
| `-NonNullAttr 0x561f64b5def0 <col:69, col:86> 1 2
|-FunctionDecl 0x561f64b5dff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561f64b5df38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561f64b5e098 <line:571:22>
| `-NonNullAttr 0x561f64b5e0f0 <col:52, col:66> 1
|-FunctionDecl 0x561f64b5e2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561f64b5e1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561f64b5e380 <line:573:22>
| `-NonNullAttr 0x561f64b5e3d8 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5e4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561f64b5e428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561f64b5e588 <line:575:22>
| `-NonNullAttr 0x561f64b5e5e0 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5e808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b5e628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561f64b5e6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561f64b5e8b8 <line:579:22>
| `-NonNullAttr 0x561f64b5e910 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b5eb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561f64b5e958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561f64b5e9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561f64b5ebe8 <line:582:22>
| `-NonNullAttr 0x561f64b5ec40 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5ede8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b5ec88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561f64b5ed08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561f64b5ee98 <line:586:22>
| `-NonNullAttr 0x561f64b5eef0 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b5f078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561f64b5ef38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561f64b5efb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561f64b5f128 <col:36>
| `-NonNullAttr 0x561f64b5f180 <col:77, col:91> 1
|-FunctionDecl 0x561f64b5f4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x561f64b5f260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561f64b5f370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x561f64b5f568 <line:591:22>
| `-NonNullAttr 0x561f64b5f5c0 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5f738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561f64b5f608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561f64b5f7e0 <line:593:22>
| `-NonNullAttr 0x561f64b5f838 <col:63, col:77> 1
|-FunctionDecl 0x561f64b5f940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561f64b5f888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561f64b5f9e8 <line:595:22>
| `-NonNullAttr 0x561f64b5fa40 <col:52, col:66> 1
|-FunctionDecl 0x561f64b5fb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561f64b5faa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561f64b5fc00 <line:597:22>
| `-NonNullAttr 0x561f64b5fc58 <col:52, col:66> 1
|-FunctionDecl 0x561f64b5fe88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561f64b5fca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561f64b5fd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x561f64b5ff38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x561f64b60268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561f64b5ffb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561f64b60030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561f64b600c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561f64b60320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x561f64b60538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561f64b60400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561f64b605e0 <line:606:22>
| `-NonNullAttr 0x561f64b60638 <col:63, col:77> 1
|-FunctionDecl 0x561f64b60740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561f64b60688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561f64b607e8 <line:608:22>
| `-NonNullAttr 0x561f64b60840 <col:63, col:77> 1
|-FunctionDecl 0x561f64b60aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b60888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561f64b60908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561f64b60b50 <line:612:22>
| `-NonNullAttr 0x561f64b60ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b60db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561f64b60bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561f64b60c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x561f64b60e68 <col:37>
| `-NonNullAttr 0x561f64b60ec0 <col:78, col:92> 1
|-FunctionDecl 0x561f64b610d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561f64b60f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561f64b60fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x561f64b61188 <line:618:22>
| `-NonNullAttr 0x561f64b611e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b613a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561f64b61228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561f64b612a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x561f64b61458 <line:621:22>
| `-NonNullAttr 0x561f64b614b0 <col:63, col:77> 1
|-FunctionDecl 0x561f64b61758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561f64b61590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561f64b61610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561f64b61808 <line:623:22>
| `-NonNullAttr 0x561f64b61860 <col:63, col:77> 1
|-FunctionDecl 0x561f64b619d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561f64b618a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561f64b61ab0 <line:625:22>
| `-NonNullAttr 0x561f64b61b08 <col:63, col:77> 1
|-FunctionDecl 0x561f64b61c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561f64b61b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561f64b61cb8 <line:627:22>
| `-NonNullAttr 0x561f64b61d10 <col:52, col:66> 1
|-FunctionDecl 0x561f64b61e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561f64b61d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561f64b61eb8 <line:629:22>
| `-NonNullAttr 0x561f64b61f10 <col:52, col:66> 1
|-FunctionDecl 0x561f64b62010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561f64b61f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561f64b620b8 <line:631:22>
| `-NonNullAttr 0x561f64b62110 <col:52, col:66> 1
|-FunctionDecl 0x561f64b624e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561f64b621f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561f64b62300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561f64b62380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561f64b625a0 <line:635:22>
| `-NonNullAttr 0x561f64b625f8 <col:63, col:77> 1
|-FunctionDecl 0x561f64b62778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561f64b62648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561f64b62820 <line:637:22>
| `-NonNullAttr 0x561f64b62878 <col:63, col:77> 1
|-FunctionDecl 0x561f64b62980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561f64b628c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561f64b62a28 <line:639:22>
| `-NonNullAttr 0x561f64b62a80 <col:52, col:66> 1
|-FunctionDecl 0x561f64b63c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561f64b63b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561f64b63d30 <line:641:22>
| `-NonNullAttr 0x561f64b63d88 <col:63, col:77> 1
|-FunctionDecl 0x561f64b63e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561f64b63dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561f64b63f38 <line:643:22>
| `-NonNullAttr 0x561f64b63f90 <col:63, col:77> 1
|-FunctionDecl 0x561f64b641b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561f64b63fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561f64b64058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x561f64b64268 <line:647:22>
| `-NonNullAttr 0x561f64b642c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561f64b644c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x561f64b64308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x561f64b64388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x561f64b64578 <line:650:22>
| `-NonNullAttr 0x561f64b645d0 <col:63, col:77> 1
|-FunctionDecl 0x561f64b64918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x561f64b646b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x561f64b647d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x561f64b649c8 <line:653:22>
| `-NonNullAttr 0x561f64b64a20 <col:63, col:77> 1
|-FunctionDecl 0x561f64b64b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x561f64b64a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561f64b64c30 <col:69>
|-FunctionDecl 0x561f64b64da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x561f64b64c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561f64b64e50 <col:72>
|-FunctionDecl 0x561f64b65088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561f64b64eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x561f64b64f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561f64b65138 <col:44>
|-FunctionDecl 0x561f64b65358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561f64b651a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561f64b65218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561f64b65408 <line:660:22>
| `-NonNullAttr 0x561f64b65460 <col:63, col:77> 2
|-FunctionDecl 0x561f64b658a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x561f64b65540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561f64b65650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561f64b65760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561f64b65960 <col:47>
|-FunctionDecl 0x561f64b65af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561f64b659d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561f64b65c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561f64b65bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561f64b65da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x561f64b65d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561f64b65e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x561f64b65f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x561f64b65fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561f64b660a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x561f64b66120 prev 0x561f64b660a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561f64b66188 <col:24> 'int' 0
|-VarDecl 0x561f64b661c0 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x561f64b66240 prev 0x561f64b661c0 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x561f64b662a8 <col:27> 'int' 0
|-VarDecl 0x561f64b662d8 <line:675:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561f64b66350 <line:676:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561f64b663d0 <line:677:1, col:5> col:5 used x 'int'
|-VarDecl 0x561f64b66450 prev 0x561f64b663d0 <line:678:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x561f64b664b8 <col:9> 'int' 0
|-VarDecl 0x561f64b664f0 <line:679:1, col:5> col:5 used y 'int'
|-VarDecl 0x561f64b66570 prev 0x561f64b664f0 <line:680:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561f64b665d8 <col:9> 'int' 0
|-VarDecl 0x561f64b66608 <line:681:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x561f64b66688 <line:682:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x561f64b66700 <line:683:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x561f64b66778 <line:684:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x561f64b667f0 <line:685:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x561f64b66868 <line:686:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x561f64b668e0 <line:687:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x561f64b66958 <line:688:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x561f64b669d0 <line:689:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x561f64b66a48 <line:690:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x561f64b66b00 <line:691:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x561f64b66b80 <line:692:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x561f64b66c00 <line:693:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x561f64b66c78 <line:694:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x561f64b66cf8 <line:695:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x561f64b66d70 <line:696:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x561f64b66de8 <line:697:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561f64b66e60 <line:698:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561f64b66f78 prev 0x561f64b65af0 <line:699:1, line:727:1> line:699:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561f64b66ee0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561f64b68798 <line:700:1, line:727:1>
|   |-CallExpr 0x561f64b67088 <line:701:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561f64b67070 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b67020 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561f64b67100 <line:702:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561f64b670a8 <col:3> 'int' lvalue Var 0x561f64b66cf8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x561f64b670e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561f64b670c8 <col:15> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
|   |-BinaryOperator 0x561f64b67160 <line:703:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561f64b67120 <col:3> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x561f64b67140 <col:15> 'int' 2
|   |-BinaryOperator 0x561f64b671d8 <line:704:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b67180 <col:3> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b671c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561f64b671a0 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561f64b67270 <line:705:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b671f8 <col:3> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x561f64b67248 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561f64b67218 <col:27> 'int' 1
|   |-CallExpr 0x561f64b673f8 <line:706:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x561f64b673e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x561f64b67290 <col:3> 'void (int)' Function 0x561f64b0cbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x561f64b67390 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x561f64b67370 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x561f64b67350 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x561f64b67308 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x561f64b672f0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x561f64b672b0 <col:23> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x561f64b67338 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x561f64b67320 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x561f64b672d0 <col:41> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561f64b67478 <line:707:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b67420 <col:3> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b67460 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561f64b67440 <col:20> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x561f64b674f0 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b67498 <col:3> '_Bool' lvalue Var 0x561f64b66958 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b674d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561f64b674b8 <col:20> '_Bool' lvalue Var 0x561f64b66778 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561f64b67568 <line:709:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b67510 <col:3> '_Bool' lvalue Var 0x561f64b669d0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b67550 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561f64b67530 <col:20> '_Bool' lvalue Var 0x561f64b667f0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561f64b675e0 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b67588 <col:3> '_Bool' lvalue Var 0x561f64b66a48 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b675c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561f64b675a8 <col:20> '_Bool' lvalue Var 0x561f64b66868 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561f64b67678 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b67600 <col:3> '_Bool' lvalue Var 0x561f64b66778 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x561f64b67650 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561f64b67620 <col:27> 'int' 1
|   |-CallExpr 0x561f64b676d0 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561f64b676b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b67698 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561f64b67728 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561f64b67710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b676f0 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561f64b67788 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561f64b67748 <col:3> 'int' lvalue Var 0x561f64b66450 'x' 'int'
|   | `-IntegerLiteral 0x561f64b67768 <col:7> 'int' 1
|   |-CallExpr 0x561f64b677e0 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561f64b677c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b677a8 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561f64b67838 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561f64b67820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b67800 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561f64b67b40 <line:717:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561f64b67858 <col:3> 'int' lvalue Var 0x561f64b66570 'y' 'int'
|   | `-ConditionalOperator 0x561f64b67b10 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561f64b67918 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561f64b678d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561f64b678b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561f64b67878 <col:7> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561f64b67900 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561f64b678e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561f64b67898 <col:25> '_Bool' lvalue Var 0x561f64b66778 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x561f64b67ad8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561f64b67938 <col:42> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561f64b67ab8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561f64b67a88 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561f64b679f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561f64b679b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561f64b67998 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561f64b67958 <col:55> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561f64b679e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561f64b679c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561f64b67978 <col:73> '_Bool' lvalue Var 0x561f64b66958 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561f64b67a58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561f64b67a18 <col:90> 'int' lvalue Var 0x561f64b66cf8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561f64b67a70 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b67a38 <col:102> 'int' lvalue Var 0x561f64b66570 'y' 'int'
|   |-BinaryOperator 0x561f64b67d48 <line:718:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b67b60 <col:3> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b67d30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b67d00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561f64b67c20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561f64b67bd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561f64b67bc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561f64b67b80 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561f64b67c08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561f64b67bf0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561f64b67ba0 <col:38> '_Bool' lvalue Var 0x561f64b66778 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b67cb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b67c70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b67c40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b67ce8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b67cd0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b67c98 <col:66> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561f64b68030 <line:719:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b67d68 <col:3> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b68018 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b67fe8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561f64b67f08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561f64b67e28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561f64b67de0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561f64b67dc8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561f64b67d88 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561f64b67e10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561f64b67df8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561f64b67da8 <col:38> '_Bool' lvalue Var 0x561f64b66778 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561f64b67ee8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561f64b67ea0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561f64b67e88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561f64b67e48 <col:56> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561f64b67ed0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561f64b67eb8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561f64b67e68 <col:74> '_Bool' lvalue Var 0x561f64b66958 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b67fa0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b67f58 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b67f28 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b67fd0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b67fb8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b67f80 <col:102> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561f64b68238 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b68050 <col:3> '_Bool' lvalue Var 0x561f64b66778 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b68220 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b681f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561f64b68110 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561f64b680c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561f64b680b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561f64b68070 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561f64b680f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561f64b680e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561f64b68090 <col:38> '_Bool' lvalue Var 0x561f64b66778 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b681a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b68160 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b68130 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b681d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b681c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b68188 <col:66> '_Bool' lvalue Var 0x561f64b66778 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561f64b68520 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b68258 <col:3> '_Bool' lvalue Var 0x561f64b66958 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b68508 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b684d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561f64b683f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561f64b68318 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561f64b682d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561f64b682b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561f64b68278 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561f64b68300 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561f64b682e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561f64b68298 <col:38> '_Bool' lvalue Var 0x561f64b66778 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561f64b683d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561f64b68390 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561f64b68378 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561f64b68338 <col:56> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561f64b683c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561f64b683a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561f64b68358 <col:74> '_Bool' lvalue Var 0x561f64b66958 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b68490 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b68448 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b68418 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b684c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b684a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b68470 <col:102> '_Bool' lvalue Var 0x561f64b66958 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x561f64b68578 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561f64b68560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b68540 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561f64b685d0 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561f64b685b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b68598 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561f64b68688 <line:724:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561f64b685f0 <col:3> 'int' lvalue Var 0x561f64b66120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561f64b68668 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561f64b68650 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561f64b68610 <col:22> 'int' lvalue Var 0x561f64b66120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561f64b68630 <col:41> 'int' 1
|   |-CallExpr 0x561f64b686e0 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561f64b686c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b686a8 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561f64b68788 <line:726:3, col:36>
|     `-CallExpr 0x561f64b68768 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561f64b68750 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561f64b68700 <col:10> 'void *(void)' Function 0x561f64b0c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561f64b68928 prev 0x561f64b65c48 <line:728:1, line:744:1> line:728:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561f64b68890 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561f64b69a48 <line:729:1, line:744:1>
|   |-CallExpr 0x561f64b68a08 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561f64b689f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b689d0 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561f64b68a68 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561f64b68a28 <col:3> 'int' lvalue Var 0x561f64b66450 'x' 'int'
|   | `-IntegerLiteral 0x561f64b68a48 <col:7> 'int' 2
|   |-CallExpr 0x561f64b68ac0 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561f64b68aa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b68a88 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561f64b68b38 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561f64b68b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b68ae0 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561f64b68e20 <line:734:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561f64b68b58 <col:3> 'int' lvalue Var 0x561f64b66570 'y' 'int'
|   | `-ConditionalOperator 0x561f64b68df0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561f64b68c18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561f64b68bd0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561f64b68bb8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561f64b68b78 <col:7> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561f64b68c00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561f64b68be8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561f64b68b98 <col:25> '_Bool' lvalue Var 0x561f64b667f0 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561f64b68dd8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561f64b68c38 <col:42> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561f64b68db8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561f64b68d88 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561f64b68cf8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561f64b68cb0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561f64b68c98 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561f64b68c58 <col:55> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561f64b68ce0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561f64b68cc8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561f64b68c78 <col:73> '_Bool' lvalue Var 0x561f64b669d0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561f64b68d58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561f64b68d18 <col:90> 'int' lvalue Var 0x561f64b66cf8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561f64b68d70 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b68d38 <col:102> 'int' lvalue Var 0x561f64b66570 'y' 'int'
|   |-BinaryOperator 0x561f64b69028 <line:735:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b68e40 <col:3> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b69010 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b68fe0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561f64b68f00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561f64b68eb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561f64b68ea0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561f64b68e60 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561f64b68ee8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561f64b68ed0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561f64b68e80 <col:38> '_Bool' lvalue Var 0x561f64b667f0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b68f98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b68f50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b68f20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b68fc8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b68fb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b68f78 <col:66> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561f64b69310 <line:736:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b69048 <col:3> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b692f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b692c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561f64b691e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561f64b69108 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561f64b690c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561f64b690a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561f64b69068 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561f64b690f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561f64b690d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561f64b69088 <col:38> '_Bool' lvalue Var 0x561f64b667f0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561f64b691c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561f64b69180 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561f64b69168 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561f64b69128 <col:56> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561f64b691b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561f64b69198 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561f64b69148 <col:74> '_Bool' lvalue Var 0x561f64b669d0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b69280 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b69238 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b69208 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b692b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b69298 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b69260 <col:102> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561f64b69518 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b69330 <col:3> '_Bool' lvalue Var 0x561f64b667f0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b69500 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b694d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561f64b693f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561f64b693a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561f64b69390 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561f64b69350 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561f64b693d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561f64b693c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561f64b69370 <col:38> '_Bool' lvalue Var 0x561f64b667f0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b69488 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b69440 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b69410 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b694b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b694a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b69468 <col:66> '_Bool' lvalue Var 0x561f64b667f0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561f64b69800 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b69538 <col:3> '_Bool' lvalue Var 0x561f64b669d0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b697e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b697b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561f64b696d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561f64b695f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561f64b695b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561f64b69598 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561f64b69558 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561f64b695e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561f64b695c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561f64b69578 <col:38> '_Bool' lvalue Var 0x561f64b667f0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561f64b696b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561f64b69670 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561f64b69658 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561f64b69618 <col:56> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561f64b696a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561f64b69688 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561f64b69638 <col:74> '_Bool' lvalue Var 0x561f64b669d0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b69770 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b69728 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b696f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b697a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b69788 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b69750 <col:102> '_Bool' lvalue Var 0x561f64b669d0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x561f64b69858 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561f64b69840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b69820 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561f64b698b0 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561f64b69898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b69878 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561f64b69968 <line:741:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561f64b698d0 <col:3> 'int' lvalue Var 0x561f64b66120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561f64b69948 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561f64b69930 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561f64b698f0 <col:22> 'int' lvalue Var 0x561f64b66120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561f64b69910 <col:41> 'int' 1
|   |-CallExpr 0x561f64b699c0 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561f64b699a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b69988 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561f64b69a38 <line:743:3, col:36>
|     `-CallExpr 0x561f64b69a18 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561f64b69a00 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561f64b699e0 <col:10> 'void *(void)' Function 0x561f64b0c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561f64b69bc8 prev 0x561f64b65da0 <line:745:1, line:764:1> line:745:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x561f64b69b30 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561f64b6ae00 <line:746:1, line:764:1>
|   |-CallExpr 0x561f64b69ca8 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561f64b69c90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b69c70 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561f64b69d20 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561f64b69cc8 <col:3> 'int' lvalue Var 0x561f64b66240 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x561f64b69d08 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561f64b69ce8 <col:25> 'int' lvalue Var 0x561f64b66450 'x' 'int'
|   |-CallExpr 0x561f64b69d78 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561f64b69d60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b69d40 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561f64b69dd0 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561f64b69db8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b69d98 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561f64b69e30 <line:751:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561f64b69df0 <col:3> 'int' lvalue Var 0x561f64b66570 'y' 'int'
|   | `-IntegerLiteral 0x561f64b69e10 <col:7> 'int' 1
|   |-CallExpr 0x561f64b69e88 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561f64b69e70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b69e50 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561f64b69ee0 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561f64b69ec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b69ea8 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561f64b6a1c8 <line:754:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561f64b69f00 <col:3> 'int' lvalue Var 0x561f64b66570 'y' 'int'
|   | `-ConditionalOperator 0x561f64b6a198 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561f64b69fc0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561f64b69f78 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561f64b69f60 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561f64b69f20 <col:7> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561f64b69fa8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561f64b69f90 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561f64b69f40 <col:25> '_Bool' lvalue Var 0x561f64b66868 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x561f64b6a180 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561f64b69fe0 <col:42> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x561f64b6a160 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561f64b6a130 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561f64b6a0a0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561f64b6a058 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561f64b6a040 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561f64b6a000 <col:55> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561f64b6a088 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561f64b6a070 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561f64b6a020 <col:73> '_Bool' lvalue Var 0x561f64b66a48 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x561f64b6a100 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561f64b6a0c0 <col:90> 'int' lvalue Var 0x561f64b66cf8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561f64b6a118 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b6a0e0 <col:102> 'int' lvalue Var 0x561f64b66570 'y' 'int'
|   |-BinaryOperator 0x561f64b6a3d0 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b6a1e8 <col:3> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b6a3b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b6a388 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561f64b6a2a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561f64b6a260 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561f64b6a248 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561f64b6a208 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561f64b6a290 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561f64b6a278 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561f64b6a228 <col:38> '_Bool' lvalue Var 0x561f64b66868 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b6a340 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b6a2f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b6a2c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b6a370 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b6a358 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b6a320 <col:66> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561f64b6a6b8 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b6a3f0 <col:3> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b6a6a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b6a670 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561f64b6a590 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561f64b6a4b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561f64b6a468 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561f64b6a450 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561f64b6a410 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561f64b6a498 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561f64b6a480 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561f64b6a430 <col:38> '_Bool' lvalue Var 0x561f64b66868 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561f64b6a570 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561f64b6a528 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561f64b6a510 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561f64b6a4d0 <col:56> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561f64b6a558 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561f64b6a540 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561f64b6a4f0 <col:74> '_Bool' lvalue Var 0x561f64b66a48 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b6a628 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b6a5e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b6a5b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b6a658 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b6a640 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b6a608 <col:102> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561f64b6a8c0 <line:757:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b6a6d8 <col:3> '_Bool' lvalue Var 0x561f64b66868 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b6a8a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b6a878 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561f64b6a798 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561f64b6a750 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561f64b6a738 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561f64b6a6f8 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561f64b6a780 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561f64b6a768 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561f64b6a718 <col:38> '_Bool' lvalue Var 0x561f64b66868 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b6a830 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b6a7e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b6a7b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b6a860 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b6a848 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b6a810 <col:66> '_Bool' lvalue Var 0x561f64b66868 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561f64b6abb8 <line:758:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561f64b6a8e0 <col:3> '_Bool' lvalue Var 0x561f64b66a48 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561f64b6aba0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561f64b6ab70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561f64b6aa80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561f64b6a9a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561f64b6a958 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561f64b6a940 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561f64b6a900 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561f64b6a988 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561f64b6a970 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561f64b6a920 <col:38> '_Bool' lvalue Var 0x561f64b66868 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561f64b6aa60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561f64b6aa18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561f64b6aa00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561f64b6a9c0 <col:56> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561f64b6aa48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561f64b6aa30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561f64b6a9e0 <col:74> '_Bool' lvalue Var 0x561f64b66a48 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561f64b6ab18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561f64b6aad0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561f64b6aaa0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561f64b6ab58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561f64b6ab40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561f64b6aaf8 <col:102> '_Bool' lvalue Var 0x561f64b66a48 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x561f64b6ac10 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561f64b6abf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b6abd8 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561f64b6ac68 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561f64b6ac50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b6ac30 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561f64b6ad20 <line:761:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561f64b6ac88 <col:3> 'int' lvalue Var 0x561f64b66120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561f64b6ad00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561f64b6ace8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561f64b6aca8 <col:22> 'int' lvalue Var 0x561f64b66120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561f64b6acc8 <col:41> 'int' 1
|   |-CallExpr 0x561f64b6ad78 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561f64b6ad60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561f64b6ad40 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561f64b6adf0 <line:763:3, col:36>
|     `-CallExpr 0x561f64b6add0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561f64b6adb8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561f64b6ad98 <col:10> 'void *(void)' Function 0x561f64b0c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561f64b6aeb8 prev 0x561f64b65e68 <line:765:1, line:767:1> line:765:6 fence 'void ()'
| `-CompoundStmt 0x561f64b6af58 <line:766:1, line:767:1>
|-FunctionDecl 0x561f64b6af88 prev 0x561f64b65f28 <line:768:1, line:770:1> line:768:6 isync 'void ()'
| `-CompoundStmt 0x561f64b6b028 <line:769:1, line:770:1>
|-FunctionDecl 0x561f64b6b058 prev 0x561f64b65fe8 <line:771:1, line:773:1> line:771:6 lwfence 'void ()'
| `-CompoundStmt 0x561f64b6b0f8 <line:772:1, line:773:1>
`-FunctionDecl 0x561f64b6b168 <line:774:1, line:811:1> line:774:5 main 'int ()'
  `-CompoundStmt 0x561f64b6f718 <line:775:1, line:811:1>
    |-DeclStmt 0x561f64b6b280 <line:776:3, col:18>
    | `-VarDecl 0x561f64b6b218 <col:3, col:13> col:13 used t2191 'pthread_t':'unsigned long'
    |-CallExpr 0x561f64b6b488 <line:777:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561f64b6b470 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561f64b6b298 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561f64b4d488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561f64b6b2d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561f64b6b2b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561f64b6b218 't2191' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561f64b6b4c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561f64b6b350 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561f64b6b328 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561f64b6b2f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561f64b6b4e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561f64b6b370 <col:39> 'void *(void *)' Function 0x561f64b66f78 'P0' 'void *(void *)'
    | `-ParenExpr 0x561f64b6b3f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561f64b6b3c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561f64b6b390 <col:52> 'int' 0
    |-DeclStmt 0x561f64b6b570 <line:778:3, col:18>
    | `-VarDecl 0x561f64b6b508 <col:3, col:13> col:13 used t2192 'pthread_t':'unsigned long'
    |-CallExpr 0x561f64b6b718 <line:779:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561f64b6b700 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561f64b6b588 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561f64b4d488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561f64b6b5c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561f64b6b5a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561f64b6b508 't2192' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561f64b6b758 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561f64b6b640 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561f64b6b618 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561f64b6b5e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561f64b6b770 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561f64b6b660 <col:39> 'void *(void *)' Function 0x561f64b68928 'P1' 'void *(void *)'
    | `-ParenExpr 0x561f64b6b6e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561f64b6b6b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561f64b6b680 <col:52> 'int' 0
    |-DeclStmt 0x561f64b6b800 <line:780:3, col:18>
    | `-VarDecl 0x561f64b6b798 <col:3, col:13> col:13 used t2193 'pthread_t':'unsigned long'
    |-CallExpr 0x561f64b6b9a8 <line:781:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561f64b6b990 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561f64b6b818 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561f64b4d488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561f64b6b858 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561f64b6b838 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561f64b6b798 't2193' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561f64b6b9e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561f64b6b8d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561f64b6b8a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561f64b6b870 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561f64b6ba00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561f64b6b8f0 <col:39> 'void *(void *)' Function 0x561f64b69bc8 'P2' 'void *(void *)'
    | `-ParenExpr 0x561f64b6b970 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561f64b6b948 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561f64b6b910 <col:52> 'int' 0
    |-CallExpr 0x561f64b6ba50 <line:782:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561f64b6ba38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561f64b6ba18 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561f64b6bb20 <line:783:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6ba70 <col:3> '_Bool' lvalue Var 0x561f64b662d8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6bb08 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561f64b6bae8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561f64b6bad0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561f64b6ba90 <col:21> 'int' lvalue Var 0x561f64b66120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561f64b6bab0 <col:41> 'int' 3
    |-CallExpr 0x561f64b6bb88 <line:784:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561f64b6bb70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561f64b6bb50 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561f64b6bc00 <line:785:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561f64b6bbe8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561f64b6bba8 <col:3> 'void (int)' Function 0x561f64b0c790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561f64b6bc40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561f64b6bc28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561f64b6bbc8 <col:21> '_Bool' lvalue Var 0x561f64b662d8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561f64b6bc90 <line:786:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561f64b6bc78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561f64b6bc58 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561f64b6bf78 <line:787:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561f64b6bcb0 <col:3> 'int' lvalue Var 0x561f64b66570 'y' 'int'
    | `-ConditionalOperator 0x561f64b6bf48 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561f64b6bd70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561f64b6bd28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561f64b6bd10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561f64b6bcd0 <col:7> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561f64b6bd58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561f64b6bd40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561f64b6bcf0 <col:25> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561f64b6bf30 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561f64b6bd90 <col:42> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
    |   `-ParenExpr 0x561f64b6bf10 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561f64b6bee0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561f64b6be50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561f64b6be08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561f64b6bdf0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561f64b6bdb0 <col:55> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561f64b6be38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561f64b6be20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561f64b6bdd0 <col:73> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561f64b6beb0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561f64b6be70 <col:90> 'int' lvalue Var 0x561f64b66cf8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561f64b6bec8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561f64b6be90 <col:102> 'int' lvalue Var 0x561f64b66570 'y' 'int'
    |-BinaryOperator 0x561f64b6c180 <line:788:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6bf98 <col:3> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6c168 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561f64b6c138 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561f64b6c058 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561f64b6c010 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561f64b6bff8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561f64b6bfb8 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561f64b6c040 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561f64b6c028 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561f64b6bfd8 <col:38> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561f64b6c0f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561f64b6c0a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561f64b6c078 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561f64b6c120 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561f64b6c108 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561f64b6c0d0 <col:66> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561f64b6c468 <line:789:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6c1a0 <col:3> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6c450 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561f64b6c420 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561f64b6c340 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561f64b6c260 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561f64b6c218 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561f64b6c200 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561f64b6c1c0 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561f64b6c248 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561f64b6c230 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561f64b6c1e0 <col:38> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561f64b6c320 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561f64b6c2d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561f64b6c2c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561f64b6c280 <col:56> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561f64b6c308 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561f64b6c2f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561f64b6c2a0 <col:74> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561f64b6c3d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561f64b6c390 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561f64b6c360 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561f64b6c408 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561f64b6c3f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561f64b6c3b8 <col:102> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x561f64b6c670 <line:790:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6c488 <col:3> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6c658 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561f64b6c628 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561f64b6c548 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561f64b6c500 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561f64b6c4e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561f64b6c4a8 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561f64b6c530 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561f64b6c518 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561f64b6c4c8 <col:38> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561f64b6c5e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561f64b6c598 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561f64b6c568 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561f64b6c610 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561f64b6c5f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561f64b6c5c0 <col:66> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561f64b6c958 <line:791:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6c690 <col:3> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6c940 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561f64b6c910 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561f64b6c830 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561f64b6c750 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561f64b6c708 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561f64b6c6f0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561f64b6c6b0 <col:20> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561f64b6c738 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561f64b6c720 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561f64b6c6d0 <col:38> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561f64b6c810 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561f64b6c7c8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561f64b6c7b0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561f64b6c770 <col:56> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561f64b6c7f8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561f64b6c7e0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561f64b6c790 <col:74> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561f64b6c8c8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561f64b6c880 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561f64b6c850 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561f64b6c8f8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561f64b6c8e0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561f64b6c8a8 <col:102> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561f64b6c9b0 <line:792:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561f64b6c998 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561f64b6c978 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561f64b6ca08 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561f64b6c9f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561f64b6c9d0 <col:3> 'void ()' Function 0x561f64b0ce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561f64b6cab8 <line:794:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6ca28 <col:3> '_Bool' lvalue Var 0x561f64b66de8 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6caa0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x561f64b6ca80 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x561f64b6ca68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x561f64b6ca48 <col:19> 'void *(void)' Function 0x561f64b0c958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x561f64b6cb78 <line:795:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6cad8 <col:3> '_Bool' lvalue Var 0x561f64b66e60 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6cb60 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x561f64b6cb30 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x561f64b6cb18 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x561f64b6caf8 <col:19> 'void *(void)' Function 0x561f64b0c958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x561f64b6cbf0 <line:796:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6cb98 <col:3> '_Bool' lvalue Var 0x561f64b66608 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6cbd8 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x561f64b6cbb8 <col:21> '_Bool' lvalue Var 0x561f64b66e60 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x561f64b6cc68 <line:797:3, col:15> 'int' '='
    | |-DeclRefExpr 0x561f64b6cc10 <col:3> 'int' lvalue Var 0x561f64b66688 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x561f64b6cc50 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x561f64b6cc30 <col:15> 'int' lvalue Var 0x561f64b66570 'y' 'int'
    |-BinaryOperator 0x561f64b6d0a0 <line:798:3, col:162> 'int' '='
    | |-DeclRefExpr 0x561f64b6cc88 <col:3> 'int' lvalue Var 0x561f64b66570 'y' 'int'
    | `-ConditionalOperator 0x561f64b6d070 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x561f64b6ce98 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x561f64b6cdb8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x561f64b6cce0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x561f64b6ccc8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x561f64b6cca8 <col:8> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x561f64b6cd98 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x561f64b6cd30 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x561f64b6cd18 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x561f64b6ccf8 <col:27> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x561f64b6cd80 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x561f64b6cd68 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x561f64b6cd48 <col:46> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x561f64b6ce78 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x561f64b6ce10 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x561f64b6cdf8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x561f64b6cdd8 <col:65> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x561f64b6ce60 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x561f64b6ce48 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x561f64b6ce28 <col:84> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561f64b6d058 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561f64b6ceb8 <col:101> 'int' lvalue Var 0x561f64b66570 'y' 'int'
    |   `-ParenExpr 0x561f64b6d038 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x561f64b6d008 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x561f64b6cf78 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561f64b6cf30 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561f64b6cf18 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561f64b6ced8 <col:106> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561f64b6cf60 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561f64b6cf48 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561f64b6cef8 <col:124> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561f64b6cfd8 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561f64b6cf98 <col:141> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x561f64b6cff0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561f64b6cfb8 <col:153> 'int' lvalue Var 0x561f64b66cf8 'y$w_buff1' 'int'
    |-BinaryOperator 0x561f64b6d5b0 <line:799:3, col:208> 'int' '='
    | |-DeclRefExpr 0x561f64b6d0c0 <col:3> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x561f64b6d580 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x561f64b6d550 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x561f64b6d538 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561f64b6d0e0 <col:15> '_Bool' lvalue Var 0x561f64b66e60 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x561f64b6d568 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561f64b6d100 <col:31> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
    |   `-ParenExpr 0x561f64b6d518 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x561f64b6d4e8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x561f64b6d310 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x561f64b6d230 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x561f64b6d158 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x561f64b6d140 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x561f64b6d120 <col:45> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x561f64b6d210 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x561f64b6d1a8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x561f64b6d190 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x561f64b6d170 <col:64> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x561f64b6d1f8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x561f64b6d1e0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x561f64b6d1c0 <col:83> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x561f64b6d2f0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x561f64b6d288 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x561f64b6d270 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x561f64b6d250 <col:102> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x561f64b6d2d8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x561f64b6d2c0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x561f64b6d2a0 <col:121> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561f64b6d4d0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561f64b6d330 <col:138> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
    |       `-ParenExpr 0x561f64b6d4b0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x561f64b6d480 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x561f64b6d3f0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x561f64b6d3a8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x561f64b6d390 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x561f64b6d350 <col:151> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x561f64b6d3d8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x561f64b6d3c0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x561f64b6d370 <col:169> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x561f64b6d450 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561f64b6d410 <col:186> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x561f64b6d468 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x561f64b6d430 <col:198> 'int' lvalue Var 0x561f64b66c00 'y$w_buff0' 'int'
    |-BinaryOperator 0x561f64b6dac0 <line:800:3, col:208> 'int' '='
    | |-DeclRefExpr 0x561f64b6d5d0 <col:3> 'int' lvalue Var 0x561f64b66cf8 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x561f64b6da90 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x561f64b6da60 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x561f64b6da48 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561f64b6d5f0 <col:15> '_Bool' lvalue Var 0x561f64b66e60 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x561f64b6da78 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561f64b6d610 <col:31> 'int' lvalue Var 0x561f64b66cf8 'y$w_buff1' 'int'
    |   `-ParenExpr 0x561f64b6da28 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x561f64b6d9f8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x561f64b6d820 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x561f64b6d740 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x561f64b6d668 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x561f64b6d650 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x561f64b6d630 <col:45> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x561f64b6d720 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x561f64b6d6b8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x561f64b6d6a0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x561f64b6d680 <col:64> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x561f64b6d708 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x561f64b6d6f0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x561f64b6d6d0 <col:83> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x561f64b6d800 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x561f64b6d798 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x561f64b6d780 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x561f64b6d760 <col:102> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x561f64b6d7e8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x561f64b6d7d0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x561f64b6d7b0 <col:121> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561f64b6d9e0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561f64b6d840 <col:138> 'int' lvalue Var 0x561f64b66cf8 'y$w_buff1' 'int'
    |       `-ParenExpr 0x561f64b6d9c0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x561f64b6d990 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x561f64b6d900 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x561f64b6d8b8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x561f64b6d8a0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x561f64b6d860 <col:151> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x561f64b6d8e8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x561f64b6d8d0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x561f64b6d880 <col:169> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x561f64b6d960 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561f64b6d920 <col:186> 'int' lvalue Var 0x561f64b66cf8 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x561f64b6d978 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x561f64b6d940 <col:198> 'int' lvalue Var 0x561f64b66cf8 'y$w_buff1' 'int'
    |-BinaryOperator 0x561f64b6e078 <line:801:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6dae0 <col:3> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6e060 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561f64b6e030 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x561f64b6dfe8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561f64b6dfd0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561f64b6db00 <col:20> '_Bool' lvalue Var 0x561f64b66e60 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561f64b6e018 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561f64b6e000 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561f64b6db20 <col:36> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x561f64b6dfb0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x561f64b6df80 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x561f64b6dd40 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561f64b6dc60 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561f64b6db88 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561f64b6db70 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561f64b6db40 <col:55> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561f64b6dc40 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561f64b6dbd8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561f64b6dbc0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561f64b6dba0 <col:74> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561f64b6dc28 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561f64b6dc10 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561f64b6dbf0 <col:93> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561f64b6dd20 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561f64b6dcb8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561f64b6dca0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561f64b6dc80 <col:112> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561f64b6dd08 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561f64b6dcf0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561f64b6dcd0 <col:131> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561f64b6df68 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561f64b6df50 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561f64b6dd60 <col:148> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x561f64b6df30 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x561f64b6df00 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x561f64b6de20 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561f64b6ddd8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561f64b6ddc0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561f64b6dd80 <col:166> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561f64b6de08 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561f64b6ddf0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561f64b6dda0 <col:184> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561f64b6deb8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561f64b6de70 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561f64b6de40 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561f64b6dee8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x561f64b6ded0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x561f64b6de98 <col:212> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561f64b6e640 <line:802:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6e098 <col:3> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6e628 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561f64b6e5f8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x561f64b6e5b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561f64b6e598 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561f64b6e0b8 <col:20> '_Bool' lvalue Var 0x561f64b66e60 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561f64b6e5e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561f64b6e5c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561f64b6e0d8 <col:36> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x561f64b6e578 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x561f64b6e548 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x561f64b6e2e8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561f64b6e208 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561f64b6e130 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561f64b6e118 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561f64b6e0f8 <col:55> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561f64b6e1e8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561f64b6e180 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561f64b6e168 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561f64b6e148 <col:74> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561f64b6e1d0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561f64b6e1b8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561f64b6e198 <col:93> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561f64b6e2c8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561f64b6e260 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561f64b6e248 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561f64b6e228 <col:112> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561f64b6e2b0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561f64b6e298 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561f64b6e278 <col:131> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561f64b6e530 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561f64b6e518 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561f64b6e308 <col:148> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x561f64b6e4f8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x561f64b6e4c8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x561f64b6e3c8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561f64b6e380 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561f64b6e368 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561f64b6e328 <col:166> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561f64b6e3b0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561f64b6e398 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561f64b6e348 <col:184> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561f64b6e498 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561f64b6e418 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561f64b6e3e8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561f64b6e4b0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x561f64b6e470 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x561f64b6e440 <col:219> 'int' 0
    |-BinaryOperator 0x561f64b6ebf8 <line:803:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6e660 <col:3> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6ebe0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561f64b6ebb0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x561f64b6eb58 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561f64b6eb40 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561f64b6e680 <col:20> '_Bool' lvalue Var 0x561f64b66e60 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561f64b6eb98 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561f64b6eb80 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561f64b6e6a0 <col:36> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x561f64b6eb20 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x561f64b6eaf0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x561f64b6e8b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561f64b6e7d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561f64b6e6f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561f64b6e6e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561f64b6e6c0 <col:55> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561f64b6e7b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561f64b6e748 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561f64b6e730 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561f64b6e710 <col:74> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561f64b6e798 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561f64b6e780 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561f64b6e760 <col:93> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561f64b6e890 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561f64b6e828 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561f64b6e810 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561f64b6e7f0 <col:112> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561f64b6e878 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561f64b6e860 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561f64b6e840 <col:131> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561f64b6ead8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561f64b6eac0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561f64b6e8d0 <col:148> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x561f64b6eaa0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x561f64b6ea70 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x561f64b6e990 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561f64b6e948 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561f64b6e930 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561f64b6e8f0 <col:166> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561f64b6e978 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561f64b6e960 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561f64b6e910 <col:184> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561f64b6ea28 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561f64b6e9e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561f64b6e9b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561f64b6ea58 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x561f64b6ea40 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x561f64b6ea08 <col:212> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561f64b6f1c0 <line:804:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6ec18 <col:3> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6f1a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561f64b6f178 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x561f64b6f130 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561f64b6f118 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561f64b6ec38 <col:20> '_Bool' lvalue Var 0x561f64b66e60 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561f64b6f160 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561f64b6f148 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561f64b6ec58 <col:36> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x561f64b6f0f8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x561f64b6f0c8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x561f64b6ee68 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561f64b6ed88 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561f64b6ecb0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561f64b6ec98 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561f64b6ec78 <col:55> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561f64b6ed68 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561f64b6ed00 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561f64b6ece8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561f64b6ecc8 <col:74> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561f64b6ed50 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561f64b6ed38 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561f64b6ed18 <col:93> '_Bool' lvalue Var 0x561f64b66d70 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561f64b6ee48 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561f64b6ede0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561f64b6edc8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561f64b6eda8 <col:112> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561f64b6ee30 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561f64b6ee18 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561f64b6edf8 <col:131> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561f64b6f0b0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561f64b6f098 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561f64b6ee88 <col:148> '_Bool' lvalue Var 0x561f64b668e0 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x561f64b6f078 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x561f64b6f048 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x561f64b6ef48 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561f64b6ef00 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561f64b6eee8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561f64b6eea8 <col:166> '_Bool' lvalue Var 0x561f64b66c78 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561f64b6ef30 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561f64b6ef18 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561f64b6eec8 <col:184> '_Bool' lvalue Var 0x561f64b66700 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561f64b6f018 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561f64b6ef98 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561f64b6ef68 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561f64b6f030 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x561f64b6eff0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x561f64b6efc0 <col:219> 'int' 0
    |-BinaryOperator 0x561f64b6f3f8 <line:805:3, col:67> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6f1e0 <col:3> '_Bool' lvalue Var 0x561f64b66350 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561f64b6f3e0 <col:21, col:67> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561f64b6f3c8 <col:21, col:67> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561f64b6f3a8 <col:22, col:67> 'int'
    |       `-BinaryOperator 0x561f64b6f388 <col:23, col:66> 'int' '&&'
    |         |-BinaryOperator 0x561f64b6f2f0 <col:23, col:38> 'int' '&&'
    |         | |-BinaryOperator 0x561f64b6f258 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x561f64b6f240 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x561f64b6f200 <col:23> 'int' lvalue Var 0x561f64b66450 'x' 'int'
    |         | | `-IntegerLiteral 0x561f64b6f220 <col:28> 'int' 2
    |         | `-BinaryOperator 0x561f64b6f2d0 <col:33, col:38> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561f64b6f2b8 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561f64b6f278 <col:33> 'int' lvalue Var 0x561f64b66570 'y' 'int'
    |         |   `-IntegerLiteral 0x561f64b6f298 <col:38> 'int' 2
    |         `-BinaryOperator 0x561f64b6f368 <col:43, col:66> 'int' '=='
    |           |-ImplicitCastExpr 0x561f64b6f350 <col:43> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561f64b6f310 <col:43> 'int' lvalue Var 0x561f64b66240 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x561f64b6f330 <col:66> 'int' 2
    |-BinaryOperator 0x561f64b6f528 <line:806:3, col:37> 'int' '='
    | |-DeclRefExpr 0x561f64b6f418 <col:3> 'int' lvalue Var 0x561f64b66570 'y' 'int'
    | `-ConditionalOperator 0x561f64b6f4f8 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x561f64b6f4b0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x561f64b6f498 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561f64b6f438 <col:7> '_Bool' lvalue Var 0x561f64b66608 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x561f64b6f4c8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561f64b6f458 <col:25> 'int' lvalue Var 0x561f64b66688 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x561f64b6f4e0 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x561f64b6f478 <col:37> 'int' lvalue Var 0x561f64b66570 'y' 'int'
    |-BinaryOperator 0x561f64b6f5c0 <line:807:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x561f64b6f548 <col:3> '_Bool' lvalue Var 0x561f64b66608 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x561f64b6f598 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x561f64b6f568 <col:28> 'int' 0
    |-CallExpr 0x561f64b6f618 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561f64b6f600 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561f64b6f5e0 <col:3> 'void ()' Function 0x561f64b0cf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561f64b6f690 <line:809:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561f64b6f678 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561f64b6f638 <col:3> 'void (int)' Function 0x561f64b0cbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561f64b6f6d0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561f64b6f6b8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561f64b6f658 <col:21> '_Bool' lvalue Var 0x561f64b66350 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561f64b6f708 <line:810:3, col:10>
      `-IntegerLiteral 0x561f64b6f6e8 <col:10> 'int' 0
