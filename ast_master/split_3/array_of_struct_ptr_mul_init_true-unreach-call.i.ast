TranslationUnitDecl 0x55fa58013388 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55fa58013c48 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55fa58013920 '__int128'
|-TypedefDecl 0x55fa58013cb8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55fa58013940 'unsigned __int128'
|-TypedefDecl 0x55fa58013fc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55fa58013d90 'struct __NSConstantString_tag'
|   `-Record 0x55fa58013d10 '__NSConstantString_tag'
|-TypedefDecl 0x55fa58014068 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55fa58014020 'char *'
|   `-BuiltinType 0x55fa58013420 'char'
|-TypedefDecl 0x55fa58052ba0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55fa58014300 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55fa58014140 'struct __va_list_tag'
|     `-Record 0x55fa580140c0 '__va_list_tag'
|-FunctionDecl 0x55fa58052c80 <./split_3/array_of_struct_ptr_mul_init_true-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55fa58052e50 <line:2:1, col:79> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55fa58052d80 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x55fa58053090 <col:34, col:79>
|   `-IfStmt 0x55fa58053078 <col:36, col:77>
|     |-UnaryOperator 0x55fa58052f50 <col:39, col:45> 'int' prefix '!' cannot overflow
|     | `-ImplicitCastExpr 0x55fa58052f38 <col:40, col:45> 'int' <LValueToRValue>
|     |   `-ParenExpr 0x55fa58052f18 <col:40, col:45> 'int' lvalue
|     |     `-DeclRefExpr 0x55fa58052ef8 <col:41> 'int' lvalue ParmVar 0x55fa58052d80 'cond' 'int'
|     `-CompoundStmt 0x55fa58053060 <col:48, col:77>
|       `-LabelStmt 0x55fa58053048 <col:50, col:74> 'ERROR'
|         `-CallExpr 0x55fa58052fd8 <col:57, col:74> 'void'
|           `-ImplicitCastExpr 0x55fa58052fc0 <col:57> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x55fa58052f68 <col:57> 'void () __attribute__((noreturn))' Function 0x55fa58052c80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|-RecordDecl 0x55fa580530a8 <line:3:1, line:6:1> line:3:8 struct S definition
| |-FieldDecl 0x55fa58053170 <line:4:2, col:17> col:17 referenced p 'unsigned short'
| `-FieldDecl 0x55fa580531d8 <line:5:2, col:17> col:17 referenced q 'unsigned short'
|-VarDecl 0x55fa580533b0 <line:3:1, line:6:11> col:3 used a 'struct S [100000]'
|-FunctionDecl 0x55fa58053488 <line:7:1, col:31> col:7 used __VERIFIER_nondet_short 'short ()'
|-FunctionDecl 0x55fa58053588 <line:8:1, col:39> col:15 used __VERIFIER_nondet_uchar 'unsigned char ()'
`-FunctionDecl 0x55fa58053688 <line:9:1, line:32:1> line:9:5 main 'int ()'
  `-CompoundStmt 0x55fa58078a00 <line:10:1, line:32:1>
    |-DeclStmt 0x55fa580537a8 <line:11:2, col:17>
    | `-VarDecl 0x55fa58053740 <col:2, col:16> col:16 used k 'unsigned char'
    |-DeclStmt 0x55fa58053840 <line:12:2, col:7>
    | `-VarDecl 0x55fa580537d8 <col:2, col:6> col:6 used i 'int'
    |-ForStmt 0x55fa58077c90 <line:13:2, line:17:2>
    | |-BinaryOperator 0x55fa58053898 <line:13:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x55fa58053858 <col:7> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    | | `-IntegerLiteral 0x55fa58053878 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x55fa58053910 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x55fa580538f8 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55fa580538b8 <col:14> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    | | `-IntegerLiteral 0x55fa580538d8 <col:18> 'int' 100000
    | |-UnaryOperator 0x55fa58053950 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x55fa58053930 <col:27> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    | `-CompoundStmt 0x55fa58077c70 <line:14:2, line:17:2>
    |   |-BinaryOperator 0x55fa58053ae0 <line:15:3, col:12> 'unsigned short' '='
    |   | |-MemberExpr 0x55fa58053a60 <col:3, col:8> 'unsigned short' lvalue .p 0x55fa58053170
    |   | | `-ArraySubscriptExpr 0x55fa58053a40 <col:3, col:6> 'struct S':'struct S' lvalue
    |   | |   |-ImplicitCastExpr 0x55fa58053a10 <col:3> 'struct S *' <ArrayToPointerDecay>
    |   | |   | `-DeclRefExpr 0x55fa58053968 <col:3> 'struct S [100000]' lvalue Var 0x55fa580533b0 'a' 'struct S [100000]'
    |   | |   `-ImplicitCastExpr 0x55fa58053a28 <col:5> 'int' <LValueToRValue>
    |   | |     `-DeclRefExpr 0x55fa58053988 <col:5> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    |   | `-ImplicitCastExpr 0x55fa58053ac8 <col:12> 'unsigned short' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55fa58053ab0 <col:12> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55fa58053a90 <col:12> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    |   `-BinaryOperator 0x55fa58077c50 <line:16:3, col:12> 'unsigned short' '='
    |     |-MemberExpr 0x55fa58077bd0 <col:3, col:8> 'unsigned short' lvalue .q 0x55fa580531d8
    |     | `-ArraySubscriptExpr 0x55fa58053b70 <col:3, col:6> 'struct S':'struct S' lvalue
    |     |   |-ImplicitCastExpr 0x55fa58053b40 <col:3> 'struct S *' <ArrayToPointerDecay>
    |     |   | `-DeclRefExpr 0x55fa58053b00 <col:3> 'struct S [100000]' lvalue Var 0x55fa580533b0 'a' 'struct S [100000]'
    |     |   `-ImplicitCastExpr 0x55fa58053b58 <col:5> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55fa58053b20 <col:5> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    |     `-ImplicitCastExpr 0x55fa58077c38 <col:12> 'unsigned short' <IntegralCast>
    |       `-ImplicitCastExpr 0x55fa58077c20 <col:12> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55fa58077c00 <col:12> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    |-ForStmt 0x55fa58078278 <line:18:2, line:26:2>
    | |-BinaryOperator 0x55fa58077d08 <line:18:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x55fa58077cc8 <col:7> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    | | `-IntegerLiteral 0x55fa58077ce8 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x55fa58077d80 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x55fa58077d68 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55fa58077d28 <col:14> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    | | `-IntegerLiteral 0x55fa58077d48 <col:18> 'int' 100000
    | |-UnaryOperator 0x55fa58077dc0 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x55fa58077da0 <col:26> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    | `-CompoundStmt 0x55fa58078260 <line:19:2, line:26:2>
    |   `-IfStmt 0x55fa58078248 <line:20:3, line:25:3>
    |     |-CallExpr 0x55fa58077e48 <line:20:8, col:32> 'short'
    |     | `-ImplicitCastExpr 0x55fa58077e30 <col:8> 'short (*)()' <FunctionToPointerDecay>
    |     |   `-DeclRefExpr 0x55fa58077dd8 <col:8> 'short ()' Function 0x55fa58053488 '__VERIFIER_nondet_short' 'short ()'
    |     `-CompoundStmt 0x55fa58078220 <line:21:3, line:25:3>
    |       |-BinaryOperator 0x55fa58077f18 <line:22:4, col:32> 'unsigned char' '='
    |       | |-DeclRefExpr 0x55fa58077e68 <col:4> 'unsigned char' lvalue Var 0x55fa58053740 'k' 'unsigned char'
    |       | `-CallExpr 0x55fa58077ef8 <col:8, col:32> 'unsigned char'
    |       |   `-ImplicitCastExpr 0x55fa58077ee0 <col:8> 'unsigned char (*)()' <FunctionToPointerDecay>
    |       |     `-DeclRefExpr 0x55fa58077e88 <col:8> 'unsigned char ()' Function 0x55fa58053588 '__VERIFIER_nondet_uchar' 'unsigned char ()'
    |       |-BinaryOperator 0x55fa58078048 <line:23:4, col:13> 'unsigned short' '='
    |       | |-MemberExpr 0x55fa58077fc8 <col:4, col:9> 'unsigned short' lvalue .p 0x55fa58053170
    |       | | `-ArraySubscriptExpr 0x55fa58077fa8 <col:4, col:7> 'struct S':'struct S' lvalue
    |       | |   |-ImplicitCastExpr 0x55fa58077f78 <col:4> 'struct S *' <ArrayToPointerDecay>
    |       | |   | `-DeclRefExpr 0x55fa58077f38 <col:4> 'struct S [100000]' lvalue Var 0x55fa580533b0 'a' 'struct S [100000]'
    |       | |   `-ImplicitCastExpr 0x55fa58077f90 <col:6> 'int' <LValueToRValue>
    |       | |     `-DeclRefExpr 0x55fa58077f58 <col:6> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    |       | `-ImplicitCastExpr 0x55fa58078030 <col:13> 'unsigned short' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55fa58078018 <col:13> 'unsigned char' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55fa58077ff8 <col:13> 'unsigned char' lvalue Var 0x55fa58053740 'k' 'unsigned char'
    |       `-BinaryOperator 0x55fa58078200 <line:24:4, col:17> 'unsigned short' '='
    |         |-MemberExpr 0x55fa580780f8 <col:4, col:9> 'unsigned short' lvalue .q 0x55fa580531d8
    |         | `-ArraySubscriptExpr 0x55fa580780d8 <col:4, col:7> 'struct S':'struct S' lvalue
    |         |   |-ImplicitCastExpr 0x55fa580780a8 <col:4> 'struct S *' <ArrayToPointerDecay>
    |         |   | `-DeclRefExpr 0x55fa58078068 <col:4> 'struct S [100000]' lvalue Var 0x55fa580533b0 'a' 'struct S [100000]'
    |         |   `-ImplicitCastExpr 0x55fa580780c0 <col:6> 'int' <LValueToRValue>
    |         |     `-DeclRefExpr 0x55fa58078088 <col:6> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    |         `-ImplicitCastExpr 0x55fa580781e8 <col:13, col:17> 'unsigned short' <IntegralCast>
    |           `-BinaryOperator 0x55fa580781c8 <col:13, col:17> 'int' '*'
    |             |-ImplicitCastExpr 0x55fa58078180 <col:13> 'int' <IntegralCast>
    |             | `-ImplicitCastExpr 0x55fa58078168 <col:13> 'unsigned char' <LValueToRValue>
    |             |   `-DeclRefExpr 0x55fa58078128 <col:13> 'unsigned char' lvalue Var 0x55fa58053740 'k' 'unsigned char'
    |             `-ImplicitCastExpr 0x55fa580781b0 <col:17> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55fa58078198 <col:17> 'unsigned char' <LValueToRValue>
    |                 `-DeclRefExpr 0x55fa58078148 <col:17> 'unsigned char' lvalue Var 0x55fa58053740 'k' 'unsigned char'
    |-ForStmt 0x55fa58078998 <line:27:2, line:30:2>
    | |-BinaryOperator 0x55fa580782f0 <line:27:7, col:11> 'int' '='
    | | |-DeclRefExpr 0x55fa580782b0 <col:7> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    | | `-IntegerLiteral 0x55fa580782d0 <col:11> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x55fa58078368 <col:14, col:18> 'int' '<'
    | | |-ImplicitCastExpr 0x55fa58078350 <col:14> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55fa58078310 <col:14> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    | | `-IntegerLiteral 0x55fa58078330 <col:18> 'int' 100000
    | |-UnaryOperator 0x55fa580783a8 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x55fa58078388 <col:26> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    | `-CompoundStmt 0x55fa58078980 <line:28:2, line:30:2>
    |   `-CallExpr 0x55fa58078958 <line:29:3, col:66> 'void'
    |     |-ImplicitCastExpr 0x55fa58078940 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x55fa580783c0 <col:3> 'void (int)' Function 0x55fa58052e50 '__VERIFIER_assert' 'void (int)'
    |     `-BinaryOperator 0x55fa580788f0 <col:21, col:65> 'int' '||'
    |       |-BinaryOperator 0x55fa580785c0 <col:21, col:36> 'int' '=='
    |       | |-ImplicitCastExpr 0x55fa58078590 <col:21, col:26> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55fa58078560 <col:21, col:26> 'unsigned short' <LValueToRValue>
    |       | |   `-MemberExpr 0x55fa58078470 <col:21, col:26> 'unsigned short' lvalue .p 0x55fa58053170
    |       | |     `-ArraySubscriptExpr 0x55fa58078450 <col:21, col:24> 'struct S':'struct S' lvalue
    |       | |       |-ImplicitCastExpr 0x55fa58078420 <col:21> 'struct S *' <ArrayToPointerDecay>
    |       | |       | `-DeclRefExpr 0x55fa580783e0 <col:21> 'struct S [100000]' lvalue Var 0x55fa580533b0 'a' 'struct S [100000]'
    |       | |       `-ImplicitCastExpr 0x55fa58078438 <col:23> 'int' <LValueToRValue>
    |       | |         `-DeclRefExpr 0x55fa58078400 <col:23> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    |       | `-ImplicitCastExpr 0x55fa580785a8 <col:31, col:36> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55fa58078578 <col:31, col:36> 'unsigned short' <LValueToRValue>
    |       |     `-MemberExpr 0x55fa58078530 <col:31, col:36> 'unsigned short' lvalue .q 0x55fa580531d8
    |       |       `-ArraySubscriptExpr 0x55fa58078510 <col:31, col:34> 'struct S':'struct S' lvalue
    |       |         |-ImplicitCastExpr 0x55fa580784e0 <col:31> 'struct S *' <ArrayToPointerDecay>
    |       |         | `-DeclRefExpr 0x55fa580784a0 <col:31> 'struct S [100000]' lvalue Var 0x55fa580533b0 'a' 'struct S [100000]'
    |       |         `-ImplicitCastExpr 0x55fa580784f8 <col:33> 'int' <LValueToRValue>
    |       |           `-DeclRefExpr 0x55fa580784c0 <col:33> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    |       `-BinaryOperator 0x55fa580788d0 <col:41, col:65> 'int' '=='
    |         |-ImplicitCastExpr 0x55fa580788b8 <col:41, col:46> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55fa580788a0 <col:41, col:46> 'unsigned short' <LValueToRValue>
    |         |   `-MemberExpr 0x55fa58078670 <col:41, col:46> 'unsigned short' lvalue .q 0x55fa580531d8
    |         |     `-ArraySubscriptExpr 0x55fa58078650 <col:41, col:44> 'struct S':'struct S' lvalue
    |         |       |-ImplicitCastExpr 0x55fa58078620 <col:41> 'struct S *' <ArrayToPointerDecay>
    |         |       | `-DeclRefExpr 0x55fa580785e0 <col:41> 'struct S [100000]' lvalue Var 0x55fa580533b0 'a' 'struct S [100000]'
    |         |       `-ImplicitCastExpr 0x55fa58078638 <col:43> 'int' <LValueToRValue>
    |         |         `-DeclRefExpr 0x55fa58078600 <col:43> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    |         `-BinaryOperator 0x55fa58078880 <col:51, col:65> 'int' '*'
    |           |-ImplicitCastExpr 0x55fa58078838 <col:51, col:56> 'int' <IntegralCast>
    |           | `-ImplicitCastExpr 0x55fa58078820 <col:51, col:56> 'unsigned short' <LValueToRValue>
    |           |   `-MemberExpr 0x55fa58078730 <col:51, col:56> 'unsigned short' lvalue .p 0x55fa58053170
    |           |     `-ArraySubscriptExpr 0x55fa58078710 <col:51, col:54> 'struct S':'struct S' lvalue
    |           |       |-ImplicitCastExpr 0x55fa580786e0 <col:51> 'struct S *' <ArrayToPointerDecay>
    |           |       | `-DeclRefExpr 0x55fa580786a0 <col:51> 'struct S [100000]' lvalue Var 0x55fa580533b0 'a' 'struct S [100000]'
    |           |       `-ImplicitCastExpr 0x55fa580786f8 <col:53> 'int' <LValueToRValue>
    |           |         `-DeclRefExpr 0x55fa580786c0 <col:53> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    |           `-ImplicitCastExpr 0x55fa58078868 <col:60, col:65> 'int' <IntegralCast>
    |             `-ImplicitCastExpr 0x55fa58078850 <col:60, col:65> 'unsigned short' <LValueToRValue>
    |               `-MemberExpr 0x55fa580787f0 <col:60, col:65> 'unsigned short' lvalue .p 0x55fa58053170
    |                 `-ArraySubscriptExpr 0x55fa580787d0 <col:60, col:63> 'struct S':'struct S' lvalue
    |                   |-ImplicitCastExpr 0x55fa580787a0 <col:60> 'struct S *' <ArrayToPointerDecay>
    |                   | `-DeclRefExpr 0x55fa58078760 <col:60> 'struct S [100000]' lvalue Var 0x55fa580533b0 'a' 'struct S [100000]'
    |                   `-ImplicitCastExpr 0x55fa580787b8 <col:62> 'int' <LValueToRValue>
    |                     `-DeclRefExpr 0x55fa58078780 <col:62> 'int' lvalue Var 0x55fa580537d8 'i' 'int'
    `-ReturnStmt 0x55fa580789f0 <line:31:2, col:9>
      `-IntegerLiteral 0x55fa580789d0 <col:9> 'int' 0
