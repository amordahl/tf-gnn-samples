TranslationUnitDecl 0x561b9d685e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561b9d6866d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561b9d6863b0 '__int128'
|-TypedefDecl 0x561b9d686748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561b9d6863d0 'unsigned __int128'
|-TypedefDecl 0x561b9d686a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561b9d686820 'struct __NSConstantString_tag'
|   `-Record 0x561b9d6867a0 '__NSConstantString_tag'
|-TypedefDecl 0x561b9d686af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561b9d686ab0 'char *'
|   `-BuiltinType 0x561b9d685eb0 'char'
|-TypedefDecl 0x561b9d6c5650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561b9d686d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561b9d686bd0 'struct __va_list_tag'
|     `-Record 0x561b9d686b50 '__va_list_tag'
|-FunctionDecl 0x561b9d6c5790 <./split_3/safe001_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561b9d6c56c0 <col:31> col:34 'int'
|-FunctionDecl 0x561b9d6c5958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561b9d6c5a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561b9d6c5bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561b9d6c5b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561b9d6c5df8 <col:40, col:99>
|   |-IfStmt 0x561b9d6c5dc8 <col:42, col:88>
|   | |-UnaryOperator 0x561b9d6c5ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561b9d6c5c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561b9d6c5c70 <col:47> 'int' lvalue ParmVar 0x561b9d6c5b38 'expression' 'int'
|   | `-CompoundStmt 0x561b9d6c5db0 <col:59, col:88>
|   |   `-LabelStmt 0x561b9d6c5d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561b9d6c5d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561b9d6c5d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561b9d6c5cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x561b9d6c5a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561b9d6c5de0 <col:89>
|   `-ReturnStmt 0x561b9d6c5de8 <col:91>
|-FunctionDecl 0x561b9d6c5e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561b9d6c5f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x561b9d6c6280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b9d6c5fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x561b9d6c6038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x561b9d6c60b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561b9d6c6138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561b9d6c6340 <line:10:22>
|-FunctionDecl 0x561b9d6ec390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b9d6c63b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x561b9d6c6430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x561b9d6c64b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561b9d6c6530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561b9d6ec450 <line:13:22>
|-FunctionDecl 0x561b9d6ec700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b9d6ec4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561b9d6ec540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x561b9d6ec5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x561b9d6ec7b8 <line:15:22>
|-TypedefDecl 0x561b9d6ec828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561b9d685f70 'unsigned char'
|-TypedefDecl 0x561b9d6ec898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561b9d685f90 'unsigned short'
|-TypedefDecl 0x561b9d6ec908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561b9d685fb0 'unsigned int'
|-TypedefDecl 0x561b9d6ec978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6ec9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561b9d685ed0 'signed char'
|-TypedefDecl 0x561b9d6eca58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561b9d685f70 'unsigned char'
|-TypedefDecl 0x561b9d6ecac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561b9d685ef0 'short'
|-TypedefDecl 0x561b9d6ecb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561b9d685f90 'unsigned short'
|-TypedefDecl 0x561b9d6ecba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561b9d685f10 'int'
|-TypedefDecl 0x561b9d6ecc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561b9d685fb0 'unsigned int'
|-TypedefDecl 0x561b9d6ecc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6eccf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6ecd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6ecdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6ece48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6eceb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561b9d685fb0 'unsigned int'
|-TypedefDecl 0x561b9d6ecf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561b9d685fb0 'unsigned int'
|-TypedefDecl 0x561b9d6ecf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6ed008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6ed078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561b9d685fb0 'unsigned int'
|-TypedefDecl 0x561b9d6ed0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6ed158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6ed1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6ed238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561b9d685f10 'int'
|-RecordDecl 0x561b9d6ed290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x561b9d6ed408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x561b9d6ed4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561b9d6ed460 'struct __fsid_t' sugar
|   `-RecordType 0x561b9d6ed310 '__fsid_t'
|     `-Record 0x561b9d6ed290 ''
|-TypedefDecl 0x561b9d6ed548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6ed5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6ed628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6ed698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561b9d685fb0 'unsigned int'
|-TypedefDecl 0x561b9d6ed708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6ed778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561b9d685fb0 'unsigned int'
|-TypedefDecl 0x561b9d6ed7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6ed858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561b9d685f10 'int'
|-TypedefDecl 0x561b9d6ed8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561b9d685f10 'int'
|-TypedefDecl 0x561b9d6ed938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561b9d685f10 'int'
|-TypedefDecl 0x561b9d6ed9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x561b9d686630 'void *'
|   `-BuiltinType 0x561b9d685e70 'void'
|-TypedefDecl 0x561b9d6eda18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6eda88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6edaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6edb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6edbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6edc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6edcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6edd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6edd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6ede08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6ede78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6edf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561b9d6eded0 '__off64_t' sugar
|   |-Typedef 0x561b9d6ed1c8 '__off64_t'
|   `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6ee000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561b9d6edfc0 '__quad_t *'
|   `-TypedefType 0x561b9d6edf60 '__quad_t' sugar
|     |-Typedef 0x561b9d6ecd68 '__quad_t'
|     `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6ee070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561b9d686ab0 'char *'
|   `-BuiltinType 0x561b9d685eb0 'char'
|-TypedefDecl 0x561b9d6ee0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6ee150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561b9d685fb0 'unsigned int'
|-FunctionDecl 0x561b9d6ee298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x561b9d6ee1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561b9d6ef5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x561b9d6ef5d8 <line:72:3, col:34>
|     `-CallExpr 0x561b9d6ef598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561b9d6ef580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561b9d6ef510 <col:10> '<builtin fn type>' Function 0x561b9d6ef380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561b9d6ef5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561b9d6ef530 <col:29> 'unsigned int' lvalue ParmVar 0x561b9d6ee1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x561b9d6ef380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561b9d6ef420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561b9d6ef490 <col:10> Implicit
| `-ConstAttr 0x561b9d6ef4e8 <col:10> Implicit
|-FunctionDecl 0x561b9d6ef740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561b9d6ef638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561b9d6efa58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x561b9d6efa48 <line:77:3, col:34>
|     `-CallExpr 0x561b9d6efa08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561b9d6ef9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561b9d6ef978 <col:10> '<builtin fn type>' Function 0x561b9d6ef7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561b9d6efa30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561b9d6ef998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561b9d6ef638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561b9d6ef7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561b9d6ef888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561b9d6ef8f8 <col:10> Implicit
| `-ConstAttr 0x561b9d6ef950 <col:10> Implicit
|-TypedefDecl 0x561b9d6efa88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-TypedefDecl 0x561b9d6efb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561b9d6efae0 '__time_t' sugar
|   |-Typedef 0x561b9d6ed708 '__time_t'
|   `-BuiltinType 0x561b9d685f30 'long'
|-RecordDecl 0x561b9d6efb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x561b9d6efc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561b9d6efcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561b9d6efd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561b9d6efd10 '__pid_t' sugar
|   |-Typedef 0x561b9d6ed238 '__pid_t'
|   `-BuiltinType 0x561b9d685f10 'int'
|-RecordDecl 0x561b9d6efda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x561b9d6efe60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561b9d6efeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x561b9d6eff70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561b9d6effd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-RecordDecl 0x561b9d6f0030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x561b9d6f02c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x561b9d6f13a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561b9d6f0310 'struct cpu_set_t' sugar
|   `-RecordType 0x561b9d6f00b0 'cpu_set_t'
|     `-Record 0x561b9d6f0030 ''
|-FunctionDecl 0x561b9d6f1678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561b9d6f1448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561b9d6f1550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561b9d6f1728 <line:107:19>
|-FunctionDecl 0x561b9d6f1900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561b9d6f1790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561b9d6f19a8 <col:69>
|-FunctionDecl 0x561b9d6f1b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561b9d6f1a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561b9d6f1bc8 <col:64>
|-FunctionDecl 0x561b9d6f1e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561b9d6f1c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b9d6f1d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561b9d6f1f38 <line:113:22>
|-FunctionDecl 0x561b9d6f21b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561b9d6f1fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b9d6f2098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561b9d6f2268 <col:88>
|-FunctionDecl 0x561b9d6f2588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561b9d6f22d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b9d6f23b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561b9d6f2440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561b9d6f2640 <col:62>
|-FunctionDecl 0x561b9d6f27b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561b9d6f26a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561b9d6f2860 <col:63>
|-FunctionDecl 0x561b9d6f2988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561b9d6f2a28 <col:47>
|-FunctionDecl 0x561b9d6f2b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561b9d6f2a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561b9d6f2bd8 <col:69>
|-FunctionDecl 0x561b9d6f2ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561b9d6f2c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561b9d6f2d88 <col:69>
|-FunctionDecl 0x561b9d6f3048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561b9d6f2df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561b9d6f2f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561b9d6f30f8 <col:88>
|-TypedefDecl 0x561b9d6f3188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561b9d6f3150 '__clock_t' sugar
|   |-Typedef 0x561b9d6ed548 '__clock_t'
|   `-BuiltinType 0x561b9d685f30 'long'
|-TypedefDecl 0x561b9d6f3218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x561b9d6f31e0 '__clockid_t' sugar
|   |-Typedef 0x561b9d6ed938 '__clockid_t'
|   `-BuiltinType 0x561b9d685f10 'int'
|-TypedefDecl 0x561b9d6f32a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561b9d6f3270 '__timer_t' sugar
|   |-Typedef 0x561b9d6ed9a8 '__timer_t'
|   `-PointerType 0x561b9d686630 'void *'
|     `-BuiltinType 0x561b9d685e70 'void'
|-RecordDecl 0x561b9d6f3300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x561b9d6f33d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561b9d6f3440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x561b9d6f34a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561b9d6f3510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561b9d6f3578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561b9d6f35e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561b9d6f3648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561b9d6f36b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561b9d6f3718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561b9d6f3780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561b9d6f37e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561b9d6f3838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x561b9d6f3908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561b9d6f3978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561b9d6f3a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561b9d6f3bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561b9d6f3c90 <col:45>
|-FunctionDecl 0x561b9d6f3e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561b9d6f3d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561b9d6f3f18 <col:54>
|-FunctionDecl 0x561b9d6f4118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561b9d6f3f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561b9d6f3ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x561b9d6f41c8 <line:157:22>
| `-ConstAttr 0x561b9d6f4220 <col:63>
|-FunctionDecl 0x561b9d6f5050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561b9d6f4318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561b9d6f50f8 <col:56>
|-FunctionDecl 0x561b9d6f54a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561b9d6f5168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x561b9d6f51e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561b9d6f5260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561b9d6f5358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561b9d6f5560 <col:54>
|-RecordDecl 0x561b9d6f55b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x561b9d6f5668 parent 0x561b9d685e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561b9d6f58c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561b9d6f5968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561b9d6f59d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561b9d6f5a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561b9d6f5b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561b9d6f5c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561b9d6f5bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x561b9d6f5b80 'struct __locale_struct' sugar
|     `-RecordType 0x561b9d6f5640 'struct __locale_struct'
|       `-Record 0x561b9d6f55b8 '__locale_struct'
|-TypedefDecl 0x561b9d6f5cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561b9d6f5cc0 '__locale_t' sugar
|   |-Typedef 0x561b9d6f5c48 '__locale_t'
|   `-PointerType 0x561b9d6f5bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x561b9d6f5b80 'struct __locale_struct' sugar
|       `-RecordType 0x561b9d6f5640 'struct __locale_struct'
|         `-Record 0x561b9d6f55b8 '__locale_struct'
|-FunctionDecl 0x561b9d6f7110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561b9d6f5d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561b9d6f5de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561b9d6f5e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561b9d6f5ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561b9d6f5f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x561b9d6f71d8 <col:40>
|-FunctionDecl 0x561b9d6f73c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561b9d6f72a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561b9d6f7470 <col:66>
|-FunctionDecl 0x561b9d6f7580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561b9d6f74d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561b9d6f7628 <col:69>
|-FunctionDecl 0x561b9d6f7858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561b9d6f7690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561b9d6f7720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561b9d6f7908 <col:52>
|-FunctionDecl 0x561b9d6f7ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561b9d6f7970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561b9d6f7a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561b9d6f7b60 <col:55>
|-FunctionDecl 0x561b9d6f7cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x561b9d6f7be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x561b9d6f7da0 <col:62>
|-FunctionDecl 0x561b9d6f7f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561b9d6f7e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x561b9d6f7fc0 <col:60>
|-FunctionDecl 0x561b9d6f82b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561b9d6f8118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561b9d6f8198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x561b9d6f8368 <col:44>
|-FunctionDecl 0x561b9d6f8578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561b9d6f83d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561b9d6f8450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561b9d6f8628 <col:49>
|-VarDecl 0x561b9d6f8728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561b9d6f87a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561b9d6f8828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561b9d6f88f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561b9d6f8a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561b9d6f8ac0 <col:42>
|-VarDecl 0x561b9d6f8b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561b9d6f8bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561b9d6f8d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561b9d6f8c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561b9d6f8de0 <col:57>
|-FunctionDecl 0x561b9d6f8ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561b9d6f8e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561b9d6f8f98 <col:56>
|-FunctionDecl 0x561b9d6f90d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561b9d6f9018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x561b9d6f9178 <col:59>
|-FunctionDecl 0x561b9d6f9280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561b9d6f91e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561b9d6f9328 <col:48>
| `-ConstAttr 0x561b9d6f9380 <col:89>
|-FunctionDecl 0x561b9d6f95e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561b9d6f9438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561b9d6f94c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561b9d6f9848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561b9d6f96d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b9d6f9768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561b9d6f98f8 <col:88>
|-FunctionDecl 0x561b9d6f9a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561b9d6f9960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b9d6f99f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561b9d6f9b40 <col:88>
|-FunctionDecl 0x561b9d6f9d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561b9d6f9ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b9d6f9c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561b9d6f9e08 <line:208:22>
|-FunctionDecl 0x561b9d6fa178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561b9d6f9e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b9d6f9ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x561b9d6f9f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561b9d6fa010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x561b9d6fa478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x561b9d6fa278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x561b9d6fa350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561b9d6fa528 <col:85>
|-FunctionDecl 0x561b9d6fa918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561b9d6fa590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561b9d6fa6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561b9d6fa7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561b9d6fa9d0 <col:52>
|-FunctionDecl 0x561b9d6fab48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561b9d6faa38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561b9d6fabf0 <col:61>
|-FunctionDecl 0x561b9d6fb0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x561b9d6fac58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561b9d6facd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561b9d6fae08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561b9d6faef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561b9d6fb1b0 <col:62>
|-FunctionDecl 0x561b9d6fb3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561b9d6fb218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561b9d6fb2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x561b9d6fb478 <line:221:22>
|-FunctionDecl 0x561b9d6fb578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561b9d6fb4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561b9d6fb620 <col:65>
|-TypedefDecl 0x561b9d6fb690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561b9d685fd0 'unsigned long'
|-RecordDecl 0x561b9d6fb6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x561b9d6fb830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561b9d6fb898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b9d6fb948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561b9d6fb8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x561b9d6fb770 'union pthread_attr_t'
|     `-Record 0x561b9d6fb6e8 'pthread_attr_t'
|-RecordDecl 0x561b9d6fb9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561b9d6fbb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x561b9d6fbb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x561b9d6fbc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x561b9d6fbbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561b9d6fba20 'struct __pthread_internal_list'
|     `-Record 0x561b9d6fb9a0 '__pthread_internal_list'
|-RecordDecl 0x561b9d6fbcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x561b9d6fbd58 parent 0x561b9d685e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x561b9d6fbe30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561b9d6fbe98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x561b9d6fbf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x561b9d6fbf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x561b9d6fbfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561b9d6fc038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561b9d700110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561b9d7001c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561b9d7002b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561b9d700318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b9d7004a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561b9d700440 'union pthread_mutex_t' sugar
|   `-RecordType 0x561b9d6fbd30 'pthread_mutex_t'
|     `-Record 0x561b9d6fbcb0 ''
|-RecordDecl 0x561b9d700510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x561b9d700650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561b9d7006b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561b9d700770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561b9d700710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561b9d700590 'pthread_mutexattr_t'
|     `-Record 0x561b9d700510 ''
|-RecordDecl 0x561b9d7007e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x561b9d700888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x561b9d700950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561b9d7009b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561b9d700a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561b9d700a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561b9d700af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561b9d700b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561b9d700bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561b9d700c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561b9d700ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_3/safe001_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_3/safe001_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x561b9d700dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561b9d700e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561b9d700f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561b9d700f10 'union pthread_cond_t' sugar
|   `-RecordType 0x561b9d700860 'pthread_cond_t'
|     `-Record 0x561b9d7007e0 ''
|-RecordDecl 0x561b9d700fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x561b9d702130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561b9d702198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561b9d702250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561b9d7021f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x561b9d701060 'pthread_condattr_t'
|     `-Record 0x561b9d700fe0 ''
|-TypedefDecl 0x561b9d7022d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561b9d685fb0 'unsigned int'
|-TypedefDecl 0x561b9d702348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561b9d685f10 'int'
|-RecordDecl 0x561b9d7023a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x561b9d702448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x561b9d702510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561b9d702578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561b9d7025e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561b9d702648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561b9d7026b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561b9d702718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561b9d702780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561b9d7027e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561b9d702850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561b9d7028b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561b9d702920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561b9d7029d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_3/safe001_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_3/safe001_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x561b9d702a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561b9d702ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b9d702c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561b9d702bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561b9d702420 'pthread_rwlock_t'
|     `-Record 0x561b9d7023a0 ''
|-RecordDecl 0x561b9d702ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x561b9d702de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561b9d702e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b9d702f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561b9d702ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561b9d702d20 'pthread_rwlockattr_t'
|     `-Record 0x561b9d702ca0 ''
|-TypedefDecl 0x561b9d702f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561b9d685f14 'volatile int' volatile
|   `-BuiltinType 0x561b9d685f10 'int'
|-RecordDecl 0x561b9d702fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x561b9d704140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561b9d7041a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561b9d704260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561b9d704200 'union pthread_barrier_t' sugar
|   `-RecordType 0x561b9d703060 'pthread_barrier_t'
|     `-Record 0x561b9d702fe0 ''
|-RecordDecl 0x561b9d7042d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x561b9d7043d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561b9d704438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561b9d7044f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561b9d704490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561b9d704350 'pthread_barrierattr_t'
|     `-Record 0x561b9d7042d0 ''
|-TypedefDecl 0x561b9d704608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561b9d7045a0 'long [8]' 8 
|   `-BuiltinType 0x561b9d685f30 'long'
|-EnumDecl 0x561b9d704660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x561b9d704728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561b9d704778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561b9d7047c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x561b9d704898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561b9d7048e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561b9d704938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561b9d704988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561b9d704a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561b9d7049f8 <col:26> 'int'
| |   `-DeclRefExpr 0x561b9d7049d8 <col:26> 'int' EnumConstant 0x561b9d704898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561b9d704a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561b9d704a80 <col:29> 'int'
| |   `-DeclRefExpr 0x561b9d704a60 <col:29> 'int' EnumConstant 0x561b9d7048e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561b9d704b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561b9d704b08 <col:30> 'int'
| |   `-DeclRefExpr 0x561b9d704ae8 <col:30> 'int' EnumConstant 0x561b9d704938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561b9d704ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561b9d704b90 <col:27> 'int'
|     `-DeclRefExpr 0x561b9d704b70 <col:27> 'int' EnumConstant 0x561b9d704a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561b9d704bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x561b9d704cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561b9d704d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561b9d704d38 <col:30> 'int'
| |   `-DeclRefExpr 0x561b9d704d18 <col:30> 'int' EnumConstant 0x561b9d704cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561b9d704da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561b9d704e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561b9d704e10 <col:29> 'int'
|     `-DeclRefExpr 0x561b9d704df0 <col:29> 'int' EnumConstant 0x561b9d704da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561b9d704e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x561b9d704f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561b9d704f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561b9d704fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561b9d705038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x561b9d705150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561b9d7051a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561b9d7051f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561b9d705278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561b9d705260 <col:31> 'int'
|     `-DeclRefExpr 0x561b9d705240 <col:31> 'int' EnumConstant 0x561b9d705150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561b9d7052c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x561b9d705398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561b9d7053e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561b9d705438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x561b9d705508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561b9d705558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561b9d7055a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x561b9d705678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561b9d7056c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561b9d705718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561b9d705958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561b9d7059c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561b9d705a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561b9d705b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561b9d705b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x561b9d705c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561b9d705cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561b9d705d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x561b9d705dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561b9d705e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x561b9d706488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561b9d705f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x561b9d706030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b9d706270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561b9d7062f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x561b9d706548 <col:47>
| |-NonNullAttr 0x561b9d7065a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x561b9d7065d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x561b9d706700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561b9d706630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561b9d706958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561b9d7067b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561b9d706838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561b9d706b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561b9d706a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561b9d706bd0 <col:60>
|-FunctionDecl 0x561b9d706d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561b9d706dc0 <col:54>
| `-ConstAttr 0x561b9d706e18 <col:95>
|-FunctionDecl 0x561b9d706fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x561b9d706e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b9d706ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561b9d707098 <line:394:19>
| `-ConstAttr 0x561b9d7070f0 <col:60>
|-FunctionDecl 0x561b9d708b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561b9d7089d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561b9d708bb0 <col:71>
| `-NonNullAttr 0x561b9d708c08 <col:112, col:126> 1
|-FunctionDecl 0x561b9d708d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561b9d708c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561b9d708db8 <line:397:22>
| `-NonNullAttr 0x561b9d708e10 <col:63, col:77> 1
|-FunctionDecl 0x561b9d709038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x561b9d708e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561b9d708ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561b9d7090e8 <line:400:22>
| `-NonNullAttr 0x561b9d709140 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d709348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b9d709188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b9d709208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561b9d7093f8 <line:403:22>
| `-NonNullAttr 0x561b9d709450 <col:63, col:77> 1
|-FunctionDecl 0x561b9d7096a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x561b9d709498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561b9d709540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561b9d709758 <line:406:22>
| `-NonNullAttr 0x561b9d7097b0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d70a9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561b9d7097f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b9d709870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561b9d70aa98 <line:409:22>
| `-NonNullAttr 0x561b9d70aaf0 <col:63, col:77> 1
|-FunctionDecl 0x561b9d70ad28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561b9d70ab38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b9d70abc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561b9d70add8 <line:412:22>
| `-NonNullAttr 0x561b9d70ae30 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d70b068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561b9d70ae78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b9d70af08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561b9d70b118 <col:37>
| `-NonNullAttr 0x561b9d70b170 <col:78, col:95> 1 2
|-FunctionDecl 0x561b9d70b358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d70b1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b9d70b238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561b9d70b408 <line:418:22>
| `-NonNullAttr 0x561b9d70b460 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d70b5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b9d70b4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b9d70b528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561b9d70b698 <line:420:22>
| `-NonNullAttr 0x561b9d70b6f0 <col:63, col:77> 1
|-FunctionDecl 0x561b9d70b898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d70b738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b9d70b7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561b9d70b948 <line:423:22>
| `-NonNullAttr 0x561b9d70b9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d70bb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b9d70ba08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b9d70ba88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x561b9d70bbf8 <line:426:22>
| `-NonNullAttr 0x561b9d70bc50 <col:63, col:77> 1
|-FunctionDecl 0x561b9d70bdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d70bc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b9d70bd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x561b9d70bea8 <line:429:22>
| `-NonNullAttr 0x561b9d70bf00 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d70c088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561b9d70bf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b9d70bfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561b9d70c138 <line:431:22>
| `-NonNullAttr 0x561b9d70c190 <col:63, col:77> 1
|-FunctionDecl 0x561b9d70c3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x561b9d70c1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b9d70c258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561b9d70c468 <line:434:22>
| |-NonNullAttr 0x561b9d70c4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x561b9d70c4f8 <col:100> "" ""
|-FunctionDecl 0x561b9d70c708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561b9d70c548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b9d70c5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x561b9d70c7b8 <line:437:22>
| |-NonNullAttr 0x561b9d70c810 <col:63, col:77> 1
| `-DeprecatedAttr 0x561b9d70c848 <col:97> "" ""
|-FunctionDecl 0x561b9d70ca48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561b9d70c898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b9d70c910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561b9d70caf8 <line:440:22>
| `-NonNullAttr 0x561b9d70cb50 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d70ccd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561b9d70cb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b9d70cc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561b9d70cd80 <line:443:22>
| `-NonNullAttr 0x561b9d70cdd8 <col:63, col:77> 1
|-FunctionDecl 0x561b9d70d0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561b9d70ce28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561b9d70cea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561b9d70cf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561b9d70d180 <line:447:22>
| `-NonNullAttr 0x561b9d70d1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561b9d70d488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561b9d70d230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561b9d70d2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561b9d70d328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561b9d70d540 <col:43>
| `-NonNullAttr 0x561b9d70d598 <col:84, col:98> 1
|-FunctionDecl 0x561b9d70d858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561b9d70d5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b9d70d668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561b9d70d6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561b9d70d910 <line:452:22>
| `-NonNullAttr 0x561b9d70d968 <col:63, col:77> 3
|-FunctionDecl 0x561b9d70dc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561b9d70d9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b9d70da60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561b9d70daf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561b9d70dd30 <line:456:22>
| `-NonNullAttr 0x561b9d70dd88 <col:63, col:80> 2 3
|-FunctionDecl 0x561b9d70df78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561b9d70ddd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b9d70de58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561b9d70e028 <line:458:22>
|-FunctionDecl 0x561b9d70e3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561b9d70e0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561b9d70e290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561b9d70e4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x561b9d70e650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561b9d70e530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561b9d70e5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561b9d70e838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561b9d70e718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561b9d70e798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561b9d70e9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561b9d70e8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561b9d70eb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561b9d70ebd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x561b9d70ec78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x561b9d70ed68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561b9d70edd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561b9d70efa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_3/safe001_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x561b9d70f098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561b9d70f150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561b9d70f0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561b9d70ec50 '__pthread_unwind_buf_t'
| |   `-Record 0x561b9d70ebd0 ''
| `-AlignedAttr 0x561b9d70f1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561b9d70f220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561b9d70f380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561b9d70f3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561b9d70f450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561b9d70f4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561b9d70f6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561b9d70f5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561b9d70f808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561b9d70f778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561b9d70fa00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561b9d70f8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561b9d70faa8 <line:487:22>
|-RecordDecl 0x561b9d70fb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561b9d70fe18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561b9d70fc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561b9d70fcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561b9d70fec8 <col:86>
| `-ReturnsTwiceAttr 0x561b9d70ff20 <col:12> Implicit
|-FunctionDecl 0x561b9d710248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561b9d70fff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561b9d710100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561b9d7102f8 <line:493:22>
| `-NonNullAttr 0x561b9d710350 <col:63, col:77> 1
|-FunctionDecl 0x561b9d7104c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b9d710398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b9d710570 <line:495:22>
| `-NonNullAttr 0x561b9d7105c8 <col:63, col:77> 1
|-FunctionDecl 0x561b9d7106d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b9d710618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b9d710778 <line:497:22>
| `-NonNullAttr 0x561b9d7107d0 <col:52, col:66> 1
|-FunctionDecl 0x561b9d7108d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b9d710818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b9d710978 <line:499:22>
| `-NonNullAttr 0x561b9d7109d0 <col:52, col:66> 1
|-FunctionDecl 0x561b9d711c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b9d711a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b9d711ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561b9d711cd8 <col:36>
| `-NonNullAttr 0x561b9d711d30 <col:66, col:83> 1 2
|-FunctionDecl 0x561b9d711e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b9d711d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b9d711ed8 <line:504:22>
| `-NonNullAttr 0x561b9d711f30 <col:52, col:66> 1
|-FunctionDecl 0x561b9d7121c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d711fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b9d712060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561b9d712278 <line:508:22>
| `-NonNullAttr 0x561b9d7122d0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d712598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561b9d712318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b9d712398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561b9d712418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561b9d712650 <line:512:22>
| `-NonNullAttr 0x561b9d7126a8 <col:63, col:80> 1 3
|-FunctionDecl 0x561b9d7127b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561b9d7126f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561b9d712858 <line:514:22>
| `-NonNullAttr 0x561b9d7128b0 <col:63, col:77> 1
|-FunctionDecl 0x561b9d712ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561b9d712960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561b9d712b80 <line:516:22>
| `-NonNullAttr 0x561b9d712bd8 <col:63, col:77> 1
|-FunctionDecl 0x561b9d712ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561b9d712c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561b9d712d88 <line:518:22>
| `-NonNullAttr 0x561b9d712de0 <col:63, col:77> 1
|-FunctionDecl 0x561b9d713008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d712e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b9d712ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b9d7130b8 <line:522:22>
| `-NonNullAttr 0x561b9d713110 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d713318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b9d713158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b9d7131d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561b9d7133c8 <line:525:22>
| `-NonNullAttr 0x561b9d713420 <col:63, col:77> 1
|-FunctionDecl 0x561b9d7135c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d713468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b9d7134e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561b9d713678 <line:528:22>
| `-NonNullAttr 0x561b9d7136d0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d713858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b9d713718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b9d713798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561b9d713908 <line:530:22>
| `-NonNullAttr 0x561b9d713960 <col:63, col:77> 1
|-FunctionDecl 0x561b9d713b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d7139a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b9d713a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561b9d713bd0 <line:534:22>
| `-NonNullAttr 0x561b9d713c28 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d713db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b9d713c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b9d713cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561b9d713e68 <line:537:22>
| `-NonNullAttr 0x561b9d713ec0 <col:63, col:77> 1
|-FunctionDecl 0x561b9d714068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d713f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561b9d713f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561b9d714118 <line:541:22>
| `-NonNullAttr 0x561b9d714170 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d7142f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b9d7141b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b9d714238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561b9d7143a8 <line:544:22>
| `-NonNullAttr 0x561b9d714400 <col:63, col:77> 1
|-FunctionDecl 0x561b9d7145e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561b9d714448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b9d7144c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561b9d714698 <line:547:22>
| `-NonNullAttr 0x561b9d7146f0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d714878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561b9d714738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561b9d7147b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561b9d714928 <line:550:22>
| `-NonNullAttr 0x561b9d714980 <col:63, col:77> 1
|-FunctionDecl 0x561b9d715cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561b9d715aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561b9d715bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561b9d715da8 <col:29>
| `-NonNullAttr 0x561b9d715e00 <col:70, col:84> 1
|-FunctionDecl 0x561b9d715f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b9d715e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b9d716020 <line:555:22>
| `-NonNullAttr 0x561b9d716078 <col:63, col:77> 1
|-FunctionDecl 0x561b9d716180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b9d7160c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b9d716228 <line:557:22>
| `-NonNullAttr 0x561b9d716280 <col:52, col:66> 1
|-FunctionDecl 0x561b9d716380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b9d7162c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b9d716428 <line:559:19>
| `-NonNullAttr 0x561b9d716480 <col:49, col:63> 1
|-FunctionDecl 0x561b9d7166b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b9d7164c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561b9d716558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561b9d716768 <col:39>
| `-NonNullAttr 0x561b9d7167c0 <col:69, col:86> 1 2
|-FunctionDecl 0x561b9d7168c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b9d716808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b9d716968 <line:564:22>
| `-NonNullAttr 0x561b9d7169c0 <col:52, col:66> 1
|-FunctionDecl 0x561b9d716b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b9d716a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b9d716bd0 <line:566:22>
| `-NonNullAttr 0x561b9d716c28 <col:52, col:66> 1
|-FunctionDecl 0x561b9d716de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b9d716c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561b9d716d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561b9d716e98 <col:39>
| `-NonNullAttr 0x561b9d716ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x561b9d716ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561b9d716f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561b9d717098 <line:571:22>
| `-NonNullAttr 0x561b9d7170f0 <col:52, col:66> 1
|-FunctionDecl 0x561b9d7172d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561b9d7171a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561b9d717380 <line:573:22>
| `-NonNullAttr 0x561b9d7173d8 <col:63, col:77> 1
|-FunctionDecl 0x561b9d7174e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561b9d717428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561b9d717588 <line:575:22>
| `-NonNullAttr 0x561b9d7175e0 <col:63, col:77> 1
|-FunctionDecl 0x561b9d717808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d717628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561b9d7176a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b9d7178b8 <line:579:22>
| `-NonNullAttr 0x561b9d717910 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d717b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561b9d717958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561b9d7179d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561b9d717be8 <line:582:22>
| `-NonNullAttr 0x561b9d717c40 <col:63, col:77> 1
|-FunctionDecl 0x561b9d717de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d717c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561b9d717d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561b9d717e98 <line:586:22>
| `-NonNullAttr 0x561b9d717ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d718078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561b9d717f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561b9d717fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561b9d718128 <col:36>
| `-NonNullAttr 0x561b9d718180 <col:77, col:91> 1
|-FunctionDecl 0x561b9d7184b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x561b9d718260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561b9d718370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x561b9d718568 <line:591:22>
| `-NonNullAttr 0x561b9d7185c0 <col:63, col:77> 1
|-FunctionDecl 0x561b9d718738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561b9d718608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561b9d7187e0 <line:593:22>
| `-NonNullAttr 0x561b9d718838 <col:63, col:77> 1
|-FunctionDecl 0x561b9d718940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561b9d718888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561b9d7189e8 <line:595:22>
| `-NonNullAttr 0x561b9d718a40 <col:52, col:66> 1
|-FunctionDecl 0x561b9d718b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561b9d718aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561b9d718c00 <line:597:22>
| `-NonNullAttr 0x561b9d718c58 <col:52, col:66> 1
|-FunctionDecl 0x561b9d718e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561b9d718ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561b9d718d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x561b9d718f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x561b9d719268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561b9d718fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561b9d719030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561b9d7190c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561b9d719320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x561b9d719538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561b9d719400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561b9d7195e0 <line:606:22>
| `-NonNullAttr 0x561b9d719638 <col:63, col:77> 1
|-FunctionDecl 0x561b9d719740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561b9d719688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561b9d7197e8 <line:608:22>
| `-NonNullAttr 0x561b9d719840 <col:63, col:77> 1
|-FunctionDecl 0x561b9d719aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d719888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561b9d719908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b9d719b50 <line:612:22>
| `-NonNullAttr 0x561b9d719ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d719db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561b9d719bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561b9d719c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x561b9d719e68 <col:37>
| `-NonNullAttr 0x561b9d719ec0 <col:78, col:92> 1
|-FunctionDecl 0x561b9d71a0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561b9d719f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561b9d719fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x561b9d71a188 <line:618:22>
| `-NonNullAttr 0x561b9d71a1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d71a3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561b9d71a228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561b9d71a2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x561b9d71a458 <line:621:22>
| `-NonNullAttr 0x561b9d71a4b0 <col:63, col:77> 1
|-FunctionDecl 0x561b9d71a758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561b9d71a590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561b9d71a610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561b9d71a808 <line:623:22>
| `-NonNullAttr 0x561b9d71a860 <col:63, col:77> 1
|-FunctionDecl 0x561b9d71a9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b9d71a8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b9d71aab0 <line:625:22>
| `-NonNullAttr 0x561b9d71ab08 <col:63, col:77> 1
|-FunctionDecl 0x561b9d71ac10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b9d71ab58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b9d71acb8 <line:627:22>
| `-NonNullAttr 0x561b9d71ad10 <col:52, col:66> 1
|-FunctionDecl 0x561b9d71ae10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b9d71ad58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b9d71aeb8 <line:629:22>
| `-NonNullAttr 0x561b9d71af10 <col:52, col:66> 1
|-FunctionDecl 0x561b9d71b010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561b9d71af58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561b9d71b0b8 <line:631:22>
| `-NonNullAttr 0x561b9d71b110 <col:52, col:66> 1
|-FunctionDecl 0x561b9d71b4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561b9d71b1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561b9d71b300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561b9d71b380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561b9d71b5a0 <line:635:22>
| `-NonNullAttr 0x561b9d71b5f8 <col:63, col:77> 1
|-FunctionDecl 0x561b9d71b778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561b9d71b648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561b9d71b820 <line:637:22>
| `-NonNullAttr 0x561b9d71b878 <col:63, col:77> 1
|-FunctionDecl 0x561b9d71b980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561b9d71b8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561b9d71ba28 <line:639:22>
| `-NonNullAttr 0x561b9d71ba80 <col:52, col:66> 1
|-FunctionDecl 0x561b9d71cc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561b9d71cb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561b9d71cd30 <line:641:22>
| `-NonNullAttr 0x561b9d71cd88 <col:63, col:77> 1
|-FunctionDecl 0x561b9d71ce90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561b9d71cdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561b9d71cf38 <line:643:22>
| `-NonNullAttr 0x561b9d71cf90 <col:63, col:77> 1
|-FunctionDecl 0x561b9d71d1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561b9d71cfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561b9d71d058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x561b9d71d268 <line:647:22>
| `-NonNullAttr 0x561b9d71d2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561b9d71d4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x561b9d71d308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x561b9d71d388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x561b9d71d578 <line:650:22>
| `-NonNullAttr 0x561b9d71d5d0 <col:63, col:77> 1
|-FunctionDecl 0x561b9d71d918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x561b9d71d6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x561b9d71d7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x561b9d71d9c8 <line:653:22>
| `-NonNullAttr 0x561b9d71da20 <col:63, col:77> 1
|-FunctionDecl 0x561b9d71db88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x561b9d71da68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561b9d71dc30 <col:69>
|-FunctionDecl 0x561b9d71dda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x561b9d71dc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561b9d71de50 <col:72>
|-FunctionDecl 0x561b9d71e088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561b9d71deb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x561b9d71df68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561b9d71e138 <col:44>
|-FunctionDecl 0x561b9d71e358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561b9d71e1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561b9d71e218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561b9d71e408 <line:660:22>
| `-NonNullAttr 0x561b9d71e460 <col:63, col:77> 2
|-FunctionDecl 0x561b9d71e8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x561b9d71e540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561b9d71e650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561b9d71e760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561b9d71e960 <col:47>
|-FunctionDecl 0x561b9d71eaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561b9d71e9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561b9d71ec48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561b9d71ebb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561b9d71eda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x561b9d71ed08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561b9d71ee68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x561b9d71ef28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x561b9d71efe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561b9d71f0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x561b9d71f120 prev 0x561b9d71f0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561b9d71f188 <col:24> 'int' 0
|-VarDecl 0x561b9d71f1c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x561b9d71f240 prev 0x561b9d71f1c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x561b9d71f2a8 <col:27> 'int' 0
|-VarDecl 0x561b9d71f2e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x561b9d71f360 prev 0x561b9d71f2e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x561b9d71f3c8 <col:27> 'int' 0
|-VarDecl 0x561b9d71f3f8 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561b9d71f470 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561b9d71f4f0 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x561b9d71f570 prev 0x561b9d71f4f0 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x561b9d71f5d8 <col:9> 'int' 0
|-VarDecl 0x561b9d71f608 <line:681:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x561b9d71f688 <line:682:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x561b9d71f700 <line:683:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x561b9d71f778 <line:684:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x561b9d71f7f0 <line:685:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x561b9d71f868 <line:686:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x561b9d71f8e0 <line:687:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x561b9d71f958 <line:688:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x561b9d71f9d0 <line:689:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x561b9d71fa48 <line:690:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x561b9d71fb00 <line:691:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x561b9d71fb80 <line:692:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x561b9d71fc00 <line:693:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x561b9d71fc78 <line:694:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x561b9d71fcf8 <line:695:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x561b9d71fd70 <line:696:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x561b9d71fdf0 <line:697:1, col:5> col:5 used y 'int'
|-VarDecl 0x561b9d71fe70 prev 0x561b9d71fdf0 <line:698:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561b9d71fed8 <col:9> 'int' 0
|-VarDecl 0x561b9d71ff08 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561b9d71ff80 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561b9d720098 prev 0x561b9d71eaf0 <line:701:1, line:720:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561b9d720000 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561b9d721358 <line:702:1, line:720:1>
|   |-CallExpr 0x561b9d7201a8 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d720190 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d720140 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d720220 <line:704:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561b9d7201c8 <col:3> 'int' lvalue Var 0x561b9d71f240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x561b9d720208 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b9d7201e8 <col:25> 'int' lvalue Var 0x561b9d71fe70 'y' 'int'
|   |-CallExpr 0x561b9d720278 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d720260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d720240 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b9d7202d0 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d7202b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d720298 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d720330 <line:707:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561b9d7202f0 <col:3> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
|   | `-IntegerLiteral 0x561b9d720310 <col:7> 'int' 1
|   |-CallExpr 0x561b9d720388 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d720370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d720350 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b9d7203e0 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d7203c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d7203a8 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d7206c8 <line:710:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561b9d720400 <col:3> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
|   | `-ConditionalOperator 0x561b9d720698 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561b9d7204c0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561b9d720478 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561b9d720460 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561b9d720420 <col:7> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561b9d7204a8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561b9d720490 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561b9d720440 <col:25> '_Bool' lvalue Var 0x561b9d71f778 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x561b9d720680 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b9d7204e0 <col:42> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x561b9d720660 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561b9d720630 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561b9d7205a0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561b9d720558 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561b9d720540 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561b9d720500 <col:55> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561b9d720588 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561b9d720570 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561b9d720520 <col:73> '_Bool' lvalue Var 0x561b9d71f958 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561b9d720600 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b9d7205c0 <col:90> 'int' lvalue Var 0x561b9d71fcf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561b9d720618 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d7205e0 <col:102> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
|   |-BinaryOperator 0x561b9d7208d0 <line:711:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d7206e8 <col:3> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d7208b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d720888 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b9d7207a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b9d720760 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b9d720748 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b9d720708 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b9d720790 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b9d720778 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b9d720728 <col:38> '_Bool' lvalue Var 0x561b9d71f778 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d720840 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d7207f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d7207c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d720870 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d720858 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d720820 <col:66> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b9d720be8 <line:712:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d7208f0 <col:3> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d720bd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d720ba0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b9d720a90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b9d7209b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b9d720968 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b9d720950 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b9d720910 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b9d720998 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b9d720980 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b9d720930 <col:38> '_Bool' lvalue Var 0x561b9d71f778 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561b9d720a70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b9d720a28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b9d720a10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b9d7209d0 <col:56> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b9d720a58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b9d720a40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b9d7209f0 <col:74> '_Bool' lvalue Var 0x561b9d71f958 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d720b58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d720b10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d720ab0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d720b88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d720b70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d720b38 <col:102> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561b9d720df0 <line:713:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d720c08 <col:3> '_Bool' lvalue Var 0x561b9d71f778 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d720dd8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d720da8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b9d720cc8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b9d720c80 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b9d720c68 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b9d720c28 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b9d720cb0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b9d720c98 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b9d720c48 <col:38> '_Bool' lvalue Var 0x561b9d71f778 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d720d60 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d720d18 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d720ce8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d720d90 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d720d78 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d720d40 <col:66> '_Bool' lvalue Var 0x561b9d71f778 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561b9d7210d8 <line:714:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d720e10 <col:3> '_Bool' lvalue Var 0x561b9d71f958 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d7210c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d721090 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b9d720fb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b9d720ed0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b9d720e88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b9d720e70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b9d720e30 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b9d720eb8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b9d720ea0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b9d720e50 <col:38> '_Bool' lvalue Var 0x561b9d71f778 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561b9d720f90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b9d720f48 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b9d720f30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b9d720ef0 <col:56> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b9d720f78 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b9d720f60 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b9d720f10 <col:74> '_Bool' lvalue Var 0x561b9d71f958 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d721048 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d721000 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d720fd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d721078 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d721060 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d721028 <col:102> '_Bool' lvalue Var 0x561b9d71f958 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x561b9d721130 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d721118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d7210f8 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b9d721188 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d721170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d721150 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d721240 <line:717:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561b9d7211a8 <col:3> 'int' lvalue Var 0x561b9d71f120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561b9d721220 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561b9d721208 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b9d7211c8 <col:22> 'int' lvalue Var 0x561b9d71f120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561b9d7211e8 <col:41> 'int' 1
|   |-CallExpr 0x561b9d721298 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d721280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d721260 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561b9d721348 <line:719:3, col:36>
|     `-CallExpr 0x561b9d721328 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561b9d721310 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561b9d7212b8 <col:10> 'void *(void)' Function 0x561b9d6c5958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561b9d7214a0 prev 0x561b9d71ec48 <line:721:1, line:749:1> line:721:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561b9d721408 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561b9d722c68 <line:722:1, line:749:1>
|   |-CallExpr 0x561b9d721580 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d721568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d721548 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d7215f8 <line:724:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561b9d7215a0 <col:3> 'int' lvalue Var 0x561b9d71fcf8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x561b9d7215e0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b9d7215c0 <col:15> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
|   |-BinaryOperator 0x561b9d721658 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561b9d721618 <col:3> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x561b9d721638 <col:15> 'int' 2
|   |-BinaryOperator 0x561b9d7216d0 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d721678 <col:3> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d7216b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b9d721698 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b9d721768 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d7216f0 <col:3> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x561b9d721740 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561b9d721710 <col:27> 'int' 1
|   |-CallExpr 0x561b9d7218e8 <line:728:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x561b9d7218d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x561b9d721788 <col:3> 'void (int)' Function 0x561b9d6c5bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x561b9d721888 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x561b9d721868 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x561b9d721848 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x561b9d721800 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x561b9d7217e8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x561b9d7217a8 <col:23> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x561b9d721830 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x561b9d721818 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x561b9d7217c8 <col:41> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b9d721968 <line:729:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d721910 <col:3> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d721950 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b9d721930 <col:20> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x561b9d7219e0 <line:730:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d721988 <col:3> '_Bool' lvalue Var 0x561b9d71f958 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d7219c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b9d7219a8 <col:20> '_Bool' lvalue Var 0x561b9d71f778 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561b9d721a58 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d721a00 <col:3> '_Bool' lvalue Var 0x561b9d71f9d0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d721a40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b9d721a20 <col:20> '_Bool' lvalue Var 0x561b9d71f7f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561b9d721ad0 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d721a78 <col:3> '_Bool' lvalue Var 0x561b9d71fa48 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d721ab8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b9d721a98 <col:20> '_Bool' lvalue Var 0x561b9d71f868 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561b9d721b78 <line:733:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d721af0 <col:3> '_Bool' lvalue Var 0x561b9d71f7f0 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x561b9d721b50 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561b9d721b20 <col:27> 'int' 1
|   |-CallExpr 0x561b9d721bd0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d721bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d721b98 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b9d721c28 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d721c10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d721bf0 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d721c88 <line:736:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561b9d721c48 <col:3> 'int' lvalue Var 0x561b9d71fe70 'y' 'int'
|   | `-IntegerLiteral 0x561b9d721c68 <col:7> 'int' 1
|   |-CallExpr 0x561b9d721ce0 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d721cc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d721ca8 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b9d721d38 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d721d20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d721d00 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d722020 <line:739:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561b9d721d58 <col:3> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
|   | `-ConditionalOperator 0x561b9d721ff0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561b9d721e18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561b9d721dd0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561b9d721db8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561b9d721d78 <col:7> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561b9d721e00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561b9d721de8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561b9d721d98 <col:25> '_Bool' lvalue Var 0x561b9d71f7f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561b9d721fd8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b9d721e38 <col:42> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x561b9d721fb8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561b9d721f88 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561b9d721ef8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561b9d721eb0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561b9d721e98 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561b9d721e58 <col:55> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561b9d721ee0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561b9d721ec8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561b9d721e78 <col:73> '_Bool' lvalue Var 0x561b9d71f9d0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561b9d721f58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b9d721f18 <col:90> 'int' lvalue Var 0x561b9d71fcf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561b9d721f70 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d721f38 <col:102> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
|   |-BinaryOperator 0x561b9d722228 <line:740:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d722040 <col:3> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d722210 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d7221e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b9d722100 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b9d7220b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b9d7220a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b9d722060 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b9d7220e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b9d7220d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b9d722080 <col:38> '_Bool' lvalue Var 0x561b9d71f7f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d722198 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d722150 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d722120 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d7221c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d7221b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d722178 <col:66> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b9d722510 <line:741:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d722248 <col:3> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d7224f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d7224c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b9d7223e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b9d722308 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b9d7222c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b9d7222a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b9d722268 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b9d7222f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b9d7222d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b9d722288 <col:38> '_Bool' lvalue Var 0x561b9d71f7f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561b9d7223c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b9d722380 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b9d722368 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b9d722328 <col:56> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b9d7223b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b9d722398 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b9d722348 <col:74> '_Bool' lvalue Var 0x561b9d71f9d0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d722480 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d722438 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d722408 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d7224b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d722498 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d722460 <col:102> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561b9d722718 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d722530 <col:3> '_Bool' lvalue Var 0x561b9d71f7f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d722700 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d7226d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b9d7225f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b9d7225a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b9d722590 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b9d722550 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b9d7225d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b9d7225c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b9d722570 <col:38> '_Bool' lvalue Var 0x561b9d71f7f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d722688 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d722640 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d722610 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d7226b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d7226a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d722668 <col:66> '_Bool' lvalue Var 0x561b9d71f7f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561b9d722a00 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d722738 <col:3> '_Bool' lvalue Var 0x561b9d71f9d0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d7229e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d7229b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b9d7228d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b9d7227f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b9d7227b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b9d722798 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b9d722758 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b9d7227e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b9d7227c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b9d722778 <col:38> '_Bool' lvalue Var 0x561b9d71f7f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x561b9d7228b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b9d722870 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b9d722858 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b9d722818 <col:56> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b9d7228a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b9d722888 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b9d722838 <col:74> '_Bool' lvalue Var 0x561b9d71f9d0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d722970 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d722928 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d7228f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d7229a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d722988 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d722950 <col:102> '_Bool' lvalue Var 0x561b9d71f9d0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x561b9d722a58 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d722a40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d722a20 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b9d722ab0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d722a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d722a78 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d722b88 <line:746:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561b9d722ad0 <col:3> 'int' lvalue Var 0x561b9d71f120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561b9d722b68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561b9d722b50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b9d722af0 <col:22> 'int' lvalue Var 0x561b9d71f120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561b9d722b30 <col:41> 'int' 1
|   |-CallExpr 0x561b9d722be0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d722bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d722ba8 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561b9d722c58 <line:748:3, col:36>
|     `-CallExpr 0x561b9d722c38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561b9d722c20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561b9d722c00 <col:10> 'void *(void)' Function 0x561b9d6c5958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561b9d722df8 prev 0x561b9d71eda0 <line:750:1, line:769:1> line:750:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x561b9d722d60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561b9d724030 <line:751:1, line:769:1>
|   |-CallExpr 0x561b9d722ed8 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d722ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d722ea0 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d722f50 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561b9d722ef8 <col:3> 'int' lvalue Var 0x561b9d71f360 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x561b9d722f38 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561b9d722f18 <col:25> 'int' lvalue Var 0x561b9d71fe70 'y' 'int'
|   |-CallExpr 0x561b9d722fa8 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d722f90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d722f70 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b9d723000 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d722fe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d722fc8 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d723060 <line:756:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561b9d723020 <col:3> 'int' lvalue Var 0x561b9d71fe70 'y' 'int'
|   | `-IntegerLiteral 0x561b9d723040 <col:7> 'int' 2
|   |-CallExpr 0x561b9d7230b8 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d7230a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d723080 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b9d723110 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d7230f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d7230d8 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d7233f8 <line:759:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561b9d723130 <col:3> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
|   | `-ConditionalOperator 0x561b9d7233c8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561b9d7231f0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561b9d7231a8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561b9d723190 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561b9d723150 <col:7> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561b9d7231d8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561b9d7231c0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561b9d723170 <col:25> '_Bool' lvalue Var 0x561b9d71f868 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x561b9d7233b0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b9d723210 <col:42> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x561b9d723390 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561b9d723360 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561b9d7232d0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561b9d723288 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561b9d723270 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561b9d723230 <col:55> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561b9d7232b8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561b9d7232a0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561b9d723250 <col:73> '_Bool' lvalue Var 0x561b9d71fa48 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x561b9d723330 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561b9d7232f0 <col:90> 'int' lvalue Var 0x561b9d71fcf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561b9d723348 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d723310 <col:102> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
|   |-BinaryOperator 0x561b9d723600 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d723418 <col:3> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d7235e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d7235b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b9d7234d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b9d723490 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b9d723478 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b9d723438 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b9d7234c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b9d7234a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b9d723458 <col:38> '_Bool' lvalue Var 0x561b9d71f868 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d723570 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d723528 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d7234f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d7235a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d723588 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d723550 <col:66> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561b9d7238e8 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d723620 <col:3> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d7238d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d7238a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b9d7237c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b9d7236e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b9d723698 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b9d723680 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b9d723640 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b9d7236c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b9d7236b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b9d723660 <col:38> '_Bool' lvalue Var 0x561b9d71f868 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561b9d7237a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b9d723758 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b9d723740 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b9d723700 <col:56> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b9d723788 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b9d723770 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b9d723720 <col:74> '_Bool' lvalue Var 0x561b9d71fa48 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d723858 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d723810 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d7237e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d723888 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d723870 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d723838 <col:102> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561b9d723af0 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d723908 <col:3> '_Bool' lvalue Var 0x561b9d71f868 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d723ad8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d723aa8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561b9d7239c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561b9d723980 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561b9d723968 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561b9d723928 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561b9d7239b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561b9d723998 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561b9d723948 <col:38> '_Bool' lvalue Var 0x561b9d71f868 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d723a60 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d723a18 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d7239e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d723a90 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d723a78 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d723a40 <col:66> '_Bool' lvalue Var 0x561b9d71f868 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561b9d723de8 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561b9d723b10 <col:3> '_Bool' lvalue Var 0x561b9d71fa48 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561b9d723dd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561b9d723da0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561b9d723cc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561b9d723be0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561b9d723b98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561b9d723b80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561b9d723b40 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561b9d723bc8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561b9d723bb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561b9d723b60 <col:38> '_Bool' lvalue Var 0x561b9d71f868 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561b9d723ca0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561b9d723c58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561b9d723c40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561b9d723c00 <col:56> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561b9d723c88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561b9d723c70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561b9d723c20 <col:74> '_Bool' lvalue Var 0x561b9d71fa48 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561b9d723d58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561b9d723d10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561b9d723ce0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561b9d723d88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561b9d723d70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561b9d723d38 <col:102> '_Bool' lvalue Var 0x561b9d71fa48 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x561b9d723e40 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d723e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d723e08 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561b9d723e98 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561b9d723e80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d723e60 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561b9d723f50 <line:766:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561b9d723eb8 <col:3> 'int' lvalue Var 0x561b9d71f120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561b9d723f30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561b9d723f18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561b9d723ed8 <col:22> 'int' lvalue Var 0x561b9d71f120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561b9d723ef8 <col:41> 'int' 1
|   |-CallExpr 0x561b9d723fa8 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561b9d723f90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561b9d723f70 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561b9d724020 <line:768:3, col:36>
|     `-CallExpr 0x561b9d724000 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561b9d723fe8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561b9d723fc8 <col:10> 'void *(void)' Function 0x561b9d6c5958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561b9d7240e8 prev 0x561b9d71ee68 <line:770:1, line:772:1> line:770:6 fence 'void ()'
| `-CompoundStmt 0x561b9d724188 <line:771:1, line:772:1>
|-FunctionDecl 0x561b9d7241b8 prev 0x561b9d71ef28 <line:773:1, line:775:1> line:773:6 isync 'void ()'
| `-CompoundStmt 0x561b9d724258 <line:774:1, line:775:1>
|-FunctionDecl 0x561b9d724288 prev 0x561b9d71efe8 <line:776:1, line:778:1> line:776:6 lwfence 'void ()'
| `-CompoundStmt 0x561b9d724328 <line:777:1, line:778:1>
`-FunctionDecl 0x561b9d724398 <line:779:1, line:816:1> line:779:5 main 'int ()'
  `-CompoundStmt 0x561b9d7289f0 <line:780:1, line:816:1>
    |-DeclStmt 0x561b9d7244b0 <line:781:3, col:18>
    | `-VarDecl 0x561b9d724448 <col:3, col:13> col:13 used t1806 'pthread_t':'unsigned long'
    |-CallExpr 0x561b9d7246b8 <line:782:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561b9d7246a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b9d7244c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561b9d706488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561b9d724508 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561b9d7244e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561b9d724448 't1806' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561b9d7246f8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561b9d724580 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561b9d724558 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561b9d724520 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561b9d724710 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b9d7245a0 <col:39> 'void *(void *)' Function 0x561b9d720098 'P0' 'void *(void *)'
    | `-ParenExpr 0x561b9d724620 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561b9d7245f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561b9d7245c0 <col:52> 'int' 0
    |-DeclStmt 0x561b9d7247a0 <line:783:3, col:18>
    | `-VarDecl 0x561b9d724738 <col:3, col:13> col:13 used t1807 'pthread_t':'unsigned long'
    |-CallExpr 0x561b9d724948 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561b9d724930 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b9d7247b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561b9d706488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561b9d7247f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561b9d7247d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561b9d724738 't1807' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561b9d724988 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561b9d724870 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561b9d724848 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561b9d724810 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561b9d7249a0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b9d724890 <col:39> 'void *(void *)' Function 0x561b9d7214a0 'P1' 'void *(void *)'
    | `-ParenExpr 0x561b9d724910 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561b9d7248e8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561b9d7248b0 <col:52> 'int' 0
    |-DeclStmt 0x561b9d724a30 <line:785:3, col:18>
    | `-VarDecl 0x561b9d7249c8 <col:3, col:13> col:13 used t1808 'pthread_t':'unsigned long'
    |-CallExpr 0x561b9d724be8 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561b9d724bd0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b9d724a48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561b9d706488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561b9d724a88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561b9d724a68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561b9d7249c8 't1808' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561b9d724c28 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561b9d724b00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561b9d724ad8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561b9d724aa0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561b9d724c40 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b9d724b20 <col:39> 'void *(void *)' Function 0x561b9d722df8 'P2' 'void *(void *)'
    | `-ParenExpr 0x561b9d724bb0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561b9d724b88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561b9d724b50 <col:52> 'int' 0
    |-CallExpr 0x561b9d724c90 <line:787:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561b9d724c78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b9d724c58 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561b9d724d60 <line:788:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561b9d724cb0 <col:3> '_Bool' lvalue Var 0x561b9d71f3f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561b9d724d48 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561b9d724d28 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561b9d724d10 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561b9d724cd0 <col:21> 'int' lvalue Var 0x561b9d71f120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561b9d724cf0 <col:41> 'int' 3
    |-CallExpr 0x561b9d724db8 <line:789:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561b9d724da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b9d724d80 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561b9d724e30 <line:790:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561b9d724e18 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b9d724dd8 <col:3> 'void (int)' Function 0x561b9d6c5790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561b9d724e70 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561b9d724e58 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561b9d724df8 <col:21> '_Bool' lvalue Var 0x561b9d71f3f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561b9d724ec0 <line:791:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561b9d724ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b9d724e88 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561b9d7251a8 <line:792:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561b9d724ee0 <col:3> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
    | `-ConditionalOperator 0x561b9d725178 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561b9d724fa0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561b9d724f58 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561b9d724f40 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561b9d724f00 <col:7> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561b9d724f88 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561b9d724f70 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561b9d724f20 <col:25> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561b9d725160 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561b9d724fc0 <col:42> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
    |   `-ParenExpr 0x561b9d725140 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561b9d725110 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561b9d725080 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561b9d725038 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561b9d725020 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561b9d724fe0 <col:55> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561b9d725068 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561b9d725050 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561b9d725000 <col:73> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561b9d7250e0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561b9d7250a0 <col:90> 'int' lvalue Var 0x561b9d71fcf8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561b9d7250f8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561b9d7250c0 <col:102> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
    |-BinaryOperator 0x561b9d7253b0 <line:793:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561b9d7251c8 <col:3> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561b9d725398 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b9d725368 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561b9d725288 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561b9d725240 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561b9d725228 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561b9d7251e8 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561b9d725270 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561b9d725258 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561b9d725208 <col:38> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b9d725320 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b9d7252d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b9d7252a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561b9d725350 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b9d725338 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b9d725300 <col:66> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561b9d725698 <line:794:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561b9d7253d0 <col:3> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561b9d725680 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b9d725650 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561b9d725570 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561b9d725490 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561b9d725448 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561b9d725430 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561b9d7253f0 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561b9d725478 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561b9d725460 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561b9d725410 <col:38> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561b9d725550 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561b9d725508 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561b9d7254f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561b9d7254b0 <col:56> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561b9d725538 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561b9d725520 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561b9d7254d0 <col:74> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b9d725608 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b9d7255c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b9d725590 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561b9d725638 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b9d725620 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b9d7255e8 <col:102> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x561b9d7258a0 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561b9d7256b8 <col:3> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561b9d725888 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b9d725858 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561b9d725778 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561b9d725730 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561b9d725718 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561b9d7256d8 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561b9d725760 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561b9d725748 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561b9d7256f8 <col:38> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b9d725810 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b9d7257c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b9d725798 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561b9d725840 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b9d725828 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b9d7257f0 <col:66> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561b9d725ba8 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561b9d7258c0 <col:3> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561b9d725b90 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b9d725b60 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561b9d725a60 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561b9d725980 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561b9d725938 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561b9d725920 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561b9d7258e0 <col:20> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561b9d725968 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561b9d725950 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561b9d725900 <col:38> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561b9d725a40 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561b9d7259f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561b9d7259e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561b9d7259a0 <col:56> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561b9d725a28 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561b9d725a10 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561b9d7259c0 <col:74> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561b9d725af8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561b9d725ab0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561b9d725a80 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561b9d725b28 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561b9d725b10 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561b9d725ad8 <col:102> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561b9d725c00 <line:797:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561b9d725be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b9d725bc8 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561b9d725c58 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561b9d725c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b9d725c20 <col:3> 'void ()' Function 0x561b9d6c5e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561b9d725d08 <line:799:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x561b9d725c78 <col:3> '_Bool' lvalue Var 0x561b9d71ff08 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x561b9d725cf0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x561b9d725cd0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x561b9d725cb8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x561b9d725c98 <col:19> 'void *(void)' Function 0x561b9d6c5958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x561b9d725db8 <line:800:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x561b9d725d28 <col:3> '_Bool' lvalue Var 0x561b9d71ff80 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x561b9d725da0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x561b9d725d80 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x561b9d725d68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x561b9d725d48 <col:19> 'void *(void)' Function 0x561b9d6c5958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x561b9d725e30 <line:801:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x561b9d725dd8 <col:3> '_Bool' lvalue Var 0x561b9d71f608 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x561b9d725e18 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x561b9d725df8 <col:21> '_Bool' lvalue Var 0x561b9d71ff80 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x561b9d725ea8 <line:802:3, col:15> 'int' '='
    | |-DeclRefExpr 0x561b9d725e50 <col:3> 'int' lvalue Var 0x561b9d71f688 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x561b9d725e90 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x561b9d725e70 <col:15> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
    |-BinaryOperator 0x561b9d7262e0 <line:803:3, col:162> 'int' '='
    | |-DeclRefExpr 0x561b9d725ec8 <col:3> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
    | `-ConditionalOperator 0x561b9d7262b0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x561b9d7260d8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x561b9d725ff8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x561b9d725f20 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x561b9d725f08 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x561b9d725ee8 <col:8> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x561b9d725fd8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x561b9d725f70 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x561b9d725f58 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x561b9d725f38 <col:27> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x561b9d725fc0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x561b9d725fa8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x561b9d725f88 <col:46> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x561b9d7260b8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x561b9d726050 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x561b9d726038 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x561b9d726018 <col:65> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x561b9d7260a0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x561b9d726088 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x561b9d726068 <col:84> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561b9d726298 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561b9d7260f8 <col:101> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
    |   `-ParenExpr 0x561b9d726278 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x561b9d726248 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x561b9d7261b8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561b9d726170 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561b9d726158 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561b9d726118 <col:106> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561b9d7261a0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561b9d726188 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561b9d726138 <col:124> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561b9d726218 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561b9d7261d8 <col:141> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x561b9d726230 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561b9d7261f8 <col:153> 'int' lvalue Var 0x561b9d71fcf8 'x$w_buff1' 'int'
    |-BinaryOperator 0x561b9d7267f0 <line:804:3, col:208> 'int' '='
    | |-DeclRefExpr 0x561b9d726300 <col:3> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x561b9d7267c0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x561b9d726790 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x561b9d726778 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561b9d726320 <col:15> '_Bool' lvalue Var 0x561b9d71ff80 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x561b9d7267a8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561b9d726340 <col:31> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
    |   `-ParenExpr 0x561b9d726758 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x561b9d726728 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x561b9d726550 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x561b9d726470 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x561b9d726398 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x561b9d726380 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x561b9d726360 <col:45> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x561b9d726450 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x561b9d7263e8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x561b9d7263d0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x561b9d7263b0 <col:64> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x561b9d726438 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x561b9d726420 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x561b9d726400 <col:83> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x561b9d726530 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x561b9d7264c8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x561b9d7264b0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x561b9d726490 <col:102> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x561b9d726518 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x561b9d726500 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x561b9d7264e0 <col:121> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561b9d726710 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561b9d726570 <col:138> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
    |       `-ParenExpr 0x561b9d7266f0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x561b9d7266c0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x561b9d726630 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x561b9d7265e8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x561b9d7265d0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x561b9d726590 <col:151> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x561b9d726618 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x561b9d726600 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x561b9d7265b0 <col:169> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x561b9d726690 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561b9d726650 <col:186> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x561b9d7266a8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x561b9d726670 <col:198> 'int' lvalue Var 0x561b9d71fc00 'x$w_buff0' 'int'
    |-BinaryOperator 0x561b9d726d10 <line:805:3, col:208> 'int' '='
    | |-DeclRefExpr 0x561b9d726810 <col:3> 'int' lvalue Var 0x561b9d71fcf8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x561b9d726ce0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x561b9d726cb0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x561b9d726c98 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561b9d726830 <col:15> '_Bool' lvalue Var 0x561b9d71ff80 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x561b9d726cc8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561b9d726850 <col:31> 'int' lvalue Var 0x561b9d71fcf8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x561b9d726c78 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x561b9d726c48 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x561b9d726a60 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x561b9d726980 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x561b9d7268a8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x561b9d726890 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x561b9d726870 <col:45> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x561b9d726960 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x561b9d7268f8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x561b9d7268e0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x561b9d7268c0 <col:64> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x561b9d726948 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x561b9d726930 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x561b9d726910 <col:83> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x561b9d726a40 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x561b9d7269d8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x561b9d7269c0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x561b9d7269a0 <col:102> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x561b9d726a28 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x561b9d726a10 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x561b9d7269f0 <col:121> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561b9d726c30 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561b9d726a80 <col:138> 'int' lvalue Var 0x561b9d71fcf8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x561b9d726c10 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x561b9d726be0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x561b9d726b40 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x561b9d726af8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x561b9d726ae0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x561b9d726aa0 <col:151> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x561b9d726b28 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x561b9d726b10 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x561b9d726ac0 <col:169> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x561b9d726bb0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561b9d726b70 <col:186> 'int' lvalue Var 0x561b9d71fcf8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x561b9d726bc8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x561b9d726b90 <col:198> 'int' lvalue Var 0x561b9d71fcf8 'x$w_buff1' 'int'
    |-BinaryOperator 0x561b9d7272b8 <line:806:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x561b9d726d30 <col:3> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561b9d7272a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b9d727270 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x561b9d727228 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561b9d727210 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561b9d726d50 <col:20> '_Bool' lvalue Var 0x561b9d71ff80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561b9d727258 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561b9d727240 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561b9d726d70 <col:36> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x561b9d7271f0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x561b9d7271c0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x561b9d726f80 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561b9d726ea0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561b9d726dc8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561b9d726db0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561b9d726d90 <col:55> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561b9d726e80 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561b9d726e18 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561b9d726e00 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561b9d726de0 <col:74> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561b9d726e68 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561b9d726e50 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561b9d726e30 <col:93> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561b9d726f60 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561b9d726ef8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561b9d726ee0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561b9d726ec0 <col:112> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561b9d726f48 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561b9d726f30 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561b9d726f10 <col:131> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561b9d7271a8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561b9d727190 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561b9d726fa0 <col:148> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x561b9d727170 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x561b9d727140 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x561b9d727060 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561b9d727018 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561b9d727000 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561b9d726fc0 <col:166> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561b9d727048 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561b9d727030 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561b9d726fe0 <col:184> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561b9d7270f8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561b9d7270b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561b9d727080 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561b9d727128 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x561b9d727110 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x561b9d7270d8 <col:212> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561b9d727880 <line:807:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x561b9d7272d8 <col:3> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561b9d727868 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b9d727838 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x561b9d7277f0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561b9d7277d8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561b9d7272f8 <col:20> '_Bool' lvalue Var 0x561b9d71ff80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561b9d727820 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561b9d727808 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561b9d727318 <col:36> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x561b9d7277b8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x561b9d727788 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x561b9d727528 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561b9d727448 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561b9d727370 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561b9d727358 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561b9d727338 <col:55> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561b9d727428 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561b9d7273c0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561b9d7273a8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561b9d727388 <col:74> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561b9d727410 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561b9d7273f8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561b9d7273d8 <col:93> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561b9d727508 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561b9d7274a0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561b9d727488 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561b9d727468 <col:112> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561b9d7274f0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561b9d7274d8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561b9d7274b8 <col:131> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561b9d727770 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561b9d727758 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561b9d727548 <col:148> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x561b9d727738 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x561b9d727708 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x561b9d727608 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561b9d7275c0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561b9d7275a8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561b9d727568 <col:166> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561b9d7275f0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561b9d7275d8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561b9d727588 <col:184> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561b9d7276d8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561b9d727658 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561b9d727628 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561b9d7276f0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x561b9d7276b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x561b9d727680 <col:219> 'int' 0
    |-BinaryOperator 0x561b9d727e38 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x561b9d7278a0 <col:3> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561b9d727e20 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b9d727df0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x561b9d727da8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561b9d727d90 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561b9d7278c0 <col:20> '_Bool' lvalue Var 0x561b9d71ff80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561b9d727dd8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561b9d727dc0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561b9d7278e0 <col:36> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x561b9d727d70 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x561b9d727d40 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x561b9d727af0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561b9d727a10 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561b9d727938 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561b9d727920 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561b9d727900 <col:55> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561b9d7279f0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561b9d727988 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561b9d727970 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561b9d727950 <col:74> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561b9d7279d8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561b9d7279c0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561b9d7279a0 <col:93> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561b9d727ad0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561b9d727a68 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561b9d727a50 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561b9d727a30 <col:112> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561b9d727ab8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561b9d727aa0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561b9d727a80 <col:131> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561b9d727d28 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561b9d727d10 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561b9d727b10 <col:148> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x561b9d727cf0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x561b9d727cc0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x561b9d727be0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561b9d727b98 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561b9d727b80 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561b9d727b30 <col:166> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561b9d727bc8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561b9d727bb0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561b9d727b50 <col:184> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561b9d727c78 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561b9d727c30 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561b9d727c00 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561b9d727ca8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x561b9d727c90 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x561b9d727c58 <col:212> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561b9d728400 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x561b9d727e58 <col:3> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561b9d7283e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561b9d7283b8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x561b9d728370 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561b9d728358 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561b9d727e78 <col:20> '_Bool' lvalue Var 0x561b9d71ff80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x561b9d7283a0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x561b9d728388 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x561b9d727e98 <col:36> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x561b9d728338 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x561b9d728308 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x561b9d7280a8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x561b9d727fc8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x561b9d727ef0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x561b9d727ed8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x561b9d727eb8 <col:55> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x561b9d727fa8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x561b9d727f40 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x561b9d727f28 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x561b9d727f08 <col:74> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x561b9d727f90 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x561b9d727f78 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x561b9d727f58 <col:93> '_Bool' lvalue Var 0x561b9d71fd70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x561b9d728088 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x561b9d728020 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x561b9d728008 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x561b9d727fe8 <col:112> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x561b9d728070 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x561b9d728058 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x561b9d728038 <col:131> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x561b9d7282f0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x561b9d7282d8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x561b9d7280c8 <col:148> '_Bool' lvalue Var 0x561b9d71f8e0 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x561b9d7282b8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x561b9d728288 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x561b9d728188 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x561b9d728140 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x561b9d728128 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x561b9d7280e8 <col:166> '_Bool' lvalue Var 0x561b9d71fc78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x561b9d728170 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x561b9d728158 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x561b9d728108 <col:184> '_Bool' lvalue Var 0x561b9d71f700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x561b9d728258 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x561b9d7281d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x561b9d7281a8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x561b9d728270 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x561b9d728230 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x561b9d728200 <col:219> 'int' 0
    |-BinaryOperator 0x561b9d7286d0 <line:810:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x561b9d728420 <col:3> '_Bool' lvalue Var 0x561b9d71f470 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561b9d7286b8 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561b9d7286a0 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561b9d728680 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x561b9d728660 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x561b9d7285c8 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x561b9d728530 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x561b9d728498 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x561b9d728480 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x561b9d728440 <col:23> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
    |         | | | `-IntegerLiteral 0x561b9d728460 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x561b9d728510 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x561b9d7284f8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x561b9d7284b8 <col:33> 'int' lvalue Var 0x561b9d71fe70 'y' 'int'
    |         | |   `-IntegerLiteral 0x561b9d7284d8 <col:38> 'int' 2
    |         | `-BinaryOperator 0x561b9d7285a8 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561b9d728590 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561b9d728550 <col:43> 'int' lvalue Var 0x561b9d71f240 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x561b9d728570 <col:66> 'int' 2
    |         `-BinaryOperator 0x561b9d728640 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x561b9d728628 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561b9d7285e8 <col:71> 'int' lvalue Var 0x561b9d71f360 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x561b9d728608 <col:94> 'int' 1
    |-BinaryOperator 0x561b9d728800 <line:811:3, col:37> 'int' '='
    | |-DeclRefExpr 0x561b9d7286f0 <col:3> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
    | `-ConditionalOperator 0x561b9d7287d0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x561b9d728788 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x561b9d728770 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561b9d728710 <col:7> '_Bool' lvalue Var 0x561b9d71f608 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x561b9d7287a0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561b9d728730 <col:25> 'int' lvalue Var 0x561b9d71f688 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x561b9d7287b8 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x561b9d728750 <col:37> 'int' lvalue Var 0x561b9d71f570 'x' 'int'
    |-BinaryOperator 0x561b9d728898 <line:812:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x561b9d728820 <col:3> '_Bool' lvalue Var 0x561b9d71f608 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x561b9d728870 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x561b9d728840 <col:28> 'int' 0
    |-CallExpr 0x561b9d7288f0 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561b9d7288d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561b9d7288b8 <col:3> 'void ()' Function 0x561b9d6c5f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561b9d728968 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561b9d728950 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561b9d728910 <col:3> 'void (int)' Function 0x561b9d6c5bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561b9d7289a8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561b9d728990 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561b9d728930 <col:21> '_Bool' lvalue Var 0x561b9d71f470 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561b9d7289e0 <line:815:3, col:10>
      `-IntegerLiteral 0x561b9d7289c0 <col:10> 'int' 0
