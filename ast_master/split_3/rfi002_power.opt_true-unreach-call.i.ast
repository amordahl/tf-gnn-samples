TranslationUnitDecl 0x55f354389e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55f35438a6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55f35438a3b0 '__int128'
|-TypedefDecl 0x55f35438a748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55f35438a3d0 'unsigned __int128'
|-TypedefDecl 0x55f35438aa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55f35438a820 'struct __NSConstantString_tag'
|   `-Record 0x55f35438a7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55f35438aaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55f35438aab0 'char *'
|   `-BuiltinType 0x55f354389eb0 'char'
|-TypedefDecl 0x55f3543c9650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55f35438ad90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55f35438abd0 'struct __va_list_tag'
|     `-Record 0x55f35438ab50 '__va_list_tag'
|-FunctionDecl 0x55f3543c9770 <./split_3/rfi002_power.opt_true-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55f3543c9940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55f3543c9870 <col:31> col:34 'int'
|-FunctionDecl 0x55f3543c9ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55f3543c9be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55f3543c9d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55f3543c9c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55f3543c9f58 <col:40, col:99>
|   |-IfStmt 0x55f3543c9f28 <col:42, col:88>
|   | |-UnaryOperator 0x55f3543c9e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55f3543c9df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55f3543c9dd0 <col:47> 'int' lvalue ParmVar 0x55f3543c9c98 'expression' 'int'
|   | `-CompoundStmt 0x55f3543c9f10 <col:59, col:88>
|   |   `-LabelStmt 0x55f3543c9ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55f3543c9e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55f3543c9e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55f3543c9e20 <col:68> 'void () __attribute__((noreturn))' Function 0x55f3543c9be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55f3543c9f40 <col:89>
|   `-ReturnStmt 0x55f3543c9f48 <col:91>
|-FunctionDecl 0x55f3543c9fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55f3543ca060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55f3543ca3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f3543ca118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55f3543ca198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55f3543ca218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f3543ca298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f3543ca4a0 <line:11:22>
|-FunctionDecl 0x55f3543f0520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f3543ca510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55f3543ca590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55f3543f0350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f3543f03d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f3543f05e0 <line:14:22>
|-FunctionDecl 0x55f3543f0890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f3543f0650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55f3543f06d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55f3543f0750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55f3543f0948 <line:16:22>
|-TypedefDecl 0x55f3543f09b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55f354389f70 'unsigned char'
|-TypedefDecl 0x55f3543f0a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55f354389f90 'unsigned short'
|-TypedefDecl 0x55f3543f0a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55f354389fb0 'unsigned int'
|-TypedefDecl 0x55f3543f0b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f0b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55f354389ed0 'signed char'
|-TypedefDecl 0x55f3543f0be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55f354389f70 'unsigned char'
|-TypedefDecl 0x55f3543f0c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55f354389ef0 'short'
|-TypedefDecl 0x55f3543f0cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55f354389f90 'unsigned short'
|-TypedefDecl 0x55f3543f0d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55f354389f10 'int'
|-TypedefDecl 0x55f3543f0da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55f354389fb0 'unsigned int'
|-TypedefDecl 0x55f3543f0e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f0e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f0ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f0f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f0fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f1048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55f354389fb0 'unsigned int'
|-TypedefDecl 0x55f3543f10b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55f354389fb0 'unsigned int'
|-TypedefDecl 0x55f3543f1128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f1198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f1208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55f354389fb0 'unsigned int'
|-TypedefDecl 0x55f3543f1278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f12e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f1378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f13e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55f354389f10 'int'
|-RecordDecl 0x55f3543f1440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55f3543f1588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55f3543f1640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55f3543f15e0 'struct __fsid_t' sugar
|   `-RecordType 0x55f3543f14c0 '__fsid_t'
|     `-Record 0x55f3543f1440 ''
|-TypedefDecl 0x55f3543f16c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f1738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f17a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f1818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55f354389fb0 'unsigned int'
|-TypedefDecl 0x55f3543f1888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f18f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55f354389fb0 'unsigned int'
|-TypedefDecl 0x55f3543f1968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f19d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55f354389f10 'int'
|-TypedefDecl 0x55f3543f1a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55f354389f10 'int'
|-TypedefDecl 0x55f3543f1ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55f354389f10 'int'
|-TypedefDecl 0x55f3543f1b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55f35438a630 'void *'
|   `-BuiltinType 0x55f354389e70 'void'
|-TypedefDecl 0x55f3543f1b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f1c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f1c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f1ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f1d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f1dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f1e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f1ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f1f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f1f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f1ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f2088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55f3543f2050 '__off64_t' sugar
|   |-Typedef 0x55f3543f1378 '__off64_t'
|   `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f2180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55f3543f2140 '__quad_t *'
|   `-TypedefType 0x55f3543f20e0 '__quad_t' sugar
|     |-Typedef 0x55f3543f0ef8 '__quad_t'
|     `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f21f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55f35438aab0 'char *'
|   `-BuiltinType 0x55f354389eb0 'char'
|-TypedefDecl 0x55f3543f2260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f22d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55f354389fb0 'unsigned int'
|-FunctionDecl 0x55f3543f3458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55f3543f3380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55f3543f3768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55f3543f3758 <line:73:3, col:34>
|     `-CallExpr 0x55f3543f3718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55f3543f3700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f3543f3690 <col:10> '<builtin fn type>' Function 0x55f3543f3500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55f3543f3740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f3543f36b0 <col:29> 'unsigned int' lvalue ParmVar 0x55f3543f3380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55f3543f3500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55f3543f35a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55f3543f3610 <col:10> Implicit
| `-ConstAttr 0x55f3543f3668 <col:10> Implicit
|-FunctionDecl 0x55f3543f38c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55f3543f37b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55f3543f3bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55f3543f3bc8 <line:78:3, col:34>
|     `-CallExpr 0x55f3543f3b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55f3543f3b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f3543f3af8 <col:10> '<builtin fn type>' Function 0x55f3543f3968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55f3543f3bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55f3543f3b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55f3543f37b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55f3543f3968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55f3543f3a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55f3543f3a78 <col:10> Implicit
| `-ConstAttr 0x55f3543f3ad0 <col:10> Implicit
|-TypedefDecl 0x55f3543f3c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-TypedefDecl 0x55f3543f3c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55f3543f3c60 '__time_t' sugar
|   |-Typedef 0x55f3543f1888 '__time_t'
|   `-BuiltinType 0x55f354389f30 'long'
|-RecordDecl 0x55f3543f3cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55f3543f3da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55f3543f3e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55f3543f3ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55f3543f3e90 '__pid_t' sugar
|   |-Typedef 0x55f3543f13e8 '__pid_t'
|   `-BuiltinType 0x55f354389f10 'int'
|-RecordDecl 0x55f3543f3f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55f3543f3fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55f3543f4030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55f3543f40f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55f3543f4158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-RecordDecl 0x55f3543f41b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55f3543f5480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55f3543f5530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55f3543f54d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55f3543f4230 'cpu_set_t'
|     `-Record 0x55f3543f41b0 ''
|-FunctionDecl 0x55f3543f5808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55f3543f55d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f3543f56e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55f3543f58b8 <line:108:19>
|-FunctionDecl 0x55f3543f5a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55f3543f5920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55f3543f5b38 <col:69>
|-FunctionDecl 0x55f3543f5cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55f3543f5ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55f3543f5d58 <col:64>
|-FunctionDecl 0x55f3543f6018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f3543f5dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f3543f5ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f3543f60c8 <line:114:22>
|-FunctionDecl 0x55f3543f63b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55f3543f6130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f3543f6228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55f3543f6460 <col:88>
|-FunctionDecl 0x55f3543f6718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f3543f64c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f3543f6548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55f3543f65d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f3543f67d0 <col:62>
|-FunctionDecl 0x55f3543f6948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55f3543f6838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55f3543f69f0 <col:63>
|-FunctionDecl 0x55f3543f6b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55f3543f6bb8 <col:47>
|-FunctionDecl 0x55f3543f6cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55f3543f6c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f3543f6d68 <col:69>
|-FunctionDecl 0x55f3543f6e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55f3543f6dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f3543f6f18 <col:69>
|-FunctionDecl 0x55f3543f71d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f3543f6f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f3543f70b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55f3543f7288 <col:88>
|-TypedefDecl 0x55f3543f7318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55f3543f72e0 '__clock_t' sugar
|   |-Typedef 0x55f3543f16c8 '__clock_t'
|   `-BuiltinType 0x55f354389f30 'long'
|-TypedefDecl 0x55f3543f73c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55f3543f7370 '__clockid_t' sugar
|   |-Typedef 0x55f3543f1ab8 '__clockid_t'
|   `-BuiltinType 0x55f354389f10 'int'
|-TypedefDecl 0x55f3543f7458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55f3543f7420 '__timer_t' sugar
|   |-Typedef 0x55f3543f1b28 '__timer_t'
|   `-PointerType 0x55f35438a630 'void *'
|     `-BuiltinType 0x55f354389e70 'void'
|-RecordDecl 0x55f3543f74b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55f3543f7570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55f3543f75d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55f3543f7640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55f3543f76a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55f3543f7710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55f3543f7778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55f3543f77e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55f3543f7848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55f3543f78b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55f3543f7918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55f3543f7980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55f3543f79d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55f3543f7a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55f3543f7b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55f3543f7bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55f3543f7d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55f3543f7e20 <col:45>
|-FunctionDecl 0x55f3543f8000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55f3543f7ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55f3543f80a8 <col:54>
|-FunctionDecl 0x55f3543f82a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55f3543f8110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55f3543f8188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55f3543f8358 <line:158:22>
| `-ConstAttr 0x55f3543f8ff0 <col:63>
|-FunctionDecl 0x55f3543f91f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f3543f90e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f3543f9298 <col:56>
|-FunctionDecl 0x55f3543f9640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55f3543f9308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55f3543f9380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f3543f9400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55f3543f94f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55f3543f9700 <col:54>
|-RecordDecl 0x55f3543f9758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55f3543f9808 parent 0x55f354389e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55f3543f9a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55f3543f9b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55f3543f9b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55f3543f9bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55f3543f9cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55f3543f9de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55f3543f9d90 'struct __locale_struct *'
|   `-ElaboratedType 0x55f3543f9d20 'struct __locale_struct' sugar
|     `-RecordType 0x55f3543f97e0 'struct __locale_struct'
|       `-Record 0x55f3543f9758 '__locale_struct'
|-TypedefDecl 0x55f3543f9e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55f3543f9e60 '__locale_t' sugar
|   |-Typedef 0x55f3543f9de8 '__locale_t'
|   `-PointerType 0x55f3543f9d90 'struct __locale_struct *'
|     `-ElaboratedType 0x55f3543f9d20 'struct __locale_struct' sugar
|       `-RecordType 0x55f3543f97e0 'struct __locale_struct'
|         `-Record 0x55f3543f9758 '__locale_struct'
|-FunctionDecl 0x55f3543fb2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55f3543f9f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55f3543f9f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f3543fb028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55f3543fb0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f3543fb130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55f3543fb368 <col:40>
|-FunctionDecl 0x55f3543fb558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f3543fb430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55f3543fb600 <col:66>
|-FunctionDecl 0x55f3543fb710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f3543fb668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55f3543fb7b8 <col:69>
|-FunctionDecl 0x55f3543fb9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f3543fb820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f3543fb8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f3543fba98 <col:52>
|-FunctionDecl 0x55f3543fbc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f3543fbb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f3543fbb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f3543fbcf0 <col:55>
|-FunctionDecl 0x55f3543fbe88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55f3543fbd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55f3543fbf30 <col:62>
|-FunctionDecl 0x55f3543fc168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55f3543fbf98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55f3543fc210 <col:60>
|-FunctionDecl 0x55f3543fc438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f3543fc290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f3543fc310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55f3543fc4e8 <col:44>
|-FunctionDecl 0x55f3543fc6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f3543fc550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f3543fc5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55f3543fc7a8 <col:49>
|-VarDecl 0x55f3543fc8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55f3543fc928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55f3543fc9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55f3543fca70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55f3543fcba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55f3543fcc40 <col:42>
|-VarDecl 0x55f3543fccb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55f3543fcd30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55f3543fceb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55f3543fcda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55f3543fcf60 <col:57>
|-FunctionDecl 0x55f3543fd0d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f3543fcfe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f3543fd178 <col:56>
|-FunctionDecl 0x55f3543fd288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f3543fd1f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55f3543fd330 <col:59>
|-FunctionDecl 0x55f3543fd438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55f3543fd3a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55f3543fd4e0 <col:48>
| `-ConstAttr 0x55f3543fd538 <col:89>
|-FunctionDecl 0x55f3543fd798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f3543fd5e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55f3543fd678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55f3543fd9f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f3543fd888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f3543fd918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55f3543fdaa8 <col:88>
|-FunctionDecl 0x55f3543fdc40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f3543fdb10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f3543fdba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55f3543fdcf0 <col:88>
|-FunctionDecl 0x55f3543fdf08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55f3543fdd58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f3543fdde8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55f3543fdfb8 <line:209:22>
|-FunctionDecl 0x55f3543fe358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f3543fe020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f3543fe0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55f3543fe170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55f3543fe200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55f3543fe658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55f3543fe458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55f3543fe530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55f3543fe708 <col:85>
|-FunctionDecl 0x55f3543feaf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55f3543fe770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f3543fe8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55f3543fe9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55f3543febb0 <col:52>
|-FunctionDecl 0x55f3543fed28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55f3543fec18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f3543fedd0 <col:61>
|-FunctionDecl 0x55f3543ff248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55f3543fee38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f3543feeb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55f3543fefe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55f3543ff0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55f3543ff308 <col:62>
|-FunctionDecl 0x55f3543ff528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55f3543ff370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f3543ff400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55f3543ff5d8 <line:222:22>
|-FunctionDecl 0x55f3543ff6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55f3543ff640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f3543ff780 <col:65>
|-TypedefDecl 0x55f3543ff7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55f354389fd0 'unsigned long'
|-RecordDecl 0x55f3543ff848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55f3543ff990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f3543ff9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f3543ffaa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55f3543ffa50 'union pthread_attr_t' sugar
|   `-RecordType 0x55f3543ff8d0 'union pthread_attr_t'
|     `-Record 0x55f3543ff848 'pthread_attr_t'
|-RecordDecl 0x55f3543ffb00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55f3543ffc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55f3543ffcf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55f3543ffda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55f3543ffd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55f3543ffb80 'struct __pthread_internal_list'
|     `-Record 0x55f3543ffb00 '__pthread_internal_list'
|-RecordDecl 0x55f3543ffe10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55f3543ffeb8 parent 0x55f354389e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55f3543fff90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f3543ffff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55f354400060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55f354404110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55f354404178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55f3544041e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55f354404268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55f354404320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55f354404410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55f354404478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f354404600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55f3544045a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55f3543ffe90 'pthread_mutex_t'
|     `-Record 0x55f3543ffe10 ''
|-RecordDecl 0x55f354404670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55f3544047b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f354404818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f3544048d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55f354404870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55f3544046f0 'pthread_mutexattr_t'
|     `-Record 0x55f354404670 ''
|-RecordDecl 0x55f354404940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55f3544049e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55f354404ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f354404b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55f354404b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55f354404be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55f354404c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55f354404cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55f354404d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55f354404d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55f354404e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_3/rfi002_power.opt_true-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_3/rfi002_power.opt_true-unreach-call.i:259:3)'
| |-FieldDecl 0x55f354404f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55f354404f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55f354406130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55f354405070 'union pthread_cond_t' sugar
|   `-RecordType 0x55f3544049c0 'pthread_cond_t'
|     `-Record 0x55f354404940 ''
|-RecordDecl 0x55f3544061a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55f3544062a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f354406308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f3544063c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55f354406360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55f354406220 'pthread_condattr_t'
|     `-Record 0x55f3544061a0 ''
|-TypedefDecl 0x55f354406448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55f354389fb0 'unsigned int'
|-TypedefDecl 0x55f3544064b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55f354389f10 'int'
|-RecordDecl 0x55f354406510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55f3544065b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55f354406680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f3544066e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55f354406750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55f3544067b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55f354406820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55f354406888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55f3544068f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55f354406958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55f3544069c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55f354406a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55f354406a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55f354406b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_3/rfi002_power.opt_true-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_3/rfi002_power.opt_true-unreach-call.i:282:3)'
| |-FieldDecl 0x55f354406be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f354406c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f354406da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55f354406d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55f354406590 'pthread_rwlock_t'
|     `-Record 0x55f354406510 ''
|-RecordDecl 0x55f354406e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55f354406f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55f354406fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f354407070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55f354407010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55f354406e90 'pthread_rwlockattr_t'
|     `-Record 0x55f354406e10 ''
|-TypedefDecl 0x55f354408140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55f354389f14 'volatile int' volatile
|   `-BuiltinType 0x55f354389f10 'int'
|-RecordDecl 0x55f354408198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55f3544082e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55f354408348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f354408400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55f3544083a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55f354408220 'pthread_barrier_t'
|     `-Record 0x55f354408198 ''
|-RecordDecl 0x55f354408470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55f354408570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f3544085d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f354408690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55f354408630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55f3544084f0 'pthread_barrierattr_t'
|     `-Record 0x55f354408470 ''
|-TypedefDecl 0x55f3544087a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55f354408740 'long [8]' 8 
|   `-BuiltinType 0x55f354389f30 'long'
|-EnumDecl 0x55f354408800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55f3544088c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55f354408918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55f354408968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55f354408a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55f354408a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55f354408ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55f354408b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55f354408bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55f354408b98 <col:26> 'int'
| |   `-DeclRefExpr 0x55f354408b78 <col:26> 'int' EnumConstant 0x55f354408a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55f354408c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55f354408c20 <col:29> 'int'
| |   `-DeclRefExpr 0x55f354408c00 <col:29> 'int' EnumConstant 0x55f354408a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55f354408cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55f354408ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55f354408c88 <col:30> 'int' EnumConstant 0x55f354408ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55f354408d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55f354408d30 <col:27> 'int'
|     `-DeclRefExpr 0x55f354408d10 <col:27> 'int' EnumConstant 0x55f354408bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55f354408d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55f354408e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55f354408ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55f354408ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x55f354408eb8 <col:30> 'int' EnumConstant 0x55f354408e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55f354408f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55f354408fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55f354408fb0 <col:29> 'int'
|     `-DeclRefExpr 0x55f354408f90 <col:29> 'int' EnumConstant 0x55f354408f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55f354409018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55f3544090e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55f354409150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55f3544091a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55f3544091f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55f3544092b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55f354409308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55f354409358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55f3544093e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55f3544093c8 <col:31> 'int'
|     `-DeclRefExpr 0x55f3544093a8 <col:31> 'int' EnumConstant 0x55f3544092b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55f354409430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55f3544094f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55f354409548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55f354409598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55f354409668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55f3544096b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55f354409708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55f3544097d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55f354409828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55f354409878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55f354409ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55f354409b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55f354409b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55f354409ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55f354409cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55f354409dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55f354409e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55f354409e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55f354409f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55f354409f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55f35440a5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55f35440a080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55f35440a1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f35440a3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55f35440a420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55f35440a678 <col:47>
| |-NonNullAttr 0x55f35440a6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55f35440a708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55f35440a830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55f35440a760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55f35440aa88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55f35440a8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55f35440a968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55f35440ac58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55f35440ab48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55f35440ad00 <col:60>
|-FunctionDecl 0x55f35440ae50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55f35440aef0 <col:54>
| `-ConstAttr 0x55f35440af48 <col:95>
|-FunctionDecl 0x55f35440c990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55f35440af80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f35440aff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55f35440ca40 <line:395:19>
| `-ConstAttr 0x55f35440ca98 <col:60>
|-FunctionDecl 0x55f35440cc68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f35440cb30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f35440cd10 <col:71>
| `-NonNullAttr 0x55f35440cd68 <col:112, col:126> 1
|-FunctionDecl 0x55f35440ce70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f35440cdb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f35440cf18 <line:398:22>
| `-NonNullAttr 0x55f35440cf70 <col:63, col:77> 1
|-FunctionDecl 0x55f35440d198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55f35440cfb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f35440d038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55f35440d248 <line:401:22>
| `-NonNullAttr 0x55f35440d2a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f35440d4a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f35440d2e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f35440d368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55f35440d558 <line:404:22>
| `-NonNullAttr 0x55f35440d5b0 <col:63, col:77> 1
|-FunctionDecl 0x55f35440d808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55f35440d5f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f35440d6a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55f35440d8b8 <line:407:22>
| `-NonNullAttr 0x55f35440d910 <col:63, col:80> 1 2
|-FunctionDecl 0x55f35440eb68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f35440e9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f35440ea28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f35440ec18 <line:410:22>
| `-NonNullAttr 0x55f35440ec70 <col:63, col:77> 1
|-FunctionDecl 0x55f35440eea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f35440ecb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f35440ed48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f35440ef58 <line:413:22>
| `-NonNullAttr 0x55f35440efb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f35440f1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f35440eff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f35440f088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55f35440f298 <col:37>
| `-NonNullAttr 0x55f35440f2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55f35440f4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f35440f338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f35440f3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55f35440f588 <line:419:22>
| `-NonNullAttr 0x55f35440f5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f35440f768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f35440f628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f35440f6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55f35440f818 <line:421:22>
| `-NonNullAttr 0x55f35440f870 <col:63, col:77> 1
|-FunctionDecl 0x55f35440fa38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f35440f8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f35440f938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55f35440fae8 <line:424:22>
| `-NonNullAttr 0x55f35440fb40 <col:63, col:80> 1 2
|-FunctionDecl 0x55f35440fcc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f35440fb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f35440fc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55f35440fd78 <line:427:22>
| `-NonNullAttr 0x55f35440fdd0 <col:63, col:77> 1
|-FunctionDecl 0x55f35440ff78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f35440fe18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f35440fe98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55f354410028 <line:430:22>
| `-NonNullAttr 0x55f354410080 <col:63, col:80> 1 2
|-FunctionDecl 0x55f354410208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f3544100c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f354410148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55f3544102b8 <line:432:22>
| `-NonNullAttr 0x55f354410310 <col:63, col:77> 1
|-FunctionDecl 0x55f354410538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55f354410358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f3544103d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55f3544105e8 <line:435:22>
| |-NonNullAttr 0x55f354410640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55f354410678 <col:100> "" ""
|-FunctionDecl 0x55f354410888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55f3544106c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f354410748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55f354410938 <line:438:22>
| |-NonNullAttr 0x55f354410990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55f3544109d8 <col:97> "" ""
|-FunctionDecl 0x55f354410bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f354410a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f354410aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f354410c78 <line:441:22>
| `-NonNullAttr 0x55f354410cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f354410e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f354410d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f354410d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f354410f00 <line:444:22>
| `-NonNullAttr 0x55f354410f58 <col:63, col:77> 1
|-FunctionDecl 0x55f354411248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f354410fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f354411028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55f3544110a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f354411300 <line:448:22>
| `-NonNullAttr 0x55f354411358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55f354411608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55f3544113b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f354411430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55f3544114a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f3544116c0 <col:43>
| `-NonNullAttr 0x55f354411718 <col:84, col:98> 1
|-FunctionDecl 0x55f354411a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f354411768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f3544117e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55f354411878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55f354411ad8 <line:453:22>
| `-NonNullAttr 0x55f354411b30 <col:63, col:77> 3
|-FunctionDecl 0x55f354411e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f354411b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f354411bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55f354411c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f354411ec0 <line:457:22>
| `-NonNullAttr 0x55f354411f18 <col:63, col:80> 2 3
|-FunctionDecl 0x55f354412108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55f354411f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f354411fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55f3544121b8 <line:459:22>
|-FunctionDecl 0x55f354412588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55f354412280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55f354412420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55f354412638 <col:52, col:69> 1 2
|-FunctionDecl 0x55f3544127e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55f3544126c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55f354412740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55f3544129f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55f3544128a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55f354412928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55f354412b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55f354412ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55f354412c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55f354412d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55f354412dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55f354412ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55f354412f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55f354413100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_3/rfi002_power.opt_true-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55f3544131f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55f3544132b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55f354413250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55f354412db0 '__pthread_unwind_buf_t'
| |   `-Record 0x55f354412d28 ''
| `-AlignedAttr 0x55f354413308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55f354413380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55f3544134e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55f354413548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55f3544135b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55f354413618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55f354413820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f354413710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f354413a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f3544138d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f354413bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f354413ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55f354413c68 <line:488:22>
|-RecordDecl 0x55f354413cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55f354413fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55f354413e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55f354413eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55f354414088 <col:86>
| `-ReturnsTwiceAttr 0x55f3544140e0 <col:12> Implicit
|-FunctionDecl 0x55f354414408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f3544141b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55f3544142c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f3544144b8 <line:494:22>
| `-NonNullAttr 0x55f354414510 <col:63, col:77> 1
|-FunctionDecl 0x55f354414688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f354414558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f354414730 <line:496:22>
| `-NonNullAttr 0x55f354414788 <col:63, col:77> 1
|-FunctionDecl 0x55f354414890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f3544147d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f354414938 <line:498:22>
| `-NonNullAttr 0x55f354414990 <col:52, col:66> 1
|-FunctionDecl 0x55f354415ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f354415a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f354415b80 <line:500:22>
| `-NonNullAttr 0x55f354415bd8 <col:52, col:66> 1
|-FunctionDecl 0x55f354415e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f354415c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f354415cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f354415ec8 <col:36>
| `-NonNullAttr 0x55f354415f20 <col:66, col:83> 1 2
|-FunctionDecl 0x55f354416020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f354415f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f3544160c8 <line:505:22>
| `-NonNullAttr 0x55f354416120 <col:52, col:66> 1
|-FunctionDecl 0x55f3544163b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3544161d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f354416250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f354416468 <line:509:22>
| `-NonNullAttr 0x55f3544164c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f354416788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55f354416508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f354416588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55f354416608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55f354416840 <line:513:22>
| `-NonNullAttr 0x55f354416898 <col:63, col:80> 1 3
|-FunctionDecl 0x55f354416a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f3544168e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f354416ad8 <line:515:22>
| `-NonNullAttr 0x55f354416b30 <col:63, col:77> 1
|-FunctionDecl 0x55f354416d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f354416be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f354416dc0 <line:517:22>
| `-NonNullAttr 0x55f354416e18 <col:63, col:77> 1
|-FunctionDecl 0x55f354416f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f354416e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f354416fc8 <line:519:22>
| `-NonNullAttr 0x55f354417020 <col:63, col:77> 1
|-FunctionDecl 0x55f354417248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f354417068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f3544170e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f3544172f8 <line:523:22>
| `-NonNullAttr 0x55f354417350 <col:63, col:80> 1 2
|-FunctionDecl 0x55f354417558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f354417398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f354417418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55f354417608 <line:526:22>
| `-NonNullAttr 0x55f354417660 <col:63, col:77> 1
|-FunctionDecl 0x55f354417808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f3544176a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f354417728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55f3544178b8 <line:529:22>
| `-NonNullAttr 0x55f354417910 <col:63, col:80> 1 2
|-FunctionDecl 0x55f354417b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f354417958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f354417a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55f354417bb0 <line:531:22>
| `-NonNullAttr 0x55f354417c08 <col:63, col:77> 1
|-FunctionDecl 0x55f354417db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f354417c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f354417cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55f354417e68 <line:535:22>
| `-NonNullAttr 0x55f354417ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f354418048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f354417f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f354417f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55f3544180f8 <line:538:22>
| `-NonNullAttr 0x55f354418150 <col:63, col:77> 1
|-FunctionDecl 0x55f3544182f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f354418198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f354418218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f3544183a8 <line:542:22>
| `-NonNullAttr 0x55f354418400 <col:63, col:80> 1 2
|-FunctionDecl 0x55f354418588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f354418448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f3544184c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55f354418638 <line:545:22>
| `-NonNullAttr 0x55f354418690 <col:63, col:77> 1
|-FunctionDecl 0x55f354418878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55f3544186d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f354418758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55f354418928 <line:548:22>
| `-NonNullAttr 0x55f354418980 <col:63, col:80> 1 2
|-FunctionDecl 0x55f354419b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f3544189c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f354419a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55f354419be8 <line:551:22>
| `-NonNullAttr 0x55f354419c40 <col:63, col:77> 1
|-FunctionDecl 0x55f354419f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55f354419d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f354419e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55f35441a028 <col:29>
| `-NonNullAttr 0x55f35441a080 <col:70, col:84> 1
|-FunctionDecl 0x55f35441a1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f35441a0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f35441a2a0 <line:556:22>
| `-NonNullAttr 0x55f35441a2f8 <col:63, col:77> 1
|-FunctionDecl 0x55f35441a400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f35441a348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f35441a4a8 <line:558:22>
| `-NonNullAttr 0x55f35441a500 <col:52, col:66> 1
|-FunctionDecl 0x55f35441a600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f35441a548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f35441a6a8 <line:560:19>
| `-NonNullAttr 0x55f35441a700 <col:49, col:63> 1
|-FunctionDecl 0x55f35441a938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f35441a748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f35441a7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f35441a9e8 <col:39>
| `-NonNullAttr 0x55f35441aa70 <col:69, col:86> 1 2
|-FunctionDecl 0x55f35441ab70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f35441aab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f35441ac18 <line:565:22>
| `-NonNullAttr 0x55f35441ac70 <col:52, col:66> 1
|-FunctionDecl 0x55f35441ad70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f35441acb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f35441ae18 <line:567:22>
| `-NonNullAttr 0x55f35441ae70 <col:52, col:66> 1
|-FunctionDecl 0x55f35441b028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f35441aeb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f35441af48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f35441b0d8 <col:39>
| `-NonNullAttr 0x55f35441b130 <col:69, col:86> 1 2
|-FunctionDecl 0x55f35441b230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f35441b178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f35441b2d8 <line:572:22>
| `-NonNullAttr 0x55f35441b330 <col:52, col:66> 1
|-FunctionDecl 0x55f35441b518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f35441b3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f35441b5c0 <line:574:22>
| `-NonNullAttr 0x55f35441b618 <col:63, col:77> 1
|-FunctionDecl 0x55f35441b720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f35441b668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f35441b7c8 <line:576:22>
| `-NonNullAttr 0x55f35441b820 <col:63, col:77> 1
|-FunctionDecl 0x55f35441ba80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f35441b868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f35441b8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f35441bb30 <line:580:22>
| `-NonNullAttr 0x55f35441bb88 <col:63, col:80> 1 2
|-FunctionDecl 0x55f35441bd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f35441bbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f35441bc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55f35441be48 <line:583:22>
| `-NonNullAttr 0x55f35441bea0 <col:63, col:77> 1
|-FunctionDecl 0x55f35441c048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f35441bee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f35441bf68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55f35441c0f8 <line:587:22>
| `-NonNullAttr 0x55f35441c150 <col:63, col:80> 1 2
|-FunctionDecl 0x55f35441c2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f35441c198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f35441c218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55f35441c388 <col:36>
| `-NonNullAttr 0x55f35441c3e0 <col:77, col:91> 1
|-FunctionDecl 0x55f35441c718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55f35441c4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f35441c5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55f35441c7c8 <line:592:22>
| `-NonNullAttr 0x55f35441c820 <col:63, col:77> 1
|-FunctionDecl 0x55f35441c998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f35441c868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f35441ca40 <line:594:22>
| `-NonNullAttr 0x55f35441cac0 <col:63, col:77> 1
|-FunctionDecl 0x55f35441cbc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f35441cb08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f35441cc68 <line:596:22>
| `-NonNullAttr 0x55f35441ccc0 <col:52, col:66> 1
|-FunctionDecl 0x55f35441cdc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f35441cd08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f35441ce68 <line:598:22>
| `-NonNullAttr 0x55f35441cec0 <col:52, col:66> 1
|-FunctionDecl 0x55f35441d0e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55f35441cf08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f35441cf80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55f35441d198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55f35441d4c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f35441d218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f35441d290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f35441d320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55f35441d580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55f35441d798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f35441d660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f35441d840 <line:607:22>
| `-NonNullAttr 0x55f35441d898 <col:63, col:77> 1
|-FunctionDecl 0x55f35441d9a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f35441d8e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f35441da48 <line:609:22>
| `-NonNullAttr 0x55f35441dad0 <col:63, col:77> 1
|-FunctionDecl 0x55f35441dcf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f35441db18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f35441db98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f35441dda8 <line:613:22>
| `-NonNullAttr 0x55f35441de00 <col:63, col:80> 1 2
|-FunctionDecl 0x55f35441e008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55f35441de48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f35441dec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55f35441e0b8 <col:37>
| `-NonNullAttr 0x55f35441e110 <col:78, col:92> 1
|-FunctionDecl 0x55f35441e328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55f35441e158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f35441e200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55f35441e3d8 <line:619:22>
| `-NonNullAttr 0x55f35441e430 <col:63, col:80> 1 2
|-FunctionDecl 0x55f35441e5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55f35441e478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f35441e4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55f35441e6a8 <line:622:22>
| `-NonNullAttr 0x55f35441e700 <col:63, col:77> 1
|-FunctionDecl 0x55f35441e9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55f35441e7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55f35441e860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55f35441ea58 <line:624:22>
| `-NonNullAttr 0x55f35441eae0 <col:63, col:77> 1
|-FunctionDecl 0x55f35441ec58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f35441eb28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f35441ed00 <line:626:22>
| `-NonNullAttr 0x55f35441ed58 <col:63, col:77> 1
|-FunctionDecl 0x55f35441ee60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f35441eda8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f35441ef08 <line:628:22>
| `-NonNullAttr 0x55f35441ef60 <col:52, col:66> 1
|-FunctionDecl 0x55f35441f060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f35441efa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f35441f108 <line:630:22>
| `-NonNullAttr 0x55f35441f160 <col:52, col:66> 1
|-FunctionDecl 0x55f35441f260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f35441f1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f35441f308 <line:632:22>
| `-NonNullAttr 0x55f35441f360 <col:52, col:66> 1
|-FunctionDecl 0x55f35441f738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55f35441f440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55f35441f550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f35441f5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55f35441f7f0 <line:636:22>
| `-NonNullAttr 0x55f35441f848 <col:63, col:77> 1
|-FunctionDecl 0x55f35441f9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f35441f898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f35441fa70 <line:638:22>
| `-NonNullAttr 0x55f354420b00 <col:63, col:77> 1
|-FunctionDecl 0x55f354420c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f354420b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f354420ca8 <line:640:22>
| `-NonNullAttr 0x55f354420d00 <col:52, col:66> 1
|-FunctionDecl 0x55f354420ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f354420db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f354420f90 <line:642:22>
| `-NonNullAttr 0x55f354420fe8 <col:63, col:77> 1
|-FunctionDecl 0x55f3544210f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f354421038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f354421198 <line:644:22>
| `-NonNullAttr 0x55f3544211f0 <col:63, col:77> 1
|-FunctionDecl 0x55f354421418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f354421238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f3544212b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f3544214c8 <line:648:22>
| `-NonNullAttr 0x55f354421520 <col:63, col:80> 1 2
|-FunctionDecl 0x55f354421728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55f354421568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55f3544215e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55f3544217d8 <line:651:22>
| `-NonNullAttr 0x55f354421830 <col:63, col:77> 1
|-FunctionDecl 0x55f354421b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55f354421910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55f354421a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55f354421c48 <line:654:22>
| `-NonNullAttr 0x55f354421ca0 <col:63, col:77> 1
|-FunctionDecl 0x55f354421df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55f354421ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f354421ea0 <col:69>
|-FunctionDecl 0x55f354422018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55f354421f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f3544220c0 <col:72>
|-FunctionDecl 0x55f3544222f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55f354422128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55f3544221d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55f3544223a8 <col:44>
|-FunctionDecl 0x55f3544225c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55f354422410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f354422488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55f354422678 <line:661:22>
| `-NonNullAttr 0x55f3544226d0 <col:63, col:77> 2
|-FunctionDecl 0x55f354422b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55f3544227b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55f3544228c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55f3544229d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55f354422be8 <col:47>
|-FunctionDecl 0x55f354422cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55f354422c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f354422e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55f354422db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f354422f10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55f354422fd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55f354423090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55f354423148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55f3544231c8 prev 0x55f354423148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55f354423230 <col:24> 'int' 0
|-VarDecl 0x55f354423268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55f3544232e8 prev 0x55f354423268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55f354423350 <col:27> 'int' 0
|-VarDecl 0x55f354423388 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55f354423408 prev 0x55f354423388 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55f354423470 <col:27> 'int' 0
|-VarDecl 0x55f3544234a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55f354423528 prev 0x55f3544234a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55f354423590 <col:27> 'int' 0
|-VarDecl 0x55f3544235c0 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55f354423638 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55f3544236b8 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x55f354423738 prev 0x55f3544236b8 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55f3544237a0 <col:9> 'int' 0
|-VarDecl 0x55f3544237d0 <line:683:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55f354423850 <line:684:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55f3544238c8 <line:685:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55f354423940 <line:686:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55f3544239b8 <line:687:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55f354423a30 <line:688:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55f354423b00 <line:689:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55f354423b78 <line:690:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55f354423bf0 <line:691:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55f354423c70 <line:692:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55f354423cf0 <line:693:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55f354423d68 <line:694:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55f354423de8 <line:695:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55f354423e60 <line:696:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55f354423ee0 <line:697:1, col:5> col:5 used y 'int'
|-VarDecl 0x55f354423f60 prev 0x55f354423ee0 <line:698:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55f354423fc8 <col:9> 'int' 0
|-VarDecl 0x55f354423ff8 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55f354424070 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55f354424188 prev 0x55f354422cf0 <line:701:1, line:740:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55f3544240f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f354428b80 <line:702:1, line:740:1>
|   |-CallExpr 0x55f354424298 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f354424280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354424230 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3544242f8 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f3544242b8 <col:3> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   | `-IntegerLiteral 0x55f3544242d8 <col:7> 'int' 1
|   |-CallExpr 0x55f354424350 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f354424338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354424318 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f3544243a8 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f354424390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354424370 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f354424690 <line:707:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f3544243c8 <col:3> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   | `-ConditionalOperator 0x55f354424660 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f354424488 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f354424440 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f354424428 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f3544243e8 <col:7> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f354424470 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f354424458 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f354424408 <col:25> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55f354424648 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3544244a8 <col:42> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55f354424628 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f3544245f8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f354424568 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f354424520 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f354424508 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f3544244c8 <col:55> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f354424550 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f354424538 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f3544244e8 <col:73> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f3544245c8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f354424588 <col:90> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f3544245e0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3544245a8 <col:102> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   |-BinaryOperator 0x55f354424898 <line:708:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f3544246b0 <col:3> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f354424880 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f354424850 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f354424770 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f354424728 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f354424710 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f3544246d0 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f354424758 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f354424740 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f3544246f0 <col:38> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f354424808 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f3544247c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f354424790 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f354424838 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f354424820 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3544247e8 <col:66> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f354424ba0 <line:709:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f3544248b8 <col:3> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f354424b88 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f354424b58 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f354424a58 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f354424978 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f354424930 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f354424918 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f3544248d8 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f354424960 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f354424948 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f3544248f8 <col:38> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55f354424a38 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f3544249f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f3544249d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f354424998 <col:56> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f354424a20 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f354424a08 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f3544249b8 <col:74> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f354424b10 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f354424aa8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f354424a78 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f354424b40 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f354424b28 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f354424ad0 <col:102> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f354424da8 <line:710:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f354424bc0 <col:3> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f354424d90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f354424d60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f354424c80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f354424c38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f354424c20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f354424be0 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f354424c68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f354424c50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f354424c00 <col:38> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f354424d18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f354424cd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f354424ca0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f354424d48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f354424d30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f354424cf8 <col:66> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f354425090 <line:711:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f354424dc8 <col:3> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f354425078 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f354425048 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f354424f68 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f354424e88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f354424e40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f354424e28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f354424de8 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f354424e70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f354424e58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f354424e08 <col:38> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55f354424f48 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f354424f00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f354424ee8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f354424ea8 <col:56> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f354424f30 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f354424f18 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f354424ec8 <col:74> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f354425000 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f354424fb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f354424f88 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f354425030 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f354425018 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f354424fe0 <col:102> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55f3544250e8 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f3544250d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3544250b0 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f354425140 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f354425128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354425108 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f354425208 <line:714:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f354425160 <col:3> '_Bool' lvalue Var 0x55f354423ff8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55f3544251e8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f3544251d0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f354425180 <col:19> '_Bool (void)' Function 0x55f3543c9770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f3544252a0 <line:715:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f354425228 <col:3> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55f354425280 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f354425268 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f354425248 <col:19> '_Bool (void)' Function 0x55f3543c9770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f354425318 <line:716:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55f3544252c0 <col:3> '_Bool' lvalue Var 0x55f3544237d0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55f354425300 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3544252e0 <col:21> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55f354425390 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f354425338 <col:3> 'int' lvalue Var 0x55f354423850 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55f354425378 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f354425358 <col:15> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   |-BinaryOperator 0x55f3544257c8 <line:718:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55f3544253b0 <col:3> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   | `-ConditionalOperator 0x55f354425798 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55f3544255c0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55f3544254e0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55f354425408 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55f3544253f0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55f3544253d0 <col:8> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55f3544254c0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55f354425458 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55f354425440 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55f354425420 <col:27> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55f3544254a8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55f354425490 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55f354425470 <col:46> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55f3544255a0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55f354425538 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55f354425520 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55f354425500 <col:65> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55f354425588 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55f354425570 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55f354425550 <col:84> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55f354425780 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3544255e0 <col:101> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   |   `-ParenExpr 0x55f354425760 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55f354425730 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55f3544256a0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f354425658 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f354425640 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f354425600 <col:106> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f354425688 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f354425670 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f354425620 <col:124> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f354425700 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f3544256c0 <col:141> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55f354425718 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f3544256e0 <col:153> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55f354425cf8 <line:719:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f3544257e8 <col:3> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55f354425cc8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f354425c98 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f354425c80 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f354425808 <col:15> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f354425cb0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f354425828 <col:31> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55f354425c60 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f354425c30 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f354425a38 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f354425958 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f354425880 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f354425868 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f354425848 <col:45> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f354425938 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f3544258d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f3544258b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f354425898 <col:64> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55f354425920 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f354425908 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f3544258e8 <col:83> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f354425a18 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f3544259b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f354425998 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f354425978 <col:102> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55f354425a00 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f3544259e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f3544259c8 <col:121> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f354425c18 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f354425a58 <col:138> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55f354425bf8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f354425bc8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f354425b38 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f354425ad0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f354425ab8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f354425a78 <col:151> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f354425b20 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f354425ae8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f354425a98 <col:169> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55f354425b98 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f354425b58 <col:186> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55f354425bb0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f354425b78 <col:198> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55f354426208 <line:720:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f354425d18 <col:3> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55f3544261d8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f3544261a8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f354426190 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f354425d38 <col:15> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f3544261c0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f354425d58 <col:31> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55f354426170 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f354426140 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f354425f68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f354425e88 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f354425db0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f354425d98 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f354425d78 <col:45> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f354425e68 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f354425e00 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f354425de8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f354425dc8 <col:64> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55f354425e50 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f354425e38 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f354425e18 <col:83> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f354425f48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f354425ee0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f354425ec8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f354425ea8 <col:102> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55f354425f30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f354425f18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f354425ef8 <col:121> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f354426128 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f354425f88 <col:138> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55f354426108 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f3544260d8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f354426048 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f354426000 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f354425fe8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f354425fa8 <col:151> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f354426030 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f354426018 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f354425fc8 <col:169> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55f3544260a8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f354426068 <col:186> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55f3544260c0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f354426088 <col:198> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55f3544267b0 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f354426228 <col:3> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f354426798 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f354426768 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f354426720 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f354426708 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f354426248 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f354426750 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f354426738 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f354426268 <col:36> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55f3544266e8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f3544266b8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f354426478 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f354426398 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f3544262c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f3544262a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f354426288 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f354426378 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f354426310 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f3544262f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f3544262d8 <col:74> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f354426360 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f354426348 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f354426328 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f354426458 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f3544263f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f3544263d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f3544263b8 <col:112> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f354426440 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f354426428 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f354426408 <col:131> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f3544266a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f354426688 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f354426498 <col:148> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55f354426668 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f354426638 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f354426558 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f354426510 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f3544264f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f3544264b8 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f354426540 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f354426528 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f3544264d8 <col:184> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f3544265f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f3544265a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f354426578 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f354426620 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f354426608 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f3544265d0 <col:212> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f354426d88 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f3544267d0 <col:3> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f354426d70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f354426d40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f354426cf8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f354426ce0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f3544267f0 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f354426d28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f354426d10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f354426810 <col:36> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55f354426cc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f354426c90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f354426a20 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f354426940 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f354426868 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f354426850 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f354426830 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f354426920 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f3544268b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f3544268a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f354426880 <col:74> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f354426908 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f3544268f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f3544268d0 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f354426a00 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f354426998 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f354426980 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f354426960 <col:112> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f3544269e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f3544269d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f3544269b0 <col:131> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f354426c78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f354426c60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f354426a40 <col:148> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55f354426c40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f354426c10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f354426b00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f354426ab8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f354426aa0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f354426a60 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f354426ae8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f354426ad0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f354426a80 <col:184> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f354426be0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f354426b60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f354426b30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f354426bf8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f354426bb8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f354426b88 <col:219> 'int' 0
|   |-BinaryOperator 0x55f354427330 <line:723:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f354426da8 <col:3> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f354427318 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3544272e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f3544272a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f354427288 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f354426dc8 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f3544272d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f3544272b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f354426de8 <col:36> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55f354427268 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f354427238 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f354426ff8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f354426f18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f354426e40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f354426e28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f354426e08 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f354426ef8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f354426e90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f354426e78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f354426e58 <col:74> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f354426ee0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f354426ec8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f354426ea8 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f354426fd8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f354426f70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f354426f58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f354426f38 <col:112> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f354426fc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f354426fa8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f354426f88 <col:131> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f354427220 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f354427208 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f354427018 <col:148> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55f3544271e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f3544271b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f3544270d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f354427090 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f354427078 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f354427038 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f3544270c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f3544270a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f354427058 <col:184> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f354427170 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f354427128 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f3544270f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f3544271a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f354427188 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f354427150 <col:212> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f3544278f8 <line:724:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f354427350 <col:3> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f3544278e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3544278b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f354427868 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f354427850 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f354427370 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f354427898 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f354427880 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f354427390 <col:36> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55f354427830 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f354427800 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f3544275a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f3544274c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f3544273e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f3544273d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f3544273b0 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f3544274a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f354427438 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f354427420 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f354427400 <col:74> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f354427488 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f354427470 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f354427450 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f354427580 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f354427518 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f354427500 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f3544274e0 <col:112> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f354427568 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f354427550 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f354427530 <col:131> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f3544277e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f3544277d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f3544275c0 <col:148> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55f3544277b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f354427780 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f354427680 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f354427638 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f354427620 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f3544275e0 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f354427668 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f354427650 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f354427600 <col:184> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f354427750 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f3544276d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f3544276a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f354427768 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f354427728 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f3544276f8 <col:219> 'int' 0
|   |-BinaryOperator 0x55f354427970 <line:725:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f354427918 <col:3> 'int' lvalue Var 0x55f3544232e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f354427958 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f354427938 <col:25> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   |-BinaryOperator 0x55f354427aa0 <line:726:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55f354427990 <col:3> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   | `-ConditionalOperator 0x55f354427a70 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55f354427a28 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f354427a10 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f3544279b0 <col:7> '_Bool' lvalue Var 0x55f3544237d0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55f354427a40 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3544279d0 <col:25> 'int' lvalue Var 0x55f354423850 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55f354427a58 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f3544279f0 <col:37> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   |-BinaryOperator 0x55f354427b68 <line:727:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55f354427ac0 <col:3> '_Bool' lvalue Var 0x55f3544237d0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55f354427b40 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f354427ae0 <col:28> 'int' 0
|   |-CallExpr 0x55f354427bc0 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f354427ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354427b88 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f354427c18 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f354427c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354427be0 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f354427f00 <line:730:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f354427c38 <col:3> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   | `-ConditionalOperator 0x55f354427ed0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f354427cf8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f354427cb0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f354427c98 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f354427c58 <col:7> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f354427ce0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f354427cc8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f354427c78 <col:25> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55f354427eb8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f354427d18 <col:42> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55f354427e98 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f354427e68 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f354427dd8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f354427d90 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f354427d78 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f354427d38 <col:55> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f354427dc0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f354427da8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f354427d58 <col:73> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f354427e38 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f354427df8 <col:90> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f354427e50 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f354427e18 <col:102> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   |-BinaryOperator 0x55f354428108 <line:731:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f354427f20 <col:3> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f3544280f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3544280c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f354427fe0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f354427f98 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f354427f80 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f354427f40 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f354427fc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f354427fb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f354427f60 <col:38> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f354428078 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f354428030 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f354428000 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f3544280a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f354428090 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f354428058 <col:66> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f3544283f0 <line:732:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f354428128 <col:3> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f3544283d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3544283a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f3544282c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f3544281e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f3544281a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f354428188 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f354428148 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f3544281d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f3544281b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f354428168 <col:38> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55f3544282a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f354428260 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f354428248 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f354428208 <col:56> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f354428290 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f354428278 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f354428228 <col:74> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f354428360 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f354428318 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f3544282e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f354428390 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f354428378 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f354428340 <col:102> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f3544285f8 <line:733:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f354428410 <col:3> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f3544285e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f3544285b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f3544284d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f354428488 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f354428470 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f354428430 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f3544284b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f3544284a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f354428450 <col:38> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f354428568 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f354428520 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f3544284f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f354428598 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f354428580 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f354428548 <col:66> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f3544288e0 <line:734:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f354428618 <col:3> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f3544288c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f354428898 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f3544287b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f3544286d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f354428690 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f354428678 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f354428638 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f3544286c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f3544286a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f354428658 <col:38> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55f354428798 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f354428750 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f354428738 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f3544286f8 <col:56> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f354428780 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f354428768 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f354428718 <col:74> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55f354428850 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f354428808 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f3544287d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f354428880 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f354428868 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f354428830 <col:102> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55f354428938 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f354428920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354428900 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f354428990 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f354428978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354428958 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f354428a48 <line:737:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f3544289b0 <col:3> 'int' lvalue Var 0x55f3544231c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f354428a28 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f354428a10 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f3544289d0 <col:22> 'int' lvalue Var 0x55f3544231c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f3544289f0 <col:41> 'int' 1
|   |-CallExpr 0x55f354428aa0 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f354428a88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354428a68 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f354428b70 <line:739:3, col:36>
|     `-CallExpr 0x55f354428b50 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f354428b10 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f354428ac0 <col:10> 'void *(void)' Function 0x55f3543c9ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f354428d68 prev 0x55f354422e48 <line:741:1, line:787:1> line:741:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55f354428cd0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f35442d080 <line:742:1, line:787:1>
|   |-CallExpr 0x55f354428e48 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f354428e30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354428e10 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f354428ec0 <line:744:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f354428e68 <col:3> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55f354428ea8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f354428e88 <col:15> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55f354428f20 <line:745:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f354428ee0 <col:3> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55f354428f00 <col:15> 'int' 2
|   |-BinaryOperator 0x55f354428f98 <line:746:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f354428f40 <col:3> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f354428f80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f354428f60 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f354429030 <line:747:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f354428fb8 <col:3> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55f354429008 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f354428fd8 <col:27> 'int' 1
|   |-CallExpr 0x55f3544291b8 <line:748:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55f3544291a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f354429050 <col:3> 'void (int)' Function 0x55f3543c9d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55f354429150 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55f354429130 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55f354429110 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55f3544290c8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55f3544290b0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55f354429070 <col:23> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55f3544290f8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55f3544290e0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55f354429090 <col:41> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f354429238 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f3544291e0 <col:3> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55f354429220 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f354429200 <col:20> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55f3544292b0 <line:750:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f354429258 <col:3> '_Bool' lvalue Var 0x55f354423b00 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f354429298 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f354429278 <col:20> '_Bool' lvalue Var 0x55f354423940 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f354429328 <line:751:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f3544292d0 <col:3> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f354429310 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3544292f0 <col:20> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f3544293c0 <line:752:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f354429348 <col:3> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55f354429398 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f354429368 <col:27> 'int' 1
|   |-CallExpr 0x55f354429418 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f354429400 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3544293e0 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f354429470 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f354429458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354429438 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3544294d0 <line:755:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f354429490 <col:3> 'int' lvalue Var 0x55f354423f60 'y' 'int'
|   | `-IntegerLiteral 0x55f3544294b0 <col:7> 'int' 1
|   |-CallExpr 0x55f354429528 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f354429510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f3544294f0 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f354429580 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f354429568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354429548 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f3544295f8 <line:758:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f3544295a0 <col:3> 'int' lvalue Var 0x55f354423408 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f3544295e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f3544295c0 <col:25> 'int' lvalue Var 0x55f354423f60 'y' 'int'
|   |-CallExpr 0x55f354429650 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f354429638 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354429618 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f3544296a8 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f354429690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f354429670 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f354429740 <line:761:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f3544296c8 <col:3> '_Bool' lvalue Var 0x55f354423ff8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55f354429720 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f354429708 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f3544296e8 <col:19> '_Bool (void)' Function 0x55f3543c9770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f3544297d8 <line:762:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f354429760 <col:3> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55f3544297b8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f3544297a0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f354429780 <col:19> '_Bool (void)' Function 0x55f3543c9770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f354429850 <line:763:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55f3544297f8 <col:3> '_Bool' lvalue Var 0x55f3544237d0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55f354429838 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f354429818 <col:21> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55f3544298c8 <line:764:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f354429870 <col:3> 'int' lvalue Var 0x55f354423850 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55f3544298b0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f354429890 <col:15> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   |-BinaryOperator 0x55f354429d28 <line:765:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55f3544298e8 <col:3> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   | `-ConditionalOperator 0x55f354429cf8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55f354429af8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55f354429a18 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55f354429940 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55f354429928 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55f354429908 <col:8> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55f3544299f8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55f354429990 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55f354429978 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55f354429958 <col:27> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55f3544299e0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55f3544299c8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55f3544299a8 <col:46> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55f354429ad8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55f354429a70 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55f354429a58 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55f354429a38 <col:65> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55f354429ac0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55f354429aa8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55f354429a88 <col:84> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f354429ce0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f354429b18 <col:101> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   |   `-ParenExpr 0x55f354429cc0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55f354429c90 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55f354429c00 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f354429bb8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f354429ba0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f354429b60 <col:106> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f354429be8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f354429bd0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f354429b80 <col:124> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f354429c60 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f354429c20 <col:141> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55f354429c78 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f354429c40 <col:153> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55f35442a238 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f354429d48 <col:3> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55f35442a208 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f35442a1d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f35442a1c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f354429d68 <col:15> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f35442a1f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f354429d88 <col:31> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55f35442a1a0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f35442a170 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f354429f98 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f354429eb8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f354429de0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f354429dc8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f354429da8 <col:45> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f354429e98 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f354429e30 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f354429e18 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f354429df8 <col:64> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55f354429e80 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f354429e68 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f354429e48 <col:83> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f354429f78 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f354429f10 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f354429ef8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f354429ed8 <col:102> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55f354429f60 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f354429f48 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f354429f28 <col:121> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f35442a158 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f354429fb8 <col:138> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55f35442a138 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f35442a108 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f35442a078 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f35442a030 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f35442a018 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f354429fd8 <col:151> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f35442a060 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f35442a048 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f354429ff8 <col:169> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55f35442a0d8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f35442a098 <col:186> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55f35442a0f0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f35442a0b8 <col:198> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55f35442a748 <line:767:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f35442a258 <col:3> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55f35442a718 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f35442a6e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f35442a6d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f35442a278 <col:15> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f35442a700 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f35442a298 <col:31> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55f35442a6b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f35442a680 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f35442a4a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f35442a3c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f35442a2f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f35442a2d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f35442a2b8 <col:45> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f35442a3a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f35442a340 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f35442a328 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f35442a308 <col:64> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55f35442a390 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f35442a378 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f35442a358 <col:83> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f35442a488 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f35442a420 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f35442a408 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f35442a3e8 <col:102> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55f35442a470 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f35442a458 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f35442a438 <col:121> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f35442a668 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f35442a4c8 <col:138> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55f35442a648 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f35442a618 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f35442a588 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f35442a540 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f35442a528 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f35442a4e8 <col:151> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f35442a570 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f35442a558 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f35442a508 <col:169> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55f35442a5e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f35442a5a8 <col:186> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55f35442a600 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f35442a5c8 <col:198> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55f35442ad00 <line:768:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f35442a768 <col:3> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f35442ace8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f35442acb8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f35442ac70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f35442ac58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f35442a788 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f35442aca0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f35442ac88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f35442a7a8 <col:36> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55f35442ac38 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f35442ac08 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f35442a9b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f35442a8d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f35442a800 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f35442a7e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f35442a7c8 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f35442a8b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f35442a850 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f35442a838 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f35442a818 <col:74> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f35442a8a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f35442a888 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f35442a868 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f35442a998 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f35442a930 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f35442a918 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f35442a8f8 <col:112> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f35442a980 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f35442a968 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f35442a948 <col:131> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f35442abf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f35442abd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f35442a9d8 <col:148> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55f35442abb8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f35442ab88 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f35442aa98 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f35442aa50 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f35442aa38 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f35442a9f8 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f35442aa80 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f35442aa68 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f35442aa18 <col:184> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f35442ab30 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f35442aae8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f35442aab8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f35442ab70 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f35442ab48 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f35442ab10 <col:212> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f35442b2c8 <line:769:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f35442ad20 <col:3> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f35442b2b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f35442b280 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f35442b238 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f35442b220 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f35442ad40 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f35442b268 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f35442b250 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f35442ad60 <col:36> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55f35442b200 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f35442b1d0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f35442af70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f35442ae90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f35442adb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f35442ada0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f35442ad80 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f35442ae70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f35442ae08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f35442adf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f35442add0 <col:74> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f35442ae58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f35442ae40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f35442ae20 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f35442af50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f35442aee8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f35442aed0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f35442aeb0 <col:112> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f35442af38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f35442af20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f35442af00 <col:131> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f35442b1b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f35442b1a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f35442af90 <col:148> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55f35442b180 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f35442b150 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f35442b050 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f35442b008 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f35442aff0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f35442afb0 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f35442b038 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f35442b020 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f35442afd0 <col:184> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f35442b120 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f35442b0a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f35442b070 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f35442b138 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f35442b0f8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f35442b0c8 <col:219> 'int' 0
|   |-BinaryOperator 0x55f35442b870 <line:770:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f35442b2e8 <col:3> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f35442b858 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f35442b828 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f35442b7e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f35442b7c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f35442b308 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f35442b810 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f35442b7f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f35442b328 <col:36> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55f35442b7a8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f35442b778 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f35442b538 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f35442b458 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f35442b380 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f35442b368 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f35442b348 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f35442b438 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f35442b3d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f35442b3b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f35442b398 <col:74> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f35442b420 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f35442b408 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f35442b3e8 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f35442b518 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f35442b4b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f35442b498 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f35442b478 <col:112> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f35442b500 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f35442b4e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f35442b4c8 <col:131> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f35442b760 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f35442b748 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f35442b558 <col:148> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55f35442b728 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f35442b6f8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f35442b618 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f35442b5d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f35442b5b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f35442b578 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f35442b600 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f35442b5e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f35442b598 <col:184> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f35442b6b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f35442b668 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f35442b638 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f35442b6e0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f35442b6c8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f35442b690 <col:212> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f35442be58 <line:771:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f35442b890 <col:3> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f35442be40 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f35442be10 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f35442bdc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f35442bdb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f35442b8b0 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f35442bdf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f35442bde0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f35442b8d0 <col:36> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55f35442bd90 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f35442bd60 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f35442bae0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f35442ba00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f35442b928 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f35442b910 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f35442b8f0 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f35442b9e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f35442b978 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f35442b960 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f35442b940 <col:74> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f35442b9c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f35442b9b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f35442b990 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f35442bac0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f35442ba58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f35442ba40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f35442ba20 <col:112> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f35442baa8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f35442ba90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f35442ba70 <col:131> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f35442bd48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f35442bd30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f35442bb00 <col:148> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55f35442bd10 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f35442bce0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f35442bbe0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f35442bb98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f35442bb80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f35442bb20 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f35442bbc8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f35442bbb0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f35442bb40 <col:184> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f35442bcb0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f35442bc30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f35442bc00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f35442bcc8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f35442bc88 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f35442bc58 <col:219> 'int' 0
|   |-BinaryOperator 0x55f35442bed0 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f35442be78 <col:3> 'int' lvalue Var 0x55f354423528 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55f35442beb8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f35442be98 <col:25> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   |-BinaryOperator 0x55f35442c000 <line:773:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55f35442bef0 <col:3> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   | `-ConditionalOperator 0x55f35442bfd0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55f35442bf88 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f35442bf70 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f35442bf10 <col:7> '_Bool' lvalue Var 0x55f3544237d0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55f35442bfa0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f35442bf30 <col:25> 'int' lvalue Var 0x55f354423850 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55f35442bfb8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f35442bf50 <col:37> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   |-BinaryOperator 0x55f35442c098 <line:774:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55f35442c020 <col:3> '_Bool' lvalue Var 0x55f3544237d0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55f35442c070 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f35442c040 <col:28> 'int' 0
|   |-CallExpr 0x55f35442c0f0 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f35442c0d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f35442c0b8 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f35442c148 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f35442c130 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f35442c110 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f35442c430 <line:777:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f35442c168 <col:3> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   | `-ConditionalOperator 0x55f35442c400 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f35442c228 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f35442c1e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f35442c1c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f35442c188 <col:7> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f35442c210 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f35442c1f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f35442c1a8 <col:25> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f35442c3e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f35442c248 <col:42> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55f35442c3c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f35442c398 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f35442c308 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f35442c2c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f35442c2a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f35442c268 <col:55> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f35442c2f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f35442c2d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f35442c288 <col:73> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f35442c368 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f35442c328 <col:90> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f35442c380 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f35442c348 <col:102> 'int' lvalue Var 0x55f354423738 'x' 'int'
|   |-BinaryOperator 0x55f35442c638 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f35442c450 <col:3> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f35442c620 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f35442c5f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f35442c510 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f35442c4c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f35442c4b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f35442c470 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f35442c4f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f35442c4e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f35442c490 <col:38> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f35442c5a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f35442c560 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f35442c530 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f35442c5d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f35442c5c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f35442c588 <col:66> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f35442c920 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f35442c658 <col:3> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f35442c908 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f35442c8d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f35442c7f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f35442c718 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f35442c6d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f35442c6b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f35442c678 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f35442c700 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f35442c6e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f35442c698 <col:38> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f35442c7d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f35442c790 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f35442c778 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f35442c738 <col:56> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f35442c7c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f35442c7a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f35442c758 <col:74> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f35442c890 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f35442c848 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f35442c818 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f35442c8c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f35442c8a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f35442c870 <col:102> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f35442cb28 <line:780:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f35442c940 <col:3> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f35442cb10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f35442cae0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f35442ca00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f35442c9b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f35442c9a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f35442c960 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f35442c9e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f35442c9d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f35442c980 <col:38> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f35442ca98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f35442ca50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f35442ca20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f35442cac8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f35442cab0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f35442ca78 <col:66> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f35442ce38 <line:781:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f35442cb48 <col:3> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f35442ce20 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f35442cdf0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f35442cd10 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f35442cc30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f35442cbe8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f35442cbd0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f35442cb90 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f35442cc18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f35442cc00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f35442cbb0 <col:38> '_Bool' lvalue Var 0x55f3544239b8 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f35442ccf0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f35442cca8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f35442cc90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f35442cc50 <col:56> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f35442ccd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f35442ccc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f35442cc70 <col:74> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f35442cda8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f35442cd60 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f35442cd30 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f35442cdd8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f35442cdc0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f35442cd88 <col:102> '_Bool' lvalue Var 0x55f354423b78 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55f35442ce90 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f35442ce78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f35442ce58 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f35442cee8 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f35442ced0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f35442ceb0 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f35442cfa0 <line:784:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f35442cf08 <col:3> 'int' lvalue Var 0x55f3544231c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f35442cf80 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f35442cf68 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f35442cf28 <col:22> 'int' lvalue Var 0x55f3544231c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f35442cf48 <col:41> 'int' 1
|   |-CallExpr 0x55f35442cff8 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f35442cfe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f35442cfc0 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f35442d070 <line:786:3, col:36>
|     `-CallExpr 0x55f35442d050 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f35442d038 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f35442d018 <col:10> 'void *(void)' Function 0x55f3543c9ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f35442d210 prev 0x55f354422f10 <line:788:1, line:790:1> line:788:6 fence 'void ()'
| `-CompoundStmt 0x55f35442d2b0 <line:789:1, line:790:1>
|-FunctionDecl 0x55f35442d2e0 prev 0x55f354422fd0 <line:791:1, line:793:1> line:791:6 isync 'void ()'
| `-CompoundStmt 0x55f35442d380 <line:792:1, line:793:1>
|-FunctionDecl 0x55f35442d3b0 prev 0x55f354423090 <line:794:1, line:796:1> line:794:6 lwfence 'void ()'
| `-CompoundStmt 0x55f35442d450 <line:795:1, line:796:1>
`-FunctionDecl 0x55f35442d4b8 <line:797:1, line:832:1> line:797:5 main 'int ()'
  `-CompoundStmt 0x55f354431850 <line:798:1, line:832:1>
    |-DeclStmt 0x55f35442d5d0 <line:799:3, col:18>
    | `-VarDecl 0x55f35442d568 <col:3, col:13> col:13 used t1621 'pthread_t':'unsigned long'
    |-CallExpr 0x55f35442d7d8 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f35442d7c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f35442d5e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f35440a5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f35442d628 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f35442d608 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f35442d568 't1621' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f35442d818 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f35442d6a0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f35442d678 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f35442d640 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f35442d830 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f35442d6c0 <col:39> 'void *(void *)' Function 0x55f354424188 'P0' 'void *(void *)'
    | `-ParenExpr 0x55f35442d740 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f35442d718 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f35442d6e0 <col:52> 'int' 0
    |-DeclStmt 0x55f35442d8c0 <line:801:3, col:18>
    | `-VarDecl 0x55f35442d858 <col:3, col:13> col:13 used t1622 'pthread_t':'unsigned long'
    |-CallExpr 0x55f35442da68 <line:802:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f35442da50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f35442d8d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f35440a5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f35442d918 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f35442d8f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f35442d858 't1622' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f35442daa8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f35442d990 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f35442d968 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f35442d930 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f35442dac0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f35442d9b0 <col:39> 'void *(void *)' Function 0x55f354428d68 'P1' 'void *(void *)'
    | `-ParenExpr 0x55f35442da30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f35442da08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f35442d9d0 <col:52> 'int' 0
    |-CallExpr 0x55f35442db10 <line:803:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f35442daf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f35442dad8 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f35442dbf0 <line:804:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55f35442db30 <col:3> '_Bool' lvalue Var 0x55f3544235c0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55f35442dbd8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55f35442dbb8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55f35442dba0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55f35442db50 <col:21> 'int' lvalue Var 0x55f3544231c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55f35442db70 <col:41> 'int' 2
    |-CallExpr 0x55f35442dc48 <line:805:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f35442dc30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f35442dc10 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f35442dcc0 <line:806:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f35442dca8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f35442dc68 <col:3> 'void (int)' Function 0x55f3543c9940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55f35442dd00 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f35442dce8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f35442dc88 <col:21> '_Bool' lvalue Var 0x55f3544235c0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55f35442dd50 <line:807:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f35442dd38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f35442dd18 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f35442e038 <line:808:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55f35442dd70 <col:3> 'int' lvalue Var 0x55f354423738 'x' 'int'
    | `-ConditionalOperator 0x55f35442e008 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55f35442de30 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55f35442dde8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55f35442ddd0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55f35442dd90 <col:7> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55f35442de18 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55f35442de00 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55f35442ddb0 <col:25> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f35442dff0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f35442de50 <col:42> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55f35442dfd0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55f35442dfa0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55f35442df10 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f35442dec8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f35442deb0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f35442de70 <col:55> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f35442def8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f35442dee0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f35442de90 <col:73> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f35442df70 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f35442df30 <col:90> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55f35442df88 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f35442df50 <col:102> 'int' lvalue Var 0x55f354423738 'x' 'int'
    |-BinaryOperator 0x55f35442e240 <line:809:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f35442e058 <col:3> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f35442e228 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f35442e1f8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f35442e118 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f35442e0d0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f35442e0b8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f35442e078 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f35442e100 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f35442e0e8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f35442e098 <col:38> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f35442e1b0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f35442e168 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f35442e138 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f35442e1e0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f35442e1c8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f35442e190 <col:66> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f35442e528 <line:810:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f35442e260 <col:3> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f35442e510 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f35442e4e0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f35442e400 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f35442e320 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f35442e2d8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f35442e2c0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f35442e280 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f35442e308 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f35442e2f0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f35442e2a0 <col:38> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f35442e3e0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f35442e398 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f35442e380 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f35442e340 <col:56> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f35442e3c8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f35442e3b0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f35442e360 <col:74> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f35442e498 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f35442e450 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f35442e420 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f35442e4c8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f35442e4b0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f35442e478 <col:102> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55f35442e730 <line:811:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f35442e548 <col:3> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f35442e718 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f35442e6e8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f35442e608 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f35442e5c0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f35442e5a8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f35442e568 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f35442e5f0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f35442e5d8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f35442e588 <col:38> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f35442e6a0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f35442e658 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f35442e628 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f35442e6d0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f35442e6b8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f35442e680 <col:66> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f35442ea18 <line:812:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f35442e750 <col:3> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f35442ea00 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f35442e9d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f35442e8f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f35442e810 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f35442e7c8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f35442e7b0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f35442e770 <col:20> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f35442e7f8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f35442e7e0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f35442e790 <col:38> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f35442e8d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f35442e888 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f35442e870 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f35442e830 <col:56> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f35442e8b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f35442e8a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f35442e850 <col:74> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f35442e988 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f35442e940 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f35442e910 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f35442e9b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f35442e9a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f35442e968 <col:102> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55f35442ea70 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f35442ea58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f35442ea38 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f35442eac8 <line:814:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f35442eab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f35442ea90 <col:3> 'void ()' Function 0x55f3543c9fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f35442eb60 <line:815:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55f35442eae8 <col:3> '_Bool' lvalue Var 0x55f354423ff8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55f35442eb40 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55f35442eb28 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55f35442eb08 <col:19> '_Bool (void)' Function 0x55f3543c9770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55f35442ec08 <line:816:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55f35442eb80 <col:3> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55f35442ebe8 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55f35442ebd0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55f35442ebb0 <col:19> '_Bool (void)' Function 0x55f3543c9770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55f35442ec80 <line:817:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55f35442ec28 <col:3> '_Bool' lvalue Var 0x55f3544237d0 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55f35442ec68 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55f35442ec48 <col:21> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55f35442ecf8 <line:818:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55f35442eca0 <col:3> 'int' lvalue Var 0x55f354423850 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55f35442ece0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55f35442ecc0 <col:15> 'int' lvalue Var 0x55f354423738 'x' 'int'
    |-BinaryOperator 0x55f35442f130 <line:819:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55f35442ed18 <col:3> 'int' lvalue Var 0x55f354423738 'x' 'int'
    | `-ConditionalOperator 0x55f35442f100 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55f35442ef28 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55f35442ee48 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55f35442ed70 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55f35442ed58 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55f35442ed38 <col:8> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55f35442ee28 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55f35442edc0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55f35442eda8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55f35442ed88 <col:27> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55f35442ee10 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55f35442edf8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55f35442edd8 <col:46> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55f35442ef08 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55f35442eea0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55f35442ee88 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55f35442ee68 <col:65> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55f35442eef0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55f35442eed8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55f35442eeb8 <col:84> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f35442f0e8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f35442ef48 <col:101> 'int' lvalue Var 0x55f354423738 'x' 'int'
    |   `-ParenExpr 0x55f35442f0c8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55f35442f098 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55f35442f008 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f35442efc0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f35442efa8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f35442ef68 <col:106> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f35442eff0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f35442efd8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f35442ef88 <col:124> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f35442f068 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f35442f028 <col:141> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55f35442f080 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f35442f048 <col:153> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55f35442f640 <line:820:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55f35442f150 <col:3> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x55f35442f610 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55f35442f5e0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f35442f5c8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f35442f170 <col:15> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55f35442f5f8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f35442f190 <col:31> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55f35442f5a8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55f35442f578 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55f35442f3a0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55f35442f2c0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55f35442f1e8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55f35442f1d0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55f35442f1b0 <col:45> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55f35442f2a0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55f35442f238 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55f35442f220 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55f35442f200 <col:64> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55f35442f288 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55f35442f270 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55f35442f250 <col:83> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55f35442f380 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55f35442f318 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55f35442f300 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55f35442f2e0 <col:102> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55f35442f368 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55f35442f350 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55f35442f330 <col:121> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f35442f560 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f35442f3c0 <col:138> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
    |       `-ParenExpr 0x55f35442f540 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55f35442f510 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55f35442f480 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55f35442f438 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55f35442f420 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55f35442f3e0 <col:151> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55f35442f468 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55f35442f450 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55f35442f400 <col:169> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55f35442f4e0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f35442f4a0 <col:186> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55f35442f4f8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55f35442f4c0 <col:198> 'int' lvalue Var 0x55f354423cf0 'x$w_buff0' 'int'
    |-BinaryOperator 0x55f35442fb50 <line:821:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55f35442f660 <col:3> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x55f35442fb20 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55f35442faf0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f35442fad8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f35442f680 <col:15> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55f35442fb08 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f35442f6a0 <col:31> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x55f35442fab8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55f35442fa88 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55f35442f8b0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55f35442f7d0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55f35442f6f8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55f35442f6e0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55f35442f6c0 <col:45> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55f35442f7b0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55f35442f748 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55f35442f730 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55f35442f710 <col:64> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55f35442f798 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55f35442f780 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55f35442f760 <col:83> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55f35442f890 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55f35442f828 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55f35442f810 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55f35442f7f0 <col:102> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55f35442f878 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55f35442f860 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55f35442f840 <col:121> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f35442fa70 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f35442f8d0 <col:138> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x55f35442fa50 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55f35442fa20 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55f35442f990 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55f35442f948 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55f35442f930 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55f35442f8f0 <col:151> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55f35442f978 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55f35442f960 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55f35442f910 <col:169> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55f35442f9f0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f35442f9b0 <col:186> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55f35442fa08 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55f35442f9d0 <col:198> 'int' lvalue Var 0x55f354423de8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55f354430108 <line:822:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55f35442fb70 <col:3> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f3544300f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f3544300c0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55f354430078 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f354430060 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f35442fb90 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f3544300a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f354430090 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f35442fbc0 <col:36> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55f354430040 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55f354430010 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55f35442fdd0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f35442fcf0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f35442fc18 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f35442fc00 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f35442fbe0 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f35442fcd0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f35442fc68 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f35442fc50 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f35442fc30 <col:74> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f35442fcb8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f35442fca0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f35442fc80 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f35442fdb0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f35442fd48 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f35442fd30 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f35442fd10 <col:112> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f35442fd98 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f35442fd80 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f35442fd60 <col:131> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f35442fff8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f35442ffe0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f35442fdf0 <col:148> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55f35442ffc0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55f35442ff90 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55f35442feb0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f35442fe68 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f35442fe50 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f35442fe10 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f35442fe98 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f35442fe80 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f35442fe30 <col:184> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f35442ff48 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f35442ff00 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f35442fed0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f35442ff78 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55f35442ff60 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55f35442ff28 <col:212> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f3544306d0 <line:823:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55f354430128 <col:3> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f3544306b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f354430688 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55f354430640 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f354430628 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f354430148 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f354430670 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f354430658 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f354430168 <col:36> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55f354430608 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55f3544305d8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55f354430378 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f354430298 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f3544301c0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f3544301a8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f354430188 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f354430278 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f354430210 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f3544301f8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f3544301d8 <col:74> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f354430260 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f354430248 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f354430228 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f354430358 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f3544302f0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f3544302d8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f3544302b8 <col:112> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f354430340 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f354430328 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f354430308 <col:131> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f3544305c0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f3544305a8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f354430398 <col:148> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55f354430588 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55f354430558 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55f354430458 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f354430410 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f3544303f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f3544303b8 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f354430440 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f354430428 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f3544303d8 <col:184> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f354430528 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f3544304a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f354430478 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f354430540 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55f354430500 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55f3544304d0 <col:219> 'int' 0
    |-BinaryOperator 0x55f354430c98 <line:824:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55f3544306f0 <col:3> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f354430c80 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f354430c50 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55f354430c08 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f354430bf0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f354430710 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f354430c38 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f354430c20 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f354430730 <col:36> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55f354430bd0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55f354430b80 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55f354430940 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f354430860 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f354430788 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f354430770 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f354430750 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f354430840 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f3544307d8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f3544307c0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f3544307a0 <col:74> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f354430828 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f354430810 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f3544307f0 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f354430920 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f3544308b8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f3544308a0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f354430880 <col:112> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f354430908 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f3544308f0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f3544308d0 <col:131> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f354430b68 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f354430b50 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f354430960 <col:148> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55f354430b30 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55f354430b00 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55f354430a20 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f3544309d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f3544309c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f354430980 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f354430a08 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f3544309f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f3544309a0 <col:184> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f354430ab8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f354430a70 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f354430a40 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f354430ae8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55f354430ad0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55f354430a98 <col:212> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f354431260 <line:825:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55f354430cb8 <col:3> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f354431248 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f354431218 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55f3544311d0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f3544311b8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f354430cd8 <col:20> '_Bool' lvalue Var 0x55f354424070 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f354431200 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f3544311e8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f354430cf8 <col:36> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55f354431198 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55f354431168 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55f354430f08 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f354430e28 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f354430d50 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f354430d38 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f354430d18 <col:55> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f354430e08 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f354430da0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f354430d88 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f354430d68 <col:74> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f354430df0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f354430dd8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f354430db8 <col:93> '_Bool' lvalue Var 0x55f354423e60 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f354430ee8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f354430e80 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f354430e68 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f354430e48 <col:112> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f354430ed0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f354430eb8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f354430e98 <col:131> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f354431150 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f354431138 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f354430f28 <col:148> '_Bool' lvalue Var 0x55f354423a30 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55f354431118 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55f3544310e8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55f354430fe8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f354430fa0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f354430f88 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f354430f48 <col:166> '_Bool' lvalue Var 0x55f354423d68 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f354430fd0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f354430fb8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f354430f68 <col:184> '_Bool' lvalue Var 0x55f3544238c8 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f3544310b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f354431038 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f354431008 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f3544310d0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55f354431090 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55f354431060 <col:219> 'int' 0
    |-BinaryOperator 0x55f354431530 <line:826:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55f354431280 <col:3> '_Bool' lvalue Var 0x55f354423638 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55f354431518 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55f354431500 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55f3544314e0 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55f3544314c0 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55f354431428 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55f354431390 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55f3544312f8 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55f3544312e0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55f3544312a0 <col:23> 'int' lvalue Var 0x55f354423738 'x' 'int'
    |         | | | `-IntegerLiteral 0x55f3544312c0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55f354431370 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55f354431358 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55f354431318 <col:33> 'int' lvalue Var 0x55f3544232e8 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55f354431338 <col:56> 'int' 1
    |         | `-BinaryOperator 0x55f354431408 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55f3544313f0 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55f3544313b0 <col:61> 'int' lvalue Var 0x55f354423408 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55f3544313d0 <col:84> 'int' 1
    |         `-BinaryOperator 0x55f3544314a0 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55f354431488 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f354431448 <col:89> 'int' lvalue Var 0x55f354423528 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55f354431468 <col:112> 'int' 0
    |-BinaryOperator 0x55f354431660 <line:827:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55f354431550 <col:3> 'int' lvalue Var 0x55f354423738 'x' 'int'
    | `-ConditionalOperator 0x55f354431630 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55f3544315e8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f3544315d0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f354431570 <col:7> '_Bool' lvalue Var 0x55f3544237d0 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55f354431600 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f354431590 <col:25> 'int' lvalue Var 0x55f354423850 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55f354431618 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55f3544315b0 <col:37> 'int' lvalue Var 0x55f354423738 'x' 'int'
    |-BinaryOperator 0x55f3544316f8 <line:828:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55f354431680 <col:3> '_Bool' lvalue Var 0x55f3544237d0 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55f3544316d0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55f3544316a0 <col:28> 'int' 0
    |-CallExpr 0x55f354431750 <line:829:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f354431738 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f354431718 <col:3> 'void ()' Function 0x55f3543ca060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f3544317c8 <line:830:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f3544317b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f354431770 <col:3> 'void (int)' Function 0x55f3543c9d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55f354431808 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f3544317f0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f354431790 <col:21> '_Bool' lvalue Var 0x55f354423638 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55f354431840 <line:831:3, col:10>
      `-IntegerLiteral 0x55f354431820 <col:10> 'int' 0
