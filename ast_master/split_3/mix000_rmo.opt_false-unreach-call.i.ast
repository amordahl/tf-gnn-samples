TranslationUnitDecl 0x55b3da171e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55b3da1726d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55b3da1723b0 '__int128'
|-TypedefDecl 0x55b3da172748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55b3da1723d0 'unsigned __int128'
|-TypedefDecl 0x55b3da172a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55b3da172820 'struct __NSConstantString_tag'
|   `-Record 0x55b3da1727a0 '__NSConstantString_tag'
|-TypedefDecl 0x55b3da172af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55b3da172ab0 'char *'
|   `-BuiltinType 0x55b3da171eb0 'char'
|-TypedefDecl 0x55b3da1b1650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55b3da172d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55b3da172bd0 'struct __va_list_tag'
|     `-Record 0x55b3da172b50 '__va_list_tag'
|-FunctionDecl 0x55b3da1b1770 <./split_3/mix000_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55b3da1b1940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55b3da1b1870 <col:31> col:34 'int'
|-FunctionDecl 0x55b3da1b1ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55b3da1b1be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55b3da1b1d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55b3da1b1c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55b3da1b1f58 <col:40, col:99>
|   |-IfStmt 0x55b3da1b1f28 <col:42, col:88>
|   | |-UnaryOperator 0x55b3da1b1e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55b3da1b1df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55b3da1b1dd0 <col:47> 'int' lvalue ParmVar 0x55b3da1b1c98 'expression' 'int'
|   | `-CompoundStmt 0x55b3da1b1f10 <col:59, col:88>
|   |   `-LabelStmt 0x55b3da1b1ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55b3da1b1e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55b3da1b1e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55b3da1b1e20 <col:68> 'void () __attribute__((noreturn))' Function 0x55b3da1b1be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55b3da1b1f40 <col:89>
|   `-ReturnStmt 0x55b3da1b1f48 <col:91>
|-FunctionDecl 0x55b3da1b1fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55b3da1b2060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55b3da1b23e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b3da1b2118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55b3da1b2198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55b3da1b2218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b3da1b2298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b3da1b24a0 <line:11:22>
|-FunctionDecl 0x55b3da1d8520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b3da1b2510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55b3da1b2590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55b3da1d8350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b3da1d83d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b3da1d85e0 <line:14:22>
|-FunctionDecl 0x55b3da1d8890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b3da1d8650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55b3da1d86d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55b3da1d8750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55b3da1d8948 <line:16:22>
|-TypedefDecl 0x55b3da1d89b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55b3da171f70 'unsigned char'
|-TypedefDecl 0x55b3da1d8a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55b3da171f90 'unsigned short'
|-TypedefDecl 0x55b3da1d8a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55b3da171fb0 'unsigned int'
|-TypedefDecl 0x55b3da1d8b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d8b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55b3da171ed0 'signed char'
|-TypedefDecl 0x55b3da1d8be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55b3da171f70 'unsigned char'
|-TypedefDecl 0x55b3da1d8c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55b3da171ef0 'short'
|-TypedefDecl 0x55b3da1d8cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55b3da171f90 'unsigned short'
|-TypedefDecl 0x55b3da1d8d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55b3da171f10 'int'
|-TypedefDecl 0x55b3da1d8da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55b3da171fb0 'unsigned int'
|-TypedefDecl 0x55b3da1d8e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d8e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d8ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d8f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d8fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d9048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55b3da171fb0 'unsigned int'
|-TypedefDecl 0x55b3da1d90b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55b3da171fb0 'unsigned int'
|-TypedefDecl 0x55b3da1d9128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d9198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d9208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55b3da171fb0 'unsigned int'
|-TypedefDecl 0x55b3da1d9278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d92e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d9378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d93e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55b3da171f10 'int'
|-RecordDecl 0x55b3da1d9440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55b3da1d9588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55b3da1d9640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55b3da1d95e0 'struct __fsid_t' sugar
|   `-RecordType 0x55b3da1d94c0 '__fsid_t'
|     `-Record 0x55b3da1d9440 ''
|-TypedefDecl 0x55b3da1d96c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d9738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d97a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d9818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55b3da171fb0 'unsigned int'
|-TypedefDecl 0x55b3da1d9888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d98f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55b3da171fb0 'unsigned int'
|-TypedefDecl 0x55b3da1d9968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d99d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55b3da171f10 'int'
|-TypedefDecl 0x55b3da1d9a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55b3da171f10 'int'
|-TypedefDecl 0x55b3da1d9ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55b3da171f10 'int'
|-TypedefDecl 0x55b3da1d9b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55b3da172630 'void *'
|   `-BuiltinType 0x55b3da171e70 'void'
|-TypedefDecl 0x55b3da1d9b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d9c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d9c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d9ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d9d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d9dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d9e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1d9ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d9f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d9f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1d9ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1da088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55b3da1da050 '__off64_t' sugar
|   |-Typedef 0x55b3da1d9378 '__off64_t'
|   `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1da180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55b3da1da140 '__quad_t *'
|   `-TypedefType 0x55b3da1da0e0 '__quad_t' sugar
|     |-Typedef 0x55b3da1d8ef8 '__quad_t'
|     `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1da1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55b3da172ab0 'char *'
|   `-BuiltinType 0x55b3da171eb0 'char'
|-TypedefDecl 0x55b3da1da260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1da2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55b3da171fb0 'unsigned int'
|-FunctionDecl 0x55b3da1db458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55b3da1db380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55b3da1db768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55b3da1db758 <line:73:3, col:34>
|     `-CallExpr 0x55b3da1db718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55b3da1db700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b3da1db690 <col:10> '<builtin fn type>' Function 0x55b3da1db500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55b3da1db740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b3da1db6b0 <col:29> 'unsigned int' lvalue ParmVar 0x55b3da1db380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55b3da1db500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55b3da1db5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55b3da1db610 <col:10> Implicit
| `-ConstAttr 0x55b3da1db668 <col:10> Implicit
|-FunctionDecl 0x55b3da1db8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55b3da1db7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55b3da1dbbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55b3da1dbbc8 <line:78:3, col:34>
|     `-CallExpr 0x55b3da1dbb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55b3da1dbb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b3da1dbaf8 <col:10> '<builtin fn type>' Function 0x55b3da1db968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55b3da1dbbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55b3da1dbb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55b3da1db7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55b3da1db968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55b3da1dba08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55b3da1dba78 <col:10> Implicit
| `-ConstAttr 0x55b3da1dbad0 <col:10> Implicit
|-TypedefDecl 0x55b3da1dbc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-TypedefDecl 0x55b3da1dbc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55b3da1dbc60 '__time_t' sugar
|   |-Typedef 0x55b3da1d9888 '__time_t'
|   `-BuiltinType 0x55b3da171f30 'long'
|-RecordDecl 0x55b3da1dbcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55b3da1dbda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55b3da1dbe38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55b3da1dbec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55b3da1dbe90 '__pid_t' sugar
|   |-Typedef 0x55b3da1d93e8 '__pid_t'
|   `-BuiltinType 0x55b3da171f10 'int'
|-RecordDecl 0x55b3da1dbf20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55b3da1dbfe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55b3da1dc030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55b3da1dc0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55b3da1dc158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-RecordDecl 0x55b3da1dc1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55b3da1dd480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55b3da1dd530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55b3da1dd4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55b3da1dc230 'cpu_set_t'
|     `-Record 0x55b3da1dc1b0 ''
|-FunctionDecl 0x55b3da1dd808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55b3da1dd5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b3da1dd6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55b3da1dd8b8 <line:108:19>
|-FunctionDecl 0x55b3da1dda90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55b3da1dd920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55b3da1ddb38 <col:69>
|-FunctionDecl 0x55b3da1ddcb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55b3da1ddba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55b3da1ddd58 <col:64>
|-FunctionDecl 0x55b3da1de018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b3da1dddc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b3da1ddef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b3da1de0c8 <line:114:22>
|-FunctionDecl 0x55b3da1de3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55b3da1de130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b3da1de228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55b3da1de460 <col:88>
|-FunctionDecl 0x55b3da1de718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b3da1de4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b3da1de548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55b3da1de5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b3da1de7d0 <col:62>
|-FunctionDecl 0x55b3da1de948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55b3da1de838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55b3da1de9f0 <col:63>
|-FunctionDecl 0x55b3da1deb18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55b3da1debb8 <col:47>
|-FunctionDecl 0x55b3da1decc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55b3da1dec28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b3da1ded68 <col:69>
|-FunctionDecl 0x55b3da1dee70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55b3da1dedd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b3da1def18 <col:69>
|-FunctionDecl 0x55b3da1df1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b3da1def80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b3da1df0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55b3da1df288 <col:88>
|-TypedefDecl 0x55b3da1df318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55b3da1df2e0 '__clock_t' sugar
|   |-Typedef 0x55b3da1d96c8 '__clock_t'
|   `-BuiltinType 0x55b3da171f30 'long'
|-TypedefDecl 0x55b3da1df3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55b3da1df370 '__clockid_t' sugar
|   |-Typedef 0x55b3da1d9ab8 '__clockid_t'
|   `-BuiltinType 0x55b3da171f10 'int'
|-TypedefDecl 0x55b3da1df458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55b3da1df420 '__timer_t' sugar
|   |-Typedef 0x55b3da1d9b28 '__timer_t'
|   `-PointerType 0x55b3da172630 'void *'
|     `-BuiltinType 0x55b3da171e70 'void'
|-RecordDecl 0x55b3da1df4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55b3da1df570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55b3da1df5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55b3da1df640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55b3da1df6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55b3da1df710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55b3da1df778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55b3da1df7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55b3da1df848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55b3da1df8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55b3da1df918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55b3da1df980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55b3da1df9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55b3da1dfa98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55b3da1dfb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55b3da1dfbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55b3da1dfd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55b3da1dfe20 <col:45>
|-FunctionDecl 0x55b3da1e0000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55b3da1dfef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55b3da1e00a8 <col:54>
|-FunctionDecl 0x55b3da1e02a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55b3da1e0110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55b3da1e0188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55b3da1e0358 <line:158:22>
| `-ConstAttr 0x55b3da1e0ff0 <col:63>
|-FunctionDecl 0x55b3da1e11f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b3da1e10e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b3da1e1298 <col:56>
|-FunctionDecl 0x55b3da1e1640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55b3da1e1308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55b3da1e1380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b3da1e1400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55b3da1e14f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55b3da1e1700 <col:54>
|-RecordDecl 0x55b3da1e1758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55b3da1e1808 parent 0x55b3da171e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55b3da1e1a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55b3da1e1b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55b3da1e1b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55b3da1e1bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55b3da1e1cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55b3da1e1de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55b3da1e1d90 'struct __locale_struct *'
|   `-ElaboratedType 0x55b3da1e1d20 'struct __locale_struct' sugar
|     `-RecordType 0x55b3da1e17e0 'struct __locale_struct'
|       `-Record 0x55b3da1e1758 '__locale_struct'
|-TypedefDecl 0x55b3da1e1e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55b3da1e1e60 '__locale_t' sugar
|   |-Typedef 0x55b3da1e1de8 '__locale_t'
|   `-PointerType 0x55b3da1e1d90 'struct __locale_struct *'
|     `-ElaboratedType 0x55b3da1e1d20 'struct __locale_struct' sugar
|       `-RecordType 0x55b3da1e17e0 'struct __locale_struct'
|         `-Record 0x55b3da1e1758 '__locale_struct'
|-FunctionDecl 0x55b3da1e32a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55b3da1e1f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55b3da1e1f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b3da1e3028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55b3da1e30b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b3da1e3130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55b3da1e3368 <col:40>
|-FunctionDecl 0x55b3da1e3558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b3da1e3430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55b3da1e3600 <col:66>
|-FunctionDecl 0x55b3da1e3710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b3da1e3668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55b3da1e37b8 <col:69>
|-FunctionDecl 0x55b3da1e39e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b3da1e3820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b3da1e38b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b3da1e3a98 <col:52>
|-FunctionDecl 0x55b3da1e3c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b3da1e3b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b3da1e3b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b3da1e3cf0 <col:55>
|-FunctionDecl 0x55b3da1e3e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55b3da1e3d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55b3da1e3f30 <col:62>
|-FunctionDecl 0x55b3da1e4168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55b3da1e3f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55b3da1e4210 <col:60>
|-FunctionDecl 0x55b3da1e4438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b3da1e4290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b3da1e4310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55b3da1e44e8 <col:44>
|-FunctionDecl 0x55b3da1e46f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b3da1e4550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b3da1e45d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55b3da1e47a8 <col:49>
|-VarDecl 0x55b3da1e48a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55b3da1e4928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55b3da1e49a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55b3da1e4a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55b3da1e4ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55b3da1e4c40 <col:42>
|-VarDecl 0x55b3da1e4cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55b3da1e4d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55b3da1e4eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55b3da1e4da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55b3da1e4f60 <col:57>
|-FunctionDecl 0x55b3da1e50d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b3da1e4fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b3da1e5178 <col:56>
|-FunctionDecl 0x55b3da1e5288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b3da1e51f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55b3da1e5330 <col:59>
|-FunctionDecl 0x55b3da1e5438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55b3da1e53a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55b3da1e54e0 <col:48>
| `-ConstAttr 0x55b3da1e5538 <col:89>
|-FunctionDecl 0x55b3da1e5798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b3da1e55e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55b3da1e5678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55b3da1e59f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b3da1e5888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b3da1e5918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55b3da1e5aa8 <col:88>
|-FunctionDecl 0x55b3da1e5c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b3da1e5b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b3da1e5ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55b3da1e5cf0 <col:88>
|-FunctionDecl 0x55b3da1e5f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55b3da1e5d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b3da1e5de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55b3da1e5fb8 <line:209:22>
|-FunctionDecl 0x55b3da1e6358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b3da1e6020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b3da1e60e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55b3da1e6170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55b3da1e6200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55b3da1e6658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55b3da1e6458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55b3da1e6530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55b3da1e6708 <col:85>
|-FunctionDecl 0x55b3da1e6af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55b3da1e6770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b3da1e68a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55b3da1e69b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55b3da1e6bb0 <col:52>
|-FunctionDecl 0x55b3da1e6d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55b3da1e6c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b3da1e6dd0 <col:61>
|-FunctionDecl 0x55b3da1e7248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55b3da1e6e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b3da1e6eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55b3da1e6fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55b3da1e70f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55b3da1e7308 <col:62>
|-FunctionDecl 0x55b3da1e7528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55b3da1e7370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b3da1e7400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55b3da1e75d8 <line:222:22>
|-FunctionDecl 0x55b3da1e76d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55b3da1e7640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b3da1e7780 <col:65>
|-TypedefDecl 0x55b3da1e77f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55b3da171fd0 'unsigned long'
|-RecordDecl 0x55b3da1e7848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55b3da1e7990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b3da1e79f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b3da1e7aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55b3da1e7a50 'union pthread_attr_t' sugar
|   `-RecordType 0x55b3da1e78d0 'union pthread_attr_t'
|     `-Record 0x55b3da1e7848 'pthread_attr_t'
|-RecordDecl 0x55b3da1e7b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55b3da1e7c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55b3da1e7cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55b3da1e7da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55b3da1e7d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55b3da1e7b80 'struct __pthread_internal_list'
|     `-Record 0x55b3da1e7b00 '__pthread_internal_list'
|-RecordDecl 0x55b3da1e7e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55b3da1e7eb8 parent 0x55b3da171e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55b3da1e7f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b3da1e7ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55b3da1e8060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55b3da1ec110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55b3da1ec178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55b3da1ec1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55b3da1ec268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55b3da1ec320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55b3da1ec410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55b3da1ec478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b3da1ec600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55b3da1ec5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55b3da1e7e90 'pthread_mutex_t'
|     `-Record 0x55b3da1e7e10 ''
|-RecordDecl 0x55b3da1ec670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55b3da1ec7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b3da1ec818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b3da1ec8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55b3da1ec870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55b3da1ec6f0 'pthread_mutexattr_t'
|     `-Record 0x55b3da1ec670 ''
|-RecordDecl 0x55b3da1ec940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55b3da1ec9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55b3da1ecab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b3da1ecb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55b3da1ecb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55b3da1ecbe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55b3da1ecc50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55b3da1eccb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55b3da1ecd20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55b3da1ecd88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55b3da1ece40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_3/mix000_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_3/mix000_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55b3da1ecf30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55b3da1ecf98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55b3da1ee130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55b3da1ed070 'union pthread_cond_t' sugar
|   `-RecordType 0x55b3da1ec9c0 'pthread_cond_t'
|     `-Record 0x55b3da1ec940 ''
|-RecordDecl 0x55b3da1ee1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55b3da1ee2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b3da1ee308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b3da1ee3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55b3da1ee360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55b3da1ee220 'pthread_condattr_t'
|     `-Record 0x55b3da1ee1a0 ''
|-TypedefDecl 0x55b3da1ee448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55b3da171fb0 'unsigned int'
|-TypedefDecl 0x55b3da1ee4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55b3da171f10 'int'
|-RecordDecl 0x55b3da1ee510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55b3da1ee5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55b3da1ee680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b3da1ee6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55b3da1ee750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55b3da1ee7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55b3da1ee820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55b3da1ee888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55b3da1ee8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55b3da1ee958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55b3da1ee9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55b3da1eea28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55b3da1eea90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55b3da1eeb40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_3/mix000_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_3/mix000_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55b3da1eebe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b3da1eec50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b3da1eeda0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55b3da1eed40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55b3da1ee590 'pthread_rwlock_t'
|     `-Record 0x55b3da1ee510 ''
|-RecordDecl 0x55b3da1eee10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55b3da1eef50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55b3da1eefb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b3da1ef070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55b3da1ef010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55b3da1eee90 'pthread_rwlockattr_t'
|     `-Record 0x55b3da1eee10 ''
|-TypedefDecl 0x55b3da1f0140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55b3da171f14 'volatile int' volatile
|   `-BuiltinType 0x55b3da171f10 'int'
|-RecordDecl 0x55b3da1f0198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55b3da1f02e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55b3da1f0348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b3da1f0400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55b3da1f03a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55b3da1f0220 'pthread_barrier_t'
|     `-Record 0x55b3da1f0198 ''
|-RecordDecl 0x55b3da1f0470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55b3da1f0570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b3da1f05d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b3da1f0690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55b3da1f0630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55b3da1f04f0 'pthread_barrierattr_t'
|     `-Record 0x55b3da1f0470 ''
|-TypedefDecl 0x55b3da1f07a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55b3da1f0740 'long [8]' 8 
|   `-BuiltinType 0x55b3da171f30 'long'
|-EnumDecl 0x55b3da1f0800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55b3da1f08c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55b3da1f0918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55b3da1f0968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55b3da1f0a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55b3da1f0a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55b3da1f0ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55b3da1f0b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55b3da1f0bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55b3da1f0b98 <col:26> 'int'
| |   `-DeclRefExpr 0x55b3da1f0b78 <col:26> 'int' EnumConstant 0x55b3da1f0a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55b3da1f0c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55b3da1f0c20 <col:29> 'int'
| |   `-DeclRefExpr 0x55b3da1f0c00 <col:29> 'int' EnumConstant 0x55b3da1f0a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55b3da1f0cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55b3da1f0ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55b3da1f0c88 <col:30> 'int' EnumConstant 0x55b3da1f0ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55b3da1f0d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55b3da1f0d30 <col:27> 'int'
|     `-DeclRefExpr 0x55b3da1f0d10 <col:27> 'int' EnumConstant 0x55b3da1f0bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55b3da1f0d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55b3da1f0e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55b3da1f0ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55b3da1f0ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x55b3da1f0eb8 <col:30> 'int' EnumConstant 0x55b3da1f0e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55b3da1f0f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55b3da1f0fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55b3da1f0fb0 <col:29> 'int'
|     `-DeclRefExpr 0x55b3da1f0f90 <col:29> 'int' EnumConstant 0x55b3da1f0f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55b3da1f1018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55b3da1f10e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55b3da1f1150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55b3da1f11a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55b3da1f11f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55b3da1f12b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55b3da1f1308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55b3da1f1358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55b3da1f13e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55b3da1f13c8 <col:31> 'int'
|     `-DeclRefExpr 0x55b3da1f13a8 <col:31> 'int' EnumConstant 0x55b3da1f12b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55b3da1f1430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55b3da1f14f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55b3da1f1548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55b3da1f1598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55b3da1f1668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55b3da1f16b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55b3da1f1708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55b3da1f17d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55b3da1f1828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55b3da1f1878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55b3da1f1ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55b3da1f1b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55b3da1f1b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55b3da1f1ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55b3da1f1cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55b3da1f1dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55b3da1f1e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55b3da1f1e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55b3da1f1f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55b3da1f1f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55b3da1f25b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55b3da1f2080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55b3da1f21a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b3da1f23a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55b3da1f2420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55b3da1f2678 <col:47>
| |-NonNullAttr 0x55b3da1f26d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55b3da1f2708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55b3da1f2830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55b3da1f2760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55b3da1f2a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55b3da1f28e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55b3da1f2968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55b3da1f2c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55b3da1f2b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55b3da1f2d00 <col:60>
|-FunctionDecl 0x55b3da1f2e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55b3da1f2ef0 <col:54>
| `-ConstAttr 0x55b3da1f2f48 <col:95>
|-FunctionDecl 0x55b3da1f4990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55b3da1f2f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b3da1f2ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55b3da1f4a40 <line:395:19>
| `-ConstAttr 0x55b3da1f4a98 <col:60>
|-FunctionDecl 0x55b3da1f4c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b3da1f4b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b3da1f4d10 <col:71>
| `-NonNullAttr 0x55b3da1f4d68 <col:112, col:126> 1
|-FunctionDecl 0x55b3da1f4e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b3da1f4db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b3da1f4f18 <line:398:22>
| `-NonNullAttr 0x55b3da1f4f70 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1f5198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55b3da1f4fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b3da1f5038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55b3da1f5248 <line:401:22>
| `-NonNullAttr 0x55b3da1f52a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da1f54a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b3da1f52e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b3da1f5368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55b3da1f5558 <line:404:22>
| `-NonNullAttr 0x55b3da1f55b0 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1f5808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55b3da1f55f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b3da1f56a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55b3da1f58b8 <line:407:22>
| `-NonNullAttr 0x55b3da1f5910 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da1f6b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b3da1f69b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b3da1f6a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b3da1f6c18 <line:410:22>
| `-NonNullAttr 0x55b3da1f6c70 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1f6ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b3da1f6cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b3da1f6d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b3da1f6f58 <line:413:22>
| `-NonNullAttr 0x55b3da1f6fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da1f71e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b3da1f6ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b3da1f7088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55b3da1f7298 <col:37>
| `-NonNullAttr 0x55b3da1f72f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55b3da1f74d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da1f7338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b3da1f73b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55b3da1f7588 <line:419:22>
| `-NonNullAttr 0x55b3da1f75e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da1f7768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b3da1f7628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b3da1f76a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55b3da1f7818 <line:421:22>
| `-NonNullAttr 0x55b3da1f7870 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1f7a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da1f78b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b3da1f7938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55b3da1f7ae8 <line:424:22>
| `-NonNullAttr 0x55b3da1f7b40 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da1f7cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b3da1f7b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b3da1f7c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55b3da1f7d78 <line:427:22>
| `-NonNullAttr 0x55b3da1f7dd0 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1f7f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da1f7e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b3da1f7e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55b3da1f8028 <line:430:22>
| `-NonNullAttr 0x55b3da1f8080 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da1f8208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b3da1f80c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b3da1f8148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55b3da1f82b8 <line:432:22>
| `-NonNullAttr 0x55b3da1f8310 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1f8538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55b3da1f8358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b3da1f83d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55b3da1f85e8 <line:435:22>
| |-NonNullAttr 0x55b3da1f8640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55b3da1f8678 <col:100> "" ""
|-FunctionDecl 0x55b3da1f8888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55b3da1f86c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b3da1f8748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55b3da1f8938 <line:438:22>
| |-NonNullAttr 0x55b3da1f8990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55b3da1f89d8 <col:97> "" ""
|-FunctionDecl 0x55b3da1f8bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b3da1f8a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b3da1f8aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b3da1f8c78 <line:441:22>
| `-NonNullAttr 0x55b3da1f8cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da1f8e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b3da1f8d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b3da1f8d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b3da1f8f00 <line:444:22>
| `-NonNullAttr 0x55b3da1f8f58 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1f9248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b3da1f8fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b3da1f9028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55b3da1f90a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b3da1f9300 <line:448:22>
| `-NonNullAttr 0x55b3da1f9358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55b3da1f9608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55b3da1f93b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b3da1f9430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55b3da1f94a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b3da1f96c0 <col:43>
| `-NonNullAttr 0x55b3da1f9718 <col:84, col:98> 1
|-FunctionDecl 0x55b3da1f9a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b3da1f9768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b3da1f97e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55b3da1f9878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55b3da1f9ad8 <line:453:22>
| `-NonNullAttr 0x55b3da1f9b30 <col:63, col:77> 3
|-FunctionDecl 0x55b3da1f9e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b3da1f9b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b3da1f9bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55b3da1f9c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b3da1f9ec0 <line:457:22>
| `-NonNullAttr 0x55b3da1f9f18 <col:63, col:80> 2 3
|-FunctionDecl 0x55b3da1fa108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55b3da1f9f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b3da1f9fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55b3da1fa1b8 <line:459:22>
|-FunctionDecl 0x55b3da1fa588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55b3da1fa280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55b3da1fa420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55b3da1fa638 <col:52, col:69> 1 2
|-FunctionDecl 0x55b3da1fa7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55b3da1fa6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55b3da1fa740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55b3da1fa9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55b3da1fa8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55b3da1fa928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55b3da1fab48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55b3da1faab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55b3da1fac88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55b3da1fad28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55b3da1fadd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55b3da1faec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55b3da1faf30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55b3da1fb100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_3/mix000_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55b3da1fb1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55b3da1fb2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55b3da1fb250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55b3da1fadb0 '__pthread_unwind_buf_t'
| |   `-Record 0x55b3da1fad28 ''
| `-AlignedAttr 0x55b3da1fb308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55b3da1fb380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55b3da1fb4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55b3da1fb548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55b3da1fb5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55b3da1fb618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55b3da1fb820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b3da1fb710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b3da1fba00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b3da1fb8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b3da1fbbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b3da1fbab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55b3da1fbc68 <line:488:22>
|-RecordDecl 0x55b3da1fbcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55b3da1fbfd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55b3da1fbe38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55b3da1fbeb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55b3da1fc088 <col:86>
| `-ReturnsTwiceAttr 0x55b3da1fc0e0 <col:12> Implicit
|-FunctionDecl 0x55b3da1fc408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b3da1fc1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55b3da1fc2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b3da1fc4b8 <line:494:22>
| `-NonNullAttr 0x55b3da1fc510 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1fc688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b3da1fc558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b3da1fc730 <line:496:22>
| `-NonNullAttr 0x55b3da1fc788 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1fc890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b3da1fc7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b3da1fc938 <line:498:22>
| `-NonNullAttr 0x55b3da1fc990 <col:52, col:66> 1
|-FunctionDecl 0x55b3da1fdad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b3da1fda20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b3da1fdb80 <line:500:22>
| `-NonNullAttr 0x55b3da1fdbd8 <col:52, col:66> 1
|-FunctionDecl 0x55b3da1fde18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b3da1fdc28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b3da1fdcb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b3da1fdec8 <col:36>
| `-NonNullAttr 0x55b3da1fdf20 <col:66, col:83> 1 2
|-FunctionDecl 0x55b3da1fe020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b3da1fdf68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b3da1fe0c8 <line:505:22>
| `-NonNullAttr 0x55b3da1fe120 <col:52, col:66> 1
|-FunctionDecl 0x55b3da1fe3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da1fe1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b3da1fe250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b3da1fe468 <line:509:22>
| `-NonNullAttr 0x55b3da1fe4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da1fe788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55b3da1fe508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b3da1fe588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55b3da1fe608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55b3da1fe840 <line:513:22>
| `-NonNullAttr 0x55b3da1fe898 <col:63, col:80> 1 3
|-FunctionDecl 0x55b3da1fea30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b3da1fe8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b3da1fead8 <line:515:22>
| `-NonNullAttr 0x55b3da1feb30 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1fed18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b3da1febe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b3da1fedc0 <line:517:22>
| `-NonNullAttr 0x55b3da1fee18 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1fef20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b3da1fee68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b3da1fefc8 <line:519:22>
| `-NonNullAttr 0x55b3da1ff020 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1ff248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da1ff068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b3da1ff0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b3da1ff2f8 <line:523:22>
| `-NonNullAttr 0x55b3da1ff350 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da1ff558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b3da1ff398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b3da1ff418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55b3da1ff608 <line:526:22>
| `-NonNullAttr 0x55b3da1ff660 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1ff808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da1ff6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b3da1ff728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55b3da1ff8b8 <line:529:22>
| `-NonNullAttr 0x55b3da1ff910 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da1ffb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b3da1ff958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b3da1ffa40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55b3da1ffbb0 <line:531:22>
| `-NonNullAttr 0x55b3da1ffc08 <col:63, col:77> 1
|-FunctionDecl 0x55b3da1ffdb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da1ffc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b3da1ffcd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55b3da1ffe68 <line:535:22>
| `-NonNullAttr 0x55b3da1ffec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da200048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b3da1fff08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b3da1fff88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55b3da2000f8 <line:538:22>
| `-NonNullAttr 0x55b3da200150 <col:63, col:77> 1
|-FunctionDecl 0x55b3da2002f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da200198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b3da200218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b3da2003a8 <line:542:22>
| `-NonNullAttr 0x55b3da200400 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da200588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b3da200448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b3da2004c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55b3da200638 <line:545:22>
| `-NonNullAttr 0x55b3da200690 <col:63, col:77> 1
|-FunctionDecl 0x55b3da200878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55b3da2006d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b3da200758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55b3da200928 <line:548:22>
| `-NonNullAttr 0x55b3da200980 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da201b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b3da2009c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b3da201a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55b3da201be8 <line:551:22>
| `-NonNullAttr 0x55b3da201c40 <col:63, col:77> 1
|-FunctionDecl 0x55b3da201f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55b3da201d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b3da201e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55b3da202028 <col:29>
| `-NonNullAttr 0x55b3da202080 <col:70, col:84> 1
|-FunctionDecl 0x55b3da2021f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b3da2020c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b3da2022a0 <line:556:22>
| `-NonNullAttr 0x55b3da2022f8 <col:63, col:77> 1
|-FunctionDecl 0x55b3da202400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b3da202348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b3da2024a8 <line:558:22>
| `-NonNullAttr 0x55b3da202500 <col:52, col:66> 1
|-FunctionDecl 0x55b3da202600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b3da202548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b3da2026a8 <line:560:19>
| `-NonNullAttr 0x55b3da202700 <col:49, col:63> 1
|-FunctionDecl 0x55b3da202938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b3da202748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b3da2027d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b3da2029e8 <col:39>
| `-NonNullAttr 0x55b3da202a70 <col:69, col:86> 1 2
|-FunctionDecl 0x55b3da202b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b3da202ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b3da202c18 <line:565:22>
| `-NonNullAttr 0x55b3da202c70 <col:52, col:66> 1
|-FunctionDecl 0x55b3da202d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b3da202cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b3da202e18 <line:567:22>
| `-NonNullAttr 0x55b3da202e70 <col:52, col:66> 1
|-FunctionDecl 0x55b3da203028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b3da202eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b3da202f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b3da2030d8 <col:39>
| `-NonNullAttr 0x55b3da203130 <col:69, col:86> 1 2
|-FunctionDecl 0x55b3da203230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b3da203178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b3da2032d8 <line:572:22>
| `-NonNullAttr 0x55b3da203330 <col:52, col:66> 1
|-FunctionDecl 0x55b3da203518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b3da2033e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b3da2035c0 <line:574:22>
| `-NonNullAttr 0x55b3da203618 <col:63, col:77> 1
|-FunctionDecl 0x55b3da203720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b3da203668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b3da2037c8 <line:576:22>
| `-NonNullAttr 0x55b3da203820 <col:63, col:77> 1
|-FunctionDecl 0x55b3da203a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da203868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b3da2038e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b3da203b30 <line:580:22>
| `-NonNullAttr 0x55b3da203b88 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da203d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b3da203bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b3da203c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55b3da203e48 <line:583:22>
| `-NonNullAttr 0x55b3da203ea0 <col:63, col:77> 1
|-FunctionDecl 0x55b3da204048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da203ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b3da203f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55b3da2040f8 <line:587:22>
| `-NonNullAttr 0x55b3da204150 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da2042d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b3da204198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b3da204218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55b3da204388 <col:36>
| `-NonNullAttr 0x55b3da2043e0 <col:77, col:91> 1
|-FunctionDecl 0x55b3da204718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55b3da2044c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b3da2045d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55b3da2047c8 <line:592:22>
| `-NonNullAttr 0x55b3da204820 <col:63, col:77> 1
|-FunctionDecl 0x55b3da204998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b3da204868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b3da204a40 <line:594:22>
| `-NonNullAttr 0x55b3da204ac0 <col:63, col:77> 1
|-FunctionDecl 0x55b3da204bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b3da204b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b3da204c68 <line:596:22>
| `-NonNullAttr 0x55b3da204cc0 <col:52, col:66> 1
|-FunctionDecl 0x55b3da204dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b3da204d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b3da204e68 <line:598:22>
| `-NonNullAttr 0x55b3da204ec0 <col:52, col:66> 1
|-FunctionDecl 0x55b3da2050e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55b3da204f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b3da204f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55b3da205198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55b3da2054c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b3da205218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b3da205290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b3da205320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55b3da205580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55b3da205798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b3da205660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b3da205840 <line:607:22>
| `-NonNullAttr 0x55b3da205898 <col:63, col:77> 1
|-FunctionDecl 0x55b3da2059a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b3da2058e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b3da205a48 <line:609:22>
| `-NonNullAttr 0x55b3da205ad0 <col:63, col:77> 1
|-FunctionDecl 0x55b3da205cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da205b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b3da205b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b3da205da8 <line:613:22>
| `-NonNullAttr 0x55b3da205e00 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da206008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55b3da205e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b3da205ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55b3da2060b8 <col:37>
| `-NonNullAttr 0x55b3da206110 <col:78, col:92> 1
|-FunctionDecl 0x55b3da206328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55b3da206158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b3da206200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55b3da2063d8 <line:619:22>
| `-NonNullAttr 0x55b3da206430 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da2065f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55b3da206478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b3da2064f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55b3da2066a8 <line:622:22>
| `-NonNullAttr 0x55b3da206700 <col:63, col:77> 1
|-FunctionDecl 0x55b3da2069a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55b3da2067e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55b3da206860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55b3da206a58 <line:624:22>
| `-NonNullAttr 0x55b3da206ae0 <col:63, col:77> 1
|-FunctionDecl 0x55b3da206c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b3da206b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b3da206d00 <line:626:22>
| `-NonNullAttr 0x55b3da206d58 <col:63, col:77> 1
|-FunctionDecl 0x55b3da206e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b3da206da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b3da206f08 <line:628:22>
| `-NonNullAttr 0x55b3da206f60 <col:52, col:66> 1
|-FunctionDecl 0x55b3da207060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b3da206fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b3da207108 <line:630:22>
| `-NonNullAttr 0x55b3da207160 <col:52, col:66> 1
|-FunctionDecl 0x55b3da207260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b3da2071a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b3da207308 <line:632:22>
| `-NonNullAttr 0x55b3da207360 <col:52, col:66> 1
|-FunctionDecl 0x55b3da207738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55b3da207440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55b3da207550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b3da2075d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55b3da2077f0 <line:636:22>
| `-NonNullAttr 0x55b3da207848 <col:63, col:77> 1
|-FunctionDecl 0x55b3da2079c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b3da207898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b3da207a70 <line:638:22>
| `-NonNullAttr 0x55b3da208b00 <col:63, col:77> 1
|-FunctionDecl 0x55b3da208c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b3da208b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b3da208ca8 <line:640:22>
| `-NonNullAttr 0x55b3da208d00 <col:52, col:66> 1
|-FunctionDecl 0x55b3da208ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b3da208db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b3da208f90 <line:642:22>
| `-NonNullAttr 0x55b3da208fe8 <col:63, col:77> 1
|-FunctionDecl 0x55b3da2090f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b3da209038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b3da209198 <line:644:22>
| `-NonNullAttr 0x55b3da2091f0 <col:63, col:77> 1
|-FunctionDecl 0x55b3da209418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b3da209238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b3da2092b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b3da2094c8 <line:648:22>
| `-NonNullAttr 0x55b3da209520 <col:63, col:80> 1 2
|-FunctionDecl 0x55b3da209728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55b3da209568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55b3da2095e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55b3da2097d8 <line:651:22>
| `-NonNullAttr 0x55b3da209830 <col:63, col:77> 1
|-FunctionDecl 0x55b3da209b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55b3da209910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55b3da209a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55b3da209c48 <line:654:22>
| `-NonNullAttr 0x55b3da209ca0 <col:63, col:77> 1
|-FunctionDecl 0x55b3da209df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55b3da209ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b3da209ea0 <col:69>
|-FunctionDecl 0x55b3da20a018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55b3da209f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b3da20a0c0 <col:72>
|-FunctionDecl 0x55b3da20a2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55b3da20a128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55b3da20a1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55b3da20a3a8 <col:44>
|-FunctionDecl 0x55b3da20a5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55b3da20a410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b3da20a488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55b3da20a678 <line:661:22>
| `-NonNullAttr 0x55b3da20a6d0 <col:63, col:77> 2
|-FunctionDecl 0x55b3da20ab30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55b3da20a7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55b3da20a8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55b3da20a9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55b3da20abe8 <col:47>
|-FunctionDecl 0x55b3da20acf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55b3da20ac58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b3da20ae48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55b3da20adb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b3da20af10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55b3da20afd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55b3da20b090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55b3da20b148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55b3da20b1c8 prev 0x55b3da20b148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55b3da20b230 <col:24> 'int' 0
|-VarDecl 0x55b3da20b268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55b3da20b2e8 prev 0x55b3da20b268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55b3da20b350 <col:27> 'int' 0
|-VarDecl 0x55b3da20b388 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55b3da20b408 prev 0x55b3da20b388 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55b3da20b470 <col:27> 'int' 0
|-VarDecl 0x55b3da20b4a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55b3da20b528 prev 0x55b3da20b4a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55b3da20b590 <col:27> 'int' 0
|-VarDecl 0x55b3da20b5c8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55b3da20b648 prev 0x55b3da20b5c8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55b3da20b6b0 <col:27> 'int' 0
|-VarDecl 0x55b3da20b6e0 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55b3da20b758 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55b3da20b7d8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x55b3da20b858 prev 0x55b3da20b7d8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55b3da20b8c0 <col:9> 'int' 0
|-VarDecl 0x55b3da20b8f0 <line:685:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55b3da20b970 <line:686:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55b3da20b9e8 <line:687:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55b3da20ba60 <line:688:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55b3da20bb00 <line:689:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55b3da20bb78 <line:690:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55b3da20bbf0 <line:691:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55b3da20bc68 <line:692:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55b3da20bce0 <line:693:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55b3da20bd60 <line:694:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55b3da20bde0 <line:695:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55b3da20be58 <line:696:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55b3da20bed8 <line:697:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55b3da20bf50 <line:698:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55b3da20bfd0 <line:699:1, col:5> col:5 used y 'int'
|-VarDecl 0x55b3da20c050 prev 0x55b3da20bfd0 <line:700:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55b3da20c0b8 <col:9> 'int' 0
|-VarDecl 0x55b3da20c0e8 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55b3da20c160 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55b3da20c278 prev 0x55b3da20acf0 <line:703:1, line:733:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55b3da20c1e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b3da20f318 <line:704:1, line:733:1>
|   |-CallExpr 0x55b3da20c388 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b3da20c370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20c320 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b3da20c3e8 <line:706:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b3da20c3a8 <col:3> 'int' lvalue Var 0x55b3da20c050 'y' 'int'
|   | `-IntegerLiteral 0x55b3da20c3c8 <col:7> 'int' 1
|   |-CallExpr 0x55b3da20c440 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b3da20c428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20c408 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b3da20c498 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b3da20c480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20c460 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b3da20c510 <line:709:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b3da20c4b8 <col:3> 'int' lvalue Var 0x55b3da20b2e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b3da20c4f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da20c4d8 <col:25> 'int' lvalue Var 0x55b3da20c050 'y' 'int'
|   |-CallExpr 0x55b3da20c568 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b3da20c550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20c530 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b3da20c5c0 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b3da20c5a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20c588 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b3da20c688 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20c5e0 <col:3> '_Bool' lvalue Var 0x55b3da20c0e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55b3da20c668 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b3da20c650 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b3da20c600 <col:19> '_Bool (void)' Function 0x55b3da1b1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b3da20c720 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20c6a8 <col:3> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55b3da20c700 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b3da20c6e8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b3da20c6c8 <col:19> '_Bool (void)' Function 0x55b3da1b1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b3da20c798 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20c740 <col:3> '_Bool' lvalue Var 0x55b3da20b8f0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da20c780 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da20c760 <col:21> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55b3da20c810 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b3da20c7b8 <col:3> 'int' lvalue Var 0x55b3da20b970 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55b3da20c7f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da20c7d8 <col:15> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   |-BinaryOperator 0x55b3da20cc68 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55b3da20c830 <col:3> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   | `-ConditionalOperator 0x55b3da20cc38 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55b3da20ca40 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55b3da20c960 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55b3da20c888 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55b3da20c870 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55b3da20c850 <col:8> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55b3da20c940 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55b3da20c8d8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55b3da20c8c0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55b3da20c8a0 <col:27> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55b3da20c928 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55b3da20c910 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55b3da20c8f0 <col:46> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55b3da20ca20 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55b3da20c9b8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55b3da20c9a0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55b3da20c980 <col:65> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55b3da20ca08 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55b3da20c9f0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55b3da20c9d0 <col:84> '_Bool' lvalue Var 0x55b3da20bbf0 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55b3da20cc20 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b3da20ca60 <col:101> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   |   `-ParenExpr 0x55b3da20cc00 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55b3da20cbd0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55b3da20cb40 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b3da20cad8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b3da20cac0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b3da20ca80 <col:106> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b3da20cb28 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b3da20cb10 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b3da20caa0 <col:124> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55b3da20cba0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b3da20cb60 <col:141> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55b3da20cbb8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b3da20cb80 <col:153> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b3da20d178 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b3da20cc88 <col:3> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55b3da20d148 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b3da20d118 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b3da20d100 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b3da20cca8 <col:15> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b3da20d130 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b3da20ccc8 <col:31> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b3da20d0e0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b3da20d0b0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b3da20ced8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b3da20cdf8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b3da20cd20 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b3da20cd08 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b3da20cce8 <col:45> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b3da20cdd8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b3da20cd70 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b3da20cd58 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b3da20cd38 <col:64> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55b3da20cdc0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b3da20cda8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b3da20cd88 <col:83> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b3da20ceb8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b3da20ce50 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b3da20ce38 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b3da20ce18 <col:102> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55b3da20cea0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b3da20ce88 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b3da20ce68 <col:121> '_Bool' lvalue Var 0x55b3da20bbf0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55b3da20d098 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b3da20cef8 <col:138> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55b3da20d078 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b3da20d048 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b3da20cfb8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b3da20cf70 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b3da20cf58 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b3da20cf18 <col:151> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b3da20cfa0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b3da20cf88 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b3da20cf38 <col:169> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55b3da20d018 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b3da20cfd8 <col:186> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55b3da20d030 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b3da20cff8 <col:198> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55b3da20d688 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b3da20d198 <col:3> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55b3da20d658 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b3da20d628 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b3da20d610 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b3da20d1b8 <col:15> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b3da20d640 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b3da20d1d8 <col:31> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55b3da20d5f0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b3da20d5c0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b3da20d3e8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b3da20d308 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b3da20d230 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b3da20d218 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b3da20d1f8 <col:45> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b3da20d2e8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b3da20d280 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b3da20d268 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b3da20d248 <col:64> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55b3da20d2d0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b3da20d2b8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b3da20d298 <col:83> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b3da20d3c8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b3da20d360 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b3da20d348 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b3da20d328 <col:102> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55b3da20d3b0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b3da20d398 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b3da20d378 <col:121> '_Bool' lvalue Var 0x55b3da20bbf0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55b3da20d5a8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b3da20d408 <col:138> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55b3da20d588 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b3da20d558 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b3da20d4c8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b3da20d480 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b3da20d468 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b3da20d428 <col:151> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b3da20d4b0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b3da20d498 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b3da20d448 <col:169> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55b3da20d528 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b3da20d4e8 <col:186> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55b3da20d540 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b3da20d508 <col:198> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b3da20dc48 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20d6a8 <col:3> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da20dc30 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da20dc00 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b3da20dbb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da20dba0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da20d6c8 <col:20> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da20dbe8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da20dbd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da20d6e8 <col:36> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55b3da20db80 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b3da20db50 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b3da20d8f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b3da20d818 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b3da20d740 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b3da20d728 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b3da20d708 <col:55> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b3da20d7f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b3da20d790 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b3da20d778 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b3da20d758 <col:74> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b3da20d7e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b3da20d7c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b3da20d7a8 <col:93> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b3da20d8d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b3da20d870 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b3da20d858 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b3da20d838 <col:112> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b3da20d8c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b3da20d8a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b3da20d888 <col:131> '_Bool' lvalue Var 0x55b3da20bbf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b3da20db38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b3da20db20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b3da20d918 <col:148> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55b3da20dae8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b3da20dab8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b3da20d9d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b3da20d990 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b3da20d978 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b3da20d938 <col:166> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b3da20d9c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b3da20d9a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b3da20d958 <col:184> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b3da20da70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b3da20da28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b3da20d9f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b3da20daa0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b3da20da88 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b3da20da50 <col:212> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b3da20e210 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20dc68 <col:3> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da20e1f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da20e1c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b3da20e180 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da20e168 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da20dc88 <col:20> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da20e1b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da20e198 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da20dca8 <col:36> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55b3da20e148 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b3da20e118 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b3da20deb8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b3da20ddd8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b3da20dd00 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b3da20dce8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b3da20dcc8 <col:55> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b3da20ddb8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b3da20dd50 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b3da20dd38 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b3da20dd18 <col:74> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b3da20dda0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b3da20dd88 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b3da20dd68 <col:93> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b3da20de98 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b3da20de30 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b3da20de18 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b3da20ddf8 <col:112> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b3da20de80 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b3da20de68 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b3da20de48 <col:131> '_Bool' lvalue Var 0x55b3da20bbf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b3da20e100 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b3da20e0e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b3da20ded8 <col:148> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55b3da20e0c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b3da20e098 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b3da20df98 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b3da20df50 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b3da20df38 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b3da20def8 <col:166> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b3da20df80 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b3da20df68 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b3da20df18 <col:184> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b3da20e068 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b3da20dfe8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b3da20dfb8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b3da20e080 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b3da20e040 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b3da20e010 <col:219> 'int' 0
|   |-BinaryOperator 0x55b3da20e7b8 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20e230 <col:3> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da20e7a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da20e770 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b3da20e728 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da20e710 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da20e250 <col:20> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da20e758 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da20e740 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da20e270 <col:36> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55b3da20e6f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b3da20e6c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b3da20e480 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b3da20e3a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b3da20e2c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b3da20e2b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b3da20e290 <col:55> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b3da20e380 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b3da20e318 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b3da20e300 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b3da20e2e0 <col:74> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b3da20e368 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b3da20e350 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b3da20e330 <col:93> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b3da20e460 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b3da20e3f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b3da20e3e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b3da20e3c0 <col:112> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b3da20e448 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b3da20e430 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b3da20e410 <col:131> '_Bool' lvalue Var 0x55b3da20bbf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b3da20e6a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b3da20e690 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b3da20e4a0 <col:148> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55b3da20e670 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b3da20e640 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b3da20e560 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b3da20e518 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b3da20e500 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b3da20e4c0 <col:166> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b3da20e548 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b3da20e530 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b3da20e4e0 <col:184> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b3da20e5f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b3da20e5b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b3da20e580 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b3da20e628 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b3da20e610 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b3da20e5d8 <col:212> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55b3da20eda8 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20e7d8 <col:3> '_Bool' lvalue Var 0x55b3da20bbf0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da20ed90 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da20ed60 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b3da20ed18 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da20ed00 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da20e7f8 <col:20> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da20ed48 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da20ed30 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da20e818 <col:36> '_Bool' lvalue Var 0x55b3da20bbf0 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55b3da20ece0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b3da20ecb0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b3da20ea28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b3da20e948 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b3da20e870 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b3da20e858 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b3da20e838 <col:55> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b3da20e928 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b3da20e8c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b3da20e8a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b3da20e888 <col:74> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55b3da20e910 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b3da20e8f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b3da20e8d8 <col:93> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b3da20ea08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b3da20e9a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b3da20e988 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b3da20e968 <col:112> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55b3da20e9f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b3da20e9d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b3da20e9b8 <col:131> '_Bool' lvalue Var 0x55b3da20bbf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55b3da20ec98 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b3da20ec80 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b3da20ea48 <col:148> '_Bool' lvalue Var 0x55b3da20bbf0 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55b3da20ec60 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b3da20ec30 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b3da20eb30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b3da20eac0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b3da20eaa8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b3da20ea68 <col:166> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b3da20eaf0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b3da20ead8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b3da20ea88 <col:184> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b3da20ec00 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b3da20eb80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b3da20eb50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b3da20ec18 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b3da20ebd8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b3da20eba8 <col:219> 'int' 0
|   |-BinaryOperator 0x55b3da20ee20 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b3da20edc8 <col:3> 'int' lvalue Var 0x55b3da20b408 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55b3da20ee08 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da20ede8 <col:25> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   |-BinaryOperator 0x55b3da20ef50 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55b3da20ee40 <col:3> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   | `-ConditionalOperator 0x55b3da20ef20 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55b3da20eed8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b3da20eec0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b3da20ee60 <col:7> '_Bool' lvalue Var 0x55b3da20b8f0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55b3da20eef0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b3da20ee80 <col:25> 'int' lvalue Var 0x55b3da20b970 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55b3da20ef08 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b3da20eea0 <col:37> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   |-BinaryOperator 0x55b3da20efe8 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20ef70 <col:3> '_Bool' lvalue Var 0x55b3da20b8f0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b3da20efc0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b3da20ef90 <col:28> 'int' 0
|   |-CallExpr 0x55b3da20f040 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b3da20f028 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20f008 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b3da20f098 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b3da20f080 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20f060 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55b3da20f0f0 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b3da20f0d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20f0b8 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b3da20f148 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b3da20f130 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20f110 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b3da20f200 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b3da20f168 <col:3> 'int' lvalue Var 0x55b3da20b1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b3da20f1e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b3da20f1c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b3da20f188 <col:22> 'int' lvalue Var 0x55b3da20b1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b3da20f1a8 <col:41> 'int' 1
|   |-CallExpr 0x55b3da20f258 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b3da20f240 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20f220 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b3da20f308 <line:732:3, col:36>
|     `-CallExpr 0x55b3da20f2e8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b3da20f2d0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b3da20f278 <col:10> 'void *(void)' Function 0x55b3da1b1ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b3da20f4b8 prev 0x55b3da20ae48 <line:734:1, line:777:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55b3da20f420 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b3da2136b8 <line:735:1, line:777:1>
|   |-CallExpr 0x55b3da20f598 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b3da20f580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20f560 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b3da20f610 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b3da20f5b8 <col:3> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55b3da20f5f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da20f5d8 <col:15> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55b3da20f670 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b3da20f630 <col:3> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55b3da20f650 <col:15> 'int' 1
|   |-BinaryOperator 0x55b3da20f6e8 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20f690 <col:3> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da20f6d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da20f6b0 <col:20> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b3da20f780 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20f708 <col:3> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55b3da20f758 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b3da20f728 <col:27> 'int' 1
|   |-CallExpr 0x55b3da20f908 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55b3da20f8f0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55b3da20f7a0 <col:3> 'void (int)' Function 0x55b3da1b1d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55b3da20f8a0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55b3da20f880 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55b3da20f860 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55b3da20f818 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55b3da20f800 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55b3da20f7c0 <col:23> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55b3da20f848 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55b3da20f830 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55b3da20f7e0 <col:41> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b3da20f988 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20f930 <col:3> '_Bool' lvalue Var 0x55b3da20bb78 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da20f970 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da20f950 <col:20> '_Bool' lvalue Var 0x55b3da20b9e8 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55b3da20fa00 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20f9a8 <col:3> '_Bool' lvalue Var 0x55b3da20bbf0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da20f9e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da20f9c8 <col:20> '_Bool' lvalue Var 0x55b3da20ba60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55b3da20fa78 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20fa20 <col:3> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da20fa60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da20fa40 <col:20> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b3da20fb10 <line:745:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20fa98 <col:3> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55b3da20fae8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b3da20fab8 <col:27> 'int' 1
|   |-CallExpr 0x55b3da20fb78 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b3da20fb60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20fb40 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b3da20fbd0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b3da20fbb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da20fb98 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b3da20fc68 <line:748:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20fbf0 <col:3> '_Bool' lvalue Var 0x55b3da20c0e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55b3da20fc48 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b3da20fc30 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b3da20fc10 <col:19> '_Bool (void)' Function 0x55b3da1b1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b3da20fd00 <line:749:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20fc88 <col:3> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55b3da20fce0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b3da20fcc8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b3da20fca8 <col:19> '_Bool (void)' Function 0x55b3da1b1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b3da20fd78 <line:750:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da20fd20 <col:3> '_Bool' lvalue Var 0x55b3da20b8f0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da20fd60 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da20fd40 <col:21> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55b3da20fdf0 <line:751:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b3da20fd98 <col:3> 'int' lvalue Var 0x55b3da20b970 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55b3da20fdd8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da20fdb8 <col:15> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   |-BinaryOperator 0x55b3da210228 <line:752:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55b3da20fe10 <col:3> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   | `-ConditionalOperator 0x55b3da2101f8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55b3da210020 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55b3da20ff40 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55b3da20fe68 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55b3da20fe50 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55b3da20fe30 <col:8> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55b3da20ff20 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55b3da20feb8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55b3da20fea0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55b3da20fe80 <col:27> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55b3da20ff08 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55b3da20fef0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55b3da20fed0 <col:46> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55b3da210000 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55b3da20ff98 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55b3da20ff80 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55b3da20ff60 <col:65> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55b3da20ffe8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55b3da20ffd0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55b3da20ffb0 <col:84> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b3da2101e0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b3da210040 <col:101> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   |   `-ParenExpr 0x55b3da2101c0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55b3da210190 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55b3da210100 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b3da2100b8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b3da2100a0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b3da210060 <col:106> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b3da2100e8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b3da2100d0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b3da210080 <col:124> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b3da210160 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b3da210120 <col:141> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55b3da210178 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b3da210140 <col:153> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b3da210738 <line:753:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b3da210248 <col:3> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55b3da210708 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b3da2106d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b3da2106c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b3da210268 <col:15> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b3da2106f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b3da210288 <col:31> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b3da2106a0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b3da210670 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b3da210498 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b3da2103b8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b3da2102e0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b3da2102c8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b3da2102a8 <col:45> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b3da210398 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b3da210330 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b3da210318 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b3da2102f8 <col:64> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55b3da210380 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b3da210368 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b3da210348 <col:83> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b3da210478 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b3da210410 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b3da2103f8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b3da2103d8 <col:102> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55b3da210460 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b3da210448 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b3da210428 <col:121> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b3da210658 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b3da2104b8 <col:138> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55b3da210638 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b3da210608 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b3da210578 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b3da210530 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b3da210518 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b3da2104d8 <col:151> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b3da210560 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b3da210548 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b3da2104f8 <col:169> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55b3da2105d8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b3da210598 <col:186> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55b3da2105f0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b3da2105b8 <col:198> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55b3da210c80 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b3da210758 <col:3> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55b3da210c50 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b3da210c20 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b3da210c08 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b3da210778 <col:15> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b3da210c38 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b3da210798 <col:31> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55b3da210be8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b3da210bb8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b3da2109a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b3da2108c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b3da2107f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b3da2107d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b3da2107b8 <col:45> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b3da2108a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b3da210840 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b3da210828 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b3da210808 <col:64> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55b3da210890 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b3da210878 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b3da210858 <col:83> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b3da210988 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b3da210920 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b3da210908 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b3da2108e8 <col:102> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55b3da210970 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b3da210958 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b3da210938 <col:121> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b3da210ba0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b3da2109c8 <col:138> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55b3da210b80 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b3da210b50 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b3da210a88 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b3da210a40 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b3da210a28 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b3da2109e8 <col:151> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b3da210a70 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b3da210a58 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b3da210a08 <col:169> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55b3da210ae8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b3da210aa8 <col:186> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55b3da210b00 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b3da210ac8 <col:198> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b3da211228 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da210ca0 <col:3> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da211210 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da2111e0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b3da211198 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da211180 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da210cc0 <col:20> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da2111c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da2111b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da210ce0 <col:36> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55b3da211160 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b3da211130 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b3da210ef0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b3da210e10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b3da210d38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b3da210d20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b3da210d00 <col:55> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b3da210df0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b3da210d88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b3da210d70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b3da210d50 <col:74> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b3da210dd8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b3da210dc0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b3da210da0 <col:93> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b3da210ed0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b3da210e68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b3da210e50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b3da210e30 <col:112> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b3da210eb8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b3da210ea0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b3da210e80 <col:131> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b3da211118 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b3da211100 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b3da210f10 <col:148> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55b3da2110e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b3da2110b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b3da210fd0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b3da210f88 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b3da210f70 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b3da210f30 <col:166> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b3da210fb8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b3da210fa0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b3da210f50 <col:184> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b3da211068 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b3da211020 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b3da210ff0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b3da211098 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b3da211080 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b3da211048 <col:212> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b3da2117f0 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da211248 <col:3> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da2117d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da2117a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b3da211760 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da211748 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da211268 <col:20> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da211790 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da211778 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da211288 <col:36> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55b3da211728 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b3da2116f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b3da211498 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b3da2113b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b3da2112e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b3da2112c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b3da2112a8 <col:55> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b3da211398 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b3da211330 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b3da211318 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b3da2112f8 <col:74> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b3da211380 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b3da211368 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b3da211348 <col:93> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b3da211478 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b3da211410 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b3da2113f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b3da2113d8 <col:112> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b3da211460 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b3da211448 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b3da211428 <col:131> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b3da2116e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b3da2116c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b3da2114b8 <col:148> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55b3da2116a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b3da211678 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b3da211578 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b3da211530 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b3da211518 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b3da2114d8 <col:166> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b3da211560 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b3da211548 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b3da2114f8 <col:184> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b3da211648 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b3da2115c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b3da211598 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b3da211660 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b3da211620 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b3da2115f0 <col:219> 'int' 0
|   |-BinaryOperator 0x55b3da211db8 <line:757:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da211810 <col:3> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da211da0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da211d70 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b3da211d28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da211d10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da211830 <col:20> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da211d58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da211d40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da211850 <col:36> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55b3da211cf0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b3da211cc0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b3da211a60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b3da211980 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b3da2118a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b3da211890 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b3da211870 <col:55> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b3da211960 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b3da2118f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b3da2118e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b3da2118c0 <col:74> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b3da211948 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b3da211930 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b3da211910 <col:93> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b3da211a40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b3da2119d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b3da2119c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b3da2119a0 <col:112> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b3da211a28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b3da211a10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b3da2119f0 <col:131> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b3da211ca8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b3da211c90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b3da211a80 <col:148> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55b3da211c70 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b3da211c40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b3da211b60 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b3da211af8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b3da211ae0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b3da211aa0 <col:166> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b3da211b28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b3da211b10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b3da211ac0 <col:184> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b3da211bf8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b3da211bb0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b3da211b80 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b3da211c28 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b3da211c10 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b3da211bd8 <col:212> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b3da212380 <line:758:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da211dd8 <col:3> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da212368 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da212338 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b3da2122f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da2122d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da211df8 <col:20> '_Bool' lvalue Var 0x55b3da20c160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da212320 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b3da212308 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b3da211e18 <col:36> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55b3da2122b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b3da212288 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b3da212028 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b3da211f48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b3da211e70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b3da211e58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b3da211e38 <col:55> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b3da211f28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b3da211ec0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b3da211ea8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b3da211e88 <col:74> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b3da211f10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b3da211ef8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b3da211ed8 <col:93> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b3da212008 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b3da211fa0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b3da211f88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b3da211f68 <col:112> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b3da211ff0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b3da211fd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b3da211fb8 <col:131> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b3da212270 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b3da212258 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b3da212048 <col:148> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55b3da212238 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b3da212208 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b3da212108 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b3da2120c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b3da2120a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b3da212068 <col:166> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b3da2120f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b3da2120d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b3da212088 <col:184> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b3da2121d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b3da212158 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b3da212128 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b3da2121f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b3da2121b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b3da212180 <col:219> 'int' 0
|   |-BinaryOperator 0x55b3da2123f8 <line:759:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b3da2123a0 <col:3> 'int' lvalue Var 0x55b3da20b528 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b3da2123e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da2123c0 <col:25> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   |-BinaryOperator 0x55b3da212528 <line:760:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55b3da212418 <col:3> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   | `-ConditionalOperator 0x55b3da2124f8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55b3da2124b0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b3da212498 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b3da212438 <col:7> '_Bool' lvalue Var 0x55b3da20b8f0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55b3da2124c8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b3da212458 <col:25> 'int' lvalue Var 0x55b3da20b970 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55b3da2124e0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b3da212478 <col:37> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   |-BinaryOperator 0x55b3da2125c0 <line:761:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da212548 <col:3> '_Bool' lvalue Var 0x55b3da20b8f0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b3da212598 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b3da212568 <col:28> 'int' 0
|   |-CallExpr 0x55b3da212618 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b3da212600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da2125e0 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b3da212670 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b3da212658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da212638 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b3da2126e8 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b3da212690 <col:3> 'int' lvalue Var 0x55b3da20b648 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55b3da2126d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b3da2126b0 <col:25> 'int' lvalue Var 0x55b3da20c050 'y' 'int'
|   |-CallExpr 0x55b3da212740 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b3da212728 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da212708 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b3da212798 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b3da212780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da212760 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b3da212a80 <line:767:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b3da2127b8 <col:3> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   | `-ConditionalOperator 0x55b3da212a50 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b3da212878 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b3da212830 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b3da212818 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b3da2127d8 <col:7> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b3da212860 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b3da212848 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b3da2127f8 <col:25> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b3da212a38 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b3da212898 <col:42> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b3da212a18 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b3da2129e8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b3da212958 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b3da212910 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b3da2128f8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b3da2128b8 <col:55> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b3da212940 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b3da212928 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b3da2128d8 <col:73> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b3da2129b8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b3da212978 <col:90> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b3da2129d0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b3da212998 <col:102> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
|   |-BinaryOperator 0x55b3da212c98 <line:768:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da212aa0 <col:3> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da212c80 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da212c50 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b3da212b70 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b3da212b18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b3da212b00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b3da212ac0 <col:20> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b3da212b48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b3da212b30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b3da212ae0 <col:38> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da212c08 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b3da212bc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b3da212b90 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b3da212c38 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b3da212c20 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b3da212be8 <col:66> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b3da212f80 <line:769:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da212cb8 <col:3> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da212f68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da212f38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b3da212e58 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b3da212d78 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b3da212d30 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b3da212d18 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b3da212cd8 <col:20> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b3da212d60 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b3da212d48 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b3da212cf8 <col:38> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55b3da212e38 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b3da212df0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b3da212dd8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b3da212d98 <col:56> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b3da212e20 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b3da212e08 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b3da212db8 <col:74> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da212ef0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b3da212ea8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b3da212e78 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b3da212f20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b3da212f08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b3da212ed0 <col:102> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b3da213188 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da212fa0 <col:3> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da213170 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da213140 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b3da213060 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b3da213018 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b3da213000 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b3da212fc0 <col:20> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b3da213048 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b3da213030 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b3da212fe0 <col:38> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da2130f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b3da2130b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b3da213080 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b3da213128 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b3da213110 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b3da2130d8 <col:66> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b3da213470 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b3da2131a8 <col:3> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b3da213458 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b3da213428 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b3da213348 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b3da213268 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b3da213220 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b3da213208 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b3da2131c8 <col:20> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b3da213250 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b3da213238 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b3da2131e8 <col:38> '_Bool' lvalue Var 0x55b3da20bb00 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55b3da213328 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b3da2132e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b3da2132c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b3da213288 <col:56> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b3da213310 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b3da2132f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b3da2132a8 <col:74> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b3da2133e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b3da213398 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b3da213368 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b3da213410 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b3da2133f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b3da2133c0 <col:102> '_Bool' lvalue Var 0x55b3da20bc68 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55b3da2134c8 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b3da2134b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da213490 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b3da213520 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b3da213508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da2134e8 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b3da2135d8 <line:774:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b3da213540 <col:3> 'int' lvalue Var 0x55b3da20b1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b3da2135b8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b3da2135a0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b3da213560 <col:22> 'int' lvalue Var 0x55b3da20b1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b3da213580 <col:41> 'int' 1
|   |-CallExpr 0x55b3da213630 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b3da213618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b3da2135f8 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b3da2136a8 <line:776:3, col:36>
|     `-CallExpr 0x55b3da213688 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b3da213670 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b3da213650 <col:10> 'void *(void)' Function 0x55b3da1b1ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b3da213830 prev 0x55b3da20af10 <line:778:1, line:780:1> line:778:6 fence 'void ()'
| `-CompoundStmt 0x55b3da2138d0 <line:779:1, line:780:1>
|-FunctionDecl 0x55b3da213900 prev 0x55b3da20afd0 <line:781:1, line:783:1> line:781:6 isync 'void ()'
| `-CompoundStmt 0x55b3da2139a0 <line:782:1, line:783:1>
|-FunctionDecl 0x55b3da2139d0 prev 0x55b3da20b090 <line:784:1, line:786:1> line:784:6 lwfence 'void ()'
| `-CompoundStmt 0x55b3da213a70 <line:785:1, line:786:1>
`-FunctionDecl 0x55b3da213b80 <line:787:1, line:809:1> line:787:5 main 'int ()'
  `-CompoundStmt 0x55b3da2155d0 <line:788:1, line:809:1>
    |-DeclStmt 0x55b3da213c98 <line:789:3, col:16>
    | `-VarDecl 0x55b3da213c30 <col:3, col:13> col:13 used t10 'pthread_t':'unsigned long'
    |-CallExpr 0x55b3da213ea8 <line:790:3, col:52> 'int'
    | |-ImplicitCastExpr 0x55b3da213e90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b3da213cb0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b3da1f25b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b3da213cf0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b3da213cd0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b3da213c30 't10' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b3da213ee8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b3da213d68 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x55b3da213d40 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b3da213d08 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x55b3da213f00 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b3da213d88 <col:37> 'void *(void *)' Function 0x55b3da20c278 'P0' 'void *(void *)'
    | `-ParenExpr 0x55b3da213e08 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x55b3da213de0 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b3da213da8 <col:50> 'int' 0
    |-DeclStmt 0x55b3da213f90 <line:791:3, col:16>
    | `-VarDecl 0x55b3da213f28 <col:3, col:13> col:13 used t11 'pthread_t':'unsigned long'
    |-CallExpr 0x55b3da214138 <line:792:3, col:52> 'int'
    | |-ImplicitCastExpr 0x55b3da214120 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b3da213fa8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b3da1f25b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b3da213fe8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b3da213fc8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b3da213f28 't11' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b3da214178 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b3da214060 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x55b3da214038 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b3da214000 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x55b3da214190 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b3da214080 <col:37> 'void *(void *)' Function 0x55b3da20f4b8 'P1' 'void *(void *)'
    | `-ParenExpr 0x55b3da214100 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x55b3da2140d8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b3da2140a0 <col:50> 'int' 0
    |-CallExpr 0x55b3da2141e0 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b3da2141c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b3da2141a8 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b3da2142b0 <line:794:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55b3da214200 <col:3> '_Bool' lvalue Var 0x55b3da20b6e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55b3da214298 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55b3da214278 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55b3da214260 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55b3da214220 <col:21> 'int' lvalue Var 0x55b3da20b1c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55b3da214240 <col:41> 'int' 2
    |-CallExpr 0x55b3da214308 <line:795:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b3da2142f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b3da2142d0 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b3da214380 <line:796:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b3da214368 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b3da214328 <col:3> 'void (int)' Function 0x55b3da1b1940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55b3da2143c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b3da2143a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b3da214348 <col:21> '_Bool' lvalue Var 0x55b3da20b6e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55b3da214410 <line:797:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b3da2143f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b3da2143d8 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b3da2146f8 <line:798:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55b3da214430 <col:3> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
    | `-ConditionalOperator 0x55b3da2146c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55b3da2144f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55b3da2144a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55b3da214490 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55b3da214450 <col:7> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55b3da2144d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55b3da2144c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55b3da214470 <col:25> '_Bool' lvalue Var 0x55b3da20b9e8 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55b3da2146b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b3da214510 <col:42> 'int' lvalue Var 0x55b3da20bde0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55b3da214690 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55b3da214660 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55b3da2145d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55b3da214588 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55b3da214570 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55b3da214530 <col:55> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55b3da2145b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55b3da2145a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55b3da214550 <col:73> '_Bool' lvalue Var 0x55b3da20bb78 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b3da214630 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b3da2145f0 <col:90> 'int' lvalue Var 0x55b3da20bed8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55b3da214648 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55b3da214610 <col:102> 'int' lvalue Var 0x55b3da20b858 'x' 'int'
    |-BinaryOperator 0x55b3da214900 <line:799:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b3da214718 <col:3> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55b3da2148e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b3da2148b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b3da2147d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b3da214790 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b3da214778 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b3da214738 <col:20> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b3da2147c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b3da2147a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b3da214758 <col:38> '_Bool' lvalue Var 0x55b3da20b9e8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b3da214870 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b3da214828 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b3da2147f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b3da2148a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b3da214888 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b3da214850 <col:66> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55b3da214c08 <line:800:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b3da214920 <col:3> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55b3da214bf0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b3da214bc0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b3da214ac0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b3da2149e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b3da214998 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b3da214980 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b3da214940 <col:20> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b3da2149c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b3da2149b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b3da214960 <col:38> '_Bool' lvalue Var 0x55b3da20b9e8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b3da214aa0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b3da214a58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b3da214a40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b3da214a00 <col:56> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b3da214a88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b3da214a70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b3da214a20 <col:74> '_Bool' lvalue Var 0x55b3da20bb78 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b3da214b58 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b3da214b10 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b3da214ae0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b3da214ba8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b3da214b90 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b3da214b38 <col:102> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55b3da214e10 <line:801:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b3da214c28 <col:3> '_Bool' lvalue Var 0x55b3da20b9e8 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b3da214df8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b3da214dc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b3da214ce8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b3da214ca0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b3da214c88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b3da214c48 <col:20> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b3da214cd0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b3da214cb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b3da214c68 <col:38> '_Bool' lvalue Var 0x55b3da20b9e8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b3da214d80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b3da214d38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b3da214d08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b3da214db0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b3da214d98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b3da214d60 <col:66> '_Bool' lvalue Var 0x55b3da20b9e8 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55b3da2150f8 <line:802:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b3da214e30 <col:3> '_Bool' lvalue Var 0x55b3da20bb78 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b3da2150e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b3da2150b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b3da214fd0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b3da214ef0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b3da214ea8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b3da214e90 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b3da214e50 <col:20> '_Bool' lvalue Var 0x55b3da20be58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b3da214ed8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b3da214ec0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b3da214e70 <col:38> '_Bool' lvalue Var 0x55b3da20b9e8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b3da214fb0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b3da214f68 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b3da214f50 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b3da214f10 <col:56> '_Bool' lvalue Var 0x55b3da20bf50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b3da214f98 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b3da214f80 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b3da214f30 <col:74> '_Bool' lvalue Var 0x55b3da20bb78 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b3da215068 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b3da215020 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b3da214ff0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b3da215098 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b3da215080 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b3da215048 <col:102> '_Bool' lvalue Var 0x55b3da20bb78 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55b3da215150 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b3da215138 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b3da215118 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b3da2151a8 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b3da215190 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b3da215170 <col:3> 'void ()' Function 0x55b3da1b1fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b3da215478 <line:805:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x55b3da2151c8 <col:3> '_Bool' lvalue Var 0x55b3da20b758 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55b3da215460 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55b3da215448 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55b3da215428 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x55b3da215408 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x55b3da215370 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x55b3da2152d8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x55b3da215240 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55b3da215228 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55b3da2151e8 <col:23> 'int' lvalue Var 0x55b3da20b2e8 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x55b3da215208 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x55b3da2152b8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55b3da2152a0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55b3da215260 <col:51> 'int' lvalue Var 0x55b3da20b408 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55b3da215280 <col:74> 'int' 0
    |         | `-BinaryOperator 0x55b3da215350 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55b3da215338 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55b3da2152f8 <col:79> 'int' lvalue Var 0x55b3da20b528 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55b3da215318 <col:102> 'int' 1
    |         `-BinaryOperator 0x55b3da2153e8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x55b3da2153d0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55b3da215390 <col:107> 'int' lvalue Var 0x55b3da20b648 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55b3da2153b0 <col:130> 'int' 0
    |-CallExpr 0x55b3da2154d0 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b3da2154b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b3da215498 <col:3> 'void ()' Function 0x55b3da1b2060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b3da215548 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b3da215530 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b3da2154f0 <col:3> 'void (int)' Function 0x55b3da1b1d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55b3da215588 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b3da215570 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b3da215510 <col:21> '_Bool' lvalue Var 0x55b3da20b758 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55b3da2155c0 <line:808:3, col:10>
      `-IntegerLiteral 0x55b3da2155a0 <col:10> 'int' 0
