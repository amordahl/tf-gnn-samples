TranslationUnitDecl 0x55b2b0d9ae18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55b2b0d9b6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55b2b0d9b3b0 '__int128'
|-TypedefDecl 0x55b2b0d9b748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55b2b0d9b3d0 'unsigned __int128'
|-TypedefDecl 0x55b2b0d9ba50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55b2b0d9b820 'struct __NSConstantString_tag'
|   `-Record 0x55b2b0d9b7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55b2b0d9baf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55b2b0d9bab0 'char *'
|   `-BuiltinType 0x55b2b0d9aeb0 'char'
|-TypedefDecl 0x55b2b0dda650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55b2b0d9bd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55b2b0d9bbd0 'struct __va_list_tag'
|     `-Record 0x55b2b0d9bb50 '__va_list_tag'
|-FunctionDecl 0x55b2b0dda770 <./split_3/rfi009_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55b2b0dda940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55b2b0dda870 <col:31> col:34 'int'
|-FunctionDecl 0x55b2b0ddaab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55b2b0ddabe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55b2b0ddad28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55b2b0ddac98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55b2b0ddaf58 <col:40, col:99>
|   |-IfStmt 0x55b2b0ddaf28 <col:42, col:88>
|   | |-UnaryOperator 0x55b2b0ddae08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55b2b0ddadf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55b2b0ddadd0 <col:47> 'int' lvalue ParmVar 0x55b2b0ddac98 'expression' 'int'
|   | `-CompoundStmt 0x55b2b0ddaf10 <col:59, col:88>
|   |   `-LabelStmt 0x55b2b0ddaef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55b2b0ddae88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55b2b0ddae70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55b2b0ddae20 <col:68> 'void () __attribute__((noreturn))' Function 0x55b2b0ddabe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55b2b0ddaf40 <col:89>
|   `-ReturnStmt 0x55b2b0ddaf48 <col:91>
|-FunctionDecl 0x55b2b0ddafa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55b2b0ddb060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55b2b0ddb3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b2b0ddb118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55b2b0ddb198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55b2b0ddb218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b2b0ddb298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b2b0ddb4a0 <line:11:22>
|-FunctionDecl 0x55b2b0e01520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b2b0ddb510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55b2b0ddb590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55b2b0e01350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55b2b0e013d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55b2b0e015e0 <line:14:22>
|-FunctionDecl 0x55b2b0e01890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b2b0e01650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55b2b0e016d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55b2b0e01750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55b2b0e01948 <line:16:22>
|-TypedefDecl 0x55b2b0e019b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55b2b0d9af70 'unsigned char'
|-TypedefDecl 0x55b2b0e01a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55b2b0d9af90 'unsigned short'
|-TypedefDecl 0x55b2b0e01a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55b2b0d9afb0 'unsigned int'
|-TypedefDecl 0x55b2b0e01b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e01b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55b2b0d9aed0 'signed char'
|-TypedefDecl 0x55b2b0e01be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55b2b0d9af70 'unsigned char'
|-TypedefDecl 0x55b2b0e01c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55b2b0d9aef0 'short'
|-TypedefDecl 0x55b2b0e01cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55b2b0d9af90 'unsigned short'
|-TypedefDecl 0x55b2b0e01d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55b2b0d9af10 'int'
|-TypedefDecl 0x55b2b0e01da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55b2b0d9afb0 'unsigned int'
|-TypedefDecl 0x55b2b0e01e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e01e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e01ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e01f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e01fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e02048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55b2b0d9afb0 'unsigned int'
|-TypedefDecl 0x55b2b0e020b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55b2b0d9afb0 'unsigned int'
|-TypedefDecl 0x55b2b0e02128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e02198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e02208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55b2b0d9afb0 'unsigned int'
|-TypedefDecl 0x55b2b0e02278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e022e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e02378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e023e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55b2b0d9af10 'int'
|-RecordDecl 0x55b2b0e02440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55b2b0e02588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55b2b0e02640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55b2b0e025e0 'struct __fsid_t' sugar
|   `-RecordType 0x55b2b0e024c0 '__fsid_t'
|     `-Record 0x55b2b0e02440 ''
|-TypedefDecl 0x55b2b0e026c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e02738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e027a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e02818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55b2b0d9afb0 'unsigned int'
|-TypedefDecl 0x55b2b0e02888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e028f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55b2b0d9afb0 'unsigned int'
|-TypedefDecl 0x55b2b0e02968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e029d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55b2b0d9af10 'int'
|-TypedefDecl 0x55b2b0e02a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55b2b0d9af10 'int'
|-TypedefDecl 0x55b2b0e02ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55b2b0d9af10 'int'
|-TypedefDecl 0x55b2b0e02b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55b2b0d9b630 'void *'
|   `-BuiltinType 0x55b2b0d9ae70 'void'
|-TypedefDecl 0x55b2b0e02b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e02c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e02c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e02ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e02d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e02dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e02e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e02ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e02f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e02f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e02ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e03088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55b2b0e03050 '__off64_t' sugar
|   |-Typedef 0x55b2b0e02378 '__off64_t'
|   `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e03180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55b2b0e03140 '__quad_t *'
|   `-TypedefType 0x55b2b0e030e0 '__quad_t' sugar
|     |-Typedef 0x55b2b0e01ef8 '__quad_t'
|     `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e031f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55b2b0d9bab0 'char *'
|   `-BuiltinType 0x55b2b0d9aeb0 'char'
|-TypedefDecl 0x55b2b0e03260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e032d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55b2b0d9afb0 'unsigned int'
|-FunctionDecl 0x55b2b0e04458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55b2b0e04380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55b2b0e04768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55b2b0e04758 <line:73:3, col:34>
|     `-CallExpr 0x55b2b0e04718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55b2b0e04700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b2b0e04690 <col:10> '<builtin fn type>' Function 0x55b2b0e04500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55b2b0e04740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b2b0e046b0 <col:29> 'unsigned int' lvalue ParmVar 0x55b2b0e04380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55b2b0e04500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55b2b0e045a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55b2b0e04610 <col:10> Implicit
| `-ConstAttr 0x55b2b0e04668 <col:10> Implicit
|-FunctionDecl 0x55b2b0e048c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55b2b0e047b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55b2b0e04bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55b2b0e04bc8 <line:78:3, col:34>
|     `-CallExpr 0x55b2b0e04b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55b2b0e04b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55b2b0e04af8 <col:10> '<builtin fn type>' Function 0x55b2b0e04968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55b2b0e04bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55b2b0e04b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55b2b0e047b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55b2b0e04968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55b2b0e04a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55b2b0e04a78 <col:10> Implicit
| `-ConstAttr 0x55b2b0e04ad0 <col:10> Implicit
|-TypedefDecl 0x55b2b0e04c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-TypedefDecl 0x55b2b0e04c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55b2b0e04c60 '__time_t' sugar
|   |-Typedef 0x55b2b0e02888 '__time_t'
|   `-BuiltinType 0x55b2b0d9af30 'long'
|-RecordDecl 0x55b2b0e04cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55b2b0e04da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55b2b0e04e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55b2b0e04ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55b2b0e04e90 '__pid_t' sugar
|   |-Typedef 0x55b2b0e023e8 '__pid_t'
|   `-BuiltinType 0x55b2b0d9af10 'int'
|-RecordDecl 0x55b2b0e04f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55b2b0e04fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55b2b0e05030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55b2b0e050f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55b2b0e05158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-RecordDecl 0x55b2b0e051b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55b2b0e06480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55b2b0e06530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55b2b0e064d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55b2b0e05230 'cpu_set_t'
|     `-Record 0x55b2b0e051b0 ''
|-FunctionDecl 0x55b2b0e06808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55b2b0e065d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b2b0e066e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55b2b0e068b8 <line:108:19>
|-FunctionDecl 0x55b2b0e06a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55b2b0e06920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55b2b0e06b38 <col:69>
|-FunctionDecl 0x55b2b0e06cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55b2b0e06ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55b2b0e06d58 <col:64>
|-FunctionDecl 0x55b2b0e07018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b2b0e06dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b2b0e06ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b2b0e070c8 <line:114:22>
|-FunctionDecl 0x55b2b0e073b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55b2b0e07130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b2b0e07228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55b2b0e07460 <col:88>
|-FunctionDecl 0x55b2b0e07718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b2b0e074c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b2b0e07548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55b2b0e075d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55b2b0e077d0 <col:62>
|-FunctionDecl 0x55b2b0e07948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55b2b0e07838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55b2b0e079f0 <col:63>
|-FunctionDecl 0x55b2b0e07b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55b2b0e07bb8 <col:47>
|-FunctionDecl 0x55b2b0e07cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55b2b0e07c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b2b0e07d68 <col:69>
|-FunctionDecl 0x55b2b0e07e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55b2b0e07dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55b2b0e07f18 <col:69>
|-FunctionDecl 0x55b2b0e081d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b2b0e07f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55b2b0e080b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55b2b0e08288 <col:88>
|-TypedefDecl 0x55b2b0e08318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55b2b0e082e0 '__clock_t' sugar
|   |-Typedef 0x55b2b0e026c8 '__clock_t'
|   `-BuiltinType 0x55b2b0d9af30 'long'
|-TypedefDecl 0x55b2b0e083c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55b2b0e08370 '__clockid_t' sugar
|   |-Typedef 0x55b2b0e02ab8 '__clockid_t'
|   `-BuiltinType 0x55b2b0d9af10 'int'
|-TypedefDecl 0x55b2b0e08458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55b2b0e08420 '__timer_t' sugar
|   |-Typedef 0x55b2b0e02b28 '__timer_t'
|   `-PointerType 0x55b2b0d9b630 'void *'
|     `-BuiltinType 0x55b2b0d9ae70 'void'
|-RecordDecl 0x55b2b0e084b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55b2b0e08570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55b2b0e085d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55b2b0e08640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55b2b0e086a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55b2b0e08710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55b2b0e08778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55b2b0e087e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55b2b0e08848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55b2b0e088b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55b2b0e08918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55b2b0e08980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55b2b0e089d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55b2b0e08a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55b2b0e08b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55b2b0e08bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55b2b0e08d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55b2b0e08e20 <col:45>
|-FunctionDecl 0x55b2b0e09000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55b2b0e08ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55b2b0e090a8 <col:54>
|-FunctionDecl 0x55b2b0e092a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55b2b0e09110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55b2b0e09188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55b2b0e09358 <line:158:22>
| `-ConstAttr 0x55b2b0e09ff0 <col:63>
|-FunctionDecl 0x55b2b0e0a1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b2b0e0a0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b2b0e0a298 <col:56>
|-FunctionDecl 0x55b2b0e0a640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55b2b0e0a308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55b2b0e0a380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b2b0e0a400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55b2b0e0a4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55b2b0e0a700 <col:54>
|-RecordDecl 0x55b2b0e0a758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55b2b0e0a808 parent 0x55b2b0d9ae18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55b2b0e0aa68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55b2b0e0ab08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55b2b0e0ab70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55b2b0e0abd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55b2b0e0acc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55b2b0e0ade8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55b2b0e0ad90 'struct __locale_struct *'
|   `-ElaboratedType 0x55b2b0e0ad20 'struct __locale_struct' sugar
|     `-RecordType 0x55b2b0e0a7e0 'struct __locale_struct'
|       `-Record 0x55b2b0e0a758 '__locale_struct'
|-TypedefDecl 0x55b2b0e0ae98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55b2b0e0ae60 '__locale_t' sugar
|   |-Typedef 0x55b2b0e0ade8 '__locale_t'
|   `-PointerType 0x55b2b0e0ad90 'struct __locale_struct *'
|     `-ElaboratedType 0x55b2b0e0ad20 'struct __locale_struct' sugar
|       `-RecordType 0x55b2b0e0a7e0 'struct __locale_struct'
|         `-Record 0x55b2b0e0a758 '__locale_struct'
|-FunctionDecl 0x55b2b0e0c2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55b2b0e0af08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55b2b0e0af80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55b2b0e0c028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55b2b0e0c0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b2b0e0c130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55b2b0e0c368 <col:40>
|-FunctionDecl 0x55b2b0e0c558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b2b0e0c430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55b2b0e0c600 <col:66>
|-FunctionDecl 0x55b2b0e0c710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55b2b0e0c668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55b2b0e0c7b8 <col:69>
|-FunctionDecl 0x55b2b0e0c9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b2b0e0c820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b2b0e0c8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b2b0e0ca98 <col:52>
|-FunctionDecl 0x55b2b0e0cc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55b2b0e0cb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b2b0e0cb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55b2b0e0ccf0 <col:55>
|-FunctionDecl 0x55b2b0e0ce88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55b2b0e0cd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55b2b0e0cf30 <col:62>
|-FunctionDecl 0x55b2b0e0d168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55b2b0e0cf98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55b2b0e0d210 <col:60>
|-FunctionDecl 0x55b2b0e0d438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b2b0e0d290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55b2b0e0d310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55b2b0e0d4e8 <col:44>
|-FunctionDecl 0x55b2b0e0d6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55b2b0e0d550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55b2b0e0d5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55b2b0e0d7a8 <col:49>
|-VarDecl 0x55b2b0e0d8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55b2b0e0d928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55b2b0e0d9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55b2b0e0da70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55b2b0e0dba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55b2b0e0dc40 <col:42>
|-VarDecl 0x55b2b0e0dcb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55b2b0e0dd30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55b2b0e0deb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55b2b0e0dda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55b2b0e0df60 <col:57>
|-FunctionDecl 0x55b2b0e0e0d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b2b0e0dfe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55b2b0e0e178 <col:56>
|-FunctionDecl 0x55b2b0e0e288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55b2b0e0e1f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55b2b0e0e330 <col:59>
|-FunctionDecl 0x55b2b0e0e438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55b2b0e0e3a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55b2b0e0e4e0 <col:48>
| `-ConstAttr 0x55b2b0e0e538 <col:89>
|-FunctionDecl 0x55b2b0e0e798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b2b0e0e5e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55b2b0e0e678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55b2b0e0e9f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b2b0e0e888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b2b0e0e918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55b2b0e0eaa8 <col:88>
|-FunctionDecl 0x55b2b0e0ec40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55b2b0e0eb10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b2b0e0eba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55b2b0e0ecf0 <col:88>
|-FunctionDecl 0x55b2b0e0ef08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55b2b0e0ed58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b2b0e0ede8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55b2b0e0efb8 <line:209:22>
|-FunctionDecl 0x55b2b0e0f358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55b2b0e0f020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b2b0e0f0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55b2b0e0f170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55b2b0e0f200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55b2b0e0f658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55b2b0e0f458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55b2b0e0f530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55b2b0e0f708 <col:85>
|-FunctionDecl 0x55b2b0e0faf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55b2b0e0f770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55b2b0e0f8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55b2b0e0f9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55b2b0e0fbb0 <col:52>
|-FunctionDecl 0x55b2b0e0fd28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55b2b0e0fc18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b2b0e0fdd0 <col:61>
|-FunctionDecl 0x55b2b0e10248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55b2b0e0fe38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b2b0e0feb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55b2b0e0ffe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55b2b0e100f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55b2b0e10308 <col:62>
|-FunctionDecl 0x55b2b0e10528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55b2b0e10370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55b2b0e10400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55b2b0e105d8 <line:222:22>
|-FunctionDecl 0x55b2b0e106d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55b2b0e10640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55b2b0e10780 <col:65>
|-TypedefDecl 0x55b2b0e107f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55b2b0d9afd0 'unsigned long'
|-RecordDecl 0x55b2b0e10848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55b2b0e10990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b2b0e109f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b2b0e10aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55b2b0e10a50 'union pthread_attr_t' sugar
|   `-RecordType 0x55b2b0e108d0 'union pthread_attr_t'
|     `-Record 0x55b2b0e10848 'pthread_attr_t'
|-RecordDecl 0x55b2b0e10b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55b2b0e10c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55b2b0e10cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55b2b0e10da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55b2b0e10d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55b2b0e10b80 'struct __pthread_internal_list'
|     `-Record 0x55b2b0e10b00 '__pthread_internal_list'
|-RecordDecl 0x55b2b0e10e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55b2b0e10eb8 parent 0x55b2b0d9ae18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55b2b0e10f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b2b0e10ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55b2b0e11060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55b2b0e15110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55b2b0e15178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55b2b0e151e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55b2b0e15268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55b2b0e15320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55b2b0e15410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55b2b0e15478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b2b0e15600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55b2b0e155a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55b2b0e10e90 'pthread_mutex_t'
|     `-Record 0x55b2b0e10e10 ''
|-RecordDecl 0x55b2b0e15670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55b2b0e157b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b2b0e15818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b2b0e158d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55b2b0e15870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55b2b0e156f0 'pthread_mutexattr_t'
|     `-Record 0x55b2b0e15670 ''
|-RecordDecl 0x55b2b0e15940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55b2b0e159e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55b2b0e15ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b2b0e15b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55b2b0e15b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55b2b0e15be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55b2b0e15c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55b2b0e15cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55b2b0e15d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55b2b0e15d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55b2b0e15e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_3/rfi009_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_3/rfi009_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55b2b0e15f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55b2b0e15f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55b2b0e17130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55b2b0e16070 'union pthread_cond_t' sugar
|   `-RecordType 0x55b2b0e159c0 'pthread_cond_t'
|     `-Record 0x55b2b0e15940 ''
|-RecordDecl 0x55b2b0e171a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55b2b0e172a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b2b0e17308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b2b0e173c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55b2b0e17360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55b2b0e17220 'pthread_condattr_t'
|     `-Record 0x55b2b0e171a0 ''
|-TypedefDecl 0x55b2b0e17448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55b2b0d9afb0 'unsigned int'
|-TypedefDecl 0x55b2b0e174b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55b2b0d9af10 'int'
|-RecordDecl 0x55b2b0e17510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55b2b0e175b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55b2b0e17680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55b2b0e176e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55b2b0e17750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55b2b0e177b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55b2b0e17820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55b2b0e17888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55b2b0e178f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55b2b0e17958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55b2b0e179c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55b2b0e17a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55b2b0e17a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55b2b0e17b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_3/rfi009_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_3/rfi009_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55b2b0e17be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55b2b0e17c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b2b0e17da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55b2b0e17d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55b2b0e17590 'pthread_rwlock_t'
|     `-Record 0x55b2b0e17510 ''
|-RecordDecl 0x55b2b0e17e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55b2b0e17f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55b2b0e17fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b2b0e18070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55b2b0e18010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55b2b0e17e90 'pthread_rwlockattr_t'
|     `-Record 0x55b2b0e17e10 ''
|-TypedefDecl 0x55b2b0e19140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55b2b0d9af14 'volatile int' volatile
|   `-BuiltinType 0x55b2b0d9af10 'int'
|-RecordDecl 0x55b2b0e19198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55b2b0e192e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55b2b0e19348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55b2b0e19400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55b2b0e193a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55b2b0e19220 'pthread_barrier_t'
|     `-Record 0x55b2b0e19198 ''
|-RecordDecl 0x55b2b0e19470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55b2b0e19570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55b2b0e195d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55b2b0e19690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55b2b0e19630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55b2b0e194f0 'pthread_barrierattr_t'
|     `-Record 0x55b2b0e19470 ''
|-TypedefDecl 0x55b2b0e197a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55b2b0e19740 'long [8]' 8 
|   `-BuiltinType 0x55b2b0d9af30 'long'
|-EnumDecl 0x55b2b0e19800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55b2b0e198c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55b2b0e19918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55b2b0e19968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55b2b0e19a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55b2b0e19a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55b2b0e19ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55b2b0e19b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55b2b0e19bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55b2b0e19b98 <col:26> 'int'
| |   `-DeclRefExpr 0x55b2b0e19b78 <col:26> 'int' EnumConstant 0x55b2b0e19a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55b2b0e19c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55b2b0e19c20 <col:29> 'int'
| |   `-DeclRefExpr 0x55b2b0e19c00 <col:29> 'int' EnumConstant 0x55b2b0e19a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55b2b0e19cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55b2b0e19ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55b2b0e19c88 <col:30> 'int' EnumConstant 0x55b2b0e19ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55b2b0e19d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55b2b0e19d30 <col:27> 'int'
|     `-DeclRefExpr 0x55b2b0e19d10 <col:27> 'int' EnumConstant 0x55b2b0e19bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55b2b0e19d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55b2b0e19e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55b2b0e19ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55b2b0e19ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x55b2b0e19eb8 <col:30> 'int' EnumConstant 0x55b2b0e19e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55b2b0e19f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55b2b0e19fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55b2b0e19fb0 <col:29> 'int'
|     `-DeclRefExpr 0x55b2b0e19f90 <col:29> 'int' EnumConstant 0x55b2b0e19f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55b2b0e1a018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55b2b0e1a0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55b2b0e1a150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55b2b0e1a1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55b2b0e1a1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55b2b0e1a2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55b2b0e1a308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55b2b0e1a358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55b2b0e1a3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55b2b0e1a3c8 <col:31> 'int'
|     `-DeclRefExpr 0x55b2b0e1a3a8 <col:31> 'int' EnumConstant 0x55b2b0e1a2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55b2b0e1a430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55b2b0e1a4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55b2b0e1a548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55b2b0e1a598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55b2b0e1a668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55b2b0e1a6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55b2b0e1a708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55b2b0e1a7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55b2b0e1a828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55b2b0e1a878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55b2b0e1aab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55b2b0e1ab20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55b2b0e1ab88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55b2b0e1aca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55b2b0e1acf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55b2b0e1adc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55b2b0e1ae18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55b2b0e1ae68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55b2b0e1af38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55b2b0e1af88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55b2b0e1b5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55b2b0e1b080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55b2b0e1b1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b2b0e1b3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55b2b0e1b420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55b2b0e1b678 <col:47>
| |-NonNullAttr 0x55b2b0e1b6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55b2b0e1b708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55b2b0e1b830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55b2b0e1b760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55b2b0e1ba88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55b2b0e1b8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55b2b0e1b968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55b2b0e1bc58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55b2b0e1bb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55b2b0e1bd00 <col:60>
|-FunctionDecl 0x55b2b0e1be50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55b2b0e1bef0 <col:54>
| `-ConstAttr 0x55b2b0e1bf48 <col:95>
|-FunctionDecl 0x55b2b0e1d990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55b2b0e1bf80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b2b0e1bff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55b2b0e1da40 <line:395:19>
| `-ConstAttr 0x55b2b0e1da98 <col:60>
|-FunctionDecl 0x55b2b0e1dc68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b2b0e1db30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b2b0e1dd10 <col:71>
| `-NonNullAttr 0x55b2b0e1dd68 <col:112, col:126> 1
|-FunctionDecl 0x55b2b0e1de70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55b2b0e1ddb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55b2b0e1df18 <line:398:22>
| `-NonNullAttr 0x55b2b0e1df70 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e1e198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55b2b0e1dfb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b2b0e1e038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55b2b0e1e248 <line:401:22>
| `-NonNullAttr 0x55b2b0e1e2a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e1e4a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e1e2e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b2b0e1e368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55b2b0e1e558 <line:404:22>
| `-NonNullAttr 0x55b2b0e1e5b0 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e1e808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55b2b0e1e5f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55b2b0e1e6a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55b2b0e1e8b8 <line:407:22>
| `-NonNullAttr 0x55b2b0e1e910 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e1fb68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b2b0e1f9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b2b0e1fa28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b2b0e1fc18 <line:410:22>
| `-NonNullAttr 0x55b2b0e1fc70 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e1fea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b2b0e1fcb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b2b0e1fd48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b2b0e1ff58 <line:413:22>
| `-NonNullAttr 0x55b2b0e1ffb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e201e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b2b0e1fff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b2b0e20088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55b2b0e20298 <col:37>
| `-NonNullAttr 0x55b2b0e202f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55b2b0e204d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e20338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b2b0e203b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55b2b0e20588 <line:419:22>
| `-NonNullAttr 0x55b2b0e205e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e20768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e20628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b2b0e206a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55b2b0e20818 <line:421:22>
| `-NonNullAttr 0x55b2b0e20870 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e20a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e208b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b2b0e20938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55b2b0e20ae8 <line:424:22>
| `-NonNullAttr 0x55b2b0e20b40 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e20cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e20b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b2b0e20c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55b2b0e20d78 <line:427:22>
| `-NonNullAttr 0x55b2b0e20dd0 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e20f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e20e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b2b0e20e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55b2b0e21028 <line:430:22>
| `-NonNullAttr 0x55b2b0e21080 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e21208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e210c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b2b0e21148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55b2b0e212b8 <line:432:22>
| `-NonNullAttr 0x55b2b0e21310 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e21538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55b2b0e21358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b2b0e213d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55b2b0e215e8 <line:435:22>
| |-NonNullAttr 0x55b2b0e21640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55b2b0e21678 <col:100> "" ""
|-FunctionDecl 0x55b2b0e21888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55b2b0e216c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b2b0e21748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55b2b0e21938 <line:438:22>
| |-NonNullAttr 0x55b2b0e21990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55b2b0e219d8 <col:97> "" ""
|-FunctionDecl 0x55b2b0e21bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b2b0e21a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b2b0e21aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b2b0e21c78 <line:441:22>
| `-NonNullAttr 0x55b2b0e21cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e21e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55b2b0e21d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b2b0e21d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b2b0e21f00 <line:444:22>
| `-NonNullAttr 0x55b2b0e21f58 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e22248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55b2b0e21fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55b2b0e22028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55b2b0e220a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55b2b0e22300 <line:448:22>
| `-NonNullAttr 0x55b2b0e22358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55b2b0e22608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55b2b0e223b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55b2b0e22430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55b2b0e224a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55b2b0e226c0 <col:43>
| `-NonNullAttr 0x55b2b0e22718 <col:84, col:98> 1
|-FunctionDecl 0x55b2b0e22a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55b2b0e22768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b2b0e227e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55b2b0e22878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55b2b0e22ad8 <line:453:22>
| `-NonNullAttr 0x55b2b0e22b30 <col:63, col:77> 3
|-FunctionDecl 0x55b2b0e22e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55b2b0e22b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b2b0e22bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55b2b0e22c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55b2b0e22ec0 <line:457:22>
| `-NonNullAttr 0x55b2b0e22f18 <col:63, col:80> 2 3
|-FunctionDecl 0x55b2b0e23108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55b2b0e22f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b2b0e22fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55b2b0e231b8 <line:459:22>
|-FunctionDecl 0x55b2b0e23588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55b2b0e23280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55b2b0e23420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55b2b0e23638 <col:52, col:69> 1 2
|-FunctionDecl 0x55b2b0e237e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55b2b0e236c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55b2b0e23740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55b2b0e239f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55b2b0e238a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55b2b0e23928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55b2b0e23b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55b2b0e23ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55b2b0e23c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55b2b0e23d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55b2b0e23dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55b2b0e23ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55b2b0e23f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55b2b0e24100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_3/rfi009_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55b2b0e241f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55b2b0e242b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55b2b0e24250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55b2b0e23db0 '__pthread_unwind_buf_t'
| |   `-Record 0x55b2b0e23d28 ''
| `-AlignedAttr 0x55b2b0e24308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55b2b0e24380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55b2b0e244e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55b2b0e24548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55b2b0e245b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55b2b0e24618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55b2b0e24820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b2b0e24710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b2b0e24a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55b2b0e248d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55b2b0e24bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55b2b0e24ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55b2b0e24c68 <line:488:22>
|-RecordDecl 0x55b2b0e24cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55b2b0e24fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55b2b0e24e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55b2b0e24eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55b2b0e25088 <col:86>
| `-ReturnsTwiceAttr 0x55b2b0e250e0 <col:12> Implicit
|-FunctionDecl 0x55b2b0e25408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b2b0e251b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55b2b0e252c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b2b0e254b8 <line:494:22>
| `-NonNullAttr 0x55b2b0e25510 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e25688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b2b0e25558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b2b0e25730 <line:496:22>
| `-NonNullAttr 0x55b2b0e25788 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e25890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b2b0e257d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b2b0e25938 <line:498:22>
| `-NonNullAttr 0x55b2b0e25990 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e26ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b2b0e26a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b2b0e26b80 <line:500:22>
| `-NonNullAttr 0x55b2b0e26bd8 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e26e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b2b0e26c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b2b0e26cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b2b0e26ec8 <col:36>
| `-NonNullAttr 0x55b2b0e26f20 <col:66, col:83> 1 2
|-FunctionDecl 0x55b2b0e27020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b2b0e26f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b2b0e270c8 <line:505:22>
| `-NonNullAttr 0x55b2b0e27120 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e273b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e271d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b2b0e27250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b2b0e27468 <line:509:22>
| `-NonNullAttr 0x55b2b0e274c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e27788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e27508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b2b0e27588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55b2b0e27608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55b2b0e27840 <line:513:22>
| `-NonNullAttr 0x55b2b0e27898 <col:63, col:80> 1 3
|-FunctionDecl 0x55b2b0e27a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55b2b0e278e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55b2b0e27ad8 <line:515:22>
| `-NonNullAttr 0x55b2b0e27b30 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e27d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b2b0e27be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b2b0e27dc0 <line:517:22>
| `-NonNullAttr 0x55b2b0e27e18 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e27f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55b2b0e27e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55b2b0e27fc8 <line:519:22>
| `-NonNullAttr 0x55b2b0e28020 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e28248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e28068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b2b0e280e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b2b0e282f8 <line:523:22>
| `-NonNullAttr 0x55b2b0e28350 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e28558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e28398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b2b0e28418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55b2b0e28608 <line:526:22>
| `-NonNullAttr 0x55b2b0e28660 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e28808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e286a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b2b0e28728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55b2b0e288b8 <line:529:22>
| `-NonNullAttr 0x55b2b0e28910 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e28b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e28958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b2b0e28a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55b2b0e28bb0 <line:531:22>
| `-NonNullAttr 0x55b2b0e28c08 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e28db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e28c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b2b0e28cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55b2b0e28e68 <line:535:22>
| `-NonNullAttr 0x55b2b0e28ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e29048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e28f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b2b0e28f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55b2b0e290f8 <line:538:22>
| `-NonNullAttr 0x55b2b0e29150 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e292f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e29198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55b2b0e29218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55b2b0e293a8 <line:542:22>
| `-NonNullAttr 0x55b2b0e29400 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e29588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e29448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b2b0e294c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55b2b0e29638 <line:545:22>
| `-NonNullAttr 0x55b2b0e29690 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e29878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55b2b0e296d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b2b0e29758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55b2b0e29928 <line:548:22>
| `-NonNullAttr 0x55b2b0e29980 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e2ab38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e299c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55b2b0e2aa78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55b2b0e2abe8 <line:551:22>
| `-NonNullAttr 0x55b2b0e2ac40 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2af78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55b2b0e2ad20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b2b0e2ae30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55b2b0e2b028 <col:29>
| `-NonNullAttr 0x55b2b0e2b080 <col:70, col:84> 1
|-FunctionDecl 0x55b2b0e2b1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b2b0e2b0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b2b0e2b2a0 <line:556:22>
| `-NonNullAttr 0x55b2b0e2b2f8 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2b400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b2b0e2b348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b2b0e2b4a8 <line:558:22>
| `-NonNullAttr 0x55b2b0e2b500 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e2b600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b2b0e2b548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b2b0e2b6a8 <line:560:19>
| `-NonNullAttr 0x55b2b0e2b700 <col:49, col:63> 1
|-FunctionDecl 0x55b2b0e2b938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b2b0e2b748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b2b0e2b7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b2b0e2b9e8 <col:39>
| `-NonNullAttr 0x55b2b0e2ba70 <col:69, col:86> 1 2
|-FunctionDecl 0x55b2b0e2bb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b2b0e2bab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b2b0e2bc18 <line:565:22>
| `-NonNullAttr 0x55b2b0e2bc70 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e2bd70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b2b0e2bcb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b2b0e2be18 <line:567:22>
| `-NonNullAttr 0x55b2b0e2be70 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e2c028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b2b0e2beb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55b2b0e2bf48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55b2b0e2c0d8 <col:39>
| `-NonNullAttr 0x55b2b0e2c130 <col:69, col:86> 1 2
|-FunctionDecl 0x55b2b0e2c230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55b2b0e2c178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55b2b0e2c2d8 <line:572:22>
| `-NonNullAttr 0x55b2b0e2c330 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e2c518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b2b0e2c3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b2b0e2c5c0 <line:574:22>
| `-NonNullAttr 0x55b2b0e2c618 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2c720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55b2b0e2c668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55b2b0e2c7c8 <line:576:22>
| `-NonNullAttr 0x55b2b0e2c820 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2ca80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e2c868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b2b0e2c8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b2b0e2cb30 <line:580:22>
| `-NonNullAttr 0x55b2b0e2cb88 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e2cd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e2cbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b2b0e2cc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55b2b0e2ce48 <line:583:22>
| `-NonNullAttr 0x55b2b0e2cea0 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2d048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e2cee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55b2b0e2cf68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55b2b0e2d0f8 <line:587:22>
| `-NonNullAttr 0x55b2b0e2d150 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e2d2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e2d198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55b2b0e2d218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55b2b0e2d388 <col:36>
| `-NonNullAttr 0x55b2b0e2d3e0 <col:77, col:91> 1
|-FunctionDecl 0x55b2b0e2d718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55b2b0e2d4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b2b0e2d5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55b2b0e2d7c8 <line:592:22>
| `-NonNullAttr 0x55b2b0e2d820 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2d998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b2b0e2d868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b2b0e2da40 <line:594:22>
| `-NonNullAttr 0x55b2b0e2dac0 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2dbc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b2b0e2db08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b2b0e2dc68 <line:596:22>
| `-NonNullAttr 0x55b2b0e2dcc0 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e2ddc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55b2b0e2dd08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55b2b0e2de68 <line:598:22>
| `-NonNullAttr 0x55b2b0e2dec0 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e2e0e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55b2b0e2df08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b2b0e2df80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55b2b0e2e198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55b2b0e2e4c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55b2b0e2e218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55b2b0e2e290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55b2b0e2e320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55b2b0e2e580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55b2b0e2e798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b2b0e2e660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b2b0e2e840 <line:607:22>
| `-NonNullAttr 0x55b2b0e2e898 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2e9a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55b2b0e2e8e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55b2b0e2ea48 <line:609:22>
| `-NonNullAttr 0x55b2b0e2ead0 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2ecf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e2eb18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b2b0e2eb98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b2b0e2eda8 <line:613:22>
| `-NonNullAttr 0x55b2b0e2ee00 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e2f008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e2ee48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b2b0e2eec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55b2b0e2f0b8 <col:37>
| `-NonNullAttr 0x55b2b0e2f110 <col:78, col:92> 1
|-FunctionDecl 0x55b2b0e2f328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55b2b0e2f158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55b2b0e2f200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55b2b0e2f3d8 <line:619:22>
| `-NonNullAttr 0x55b2b0e2f430 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e2f5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55b2b0e2f478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55b2b0e2f4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55b2b0e2f6a8 <line:622:22>
| `-NonNullAttr 0x55b2b0e2f700 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2f9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e2f7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55b2b0e2f860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55b2b0e2fa58 <line:624:22>
| `-NonNullAttr 0x55b2b0e2fae0 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2fc58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b2b0e2fb28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b2b0e2fd00 <line:626:22>
| `-NonNullAttr 0x55b2b0e2fd58 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e2fe60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b2b0e2fda8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b2b0e2ff08 <line:628:22>
| `-NonNullAttr 0x55b2b0e2ff60 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e30060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b2b0e2ffa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b2b0e30108 <line:630:22>
| `-NonNullAttr 0x55b2b0e30160 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e30260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55b2b0e301a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55b2b0e30308 <line:632:22>
| `-NonNullAttr 0x55b2b0e30360 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e30738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55b2b0e30440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55b2b0e30550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b2b0e305d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55b2b0e307f0 <line:636:22>
| `-NonNullAttr 0x55b2b0e30848 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e309c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b2b0e30898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b2b0e30a70 <line:638:22>
| `-NonNullAttr 0x55b2b0e31b00 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e31c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55b2b0e31b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55b2b0e31ca8 <line:640:22>
| `-NonNullAttr 0x55b2b0e31d00 <col:52, col:66> 1
|-FunctionDecl 0x55b2b0e31ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b2b0e31db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b2b0e31f90 <line:642:22>
| `-NonNullAttr 0x55b2b0e31fe8 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e320f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55b2b0e32038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55b2b0e32198 <line:644:22>
| `-NonNullAttr 0x55b2b0e321f0 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e32418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55b2b0e32238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55b2b0e322b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55b2b0e324c8 <line:648:22>
| `-NonNullAttr 0x55b2b0e32520 <col:63, col:80> 1 2
|-FunctionDecl 0x55b2b0e32728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55b2b0e32568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55b2b0e325e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55b2b0e327d8 <line:651:22>
| `-NonNullAttr 0x55b2b0e32830 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e32b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55b2b0e32910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55b2b0e32a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55b2b0e32c48 <line:654:22>
| `-NonNullAttr 0x55b2b0e32ca0 <col:63, col:77> 1
|-FunctionDecl 0x55b2b0e32df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55b2b0e32ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b2b0e32ea0 <col:69>
|-FunctionDecl 0x55b2b0e33018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55b2b0e32f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55b2b0e330c0 <col:72>
|-FunctionDecl 0x55b2b0e332f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55b2b0e33128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55b2b0e331d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55b2b0e333a8 <col:44>
|-FunctionDecl 0x55b2b0e335c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55b2b0e33410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55b2b0e33488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55b2b0e33678 <line:661:22>
| `-NonNullAttr 0x55b2b0e336d0 <col:63, col:77> 2
|-FunctionDecl 0x55b2b0e33b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55b2b0e337b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55b2b0e338c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55b2b0e339d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55b2b0e33be8 <col:47>
|-FunctionDecl 0x55b2b0e33cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55b2b0e33c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b2b0e33e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55b2b0e33db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b2b0e33fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55b2b0e33f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55b2b0e34068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55b2b0e34128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55b2b0e341e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55b2b0e342a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55b2b0e34320 prev 0x55b2b0e342a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55b2b0e34388 <col:24> 'int' 0
|-VarDecl 0x55b2b0e343c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55b2b0e34440 prev 0x55b2b0e343c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55b2b0e344a8 <col:27> 'int' 0
|-VarDecl 0x55b2b0e344d8 <line:676:1, col:7> col:7 __unbuffered_p0_EAX$flush_delayed '_Bool'
|-VarDecl 0x55b2b0e34558 <line:677:1, col:5> col:5 __unbuffered_p0_EAX$mem_tmp 'int'
|-VarDecl 0x55b2b0e345d0 <line:678:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55b2b0e34648 <line:679:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55b2b0e346c0 <line:680:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55b2b0e34738 <line:681:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55b2b0e347b0 <line:682:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55b2b0e34828 <line:683:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55b2b0e348a0 <line:684:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55b2b0e34918 <line:685:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55b2b0e34990 <line:686:1, col:7> col:7 used __unbuffered_p0_EAX$read_delayed '_Bool'
|-VarDecl 0x55b2b0e34a10 <line:687:1, col:6> col:6 used __unbuffered_p0_EAX$read_delayed_var 'int *'
|-VarDecl 0x55b2b0e34b00 <line:688:1, col:5> col:5 __unbuffered_p0_EAX$w_buff0 'int'
|-VarDecl 0x55b2b0e34b78 <line:689:1, col:7> col:7 __unbuffered_p0_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55b2b0e34bf8 <line:690:1, col:5> col:5 __unbuffered_p0_EAX$w_buff1 'int'
|-VarDecl 0x55b2b0e34c70 <line:691:1, col:7> col:7 __unbuffered_p0_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55b2b0e34cf0 <line:692:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55b2b0e34d70 prev 0x55b2b0e34cf0 <line:693:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55b2b0e34dd8 <col:27> 'int' 0
|-VarDecl 0x55b2b0e34e10 <line:694:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55b2b0e34e90 prev 0x55b2b0e34e10 <line:695:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55b2b0e34ef8 <col:27> 'int' 0
|-VarDecl 0x55b2b0e34f30 <line:696:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55b2b0e34fb0 prev 0x55b2b0e34f30 <line:697:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55b2b0e35018 <col:27> 'int' 0
|-VarDecl 0x55b2b0e35048 <line:698:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55b2b0e350c0 <line:699:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55b2b0e35140 <line:700:1, col:5> col:5 used x 'int'
|-VarDecl 0x55b2b0e351c0 prev 0x55b2b0e35140 <line:701:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55b2b0e35228 <col:9> 'int' 0
|-VarDecl 0x55b2b0e35258 <line:702:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55b2b0e352d8 <line:703:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55b2b0e35350 <line:704:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55b2b0e353c8 <line:705:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55b2b0e35440 <line:706:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55b2b0e354b8 <line:707:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55b2b0e35530 <line:708:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55b2b0e355a8 <line:709:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55b2b0e35620 <line:710:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55b2b0e35698 <line:711:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55b2b0e35710 <line:712:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55b2b0e35790 <line:713:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55b2b0e35810 <line:714:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55b2b0e35888 <line:715:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55b2b0e35908 <line:716:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55b2b0e35980 <line:717:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55b2b0e35a00 <line:718:1, col:5> col:5 used y 'int'
|-VarDecl 0x55b2b0e35a80 prev 0x55b2b0e35a00 <line:719:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55b2b0e36b20 <col:9> 'int' 0
|-VarDecl 0x55b2b0e36b50 <line:720:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55b2b0e36bc8 <line:721:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55b2b0e36c40 <line:722:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55b2b0e36d58 prev 0x55b2b0e33cf0 <line:723:1, line:753:1> line:723:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55b2b0e36cc0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b2b0e3b6b8 <line:724:1, line:753:1>
|   |-CallExpr 0x55b2b0e36e68 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e36e50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e36e00 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b2b0e36f38 <line:726:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e36e88 <col:3> '_Bool' lvalue Var 0x55b2b0e36b50 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55b2b0e36f18 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b2b0e36f00 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b2b0e36ea8 <col:19> '_Bool (void)' Function 0x55b2b0dda770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b2b0e36fd0 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e36f58 <col:3> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55b2b0e36fb0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b2b0e36f98 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b2b0e36f78 <col:19> '_Bool (void)' Function 0x55b2b0dda770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b2b0e37048 <line:728:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e36ff0 <col:3> '_Bool' lvalue Var 0x55b2b0e35258 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e37030 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b2b0e37010 <col:21> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55b2b0e370c0 <line:729:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e37068 <col:3> 'int' lvalue Var 0x55b2b0e352d8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55b2b0e370a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b2b0e37088 <col:15> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |-BinaryOperator 0x55b2b0e37158 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e370e0 <col:3> '_Bool' lvalue Var 0x55b2b0e36bc8 'weak$$choice1' '_Bool'
|   | `-CallExpr 0x55b2b0e37138 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b2b0e37120 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b2b0e37100 <col:19> '_Bool (void)' Function 0x55b2b0dda770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b2b0e37b98 <line:731:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e37178 <col:3> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   | `-ConditionalOperator 0x55b2b0e37b68 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x55b2b0e371d0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x55b2b0e371b8 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b2b0e37198 <col:8> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x55b2b0e37b50 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e371e8 <col:25> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |   `-ParenExpr 0x55b2b0e37b30 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x55b2b0e37ae8 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x55b2b0e372a8 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b2b0e37260 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b2b0e37248 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b2b0e37208 <col:30> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b2b0e37290 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b2b0e37278 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b2b0e37228 <col:48> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55b2b0e37ad0 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b2b0e372c8 <col:65> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55b2b0e37ab0 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x55b2b0e37a80 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x55b2b0e37468 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x55b2b0e373f8 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x55b2b0e37388 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x55b2b0e37370 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x55b2b0e37358 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x55b2b0e372e8 <col:78> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x55b2b0e37340 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x55b2b0e37328 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x55b2b0e37308 <col:97> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |           | | `-ImplicitCastExpr 0x55b2b0e373e0 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x55b2b0e373c8 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x55b2b0e373a8 <col:115> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x55b2b0e37450 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x55b2b0e37438 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b2b0e37418 <col:134> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |           |-ParenExpr 0x55b2b0e37650 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x55b2b0e37620 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x55b2b0e375f0 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x55b2b0e375d8 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x55b2b0e37488 <col:152> '_Bool' lvalue Var 0x55b2b0e36b50 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x55b2b0e37608 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x55b2b0e374a8 <col:168> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |           |   `-ParenExpr 0x55b2b0e375b8 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x55b2b0e37588 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x55b2b0e37540 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x55b2b0e37528 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x55b2b0e374c8 <col:173> '_Bool' lvalue Var 0x55b2b0e36bc8 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x55b2b0e37558 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x55b2b0e374e8 <col:189> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x55b2b0e37570 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x55b2b0e37508 <col:201> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55b2b0e37a60 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x55b2b0e37a30 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x55b2b0e377f0 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x55b2b0e37780 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x55b2b0e37710 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55b2b0e376c8 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55b2b0e376b0 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55b2b0e37670 <col:216> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x55b2b0e376f8 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x55b2b0e376e0 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55b2b0e37690 <col:234> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55b2b0e37768 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55b2b0e37750 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55b2b0e37730 <col:252> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55b2b0e377d8 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55b2b0e377c0 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55b2b0e377a0 <col:271> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |               |-ParenExpr 0x55b2b0e37900 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x55b2b0e378d0 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x55b2b0e37888 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x55b2b0e37870 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x55b2b0e37810 <col:289> '_Bool' lvalue Var 0x55b2b0e36b50 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x55b2b0e378a0 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x55b2b0e37830 <col:305> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x55b2b0e378b8 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55b2b0e37850 <col:317> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55b2b0e37a10 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x55b2b0e379e0 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x55b2b0e37998 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x55b2b0e37980 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x55b2b0e37920 <col:331> '_Bool' lvalue Var 0x55b2b0e36b50 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x55b2b0e379b0 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55b2b0e37940 <col:347> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55b2b0e379c8 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55b2b0e37960 <col:359> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |-BinaryOperator 0x55b2b0e38338 <line:732:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e37bb8 <col:3> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55b2b0e38308 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55b2b0e382d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b2b0e382c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b2b0e37bd8 <col:15> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b2b0e382f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e37bf8 <col:31> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b2b0e382a0 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55b2b0e38270 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55b2b0e37c50 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55b2b0e37c38 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55b2b0e37c18 <col:45> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55b2b0e38258 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b2b0e37c68 <col:62> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55b2b0e38238 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55b2b0e38208 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55b2b0e37d28 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b2b0e37ce0 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b2b0e37cc8 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b2b0e37c88 <col:75> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b2b0e37d10 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b2b0e37cf8 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b2b0e37ca8 <col:93> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55b2b0e381f0 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b2b0e37d48 <col:110> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x55b2b0e381d0 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55b2b0e381a0 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55b2b0e37ee8 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55b2b0e37e78 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55b2b0e37e08 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55b2b0e37df0 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55b2b0e37dd8 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55b2b0e37d68 <col:123> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55b2b0e37dc0 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55b2b0e37da8 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55b2b0e37d88 <col:142> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55b2b0e37e60 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55b2b0e37e48 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55b2b0e37e28 <col:160> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55b2b0e37ed0 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55b2b0e37eb8 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55b2b0e37e98 <col:179> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x55b2b0e38188 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55b2b0e37f08 <col:196> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x55b2b0e38168 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55b2b0e38138 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55b2b0e380a8 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55b2b0e38038 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55b2b0e37fc8 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55b2b0e37f80 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55b2b0e37f68 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55b2b0e37f28 <col:209> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55b2b0e37fb0 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55b2b0e37f98 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55b2b0e37f48 <col:227> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55b2b0e38020 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55b2b0e38008 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55b2b0e37fe8 <col:245> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55b2b0e38090 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55b2b0e38078 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55b2b0e38058 <col:264> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x55b2b0e38108 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55b2b0e380c8 <col:281> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x55b2b0e38120 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55b2b0e380e8 <col:293> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55b2b0e38ad8 <line:733:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e38358 <col:3> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55b2b0e38aa8 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x55b2b0e38a78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b2b0e38a60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b2b0e38378 <col:15> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b2b0e38a90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e38398 <col:31> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55b2b0e38a40 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x55b2b0e38a10 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x55b2b0e383f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x55b2b0e383d8 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55b2b0e383b8 <col:45> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x55b2b0e389f8 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b2b0e38408 <col:62> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55b2b0e389d8 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x55b2b0e389a8 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x55b2b0e384c8 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b2b0e38480 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b2b0e38468 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b2b0e38428 <col:75> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b2b0e384b0 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b2b0e38498 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b2b0e38448 <col:93> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55b2b0e38990 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b2b0e384e8 <col:110> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x55b2b0e38970 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x55b2b0e38940 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x55b2b0e38688 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x55b2b0e38618 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x55b2b0e385a8 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x55b2b0e38590 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x55b2b0e38578 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x55b2b0e38508 <col:123> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x55b2b0e38560 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x55b2b0e38548 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x55b2b0e38528 <col:142> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x55b2b0e38600 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x55b2b0e385e8 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x55b2b0e385c8 <col:160> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x55b2b0e38670 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x55b2b0e38658 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x55b2b0e38638 <col:179> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x55b2b0e38928 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x55b2b0e386a8 <col:196> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x55b2b0e38908 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x55b2b0e388d8 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x55b2b0e38848 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x55b2b0e387d8 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x55b2b0e38768 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x55b2b0e38720 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x55b2b0e38708 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x55b2b0e386c8 <col:209> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x55b2b0e38750 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x55b2b0e38738 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x55b2b0e386e8 <col:227> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x55b2b0e387c0 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x55b2b0e387a8 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x55b2b0e38788 <col:245> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x55b2b0e38830 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x55b2b0e38818 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x55b2b0e387f8 <col:264> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x55b2b0e388a8 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x55b2b0e38868 <col:281> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x55b2b0e388c0 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x55b2b0e38888 <col:293> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b2b0e393d8 <line:734:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e38af8 <col:3> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e393c0 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e39390 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x55b2b0e39348 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e39330 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e38b40 <col:20> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e39378 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e39360 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e38b60 <col:36> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55b2b0e39310 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x55b2b0e392e0 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x55b2b0e38bb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55b2b0e38ba0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e38b80 <col:55> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55b2b0e392c8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b2b0e392b0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e38bd0 <col:72> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55b2b0e39290 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x55b2b0e39260 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x55b2b0e38c90 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b2b0e38c48 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b2b0e38c30 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b2b0e38bf0 <col:90> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b2b0e38c78 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b2b0e38c60 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b2b0e38c10 <col:108> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b2b0e39248 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b2b0e38ce0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b2b0e38cb0 <col:132> 'int' 0
|   |             `-ParenExpr 0x55b2b0e39228 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x55b2b0e391f8 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x55b2b0e38e88 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55b2b0e38e18 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55b2b0e38da8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55b2b0e38d90 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55b2b0e38d78 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55b2b0e38d08 <col:137> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55b2b0e38d60 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55b2b0e38d48 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55b2b0e38d28 <col:156> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55b2b0e38e00 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55b2b0e38de8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55b2b0e38dc8 <col:174> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55b2b0e38e70 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55b2b0e38e58 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55b2b0e38e38 <col:193> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |                 |-BinaryOperator 0x55b2b0e38f48 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x55b2b0e38f30 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x55b2b0e38f18 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x55b2b0e38ea8 <col:210> '_Bool' lvalue Var 0x55b2b0e36b50 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x55b2b0e38f00 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55b2b0e38ee8 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55b2b0e38ec8 <col:228> '_Bool' lvalue Var 0x55b2b0e36bc8 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x55b2b0e391d8 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x55b2b0e391a8 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x55b2b0e390e8 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x55b2b0e39078 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55b2b0e39008 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55b2b0e38fc0 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55b2b0e38fa8 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55b2b0e38f68 <col:245> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55b2b0e38ff0 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55b2b0e38fd8 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55b2b0e38f88 <col:263> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55b2b0e39060 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55b2b0e39048 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55b2b0e39028 <col:281> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55b2b0e390d0 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55b2b0e390b8 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55b2b0e39098 <col:300> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55b2b0e39160 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x55b2b0e39148 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x55b2b0e39108 <col:317> '_Bool' lvalue Var 0x55b2b0e36b50 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x55b2b0e39190 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x55b2b0e39178 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x55b2b0e39128 <col:333> '_Bool' lvalue Var 0x55b2b0e36b50 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x55b2b0e39c98 <line:735:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e393f8 <col:3> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e39c80 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e39c50 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x55b2b0e39c08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e39bf0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e39418 <col:20> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e39c38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e39c20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e39438 <col:36> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55b2b0e39bd0 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x55b2b0e39ba0 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x55b2b0e39490 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55b2b0e39478 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e39458 <col:55> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55b2b0e39b88 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b2b0e39b70 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e394a8 <col:72> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55b2b0e39b50 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x55b2b0e39b08 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x55b2b0e39568 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b2b0e39520 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b2b0e39508 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b2b0e394c8 <col:90> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b2b0e39550 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b2b0e39538 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b2b0e394e8 <col:108> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b2b0e39af0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b2b0e395b8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b2b0e39588 <col:132> 'int' 0
|   |             `-ParenExpr 0x55b2b0e39ad0 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x55b2b0e39aa0 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x55b2b0e39760 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55b2b0e396f0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55b2b0e39680 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55b2b0e39668 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55b2b0e39650 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55b2b0e395e0 <col:137> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55b2b0e39638 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55b2b0e39620 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55b2b0e39600 <col:156> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55b2b0e396d8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55b2b0e396c0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55b2b0e396a0 <col:174> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55b2b0e39748 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55b2b0e39730 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55b2b0e39710 <col:193> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x55b2b0e39a88 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55b2b0e39a70 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55b2b0e39780 <col:210> '_Bool' lvalue Var 0x55b2b0e36b50 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x55b2b0e39a50 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x55b2b0e39a20 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x55b2b0e39920 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x55b2b0e398b0 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55b2b0e39840 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55b2b0e397f8 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55b2b0e397e0 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55b2b0e397a0 <col:227> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55b2b0e39828 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55b2b0e39810 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55b2b0e397c0 <col:245> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55b2b0e39898 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55b2b0e39880 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55b2b0e39860 <col:263> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55b2b0e39908 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55b2b0e398f0 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55b2b0e398d0 <col:282> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55b2b0e399f0 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55b2b0e39970 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55b2b0e39940 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x55b2b0e39a08 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55b2b0e399c8 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55b2b0e39998 <col:317> 'int' 0
|   |-BinaryOperator 0x55b2b0e3a540 <line:736:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e39cb8 <col:3> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e3a528 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e3a4f8 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x55b2b0e3a4b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3a498 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e39cd8 <col:20> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e3a4e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3a4c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e39cf8 <col:36> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55b2b0e3a478 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x55b2b0e3a448 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x55b2b0e39d50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55b2b0e39d38 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e39d18 <col:55> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55b2b0e3a430 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b2b0e3a418 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e39d68 <col:72> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55b2b0e3a3f8 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x55b2b0e3a3c8 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x55b2b0e39e28 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b2b0e39de0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b2b0e39dc8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b2b0e39d88 <col:90> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b2b0e39e10 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b2b0e39df8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b2b0e39da8 <col:108> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b2b0e3a3b0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b2b0e39e78 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b2b0e39e48 <col:132> 'int' 0
|   |             `-ParenExpr 0x55b2b0e3a390 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x55b2b0e3a360 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x55b2b0e3a020 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55b2b0e39fb0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55b2b0e39f40 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55b2b0e39f28 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55b2b0e39f10 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55b2b0e39ea0 <col:137> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55b2b0e39ef8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55b2b0e39ee0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55b2b0e39ec0 <col:156> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55b2b0e39f98 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55b2b0e39f80 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55b2b0e39f60 <col:174> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55b2b0e3a008 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55b2b0e39ff0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55b2b0e39fd0 <col:193> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x55b2b0e3a348 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x55b2b0e3a330 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x55b2b0e3a040 <col:210> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |                 `-ParenExpr 0x55b2b0e3a310 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x55b2b0e3a2e0 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x55b2b0e3a1e0 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x55b2b0e3a170 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55b2b0e3a100 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55b2b0e3a0b8 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55b2b0e3a0a0 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55b2b0e3a060 <col:228> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55b2b0e3a0e8 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55b2b0e3a0d0 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55b2b0e3a080 <col:246> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55b2b0e3a158 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55b2b0e3a140 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55b2b0e3a120 <col:264> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55b2b0e3a1c8 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55b2b0e3a1b0 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55b2b0e3a190 <col:283> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55b2b0e3a2b0 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55b2b0e3a230 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55b2b0e3a200 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x55b2b0e3a2c8 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55b2b0e3a288 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55b2b0e3a258 <col:318> 'int' 0
|   |-BinaryOperator 0x55b2b0e3af18 <line:737:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3a560 <col:3> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e3af00 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e3aed0 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x55b2b0e3ae88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3ae70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e3a580 <col:20> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e3aeb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3aea0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e3a5a0 <col:36> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55b2b0e3ae50 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x55b2b0e3ae20 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x55b2b0e3a5f8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x55b2b0e3a5e0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e3a5c0 <col:55> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x55b2b0e3ae08 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b2b0e3adf0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e3a610 <col:72> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55b2b0e3add0 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x55b2b0e3ada0 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x55b2b0e3a6d0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b2b0e3a688 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b2b0e3a670 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b2b0e3a630 <col:90> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b2b0e3a6b8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b2b0e3a6a0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b2b0e3a650 <col:108> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55b2b0e3ad88 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b2b0e3a720 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b2b0e3a6f0 <col:132> 'int' 0
|   |             `-ParenExpr 0x55b2b0e3ad68 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x55b2b0e3ad38 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x55b2b0e3a8c8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x55b2b0e3a858 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x55b2b0e3a7e8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x55b2b0e3a7d0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x55b2b0e3a7b8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x55b2b0e3a748 <col:137> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x55b2b0e3a7a0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x55b2b0e3a788 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x55b2b0e3a768 <col:156> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x55b2b0e3a840 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x55b2b0e3a828 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x55b2b0e3a808 <col:174> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x55b2b0e3a8b0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x55b2b0e3a898 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x55b2b0e3a878 <col:193> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |                 |-ParenExpr 0x55b2b0e3aa28 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x55b2b0e3a9f8 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x55b2b0e3a998 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55b2b0e3a980 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55b2b0e3a8e8 <col:211> '_Bool' lvalue Var 0x55b2b0e36b50 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x55b2b0e3a9c8 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x55b2b0e3a9b0 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x55b2b0e3a908 <col:227> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x55b2b0e3a9e0 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x55b2b0e3a958 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x55b2b0e3a928 <col:251> 'int' 0
|   |                 `-ParenExpr 0x55b2b0e3ad18 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x55b2b0e3ace8 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x55b2b0e3abe8 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x55b2b0e3ab78 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x55b2b0e3aae8 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x55b2b0e3aaa0 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x55b2b0e3aa88 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x55b2b0e3aa48 <col:257> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x55b2b0e3aad0 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x55b2b0e3aab8 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x55b2b0e3aa68 <col:275> '_Bool' lvalue Var 0x55b2b0e355a8 'x$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x55b2b0e3ab60 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x55b2b0e3ab28 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x55b2b0e3ab08 <col:293> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x55b2b0e3abd0 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x55b2b0e3abb8 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x55b2b0e3ab98 <col:312> '_Bool' lvalue Var 0x55b2b0e353c8 'x$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x55b2b0e3acb8 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x55b2b0e3ac38 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x55b2b0e3ac08 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x55b2b0e3acd0 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x55b2b0e3ac90 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x55b2b0e3ac60 <col:347> 'int' 0
|   |-BinaryOperator 0x55b2b0e3afb0 <line:738:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3af38 <col:3> '_Bool' lvalue Var 0x55b2b0e34990 '__unbuffered_p0_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b2b0e3af88 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b2b0e3af58 <col:45> 'int' 1
|   |-BinaryOperator 0x55b2b0e3b028 <line:739:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55b2b0e3afd0 <col:3> 'int *' lvalue Var 0x55b2b0e34a10 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55b2b0e3b010 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55b2b0e3aff0 <col:43> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |-BinaryOperator 0x55b2b0e3b0a0 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3b048 <col:3> 'int' lvalue Var 0x55b2b0e34440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b2b0e3b088 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b2b0e3b068 <col:25> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |-BinaryOperator 0x55b2b0e3b1d0 <line:741:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3b0c0 <col:3> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   | `-ConditionalOperator 0x55b2b0e3b1a0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55b2b0e3b158 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b2b0e3b140 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b2b0e3b0e0 <col:7> '_Bool' lvalue Var 0x55b2b0e35258 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55b2b0e3b170 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e3b100 <col:25> 'int' lvalue Var 0x55b2b0e352d8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55b2b0e3b188 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b2b0e3b120 <col:37> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |-BinaryOperator 0x55b2b0e3b268 <line:742:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3b1f0 <col:3> '_Bool' lvalue Var 0x55b2b0e35258 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b2b0e3b240 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b2b0e3b210 <col:28> 'int' 0
|   |-CallExpr 0x55b2b0e3b2c0 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3b2a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3b288 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b2b0e3b318 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3b300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3b2e0 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b2b0e3b390 <line:745:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3b338 <col:3> 'int' lvalue Var 0x55b2b0e34d70 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55b2b0e3b378 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b2b0e3b358 <col:25> 'int' lvalue Var 0x55b2b0e35a80 'y' 'int'
|   |-CallExpr 0x55b2b0e3b3e8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3b3d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3b3b0 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b2b0e3b440 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3b428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3b408 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55b2b0e3b498 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3b480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3b460 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b2b0e3b4f0 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3b4d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3b4b8 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b2b0e3b5a8 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3b510 <col:3> 'int' lvalue Var 0x55b2b0e34320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b2b0e3b588 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b2b0e3b570 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e3b530 <col:22> 'int' lvalue Var 0x55b2b0e34320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b2b0e3b550 <col:41> 'int' 1
|   |-CallExpr 0x55b2b0e3b600 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3b5e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3b5c8 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b2b0e3b6a8 <line:752:3, col:36>
|     `-CallExpr 0x55b2b0e3b688 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b2b0e3b670 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b2b0e3b620 <col:10> 'void *(void)' Function 0x55b2b0ddaab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b2b0e3b858 prev 0x55b2b0e33e48 <line:754:1, line:784:1> line:754:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55b2b0e3b7c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b2b0e3e850 <line:755:1, line:784:1>
|   |-CallExpr 0x55b2b0e3b938 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3b920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3b900 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b2b0e3b998 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3b958 <col:3> 'int' lvalue Var 0x55b2b0e35a80 'y' 'int'
|   | `-IntegerLiteral 0x55b2b0e3b978 <col:7> 'int' 1
|   |-CallExpr 0x55b2b0e3b9f0 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3b9d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3b9b8 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b2b0e3ba48 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3ba30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3ba10 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b2b0e3bac0 <line:760:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3ba68 <col:3> 'int' lvalue Var 0x55b2b0e34e90 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55b2b0e3baa8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b2b0e3ba88 <col:25> 'int' lvalue Var 0x55b2b0e35a80 'y' 'int'
|   |-CallExpr 0x55b2b0e3bb18 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3bb00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3bae0 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b2b0e3bb88 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3bb70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3bb38 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b2b0e3bc20 <line:763:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3bba8 <col:3> '_Bool' lvalue Var 0x55b2b0e36b50 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55b2b0e3bc00 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b2b0e3bbe8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b2b0e3bbc8 <col:19> '_Bool (void)' Function 0x55b2b0dda770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b2b0e3bcb8 <line:764:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3bc40 <col:3> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55b2b0e3bc98 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55b2b0e3bc80 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55b2b0e3bc60 <col:19> '_Bool (void)' Function 0x55b2b0dda770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55b2b0e3bd30 <line:765:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3bcd8 <col:3> '_Bool' lvalue Var 0x55b2b0e35258 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e3bd18 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b2b0e3bcf8 <col:21> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55b2b0e3bda8 <line:766:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3bd50 <col:3> 'int' lvalue Var 0x55b2b0e352d8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55b2b0e3bd90 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b2b0e3bd70 <col:15> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |-BinaryOperator 0x55b2b0e3c1e0 <line:767:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3bdc8 <col:3> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   | `-ConditionalOperator 0x55b2b0e3c1b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55b2b0e3bfd8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55b2b0e3bef8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55b2b0e3be20 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55b2b0e3be08 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55b2b0e3bde8 <col:8> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55b2b0e3bed8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55b2b0e3be70 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55b2b0e3be58 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55b2b0e3be38 <col:27> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55b2b0e3bec0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55b2b0e3bea8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55b2b0e3be88 <col:46> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55b2b0e3bfb8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55b2b0e3bf50 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55b2b0e3bf38 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55b2b0e3bf18 <col:65> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55b2b0e3bfa0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55b2b0e3bf88 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55b2b0e3bf68 <col:84> '_Bool' lvalue Var 0x55b2b0e35620 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b2b0e3c198 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e3bff8 <col:101> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |   `-ParenExpr 0x55b2b0e3c178 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55b2b0e3c148 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55b2b0e3c0b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b2b0e3c070 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b2b0e3c058 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b2b0e3c018 <col:106> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b2b0e3c0a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b2b0e3c088 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b2b0e3c038 <col:124> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b2b0e3c118 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b2b0e3c0d8 <col:141> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55b2b0e3c130 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b2b0e3c0f8 <col:153> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b2b0e3c6f0 <line:768:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3c200 <col:3> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55b2b0e3c6c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b2b0e3c690 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b2b0e3c678 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b2b0e3c220 <col:15> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b2b0e3c6a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e3c240 <col:31> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b2b0e3c658 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b2b0e3c628 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b2b0e3c450 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b2b0e3c370 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b2b0e3c298 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b2b0e3c280 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b2b0e3c260 <col:45> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b2b0e3c350 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b2b0e3c2e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b2b0e3c2d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b2b0e3c2b0 <col:64> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55b2b0e3c338 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b2b0e3c320 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b2b0e3c300 <col:83> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b2b0e3c430 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b2b0e3c3c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b2b0e3c3b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b2b0e3c390 <col:102> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55b2b0e3c418 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b2b0e3c400 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b2b0e3c3e0 <col:121> '_Bool' lvalue Var 0x55b2b0e35620 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b2b0e3c610 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b2b0e3c470 <col:138> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55b2b0e3c5f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b2b0e3c5c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b2b0e3c530 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b2b0e3c4e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b2b0e3c4d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b2b0e3c490 <col:151> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b2b0e3c518 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b2b0e3c500 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b2b0e3c4b0 <col:169> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55b2b0e3c590 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b2b0e3c550 <col:186> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55b2b0e3c5a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b2b0e3c570 <col:198> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55b2b0e3cc18 <line:769:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3c710 <col:3> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55b2b0e3cbe8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55b2b0e3cbb8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b2b0e3cba0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b2b0e3c730 <col:15> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55b2b0e3cbd0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e3c750 <col:31> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55b2b0e3cb80 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55b2b0e3cb38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55b2b0e3c960 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55b2b0e3c880 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55b2b0e3c7a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55b2b0e3c790 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55b2b0e3c770 <col:45> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55b2b0e3c860 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55b2b0e3c7f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55b2b0e3c7e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55b2b0e3c7c0 <col:64> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55b2b0e3c848 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55b2b0e3c830 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55b2b0e3c810 <col:83> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55b2b0e3c940 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55b2b0e3c8d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55b2b0e3c8c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55b2b0e3c8a0 <col:102> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55b2b0e3c928 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55b2b0e3c910 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55b2b0e3c8f0 <col:121> '_Bool' lvalue Var 0x55b2b0e35620 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55b2b0e3cb20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b2b0e3c980 <col:138> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55b2b0e3cb00 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55b2b0e3cad0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55b2b0e3ca40 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55b2b0e3c9f8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55b2b0e3c9e0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55b2b0e3c9a0 <col:151> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55b2b0e3ca28 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55b2b0e3ca10 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55b2b0e3c9c0 <col:169> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55b2b0e3caa0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55b2b0e3ca60 <col:186> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55b2b0e3cab8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55b2b0e3ca80 <col:198> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55b2b0e3d1c0 <line:770:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3cc38 <col:3> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e3d1a8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e3d178 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b2b0e3d130 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3d118 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e3cc58 <col:20> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e3d160 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3d148 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e3cc78 <col:36> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55b2b0e3d0f8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b2b0e3d0c8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b2b0e3ce88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b2b0e3cda8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b2b0e3ccd0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b2b0e3ccb8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b2b0e3cc98 <col:55> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b2b0e3cd88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b2b0e3cd20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b2b0e3cd08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b2b0e3cce8 <col:74> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b2b0e3cd70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b2b0e3cd58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b2b0e3cd38 <col:93> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b2b0e3ce68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b2b0e3ce00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b2b0e3cde8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b2b0e3cdc8 <col:112> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b2b0e3ce50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b2b0e3ce38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b2b0e3ce18 <col:131> '_Bool' lvalue Var 0x55b2b0e35620 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b2b0e3d0b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b2b0e3d098 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e3cea8 <col:148> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55b2b0e3d078 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b2b0e3d048 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b2b0e3cf68 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b2b0e3cf20 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b2b0e3cf08 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b2b0e3cec8 <col:166> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b2b0e3cf50 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b2b0e3cf38 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b2b0e3cee8 <col:184> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b2b0e3d000 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b2b0e3cfb8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b2b0e3cf88 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b2b0e3d030 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b2b0e3d018 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b2b0e3cfe0 <col:212> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b2b0e3d788 <line:771:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3d1e0 <col:3> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e3d770 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e3d740 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b2b0e3d6f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3d6e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e3d200 <col:20> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e3d728 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3d710 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e3d220 <col:36> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55b2b0e3d6c0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b2b0e3d690 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b2b0e3d430 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b2b0e3d350 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b2b0e3d278 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b2b0e3d260 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b2b0e3d240 <col:55> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b2b0e3d330 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b2b0e3d2c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b2b0e3d2b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b2b0e3d290 <col:74> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b2b0e3d318 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b2b0e3d300 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b2b0e3d2e0 <col:93> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b2b0e3d410 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b2b0e3d3a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b2b0e3d390 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b2b0e3d370 <col:112> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b2b0e3d3f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b2b0e3d3e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b2b0e3d3c0 <col:131> '_Bool' lvalue Var 0x55b2b0e35620 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b2b0e3d678 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b2b0e3d660 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e3d450 <col:148> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55b2b0e3d640 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b2b0e3d610 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b2b0e3d510 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b2b0e3d4c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b2b0e3d4b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b2b0e3d470 <col:166> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b2b0e3d4f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b2b0e3d4e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b2b0e3d490 <col:184> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b2b0e3d5e0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b2b0e3d560 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b2b0e3d530 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b2b0e3d5f8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b2b0e3d5b8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b2b0e3d588 <col:219> 'int' 0
|   |-BinaryOperator 0x55b2b0e3dd50 <line:772:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3d7a8 <col:3> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e3dd38 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e3dd08 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55b2b0e3dcc0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3dca8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e3d7c8 <col:20> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e3dcf0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3dcd8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e3d7e8 <col:36> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55b2b0e3dc88 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55b2b0e3dc58 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55b2b0e3d9f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b2b0e3d918 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b2b0e3d840 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b2b0e3d828 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b2b0e3d808 <col:55> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b2b0e3d8f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b2b0e3d890 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b2b0e3d878 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b2b0e3d858 <col:74> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b2b0e3d8e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b2b0e3d8c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b2b0e3d8a8 <col:93> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b2b0e3d9d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b2b0e3d970 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b2b0e3d958 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b2b0e3d938 <col:112> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b2b0e3d9c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b2b0e3d9a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b2b0e3d988 <col:131> '_Bool' lvalue Var 0x55b2b0e35620 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b2b0e3dc40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b2b0e3dc28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e3da18 <col:148> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55b2b0e3dc08 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55b2b0e3dbd8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55b2b0e3dad8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b2b0e3da90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b2b0e3da78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b2b0e3da38 <col:166> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b2b0e3dac0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b2b0e3daa8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b2b0e3da58 <col:184> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b2b0e3db90 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b2b0e3db28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b2b0e3daf8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b2b0e3dbc0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55b2b0e3dba8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55b2b0e3db50 <col:212> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55b2b0e3e318 <line:773:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3dd70 <col:3> '_Bool' lvalue Var 0x55b2b0e35620 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e3e300 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e3e2d0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55b2b0e3e288 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3e270 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e3dd90 <col:20> '_Bool' lvalue Var 0x55b2b0e36c40 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e3e2b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55b2b0e3e2a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55b2b0e3ddb0 <col:36> '_Bool' lvalue Var 0x55b2b0e35620 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55b2b0e3e250 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55b2b0e3e220 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55b2b0e3dfc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55b2b0e3dee0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55b2b0e3de08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55b2b0e3ddf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55b2b0e3ddd0 <col:55> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55b2b0e3dec0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55b2b0e3de58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55b2b0e3de40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55b2b0e3de20 <col:74> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55b2b0e3dea8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55b2b0e3de90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55b2b0e3de70 <col:93> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55b2b0e3dfa0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55b2b0e3df38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55b2b0e3df20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55b2b0e3df00 <col:112> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55b2b0e3df88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55b2b0e3df70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55b2b0e3df50 <col:131> '_Bool' lvalue Var 0x55b2b0e35620 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55b2b0e3e208 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55b2b0e3e1f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55b2b0e3dfe0 <col:148> '_Bool' lvalue Var 0x55b2b0e35620 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55b2b0e3e1d0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55b2b0e3e1a0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55b2b0e3e0a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55b2b0e3e058 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55b2b0e3e040 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55b2b0e3e000 <col:166> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55b2b0e3e088 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55b2b0e3e070 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55b2b0e3e020 <col:184> '_Bool' lvalue Var 0x55b2b0e35440 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55b2b0e3e170 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55b2b0e3e0f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55b2b0e3e0c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55b2b0e3e188 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55b2b0e3e148 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55b2b0e3e118 <col:219> 'int' 0
|   |-BinaryOperator 0x55b2b0e3e390 <line:774:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3e338 <col:3> 'int' lvalue Var 0x55b2b0e34fb0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55b2b0e3e378 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b2b0e3e358 <col:25> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |-BinaryOperator 0x55b2b0e3e4c0 <line:775:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3e3b0 <col:3> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   | `-ConditionalOperator 0x55b2b0e3e490 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55b2b0e3e448 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55b2b0e3e430 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55b2b0e3e3d0 <col:7> '_Bool' lvalue Var 0x55b2b0e35258 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55b2b0e3e460 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e3e3f0 <col:25> 'int' lvalue Var 0x55b2b0e352d8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55b2b0e3e478 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b2b0e3e410 <col:37> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |-BinaryOperator 0x55b2b0e3e558 <line:776:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3e4e0 <col:3> '_Bool' lvalue Var 0x55b2b0e35258 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55b2b0e3e530 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55b2b0e3e500 <col:28> 'int' 0
|   |-CallExpr 0x55b2b0e3e5b0 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3e598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3e578 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b2b0e3e608 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3e5f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3e5d0 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55b2b0e3e660 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3e648 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3e628 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b2b0e3e6b8 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3e6a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3e680 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b2b0e3e770 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3e6d8 <col:3> 'int' lvalue Var 0x55b2b0e34320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b2b0e3e750 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b2b0e3e738 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e3e6f8 <col:22> 'int' lvalue Var 0x55b2b0e34320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b2b0e3e718 <col:41> 'int' 1
|   |-CallExpr 0x55b2b0e3e7c8 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3e7b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3e790 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b2b0e3e840 <line:783:3, col:36>
|     `-CallExpr 0x55b2b0e3e820 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b2b0e3e808 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b2b0e3e7e8 <col:10> 'void *(void)' Function 0x55b2b0ddaab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b2b0e3e9f0 prev 0x55b2b0e33fa0 <line:785:1, line:801:1> line:785:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55b2b0e3e958 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55b2b0e3fb08 <line:786:1, line:801:1>
|   |-CallExpr 0x55b2b0e3ead0 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3eab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3ea98 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b2b0e3eb30 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3eaf0 <col:3> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   | `-IntegerLiteral 0x55b2b0e3eb10 <col:7> 'int' 1
|   |-CallExpr 0x55b2b0e3eba0 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3eb70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3eb50 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b2b0e3ebf8 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3ebe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3ebc0 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b2b0e3eee0 <line:791:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3ec18 <col:3> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   | `-ConditionalOperator 0x55b2b0e3eeb0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55b2b0e3ecd8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55b2b0e3ec90 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55b2b0e3ec78 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55b2b0e3ec38 <col:7> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55b2b0e3ecc0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55b2b0e3eca8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55b2b0e3ec58 <col:25> '_Bool' lvalue Var 0x55b2b0e354b8 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55b2b0e3ee98 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e3ecf8 <col:42> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55b2b0e3ee78 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55b2b0e3ee48 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55b2b0e3edb8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55b2b0e3ed70 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55b2b0e3ed58 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55b2b0e3ed18 <col:55> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55b2b0e3eda0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55b2b0e3ed88 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55b2b0e3ed38 <col:73> '_Bool' lvalue Var 0x55b2b0e35698 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55b2b0e3ee18 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55b2b0e3edd8 <col:90> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55b2b0e3ee30 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b2b0e3edf8 <col:102> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
|   |-BinaryOperator 0x55b2b0e3f0e8 <line:792:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3ef00 <col:3> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e3f0d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e3f0a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b2b0e3efc0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b2b0e3ef78 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b2b0e3ef60 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b2b0e3ef20 <col:20> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b2b0e3efa8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b2b0e3ef90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b2b0e3ef40 <col:38> '_Bool' lvalue Var 0x55b2b0e354b8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e3f058 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b2b0e3f010 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b2b0e3efe0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b2b0e3f088 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b2b0e3f070 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b2b0e3f038 <col:66> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55b2b0e3f3d0 <line:793:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3f108 <col:3> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e3f3b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e3f388 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b2b0e3f2a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b2b0e3f1c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b2b0e3f180 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b2b0e3f168 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b2b0e3f128 <col:20> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b2b0e3f1b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b2b0e3f198 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b2b0e3f148 <col:38> '_Bool' lvalue Var 0x55b2b0e354b8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55b2b0e3f288 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b2b0e3f240 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b2b0e3f228 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b2b0e3f1e8 <col:56> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b2b0e3f270 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b2b0e3f258 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b2b0e3f208 <col:74> '_Bool' lvalue Var 0x55b2b0e35698 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e3f340 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b2b0e3f2f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b2b0e3f2c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b2b0e3f370 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b2b0e3f358 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b2b0e3f320 <col:102> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55b2b0e3f5d8 <line:794:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3f3f0 <col:3> '_Bool' lvalue Var 0x55b2b0e354b8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e3f5c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e3f590 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55b2b0e3f4b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55b2b0e3f468 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55b2b0e3f450 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55b2b0e3f410 <col:20> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55b2b0e3f498 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55b2b0e3f480 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55b2b0e3f430 <col:38> '_Bool' lvalue Var 0x55b2b0e354b8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e3f548 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b2b0e3f500 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b2b0e3f4d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55b2b0e3f578 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b2b0e3f560 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b2b0e3f528 <col:66> '_Bool' lvalue Var 0x55b2b0e354b8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55b2b0e3f8c0 <line:795:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55b2b0e3f5f8 <col:3> '_Bool' lvalue Var 0x55b2b0e35698 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55b2b0e3f8a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55b2b0e3f878 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55b2b0e3f798 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55b2b0e3f6b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55b2b0e3f670 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55b2b0e3f658 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55b2b0e3f618 <col:20> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55b2b0e3f6a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55b2b0e3f688 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55b2b0e3f638 <col:38> '_Bool' lvalue Var 0x55b2b0e354b8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55b2b0e3f778 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55b2b0e3f730 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55b2b0e3f718 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55b2b0e3f6d8 <col:56> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55b2b0e3f760 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55b2b0e3f748 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55b2b0e3f6f8 <col:74> '_Bool' lvalue Var 0x55b2b0e35698 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55b2b0e3f830 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55b2b0e3f7e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55b2b0e3f7b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55b2b0e3f860 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55b2b0e3f848 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55b2b0e3f810 <col:102> '_Bool' lvalue Var 0x55b2b0e35698 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55b2b0e3f918 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3f900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3f8e0 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55b2b0e3f970 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3f958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3f938 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55b2b0e3fa28 <line:798:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55b2b0e3f990 <col:3> 'int' lvalue Var 0x55b2b0e34320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55b2b0e3fa08 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55b2b0e3f9f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b2b0e3f9b0 <col:22> 'int' lvalue Var 0x55b2b0e34320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55b2b0e3f9d0 <col:41> 'int' 1
|   |-CallExpr 0x55b2b0e3fa80 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55b2b0e3fa68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b2b0e3fa48 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55b2b0e3faf8 <line:800:3, col:36>
|     `-CallExpr 0x55b2b0e3fad8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55b2b0e3fac0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55b2b0e3faa0 <col:10> 'void *(void)' Function 0x55b2b0ddaab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55b2b0e3fbd0 prev 0x55b2b0e34068 <line:802:1, line:804:1> line:802:6 fence 'void ()'
| `-CompoundStmt 0x55b2b0e3fc70 <line:803:1, line:804:1>
|-FunctionDecl 0x55b2b0e3fca0 prev 0x55b2b0e34128 <line:805:1, line:807:1> line:805:6 isync 'void ()'
| `-CompoundStmt 0x55b2b0e3fd40 <line:806:1, line:807:1>
|-FunctionDecl 0x55b2b0e3fd70 prev 0x55b2b0e341e8 <line:808:1, line:810:1> line:808:6 lwfence 'void ()'
| `-CompoundStmt 0x55b2b0e3fe10 <line:809:1, line:810:1>
`-FunctionDecl 0x55b2b0e3fe78 <line:811:1, line:837:1> line:811:5 main 'int ()'
  `-CompoundStmt 0x55b2b0e41e68 <line:812:1, line:837:1>
    |-DeclStmt 0x55b2b0e3ff90 <line:813:3, col:18>
    | `-VarDecl 0x55b2b0e3ff28 <col:3, col:13> col:13 used t1739 'pthread_t':'unsigned long'
    |-CallExpr 0x55b2b0e40198 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b2b0e40180 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b2b0e3ffa8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b2b0e1b5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b2b0e3ffe8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b2b0e3ffc8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b2b0e3ff28 't1739' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b2b0e401d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b2b0e40060 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b2b0e40038 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b2b0e40000 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b2b0e401f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b2b0e40080 <col:39> 'void *(void *)' Function 0x55b2b0e36d58 'P0' 'void *(void *)'
    | `-ParenExpr 0x55b2b0e40100 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b2b0e400d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b2b0e400a0 <col:52> 'int' 0
    |-DeclStmt 0x55b2b0e40280 <line:815:3, col:18>
    | `-VarDecl 0x55b2b0e40218 <col:3, col:13> col:13 used t1740 'pthread_t':'unsigned long'
    |-CallExpr 0x55b2b0e40428 <line:816:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b2b0e40410 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b2b0e40298 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b2b0e1b5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b2b0e402d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b2b0e402b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b2b0e40218 't1740' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b2b0e40468 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b2b0e40350 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b2b0e40328 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b2b0e402f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b2b0e40480 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b2b0e40370 <col:39> 'void *(void *)' Function 0x55b2b0e3b858 'P1' 'void *(void *)'
    | `-ParenExpr 0x55b2b0e403f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b2b0e403c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b2b0e40390 <col:52> 'int' 0
    |-DeclStmt 0x55b2b0e40510 <line:817:3, col:18>
    | `-VarDecl 0x55b2b0e404a8 <col:3, col:13> col:13 used t1741 'pthread_t':'unsigned long'
    |-CallExpr 0x55b2b0e406b8 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55b2b0e406a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b2b0e40528 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55b2b0e1b5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55b2b0e40568 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55b2b0e40548 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55b2b0e404a8 't1741' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55b2b0e406f8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55b2b0e405e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55b2b0e405b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55b2b0e40580 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55b2b0e40710 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b2b0e40600 <col:39> 'void *(void *)' Function 0x55b2b0e3e9f0 'P2' 'void *(void *)'
    | `-ParenExpr 0x55b2b0e40680 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55b2b0e40658 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55b2b0e40620 <col:52> 'int' 0
    |-CallExpr 0x55b2b0e40760 <line:819:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b2b0e40748 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b2b0e40728 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b2b0e40830 <line:820:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55b2b0e40780 <col:3> '_Bool' lvalue Var 0x55b2b0e35048 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55b2b0e40818 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55b2b0e407f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55b2b0e407e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55b2b0e407a0 <col:21> 'int' lvalue Var 0x55b2b0e34320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55b2b0e407c0 <col:41> 'int' 3
    |-CallExpr 0x55b2b0e40888 <line:821:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b2b0e40870 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b2b0e40850 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b2b0e40938 <line:822:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b2b0e40920 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b2b0e408a8 <col:3> 'void (int)' Function 0x55b2b0dda940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55b2b0e40978 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b2b0e40960 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b2b0e408c8 <col:21> '_Bool' lvalue Var 0x55b2b0e35048 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55b2b0e409c8 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b2b0e409b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b2b0e40990 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b2b0e40cc8 <line:824:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55b2b0e409e8 <col:3> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
    | `-ConditionalOperator 0x55b2b0e40c98 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55b2b0e40aa8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55b2b0e40a60 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55b2b0e40a48 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55b2b0e40a08 <col:7> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55b2b0e40a90 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55b2b0e40a78 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55b2b0e40a28 <col:25> '_Bool' lvalue Var 0x55b2b0e35350 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55b2b0e40c80 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55b2b0e40ac8 <col:42> 'int' lvalue Var 0x55b2b0e35810 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55b2b0e40c60 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55b2b0e40c30 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55b2b0e40b88 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55b2b0e40b40 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55b2b0e40b28 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55b2b0e40ae8 <col:55> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55b2b0e40b70 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55b2b0e40b58 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55b2b0e40b08 <col:73> '_Bool' lvalue Var 0x55b2b0e35530 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55b2b0e40c00 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55b2b0e40bc0 <col:90> 'int' lvalue Var 0x55b2b0e35908 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55b2b0e40c18 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55b2b0e40be0 <col:102> 'int' lvalue Var 0x55b2b0e351c0 'x' 'int'
    |-BinaryOperator 0x55b2b0e40ed0 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b2b0e40ce8 <col:3> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55b2b0e40eb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b2b0e40e88 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b2b0e40da8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b2b0e40d60 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b2b0e40d48 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b2b0e40d08 <col:20> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b2b0e40d90 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b2b0e40d78 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b2b0e40d28 <col:38> '_Bool' lvalue Var 0x55b2b0e35350 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b2b0e40e40 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b2b0e40df8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b2b0e40dc8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b2b0e40e70 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b2b0e40e58 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b2b0e40e20 <col:66> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55b2b0e411b8 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b2b0e40ef0 <col:3> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55b2b0e411a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b2b0e41170 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b2b0e41090 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b2b0e40fb0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b2b0e40f68 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b2b0e40f50 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b2b0e40f10 <col:20> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b2b0e40f98 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b2b0e40f80 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b2b0e40f30 <col:38> '_Bool' lvalue Var 0x55b2b0e35350 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b2b0e41070 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b2b0e41028 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b2b0e41010 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b2b0e40fd0 <col:56> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b2b0e41058 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b2b0e41040 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b2b0e40ff0 <col:74> '_Bool' lvalue Var 0x55b2b0e35530 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b2b0e41128 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b2b0e410e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b2b0e410b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b2b0e41158 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b2b0e41140 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b2b0e41108 <col:102> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55b2b0e413c0 <line:827:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55b2b0e411d8 <col:3> '_Bool' lvalue Var 0x55b2b0e35350 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b2b0e413a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b2b0e41378 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55b2b0e41298 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55b2b0e41250 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55b2b0e41238 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55b2b0e411f8 <col:20> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55b2b0e41280 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55b2b0e41268 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55b2b0e41218 <col:38> '_Bool' lvalue Var 0x55b2b0e35350 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b2b0e41330 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b2b0e412e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b2b0e412b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55b2b0e41360 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b2b0e41348 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b2b0e41310 <col:66> '_Bool' lvalue Var 0x55b2b0e35350 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55b2b0e416a8 <line:828:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55b2b0e413e0 <col:3> '_Bool' lvalue Var 0x55b2b0e35530 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55b2b0e41690 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55b2b0e41660 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55b2b0e41580 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55b2b0e414a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55b2b0e41458 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55b2b0e41440 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55b2b0e41400 <col:20> '_Bool' lvalue Var 0x55b2b0e35888 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55b2b0e41488 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55b2b0e41470 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55b2b0e41420 <col:38> '_Bool' lvalue Var 0x55b2b0e35350 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55b2b0e41560 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55b2b0e41518 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55b2b0e41500 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55b2b0e414c0 <col:56> '_Bool' lvalue Var 0x55b2b0e35980 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55b2b0e41548 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55b2b0e41530 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55b2b0e414e0 <col:74> '_Bool' lvalue Var 0x55b2b0e35530 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55b2b0e41618 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55b2b0e415d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55b2b0e415a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55b2b0e41648 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55b2b0e41630 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55b2b0e415f8 <col:102> '_Bool' lvalue Var 0x55b2b0e35530 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55b2b0e41700 <line:829:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b2b0e416e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b2b0e416c8 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b2b0e41758 <line:830:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55b2b0e41740 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b2b0e41720 <col:3> 'void ()' Function 0x55b2b0ddafa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55b2b0e417f0 <line:831:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55b2b0e41778 <col:3> '_Bool' lvalue Var 0x55b2b0e36bc8 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55b2b0e417d0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55b2b0e417b8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55b2b0e41798 <col:19> '_Bool (void)' Function 0x55b2b0dda770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55b2b0e41a28 <line:832:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55b2b0e41810 <col:3> 'int' lvalue Var 0x55b2b0e34440 '__unbuffered_p0_EAX' 'int'
    | `-ConditionalOperator 0x55b2b0e419f8 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55b2b0e419c8 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55b2b0e419b0 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55b2b0e41830 <col:25> '_Bool' lvalue Var 0x55b2b0e34990 '__unbuffered_p0_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55b2b0e41970 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55b2b0e41940 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55b2b0e418f8 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55b2b0e418e0 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55b2b0e41850 <col:61> '_Bool' lvalue Var 0x55b2b0e36bc8 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55b2b0e41910 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55b2b0e418a8 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55b2b0e41890 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55b2b0e41870 <col:78> 'int *' lvalue Var 0x55b2b0e34a10 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55b2b0e41928 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55b2b0e418c0 <col:117> 'int' lvalue Var 0x55b2b0e34440 '__unbuffered_p0_EAX' 'int'
    |   `-ImplicitCastExpr 0x55b2b0e419e0 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55b2b0e41990 <col:140> 'int' lvalue Var 0x55b2b0e34440 '__unbuffered_p0_EAX' 'int'
    |-BinaryOperator 0x55b2b0e41d10 <line:833:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x55b2b0e41a48 <col:3> '_Bool' lvalue Var 0x55b2b0e350c0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55b2b0e41cf8 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55b2b0e41ce0 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55b2b0e41cc0 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x55b2b0e41ca0 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x55b2b0e41c08 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x55b2b0e41b58 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x55b2b0e41ac0 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55b2b0e41aa8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55b2b0e41a68 <col:23> 'int' lvalue Var 0x55b2b0e34440 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x55b2b0e41a88 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x55b2b0e41b38 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55b2b0e41b20 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55b2b0e41ae0 <col:51> 'int' lvalue Var 0x55b2b0e34d70 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55b2b0e41b00 <col:74> 'int' 0
    |         | `-BinaryOperator 0x55b2b0e41be8 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55b2b0e41bd0 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55b2b0e41b78 <col:79> 'int' lvalue Var 0x55b2b0e34e90 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55b2b0e41b98 <col:102> 'int' 1
    |         `-BinaryOperator 0x55b2b0e41c80 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x55b2b0e41c68 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55b2b0e41c28 <col:107> 'int' lvalue Var 0x55b2b0e34fb0 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55b2b0e41c48 <col:130> 'int' 0
    |-CallExpr 0x55b2b0e41d68 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55b2b0e41d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55b2b0e41d30 <col:3> 'void ()' Function 0x55b2b0ddb060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55b2b0e41de0 <line:835:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55b2b0e41dc8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55b2b0e41d88 <col:3> 'void (int)' Function 0x55b2b0ddad28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55b2b0e41e20 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55b2b0e41e08 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55b2b0e41da8 <col:21> '_Bool' lvalue Var 0x55b2b0e350c0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55b2b0e41e58 <line:836:3, col:10>
      `-IntegerLiteral 0x55b2b0e41e38 <col:10> 'int' 0
