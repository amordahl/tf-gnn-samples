TranslationUnitDecl 0x5634f6bc3e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5634f6bc46d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5634f6bc43b0 '__int128'
|-TypedefDecl 0x5634f6bc4748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5634f6bc43d0 'unsigned __int128'
|-TypedefDecl 0x5634f6bc4a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5634f6bc4820 'struct __NSConstantString_tag'
|   `-Record 0x5634f6bc47a0 '__NSConstantString_tag'
|-TypedefDecl 0x5634f6bc4af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5634f6bc4ab0 'char *'
|   `-BuiltinType 0x5634f6bc3eb0 'char'
|-TypedefDecl 0x5634f6c03650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5634f6bc4d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5634f6bc4bd0 'struct __va_list_tag'
|     `-Record 0x5634f6bc4b50 '__va_list_tag'
|-FunctionDecl 0x5634f6c03790 <./split_3/mix052_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5634f6c036c0 <col:31> col:34 'int'
|-FunctionDecl 0x5634f6c03958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5634f6c03a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5634f6c03bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5634f6c03b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5634f6c03df8 <col:40, col:99>
|   |-IfStmt 0x5634f6c03dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5634f6c03ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5634f6c03c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5634f6c03c70 <col:47> 'int' lvalue ParmVar 0x5634f6c03b38 'expression' 'int'
|   | `-CompoundStmt 0x5634f6c03db0 <col:59, col:88>
|   |   `-LabelStmt 0x5634f6c03d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5634f6c03d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5634f6c03d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5634f6c03cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5634f6c03a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5634f6c03de0 <col:89>
|   `-ReturnStmt 0x5634f6c03de8 <col:91>
|-FunctionDecl 0x5634f6c03e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5634f6c03f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5634f6c04280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5634f6c03fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5634f6c04038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5634f6c040b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5634f6c04138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5634f6c04340 <line:10:22>
|-FunctionDecl 0x5634f6c2a390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5634f6c043b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5634f6c04430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5634f6c044b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5634f6c04530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5634f6c2a450 <line:13:22>
|-FunctionDecl 0x5634f6c2a700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5634f6c2a4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5634f6c2a540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5634f6c2a5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5634f6c2a7b8 <line:15:22>
|-TypedefDecl 0x5634f6c2a828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5634f6bc3f70 'unsigned char'
|-TypedefDecl 0x5634f6c2a898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5634f6bc3f90 'unsigned short'
|-TypedefDecl 0x5634f6c2a908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5634f6bc3fb0 'unsigned int'
|-TypedefDecl 0x5634f6c2a978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2a9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5634f6bc3ed0 'signed char'
|-TypedefDecl 0x5634f6c2aa58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5634f6bc3f70 'unsigned char'
|-TypedefDecl 0x5634f6c2aac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5634f6bc3ef0 'short'
|-TypedefDecl 0x5634f6c2ab38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5634f6bc3f90 'unsigned short'
|-TypedefDecl 0x5634f6c2aba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5634f6bc3f10 'int'
|-TypedefDecl 0x5634f6c2ac18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5634f6bc3fb0 'unsigned int'
|-TypedefDecl 0x5634f6c2ac88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2acf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2ad68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2add8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2ae48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2aeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5634f6bc3fb0 'unsigned int'
|-TypedefDecl 0x5634f6c2af28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5634f6bc3fb0 'unsigned int'
|-TypedefDecl 0x5634f6c2af98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2b008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2b078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5634f6bc3fb0 'unsigned int'
|-TypedefDecl 0x5634f6c2b0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2b158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2b1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2b238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5634f6bc3f10 'int'
|-RecordDecl 0x5634f6c2b290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5634f6c2b408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5634f6c2b4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5634f6c2b460 'struct __fsid_t' sugar
|   `-RecordType 0x5634f6c2b310 '__fsid_t'
|     `-Record 0x5634f6c2b290 ''
|-TypedefDecl 0x5634f6c2b548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2b5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2b628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2b698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5634f6bc3fb0 'unsigned int'
|-TypedefDecl 0x5634f6c2b708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2b778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5634f6bc3fb0 'unsigned int'
|-TypedefDecl 0x5634f6c2b7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2b858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5634f6bc3f10 'int'
|-TypedefDecl 0x5634f6c2b8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5634f6bc3f10 'int'
|-TypedefDecl 0x5634f6c2b938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5634f6bc3f10 'int'
|-TypedefDecl 0x5634f6c2b9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5634f6bc4630 'void *'
|   `-BuiltinType 0x5634f6bc3e70 'void'
|-TypedefDecl 0x5634f6c2ba18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2ba88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2baf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2bb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2bbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2bc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2bcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2bd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2bd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2be08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2be78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2bf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5634f6c2bed0 '__off64_t' sugar
|   |-Typedef 0x5634f6c2b1c8 '__off64_t'
|   `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2c000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5634f6c2bfc0 '__quad_t *'
|   `-TypedefType 0x5634f6c2bf60 '__quad_t' sugar
|     |-Typedef 0x5634f6c2ad68 '__quad_t'
|     `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2c070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5634f6bc4ab0 'char *'
|   `-BuiltinType 0x5634f6bc3eb0 'char'
|-TypedefDecl 0x5634f6c2c0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c2c150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5634f6bc3fb0 'unsigned int'
|-FunctionDecl 0x5634f6c2c298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5634f6c2c1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5634f6c2d5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5634f6c2d5d8 <line:72:3, col:34>
|     `-CallExpr 0x5634f6c2d598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5634f6c2d580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5634f6c2d510 <col:10> '<builtin fn type>' Function 0x5634f6c2d380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5634f6c2d5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5634f6c2d530 <col:29> 'unsigned int' lvalue ParmVar 0x5634f6c2c1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5634f6c2d380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5634f6c2d420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5634f6c2d490 <col:10> Implicit
| `-ConstAttr 0x5634f6c2d4e8 <col:10> Implicit
|-FunctionDecl 0x5634f6c2d740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5634f6c2d638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5634f6c2da58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5634f6c2da48 <line:77:3, col:34>
|     `-CallExpr 0x5634f6c2da08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5634f6c2d9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5634f6c2d978 <col:10> '<builtin fn type>' Function 0x5634f6c2d7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5634f6c2da30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5634f6c2d998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5634f6c2d638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5634f6c2d7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5634f6c2d888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5634f6c2d8f8 <col:10> Implicit
| `-ConstAttr 0x5634f6c2d950 <col:10> Implicit
|-TypedefDecl 0x5634f6c2da88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-TypedefDecl 0x5634f6c2db18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5634f6c2dae0 '__time_t' sugar
|   |-Typedef 0x5634f6c2b708 '__time_t'
|   `-BuiltinType 0x5634f6bc3f30 'long'
|-RecordDecl 0x5634f6c2db70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5634f6c2dc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5634f6c2dcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5634f6c2dd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5634f6c2dd10 '__pid_t' sugar
|   |-Typedef 0x5634f6c2b238 '__pid_t'
|   `-BuiltinType 0x5634f6bc3f10 'int'
|-RecordDecl 0x5634f6c2dda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5634f6c2de60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5634f6c2deb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5634f6c2df70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5634f6c2dfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-RecordDecl 0x5634f6c2e030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5634f6c2e2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5634f6c2f3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5634f6c2e310 'struct cpu_set_t' sugar
|   `-RecordType 0x5634f6c2e0b0 'cpu_set_t'
|     `-Record 0x5634f6c2e030 ''
|-FunctionDecl 0x5634f6c2f678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5634f6c2f448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5634f6c2f550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5634f6c2f728 <line:107:19>
|-FunctionDecl 0x5634f6c2f900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5634f6c2f790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5634f6c2f9a8 <col:69>
|-FunctionDecl 0x5634f6c2fb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5634f6c2fa10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5634f6c2fbc8 <col:64>
|-FunctionDecl 0x5634f6c2fe88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5634f6c2fc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5634f6c2fd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5634f6c2ff38 <line:113:22>
|-FunctionDecl 0x5634f6c301b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5634f6c2ffa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5634f6c30098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5634f6c30268 <col:88>
|-FunctionDecl 0x5634f6c30588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5634f6c302d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5634f6c303b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5634f6c30440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5634f6c30640 <col:62>
|-FunctionDecl 0x5634f6c307b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5634f6c306a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5634f6c30860 <col:63>
|-FunctionDecl 0x5634f6c30988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5634f6c30a28 <col:47>
|-FunctionDecl 0x5634f6c30b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5634f6c30a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5634f6c30bd8 <col:69>
|-FunctionDecl 0x5634f6c30ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5634f6c30c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5634f6c30d88 <col:69>
|-FunctionDecl 0x5634f6c31048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5634f6c30df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5634f6c30f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5634f6c310f8 <col:88>
|-TypedefDecl 0x5634f6c31188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5634f6c31150 '__clock_t' sugar
|   |-Typedef 0x5634f6c2b548 '__clock_t'
|   `-BuiltinType 0x5634f6bc3f30 'long'
|-TypedefDecl 0x5634f6c31218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5634f6c311e0 '__clockid_t' sugar
|   |-Typedef 0x5634f6c2b938 '__clockid_t'
|   `-BuiltinType 0x5634f6bc3f10 'int'
|-TypedefDecl 0x5634f6c312a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5634f6c31270 '__timer_t' sugar
|   |-Typedef 0x5634f6c2b9a8 '__timer_t'
|   `-PointerType 0x5634f6bc4630 'void *'
|     `-BuiltinType 0x5634f6bc3e70 'void'
|-RecordDecl 0x5634f6c31300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5634f6c313d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5634f6c31440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5634f6c314a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5634f6c31510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5634f6c31578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5634f6c315e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5634f6c31648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5634f6c316b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5634f6c31718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5634f6c31780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5634f6c317e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5634f6c31838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5634f6c31908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5634f6c31978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5634f6c31a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5634f6c31bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5634f6c31c90 <col:45>
|-FunctionDecl 0x5634f6c31e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5634f6c31d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5634f6c31f18 <col:54>
|-FunctionDecl 0x5634f6c32118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5634f6c31f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5634f6c31ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5634f6c321c8 <line:157:22>
| `-ConstAttr 0x5634f6c32220 <col:63>
|-FunctionDecl 0x5634f6c33050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5634f6c32318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5634f6c330f8 <col:56>
|-FunctionDecl 0x5634f6c334a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5634f6c33168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5634f6c331e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5634f6c33260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5634f6c33358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5634f6c33560 <col:54>
|-RecordDecl 0x5634f6c335b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5634f6c33668 parent 0x5634f6bc3e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5634f6c338c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5634f6c33968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5634f6c339d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5634f6c33a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5634f6c33b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5634f6c33c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5634f6c33bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5634f6c33b80 'struct __locale_struct' sugar
|     `-RecordType 0x5634f6c33640 'struct __locale_struct'
|       `-Record 0x5634f6c335b8 '__locale_struct'
|-TypedefDecl 0x5634f6c33cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5634f6c33cc0 '__locale_t' sugar
|   |-Typedef 0x5634f6c33c48 '__locale_t'
|   `-PointerType 0x5634f6c33bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5634f6c33b80 'struct __locale_struct' sugar
|       `-RecordType 0x5634f6c33640 'struct __locale_struct'
|         `-Record 0x5634f6c335b8 '__locale_struct'
|-FunctionDecl 0x5634f6c35110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5634f6c33d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5634f6c33de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5634f6c33e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5634f6c33ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5634f6c33f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5634f6c351d8 <col:40>
|-FunctionDecl 0x5634f6c353c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5634f6c352a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5634f6c35470 <col:66>
|-FunctionDecl 0x5634f6c35580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5634f6c354d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5634f6c35628 <col:69>
|-FunctionDecl 0x5634f6c35858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5634f6c35690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5634f6c35720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5634f6c35908 <col:52>
|-FunctionDecl 0x5634f6c35ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5634f6c35970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5634f6c35a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5634f6c35b60 <col:55>
|-FunctionDecl 0x5634f6c35cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5634f6c35be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5634f6c35da0 <col:62>
|-FunctionDecl 0x5634f6c35f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5634f6c35e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5634f6c35fc0 <col:60>
|-FunctionDecl 0x5634f6c362b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5634f6c36118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5634f6c36198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5634f6c36368 <col:44>
|-FunctionDecl 0x5634f6c36578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5634f6c363d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5634f6c36450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5634f6c36628 <col:49>
|-VarDecl 0x5634f6c36728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5634f6c367a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5634f6c36828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5634f6c368f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5634f6c36a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5634f6c36ac0 <col:42>
|-VarDecl 0x5634f6c36b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5634f6c36bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5634f6c36d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5634f6c36c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5634f6c36de0 <col:57>
|-FunctionDecl 0x5634f6c36ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5634f6c36e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5634f6c36f98 <col:56>
|-FunctionDecl 0x5634f6c370d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5634f6c37018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5634f6c37178 <col:59>
|-FunctionDecl 0x5634f6c37280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5634f6c371e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5634f6c37328 <col:48>
| `-ConstAttr 0x5634f6c37380 <col:89>
|-FunctionDecl 0x5634f6c375e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5634f6c37438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5634f6c374c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5634f6c37848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5634f6c376d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5634f6c37768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5634f6c378f8 <col:88>
|-FunctionDecl 0x5634f6c37a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5634f6c37960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5634f6c379f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5634f6c37b40 <col:88>
|-FunctionDecl 0x5634f6c37d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5634f6c37ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5634f6c37c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5634f6c37e08 <line:208:22>
|-FunctionDecl 0x5634f6c38178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5634f6c37e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5634f6c37ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5634f6c37f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5634f6c38010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5634f6c38478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5634f6c38278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5634f6c38350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5634f6c38528 <col:85>
|-FunctionDecl 0x5634f6c38918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5634f6c38590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5634f6c386c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5634f6c387d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5634f6c389d0 <col:52>
|-FunctionDecl 0x5634f6c38b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5634f6c38a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5634f6c38bf0 <col:61>
|-FunctionDecl 0x5634f6c390f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5634f6c38c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5634f6c38cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5634f6c38e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5634f6c38ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5634f6c391b0 <col:62>
|-FunctionDecl 0x5634f6c393c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5634f6c39218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5634f6c392a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5634f6c39478 <line:221:22>
|-FunctionDecl 0x5634f6c39578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5634f6c394e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5634f6c39620 <col:65>
|-TypedefDecl 0x5634f6c39690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5634f6bc3fd0 'unsigned long'
|-RecordDecl 0x5634f6c396e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5634f6c39830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5634f6c39898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5634f6c39948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5634f6c398f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5634f6c39770 'union pthread_attr_t'
|     `-Record 0x5634f6c396e8 'pthread_attr_t'
|-RecordDecl 0x5634f6c399a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5634f6c39b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5634f6c39b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5634f6c39c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5634f6c39be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5634f6c39a20 'struct __pthread_internal_list'
|     `-Record 0x5634f6c399a0 '__pthread_internal_list'
|-RecordDecl 0x5634f6c39cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5634f6c39d58 parent 0x5634f6bc3e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5634f6c39e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5634f6c39e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5634f6c39f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5634f6c39f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5634f6c39fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5634f6c3a038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5634f6c3e110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5634f6c3e1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5634f6c3e2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5634f6c3e318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5634f6c3e4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5634f6c3e440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5634f6c39d30 'pthread_mutex_t'
|     `-Record 0x5634f6c39cb0 ''
|-RecordDecl 0x5634f6c3e510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5634f6c3e650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5634f6c3e6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5634f6c3e770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5634f6c3e710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5634f6c3e590 'pthread_mutexattr_t'
|     `-Record 0x5634f6c3e510 ''
|-RecordDecl 0x5634f6c3e7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5634f6c3e888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5634f6c3e950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5634f6c3e9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5634f6c3ea20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5634f6c3ea88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5634f6c3eaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5634f6c3eb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5634f6c3ebc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5634f6c3ec28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5634f6c3ece0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_3/mix052_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_3/mix052_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5634f6c3edd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5634f6c3ee38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5634f6c3ef70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5634f6c3ef10 'union pthread_cond_t' sugar
|   `-RecordType 0x5634f6c3e860 'pthread_cond_t'
|     `-Record 0x5634f6c3e7e0 ''
|-RecordDecl 0x5634f6c3efe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5634f6c40130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5634f6c40198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5634f6c40250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5634f6c401f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5634f6c3f060 'pthread_condattr_t'
|     `-Record 0x5634f6c3efe0 ''
|-TypedefDecl 0x5634f6c402d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5634f6bc3fb0 'unsigned int'
|-TypedefDecl 0x5634f6c40348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5634f6bc3f10 'int'
|-RecordDecl 0x5634f6c403a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5634f6c40448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5634f6c40510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5634f6c40578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5634f6c405e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5634f6c40648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5634f6c406b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5634f6c40718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5634f6c40780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5634f6c407e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5634f6c40850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5634f6c408b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5634f6c40920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5634f6c409d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_3/mix052_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_3/mix052_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5634f6c40a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5634f6c40ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5634f6c40c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5634f6c40bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5634f6c40420 'pthread_rwlock_t'
|     `-Record 0x5634f6c403a0 ''
|-RecordDecl 0x5634f6c40ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5634f6c40de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5634f6c40e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5634f6c40f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5634f6c40ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5634f6c40d20 'pthread_rwlockattr_t'
|     `-Record 0x5634f6c40ca0 ''
|-TypedefDecl 0x5634f6c40f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5634f6bc3f14 'volatile int' volatile
|   `-BuiltinType 0x5634f6bc3f10 'int'
|-RecordDecl 0x5634f6c40fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5634f6c42140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5634f6c421a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5634f6c42260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5634f6c42200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5634f6c41060 'pthread_barrier_t'
|     `-Record 0x5634f6c40fe0 ''
|-RecordDecl 0x5634f6c422d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5634f6c423d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5634f6c42438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5634f6c424f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5634f6c42490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5634f6c42350 'pthread_barrierattr_t'
|     `-Record 0x5634f6c422d0 ''
|-TypedefDecl 0x5634f6c42608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5634f6c425a0 'long [8]' 8 
|   `-BuiltinType 0x5634f6bc3f30 'long'
|-EnumDecl 0x5634f6c42660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5634f6c42728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5634f6c42778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5634f6c427c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5634f6c42898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5634f6c428e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5634f6c42938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5634f6c42988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5634f6c42a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5634f6c429f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5634f6c429d8 <col:26> 'int' EnumConstant 0x5634f6c42898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5634f6c42a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5634f6c42a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5634f6c42a60 <col:29> 'int' EnumConstant 0x5634f6c428e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5634f6c42b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5634f6c42b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5634f6c42ae8 <col:30> 'int' EnumConstant 0x5634f6c42938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5634f6c42ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5634f6c42b90 <col:27> 'int'
|     `-DeclRefExpr 0x5634f6c42b70 <col:27> 'int' EnumConstant 0x5634f6c42a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5634f6c42bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5634f6c42cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5634f6c42d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5634f6c42d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5634f6c42d18 <col:30> 'int' EnumConstant 0x5634f6c42cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5634f6c42da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5634f6c42e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5634f6c42e10 <col:29> 'int'
|     `-DeclRefExpr 0x5634f6c42df0 <col:29> 'int' EnumConstant 0x5634f6c42da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5634f6c42e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5634f6c42f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5634f6c42f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5634f6c42fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5634f6c43038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5634f6c43150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5634f6c431a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5634f6c431f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5634f6c43278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5634f6c43260 <col:31> 'int'
|     `-DeclRefExpr 0x5634f6c43240 <col:31> 'int' EnumConstant 0x5634f6c43150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5634f6c432c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5634f6c43398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5634f6c433e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5634f6c43438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5634f6c43508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5634f6c43558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5634f6c435a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5634f6c43678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5634f6c436c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5634f6c43718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5634f6c43958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5634f6c439c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5634f6c43a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5634f6c43b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5634f6c43b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5634f6c43c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5634f6c43cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5634f6c43d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5634f6c43dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5634f6c43e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5634f6c44488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5634f6c43f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5634f6c44030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634f6c44270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5634f6c442f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5634f6c44548 <col:47>
| |-NonNullAttr 0x5634f6c445a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5634f6c445d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5634f6c44700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5634f6c44630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5634f6c44958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5634f6c447b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5634f6c44838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5634f6c44b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5634f6c44a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5634f6c44bd0 <col:60>
|-FunctionDecl 0x5634f6c44d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5634f6c44dc0 <col:54>
| `-ConstAttr 0x5634f6c44e18 <col:95>
|-FunctionDecl 0x5634f6c44fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5634f6c44e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5634f6c44ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5634f6c45098 <line:394:19>
| `-ConstAttr 0x5634f6c450f0 <col:60>
|-FunctionDecl 0x5634f6c46b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5634f6c469d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5634f6c46bb0 <col:71>
| `-NonNullAttr 0x5634f6c46c08 <col:112, col:126> 1
|-FunctionDecl 0x5634f6c46d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5634f6c46c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5634f6c46db8 <line:397:22>
| `-NonNullAttr 0x5634f6c46e10 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c47038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5634f6c46e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5634f6c46ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5634f6c470e8 <line:400:22>
| `-NonNullAttr 0x5634f6c47140 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c47348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c47188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634f6c47208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5634f6c473f8 <line:403:22>
| `-NonNullAttr 0x5634f6c47450 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c476a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5634f6c47498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5634f6c47540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5634f6c47758 <line:406:22>
| `-NonNullAttr 0x5634f6c477b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c489e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5634f6c477f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634f6c47870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5634f6c48a98 <line:409:22>
| `-NonNullAttr 0x5634f6c48af0 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c48d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5634f6c48b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634f6c48bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5634f6c48dd8 <line:412:22>
| `-NonNullAttr 0x5634f6c48e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c49068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5634f6c48e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634f6c48f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5634f6c49118 <col:37>
| `-NonNullAttr 0x5634f6c49170 <col:78, col:95> 1 2
|-FunctionDecl 0x5634f6c49358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c491b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634f6c49238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5634f6c49408 <line:418:22>
| `-NonNullAttr 0x5634f6c49460 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c495e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c494a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634f6c49528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5634f6c49698 <line:420:22>
| `-NonNullAttr 0x5634f6c496f0 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c49898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c49738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634f6c497b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5634f6c49948 <line:423:22>
| `-NonNullAttr 0x5634f6c499c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c49b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c49a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634f6c49a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5634f6c49bf8 <line:426:22>
| `-NonNullAttr 0x5634f6c49c50 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c49df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c49c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634f6c49d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5634f6c49ea8 <line:429:22>
| `-NonNullAttr 0x5634f6c49f00 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c4a088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c49f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634f6c49fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5634f6c4a138 <line:431:22>
| `-NonNullAttr 0x5634f6c4a190 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c4a3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5634f6c4a1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634f6c4a258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5634f6c4a468 <line:434:22>
| |-NonNullAttr 0x5634f6c4a4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5634f6c4a4f8 <col:100> "" ""
|-FunctionDecl 0x5634f6c4a708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5634f6c4a548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634f6c4a5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5634f6c4a7b8 <line:437:22>
| |-NonNullAttr 0x5634f6c4a810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5634f6c4a848 <col:97> "" ""
|-FunctionDecl 0x5634f6c4aa48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5634f6c4a898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634f6c4a910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5634f6c4aaf8 <line:440:22>
| `-NonNullAttr 0x5634f6c4ab50 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c4acd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5634f6c4ab98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634f6c4ac10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5634f6c4ad80 <line:443:22>
| `-NonNullAttr 0x5634f6c4add8 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c4b0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5634f6c4ae28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5634f6c4aea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5634f6c4af20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5634f6c4b180 <line:447:22>
| `-NonNullAttr 0x5634f6c4b1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5634f6c4b488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5634f6c4b230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5634f6c4b2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5634f6c4b328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5634f6c4b540 <col:43>
| `-NonNullAttr 0x5634f6c4b598 <col:84, col:98> 1
|-FunctionDecl 0x5634f6c4b858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5634f6c4b5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5634f6c4b668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5634f6c4b6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5634f6c4b910 <line:452:22>
| `-NonNullAttr 0x5634f6c4b968 <col:63, col:77> 3
|-FunctionDecl 0x5634f6c4bc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5634f6c4b9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5634f6c4ba60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5634f6c4baf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5634f6c4bd30 <line:456:22>
| `-NonNullAttr 0x5634f6c4bd88 <col:63, col:80> 2 3
|-FunctionDecl 0x5634f6c4bf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5634f6c4bdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5634f6c4be58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5634f6c4c028 <line:458:22>
|-FunctionDecl 0x5634f6c4c3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5634f6c4c0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5634f6c4c290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5634f6c4c4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5634f6c4c650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5634f6c4c530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5634f6c4c5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5634f6c4c838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5634f6c4c718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5634f6c4c798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5634f6c4c9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5634f6c4c8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5634f6c4cb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5634f6c4cbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5634f6c4cc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5634f6c4cd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5634f6c4cdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5634f6c4cfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_3/mix052_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5634f6c4d098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5634f6c4d150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5634f6c4d0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5634f6c4cc50 '__pthread_unwind_buf_t'
| |   `-Record 0x5634f6c4cbd0 ''
| `-AlignedAttr 0x5634f6c4d1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5634f6c4d220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5634f6c4d380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5634f6c4d3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5634f6c4d450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5634f6c4d4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5634f6c4d6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5634f6c4d5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5634f6c4d808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5634f6c4d778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5634f6c4da00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5634f6c4d8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5634f6c4daa8 <line:487:22>
|-RecordDecl 0x5634f6c4db00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5634f6c4de18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5634f6c4dc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5634f6c4dcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5634f6c4dec8 <col:86>
| `-ReturnsTwiceAttr 0x5634f6c4df20 <col:12> Implicit
|-FunctionDecl 0x5634f6c4e248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5634f6c4dff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5634f6c4e100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5634f6c4e2f8 <line:493:22>
| `-NonNullAttr 0x5634f6c4e350 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c4e4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5634f6c4e398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5634f6c4e570 <line:495:22>
| `-NonNullAttr 0x5634f6c4e5c8 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c4e6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5634f6c4e618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5634f6c4e778 <line:497:22>
| `-NonNullAttr 0x5634f6c4e7d0 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c4e8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5634f6c4e818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5634f6c4e978 <line:499:22>
| `-NonNullAttr 0x5634f6c4e9d0 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c4fc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5634f6c4fa38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5634f6c4fac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5634f6c4fcd8 <col:36>
| `-NonNullAttr 0x5634f6c4fd30 <col:66, col:83> 1 2
|-FunctionDecl 0x5634f6c4fe30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5634f6c4fd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5634f6c4fed8 <line:504:22>
| `-NonNullAttr 0x5634f6c4ff30 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c501c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c4ffe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5634f6c50060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5634f6c50278 <line:508:22>
| `-NonNullAttr 0x5634f6c502d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c50598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c50318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5634f6c50398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5634f6c50418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5634f6c50650 <line:512:22>
| `-NonNullAttr 0x5634f6c506a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5634f6c507b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5634f6c506f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5634f6c50858 <line:514:22>
| `-NonNullAttr 0x5634f6c508b0 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c50ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5634f6c50960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5634f6c50b80 <line:516:22>
| `-NonNullAttr 0x5634f6c50bd8 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c50ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5634f6c50c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5634f6c50d88 <line:518:22>
| `-NonNullAttr 0x5634f6c50de0 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c51008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c50e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5634f6c50ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5634f6c510b8 <line:522:22>
| `-NonNullAttr 0x5634f6c51110 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c51318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c51158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634f6c511d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5634f6c513c8 <line:525:22>
| `-NonNullAttr 0x5634f6c51420 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c515c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c51468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5634f6c514e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5634f6c51678 <line:528:22>
| `-NonNullAttr 0x5634f6c516d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c51858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c51718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634f6c51798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5634f6c51908 <line:530:22>
| `-NonNullAttr 0x5634f6c51960 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c51b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c519a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5634f6c51a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5634f6c51bd0 <line:534:22>
| `-NonNullAttr 0x5634f6c51c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c51db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c51c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634f6c51cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5634f6c51e68 <line:537:22>
| `-NonNullAttr 0x5634f6c51ec0 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c52068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c51f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5634f6c51f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5634f6c52118 <line:541:22>
| `-NonNullAttr 0x5634f6c52170 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c522f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c521b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634f6c52238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5634f6c523a8 <line:544:22>
| `-NonNullAttr 0x5634f6c52400 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c525e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5634f6c52448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634f6c524c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5634f6c52698 <line:547:22>
| `-NonNullAttr 0x5634f6c526f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c52878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c52738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5634f6c527b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5634f6c52928 <line:550:22>
| `-NonNullAttr 0x5634f6c52980 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c53cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5634f6c53aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5634f6c53bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5634f6c53da8 <col:29>
| `-NonNullAttr 0x5634f6c53e00 <col:70, col:84> 1
|-FunctionDecl 0x5634f6c53f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634f6c53e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634f6c54020 <line:555:22>
| `-NonNullAttr 0x5634f6c54078 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c54180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634f6c540c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634f6c54228 <line:557:22>
| `-NonNullAttr 0x5634f6c54280 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c54380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634f6c542c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634f6c54428 <line:559:19>
| `-NonNullAttr 0x5634f6c54480 <col:49, col:63> 1
|-FunctionDecl 0x5634f6c546b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5634f6c544c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5634f6c54558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5634f6c54768 <col:39>
| `-NonNullAttr 0x5634f6c547c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5634f6c548c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634f6c54808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634f6c54968 <line:564:22>
| `-NonNullAttr 0x5634f6c549c0 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c54b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634f6c54a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634f6c54bd0 <line:566:22>
| `-NonNullAttr 0x5634f6c54c28 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c54de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5634f6c54c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5634f6c54d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5634f6c54e98 <col:39>
| `-NonNullAttr 0x5634f6c54ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5634f6c54ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5634f6c54f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5634f6c55098 <line:571:22>
| `-NonNullAttr 0x5634f6c550f0 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c552d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5634f6c551a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5634f6c55380 <line:573:22>
| `-NonNullAttr 0x5634f6c553d8 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c554e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5634f6c55428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5634f6c55588 <line:575:22>
| `-NonNullAttr 0x5634f6c555e0 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c55808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c55628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5634f6c556a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5634f6c558b8 <line:579:22>
| `-NonNullAttr 0x5634f6c55910 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c55b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c55958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5634f6c559d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5634f6c55be8 <line:582:22>
| `-NonNullAttr 0x5634f6c55c40 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c55de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c55c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5634f6c55d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5634f6c55e98 <line:586:22>
| `-NonNullAttr 0x5634f6c55ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c56078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c55f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5634f6c55fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5634f6c56128 <col:36>
| `-NonNullAttr 0x5634f6c56180 <col:77, col:91> 1
|-FunctionDecl 0x5634f6c564b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5634f6c56260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5634f6c56370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5634f6c56568 <line:591:22>
| `-NonNullAttr 0x5634f6c565c0 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c56738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5634f6c56608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5634f6c567e0 <line:593:22>
| `-NonNullAttr 0x5634f6c56838 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c56940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5634f6c56888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5634f6c569e8 <line:595:22>
| `-NonNullAttr 0x5634f6c56a40 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c56b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5634f6c56aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5634f6c56c00 <line:597:22>
| `-NonNullAttr 0x5634f6c56c58 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c56e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5634f6c56ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5634f6c56d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5634f6c56f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5634f6c57268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5634f6c56fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5634f6c57030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5634f6c570c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5634f6c57320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5634f6c57538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5634f6c57400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5634f6c575e0 <line:606:22>
| `-NonNullAttr 0x5634f6c57638 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c57740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5634f6c57688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5634f6c577e8 <line:608:22>
| `-NonNullAttr 0x5634f6c57840 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c57aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c57888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5634f6c57908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5634f6c57b50 <line:612:22>
| `-NonNullAttr 0x5634f6c57ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c57db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c57bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5634f6c57c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5634f6c57e68 <col:37>
| `-NonNullAttr 0x5634f6c57ec0 <col:78, col:92> 1
|-FunctionDecl 0x5634f6c580d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5634f6c57f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5634f6c57fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5634f6c58188 <line:618:22>
| `-NonNullAttr 0x5634f6c581e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c583a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5634f6c58228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5634f6c582a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5634f6c58458 <line:621:22>
| `-NonNullAttr 0x5634f6c584b0 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c58758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5634f6c58590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5634f6c58610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5634f6c58808 <line:623:22>
| `-NonNullAttr 0x5634f6c58860 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c589d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5634f6c588a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5634f6c58ab0 <line:625:22>
| `-NonNullAttr 0x5634f6c58b08 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c58c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5634f6c58b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5634f6c58cb8 <line:627:22>
| `-NonNullAttr 0x5634f6c58d10 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c58e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5634f6c58d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5634f6c58eb8 <line:629:22>
| `-NonNullAttr 0x5634f6c58f10 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c59010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5634f6c58f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5634f6c590b8 <line:631:22>
| `-NonNullAttr 0x5634f6c59110 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c594e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5634f6c591f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5634f6c59300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5634f6c59380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5634f6c595a0 <line:635:22>
| `-NonNullAttr 0x5634f6c595f8 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c59778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5634f6c59648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5634f6c59820 <line:637:22>
| `-NonNullAttr 0x5634f6c59878 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c59980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5634f6c598c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5634f6c59a28 <line:639:22>
| `-NonNullAttr 0x5634f6c59a80 <col:52, col:66> 1
|-FunctionDecl 0x5634f6c5ac88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5634f6c5ab50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5634f6c5ad30 <line:641:22>
| `-NonNullAttr 0x5634f6c5ad88 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c5ae90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5634f6c5add8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5634f6c5af38 <line:643:22>
| `-NonNullAttr 0x5634f6c5af90 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c5b1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5634f6c5afd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5634f6c5b058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5634f6c5b268 <line:647:22>
| `-NonNullAttr 0x5634f6c5b2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5634f6c5b4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5634f6c5b308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5634f6c5b388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5634f6c5b578 <line:650:22>
| `-NonNullAttr 0x5634f6c5b5d0 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c5b918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5634f6c5b6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5634f6c5b7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5634f6c5b9c8 <line:653:22>
| `-NonNullAttr 0x5634f6c5ba20 <col:63, col:77> 1
|-FunctionDecl 0x5634f6c5bb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5634f6c5ba68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5634f6c5bc30 <col:69>
|-FunctionDecl 0x5634f6c5bda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5634f6c5bc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5634f6c5be50 <col:72>
|-FunctionDecl 0x5634f6c5c088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5634f6c5beb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5634f6c5bf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5634f6c5c138 <col:44>
|-FunctionDecl 0x5634f6c5c358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5634f6c5c1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5634f6c5c218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5634f6c5c408 <line:660:22>
| `-NonNullAttr 0x5634f6c5c460 <col:63, col:77> 2
|-FunctionDecl 0x5634f6c5c8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5634f6c5c540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5634f6c5c650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5634f6c5c760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5634f6c5c960 <col:47>
|-FunctionDecl 0x5634f6c5caf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5634f6c5c9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5634f6c5cc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5634f6c5cbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5634f6c5cda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5634f6c5cd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5634f6c5ce68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5634f6c5cf28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5634f6c5cfe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5634f6c5d0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5634f6c5d120 prev 0x5634f6c5d0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5634f6c5d188 <col:24> 'int' 0
|-VarDecl 0x5634f6c5d1c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5634f6c5d240 prev 0x5634f6c5d1c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5634f6c5d2a8 <col:27> 'int' 0
|-VarDecl 0x5634f6c5d2e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5634f6c5d360 prev 0x5634f6c5d2e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5634f6c5d3c8 <col:27> 'int' 0
|-VarDecl 0x5634f6c5d3f8 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5634f6c5d470 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5634f6c5d4f0 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x5634f6c5d570 prev 0x5634f6c5d4f0 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5634f6c5d5d8 <col:9> 'int' 0
|-VarDecl 0x5634f6c5d610 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x5634f6c5d690 prev 0x5634f6c5d610 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5634f6c5d6f8 <col:9> 'int' 0
|-VarDecl 0x5634f6c5d730 <line:683:1, col:5> col:5 used z 'int'
|-VarDecl 0x5634f6c5d7b0 prev 0x5634f6c5d730 <line:684:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5634f6c5d818 <col:9> 'int' 0
|-VarDecl 0x5634f6c5d848 <line:685:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5634f6c5d8c8 <line:686:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5634f6c5d940 <line:687:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5634f6c5d9b8 <line:688:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5634f6c5da30 <line:689:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5634f6c5db00 <line:690:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5634f6c5db78 <line:691:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5634f6c5dbf0 <line:692:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5634f6c5dc68 <line:693:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5634f6c5dce0 <line:694:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5634f6c5dd58 <line:695:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5634f6c5ddd8 <line:696:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5634f6c5de58 <line:697:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5634f6c5ded0 <line:698:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5634f6c5df50 <line:699:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5634f6c5dfc8 <line:700:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5634f6c5e040 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5634f6c5e0b8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5634f6c5e1d0 prev 0x5634f6c5caf0 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5634f6c5e138 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5634f6c5f9f8 <line:704:1, line:731:1>
|   |-CallExpr 0x5634f6c5e2e8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5e2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5e278 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c5e360 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5634f6c5e308 <col:3> 'int' lvalue Var 0x5634f6c5df50 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5634f6c5e348 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634f6c5e328 <col:15> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5634f6c5e3c0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5634f6c5e380 <col:3> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5634f6c5e3a0 <col:15> 'int' 1
|   |-BinaryOperator 0x5634f6c5e438 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c5e3e0 <col:3> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c5e420 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634f6c5e400 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5634f6c5e4d0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c5e458 <col:3> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5634f6c5e4a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5634f6c5e478 <col:27> 'int' 1
|   |-CallExpr 0x5634f6c5e658 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5634f6c5e640 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5634f6c5e4f0 <col:3> 'void (int)' Function 0x5634f6c03bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5634f6c5e5f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5634f6c5e5d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5634f6c5e5b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5634f6c5e568 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5634f6c5e550 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5634f6c5e510 <col:23> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5634f6c5e598 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5634f6c5e580 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5634f6c5e530 <col:41> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5634f6c5e6d8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c5e680 <col:3> '_Bool' lvalue Var 0x5634f6c5db78 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c5e6c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634f6c5e6a0 <col:20> '_Bool' lvalue Var 0x5634f6c5d940 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5634f6c5e750 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c5e6f8 <col:3> '_Bool' lvalue Var 0x5634f6c5dbf0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c5e738 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634f6c5e718 <col:20> '_Bool' lvalue Var 0x5634f6c5d9b8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5634f6c5e7c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c5e770 <col:3> '_Bool' lvalue Var 0x5634f6c5dc68 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c5e7b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634f6c5e790 <col:20> '_Bool' lvalue Var 0x5634f6c5da30 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5634f6c5e840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c5e7e8 <col:3> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c5e828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634f6c5e808 <col:20> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5634f6c5e8d8 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c5e860 <col:3> '_Bool' lvalue Var 0x5634f6c5d9b8 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5634f6c5e8b0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5634f6c5e880 <col:27> 'int' 1
|   |-CallExpr 0x5634f6c5e930 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5e918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5e8f8 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634f6c5e988 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5e970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5e950 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c5e9e8 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5634f6c5e9a8 <col:3> 'int' lvalue Var 0x5634f6c5d570 'x' 'int'
|   | `-IntegerLiteral 0x5634f6c5e9c8 <col:7> 'int' 1
|   |-CallExpr 0x5634f6c5ea40 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5ea28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5ea08 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634f6c5ea98 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5ea80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5ea60 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c5ed98 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5634f6c5eab8 <col:3> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   | `-ConditionalOperator 0x5634f6c5ed68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5634f6c5eb90 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5634f6c5eb48 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5634f6c5eb30 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5634f6c5ead8 <col:7> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5634f6c5eb78 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5634f6c5eb60 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5634f6c5eb10 <col:25> '_Bool' lvalue Var 0x5634f6c5d9b8 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5634f6c5ed50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634f6c5ebb0 <col:42> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5634f6c5ed30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5634f6c5ed00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5634f6c5ec70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5634f6c5ec28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5634f6c5ec10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5634f6c5ebd0 <col:55> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5634f6c5ec58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5634f6c5ec40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5634f6c5ebf0 <col:73> '_Bool' lvalue Var 0x5634f6c5dbf0 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5634f6c5ecd0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5634f6c5ec90 <col:90> 'int' lvalue Var 0x5634f6c5df50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5634f6c5ece8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c5ecb0 <col:102> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   |-BinaryOperator 0x5634f6c5efa0 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c5edb8 <col:3> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c5ef88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c5ef58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5634f6c5ee78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5634f6c5ee30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5634f6c5ee18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5634f6c5edd8 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5634f6c5ee60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5634f6c5ee48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5634f6c5edf8 <col:38> '_Bool' lvalue Var 0x5634f6c5d9b8 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c5ef10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c5eec8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c5ee98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c5ef40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c5ef28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c5eef0 <col:66> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5634f6c5f288 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c5efc0 <col:3> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c5f270 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c5f240 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5634f6c5f160 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5634f6c5f080 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5634f6c5f038 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5634f6c5f020 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5634f6c5efe0 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5634f6c5f068 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5634f6c5f050 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5634f6c5f000 <col:38> '_Bool' lvalue Var 0x5634f6c5d9b8 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5634f6c5f140 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5634f6c5f0f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5634f6c5f0e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5634f6c5f0a0 <col:56> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5634f6c5f128 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5634f6c5f110 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5634f6c5f0c0 <col:74> '_Bool' lvalue Var 0x5634f6c5dbf0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c5f1f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c5f1b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c5f180 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c5f228 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c5f210 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c5f1d8 <col:102> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5634f6c5f490 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c5f2a8 <col:3> '_Bool' lvalue Var 0x5634f6c5d9b8 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c5f478 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c5f448 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5634f6c5f368 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5634f6c5f320 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5634f6c5f308 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5634f6c5f2c8 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5634f6c5f350 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5634f6c5f338 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5634f6c5f2e8 <col:38> '_Bool' lvalue Var 0x5634f6c5d9b8 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c5f400 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c5f3b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c5f388 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c5f430 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c5f418 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c5f3e0 <col:66> '_Bool' lvalue Var 0x5634f6c5d9b8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5634f6c5f778 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c5f4b0 <col:3> '_Bool' lvalue Var 0x5634f6c5dbf0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c5f760 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c5f730 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5634f6c5f650 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5634f6c5f570 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5634f6c5f528 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5634f6c5f510 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5634f6c5f4d0 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5634f6c5f558 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5634f6c5f540 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5634f6c5f4f0 <col:38> '_Bool' lvalue Var 0x5634f6c5d9b8 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5634f6c5f630 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5634f6c5f5e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5634f6c5f5d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5634f6c5f590 <col:56> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5634f6c5f618 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5634f6c5f600 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5634f6c5f5b0 <col:74> '_Bool' lvalue Var 0x5634f6c5dbf0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c5f6e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c5f6a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c5f670 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c5f718 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c5f700 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c5f6c8 <col:102> '_Bool' lvalue Var 0x5634f6c5dbf0 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5634f6c5f7d0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5f7b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5f798 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634f6c5f828 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5f810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5f7f0 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c5f8e0 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5634f6c5f848 <col:3> 'int' lvalue Var 0x5634f6c5d120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5634f6c5f8c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5634f6c5f8a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634f6c5f868 <col:22> 'int' lvalue Var 0x5634f6c5d120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5634f6c5f888 <col:41> 'int' 1
|   |-CallExpr 0x5634f6c5f938 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5f920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5f900 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5634f6c5f9e8 <line:730:3, col:36>
|     `-CallExpr 0x5634f6c5f9c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5634f6c5f9b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5634f6c5f958 <col:10> 'void *(void)' Function 0x5634f6c03958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5634f6c5fbb8 prev 0x5634f6c5cc48 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5634f6c5fb20 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5634f6c60df0 <line:733:1, line:751:1>
|   |-CallExpr 0x5634f6c5fc98 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5fc80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5fc60 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c5fcf8 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5634f6c5fcb8 <col:3> 'int' lvalue Var 0x5634f6c5d570 'x' 'int'
|   | `-IntegerLiteral 0x5634f6c5fcd8 <col:7> 'int' 2
|   |-CallExpr 0x5634f6c5fd50 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5fd38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5fd18 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634f6c5fda8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5fd90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5fd70 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c5fe20 <line:738:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5634f6c5fdc8 <col:3> 'int' lvalue Var 0x5634f6c5d240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5634f6c5fe08 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634f6c5fde8 <col:25> 'int' lvalue Var 0x5634f6c5d690 'y' 'int'
|   |-CallExpr 0x5634f6c5fe78 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5fe60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5fe40 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634f6c5fed0 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c5feb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c5fe98 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c601b8 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5634f6c5fef0 <col:3> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   | `-ConditionalOperator 0x5634f6c60188 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5634f6c5ffb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5634f6c5ff68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5634f6c5ff50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5634f6c5ff10 <col:7> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5634f6c5ff98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5634f6c5ff80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5634f6c5ff30 <col:25> '_Bool' lvalue Var 0x5634f6c5da30 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5634f6c60170 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634f6c5ffd0 <col:42> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5634f6c60150 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5634f6c60120 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5634f6c60090 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5634f6c60048 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5634f6c60030 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5634f6c5fff0 <col:55> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5634f6c60078 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5634f6c60060 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5634f6c60010 <col:73> '_Bool' lvalue Var 0x5634f6c5dc68 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5634f6c600f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5634f6c600b0 <col:90> 'int' lvalue Var 0x5634f6c5df50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5634f6c60108 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c600d0 <col:102> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   |-BinaryOperator 0x5634f6c603c0 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c601d8 <col:3> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c603a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c60378 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5634f6c60298 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5634f6c60250 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5634f6c60238 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5634f6c601f8 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5634f6c60280 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5634f6c60268 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5634f6c60218 <col:38> '_Bool' lvalue Var 0x5634f6c5da30 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c60330 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c602e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c602b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c60360 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c60348 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c60310 <col:66> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5634f6c606a8 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c603e0 <col:3> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c60690 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c60660 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5634f6c60580 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5634f6c604a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5634f6c60458 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5634f6c60440 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5634f6c60400 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5634f6c60488 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5634f6c60470 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5634f6c60420 <col:38> '_Bool' lvalue Var 0x5634f6c5da30 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5634f6c60560 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5634f6c60518 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5634f6c60500 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5634f6c604c0 <col:56> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5634f6c60548 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5634f6c60530 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5634f6c604e0 <col:74> '_Bool' lvalue Var 0x5634f6c5dc68 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c60618 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c605d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c605a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c60648 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c60630 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c605f8 <col:102> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5634f6c608b0 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c606c8 <col:3> '_Bool' lvalue Var 0x5634f6c5da30 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c60898 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c60868 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5634f6c60788 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5634f6c60740 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5634f6c60728 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5634f6c606e8 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5634f6c60770 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5634f6c60758 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5634f6c60708 <col:38> '_Bool' lvalue Var 0x5634f6c5da30 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c60820 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c607d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c607a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c60850 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c60838 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c60800 <col:66> '_Bool' lvalue Var 0x5634f6c5da30 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5634f6c60ba8 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c608d0 <col:3> '_Bool' lvalue Var 0x5634f6c5dc68 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c60b90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c60b60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5634f6c60a70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5634f6c60990 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5634f6c60948 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5634f6c60930 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5634f6c608f0 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5634f6c60978 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5634f6c60960 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5634f6c60910 <col:38> '_Bool' lvalue Var 0x5634f6c5da30 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5634f6c60a50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5634f6c60a08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5634f6c609f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5634f6c609b0 <col:56> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5634f6c60a38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5634f6c60a20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5634f6c609d0 <col:74> '_Bool' lvalue Var 0x5634f6c5dc68 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c60b08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c60ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c60a90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c60b48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c60b30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c60ae8 <col:102> '_Bool' lvalue Var 0x5634f6c5dc68 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5634f6c60c00 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c60be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c60bc8 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634f6c60c58 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c60c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c60c20 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c60d10 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5634f6c60c78 <col:3> 'int' lvalue Var 0x5634f6c5d120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5634f6c60cf0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5634f6c60cd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634f6c60c98 <col:22> 'int' lvalue Var 0x5634f6c5d120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5634f6c60cb8 <col:41> 'int' 1
|   |-CallExpr 0x5634f6c60d68 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c60d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c60d30 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5634f6c60de0 <line:750:3, col:36>
|     `-CallExpr 0x5634f6c60dc0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5634f6c60da8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5634f6c60d88 <col:10> 'void *(void)' Function 0x5634f6c03958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5634f6c60f38 prev 0x5634f6c5cda0 <line:752:1, line:784:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5634f6c60ea0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5634f6c64b70 <line:753:1, line:784:1>
|   |-CallExpr 0x5634f6c61018 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c61000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c60fe0 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c61078 <line:755:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5634f6c61038 <col:3> 'int' lvalue Var 0x5634f6c5d690 'y' 'int'
|   | `-IntegerLiteral 0x5634f6c61058 <col:7> 'int' 1
|   |-CallExpr 0x5634f6c610d0 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c610b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c61098 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634f6c61128 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c61110 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c610f0 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c611d8 <line:758:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c61148 <col:3> '_Bool' lvalue Var 0x5634f6c5e040 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c611c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5634f6c611a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5634f6c61188 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5634f6c61168 <col:19> 'void *(void)' Function 0x5634f6c03958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5634f6c61288 <line:759:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c611f8 <col:3> '_Bool' lvalue Var 0x5634f6c5e0b8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c61270 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5634f6c61250 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5634f6c61238 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5634f6c61218 <col:19> 'void *(void)' Function 0x5634f6c03958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5634f6c61300 <line:760:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c612a8 <col:3> '_Bool' lvalue Var 0x5634f6c5d848 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c612e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634f6c612c8 <col:21> '_Bool' lvalue Var 0x5634f6c5e0b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5634f6c61378 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5634f6c61320 <col:3> 'int' lvalue Var 0x5634f6c5d8c8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5634f6c61360 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634f6c61340 <col:15> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   |-BinaryOperator 0x5634f6c617b0 <line:762:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5634f6c61398 <col:3> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   | `-ConditionalOperator 0x5634f6c61780 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5634f6c615a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5634f6c614c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5634f6c613f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5634f6c613d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5634f6c613b8 <col:8> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5634f6c614a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5634f6c61440 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5634f6c61428 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5634f6c61408 <col:27> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5634f6c61490 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5634f6c61478 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5634f6c61458 <col:46> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5634f6c61588 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5634f6c61520 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5634f6c61508 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5634f6c614e8 <col:65> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5634f6c61570 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5634f6c61558 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5634f6c61538 <col:84> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5634f6c61768 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634f6c615c8 <col:101> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   |   `-ParenExpr 0x5634f6c61748 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5634f6c61718 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5634f6c61688 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5634f6c61640 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5634f6c61628 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5634f6c615e8 <col:106> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5634f6c61670 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5634f6c61658 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5634f6c61608 <col:124> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5634f6c616e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5634f6c616a8 <col:141> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5634f6c61700 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c616c8 <col:153> 'int' lvalue Var 0x5634f6c5df50 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5634f6c61ce0 <line:763:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5634f6c617d0 <col:3> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5634f6c61cb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5634f6c61c80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5634f6c61c68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5634f6c617f0 <col:15> '_Bool' lvalue Var 0x5634f6c5e0b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5634f6c61c98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634f6c61810 <col:31> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5634f6c61c48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5634f6c61c18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5634f6c61a20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5634f6c61940 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5634f6c61868 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5634f6c61850 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5634f6c61830 <col:45> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5634f6c61920 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5634f6c618b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5634f6c618a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5634f6c61880 <col:64> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5634f6c61908 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5634f6c618f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5634f6c618d0 <col:83> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5634f6c61a00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5634f6c61998 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5634f6c61980 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5634f6c61960 <col:102> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5634f6c619e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5634f6c619d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5634f6c619b0 <col:121> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5634f6c61c00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5634f6c61a40 <col:138> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5634f6c61be0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5634f6c61bb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5634f6c61b00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5634f6c61ab8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5634f6c61aa0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5634f6c61a60 <col:151> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5634f6c61ae8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5634f6c61ad0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5634f6c61a80 <col:169> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5634f6c61b80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5634f6c61b40 <col:186> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5634f6c61b98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5634f6c61b60 <col:198> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5634f6c621f0 <line:764:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5634f6c61d00 <col:3> 'int' lvalue Var 0x5634f6c5df50 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5634f6c621c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5634f6c62190 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5634f6c62178 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5634f6c61d20 <col:15> '_Bool' lvalue Var 0x5634f6c5e0b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5634f6c621a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634f6c61d40 <col:31> 'int' lvalue Var 0x5634f6c5df50 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5634f6c62158 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5634f6c62128 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5634f6c61f50 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5634f6c61e70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5634f6c61d98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5634f6c61d80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5634f6c61d60 <col:45> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5634f6c61e50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5634f6c61de8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5634f6c61dd0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5634f6c61db0 <col:64> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5634f6c61e38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5634f6c61e20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5634f6c61e00 <col:83> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5634f6c61f30 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5634f6c61ec8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5634f6c61eb0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5634f6c61e90 <col:102> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5634f6c61f18 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5634f6c61f00 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5634f6c61ee0 <col:121> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5634f6c62110 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5634f6c61f70 <col:138> 'int' lvalue Var 0x5634f6c5df50 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5634f6c620f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5634f6c620c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5634f6c62030 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5634f6c61fe8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5634f6c61fd0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5634f6c61f90 <col:151> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5634f6c62018 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5634f6c62000 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5634f6c61fb0 <col:169> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5634f6c62090 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5634f6c62050 <col:186> 'int' lvalue Var 0x5634f6c5df50 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5634f6c620a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5634f6c62070 <col:198> 'int' lvalue Var 0x5634f6c5df50 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5634f6c62798 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c62210 <col:3> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c62780 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c62750 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5634f6c62708 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5634f6c626f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5634f6c62230 <col:20> '_Bool' lvalue Var 0x5634f6c5e0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c62738 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5634f6c62720 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5634f6c62250 <col:36> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5634f6c626d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5634f6c626a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5634f6c62460 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5634f6c62380 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5634f6c622a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5634f6c62290 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5634f6c62270 <col:55> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5634f6c62360 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5634f6c622f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5634f6c622e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5634f6c622c0 <col:74> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5634f6c62348 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5634f6c62330 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5634f6c62310 <col:93> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5634f6c62440 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5634f6c623d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5634f6c623c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5634f6c623a0 <col:112> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5634f6c62428 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5634f6c62410 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5634f6c623f0 <col:131> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5634f6c62688 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5634f6c62670 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5634f6c62480 <col:148> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5634f6c62650 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5634f6c62620 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5634f6c62540 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5634f6c624f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5634f6c624e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5634f6c624a0 <col:166> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5634f6c62528 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5634f6c62510 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5634f6c624c0 <col:184> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5634f6c625d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5634f6c62590 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5634f6c62560 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5634f6c62608 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5634f6c625f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5634f6c625b8 <col:212> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5634f6c62d78 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c627b8 <col:3> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c62d60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c62d30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5634f6c62ce8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5634f6c62cd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5634f6c627d8 <col:20> '_Bool' lvalue Var 0x5634f6c5e0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c62d18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5634f6c62d00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5634f6c627f8 <col:36> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5634f6c62cb0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5634f6c62c80 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5634f6c62a08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5634f6c62928 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5634f6c62850 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5634f6c62838 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5634f6c62818 <col:55> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5634f6c62908 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5634f6c628a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5634f6c62888 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5634f6c62868 <col:74> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5634f6c628f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5634f6c628d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5634f6c628b8 <col:93> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5634f6c629e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5634f6c62980 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5634f6c62968 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5634f6c62948 <col:112> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5634f6c629d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5634f6c629b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5634f6c62998 <col:131> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5634f6c62c68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5634f6c62c50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5634f6c62a28 <col:148> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5634f6c62c30 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5634f6c62c00 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5634f6c62ae8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5634f6c62aa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5634f6c62a88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5634f6c62a48 <col:166> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5634f6c62ad0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5634f6c62ab8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5634f6c62a68 <col:184> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5634f6c62bd0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5634f6c62b50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5634f6c62b08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5634f6c62be8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5634f6c62ba8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5634f6c62b78 <col:219> 'int' 0
|   |-BinaryOperator 0x5634f6c63320 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c62d98 <col:3> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c63308 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c632d8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5634f6c63290 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5634f6c63278 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5634f6c62db8 <col:20> '_Bool' lvalue Var 0x5634f6c5e0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c632c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5634f6c632a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5634f6c62dd8 <col:36> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5634f6c63258 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5634f6c63228 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5634f6c62fe8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5634f6c62f08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5634f6c62e30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5634f6c62e18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5634f6c62df8 <col:55> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5634f6c62ee8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5634f6c62e80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5634f6c62e68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5634f6c62e48 <col:74> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5634f6c62ed0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5634f6c62eb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5634f6c62e98 <col:93> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5634f6c62fc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5634f6c62f60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5634f6c62f48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5634f6c62f28 <col:112> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5634f6c62fb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5634f6c62f98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5634f6c62f78 <col:131> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5634f6c63210 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5634f6c631f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5634f6c63008 <col:148> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5634f6c631d8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5634f6c631a8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5634f6c630c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5634f6c63080 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5634f6c63068 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5634f6c63028 <col:166> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5634f6c630b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5634f6c63098 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5634f6c63048 <col:184> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5634f6c63160 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5634f6c63118 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5634f6c630e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5634f6c63190 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5634f6c63178 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5634f6c63140 <col:212> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5634f6c638e8 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c63340 <col:3> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c638d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c638a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5634f6c63858 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5634f6c63840 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5634f6c63360 <col:20> '_Bool' lvalue Var 0x5634f6c5e0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c63888 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5634f6c63870 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5634f6c63380 <col:36> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5634f6c63820 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5634f6c637f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5634f6c63590 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5634f6c634b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5634f6c633d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5634f6c633c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5634f6c633a0 <col:55> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5634f6c63490 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5634f6c63428 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5634f6c63410 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5634f6c633f0 <col:74> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5634f6c63478 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5634f6c63460 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5634f6c63440 <col:93> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5634f6c63570 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5634f6c63508 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5634f6c634f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5634f6c634d0 <col:112> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5634f6c63558 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5634f6c63540 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5634f6c63520 <col:131> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5634f6c637d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5634f6c637c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5634f6c635b0 <col:148> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5634f6c637a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5634f6c63770 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5634f6c63670 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5634f6c63628 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5634f6c63610 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5634f6c635d0 <col:166> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5634f6c63658 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5634f6c63640 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5634f6c635f0 <col:184> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5634f6c63740 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5634f6c636c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5634f6c63690 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5634f6c63758 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5634f6c63718 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5634f6c636e8 <col:219> 'int' 0
|   |-BinaryOperator 0x5634f6c63960 <line:769:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5634f6c63908 <col:3> 'int' lvalue Var 0x5634f6c5d360 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5634f6c63948 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5634f6c63928 <col:25> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   |-BinaryOperator 0x5634f6c63a90 <line:770:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5634f6c63980 <col:3> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   | `-ConditionalOperator 0x5634f6c63a60 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5634f6c63a18 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5634f6c63a00 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5634f6c639a0 <col:7> '_Bool' lvalue Var 0x5634f6c5d848 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5634f6c63a30 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634f6c639c0 <col:25> 'int' lvalue Var 0x5634f6c5d8c8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5634f6c63a48 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5634f6c639e0 <col:37> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   |-BinaryOperator 0x5634f6c63b28 <line:771:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c63ab0 <col:3> '_Bool' lvalue Var 0x5634f6c5d848 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5634f6c63b00 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5634f6c63ad0 <col:28> 'int' 0
|   |-CallExpr 0x5634f6c63b98 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c63b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c63b60 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634f6c63bf0 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c63bd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c63bb8 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c63ed8 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5634f6c63c10 <col:3> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   | `-ConditionalOperator 0x5634f6c63ea8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5634f6c63cd0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5634f6c63c88 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5634f6c63c70 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5634f6c63c30 <col:7> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5634f6c63cb8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5634f6c63ca0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5634f6c63c50 <col:25> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5634f6c63e90 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634f6c63cf0 <col:42> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5634f6c63e70 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5634f6c63e40 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5634f6c63db0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5634f6c63d68 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5634f6c63d50 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5634f6c63d10 <col:55> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5634f6c63d98 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5634f6c63d80 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5634f6c63d30 <col:73> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5634f6c63e10 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5634f6c63dd0 <col:90> 'int' lvalue Var 0x5634f6c5df50 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5634f6c63e28 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c63df0 <col:102> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
|   |-BinaryOperator 0x5634f6c640e0 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c63ef8 <col:3> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c640c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c64098 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5634f6c63fb8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5634f6c63f70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5634f6c63f58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5634f6c63f18 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5634f6c63fa0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5634f6c63f88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5634f6c63f38 <col:38> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c64050 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c64008 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c63fd8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c64080 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c64068 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c64030 <col:66> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5634f6c643c8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c64100 <col:3> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c643b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c64380 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5634f6c642a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5634f6c641c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5634f6c64178 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5634f6c64160 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5634f6c64120 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5634f6c641a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5634f6c64190 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5634f6c64140 <col:38> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5634f6c64280 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5634f6c64238 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5634f6c64220 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5634f6c641e0 <col:56> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5634f6c64268 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5634f6c64250 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5634f6c64200 <col:74> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c64338 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c642f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c642c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c64368 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c64350 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c64318 <col:102> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5634f6c645d0 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c643e8 <col:3> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c645b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c64588 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5634f6c644a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5634f6c64460 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5634f6c64448 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5634f6c64408 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5634f6c64490 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5634f6c64478 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5634f6c64428 <col:38> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c64540 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c644f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c644c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c64570 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c64558 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c64520 <col:66> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5634f6c648b8 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5634f6c645f0 <col:3> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5634f6c648a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5634f6c64870 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5634f6c64790 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5634f6c646b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5634f6c64668 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5634f6c64650 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5634f6c64610 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5634f6c64698 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5634f6c64680 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5634f6c64630 <col:38> '_Bool' lvalue Var 0x5634f6c5db00 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5634f6c64770 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5634f6c64728 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5634f6c64710 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5634f6c646d0 <col:56> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5634f6c64758 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5634f6c64740 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5634f6c646f0 <col:74> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5634f6c64828 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5634f6c647e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5634f6c647b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5634f6c64858 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5634f6c64840 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5634f6c64808 <col:102> '_Bool' lvalue Var 0x5634f6c5dce0 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5634f6c64910 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c648f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c648d8 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5634f6c64968 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5634f6c64950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c64930 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5634f6c64a20 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5634f6c64988 <col:3> 'int' lvalue Var 0x5634f6c5d120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5634f6c64a00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5634f6c649e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5634f6c649a8 <col:22> 'int' lvalue Var 0x5634f6c5d120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5634f6c649c8 <col:41> 'int' 1
|   |-CallExpr 0x5634f6c64a78 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5634f6c64a60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5634f6c64a40 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5634f6c64af0 <line:783:3, col:36>
|     `-CallExpr 0x5634f6c64ad0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5634f6c64ab8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5634f6c64a98 <col:10> 'void *(void)' Function 0x5634f6c03958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5634f6c64c90 prev 0x5634f6c5ce68 <line:785:1, line:787:1> line:785:6 fence 'void ()'
| `-CompoundStmt 0x5634f6c64d30 <line:786:1, line:787:1>
|-FunctionDecl 0x5634f6c64d60 prev 0x5634f6c5cf28 <line:788:1, line:790:1> line:788:6 isync 'void ()'
| `-CompoundStmt 0x5634f6c64e00 <line:789:1, line:790:1>
|-FunctionDecl 0x5634f6c64e30 prev 0x5634f6c5cfe8 <line:791:1, line:793:1> line:791:6 lwfence 'void ()'
| `-CompoundStmt 0x5634f6c64ed0 <line:792:1, line:793:1>
`-FunctionDecl 0x5634f6c64f38 <line:794:1, line:818:1> line:794:5 main 'int ()'
  `-CompoundStmt 0x5634f6c66b90 <line:795:1, line:818:1>
    |-DeclStmt 0x5634f6c65050 <line:796:3, col:18>
    | `-VarDecl 0x5634f6c64fe8 <col:3, col:13> col:13 used t1390 'pthread_t':'unsigned long'
    |-CallExpr 0x5634f6c65258 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5634f6c65240 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634f6c65068 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5634f6c44488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5634f6c650a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5634f6c65088 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5634f6c64fe8 't1390' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5634f6c65298 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5634f6c65120 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5634f6c650f8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5634f6c650c0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5634f6c652b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634f6c65140 <col:39> 'void *(void *)' Function 0x5634f6c5e1d0 'P0' 'void *(void *)'
    | `-ParenExpr 0x5634f6c651c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5634f6c65198 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5634f6c65160 <col:52> 'int' 0
    |-DeclStmt 0x5634f6c65340 <line:798:3, col:18>
    | `-VarDecl 0x5634f6c652d8 <col:3, col:13> col:13 used t1391 'pthread_t':'unsigned long'
    |-CallExpr 0x5634f6c654e8 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5634f6c654d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634f6c65358 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5634f6c44488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5634f6c65398 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5634f6c65378 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5634f6c652d8 't1391' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5634f6c65528 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5634f6c65410 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5634f6c653e8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5634f6c653b0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5634f6c65540 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634f6c65430 <col:39> 'void *(void *)' Function 0x5634f6c5fbb8 'P1' 'void *(void *)'
    | `-ParenExpr 0x5634f6c654b0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5634f6c65488 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5634f6c65450 <col:52> 'int' 0
    |-DeclStmt 0x5634f6c655d0 <line:800:3, col:18>
    | `-VarDecl 0x5634f6c65568 <col:3, col:13> col:13 used t1392 'pthread_t':'unsigned long'
    |-CallExpr 0x5634f6c65778 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5634f6c65760 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634f6c655e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5634f6c44488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5634f6c65628 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5634f6c65608 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5634f6c65568 't1392' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5634f6c657b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5634f6c656a0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5634f6c65678 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5634f6c65640 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5634f6c657d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634f6c656c0 <col:39> 'void *(void *)' Function 0x5634f6c60f38 'P2' 'void *(void *)'
    | `-ParenExpr 0x5634f6c65740 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5634f6c65718 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5634f6c656e0 <col:52> 'int' 0
    |-CallExpr 0x5634f6c65820 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5634f6c65808 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634f6c657e8 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5634f6c658f0 <line:803:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5634f6c65840 <col:3> '_Bool' lvalue Var 0x5634f6c5d3f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5634f6c658d8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5634f6c658b8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5634f6c658a0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5634f6c65860 <col:21> 'int' lvalue Var 0x5634f6c5d120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5634f6c65880 <col:41> 'int' 3
    |-CallExpr 0x5634f6c65948 <line:804:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5634f6c65930 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634f6c65910 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5634f6c659c0 <line:805:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5634f6c659a8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634f6c65968 <col:3> 'void (int)' Function 0x5634f6c03790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5634f6c65a00 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5634f6c659e8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5634f6c65988 <col:21> '_Bool' lvalue Var 0x5634f6c5d3f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5634f6c65a50 <line:806:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5634f6c65a38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634f6c65a18 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5634f6c65d48 <line:807:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5634f6c65a70 <col:3> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
    | `-ConditionalOperator 0x5634f6c65d18 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5634f6c65b30 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5634f6c65ae8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5634f6c65ad0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5634f6c65a90 <col:7> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5634f6c65b18 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5634f6c65b00 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5634f6c65ab0 <col:25> '_Bool' lvalue Var 0x5634f6c5d940 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5634f6c65d00 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5634f6c65b50 <col:42> 'int' lvalue Var 0x5634f6c5de58 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5634f6c65ce0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5634f6c65cb0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5634f6c65c20 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5634f6c65bd8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5634f6c65bc0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5634f6c65b80 <col:55> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5634f6c65c08 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5634f6c65bf0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5634f6c65ba0 <col:73> '_Bool' lvalue Var 0x5634f6c5db78 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5634f6c65c80 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5634f6c65c40 <col:90> 'int' lvalue Var 0x5634f6c5df50 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5634f6c65c98 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5634f6c65c60 <col:102> 'int' lvalue Var 0x5634f6c5d7b0 'z' 'int'
    |-BinaryOperator 0x5634f6c65f50 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5634f6c65d68 <col:3> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5634f6c65f38 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634f6c65f08 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5634f6c65e28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5634f6c65de0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5634f6c65dc8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5634f6c65d88 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5634f6c65e10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5634f6c65df8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5634f6c65da8 <col:38> '_Bool' lvalue Var 0x5634f6c5d940 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5634f6c65ec0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5634f6c65e78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5634f6c65e48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5634f6c65ef0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5634f6c65ed8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5634f6c65ea0 <col:66> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5634f6c66238 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5634f6c65f70 <col:3> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5634f6c66220 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634f6c661f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5634f6c66110 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5634f6c66030 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5634f6c65fe8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5634f6c65fd0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5634f6c65f90 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5634f6c66018 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5634f6c66000 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5634f6c65fb0 <col:38> '_Bool' lvalue Var 0x5634f6c5d940 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5634f6c660f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5634f6c660a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5634f6c66090 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5634f6c66050 <col:56> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5634f6c660d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5634f6c660c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5634f6c66070 <col:74> '_Bool' lvalue Var 0x5634f6c5db78 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5634f6c661a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5634f6c66160 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5634f6c66130 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5634f6c661d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5634f6c661c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5634f6c66188 <col:102> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5634f6c66440 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5634f6c66258 <col:3> '_Bool' lvalue Var 0x5634f6c5d940 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5634f6c66428 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634f6c663f8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5634f6c66318 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5634f6c662d0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5634f6c662b8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5634f6c66278 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5634f6c66300 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5634f6c662e8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5634f6c66298 <col:38> '_Bool' lvalue Var 0x5634f6c5d940 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5634f6c663b0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5634f6c66368 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5634f6c66338 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5634f6c663e0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5634f6c663c8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5634f6c66390 <col:66> '_Bool' lvalue Var 0x5634f6c5d940 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5634f6c66728 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5634f6c66460 <col:3> '_Bool' lvalue Var 0x5634f6c5db78 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5634f6c66710 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5634f6c666e0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5634f6c66600 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5634f6c66520 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5634f6c664d8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5634f6c664c0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5634f6c66480 <col:20> '_Bool' lvalue Var 0x5634f6c5ded0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5634f6c66508 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5634f6c664f0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5634f6c664a0 <col:38> '_Bool' lvalue Var 0x5634f6c5d940 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5634f6c665e0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5634f6c66598 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5634f6c66580 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5634f6c66540 <col:56> '_Bool' lvalue Var 0x5634f6c5dfc8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5634f6c665c8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5634f6c665b0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5634f6c66560 <col:74> '_Bool' lvalue Var 0x5634f6c5db78 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5634f6c66698 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5634f6c66650 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5634f6c66620 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5634f6c666c8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5634f6c666b0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5634f6c66678 <col:102> '_Bool' lvalue Var 0x5634f6c5db78 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5634f6c66780 <line:812:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5634f6c66768 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634f6c66748 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5634f6c667d8 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5634f6c667c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634f6c667a0 <col:3> 'void ()' Function 0x5634f6c03e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5634f6c66a10 <line:814:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x5634f6c667f8 <col:3> '_Bool' lvalue Var 0x5634f6c5d470 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5634f6c669f8 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5634f6c669e0 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5634f6c669c0 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x5634f6c669a0 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x5634f6c66908 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x5634f6c66870 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5634f6c66858 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5634f6c66818 <col:23> 'int' lvalue Var 0x5634f6c5d570 'x' 'int'
    |         | | `-IntegerLiteral 0x5634f6c66838 <col:28> 'int' 2
    |         | `-BinaryOperator 0x5634f6c668e8 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5634f6c668d0 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5634f6c66890 <col:33> 'int' lvalue Var 0x5634f6c5d240 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5634f6c668b0 <col:56> 'int' 0
    |         `-BinaryOperator 0x5634f6c66980 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x5634f6c66968 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5634f6c66928 <col:61> 'int' lvalue Var 0x5634f6c5d360 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5634f6c66948 <col:84> 'int' 0
    |-CallExpr 0x5634f6c66a68 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5634f6c66a50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5634f6c66a30 <col:3> 'void ()' Function 0x5634f6c03f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5634f6c66ae0 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5634f6c66ac8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5634f6c66a88 <col:3> 'void (int)' Function 0x5634f6c03bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5634f6c66b20 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5634f6c66b08 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5634f6c66aa8 <col:21> '_Bool' lvalue Var 0x5634f6c5d470 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5634f6c66b58 <line:817:3, col:10>
      `-IntegerLiteral 0x5634f6c66b38 <col:10> 'int' 0
