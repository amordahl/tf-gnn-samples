TranslationUnitDecl 0x55d4bae64e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55d4bae656d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55d4bae653b0 '__int128'
|-TypedefDecl 0x55d4bae65748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55d4bae653d0 'unsigned __int128'
|-TypedefDecl 0x55d4bae65a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55d4bae65820 'struct __NSConstantString_tag'
|   `-Record 0x55d4bae657a0 '__NSConstantString_tag'
|-TypedefDecl 0x55d4bae65af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55d4bae65ab0 'char *'
|   `-BuiltinType 0x55d4bae64eb0 'char'
|-TypedefDecl 0x55d4baea4650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55d4bae65d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55d4bae65bd0 'struct __va_list_tag'
|     `-Record 0x55d4bae65b50 '__va_list_tag'
|-FunctionDecl 0x55d4baea4790 <./split_3/mix018_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55d4baea46c0 <col:31> col:34 'int'
|-FunctionDecl 0x55d4baea4958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55d4baea4a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55d4baea4bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55d4baea4b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55d4baea4df8 <col:40, col:99>
|   |-IfStmt 0x55d4baea4dc8 <col:42, col:88>
|   | |-UnaryOperator 0x55d4baea4ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55d4baea4c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55d4baea4c70 <col:47> 'int' lvalue ParmVar 0x55d4baea4b38 'expression' 'int'
|   | `-CompoundStmt 0x55d4baea4db0 <col:59, col:88>
|   |   `-LabelStmt 0x55d4baea4d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55d4baea4d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55d4baea4d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55d4baea4cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55d4baea4a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55d4baea4de0 <col:89>
|   `-ReturnStmt 0x55d4baea4de8 <col:91>
|-FunctionDecl 0x55d4baea4e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55d4baea4f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55d4baea5280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d4baea4fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55d4baea5038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55d4baea50b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55d4baea5138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55d4baea5340 <line:10:22>
|-FunctionDecl 0x55d4baecb390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d4baea53b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55d4baea5430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55d4baea54b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55d4baea5530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55d4baecb450 <line:13:22>
|-FunctionDecl 0x55d4baecb700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d4baecb4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55d4baecb540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55d4baecb5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55d4baecb7b8 <line:15:22>
|-TypedefDecl 0x55d4baecb828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55d4bae64f70 'unsigned char'
|-TypedefDecl 0x55d4baecb898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55d4bae64f90 'unsigned short'
|-TypedefDecl 0x55d4baecb908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55d4bae64fb0 'unsigned int'
|-TypedefDecl 0x55d4baecb978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baecb9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55d4bae64ed0 'signed char'
|-TypedefDecl 0x55d4baecba58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55d4bae64f70 'unsigned char'
|-TypedefDecl 0x55d4baecbac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55d4bae64ef0 'short'
|-TypedefDecl 0x55d4baecbb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55d4bae64f90 'unsigned short'
|-TypedefDecl 0x55d4baecbba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55d4bae64f10 'int'
|-TypedefDecl 0x55d4baecbc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55d4bae64fb0 'unsigned int'
|-TypedefDecl 0x55d4baecbc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecbcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baecbd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecbdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baecbe48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baecbeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55d4bae64fb0 'unsigned int'
|-TypedefDecl 0x55d4baecbf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55d4bae64fb0 'unsigned int'
|-TypedefDecl 0x55d4baecbf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baecc008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baecc078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55d4bae64fb0 'unsigned int'
|-TypedefDecl 0x55d4baecc0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baecc158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecc1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecc238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55d4bae64f10 'int'
|-RecordDecl 0x55d4baecc290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55d4baecc408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55d4baecc4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55d4baecc460 'struct __fsid_t' sugar
|   `-RecordType 0x55d4baecc310 '__fsid_t'
|     `-Record 0x55d4baecc290 ''
|-TypedefDecl 0x55d4baecc548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecc5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baecc628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baecc698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55d4bae64fb0 'unsigned int'
|-TypedefDecl 0x55d4baecc708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecc778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55d4bae64fb0 'unsigned int'
|-TypedefDecl 0x55d4baecc7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecc858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55d4bae64f10 'int'
|-TypedefDecl 0x55d4baecc8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55d4bae64f10 'int'
|-TypedefDecl 0x55d4baecc938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55d4bae64f10 'int'
|-TypedefDecl 0x55d4baecc9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55d4bae65630 'void *'
|   `-BuiltinType 0x55d4bae64e70 'void'
|-TypedefDecl 0x55d4baecca18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecca88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baeccaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baeccb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baeccbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baeccc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baecccb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baeccd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baeccd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecce08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecce78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baeccf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55d4baecced0 '__off64_t' sugar
|   |-Typedef 0x55d4baecc1c8 '__off64_t'
|   `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecd000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55d4baeccfc0 '__quad_t *'
|   `-TypedefType 0x55d4baeccf60 '__quad_t' sugar
|     |-Typedef 0x55d4baecbd68 '__quad_t'
|     `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecd070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55d4bae65ab0 'char *'
|   `-BuiltinType 0x55d4bae64eb0 'char'
|-TypedefDecl 0x55d4baecd0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baecd150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55d4bae64fb0 'unsigned int'
|-FunctionDecl 0x55d4baecd298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55d4baecd1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55d4baece5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55d4baece5d8 <line:72:3, col:34>
|     `-CallExpr 0x55d4baece598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55d4baece580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55d4baece510 <col:10> '<builtin fn type>' Function 0x55d4baece380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55d4baece5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55d4baece530 <col:29> 'unsigned int' lvalue ParmVar 0x55d4baecd1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55d4baece380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55d4baece420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55d4baece490 <col:10> Implicit
| `-ConstAttr 0x55d4baece4e8 <col:10> Implicit
|-FunctionDecl 0x55d4baece740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55d4baece638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55d4baecea58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55d4baecea48 <line:77:3, col:34>
|     `-CallExpr 0x55d4baecea08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55d4baece9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55d4baece978 <col:10> '<builtin fn type>' Function 0x55d4baece7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55d4baecea30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55d4baece998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55d4baece638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55d4baece7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55d4baece888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55d4baece8f8 <col:10> Implicit
| `-ConstAttr 0x55d4baece950 <col:10> Implicit
|-TypedefDecl 0x55d4baecea88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-TypedefDecl 0x55d4baeceb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55d4baeceae0 '__time_t' sugar
|   |-Typedef 0x55d4baecc708 '__time_t'
|   `-BuiltinType 0x55d4bae64f30 'long'
|-RecordDecl 0x55d4baeceb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55d4baecec28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55d4baececb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55d4baeced48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55d4baeced10 '__pid_t' sugar
|   |-Typedef 0x55d4baecc238 '__pid_t'
|   `-BuiltinType 0x55d4bae64f10 'int'
|-RecordDecl 0x55d4baeceda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55d4baecee60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55d4baeceeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55d4baecef70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55d4baecefd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-RecordDecl 0x55d4baecf030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55d4baecf2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55d4baed03a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55d4baecf310 'struct cpu_set_t' sugar
|   `-RecordType 0x55d4baecf0b0 'cpu_set_t'
|     `-Record 0x55d4baecf030 ''
|-FunctionDecl 0x55d4baed0678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55d4baed0448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d4baed0550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55d4baed0728 <line:107:19>
|-FunctionDecl 0x55d4baed0900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55d4baed0790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55d4baed09a8 <col:69>
|-FunctionDecl 0x55d4baed0b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55d4baed0a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55d4baed0bc8 <col:64>
|-FunctionDecl 0x55d4baed0e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d4baed0c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d4baed0d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55d4baed0f38 <line:113:22>
|-FunctionDecl 0x55d4baed11b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55d4baed0fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d4baed1098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55d4baed1268 <col:88>
|-FunctionDecl 0x55d4baed1588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d4baed12d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d4baed13b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55d4baed1440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55d4baed1640 <col:62>
|-FunctionDecl 0x55d4baed17b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55d4baed16a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55d4baed1860 <col:63>
|-FunctionDecl 0x55d4baed1988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55d4baed1a28 <col:47>
|-FunctionDecl 0x55d4baed1b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55d4baed1a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55d4baed1bd8 <col:69>
|-FunctionDecl 0x55d4baed1ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55d4baed1c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55d4baed1d88 <col:69>
|-FunctionDecl 0x55d4baed2048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d4baed1df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d4baed1f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55d4baed20f8 <col:88>
|-TypedefDecl 0x55d4baed2188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55d4baed2150 '__clock_t' sugar
|   |-Typedef 0x55d4baecc548 '__clock_t'
|   `-BuiltinType 0x55d4bae64f30 'long'
|-TypedefDecl 0x55d4baed2218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55d4baed21e0 '__clockid_t' sugar
|   |-Typedef 0x55d4baecc938 '__clockid_t'
|   `-BuiltinType 0x55d4bae64f10 'int'
|-TypedefDecl 0x55d4baed22a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55d4baed2270 '__timer_t' sugar
|   |-Typedef 0x55d4baecc9a8 '__timer_t'
|   `-PointerType 0x55d4bae65630 'void *'
|     `-BuiltinType 0x55d4bae64e70 'void'
|-RecordDecl 0x55d4baed2300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55d4baed23d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55d4baed2440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55d4baed24a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55d4baed2510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55d4baed2578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55d4baed25e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55d4baed2648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55d4baed26b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55d4baed2718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55d4baed2780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55d4baed27e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55d4baed2838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55d4baed2908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55d4baed2978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55d4baed2a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55d4baed2bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55d4baed2c90 <col:45>
|-FunctionDecl 0x55d4baed2e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55d4baed2d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55d4baed2f18 <col:54>
|-FunctionDecl 0x55d4baed3118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55d4baed2f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55d4baed2ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55d4baed31c8 <line:157:22>
| `-ConstAttr 0x55d4baed3220 <col:63>
|-FunctionDecl 0x55d4baed4050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d4baed3318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55d4baed40f8 <col:56>
|-FunctionDecl 0x55d4baed44a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55d4baed4168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55d4baed41e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d4baed4260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55d4baed4358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55d4baed4560 <col:54>
|-RecordDecl 0x55d4baed45b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55d4baed4668 parent 0x55d4bae64e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55d4baed48c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55d4baed4968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55d4baed49d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55d4baed4a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55d4baed4b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55d4baed4c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55d4baed4bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55d4baed4b80 'struct __locale_struct' sugar
|     `-RecordType 0x55d4baed4640 'struct __locale_struct'
|       `-Record 0x55d4baed45b8 '__locale_struct'
|-TypedefDecl 0x55d4baed4cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55d4baed4cc0 '__locale_t' sugar
|   |-Typedef 0x55d4baed4c48 '__locale_t'
|   `-PointerType 0x55d4baed4bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55d4baed4b80 'struct __locale_struct' sugar
|       `-RecordType 0x55d4baed4640 'struct __locale_struct'
|         `-Record 0x55d4baed45b8 '__locale_struct'
|-FunctionDecl 0x55d4baed6110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55d4baed4d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55d4baed4de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d4baed4e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55d4baed4ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55d4baed4f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55d4baed61d8 <col:40>
|-FunctionDecl 0x55d4baed63c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55d4baed62a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55d4baed6470 <col:66>
|-FunctionDecl 0x55d4baed6580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55d4baed64d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55d4baed6628 <col:69>
|-FunctionDecl 0x55d4baed6858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55d4baed6690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d4baed6720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55d4baed6908 <col:52>
|-FunctionDecl 0x55d4baed6ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55d4baed6970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d4baed6a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55d4baed6b60 <col:55>
|-FunctionDecl 0x55d4baed6cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55d4baed6be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55d4baed6da0 <col:62>
|-FunctionDecl 0x55d4baed6f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55d4baed6e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55d4baed6fc0 <col:60>
|-FunctionDecl 0x55d4baed72b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55d4baed7118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55d4baed7198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55d4baed7368 <col:44>
|-FunctionDecl 0x55d4baed7578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55d4baed73d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d4baed7450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55d4baed7628 <col:49>
|-VarDecl 0x55d4baed7728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55d4baed77a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55d4baed7828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55d4baed78f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55d4baed7a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55d4baed7ac0 <col:42>
|-VarDecl 0x55d4baed7b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55d4baed7bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55d4baed7d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55d4baed7c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55d4baed7de0 <col:57>
|-FunctionDecl 0x55d4baed7ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d4baed7e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55d4baed7f98 <col:56>
|-FunctionDecl 0x55d4baed80d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d4baed8018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55d4baed8178 <col:59>
|-FunctionDecl 0x55d4baed8280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55d4baed81e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55d4baed8328 <col:48>
| `-ConstAttr 0x55d4baed8380 <col:89>
|-FunctionDecl 0x55d4baed85e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55d4baed8438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55d4baed84c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55d4baed8848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d4baed86d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d4baed8768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55d4baed88f8 <col:88>
|-FunctionDecl 0x55d4baed8a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d4baed8960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d4baed89f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55d4baed8b40 <col:88>
|-FunctionDecl 0x55d4baed8d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55d4baed8ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d4baed8c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55d4baed8e08 <line:208:22>
|-FunctionDecl 0x55d4baed9178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55d4baed8e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d4baed8ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55d4baed8f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55d4baed9010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55d4baed9478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55d4baed9278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55d4baed9350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55d4baed9528 <col:85>
|-FunctionDecl 0x55d4baed9918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55d4baed9590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d4baed96c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55d4baed97d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55d4baed99d0 <col:52>
|-FunctionDecl 0x55d4baed9b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55d4baed9a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55d4baed9bf0 <col:61>
|-FunctionDecl 0x55d4baeda0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55d4baed9c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55d4baed9cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55d4baed9e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55d4baed9ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55d4baeda1b0 <col:62>
|-FunctionDecl 0x55d4baeda3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55d4baeda218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55d4baeda2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55d4baeda478 <line:221:22>
|-FunctionDecl 0x55d4baeda578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55d4baeda4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55d4baeda620 <col:65>
|-TypedefDecl 0x55d4baeda690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55d4bae64fd0 'unsigned long'
|-RecordDecl 0x55d4baeda6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55d4baeda830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55d4baeda898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d4baeda948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55d4baeda8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55d4baeda770 'union pthread_attr_t'
|     `-Record 0x55d4baeda6e8 'pthread_attr_t'
|-RecordDecl 0x55d4baeda9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55d4baedab18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55d4baedab90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55d4baedac40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55d4baedabe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55d4baedaa20 'struct __pthread_internal_list'
|     `-Record 0x55d4baeda9a0 '__pthread_internal_list'
|-RecordDecl 0x55d4baedacb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55d4baedad58 parent 0x55d4bae64e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55d4baedae30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d4baedae98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55d4baedaf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55d4baedaf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55d4baedafd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55d4baedb038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55d4baedf110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55d4baedf1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55d4baedf2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55d4baedf318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d4baedf4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55d4baedf440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55d4baedad30 'pthread_mutex_t'
|     `-Record 0x55d4baedacb0 ''
|-RecordDecl 0x55d4baedf510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55d4baedf650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d4baedf6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d4baedf770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55d4baedf710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55d4baedf590 'pthread_mutexattr_t'
|     `-Record 0x55d4baedf510 ''
|-RecordDecl 0x55d4baedf7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55d4baedf888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55d4baedf950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d4baedf9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55d4baedfa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55d4baedfa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55d4baedfaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55d4baedfb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55d4baedfbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55d4baedfc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55d4baedfce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_3/mix018_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_3/mix018_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55d4baedfdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55d4baedfe38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55d4baedff70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55d4baedff10 'union pthread_cond_t' sugar
|   `-RecordType 0x55d4baedf860 'pthread_cond_t'
|     `-Record 0x55d4baedf7e0 ''
|-RecordDecl 0x55d4baedffe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55d4baee1130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d4baee1198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d4baee1250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55d4baee11f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55d4baee0060 'pthread_condattr_t'
|     `-Record 0x55d4baedffe0 ''
|-TypedefDecl 0x55d4baee12d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55d4bae64fb0 'unsigned int'
|-TypedefDecl 0x55d4baee1348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55d4bae64f10 'int'
|-RecordDecl 0x55d4baee13a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55d4baee1448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55d4baee1510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d4baee1578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55d4baee15e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55d4baee1648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55d4baee16b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55d4baee1718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55d4baee1780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55d4baee17e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55d4baee1850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55d4baee18b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55d4baee1920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55d4baee19d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_3/mix018_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_3/mix018_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55d4baee1a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55d4baee1ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d4baee1c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55d4baee1bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55d4baee1420 'pthread_rwlock_t'
|     `-Record 0x55d4baee13a0 ''
|-RecordDecl 0x55d4baee1ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55d4baee1de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55d4baee1e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d4baee1f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55d4baee1ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55d4baee1d20 'pthread_rwlockattr_t'
|     `-Record 0x55d4baee1ca0 ''
|-TypedefDecl 0x55d4baee1f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55d4bae64f14 'volatile int' volatile
|   `-BuiltinType 0x55d4bae64f10 'int'
|-RecordDecl 0x55d4baee1fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55d4baee3140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55d4baee31a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d4baee3260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55d4baee3200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55d4baee2060 'pthread_barrier_t'
|     `-Record 0x55d4baee1fe0 ''
|-RecordDecl 0x55d4baee32d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55d4baee33d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d4baee3438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d4baee34f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55d4baee3490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55d4baee3350 'pthread_barrierattr_t'
|     `-Record 0x55d4baee32d0 ''
|-TypedefDecl 0x55d4baee3608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55d4baee35a0 'long [8]' 8 
|   `-BuiltinType 0x55d4bae64f30 'long'
|-EnumDecl 0x55d4baee3660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55d4baee3728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55d4baee3778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55d4baee37c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55d4baee3898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55d4baee38e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55d4baee3938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55d4baee3988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55d4baee3a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55d4baee39f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55d4baee39d8 <col:26> 'int' EnumConstant 0x55d4baee3898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55d4baee3a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55d4baee3a80 <col:29> 'int'
| |   `-DeclRefExpr 0x55d4baee3a60 <col:29> 'int' EnumConstant 0x55d4baee38e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55d4baee3b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55d4baee3b08 <col:30> 'int'
| |   `-DeclRefExpr 0x55d4baee3ae8 <col:30> 'int' EnumConstant 0x55d4baee3938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55d4baee3ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55d4baee3b90 <col:27> 'int'
|     `-DeclRefExpr 0x55d4baee3b70 <col:27> 'int' EnumConstant 0x55d4baee3a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55d4baee3bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55d4baee3cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55d4baee3d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55d4baee3d38 <col:30> 'int'
| |   `-DeclRefExpr 0x55d4baee3d18 <col:30> 'int' EnumConstant 0x55d4baee3cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55d4baee3da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55d4baee3e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55d4baee3e10 <col:29> 'int'
|     `-DeclRefExpr 0x55d4baee3df0 <col:29> 'int' EnumConstant 0x55d4baee3da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55d4baee3e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55d4baee3f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55d4baee3f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55d4baee3fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55d4baee4038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55d4baee4150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55d4baee41a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55d4baee41f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55d4baee4278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55d4baee4260 <col:31> 'int'
|     `-DeclRefExpr 0x55d4baee4240 <col:31> 'int' EnumConstant 0x55d4baee4150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55d4baee42c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55d4baee4398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55d4baee43e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55d4baee4438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55d4baee4508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55d4baee4558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55d4baee45a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55d4baee4678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55d4baee46c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55d4baee4718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55d4baee4958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55d4baee49c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55d4baee4a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55d4baee4b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55d4baee4b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55d4baee4c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55d4baee4cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55d4baee4d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55d4baee4dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55d4baee4e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55d4baee5488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55d4baee4f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55d4baee5030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d4baee5270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55d4baee52f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55d4baee5548 <col:47>
| |-NonNullAttr 0x55d4baee55a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55d4baee55d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55d4baee5700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55d4baee5630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55d4baee5958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55d4baee57b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55d4baee5838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55d4baee5b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55d4baee5a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55d4baee5bd0 <col:60>
|-FunctionDecl 0x55d4baee5d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55d4baee5dc0 <col:54>
| `-ConstAttr 0x55d4baee5e18 <col:95>
|-FunctionDecl 0x55d4baee5fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55d4baee5e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d4baee5ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55d4baee6098 <line:394:19>
| `-ConstAttr 0x55d4baee60f0 <col:60>
|-FunctionDecl 0x55d4baee7b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55d4baee79d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55d4baee7bb0 <col:71>
| `-NonNullAttr 0x55d4baee7c08 <col:112, col:126> 1
|-FunctionDecl 0x55d4baee7d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55d4baee7c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55d4baee7db8 <line:397:22>
| `-NonNullAttr 0x55d4baee7e10 <col:63, col:77> 1
|-FunctionDecl 0x55d4baee8038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55d4baee7e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55d4baee7ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55d4baee80e8 <line:400:22>
| `-NonNullAttr 0x55d4baee8140 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baee8348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d4baee8188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d4baee8208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55d4baee83f8 <line:403:22>
| `-NonNullAttr 0x55d4baee8450 <col:63, col:77> 1
|-FunctionDecl 0x55d4baee86a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55d4baee8498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55d4baee8540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55d4baee8758 <line:406:22>
| `-NonNullAttr 0x55d4baee87b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baee99e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55d4baee87f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d4baee8870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d4baee9a98 <line:409:22>
| `-NonNullAttr 0x55d4baee9af0 <col:63, col:77> 1
|-FunctionDecl 0x55d4baee9d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d4baee9b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d4baee9bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55d4baee9dd8 <line:412:22>
| `-NonNullAttr 0x55d4baee9e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baeea068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d4baee9e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d4baee9f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55d4baeea118 <col:37>
| `-NonNullAttr 0x55d4baeea170 <col:78, col:95> 1 2
|-FunctionDecl 0x55d4baeea358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baeea1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d4baeea238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55d4baeea408 <line:418:22>
| `-NonNullAttr 0x55d4baeea460 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baeea5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d4baeea4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d4baeea528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55d4baeea698 <line:420:22>
| `-NonNullAttr 0x55d4baeea6f0 <col:63, col:77> 1
|-FunctionDecl 0x55d4baeea898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baeea738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d4baeea7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55d4baeea948 <line:423:22>
| `-NonNullAttr 0x55d4baeea9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baeeab48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d4baeeaa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d4baeeaa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55d4baeeabf8 <line:426:22>
| `-NonNullAttr 0x55d4baeeac50 <col:63, col:77> 1
|-FunctionDecl 0x55d4baeeadf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baeeac98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d4baeead18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55d4baeeaea8 <line:429:22>
| `-NonNullAttr 0x55d4baeeaf00 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baeeb088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d4baeeaf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d4baeeafc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55d4baeeb138 <line:431:22>
| `-NonNullAttr 0x55d4baeeb190 <col:63, col:77> 1
|-FunctionDecl 0x55d4baeeb3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55d4baeeb1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d4baeeb258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55d4baeeb468 <line:434:22>
| |-NonNullAttr 0x55d4baeeb4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55d4baeeb4f8 <col:100> "" ""
|-FunctionDecl 0x55d4baeeb708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55d4baeeb548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d4baeeb5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55d4baeeb7b8 <line:437:22>
| |-NonNullAttr 0x55d4baeeb810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55d4baeeb848 <col:97> "" ""
|-FunctionDecl 0x55d4baeeba48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55d4baeeb898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d4baeeb910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55d4baeebaf8 <line:440:22>
| `-NonNullAttr 0x55d4baeebb50 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baeebcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55d4baeebb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d4baeebc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d4baeebd80 <line:443:22>
| `-NonNullAttr 0x55d4baeebdd8 <col:63, col:77> 1
|-FunctionDecl 0x55d4baeec0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55d4baeebe28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d4baeebea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55d4baeebf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55d4baeec180 <line:447:22>
| `-NonNullAttr 0x55d4baeec1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55d4baeec488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55d4baeec230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d4baeec2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55d4baeec328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d4baeec540 <col:43>
| `-NonNullAttr 0x55d4baeec598 <col:84, col:98> 1
|-FunctionDecl 0x55d4baeec858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d4baeec5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d4baeec668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55d4baeec6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55d4baeec910 <line:452:22>
| `-NonNullAttr 0x55d4baeec968 <col:63, col:77> 3
|-FunctionDecl 0x55d4baeecc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d4baeec9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d4baeeca60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55d4baeecaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55d4baeecd30 <line:456:22>
| `-NonNullAttr 0x55d4baeecd88 <col:63, col:80> 2 3
|-FunctionDecl 0x55d4baeecf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55d4baeecdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d4baeece58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55d4baeed028 <line:458:22>
|-FunctionDecl 0x55d4baeed3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55d4baeed0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55d4baeed290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55d4baeed4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55d4baeed650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55d4baeed530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55d4baeed5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55d4baeed838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55d4baeed718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55d4baeed798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55d4baeed9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55d4baeed8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55d4baeedb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55d4baeedbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55d4baeedc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55d4baeedd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55d4baeeddd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55d4baeedfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_3/mix018_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55d4baeee098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55d4baeee150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55d4baeee0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55d4baeedc50 '__pthread_unwind_buf_t'
| |   `-Record 0x55d4baeedbd0 ''
| `-AlignedAttr 0x55d4baeee1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55d4baeee220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55d4baeee380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55d4baeee3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55d4baeee450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55d4baeee4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55d4baeee6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55d4baeee5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55d4baeee808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55d4baeee778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55d4baeeea00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d4baeee8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55d4baeeeaa8 <line:487:22>
|-RecordDecl 0x55d4baeeeb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55d4baeeee18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55d4baeeec78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55d4baeeecf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55d4baeeeec8 <col:86>
| `-ReturnsTwiceAttr 0x55d4baeeef20 <col:12> Implicit
|-FunctionDecl 0x55d4baeef248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d4baeeeff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55d4baeef100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d4baeef2f8 <line:493:22>
| `-NonNullAttr 0x55d4baeef350 <col:63, col:77> 1
|-FunctionDecl 0x55d4baeef4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d4baeef398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d4baeef570 <line:495:22>
| `-NonNullAttr 0x55d4baeef5c8 <col:63, col:77> 1
|-FunctionDecl 0x55d4baeef6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d4baeef618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d4baeef778 <line:497:22>
| `-NonNullAttr 0x55d4baeef7d0 <col:52, col:66> 1
|-FunctionDecl 0x55d4baeef8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d4baeef818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d4baeef978 <line:499:22>
| `-NonNullAttr 0x55d4baeef9d0 <col:52, col:66> 1
|-FunctionDecl 0x55d4baef0c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d4baef0a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d4baef0ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d4baef0cd8 <col:36>
| `-NonNullAttr 0x55d4baef0d30 <col:66, col:83> 1 2
|-FunctionDecl 0x55d4baef0e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d4baef0d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d4baef0ed8 <line:504:22>
| `-NonNullAttr 0x55d4baef0f30 <col:52, col:66> 1
|-FunctionDecl 0x55d4baef11c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baef0fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d4baef1060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55d4baef1278 <line:508:22>
| `-NonNullAttr 0x55d4baef12d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baef1598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55d4baef1318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d4baef1398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55d4baef1418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55d4baef1650 <line:512:22>
| `-NonNullAttr 0x55d4baef16a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55d4baef17b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d4baef16f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d4baef1858 <line:514:22>
| `-NonNullAttr 0x55d4baef18b0 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef1ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d4baef1960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d4baef1b80 <line:516:22>
| `-NonNullAttr 0x55d4baef1bd8 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef1ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d4baef1c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d4baef1d88 <line:518:22>
| `-NonNullAttr 0x55d4baef1de0 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef2008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baef1e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d4baef1ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d4baef20b8 <line:522:22>
| `-NonNullAttr 0x55d4baef2110 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baef2318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d4baef2158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d4baef21d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55d4baef23c8 <line:525:22>
| `-NonNullAttr 0x55d4baef2420 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef25c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baef2468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d4baef24e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55d4baef2678 <line:528:22>
| `-NonNullAttr 0x55d4baef26d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baef2858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d4baef2718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d4baef2798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55d4baef2908 <line:530:22>
| `-NonNullAttr 0x55d4baef2960 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef2b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baef29a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d4baef2a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55d4baef2bd0 <line:534:22>
| `-NonNullAttr 0x55d4baef2c28 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baef2db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d4baef2c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d4baef2cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55d4baef2e68 <line:537:22>
| `-NonNullAttr 0x55d4baef2ec0 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef3068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baef2f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d4baef2f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55d4baef3118 <line:541:22>
| `-NonNullAttr 0x55d4baef3170 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baef32f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d4baef31b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d4baef3238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55d4baef33a8 <line:544:22>
| `-NonNullAttr 0x55d4baef3400 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef35e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55d4baef3448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d4baef34c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55d4baef3698 <line:547:22>
| `-NonNullAttr 0x55d4baef36f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baef3878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d4baef3738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d4baef37b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55d4baef3928 <line:550:22>
| `-NonNullAttr 0x55d4baef3980 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef4cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55d4baef4aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d4baef4bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55d4baef4da8 <col:29>
| `-NonNullAttr 0x55d4baef4e00 <col:70, col:84> 1
|-FunctionDecl 0x55d4baef4f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d4baef4e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d4baef5020 <line:555:22>
| `-NonNullAttr 0x55d4baef5078 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef5180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d4baef50c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d4baef5228 <line:557:22>
| `-NonNullAttr 0x55d4baef5280 <col:52, col:66> 1
|-FunctionDecl 0x55d4baef5380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d4baef52c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d4baef5428 <line:559:19>
| `-NonNullAttr 0x55d4baef5480 <col:49, col:63> 1
|-FunctionDecl 0x55d4baef56b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d4baef54c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d4baef5558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d4baef5768 <col:39>
| `-NonNullAttr 0x55d4baef57c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55d4baef58c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d4baef5808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d4baef5968 <line:564:22>
| `-NonNullAttr 0x55d4baef59c0 <col:52, col:66> 1
|-FunctionDecl 0x55d4baef5b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d4baef5a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d4baef5bd0 <line:566:22>
| `-NonNullAttr 0x55d4baef5c28 <col:52, col:66> 1
|-FunctionDecl 0x55d4baef5de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d4baef5c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d4baef5d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d4baef5e98 <col:39>
| `-NonNullAttr 0x55d4baef5ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55d4baef5ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d4baef5f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d4baef6098 <line:571:22>
| `-NonNullAttr 0x55d4baef60f0 <col:52, col:66> 1
|-FunctionDecl 0x55d4baef62d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55d4baef61a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55d4baef6380 <line:573:22>
| `-NonNullAttr 0x55d4baef63d8 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef64e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55d4baef6428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55d4baef6588 <line:575:22>
| `-NonNullAttr 0x55d4baef65e0 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef6808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baef6628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55d4baef66a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d4baef68b8 <line:579:22>
| `-NonNullAttr 0x55d4baef6910 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baef6b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55d4baef6958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55d4baef69d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55d4baef6be8 <line:582:22>
| `-NonNullAttr 0x55d4baef6c40 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef6de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baef6c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55d4baef6d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55d4baef6e98 <line:586:22>
| `-NonNullAttr 0x55d4baef6ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baef7078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55d4baef6f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55d4baef6fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55d4baef7128 <col:36>
| `-NonNullAttr 0x55d4baef7180 <col:77, col:91> 1
|-FunctionDecl 0x55d4baef74b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55d4baef7260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d4baef7370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55d4baef7568 <line:591:22>
| `-NonNullAttr 0x55d4baef75c0 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef7738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d4baef7608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d4baef77e0 <line:593:22>
| `-NonNullAttr 0x55d4baef7838 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef7940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d4baef7888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d4baef79e8 <line:595:22>
| `-NonNullAttr 0x55d4baef7a40 <col:52, col:66> 1
|-FunctionDecl 0x55d4baef7b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d4baef7aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d4baef7c00 <line:597:22>
| `-NonNullAttr 0x55d4baef7c58 <col:52, col:66> 1
|-FunctionDecl 0x55d4baef7e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55d4baef7ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d4baef7d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55d4baef7f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55d4baef8268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d4baef7fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d4baef8030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d4baef80c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55d4baef8320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55d4baef8538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55d4baef8400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55d4baef85e0 <line:606:22>
| `-NonNullAttr 0x55d4baef8638 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef8740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55d4baef8688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55d4baef87e8 <line:608:22>
| `-NonNullAttr 0x55d4baef8840 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef8aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baef8888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55d4baef8908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d4baef8b50 <line:612:22>
| `-NonNullAttr 0x55d4baef8ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baef8db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55d4baef8bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55d4baef8c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55d4baef8e68 <col:37>
| `-NonNullAttr 0x55d4baef8ec0 <col:78, col:92> 1
|-FunctionDecl 0x55d4baef90d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55d4baef8f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55d4baef8fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55d4baef9188 <line:618:22>
| `-NonNullAttr 0x55d4baef91e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baef93a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55d4baef9228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55d4baef92a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55d4baef9458 <line:621:22>
| `-NonNullAttr 0x55d4baef94b0 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef9758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55d4baef9590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55d4baef9610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55d4baef9808 <line:623:22>
| `-NonNullAttr 0x55d4baef9860 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef99d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d4baef98a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d4baef9ab0 <line:625:22>
| `-NonNullAttr 0x55d4baef9b08 <col:63, col:77> 1
|-FunctionDecl 0x55d4baef9c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d4baef9b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d4baef9cb8 <line:627:22>
| `-NonNullAttr 0x55d4baef9d10 <col:52, col:66> 1
|-FunctionDecl 0x55d4baef9e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d4baef9d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d4baef9eb8 <line:629:22>
| `-NonNullAttr 0x55d4baef9f10 <col:52, col:66> 1
|-FunctionDecl 0x55d4baefa010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d4baef9f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d4baefa0b8 <line:631:22>
| `-NonNullAttr 0x55d4baefa110 <col:52, col:66> 1
|-FunctionDecl 0x55d4baefa4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55d4baefa1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55d4baefa300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55d4baefa380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55d4baefa5a0 <line:635:22>
| `-NonNullAttr 0x55d4baefa5f8 <col:63, col:77> 1
|-FunctionDecl 0x55d4baefa778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55d4baefa648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55d4baefa820 <line:637:22>
| `-NonNullAttr 0x55d4baefa878 <col:63, col:77> 1
|-FunctionDecl 0x55d4baefa980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55d4baefa8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55d4baefaa28 <line:639:22>
| `-NonNullAttr 0x55d4baefaa80 <col:52, col:66> 1
|-FunctionDecl 0x55d4baefbc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55d4baefbb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55d4baefbd30 <line:641:22>
| `-NonNullAttr 0x55d4baefbd88 <col:63, col:77> 1
|-FunctionDecl 0x55d4baefbe90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55d4baefbdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55d4baefbf38 <line:643:22>
| `-NonNullAttr 0x55d4baefbf90 <col:63, col:77> 1
|-FunctionDecl 0x55d4baefc1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d4baefbfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55d4baefc058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d4baefc268 <line:647:22>
| `-NonNullAttr 0x55d4baefc2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d4baefc4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55d4baefc308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55d4baefc388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55d4baefc578 <line:650:22>
| `-NonNullAttr 0x55d4baefc5d0 <col:63, col:77> 1
|-FunctionDecl 0x55d4baefc918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55d4baefc6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55d4baefc7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55d4baefc9c8 <line:653:22>
| `-NonNullAttr 0x55d4baefca20 <col:63, col:77> 1
|-FunctionDecl 0x55d4baefcb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55d4baefca68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55d4baefcc30 <col:69>
|-FunctionDecl 0x55d4baefcda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55d4baefcc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55d4baefce50 <col:72>
|-FunctionDecl 0x55d4baefd088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55d4baefceb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55d4baefcf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55d4baefd138 <col:44>
|-FunctionDecl 0x55d4baefd358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55d4baefd1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d4baefd218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55d4baefd408 <line:660:22>
| `-NonNullAttr 0x55d4baefd460 <col:63, col:77> 2
|-FunctionDecl 0x55d4baefd8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55d4baefd540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55d4baefd650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55d4baefd760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55d4baefd960 <col:47>
|-FunctionDecl 0x55d4baefdaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55d4baefd9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d4baefdc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55d4baefdbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d4baefdda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55d4baefdd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d4baefdef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55d4baefde60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d4baefdfc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55d4baefe080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55d4baefe140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55d4baefe1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55d4baefe278 prev 0x55d4baefe1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55d4baefe2e0 <col:24> 'int' 0
|-VarDecl 0x55d4baefe318 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55d4baefe398 prev 0x55d4baefe318 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55d4baefe400 <col:27> 'int' 0
|-VarDecl 0x55d4baefe438 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55d4baefe4b8 prev 0x55d4baefe438 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55d4baefe520 <col:27> 'int' 0
|-VarDecl 0x55d4baefe558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55d4baefe5d8 prev 0x55d4baefe558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55d4baefe640 <col:27> 'int' 0
|-VarDecl 0x55d4baefe678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55d4baefe6f8 prev 0x55d4baefe678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55d4baefe760 <col:27> 'int' 0
|-VarDecl 0x55d4baefe798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x55d4baefe818 prev 0x55d4baefe798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55d4baefe880 <col:9> 'int' 0
|-VarDecl 0x55d4baefe8b0 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x55d4baefe930 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x55d4baefe9a8 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x55d4baefea20 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x55d4baefeb00 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x55d4baefeb78 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x55d4baefebf0 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x55d4baefec68 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x55d4baefece0 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x55d4baefed58 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x55d4baefedd0 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x55d4baefee48 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x55d4baefeec0 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x55d4baefef40 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x55d4baefefc0 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x55d4baeff038 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x55d4baeff0b8 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x55d4baeff130 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x55d4baeff1a8 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55d4baeff220 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55d4baeff2a0 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x55d4baeff320 prev 0x55d4baeff2a0 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55d4baeff388 <col:9> 'int' 0
|-VarDecl 0x55d4baeff3c0 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x55d4baeff440 prev 0x55d4baeff3c0 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55d4baeff4a8 <col:9> 'int' 0
|-VarDecl 0x55d4baeff4e0 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x55d4baeff560 prev 0x55d4baeff4e0 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55d4baeff5c8 <col:9> 'int' 0
|-VarDecl 0x55d4baeff5f8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55d4baeff670 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55d4baeff788 prev 0x55d4baefdaf0 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55d4baeff6f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d4baf01028 <line:713:1, line:741:1>
|   |-CallExpr 0x55d4baeff898 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baeff880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baeff830 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baeff910 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d4baeff8b8 <col:3> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55d4baeff8f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baeff8d8 <col:15> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x55d4baeff970 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d4baeff930 <col:3> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x55d4baeff950 <col:15> 'int' 1
|   |-BinaryOperator 0x55d4baeff9e8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baeff990 <col:3> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baeff9d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baeff9b0 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d4baeffa80 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baeffa08 <col:3> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55d4baeffa58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d4baeffa28 <col:27> 'int' 1
|   |-CallExpr 0x55d4baeffc18 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55d4baeffc00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55d4baeffaa0 <col:3> 'void (int)' Function 0x55d4baea4bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55d4baeffbb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55d4baeffb90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55d4baeffb70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55d4baeffb28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55d4baeffb10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55d4baeffac0 <col:23> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55d4baeffb58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55d4baeffb40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55d4baeffae0 <col:41> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d4baeffc98 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baeffc40 <col:3> '_Bool' lvalue Var 0x55d4baefec68 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baeffc80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baeffc60 <col:20> '_Bool' lvalue Var 0x55d4baefe9a8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55d4baeffd10 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baeffcb8 <col:3> '_Bool' lvalue Var 0x55d4baefece0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baeffcf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baeffcd8 <col:20> '_Bool' lvalue Var 0x55d4baefea20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55d4baeffd88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baeffd30 <col:3> '_Bool' lvalue Var 0x55d4baefed58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baeffd70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baeffd50 <col:20> '_Bool' lvalue Var 0x55d4baefeb00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d4baeffe00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baeffda8 <col:3> '_Bool' lvalue Var 0x55d4baefedd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baeffde8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baeffdc8 <col:20> '_Bool' lvalue Var 0x55d4baefeb78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55d4baeffe78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baeffe20 <col:3> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baeffe60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baeffe40 <col:20> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55d4baefff10 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baeffe98 <col:3> '_Bool' lvalue Var 0x55d4baefea20 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55d4baeffee8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d4baeffeb8 <col:27> 'int' 1
|   |-CallExpr 0x55d4baefff68 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baefff50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baefff30 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baefffc0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baefffa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baefff88 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf00020 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55d4baefffe0 <col:3> 'int' lvalue Var 0x55d4baeff320 'x' 'int'
|   | `-IntegerLiteral 0x55d4baf00000 <col:7> 'int' 1
|   |-CallExpr 0x55d4baf00078 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf00060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf00040 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf000d0 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf000b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf00098 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf003b8 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55d4baf000f0 <col:3> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   | `-ConditionalOperator 0x55d4baf00388 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55d4baf001b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55d4baf00168 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55d4baf00150 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55d4baf00110 <col:7> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55d4baf00198 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55d4baf00180 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55d4baf00130 <col:25> '_Bool' lvalue Var 0x55d4baefea20 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55d4baf00370 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf001d0 <col:42> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55d4baf00350 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55d4baf00320 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55d4baf00290 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d4baf00248 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d4baf00230 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d4baf001f0 <col:55> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d4baf00278 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d4baf00260 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d4baf00210 <col:73> '_Bool' lvalue Var 0x55d4baefece0 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55d4baf002f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d4baf002b0 <col:90> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55d4baf00308 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf002d0 <col:102> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   |-BinaryOperator 0x55d4baf005c0 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf003d8 <col:3> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf005a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf00578 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d4baf00498 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d4baf00450 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d4baf00438 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d4baf003f8 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d4baf00480 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d4baf00468 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d4baf00418 <col:38> '_Bool' lvalue Var 0x55d4baefea20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf00530 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf004e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf004b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf00560 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf00548 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf00510 <col:66> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d4baf008a8 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf005e0 <col:3> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf00890 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf00860 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d4baf00780 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d4baf006a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d4baf00658 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d4baf00640 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d4baf00600 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d4baf00688 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d4baf00670 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d4baf00620 <col:38> '_Bool' lvalue Var 0x55d4baefea20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55d4baf00760 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d4baf00718 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d4baf00700 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d4baf006c0 <col:56> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d4baf00748 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d4baf00730 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d4baf006e0 <col:74> '_Bool' lvalue Var 0x55d4baefece0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf00818 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf007d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf007a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf00848 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf00830 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf007f8 <col:102> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55d4baf00ab0 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf008c8 <col:3> '_Bool' lvalue Var 0x55d4baefea20 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf00a98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf00a68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d4baf00988 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d4baf00940 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d4baf00928 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d4baf008e8 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d4baf00970 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d4baf00958 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d4baf00908 <col:38> '_Bool' lvalue Var 0x55d4baefea20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf00a20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf009d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf009a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf00a50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf00a38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf00a00 <col:66> '_Bool' lvalue Var 0x55d4baefea20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55d4baf00da8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf00ad0 <col:3> '_Bool' lvalue Var 0x55d4baefece0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf00d90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf00d60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d4baf00c80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d4baf00ba0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d4baf00b58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d4baf00b40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d4baf00af0 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d4baf00b88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d4baf00b70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d4baf00b20 <col:38> '_Bool' lvalue Var 0x55d4baefea20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55d4baf00c60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d4baf00c18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d4baf00c00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d4baf00bc0 <col:56> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d4baf00c48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d4baf00c30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d4baf00be0 <col:74> '_Bool' lvalue Var 0x55d4baefece0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf00d18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf00cd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf00ca0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf00d48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf00d30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf00cf8 <col:102> '_Bool' lvalue Var 0x55d4baefece0 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55d4baf00e00 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf00de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf00dc8 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf00e58 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf00e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf00e20 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf00f10 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d4baf00e78 <col:3> 'int' lvalue Var 0x55d4baefe278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d4baf00ef0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d4baf00ed8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf00e98 <col:22> 'int' lvalue Var 0x55d4baefe278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d4baf00eb8 <col:41> 'int' 1
|   |-CallExpr 0x55d4baf00f68 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf00f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf00f30 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d4baf01018 <line:740:3, col:36>
|     `-CallExpr 0x55d4baf00ff8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d4baf00fe0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d4baf00f88 <col:10> 'void *(void)' Function 0x55d4baea4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d4baf011c0 prev 0x55d4baefdc48 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55d4baf01128 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d4baf023f8 <line:743:1, line:761:1>
|   |-CallExpr 0x55d4baf012a0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf01288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf01268 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf01300 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55d4baf012c0 <col:3> 'int' lvalue Var 0x55d4baeff320 'x' 'int'
|   | `-IntegerLiteral 0x55d4baf012e0 <col:7> 'int' 2
|   |-CallExpr 0x55d4baf01358 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf01340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf01320 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf013b0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf01398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf01378 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf01428 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d4baf013d0 <col:3> 'int' lvalue Var 0x55d4baefe398 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d4baf01410 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baf013f0 <col:25> 'int' lvalue Var 0x55d4baeff440 'y' 'int'
|   |-CallExpr 0x55d4baf01480 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf01468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf01448 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf014d8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf014c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf014a0 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf017c0 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55d4baf014f8 <col:3> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   | `-ConditionalOperator 0x55d4baf01790 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55d4baf015b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55d4baf01570 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55d4baf01558 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55d4baf01518 <col:7> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55d4baf015a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55d4baf01588 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55d4baf01538 <col:25> '_Bool' lvalue Var 0x55d4baefeb00 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d4baf01778 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf015d8 <col:42> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55d4baf01758 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55d4baf01728 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55d4baf01698 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d4baf01650 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d4baf01638 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d4baf015f8 <col:55> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d4baf01680 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d4baf01668 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d4baf01618 <col:73> '_Bool' lvalue Var 0x55d4baefed58 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d4baf016f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d4baf016b8 <col:90> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55d4baf01710 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf016d8 <col:102> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   |-BinaryOperator 0x55d4baf019c8 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf017e0 <col:3> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf019b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf01980 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d4baf018a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d4baf01858 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d4baf01840 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d4baf01800 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d4baf01888 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d4baf01870 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d4baf01820 <col:38> '_Bool' lvalue Var 0x55d4baefeb00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf01938 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf018f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf018c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf01968 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf01950 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf01918 <col:66> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d4baf01cc0 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf019e8 <col:3> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf01ca8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf01c78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d4baf01b98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d4baf01aa8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d4baf01a60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d4baf01a48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d4baf01a08 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d4baf01a90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d4baf01a78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d4baf01a28 <col:38> '_Bool' lvalue Var 0x55d4baefeb00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55d4baf01b78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d4baf01b30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d4baf01b08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d4baf01ac8 <col:56> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d4baf01b60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d4baf01b48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d4baf01ae8 <col:74> '_Bool' lvalue Var 0x55d4baefed58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf01c30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf01be8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf01bb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf01c60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf01c48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf01c10 <col:102> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55d4baf01ec8 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf01ce0 <col:3> '_Bool' lvalue Var 0x55d4baefeb00 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf01eb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf01e80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d4baf01da0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d4baf01d58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d4baf01d40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d4baf01d00 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d4baf01d88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d4baf01d70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d4baf01d20 <col:38> '_Bool' lvalue Var 0x55d4baefeb00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf01e38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf01df0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf01dc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf01e68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf01e50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf01e18 <col:66> '_Bool' lvalue Var 0x55d4baefeb00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d4baf021b0 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf01ee8 <col:3> '_Bool' lvalue Var 0x55d4baefed58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf02198 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf02168 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d4baf02088 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d4baf01fa8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d4baf01f60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d4baf01f48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d4baf01f08 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d4baf01f90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d4baf01f78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d4baf01f28 <col:38> '_Bool' lvalue Var 0x55d4baefeb00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55d4baf02068 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d4baf02020 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d4baf02008 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d4baf01fc8 <col:56> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d4baf02050 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d4baf02038 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d4baf01fe8 <col:74> '_Bool' lvalue Var 0x55d4baefed58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf02120 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf020d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf020a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf02150 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf02138 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf02100 <col:102> '_Bool' lvalue Var 0x55d4baefed58 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55d4baf02208 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf021f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf021d0 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf02260 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf02248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf02228 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf02318 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d4baf02280 <col:3> 'int' lvalue Var 0x55d4baefe278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d4baf022f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d4baf022e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf022a0 <col:22> 'int' lvalue Var 0x55d4baefe278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d4baf022c0 <col:41> 'int' 1
|   |-CallExpr 0x55d4baf02370 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf02358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf02338 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d4baf023e8 <line:760:3, col:36>
|     `-CallExpr 0x55d4baf023c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d4baf023b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d4baf02390 <col:10> 'void *(void)' Function 0x55d4baea4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d4baf02540 prev 0x55d4baefdda0 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55d4baf024a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d4baf03798 <line:763:1, line:781:1>
|   |-CallExpr 0x55d4baf02620 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf02608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf025e8 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf02680 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55d4baf02640 <col:3> 'int' lvalue Var 0x55d4baeff440 'y' 'int'
|   | `-IntegerLiteral 0x55d4baf02660 <col:7> 'int' 1
|   |-CallExpr 0x55d4baf026d8 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf026c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf026a0 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf02730 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf02718 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf026f8 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf027a8 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d4baf02750 <col:3> 'int' lvalue Var 0x55d4baefe4b8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d4baf02790 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baf02770 <col:25> 'int' lvalue Var 0x55d4baeff560 'z' 'int'
|   |-CallExpr 0x55d4baf02800 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf027e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf027c8 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf02858 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf02840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf02820 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf02b70 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55d4baf02878 <col:3> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   | `-ConditionalOperator 0x55d4baf02b40 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55d4baf02938 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55d4baf028f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55d4baf028d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55d4baf02898 <col:7> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55d4baf02920 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55d4baf02908 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55d4baf028b8 <col:25> '_Bool' lvalue Var 0x55d4baefeb78 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55d4baf02af8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf02958 <col:42> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55d4baf02ad8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55d4baf02aa8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55d4baf02a18 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d4baf029d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d4baf029b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d4baf02978 <col:55> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d4baf02a00 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d4baf029e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d4baf02998 <col:73> '_Bool' lvalue Var 0x55d4baefedd0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55d4baf02a78 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d4baf02a38 <col:90> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55d4baf02a90 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf02a58 <col:102> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   |-BinaryOperator 0x55d4baf02d78 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf02b90 <col:3> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf02d60 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf02d30 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d4baf02c50 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d4baf02c08 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d4baf02bf0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d4baf02bb0 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d4baf02c38 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d4baf02c20 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d4baf02bd0 <col:38> '_Bool' lvalue Var 0x55d4baefeb78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf02ce8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf02ca0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf02c70 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf02d18 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf02d00 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf02cc8 <col:66> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d4baf03060 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf02d98 <col:3> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf03048 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf03018 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d4baf02f38 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d4baf02e58 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d4baf02e10 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d4baf02df8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d4baf02db8 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d4baf02e40 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d4baf02e28 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d4baf02dd8 <col:38> '_Bool' lvalue Var 0x55d4baefeb78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55d4baf02f18 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d4baf02ed0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d4baf02eb8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d4baf02e78 <col:56> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d4baf02f00 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d4baf02ee8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d4baf02e98 <col:74> '_Bool' lvalue Var 0x55d4baefedd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf02fd0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf02f88 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf02f58 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf03000 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf02fe8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf02fb0 <col:102> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55d4baf03268 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf03080 <col:3> '_Bool' lvalue Var 0x55d4baefeb78 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf03250 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf03220 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d4baf03140 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d4baf030f8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d4baf030e0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d4baf030a0 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d4baf03128 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d4baf03110 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d4baf030c0 <col:38> '_Bool' lvalue Var 0x55d4baefeb78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf031d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf03190 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf03160 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf03208 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf031f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf031b8 <col:66> '_Bool' lvalue Var 0x55d4baefeb78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55d4baf03550 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf03288 <col:3> '_Bool' lvalue Var 0x55d4baefedd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf03538 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf03508 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d4baf03428 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d4baf03348 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d4baf03300 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d4baf032e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d4baf032a8 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d4baf03330 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d4baf03318 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d4baf032c8 <col:38> '_Bool' lvalue Var 0x55d4baefeb78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55d4baf03408 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d4baf033c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d4baf033a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d4baf03368 <col:56> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d4baf033f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d4baf033d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d4baf03388 <col:74> '_Bool' lvalue Var 0x55d4baefedd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf034c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf03478 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf03448 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf034f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf034d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf034a0 <col:102> '_Bool' lvalue Var 0x55d4baefedd0 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55d4baf035a8 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf03590 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf03570 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf03600 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf035e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf035c8 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf036b8 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d4baf03620 <col:3> 'int' lvalue Var 0x55d4baefe278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d4baf03698 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d4baf03680 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf03640 <col:22> 'int' lvalue Var 0x55d4baefe278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d4baf03660 <col:41> 'int' 1
|   |-CallExpr 0x55d4baf03710 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf036f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf036d8 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d4baf03788 <line:780:3, col:36>
|     `-CallExpr 0x55d4baf03768 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d4baf03750 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d4baf03730 <col:10> 'void *(void)' Function 0x55d4baea4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d4baf038e0 prev 0x55d4baefdef8 <line:782:1, line:817:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55d4baf03848 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d4baf075e8 <line:783:1, line:817:1>
|   |-CallExpr 0x55d4baf039c0 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf039a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf03988 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf03a20 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55d4baf039e0 <col:3> 'int' lvalue Var 0x55d4baeff560 'z' 'int'
|   | `-IntegerLiteral 0x55d4baf03a00 <col:7> 'int' 1
|   |-CallExpr 0x55d4baf03a78 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf03a60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf03a40 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf03ad0 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf03ab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf03a98 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf03b68 <line:788:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d4baf03af0 <col:3> 'int' lvalue Var 0x55d4baefe5d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d4baf03b50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baf03b10 <col:25> 'int' lvalue Var 0x55d4baeff560 'z' 'int'
|   |-CallExpr 0x55d4baf03bc0 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf03ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf03b88 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf03c18 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf03c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf03be0 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf03cc8 <line:791:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf03c38 <col:3> '_Bool' lvalue Var 0x55d4baeff5f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf03cb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55d4baf03c90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55d4baf03c78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55d4baf03c58 <col:19> 'void *(void)' Function 0x55d4baea4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55d4baf03d78 <line:792:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf03ce8 <col:3> '_Bool' lvalue Var 0x55d4baeff670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf03d60 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55d4baf03d40 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55d4baf03d28 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55d4baf03d08 <col:19> 'void *(void)' Function 0x55d4baea4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55d4baf03df0 <line:793:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf03d98 <col:3> '_Bool' lvalue Var 0x55d4baefe8b0 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf03dd8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baf03db8 <col:21> '_Bool' lvalue Var 0x55d4baeff670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55d4baf03e68 <line:794:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d4baf03e10 <col:3> 'int' lvalue Var 0x55d4baefe930 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55d4baf03e50 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baf03e30 <col:15> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   |-BinaryOperator 0x55d4baf042a0 <line:795:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55d4baf03e88 <col:3> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   | `-ConditionalOperator 0x55d4baf04270 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55d4baf04098 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55d4baf03fb8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55d4baf03ee0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55d4baf03ec8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55d4baf03ea8 <col:8> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55d4baf03f98 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55d4baf03f30 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55d4baf03f18 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55d4baf03ef8 <col:27> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55d4baf03f80 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55d4baf03f68 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55d4baf03f48 <col:46> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55d4baf04078 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55d4baf04010 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55d4baf03ff8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55d4baf03fd8 <col:65> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55d4baf04060 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55d4baf04048 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55d4baf04028 <col:84> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55d4baf04258 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf040b8 <col:101> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   |   `-ParenExpr 0x55d4baf04238 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55d4baf04208 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55d4baf04178 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d4baf04130 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d4baf04118 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d4baf040d8 <col:106> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d4baf04160 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d4baf04148 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d4baf040f8 <col:124> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55d4baf041d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d4baf04198 <col:141> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55d4baf041f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf041b8 <col:153> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x55d4baf047b0 <line:796:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d4baf042c0 <col:3> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x55d4baf04780 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d4baf04750 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d4baf04738 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d4baf042e0 <col:15> '_Bool' lvalue Var 0x55d4baeff670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d4baf04768 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf04300 <col:31> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55d4baf04718 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d4baf046e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d4baf04510 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d4baf04430 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d4baf04358 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d4baf04340 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d4baf04320 <col:45> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d4baf04410 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d4baf043a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d4baf04390 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d4baf04370 <col:64> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55d4baf043f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d4baf043e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d4baf043c0 <col:83> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d4baf044f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d4baf04488 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d4baf04470 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d4baf04450 <col:102> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55d4baf044d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d4baf044c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d4baf044a0 <col:121> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55d4baf046d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d4baf04530 <col:138> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x55d4baf046b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d4baf04680 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d4baf045f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d4baf045a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d4baf04590 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d4baf04550 <col:151> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d4baf045d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d4baf045c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d4baf04570 <col:169> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55d4baf04650 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d4baf04610 <col:186> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55d4baf04668 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d4baf04630 <col:198> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x55d4baf04ce0 <line:797:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d4baf047d0 <col:3> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x55d4baf04cb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d4baf04c80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d4baf04c68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d4baf047f0 <col:15> '_Bool' lvalue Var 0x55d4baeff670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d4baf04c98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf04810 <col:31> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x55d4baf04c48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d4baf04c18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d4baf04a20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d4baf04940 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d4baf04868 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d4baf04850 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d4baf04830 <col:45> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d4baf04920 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d4baf048b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d4baf048a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d4baf04880 <col:64> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55d4baf04908 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d4baf048f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d4baf048d0 <col:83> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d4baf04a00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d4baf04998 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d4baf04980 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d4baf04960 <col:102> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55d4baf049e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d4baf049d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d4baf049b0 <col:121> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55d4baf04c00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d4baf04a40 <col:138> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x55d4baf04be0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d4baf04bb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d4baf04b00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d4baf04ab8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d4baf04aa0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d4baf04a60 <col:151> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d4baf04ae8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d4baf04ad0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d4baf04a80 <col:169> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55d4baf04b80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d4baf04b20 <col:186> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55d4baf04b98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d4baf04b60 <col:198> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x55d4baf05288 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf04d00 <col:3> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf05270 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf05240 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d4baf051f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d4baf051e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d4baf04d20 <col:20> '_Bool' lvalue Var 0x55d4baeff670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf05228 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d4baf05210 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d4baf04d40 <col:36> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55d4baf051c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d4baf05190 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d4baf04f50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d4baf04e70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d4baf04d98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d4baf04d80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d4baf04d60 <col:55> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d4baf04e50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d4baf04de8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d4baf04dd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d4baf04db0 <col:74> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55d4baf04e38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d4baf04e20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d4baf04e00 <col:93> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d4baf04f30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d4baf04ec8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d4baf04eb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d4baf04e90 <col:112> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55d4baf04f18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d4baf04f00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d4baf04ee0 <col:131> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55d4baf05178 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d4baf05160 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d4baf04f70 <col:148> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55d4baf05140 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d4baf05110 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d4baf05030 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d4baf04fe8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d4baf04fd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d4baf04f90 <col:166> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d4baf05018 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d4baf05000 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d4baf04fb0 <col:184> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55d4baf050c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d4baf05080 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d4baf05050 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d4baf050f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d4baf050e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d4baf050a8 <col:212> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d4baf05850 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf052a8 <col:3> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf05838 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf05808 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d4baf057c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d4baf057a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d4baf052c8 <col:20> '_Bool' lvalue Var 0x55d4baeff670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf057f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d4baf057d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d4baf052e8 <col:36> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55d4baf05788 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d4baf05758 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d4baf054f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d4baf05418 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d4baf05340 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d4baf05328 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d4baf05308 <col:55> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d4baf053f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d4baf05390 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d4baf05378 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d4baf05358 <col:74> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55d4baf053e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d4baf053c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d4baf053a8 <col:93> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d4baf054d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d4baf05470 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d4baf05458 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d4baf05438 <col:112> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55d4baf054c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d4baf054a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d4baf05488 <col:131> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55d4baf05740 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d4baf05728 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d4baf05518 <col:148> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55d4baf05708 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d4baf056d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d4baf055d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d4baf05590 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d4baf05578 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d4baf05538 <col:166> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d4baf055c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d4baf055a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d4baf05558 <col:184> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55d4baf056a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d4baf05628 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d4baf055f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d4baf056c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d4baf05680 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d4baf05650 <col:219> 'int' 0
|   |-BinaryOperator 0x55d4baf05e10 <line:800:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf05870 <col:3> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf05df8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf05dc8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d4baf05d80 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d4baf05d68 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d4baf05890 <col:20> '_Bool' lvalue Var 0x55d4baeff670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf05db0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d4baf05d98 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d4baf058b0 <col:36> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55d4baf05d48 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d4baf05d18 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d4baf05ac0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d4baf059e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d4baf05908 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d4baf058f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d4baf058d0 <col:55> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d4baf059c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d4baf05958 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d4baf05940 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d4baf05920 <col:74> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55d4baf059a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d4baf05990 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d4baf05970 <col:93> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d4baf05aa0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d4baf05a38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d4baf05a20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d4baf05a00 <col:112> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55d4baf05a88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d4baf05a70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d4baf05a50 <col:131> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55d4baf05d00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d4baf05ce8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d4baf05ae0 <col:148> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55d4baf05cc8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d4baf05c98 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d4baf05bb8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d4baf05b70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d4baf05b40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d4baf05b00 <col:166> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d4baf05ba0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d4baf05b88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d4baf05b20 <col:184> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55d4baf05c50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d4baf05c08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d4baf05bd8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d4baf05c80 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d4baf05c68 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d4baf05c30 <col:212> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55d4baf063d8 <line:801:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf05e30 <col:3> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf063c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf06390 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d4baf06348 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d4baf06330 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d4baf05e50 <col:20> '_Bool' lvalue Var 0x55d4baeff670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf06378 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d4baf06360 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d4baf05e70 <col:36> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55d4baf06310 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d4baf062e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d4baf06080 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d4baf05fa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d4baf05ec8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d4baf05eb0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d4baf05e90 <col:55> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d4baf05f80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d4baf05f18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d4baf05f00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d4baf05ee0 <col:74> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55d4baf05f68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d4baf05f50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d4baf05f30 <col:93> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d4baf06060 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d4baf05ff8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d4baf05fe0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d4baf05fc0 <col:112> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55d4baf06048 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d4baf06030 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d4baf06010 <col:131> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55d4baf062c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d4baf062b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d4baf060a0 <col:148> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55d4baf06290 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d4baf06260 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d4baf06160 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d4baf06118 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d4baf06100 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d4baf060c0 <col:166> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d4baf06148 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d4baf06130 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d4baf060e0 <col:184> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55d4baf06230 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d4baf061b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d4baf06180 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d4baf06248 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d4baf06208 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d4baf061d8 <col:219> 'int' 0
|   |-BinaryOperator 0x55d4baf06450 <line:802:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d4baf063f8 <col:3> 'int' lvalue Var 0x55d4baefe6f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55d4baf06438 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d4baf06418 <col:25> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   |-BinaryOperator 0x55d4baf06580 <line:803:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55d4baf06470 <col:3> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   | `-ConditionalOperator 0x55d4baf06550 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55d4baf06508 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d4baf064f0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d4baf06490 <col:7> '_Bool' lvalue Var 0x55d4baefe8b0 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55d4baf06520 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf064b0 <col:25> 'int' lvalue Var 0x55d4baefe930 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55d4baf06538 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55d4baf064d0 <col:37> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   |-BinaryOperator 0x55d4baf06618 <line:804:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf065a0 <col:3> '_Bool' lvalue Var 0x55d4baefe8b0 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55d4baf065f0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d4baf065c0 <col:28> 'int' 0
|   |-CallExpr 0x55d4baf06670 <line:805:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf06658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf06638 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf066c8 <line:806:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf066b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf06690 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf069b0 <line:807:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55d4baf066e8 <col:3> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   | `-ConditionalOperator 0x55d4baf06980 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55d4baf067a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55d4baf06760 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55d4baf06748 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55d4baf06708 <col:7> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55d4baf06790 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55d4baf06778 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55d4baf06728 <col:25> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55d4baf06968 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf067c8 <col:42> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55d4baf06948 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55d4baf06918 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55d4baf06888 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d4baf06840 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d4baf06828 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d4baf067e8 <col:55> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d4baf06870 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d4baf06858 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d4baf06808 <col:73> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55d4baf068e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d4baf068a8 <col:90> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55d4baf06900 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf068c8 <col:102> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
|   |-BinaryOperator 0x55d4baf06bc8 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf069d0 <col:3> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf06bb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf06b80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d4baf06a90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d4baf06a48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d4baf06a30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d4baf069f0 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d4baf06a78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d4baf06a60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d4baf06a10 <col:38> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf06b28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf06ae0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf06ab0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf06b58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf06b40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf06b08 <col:66> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d4baf06eb0 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf06be8 <col:3> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf06e98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf06e68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d4baf06d88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d4baf06ca8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d4baf06c60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d4baf06c48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d4baf06c08 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d4baf06c90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d4baf06c78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d4baf06c28 <col:38> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55d4baf06d68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d4baf06d20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d4baf06d08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d4baf06cc8 <col:56> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d4baf06d50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d4baf06d38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d4baf06ce8 <col:74> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf06e20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf06dd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf06da8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf06e50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf06e38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf06e00 <col:102> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55d4baf070b8 <line:810:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf06ed0 <col:3> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf070a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf07070 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d4baf06f90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d4baf06f48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d4baf06f30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d4baf06ef0 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d4baf06f78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d4baf06f60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d4baf06f10 <col:38> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf07028 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf06fe0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf06fb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf07058 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf07040 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf07008 <col:66> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55d4baf073a0 <line:811:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d4baf070d8 <col:3> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55d4baf07388 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d4baf07358 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d4baf07278 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d4baf07198 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d4baf07150 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d4baf07138 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d4baf070f8 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d4baf07180 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d4baf07168 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d4baf07118 <col:38> '_Bool' lvalue Var 0x55d4baefebf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55d4baf07258 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d4baf07210 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d4baf071f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d4baf071b8 <col:56> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d4baf07240 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d4baf07228 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d4baf071d8 <col:74> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55d4baf07310 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d4baf072c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d4baf07298 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d4baf07340 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d4baf07328 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d4baf072f0 <col:102> '_Bool' lvalue Var 0x55d4baefee48 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55d4baf073f8 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf073e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf073c0 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d4baf07450 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d4baf07438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf07418 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d4baf07508 <line:814:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d4baf07470 <col:3> 'int' lvalue Var 0x55d4baefe278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d4baf074e8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d4baf074d0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d4baf07490 <col:22> 'int' lvalue Var 0x55d4baefe278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d4baf074b0 <col:41> 'int' 1
|   |-CallExpr 0x55d4baf07560 <line:815:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d4baf07548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d4baf07528 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d4baf075d8 <line:816:3, col:36>
|     `-CallExpr 0x55d4baf075b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d4baf075a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d4baf07580 <col:10> 'void *(void)' Function 0x55d4baea4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d4baf07720 prev 0x55d4baefdfc0 <line:818:1, line:820:1> line:818:6 fence 'void ()'
| `-CompoundStmt 0x55d4baf077c0 <line:819:1, line:820:1>
|-FunctionDecl 0x55d4baf077f0 prev 0x55d4baefe080 <line:821:1, line:823:1> line:821:6 isync 'void ()'
| `-CompoundStmt 0x55d4baf07890 <line:822:1, line:823:1>
|-FunctionDecl 0x55d4baf078c0 prev 0x55d4baefe140 <line:824:1, line:826:1> line:824:6 lwfence 'void ()'
| `-CompoundStmt 0x55d4baf07960 <line:825:1, line:826:1>
`-FunctionDecl 0x55d4baf079c8 <line:827:1, line:853:1> line:827:5 main 'int ()'
  `-CompoundStmt 0x55d4baf099f0 <line:828:1, line:853:1>
    |-DeclStmt 0x55d4baf07ae0 <line:829:3, col:17>
    | `-VarDecl 0x55d4baf07a78 <col:3, col:13> col:13 used t467 'pthread_t':'unsigned long'
    |-CallExpr 0x55d4baf07d08 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55d4baf07cf0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d4baf07af8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d4baee5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d4baf07b38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d4baf07b18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d4baf07a78 't467' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d4baf07d48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d4baf07bd0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55d4baf07ba8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d4baf07b50 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55d4baf07d60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d4baf07bf0 <col:38> 'void *(void *)' Function 0x55d4baeff788 'P0' 'void *(void *)'
    | `-ParenExpr 0x55d4baf07c70 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55d4baf07c48 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d4baf07c10 <col:51> 'int' 0
    |-DeclStmt 0x55d4baf07df0 <line:831:3, col:17>
    | `-VarDecl 0x55d4baf07d88 <col:3, col:13> col:13 used t468 'pthread_t':'unsigned long'
    |-CallExpr 0x55d4baf07f98 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55d4baf07f80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d4baf07e08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d4baee5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d4baf07e48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d4baf07e28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d4baf07d88 't468' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d4baf07fd8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d4baf07ec0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55d4baf07e98 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d4baf07e60 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55d4baf07ff0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d4baf07ee0 <col:38> 'void *(void *)' Function 0x55d4baf011c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55d4baf07f60 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55d4baf07f38 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d4baf07f00 <col:51> 'int' 0
    |-DeclStmt 0x55d4baf08080 <line:833:3, col:17>
    | `-VarDecl 0x55d4baf08018 <col:3, col:13> col:13 used t469 'pthread_t':'unsigned long'
    |-CallExpr 0x55d4baf08228 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55d4baf08210 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d4baf08098 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d4baee5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d4baf080d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d4baf080b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d4baf08018 't469' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d4baf08268 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d4baf08150 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55d4baf08128 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d4baf080f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55d4baf08280 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d4baf08170 <col:38> 'void *(void *)' Function 0x55d4baf02540 'P2' 'void *(void *)'
    | `-ParenExpr 0x55d4baf081f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55d4baf081c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d4baf08190 <col:51> 'int' 0
    |-DeclStmt 0x55d4baf08310 <line:835:3, col:17>
    | `-VarDecl 0x55d4baf082a8 <col:3, col:13> col:13 used t470 'pthread_t':'unsigned long'
    |-CallExpr 0x55d4baf084b8 <line:836:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55d4baf084a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d4baf08328 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d4baee5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d4baf08368 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d4baf08348 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d4baf082a8 't470' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d4baf084f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d4baf083e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55d4baf083b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d4baf08380 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55d4baf08510 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d4baf08400 <col:38> 'void *(void *)' Function 0x55d4baf038e0 'P3' 'void *(void *)'
    | `-ParenExpr 0x55d4baf08480 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55d4baf08458 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d4baf08420 <col:51> 'int' 0
    |-CallExpr 0x55d4baf08560 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d4baf08548 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d4baf08528 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d4baf08630 <line:838:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55d4baf08580 <col:3> '_Bool' lvalue Var 0x55d4baeff1a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55d4baf08618 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55d4baf085f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55d4baf085e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55d4baf085a0 <col:21> 'int' lvalue Var 0x55d4baefe278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55d4baf085c0 <col:41> 'int' 4
    |-CallExpr 0x55d4baf08688 <line:839:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d4baf08670 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d4baf08650 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d4baf08700 <line:840:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55d4baf086e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d4baf086a8 <col:3> 'void (int)' Function 0x55d4baea4790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55d4baf08740 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55d4baf08728 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55d4baf086c8 <col:21> '_Bool' lvalue Var 0x55d4baeff1a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55d4baf08790 <line:841:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d4baf08778 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d4baf08758 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d4baf08a78 <line:842:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55d4baf087b0 <col:3> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
    | `-ConditionalOperator 0x55d4baf08a48 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55d4baf08870 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55d4baf08828 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55d4baf08810 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55d4baf087d0 <col:7> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55d4baf08858 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55d4baf08840 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55d4baf087f0 <col:25> '_Bool' lvalue Var 0x55d4baefe9a8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55d4baf08a30 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55d4baf08890 <col:42> 'int' lvalue Var 0x55d4baefefc0 'a$w_buff0' 'int'
    |   `-ParenExpr 0x55d4baf08a10 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55d4baf089e0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55d4baf08950 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55d4baf08908 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55d4baf088f0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55d4baf088b0 <col:55> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55d4baf08938 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55d4baf08920 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55d4baf088d0 <col:73> '_Bool' lvalue Var 0x55d4baefec68 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55d4baf089b0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55d4baf08970 <col:90> 'int' lvalue Var 0x55d4baeff0b8 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55d4baf089c8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55d4baf08990 <col:102> 'int' lvalue Var 0x55d4baefe818 'a' 'int'
    |-BinaryOperator 0x55d4baf08ca8 <line:843:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55d4baf08a98 <col:3> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55d4baf08c90 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d4baf08c60 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55d4baf08b58 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55d4baf08b10 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55d4baf08af8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55d4baf08ab8 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55d4baf08b40 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55d4baf08b28 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55d4baf08ad8 <col:38> '_Bool' lvalue Var 0x55d4baefe9a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d4baf08c18 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d4baf08bd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d4baf08ba0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55d4baf08c48 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d4baf08c30 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d4baf08bf8 <col:66> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55d4baf08f90 <line:844:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55d4baf08cc8 <col:3> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55d4baf08f78 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d4baf08f48 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55d4baf08e68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55d4baf08d88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55d4baf08d40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55d4baf08d28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55d4baf08ce8 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55d4baf08d70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55d4baf08d58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55d4baf08d08 <col:38> '_Bool' lvalue Var 0x55d4baefe9a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55d4baf08e48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55d4baf08e00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55d4baf08de8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55d4baf08da8 <col:56> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55d4baf08e30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55d4baf08e18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55d4baf08dc8 <col:74> '_Bool' lvalue Var 0x55d4baefec68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d4baf08f00 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d4baf08eb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d4baf08e88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55d4baf08f30 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d4baf08f18 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d4baf08ee0 <col:102> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55d4baf09198 <line:845:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55d4baf08fb0 <col:3> '_Bool' lvalue Var 0x55d4baefe9a8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d4baf09180 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d4baf09150 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55d4baf09070 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55d4baf09028 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55d4baf09010 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55d4baf08fd0 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55d4baf09058 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55d4baf09040 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55d4baf08ff0 <col:38> '_Bool' lvalue Var 0x55d4baefe9a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d4baf09108 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d4baf090c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d4baf09090 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55d4baf09138 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d4baf09120 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d4baf090e8 <col:66> '_Bool' lvalue Var 0x55d4baefe9a8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55d4baf09480 <line:846:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55d4baf091b8 <col:3> '_Bool' lvalue Var 0x55d4baefec68 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d4baf09468 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d4baf09438 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55d4baf09358 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55d4baf09278 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55d4baf09230 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55d4baf09218 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55d4baf091d8 <col:20> '_Bool' lvalue Var 0x55d4baeff038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55d4baf09260 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55d4baf09248 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55d4baf091f8 <col:38> '_Bool' lvalue Var 0x55d4baefe9a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55d4baf09338 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55d4baf092f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55d4baf092d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55d4baf09298 <col:56> '_Bool' lvalue Var 0x55d4baeff130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55d4baf09320 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55d4baf09308 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55d4baf092b8 <col:74> '_Bool' lvalue Var 0x55d4baefec68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d4baf093f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d4baf093a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d4baf09378 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55d4baf09420 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d4baf09408 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d4baf093d0 <col:102> '_Bool' lvalue Var 0x55d4baefec68 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55d4baf094d8 <line:847:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d4baf094c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d4baf094a0 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d4baf09530 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d4baf09518 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d4baf094f8 <col:3> 'void ()' Function 0x55d4baea4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d4baf09898 <line:849:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x55d4baf09550 <col:3> '_Bool' lvalue Var 0x55d4baeff220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55d4baf09880 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55d4baf09868 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55d4baf09848 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x55d4baf09828 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x55d4baf09790 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x55d4baf096f8 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x55d4baf09660 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x55d4baf095c8 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55d4baf095b0 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55d4baf09570 <col:23> 'int' lvalue Var 0x55d4baeff320 'x' 'int'
    |         | | | | `-IntegerLiteral 0x55d4baf09590 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x55d4baf09640 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55d4baf09628 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55d4baf095e8 <col:33> 'int' lvalue Var 0x55d4baefe398 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55d4baf09608 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x55d4baf096d8 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55d4baf096c0 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55d4baf09680 <col:61> 'int' lvalue Var 0x55d4baefe4b8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55d4baf096a0 <col:84> 'int' 0
    |         | `-BinaryOperator 0x55d4baf09770 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55d4baf09758 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55d4baf09718 <col:89> 'int' lvalue Var 0x55d4baefe5d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55d4baf09738 <col:112> 'int' 1
    |         `-BinaryOperator 0x55d4baf09808 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x55d4baf097f0 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55d4baf097b0 <col:117> 'int' lvalue Var 0x55d4baefe6f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55d4baf097d0 <col:140> 'int' 0
    |-CallExpr 0x55d4baf098f0 <line:850:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d4baf098d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d4baf098b8 <col:3> 'void ()' Function 0x55d4baea4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d4baf09968 <line:851:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55d4baf09950 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d4baf09910 <col:3> 'void (int)' Function 0x55d4baea4bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55d4baf099a8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55d4baf09990 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55d4baf09930 <col:21> '_Bool' lvalue Var 0x55d4baeff220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55d4baf099e0 <line:852:3, col:10>
      `-IntegerLiteral 0x55d4baf099c0 <col:10> 'int' 0
