TranslationUnitDecl 0x557e6aaa8e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x557e6aaa96d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x557e6aaa93b0 '__int128'
|-TypedefDecl 0x557e6aaa9748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x557e6aaa93d0 'unsigned __int128'
|-TypedefDecl 0x557e6aaa9a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x557e6aaa9820 'struct __NSConstantString_tag'
|   `-Record 0x557e6aaa97a0 '__NSConstantString_tag'
|-TypedefDecl 0x557e6aaa9af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x557e6aaa9ab0 'char *'
|   `-BuiltinType 0x557e6aaa8eb0 'char'
|-TypedefDecl 0x557e6aae8650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x557e6aaa9d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x557e6aaa9bd0 'struct __va_list_tag'
|     `-Record 0x557e6aaa9b50 '__va_list_tag'
|-FunctionDecl 0x557e6aae8790 <./split_3/mix021_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x557e6aae86c0 <col:31> col:34 'int'
|-FunctionDecl 0x557e6aae8958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x557e6aae8a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x557e6aae8bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x557e6aae8b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x557e6aae8df8 <col:40, col:99>
|   |-IfStmt 0x557e6aae8dc8 <col:42, col:88>
|   | |-UnaryOperator 0x557e6aae8ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x557e6aae8c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x557e6aae8c70 <col:47> 'int' lvalue ParmVar 0x557e6aae8b38 'expression' 'int'
|   | `-CompoundStmt 0x557e6aae8db0 <col:59, col:88>
|   |   `-LabelStmt 0x557e6aae8d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x557e6aae8d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x557e6aae8d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x557e6aae8cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x557e6aae8a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x557e6aae8de0 <col:89>
|   `-ReturnStmt 0x557e6aae8de8 <col:91>
|-FunctionDecl 0x557e6aae8e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x557e6aae8f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x557e6aae9280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557e6aae8fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x557e6aae9038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x557e6aae90b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557e6aae9138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557e6aae9340 <line:10:22>
|-FunctionDecl 0x557e6ab0f390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557e6aae93b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x557e6aae9430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x557e6aae94b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557e6aae9530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557e6ab0f450 <line:13:22>
|-FunctionDecl 0x557e6ab0f700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557e6ab0f4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x557e6ab0f540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x557e6ab0f5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x557e6ab0f7b8 <line:15:22>
|-TypedefDecl 0x557e6ab0f828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x557e6aaa8f70 'unsigned char'
|-TypedefDecl 0x557e6ab0f898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x557e6aaa8f90 'unsigned short'
|-TypedefDecl 0x557e6ab0f908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x557e6aaa8fb0 'unsigned int'
|-TypedefDecl 0x557e6ab0f978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab0f9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x557e6aaa8ed0 'signed char'
|-TypedefDecl 0x557e6ab0fa58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x557e6aaa8f70 'unsigned char'
|-TypedefDecl 0x557e6ab0fac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x557e6aaa8ef0 'short'
|-TypedefDecl 0x557e6ab0fb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x557e6aaa8f90 'unsigned short'
|-TypedefDecl 0x557e6ab0fba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x557e6aaa8f10 'int'
|-TypedefDecl 0x557e6ab0fc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x557e6aaa8fb0 'unsigned int'
|-TypedefDecl 0x557e6ab0fc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab0fcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab0fd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab0fdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab0fe48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab0feb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x557e6aaa8fb0 'unsigned int'
|-TypedefDecl 0x557e6ab0ff28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x557e6aaa8fb0 'unsigned int'
|-TypedefDecl 0x557e6ab0ff98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab10008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab10078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x557e6aaa8fb0 'unsigned int'
|-TypedefDecl 0x557e6ab100e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab10158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab101c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab10238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x557e6aaa8f10 'int'
|-RecordDecl 0x557e6ab10290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x557e6ab10408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x557e6ab104c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x557e6ab10460 'struct __fsid_t' sugar
|   `-RecordType 0x557e6ab10310 '__fsid_t'
|     `-Record 0x557e6ab10290 ''
|-TypedefDecl 0x557e6ab10548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab105b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab10628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab10698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x557e6aaa8fb0 'unsigned int'
|-TypedefDecl 0x557e6ab10708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab10778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x557e6aaa8fb0 'unsigned int'
|-TypedefDecl 0x557e6ab107e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab10858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x557e6aaa8f10 'int'
|-TypedefDecl 0x557e6ab108c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x557e6aaa8f10 'int'
|-TypedefDecl 0x557e6ab10938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x557e6aaa8f10 'int'
|-TypedefDecl 0x557e6ab109a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x557e6aaa9630 'void *'
|   `-BuiltinType 0x557e6aaa8e70 'void'
|-TypedefDecl 0x557e6ab10a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab10a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab10af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab10b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab10bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab10c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab10cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab10d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab10d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab10e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab10e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab10f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x557e6ab10ed0 '__off64_t' sugar
|   |-Typedef 0x557e6ab101c8 '__off64_t'
|   `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab11000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x557e6ab10fc0 '__quad_t *'
|   `-TypedefType 0x557e6ab10f60 '__quad_t' sugar
|     |-Typedef 0x557e6ab0fd68 '__quad_t'
|     `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab11070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x557e6aaa9ab0 'char *'
|   `-BuiltinType 0x557e6aaa8eb0 'char'
|-TypedefDecl 0x557e6ab110e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab11150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x557e6aaa8fb0 'unsigned int'
|-FunctionDecl 0x557e6ab11298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x557e6ab111c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x557e6ab125e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x557e6ab125d8 <line:72:3, col:34>
|     `-CallExpr 0x557e6ab12598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x557e6ab12580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557e6ab12510 <col:10> '<builtin fn type>' Function 0x557e6ab12380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x557e6ab125c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557e6ab12530 <col:29> 'unsigned int' lvalue ParmVar 0x557e6ab111c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x557e6ab12380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x557e6ab12420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x557e6ab12490 <col:10> Implicit
| `-ConstAttr 0x557e6ab124e8 <col:10> Implicit
|-FunctionDecl 0x557e6ab12740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x557e6ab12638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x557e6ab12a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x557e6ab12a48 <line:77:3, col:34>
|     `-CallExpr 0x557e6ab12a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x557e6ab129f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557e6ab12978 <col:10> '<builtin fn type>' Function 0x557e6ab127e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x557e6ab12a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x557e6ab12998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x557e6ab12638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x557e6ab127e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x557e6ab12888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x557e6ab128f8 <col:10> Implicit
| `-ConstAttr 0x557e6ab12950 <col:10> Implicit
|-TypedefDecl 0x557e6ab12a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-TypedefDecl 0x557e6ab12b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x557e6ab12ae0 '__time_t' sugar
|   |-Typedef 0x557e6ab10708 '__time_t'
|   `-BuiltinType 0x557e6aaa8f30 'long'
|-RecordDecl 0x557e6ab12b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x557e6ab12c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x557e6ab12cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x557e6ab12d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x557e6ab12d10 '__pid_t' sugar
|   |-Typedef 0x557e6ab10238 '__pid_t'
|   `-BuiltinType 0x557e6aaa8f10 'int'
|-RecordDecl 0x557e6ab12da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x557e6ab12e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x557e6ab12eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x557e6ab12f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x557e6ab12fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-RecordDecl 0x557e6ab13030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x557e6ab132c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x557e6ab143a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x557e6ab13310 'struct cpu_set_t' sugar
|   `-RecordType 0x557e6ab130b0 'cpu_set_t'
|     `-Record 0x557e6ab13030 ''
|-FunctionDecl 0x557e6ab14678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x557e6ab14448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557e6ab14550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x557e6ab14728 <line:107:19>
|-FunctionDecl 0x557e6ab14900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x557e6ab14790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x557e6ab149a8 <col:69>
|-FunctionDecl 0x557e6ab14b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x557e6ab14a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x557e6ab14bc8 <col:64>
|-FunctionDecl 0x557e6ab14e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x557e6ab14c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557e6ab14d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557e6ab14f38 <line:113:22>
|-FunctionDecl 0x557e6ab151b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x557e6ab14fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557e6ab15098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x557e6ab15268 <col:88>
|-FunctionDecl 0x557e6ab15588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557e6ab152d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557e6ab153b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x557e6ab15440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557e6ab15640 <col:62>
|-FunctionDecl 0x557e6ab157b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x557e6ab156a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x557e6ab15860 <col:63>
|-FunctionDecl 0x557e6ab15988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x557e6ab15a28 <col:47>
|-FunctionDecl 0x557e6ab15b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x557e6ab15a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557e6ab15bd8 <col:69>
|-FunctionDecl 0x557e6ab15ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x557e6ab15c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557e6ab15d88 <col:69>
|-FunctionDecl 0x557e6ab16048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557e6ab15df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557e6ab15f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x557e6ab160f8 <col:88>
|-TypedefDecl 0x557e6ab16188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x557e6ab16150 '__clock_t' sugar
|   |-Typedef 0x557e6ab10548 '__clock_t'
|   `-BuiltinType 0x557e6aaa8f30 'long'
|-TypedefDecl 0x557e6ab16218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x557e6ab161e0 '__clockid_t' sugar
|   |-Typedef 0x557e6ab10938 '__clockid_t'
|   `-BuiltinType 0x557e6aaa8f10 'int'
|-TypedefDecl 0x557e6ab162a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x557e6ab16270 '__timer_t' sugar
|   |-Typedef 0x557e6ab109a8 '__timer_t'
|   `-PointerType 0x557e6aaa9630 'void *'
|     `-BuiltinType 0x557e6aaa8e70 'void'
|-RecordDecl 0x557e6ab16300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x557e6ab163d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x557e6ab16440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x557e6ab164a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x557e6ab16510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x557e6ab16578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x557e6ab165e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x557e6ab16648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x557e6ab166b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x557e6ab16718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x557e6ab16780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x557e6ab167e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x557e6ab16838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x557e6ab16908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x557e6ab16978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x557e6ab16a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x557e6ab16bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x557e6ab16c90 <col:45>
|-FunctionDecl 0x557e6ab16e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x557e6ab16d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x557e6ab16f18 <col:54>
|-FunctionDecl 0x557e6ab17118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x557e6ab16f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x557e6ab16ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x557e6ab171c8 <line:157:22>
| `-ConstAttr 0x557e6ab17220 <col:63>
|-FunctionDecl 0x557e6ab18050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557e6ab17318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557e6ab180f8 <col:56>
|-FunctionDecl 0x557e6ab184a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x557e6ab18168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x557e6ab181e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557e6ab18260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x557e6ab18358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x557e6ab18560 <col:54>
|-RecordDecl 0x557e6ab185b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x557e6ab18668 parent 0x557e6aaa8e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x557e6ab188c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x557e6ab18968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x557e6ab189d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x557e6ab18a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x557e6ab18b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x557e6ab18c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x557e6ab18bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x557e6ab18b80 'struct __locale_struct' sugar
|     `-RecordType 0x557e6ab18640 'struct __locale_struct'
|       `-Record 0x557e6ab185b8 '__locale_struct'
|-TypedefDecl 0x557e6ab18cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x557e6ab18cc0 '__locale_t' sugar
|   |-Typedef 0x557e6ab18c48 '__locale_t'
|   `-PointerType 0x557e6ab18bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x557e6ab18b80 'struct __locale_struct' sugar
|       `-RecordType 0x557e6ab18640 'struct __locale_struct'
|         `-Record 0x557e6ab185b8 '__locale_struct'
|-FunctionDecl 0x557e6ab1a110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x557e6ab18d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x557e6ab18de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557e6ab18e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x557e6ab18ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557e6ab18f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x557e6ab1a1d8 <col:40>
|-FunctionDecl 0x557e6ab1a3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557e6ab1a2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x557e6ab1a470 <col:66>
|-FunctionDecl 0x557e6ab1a580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557e6ab1a4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x557e6ab1a628 <col:69>
|-FunctionDecl 0x557e6ab1a858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557e6ab1a690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557e6ab1a720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557e6ab1a908 <col:52>
|-FunctionDecl 0x557e6ab1aab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557e6ab1a970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557e6ab1aa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557e6ab1ab60 <col:55>
|-FunctionDecl 0x557e6ab1acf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x557e6ab1abe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x557e6ab1ada0 <col:62>
|-FunctionDecl 0x557e6ab1af18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x557e6ab1ae08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x557e6ab1afc0 <col:60>
|-FunctionDecl 0x557e6ab1b2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557e6ab1b118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557e6ab1b198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x557e6ab1b368 <col:44>
|-FunctionDecl 0x557e6ab1b578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557e6ab1b3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557e6ab1b450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x557e6ab1b628 <col:49>
|-VarDecl 0x557e6ab1b728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x557e6ab1b7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x557e6ab1b828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x557e6ab1b8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x557e6ab1ba20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x557e6ab1bac0 <col:42>
|-VarDecl 0x557e6ab1bb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x557e6ab1bbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x557e6ab1bd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x557e6ab1bc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x557e6ab1bde0 <col:57>
|-FunctionDecl 0x557e6ab1bef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557e6ab1be60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557e6ab1bf98 <col:56>
|-FunctionDecl 0x557e6ab1c0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557e6ab1c018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x557e6ab1c178 <col:59>
|-FunctionDecl 0x557e6ab1c280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x557e6ab1c1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x557e6ab1c328 <col:48>
| `-ConstAttr 0x557e6ab1c380 <col:89>
|-FunctionDecl 0x557e6ab1c5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557e6ab1c438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x557e6ab1c4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x557e6ab1c848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557e6ab1c6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557e6ab1c768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x557e6ab1c8f8 <col:88>
|-FunctionDecl 0x557e6ab1ca90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557e6ab1c960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557e6ab1c9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x557e6ab1cb40 <col:88>
|-FunctionDecl 0x557e6ab1cd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x557e6ab1cba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557e6ab1cc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x557e6ab1ce08 <line:208:22>
|-FunctionDecl 0x557e6ab1d178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557e6ab1ce70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557e6ab1cef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x557e6ab1cf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x557e6ab1d010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x557e6ab1d478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x557e6ab1d278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x557e6ab1d350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x557e6ab1d528 <col:85>
|-FunctionDecl 0x557e6ab1d918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x557e6ab1d590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557e6ab1d6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x557e6ab1d7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x557e6ab1d9d0 <col:52>
|-FunctionDecl 0x557e6ab1db48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x557e6ab1da38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557e6ab1dbf0 <col:61>
|-FunctionDecl 0x557e6ab1e0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x557e6ab1dc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557e6ab1dcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x557e6ab1de08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x557e6ab1def8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x557e6ab1e1b0 <col:62>
|-FunctionDecl 0x557e6ab1e3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x557e6ab1e218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557e6ab1e2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x557e6ab1e478 <line:221:22>
|-FunctionDecl 0x557e6ab1e578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x557e6ab1e4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557e6ab1e620 <col:65>
|-TypedefDecl 0x557e6ab1e690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x557e6aaa8fd0 'unsigned long'
|-RecordDecl 0x557e6ab1e6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x557e6ab1e830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557e6ab1e898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557e6ab1e948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x557e6ab1e8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x557e6ab1e770 'union pthread_attr_t'
|     `-Record 0x557e6ab1e6e8 'pthread_attr_t'
|-RecordDecl 0x557e6ab1e9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x557e6ab1eb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x557e6ab1eb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x557e6ab1ec40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x557e6ab1ebe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x557e6ab1ea20 'struct __pthread_internal_list'
|     `-Record 0x557e6ab1e9a0 '__pthread_internal_list'
|-RecordDecl 0x557e6ab1ecb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x557e6ab1ed58 parent 0x557e6aaa8e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x557e6ab1ee30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557e6ab1ee98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x557e6ab1ef00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x557e6ab1ef68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x557e6ab1efd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x557e6ab1f038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x557e6ab23110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x557e6ab231c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x557e6ab232b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x557e6ab23318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557e6ab234a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x557e6ab23440 'union pthread_mutex_t' sugar
|   `-RecordType 0x557e6ab1ed30 'pthread_mutex_t'
|     `-Record 0x557e6ab1ecb0 ''
|-RecordDecl 0x557e6ab23510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x557e6ab23650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557e6ab236b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557e6ab23770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x557e6ab23710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x557e6ab23590 'pthread_mutexattr_t'
|     `-Record 0x557e6ab23510 ''
|-RecordDecl 0x557e6ab237e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x557e6ab23888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x557e6ab23950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557e6ab239b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x557e6ab23a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x557e6ab23a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x557e6ab23af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x557e6ab23b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x557e6ab23bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x557e6ab23c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x557e6ab23ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_3/mix021_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_3/mix021_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x557e6ab23dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x557e6ab23e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x557e6ab23f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x557e6ab23f10 'union pthread_cond_t' sugar
|   `-RecordType 0x557e6ab23860 'pthread_cond_t'
|     `-Record 0x557e6ab237e0 ''
|-RecordDecl 0x557e6ab23fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x557e6ab25130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557e6ab25198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557e6ab25250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x557e6ab251f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x557e6ab24060 'pthread_condattr_t'
|     `-Record 0x557e6ab23fe0 ''
|-TypedefDecl 0x557e6ab252d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x557e6aaa8fb0 'unsigned int'
|-TypedefDecl 0x557e6ab25348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x557e6aaa8f10 'int'
|-RecordDecl 0x557e6ab253a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x557e6ab25448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x557e6ab25510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557e6ab25578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x557e6ab255e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x557e6ab25648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x557e6ab256b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x557e6ab25718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x557e6ab25780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x557e6ab257e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x557e6ab25850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x557e6ab258b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x557e6ab25920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x557e6ab259d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_3/mix021_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_3/mix021_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x557e6ab25a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557e6ab25ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557e6ab25c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x557e6ab25bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x557e6ab25420 'pthread_rwlock_t'
|     `-Record 0x557e6ab253a0 ''
|-RecordDecl 0x557e6ab25ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x557e6ab25de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x557e6ab25e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557e6ab25f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x557e6ab25ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x557e6ab25d20 'pthread_rwlockattr_t'
|     `-Record 0x557e6ab25ca0 ''
|-TypedefDecl 0x557e6ab25f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x557e6aaa8f14 'volatile int' volatile
|   `-BuiltinType 0x557e6aaa8f10 'int'
|-RecordDecl 0x557e6ab25fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x557e6ab27140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x557e6ab271a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557e6ab27260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x557e6ab27200 'union pthread_barrier_t' sugar
|   `-RecordType 0x557e6ab26060 'pthread_barrier_t'
|     `-Record 0x557e6ab25fe0 ''
|-RecordDecl 0x557e6ab272d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x557e6ab273d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557e6ab27438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557e6ab274f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x557e6ab27490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x557e6ab27350 'pthread_barrierattr_t'
|     `-Record 0x557e6ab272d0 ''
|-TypedefDecl 0x557e6ab27608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x557e6ab275a0 'long [8]' 8 
|   `-BuiltinType 0x557e6aaa8f30 'long'
|-EnumDecl 0x557e6ab27660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x557e6ab27728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x557e6ab27778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x557e6ab277c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x557e6ab27898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x557e6ab278e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x557e6ab27938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x557e6ab27988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x557e6ab27a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x557e6ab279f8 <col:26> 'int'
| |   `-DeclRefExpr 0x557e6ab279d8 <col:26> 'int' EnumConstant 0x557e6ab27898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x557e6ab27a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x557e6ab27a80 <col:29> 'int'
| |   `-DeclRefExpr 0x557e6ab27a60 <col:29> 'int' EnumConstant 0x557e6ab278e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x557e6ab27b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x557e6ab27b08 <col:30> 'int'
| |   `-DeclRefExpr 0x557e6ab27ae8 <col:30> 'int' EnumConstant 0x557e6ab27938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x557e6ab27ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x557e6ab27b90 <col:27> 'int'
|     `-DeclRefExpr 0x557e6ab27b70 <col:27> 'int' EnumConstant 0x557e6ab27a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x557e6ab27bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x557e6ab27cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x557e6ab27d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x557e6ab27d38 <col:30> 'int'
| |   `-DeclRefExpr 0x557e6ab27d18 <col:30> 'int' EnumConstant 0x557e6ab27cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x557e6ab27da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x557e6ab27e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x557e6ab27e10 <col:29> 'int'
|     `-DeclRefExpr 0x557e6ab27df0 <col:29> 'int' EnumConstant 0x557e6ab27da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x557e6ab27e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x557e6ab27f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x557e6ab27f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x557e6ab27fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x557e6ab28038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x557e6ab28150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x557e6ab281a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x557e6ab281f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x557e6ab28278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x557e6ab28260 <col:31> 'int'
|     `-DeclRefExpr 0x557e6ab28240 <col:31> 'int' EnumConstant 0x557e6ab28150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x557e6ab282c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x557e6ab28398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x557e6ab283e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x557e6ab28438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x557e6ab28508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x557e6ab28558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x557e6ab285a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x557e6ab28678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x557e6ab286c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x557e6ab28718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x557e6ab28958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x557e6ab289c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x557e6ab28a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x557e6ab28b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x557e6ab28b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x557e6ab28c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x557e6ab28cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x557e6ab28d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x557e6ab28dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x557e6ab28e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x557e6ab29488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x557e6ab28f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x557e6ab29030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557e6ab29270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x557e6ab292f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x557e6ab29548 <col:47>
| |-NonNullAttr 0x557e6ab295a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x557e6ab295d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x557e6ab29700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x557e6ab29630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x557e6ab29958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x557e6ab297b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x557e6ab29838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x557e6ab29b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x557e6ab29a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x557e6ab29bd0 <col:60>
|-FunctionDecl 0x557e6ab29d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x557e6ab29dc0 <col:54>
| `-ConstAttr 0x557e6ab29e18 <col:95>
|-FunctionDecl 0x557e6ab29fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x557e6ab29e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557e6ab29ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x557e6ab2a098 <line:394:19>
| `-ConstAttr 0x557e6ab2a0f0 <col:60>
|-FunctionDecl 0x557e6ab2bb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557e6ab2b9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557e6ab2bbb0 <col:71>
| `-NonNullAttr 0x557e6ab2bc08 <col:112, col:126> 1
|-FunctionDecl 0x557e6ab2bd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557e6ab2bc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557e6ab2bdb8 <line:397:22>
| `-NonNullAttr 0x557e6ab2be10 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab2c038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x557e6ab2be58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557e6ab2bed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x557e6ab2c0e8 <line:400:22>
| `-NonNullAttr 0x557e6ab2c140 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab2c348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab2c188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557e6ab2c208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x557e6ab2c3f8 <line:403:22>
| `-NonNullAttr 0x557e6ab2c450 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab2c6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x557e6ab2c498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557e6ab2c540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x557e6ab2c758 <line:406:22>
| `-NonNullAttr 0x557e6ab2c7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab2d9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557e6ab2c7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557e6ab2c870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557e6ab2da98 <line:409:22>
| `-NonNullAttr 0x557e6ab2daf0 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab2dd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557e6ab2db38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557e6ab2dbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557e6ab2ddd8 <line:412:22>
| `-NonNullAttr 0x557e6ab2de30 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab2e068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557e6ab2de78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x557e6ab2df08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x557e6ab2e118 <col:37>
| `-NonNullAttr 0x557e6ab2e170 <col:78, col:95> 1 2
|-FunctionDecl 0x557e6ab2e358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab2e1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557e6ab2e238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x557e6ab2e408 <line:418:22>
| `-NonNullAttr 0x557e6ab2e460 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab2e5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab2e4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557e6ab2e528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x557e6ab2e698 <line:420:22>
| `-NonNullAttr 0x557e6ab2e6f0 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab2e898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab2e738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557e6ab2e7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x557e6ab2e948 <line:423:22>
| `-NonNullAttr 0x557e6ab2e9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab2eb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab2ea08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557e6ab2ea88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x557e6ab2ebf8 <line:426:22>
| `-NonNullAttr 0x557e6ab2ec50 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab2edf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab2ec98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557e6ab2ed18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x557e6ab2eea8 <line:429:22>
| `-NonNullAttr 0x557e6ab2ef00 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab2f088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab2ef48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557e6ab2efc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x557e6ab2f138 <line:431:22>
| `-NonNullAttr 0x557e6ab2f190 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab2f3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x557e6ab2f1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557e6ab2f258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x557e6ab2f468 <line:434:22>
| |-NonNullAttr 0x557e6ab2f4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x557e6ab2f4f8 <col:100> "" ""
|-FunctionDecl 0x557e6ab2f708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x557e6ab2f548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557e6ab2f5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x557e6ab2f7b8 <line:437:22>
| |-NonNullAttr 0x557e6ab2f810 <col:63, col:77> 1
| `-DeprecatedAttr 0x557e6ab2f848 <col:97> "" ""
|-FunctionDecl 0x557e6ab2fa48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557e6ab2f898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557e6ab2f910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557e6ab2faf8 <line:440:22>
| `-NonNullAttr 0x557e6ab2fb50 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab2fcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557e6ab2fb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557e6ab2fc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557e6ab2fd80 <line:443:22>
| `-NonNullAttr 0x557e6ab2fdd8 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab300c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557e6ab2fe28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557e6ab2fea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x557e6ab2ff20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557e6ab30180 <line:447:22>
| `-NonNullAttr 0x557e6ab301d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x557e6ab30488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x557e6ab30230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557e6ab302b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x557e6ab30328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557e6ab30540 <col:43>
| `-NonNullAttr 0x557e6ab30598 <col:84, col:98> 1
|-FunctionDecl 0x557e6ab30858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557e6ab305e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557e6ab30668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x557e6ab306f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x557e6ab30910 <line:452:22>
| `-NonNullAttr 0x557e6ab30968 <col:63, col:77> 3
|-FunctionDecl 0x557e6ab30c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557e6ab309e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557e6ab30a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x557e6ab30af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557e6ab30d30 <line:456:22>
| `-NonNullAttr 0x557e6ab30d88 <col:63, col:80> 2 3
|-FunctionDecl 0x557e6ab30f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x557e6ab30dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557e6ab30e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x557e6ab31028 <line:458:22>
|-FunctionDecl 0x557e6ab313f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x557e6ab310f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x557e6ab31290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x557e6ab314a8 <col:52, col:69> 1 2
|-FunctionDecl 0x557e6ab31650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x557e6ab31530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x557e6ab315b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x557e6ab31838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x557e6ab31718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x557e6ab31798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x557e6ab319f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x557e6ab318f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x557e6ab31b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x557e6ab31bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x557e6ab31c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x557e6ab31d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x557e6ab31dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x557e6ab31fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_3/mix021_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x557e6ab32098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x557e6ab32150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x557e6ab320f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x557e6ab31c50 '__pthread_unwind_buf_t'
| |   `-Record 0x557e6ab31bd0 ''
| `-AlignedAttr 0x557e6ab321a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x557e6ab32220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x557e6ab32380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x557e6ab323e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x557e6ab32450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x557e6ab324b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x557e6ab326c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557e6ab325b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557e6ab32808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557e6ab32778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557e6ab32a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557e6ab328c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x557e6ab32aa8 <line:487:22>
|-RecordDecl 0x557e6ab32b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x557e6ab32e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x557e6ab32c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x557e6ab32cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x557e6ab32ec8 <col:86>
| `-ReturnsTwiceAttr 0x557e6ab32f20 <col:12> Implicit
|-FunctionDecl 0x557e6ab33248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557e6ab32ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x557e6ab33100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x557e6ab332f8 <line:493:22>
| `-NonNullAttr 0x557e6ab33350 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab334c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557e6ab33398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557e6ab33570 <line:495:22>
| `-NonNullAttr 0x557e6ab335c8 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab336d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557e6ab33618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557e6ab33778 <line:497:22>
| `-NonNullAttr 0x557e6ab337d0 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab338d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557e6ab33818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557e6ab33978 <line:499:22>
| `-NonNullAttr 0x557e6ab339d0 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab34c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557e6ab34a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557e6ab34ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557e6ab34cd8 <col:36>
| `-NonNullAttr 0x557e6ab34d30 <col:66, col:83> 1 2
|-FunctionDecl 0x557e6ab34e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557e6ab34d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557e6ab34ed8 <line:504:22>
| `-NonNullAttr 0x557e6ab34f30 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab351c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab34fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557e6ab35060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557e6ab35278 <line:508:22>
| `-NonNullAttr 0x557e6ab352d0 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab35598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab35318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557e6ab35398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x557e6ab35418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x557e6ab35650 <line:512:22>
| `-NonNullAttr 0x557e6ab356a8 <col:63, col:80> 1 3
|-FunctionDecl 0x557e6ab357b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557e6ab356f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557e6ab35858 <line:514:22>
| `-NonNullAttr 0x557e6ab358b0 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab35ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557e6ab35960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557e6ab35b80 <line:516:22>
| `-NonNullAttr 0x557e6ab35bd8 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab35ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557e6ab35c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557e6ab35d88 <line:518:22>
| `-NonNullAttr 0x557e6ab35de0 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab36008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab35e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557e6ab35ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x557e6ab360b8 <line:522:22>
| `-NonNullAttr 0x557e6ab36110 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab36318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab36158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557e6ab361d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x557e6ab363c8 <line:525:22>
| `-NonNullAttr 0x557e6ab36420 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab365c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab36468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557e6ab364e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x557e6ab36678 <line:528:22>
| `-NonNullAttr 0x557e6ab366d0 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab36858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab36718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557e6ab36798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x557e6ab36908 <line:530:22>
| `-NonNullAttr 0x557e6ab36960 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab36b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab369a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557e6ab36a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x557e6ab36bd0 <line:534:22>
| `-NonNullAttr 0x557e6ab36c28 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab36db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab36c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557e6ab36cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x557e6ab36e68 <line:537:22>
| `-NonNullAttr 0x557e6ab36ec0 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab37068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab36f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557e6ab36f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557e6ab37118 <line:541:22>
| `-NonNullAttr 0x557e6ab37170 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab372f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab371b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557e6ab37238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x557e6ab373a8 <line:544:22>
| `-NonNullAttr 0x557e6ab37400 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab375e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x557e6ab37448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x557e6ab374c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x557e6ab37698 <line:547:22>
| `-NonNullAttr 0x557e6ab376f0 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab37878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab37738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557e6ab377b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x557e6ab37928 <line:550:22>
| `-NonNullAttr 0x557e6ab37980 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab38cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x557e6ab38aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557e6ab38bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x557e6ab38da8 <col:29>
| `-NonNullAttr 0x557e6ab38e00 <col:70, col:84> 1
|-FunctionDecl 0x557e6ab38f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557e6ab38e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557e6ab39020 <line:555:22>
| `-NonNullAttr 0x557e6ab39078 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab39180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557e6ab390c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557e6ab39228 <line:557:22>
| `-NonNullAttr 0x557e6ab39280 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab39380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557e6ab392c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557e6ab39428 <line:559:19>
| `-NonNullAttr 0x557e6ab39480 <col:49, col:63> 1
|-FunctionDecl 0x557e6ab396b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557e6ab394c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557e6ab39558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557e6ab39768 <col:39>
| `-NonNullAttr 0x557e6ab397c0 <col:69, col:86> 1 2
|-FunctionDecl 0x557e6ab398c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557e6ab39808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557e6ab39968 <line:564:22>
| `-NonNullAttr 0x557e6ab399c0 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab39b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557e6ab39a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557e6ab39bd0 <line:566:22>
| `-NonNullAttr 0x557e6ab39c28 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab39de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557e6ab39c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557e6ab39d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557e6ab39e98 <col:39>
| `-NonNullAttr 0x557e6ab39ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x557e6ab39ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557e6ab39f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557e6ab3a098 <line:571:22>
| `-NonNullAttr 0x557e6ab3a0f0 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab3a2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557e6ab3a1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557e6ab3a380 <line:573:22>
| `-NonNullAttr 0x557e6ab3a3d8 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3a4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557e6ab3a428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557e6ab3a588 <line:575:22>
| `-NonNullAttr 0x557e6ab3a5e0 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3a808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab3a628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557e6ab3a6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x557e6ab3a8b8 <line:579:22>
| `-NonNullAttr 0x557e6ab3a910 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab3ab38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab3a958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557e6ab3a9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x557e6ab3abe8 <line:582:22>
| `-NonNullAttr 0x557e6ab3ac40 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3ade8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab3ac88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557e6ab3ad08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x557e6ab3ae98 <line:586:22>
| `-NonNullAttr 0x557e6ab3aef0 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab3b078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab3af38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557e6ab3afb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x557e6ab3b128 <col:36>
| `-NonNullAttr 0x557e6ab3b180 <col:77, col:91> 1
|-FunctionDecl 0x557e6ab3b4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x557e6ab3b260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557e6ab3b370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x557e6ab3b568 <line:591:22>
| `-NonNullAttr 0x557e6ab3b5c0 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3b738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557e6ab3b608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557e6ab3b7e0 <line:593:22>
| `-NonNullAttr 0x557e6ab3b838 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3b940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557e6ab3b888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557e6ab3b9e8 <line:595:22>
| `-NonNullAttr 0x557e6ab3ba40 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab3bb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557e6ab3baa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557e6ab3bc00 <line:597:22>
| `-NonNullAttr 0x557e6ab3bc58 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab3be88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x557e6ab3bca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557e6ab3bd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x557e6ab3bf38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x557e6ab3c268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557e6ab3bfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557e6ab3c030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557e6ab3c0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x557e6ab3c320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x557e6ab3c538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557e6ab3c400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557e6ab3c5e0 <line:606:22>
| `-NonNullAttr 0x557e6ab3c638 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3c740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557e6ab3c688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557e6ab3c7e8 <line:608:22>
| `-NonNullAttr 0x557e6ab3c840 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3caa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab3c888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557e6ab3c908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x557e6ab3cb50 <line:612:22>
| `-NonNullAttr 0x557e6ab3cba8 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab3cdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab3cbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557e6ab3cc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x557e6ab3ce68 <col:37>
| `-NonNullAttr 0x557e6ab3cec0 <col:78, col:92> 1
|-FunctionDecl 0x557e6ab3d0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x557e6ab3cf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557e6ab3cfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x557e6ab3d188 <line:618:22>
| `-NonNullAttr 0x557e6ab3d1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab3d3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x557e6ab3d228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557e6ab3d2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x557e6ab3d458 <line:621:22>
| `-NonNullAttr 0x557e6ab3d4b0 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3d758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x557e6ab3d590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x557e6ab3d610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x557e6ab3d808 <line:623:22>
| `-NonNullAttr 0x557e6ab3d860 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3d9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557e6ab3d8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557e6ab3dab0 <line:625:22>
| `-NonNullAttr 0x557e6ab3db08 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3dc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557e6ab3db58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557e6ab3dcb8 <line:627:22>
| `-NonNullAttr 0x557e6ab3dd10 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab3de10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557e6ab3dd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557e6ab3deb8 <line:629:22>
| `-NonNullAttr 0x557e6ab3df10 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab3e010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557e6ab3df58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557e6ab3e0b8 <line:631:22>
| `-NonNullAttr 0x557e6ab3e110 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab3e4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x557e6ab3e1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x557e6ab3e300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557e6ab3e380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x557e6ab3e5a0 <line:635:22>
| `-NonNullAttr 0x557e6ab3e5f8 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3e778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557e6ab3e648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557e6ab3e820 <line:637:22>
| `-NonNullAttr 0x557e6ab3e878 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3e980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557e6ab3e8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557e6ab3ea28 <line:639:22>
| `-NonNullAttr 0x557e6ab3ea80 <col:52, col:66> 1
|-FunctionDecl 0x557e6ab3fc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557e6ab3fb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557e6ab3fd30 <line:641:22>
| `-NonNullAttr 0x557e6ab3fd88 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab3fe90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557e6ab3fdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557e6ab3ff38 <line:643:22>
| `-NonNullAttr 0x557e6ab3ff90 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab401b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557e6ab3ffd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557e6ab40058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x557e6ab40268 <line:647:22>
| `-NonNullAttr 0x557e6ab402c0 <col:63, col:80> 1 2
|-FunctionDecl 0x557e6ab404c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x557e6ab40308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x557e6ab40388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x557e6ab40578 <line:650:22>
| `-NonNullAttr 0x557e6ab405d0 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab40918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x557e6ab406b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x557e6ab407d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x557e6ab409c8 <line:653:22>
| `-NonNullAttr 0x557e6ab40a20 <col:63, col:77> 1
|-FunctionDecl 0x557e6ab40b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x557e6ab40a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557e6ab40c30 <col:69>
|-FunctionDecl 0x557e6ab40da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x557e6ab40c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557e6ab40e50 <col:72>
|-FunctionDecl 0x557e6ab41088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x557e6ab40eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x557e6ab40f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x557e6ab41138 <col:44>
|-FunctionDecl 0x557e6ab41358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x557e6ab411a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557e6ab41218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x557e6ab41408 <line:660:22>
| `-NonNullAttr 0x557e6ab41460 <col:63, col:77> 2
|-FunctionDecl 0x557e6ab418a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x557e6ab41540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x557e6ab41650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x557e6ab41760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x557e6ab41960 <col:47>
|-FunctionDecl 0x557e6ab41af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x557e6ab419d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557e6ab41c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x557e6ab41bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557e6ab41da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x557e6ab41d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557e6ab41ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x557e6ab41e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557e6ab41fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x557e6ab42080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x557e6ab42140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x557e6ab421f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x557e6ab42278 prev 0x557e6ab421f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x557e6ab422e0 <col:24> 'int' 0
|-VarDecl 0x557e6ab42318 <line:674:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x557e6ab42398 prev 0x557e6ab42318 <line:675:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x557e6ab42400 <col:27> 'int' 0
|-VarDecl 0x557e6ab42438 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x557e6ab424b8 prev 0x557e6ab42438 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x557e6ab42520 <col:27> 'int' 0
|-VarDecl 0x557e6ab42558 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x557e6ab425d8 prev 0x557e6ab42558 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x557e6ab42640 <col:27> 'int' 0
|-VarDecl 0x557e6ab42678 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x557e6ab426f8 prev 0x557e6ab42678 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x557e6ab42760 <col:9> 'int' 0
|-VarDecl 0x557e6ab42790 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x557e6ab42808 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x557e6ab42888 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x557e6ab42908 prev 0x557e6ab42888 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x557e6ab42970 <col:9> 'int' 0
|-VarDecl 0x557e6ab429a8 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x557e6ab42a28 prev 0x557e6ab429a8 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x557e6ab42a90 <col:9> 'int' 0
|-VarDecl 0x557e6ab42b00 <line:688:1, col:5> col:5 used z 'int'
|-VarDecl 0x557e6ab42b80 prev 0x557e6ab42b00 <line:689:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x557e6ab42be8 <col:9> 'int' 0
|-VarDecl 0x557e6ab42c18 <line:690:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x557e6ab42c98 <line:691:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x557e6ab42d10 <line:692:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x557e6ab42d88 <line:693:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x557e6ab42e00 <line:694:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x557e6ab42e78 <line:695:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x557e6ab42ef0 <line:696:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x557e6ab42f68 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x557e6ab42fe0 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x557e6ab43058 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x557e6ab430d0 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x557e6ab43148 <line:701:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x557e6ab431c0 <line:702:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x557e6ab43240 <line:703:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x557e6ab432c0 <line:704:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x557e6ab43338 <line:705:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x557e6ab433b8 <line:706:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x557e6ab43430 <line:707:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x557e6ab434a8 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x557e6ab43520 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x557e6ab43638 prev 0x557e6ab41af0 <line:710:1, line:724:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x557e6ab435a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557e6ab43c08 <line:711:1, line:724:1>
|   |-CallExpr 0x557e6ab43748 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab43730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab436e0 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab437a8 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557e6ab43768 <col:3> 'int' lvalue Var 0x557e6ab426f8 'a' 'int'
|   | `-IntegerLiteral 0x557e6ab43788 <col:7> 'int' 1
|   |-CallExpr 0x557e6ab43800 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab437e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab437c8 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab43858 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab43840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab43820 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab438b8 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557e6ab43878 <col:3> 'int' lvalue Var 0x557e6ab42908 'x' 'int'
|   | `-IntegerLiteral 0x557e6ab43898 <col:7> 'int' 1
|   |-CallExpr 0x557e6ab43910 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab438f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab438d8 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab43968 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab43950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab43930 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x557e6ab439c0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab439a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab43988 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab43a18 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab43a00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab439e0 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab43ad0 <line:721:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557e6ab43a38 <col:3> 'int' lvalue Var 0x557e6ab42278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557e6ab43ab0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557e6ab43a98 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab43a58 <col:22> 'int' lvalue Var 0x557e6ab42278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557e6ab43a78 <col:41> 'int' 1
|   |-CallExpr 0x557e6ab43b48 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab43b30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab43b10 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557e6ab43bf8 <line:723:3, col:36>
|     `-CallExpr 0x557e6ab43bd8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557e6ab43bc0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557e6ab43b68 <col:10> 'void *(void)' Function 0x557e6aae8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557e6ab43d28 prev 0x557e6ab41c48 <line:725:1, line:739:1> line:725:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x557e6ab43c90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557e6ab44270 <line:726:1, line:739:1>
|   |-CallExpr 0x557e6ab43e08 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab43df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab43dd0 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab43e68 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557e6ab43e28 <col:3> 'int' lvalue Var 0x557e6ab42908 'x' 'int'
|   | `-IntegerLiteral 0x557e6ab43e48 <col:7> 'int' 2
|   |-CallExpr 0x557e6ab43ec0 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab43ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab43e88 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab43f18 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab43f00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab43ee0 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab43f78 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557e6ab43f38 <col:3> 'int' lvalue Var 0x557e6ab42a28 'y' 'int'
|   | `-IntegerLiteral 0x557e6ab43f58 <col:7> 'int' 1
|   |-CallExpr 0x557e6ab43fd0 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab43fb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab43f98 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab44028 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab44010 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab43ff0 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x557e6ab44080 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab44068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab44048 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab440d8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab440c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab440a0 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab44190 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557e6ab440f8 <col:3> 'int' lvalue Var 0x557e6ab42278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557e6ab44170 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557e6ab44158 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab44118 <col:22> 'int' lvalue Var 0x557e6ab42278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557e6ab44138 <col:41> 'int' 1
|   |-CallExpr 0x557e6ab441e8 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab441d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab441b0 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557e6ab44260 <line:738:3, col:36>
|     `-CallExpr 0x557e6ab44240 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557e6ab44228 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557e6ab44208 <col:10> 'void *(void)' Function 0x557e6aae8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557e6ab44390 prev 0x557e6ab41da0 <line:740:1, line:767:1> line:740:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x557e6ab442f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557e6ab472b0 <line:741:1, line:767:1>
|   |-CallExpr 0x557e6ab44470 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab44458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab44438 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab444d0 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557e6ab44490 <col:3> 'int' lvalue Var 0x557e6ab42a28 'y' 'int'
|   | `-IntegerLiteral 0x557e6ab444b0 <col:7> 'int' 2
|   |-CallExpr 0x557e6ab44528 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab44510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab444f0 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab44580 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab44568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab44548 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab44630 <line:746:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab445a0 <col:3> '_Bool' lvalue Var 0x557e6ab434a8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab44618 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557e6ab445f8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557e6ab445e0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557e6ab445c0 <col:19> 'void *(void)' Function 0x557e6aae8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557e6ab446e0 <line:747:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab44650 <col:3> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab446c8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557e6ab446a8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557e6ab44690 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557e6ab44670 <col:19> 'void *(void)' Function 0x557e6aae8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557e6ab44758 <line:748:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab44700 <col:3> '_Bool' lvalue Var 0x557e6ab42c18 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab44740 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab44720 <col:21> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x557e6ab447d0 <line:749:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557e6ab44778 <col:3> 'int' lvalue Var 0x557e6ab42c98 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x557e6ab447b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab44798 <col:15> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   |-BinaryOperator 0x557e6ab44c28 <line:750:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x557e6ab447f0 <col:3> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   | `-ConditionalOperator 0x557e6ab44bf8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x557e6ab44a00 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x557e6ab44920 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x557e6ab44848 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x557e6ab44830 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x557e6ab44810 <col:8> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x557e6ab44900 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x557e6ab44898 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x557e6ab44880 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x557e6ab44860 <col:27> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x557e6ab448e8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x557e6ab448d0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x557e6ab448b0 <col:46> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x557e6ab449e0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x557e6ab44978 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x557e6ab44960 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x557e6ab44940 <col:65> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x557e6ab449c8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x557e6ab449b0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x557e6ab44990 <col:84> '_Bool' lvalue Var 0x557e6ab430d0 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x557e6ab44be0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab44a20 <col:101> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   |   `-ParenExpr 0x557e6ab44bc0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x557e6ab44b90 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x557e6ab44ae0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557e6ab44a98 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557e6ab44a80 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557e6ab44a40 <col:106> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557e6ab44ac8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557e6ab44ab0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557e6ab44a60 <col:124> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x557e6ab44b60 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557e6ab44b20 <col:141> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x557e6ab44b78 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557e6ab44b40 <col:153> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x557e6ab45138 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557e6ab44c48 <col:3> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x557e6ab45108 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557e6ab450d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557e6ab450c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557e6ab44c68 <col:15> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557e6ab450f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab44c88 <col:31> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x557e6ab450a0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557e6ab45070 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557e6ab44e98 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557e6ab44db8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557e6ab44ce0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557e6ab44cc8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557e6ab44ca8 <col:45> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557e6ab44d98 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557e6ab44d30 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557e6ab44d18 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557e6ab44cf8 <col:64> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x557e6ab44d80 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557e6ab44d68 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557e6ab44d48 <col:83> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557e6ab44e78 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557e6ab44e10 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557e6ab44df8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557e6ab44dd8 <col:102> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x557e6ab44e60 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557e6ab44e48 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557e6ab44e28 <col:121> '_Bool' lvalue Var 0x557e6ab430d0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x557e6ab45058 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557e6ab44eb8 <col:138> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x557e6ab45038 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557e6ab45008 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557e6ab44f78 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557e6ab44f30 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557e6ab44f18 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557e6ab44ed8 <col:151> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557e6ab44f60 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557e6ab44f48 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557e6ab44ef8 <col:169> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x557e6ab44fd8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557e6ab44f98 <col:186> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x557e6ab44ff0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557e6ab44fb8 <col:198> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x557e6ab45648 <line:752:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557e6ab45158 <col:3> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x557e6ab45618 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557e6ab455e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557e6ab455d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557e6ab45178 <col:15> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557e6ab45600 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab45198 <col:31> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x557e6ab455b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557e6ab45580 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557e6ab453a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557e6ab452c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557e6ab451f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557e6ab451d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557e6ab451b8 <col:45> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557e6ab452a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557e6ab45240 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557e6ab45228 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557e6ab45208 <col:64> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x557e6ab45290 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557e6ab45278 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557e6ab45258 <col:83> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557e6ab45388 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557e6ab45320 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557e6ab45308 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557e6ab452e8 <col:102> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x557e6ab45370 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557e6ab45358 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557e6ab45338 <col:121> '_Bool' lvalue Var 0x557e6ab430d0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x557e6ab45568 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557e6ab453c8 <col:138> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x557e6ab45548 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557e6ab45518 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557e6ab45488 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557e6ab45440 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557e6ab45428 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557e6ab453e8 <col:151> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557e6ab45470 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557e6ab45458 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557e6ab45408 <col:169> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x557e6ab454e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557e6ab454a8 <col:186> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x557e6ab45500 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557e6ab454c8 <col:198> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x557e6ab45c28 <line:753:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab45668 <col:3> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab45c10 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab45be0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557e6ab45b98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab45b80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab45688 <col:20> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab45bc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab45bb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab456a8 <col:36> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x557e6ab45b60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557e6ab45b30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557e6ab458b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557e6ab457d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557e6ab45700 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557e6ab456e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557e6ab456c8 <col:55> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557e6ab457b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557e6ab45750 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557e6ab45738 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557e6ab45718 <col:74> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x557e6ab457a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557e6ab45788 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557e6ab45768 <col:93> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557e6ab45898 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557e6ab45830 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557e6ab45818 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557e6ab457f8 <col:112> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x557e6ab45880 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557e6ab45868 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557e6ab45848 <col:131> '_Bool' lvalue Var 0x557e6ab430d0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x557e6ab45ae0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557e6ab45ac8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557e6ab458d8 <col:148> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x557e6ab45aa8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557e6ab45a78 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557e6ab45998 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557e6ab45950 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557e6ab45938 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557e6ab458f8 <col:166> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557e6ab45980 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557e6ab45968 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557e6ab45918 <col:184> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x557e6ab45a30 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557e6ab459e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557e6ab459b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557e6ab45a60 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557e6ab45a48 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557e6ab45a10 <col:212> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557e6ab461f0 <line:754:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab45c48 <col:3> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab461d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab461a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557e6ab46160 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab46148 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab45c68 <col:20> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab46190 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab46178 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab45c88 <col:36> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x557e6ab46128 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557e6ab460f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557e6ab45e98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557e6ab45db8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557e6ab45ce0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557e6ab45cc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557e6ab45ca8 <col:55> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557e6ab45d98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557e6ab45d30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557e6ab45d18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557e6ab45cf8 <col:74> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x557e6ab45d80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557e6ab45d68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557e6ab45d48 <col:93> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557e6ab45e78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557e6ab45e10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557e6ab45df8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557e6ab45dd8 <col:112> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x557e6ab45e60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557e6ab45e48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557e6ab45e28 <col:131> '_Bool' lvalue Var 0x557e6ab430d0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x557e6ab460e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557e6ab460c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557e6ab45eb8 <col:148> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x557e6ab460a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557e6ab46078 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557e6ab45f78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557e6ab45f30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557e6ab45f18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557e6ab45ed8 <col:166> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557e6ab45f60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557e6ab45f48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557e6ab45ef8 <col:184> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x557e6ab46048 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557e6ab45fc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557e6ab45f98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557e6ab46060 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557e6ab46020 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557e6ab45ff0 <col:219> 'int' 0
|   |-BinaryOperator 0x557e6ab46798 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab46210 <col:3> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab46780 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab46750 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557e6ab46708 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab466f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab46230 <col:20> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab46738 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab46720 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab46250 <col:36> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x557e6ab466d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557e6ab466a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557e6ab46460 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557e6ab46380 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557e6ab462a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557e6ab46290 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557e6ab46270 <col:55> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557e6ab46360 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557e6ab462f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557e6ab462e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557e6ab462c0 <col:74> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x557e6ab46348 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557e6ab46330 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557e6ab46310 <col:93> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557e6ab46440 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557e6ab463d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557e6ab463c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557e6ab463a0 <col:112> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x557e6ab46428 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557e6ab46410 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557e6ab463f0 <col:131> '_Bool' lvalue Var 0x557e6ab430d0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x557e6ab46688 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557e6ab46670 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557e6ab46480 <col:148> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x557e6ab46650 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557e6ab46620 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557e6ab46540 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557e6ab464f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557e6ab464e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557e6ab464a0 <col:166> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557e6ab46528 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557e6ab46510 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557e6ab464c0 <col:184> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x557e6ab465d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557e6ab46590 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557e6ab46560 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557e6ab46608 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557e6ab465f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557e6ab465b8 <col:212> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x557e6ab46d78 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab467b8 <col:3> '_Bool' lvalue Var 0x557e6ab430d0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab46d60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab46d30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557e6ab46ce8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab46cd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab467d8 <col:20> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab46d18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab46d00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab467f8 <col:36> '_Bool' lvalue Var 0x557e6ab430d0 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x557e6ab46cb0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557e6ab46c80 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557e6ab46a08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557e6ab46928 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557e6ab46850 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557e6ab46838 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557e6ab46818 <col:55> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557e6ab46908 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557e6ab468a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557e6ab46888 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557e6ab46868 <col:74> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x557e6ab468f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557e6ab468d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557e6ab468b8 <col:93> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557e6ab469e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557e6ab46980 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557e6ab46968 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557e6ab46948 <col:112> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x557e6ab469d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557e6ab469b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557e6ab46998 <col:131> '_Bool' lvalue Var 0x557e6ab430d0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x557e6ab46c68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557e6ab46c50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557e6ab46a28 <col:148> '_Bool' lvalue Var 0x557e6ab430d0 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x557e6ab46c30 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557e6ab46c00 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557e6ab46ae8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557e6ab46aa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557e6ab46a88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557e6ab46a48 <col:166> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557e6ab46ad0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557e6ab46ab8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557e6ab46a68 <col:184> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x557e6ab46bd0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557e6ab46b50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557e6ab46b08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557e6ab46be8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557e6ab46ba8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557e6ab46b78 <col:219> 'int' 0
|   |-BinaryOperator 0x557e6ab46df0 <line:757:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557e6ab46d98 <col:3> 'int' lvalue Var 0x557e6ab42398 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x557e6ab46dd8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab46db8 <col:25> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   |-BinaryOperator 0x557e6ab46f20 <line:758:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x557e6ab46e10 <col:3> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   | `-ConditionalOperator 0x557e6ab46ef0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x557e6ab46ea8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557e6ab46e90 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557e6ab46e30 <col:7> '_Bool' lvalue Var 0x557e6ab42c18 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x557e6ab46ec0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab46e50 <col:25> 'int' lvalue Var 0x557e6ab42c98 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x557e6ab46ed8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x557e6ab46e70 <col:37> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   |-BinaryOperator 0x557e6ab46fb8 <line:759:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab46f40 <col:3> '_Bool' lvalue Var 0x557e6ab42c18 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557e6ab46f90 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557e6ab46f60 <col:28> 'int' 0
|   |-CallExpr 0x557e6ab47010 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab46ff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab46fd8 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab47068 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab47050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab47030 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x557e6ab470c0 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab470a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab47088 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab47118 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab47100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab470e0 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab471d0 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557e6ab47138 <col:3> 'int' lvalue Var 0x557e6ab42278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557e6ab471b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557e6ab47198 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab47158 <col:22> 'int' lvalue Var 0x557e6ab42278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557e6ab47178 <col:41> 'int' 1
|   |-CallExpr 0x557e6ab47228 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab47210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab471f0 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557e6ab472a0 <line:766:3, col:36>
|     `-CallExpr 0x557e6ab47280 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557e6ab47268 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557e6ab47248 <col:10> 'void *(void)' Function 0x557e6aae8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557e6ab47438 prev 0x557e6ab41ef8 <line:768:1, line:813:1> line:768:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x557e6ab473a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557e6ab4b748 <line:769:1, line:813:1>
|   |-CallExpr 0x557e6ab47518 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab47500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab474e0 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab47590 <line:771:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557e6ab47538 <col:3> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x557e6ab47578 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab47558 <col:15> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x557e6ab475f0 <line:772:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557e6ab475b0 <col:3> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x557e6ab475d0 <col:15> 'int' 1
|   |-BinaryOperator 0x557e6ab47668 <line:773:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab47610 <col:3> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab47650 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab47630 <col:20> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557e6ab47700 <line:774:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab47688 <col:3> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x557e6ab476d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557e6ab476a8 <col:27> 'int' 1
|   |-CallExpr 0x557e6ab47888 <line:775:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x557e6ab47870 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x557e6ab47720 <col:3> 'void (int)' Function 0x557e6aae8bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x557e6ab47820 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x557e6ab47800 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x557e6ab477e0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x557e6ab47798 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x557e6ab47780 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x557e6ab47740 <col:23> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x557e6ab477c8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x557e6ab477b0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x557e6ab47760 <col:41> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557e6ab47908 <line:776:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab478b0 <col:3> '_Bool' lvalue Var 0x557e6ab42f68 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab478f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab478d0 <col:20> '_Bool' lvalue Var 0x557e6ab42d10 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x557e6ab47980 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab47928 <col:3> '_Bool' lvalue Var 0x557e6ab42fe0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab47968 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab47948 <col:20> '_Bool' lvalue Var 0x557e6ab42d88 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557e6ab479f8 <line:778:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab479a0 <col:3> '_Bool' lvalue Var 0x557e6ab43058 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab479e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab479c0 <col:20> '_Bool' lvalue Var 0x557e6ab42e00 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557e6ab47a70 <line:779:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab47a18 <col:3> '_Bool' lvalue Var 0x557e6ab430d0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab47a58 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab47a38 <col:20> '_Bool' lvalue Var 0x557e6ab42e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x557e6ab47ae8 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab47a90 <col:3> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab47ad0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab47ab0 <col:20> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x557e6ab47ba8 <line:781:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab47b08 <col:3> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x557e6ab47b80 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557e6ab47b50 <col:27> 'int' 1
|   |-CallExpr 0x557e6ab47c00 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab47be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab47bc8 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab47c58 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab47c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab47c20 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab47d08 <line:784:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab47c78 <col:3> '_Bool' lvalue Var 0x557e6ab434a8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab47cf0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557e6ab47cd0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557e6ab47cb8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557e6ab47c98 <col:19> 'void *(void)' Function 0x557e6aae8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557e6ab47db8 <line:785:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab47d28 <col:3> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab47da0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557e6ab47d80 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557e6ab47d68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557e6ab47d48 <col:19> 'void *(void)' Function 0x557e6aae8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557e6ab47e30 <line:786:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab47dd8 <col:3> '_Bool' lvalue Var 0x557e6ab42c18 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab47e18 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab47df8 <col:21> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x557e6ab47ea8 <line:787:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557e6ab47e50 <col:3> 'int' lvalue Var 0x557e6ab42c98 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x557e6ab47e90 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab47e70 <col:15> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   |-BinaryOperator 0x557e6ab482e0 <line:788:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x557e6ab47ec8 <col:3> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   | `-ConditionalOperator 0x557e6ab482b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x557e6ab480d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x557e6ab47ff8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x557e6ab47f20 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x557e6ab47f08 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x557e6ab47ee8 <col:8> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x557e6ab47fd8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x557e6ab47f70 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x557e6ab47f58 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x557e6ab47f38 <col:27> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x557e6ab47fc0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x557e6ab47fa8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x557e6ab47f88 <col:46> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x557e6ab480b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x557e6ab48050 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x557e6ab48038 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x557e6ab48018 <col:65> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x557e6ab480a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x557e6ab48088 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x557e6ab48068 <col:84> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x557e6ab48298 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab480f8 <col:101> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   |   `-ParenExpr 0x557e6ab48278 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x557e6ab48248 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x557e6ab481b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557e6ab48170 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557e6ab48158 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557e6ab48118 <col:106> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557e6ab481a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557e6ab48188 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557e6ab48138 <col:124> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557e6ab48218 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557e6ab481d8 <col:141> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x557e6ab48230 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557e6ab481f8 <col:153> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x557e6ab487f0 <line:789:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557e6ab48300 <col:3> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x557e6ab487c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557e6ab48790 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557e6ab48778 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557e6ab48320 <col:15> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557e6ab487a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab48340 <col:31> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x557e6ab48758 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557e6ab48728 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557e6ab48550 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557e6ab48470 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557e6ab48398 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557e6ab48380 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557e6ab48360 <col:45> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557e6ab48450 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557e6ab483e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557e6ab483d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557e6ab483b0 <col:64> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x557e6ab48438 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557e6ab48420 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557e6ab48400 <col:83> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557e6ab48530 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557e6ab484c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557e6ab484b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557e6ab48490 <col:102> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x557e6ab48518 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557e6ab48500 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557e6ab484e0 <col:121> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557e6ab48710 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557e6ab48570 <col:138> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x557e6ab486f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557e6ab486c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557e6ab48630 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557e6ab485e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557e6ab485d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557e6ab48590 <col:151> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557e6ab48618 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557e6ab48600 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557e6ab485b0 <col:169> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x557e6ab48690 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557e6ab48650 <col:186> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x557e6ab486a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557e6ab48670 <col:198> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x557e6ab48d20 <line:790:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557e6ab48810 <col:3> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x557e6ab48cf0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557e6ab48cc0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557e6ab48ca8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557e6ab48830 <col:15> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557e6ab48cd8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab48850 <col:31> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x557e6ab48c88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557e6ab48c58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557e6ab48a60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557e6ab48980 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557e6ab488a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557e6ab48890 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557e6ab48870 <col:45> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557e6ab48960 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557e6ab488f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557e6ab488e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557e6ab488c0 <col:64> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x557e6ab48948 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557e6ab48930 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557e6ab48910 <col:83> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557e6ab48a40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557e6ab489d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557e6ab489c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557e6ab489a0 <col:102> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x557e6ab48a28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557e6ab48a10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557e6ab489f0 <col:121> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557e6ab48c40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557e6ab48a80 <col:138> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x557e6ab48c20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557e6ab48bf0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557e6ab48b60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557e6ab48af8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557e6ab48ae0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557e6ab48aa0 <col:151> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557e6ab48b28 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557e6ab48b10 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557e6ab48ac0 <col:169> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x557e6ab48bc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557e6ab48b80 <col:186> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x557e6ab48bd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557e6ab48ba0 <col:198> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x557e6ab492c8 <line:791:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab48d40 <col:3> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab492b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab49280 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557e6ab49238 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab49220 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab48d60 <col:20> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab49268 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab49250 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab48d80 <col:36> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x557e6ab49200 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557e6ab491d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557e6ab48f90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557e6ab48eb0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557e6ab48dd8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557e6ab48dc0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557e6ab48da0 <col:55> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557e6ab48e90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557e6ab48e28 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557e6ab48e10 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557e6ab48df0 <col:74> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557e6ab48e78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557e6ab48e60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557e6ab48e40 <col:93> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557e6ab48f70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557e6ab48f08 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557e6ab48ef0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557e6ab48ed0 <col:112> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557e6ab48f58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557e6ab48f40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557e6ab48f20 <col:131> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557e6ab491b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557e6ab491a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557e6ab48fb0 <col:148> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x557e6ab49180 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557e6ab49150 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557e6ab49070 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557e6ab49028 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557e6ab49010 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557e6ab48fd0 <col:166> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557e6ab49058 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557e6ab49040 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557e6ab48ff0 <col:184> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557e6ab49108 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557e6ab490c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557e6ab49090 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557e6ab49138 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557e6ab49120 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557e6ab490e8 <col:212> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557e6ab49890 <line:792:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab492e8 <col:3> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab49878 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab49848 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557e6ab49800 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab497e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab49308 <col:20> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab49830 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab49818 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab49328 <col:36> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x557e6ab497c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557e6ab49798 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557e6ab49538 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557e6ab49458 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557e6ab49380 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557e6ab49368 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557e6ab49348 <col:55> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557e6ab49438 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557e6ab493d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557e6ab493b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557e6ab49398 <col:74> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557e6ab49420 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557e6ab49408 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557e6ab493e8 <col:93> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557e6ab49518 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557e6ab494b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557e6ab49498 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557e6ab49478 <col:112> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557e6ab49500 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557e6ab494e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557e6ab494c8 <col:131> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557e6ab49780 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557e6ab49768 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557e6ab49558 <col:148> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x557e6ab49748 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557e6ab49718 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557e6ab49618 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557e6ab495d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557e6ab495b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557e6ab49578 <col:166> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557e6ab49600 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557e6ab495e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557e6ab49598 <col:184> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557e6ab496e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557e6ab49668 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557e6ab49638 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557e6ab49700 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557e6ab496c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557e6ab49690 <col:219> 'int' 0
|   |-BinaryOperator 0x557e6ab49e48 <line:793:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab498b0 <col:3> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab49e30 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab49e00 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557e6ab49db8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab49da0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab498d0 <col:20> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab49de8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab49dd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab498f0 <col:36> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x557e6ab49d80 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557e6ab49d50 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557e6ab49b00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557e6ab49a20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557e6ab49948 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557e6ab49930 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557e6ab49910 <col:55> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557e6ab49a00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557e6ab49998 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557e6ab49980 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557e6ab49960 <col:74> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557e6ab499e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557e6ab499d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557e6ab499b0 <col:93> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557e6ab49ae0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557e6ab49a78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557e6ab49a60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557e6ab49a40 <col:112> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557e6ab49ac8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557e6ab49ab0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557e6ab49a90 <col:131> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557e6ab49d38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557e6ab49d20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557e6ab49b20 <col:148> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x557e6ab49d00 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557e6ab49cd0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557e6ab49bf0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557e6ab49ba8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557e6ab49b90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557e6ab49b40 <col:166> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557e6ab49bd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557e6ab49bc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557e6ab49b70 <col:184> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557e6ab49c88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557e6ab49c40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557e6ab49c10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557e6ab49cb8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557e6ab49ca0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557e6ab49c68 <col:212> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x557e6ab4a410 <line:794:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab49e68 <col:3> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab4a3f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab4a3c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557e6ab4a380 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab4a368 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab49e88 <col:20> '_Bool' lvalue Var 0x557e6ab43520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab4a3b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557e6ab4a398 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557e6ab49ea8 <col:36> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x557e6ab4a348 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557e6ab4a318 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557e6ab4a0b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557e6ab49fd8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557e6ab49f00 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557e6ab49ee8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557e6ab49ec8 <col:55> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557e6ab49fb8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557e6ab49f50 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557e6ab49f38 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557e6ab49f18 <col:74> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557e6ab49fa0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557e6ab49f88 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557e6ab49f68 <col:93> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557e6ab4a098 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557e6ab4a030 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557e6ab4a018 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557e6ab49ff8 <col:112> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557e6ab4a080 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557e6ab4a068 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557e6ab4a048 <col:131> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557e6ab4a300 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557e6ab4a2e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557e6ab4a0d8 <col:148> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x557e6ab4a2c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557e6ab4a298 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557e6ab4a198 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557e6ab4a150 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557e6ab4a138 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557e6ab4a0f8 <col:166> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557e6ab4a180 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557e6ab4a168 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557e6ab4a118 <col:184> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557e6ab4a268 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557e6ab4a1e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557e6ab4a1b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557e6ab4a280 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557e6ab4a240 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557e6ab4a210 <col:219> 'int' 0
|   |-BinaryOperator 0x557e6ab4a488 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557e6ab4a430 <col:3> 'int' lvalue Var 0x557e6ab424b8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x557e6ab4a470 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab4a450 <col:25> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   |-BinaryOperator 0x557e6ab4a5b8 <line:796:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x557e6ab4a4a8 <col:3> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   | `-ConditionalOperator 0x557e6ab4a588 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x557e6ab4a540 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557e6ab4a528 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557e6ab4a4c8 <col:7> '_Bool' lvalue Var 0x557e6ab42c18 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x557e6ab4a558 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab4a4e8 <col:25> 'int' lvalue Var 0x557e6ab42c98 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x557e6ab4a570 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x557e6ab4a508 <col:37> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   |-BinaryOperator 0x557e6ab4a650 <line:797:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab4a5d8 <col:3> '_Bool' lvalue Var 0x557e6ab42c18 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557e6ab4a628 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557e6ab4a5f8 <col:28> 'int' 0
|   |-CallExpr 0x557e6ab4a6a8 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab4a690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab4a670 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab4a700 <line:799:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab4a6e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab4a6c8 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab4a778 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557e6ab4a720 <col:3> 'int' lvalue Var 0x557e6ab425d8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x557e6ab4a760 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557e6ab4a740 <col:25> 'int' lvalue Var 0x557e6ab426f8 'a' 'int'
|   |-CallExpr 0x557e6ab4a7d0 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab4a7b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab4a798 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab4a828 <line:802:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab4a810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab4a7f0 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab4ab10 <line:803:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557e6ab4a848 <col:3> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   | `-ConditionalOperator 0x557e6ab4aae0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557e6ab4a908 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557e6ab4a8c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557e6ab4a8a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557e6ab4a868 <col:7> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557e6ab4a8f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557e6ab4a8d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557e6ab4a888 <col:25> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x557e6ab4aac8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab4a928 <col:42> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x557e6ab4aaa8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557e6ab4aa78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557e6ab4a9e8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557e6ab4a9a0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557e6ab4a988 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557e6ab4a948 <col:55> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557e6ab4a9d0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557e6ab4a9b8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557e6ab4a968 <col:73> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557e6ab4aa48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557e6ab4aa08 <col:90> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557e6ab4aa60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557e6ab4aa28 <col:102> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
|   |-BinaryOperator 0x557e6ab4ad28 <line:804:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab4ab30 <col:3> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab4ad10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab4ace0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557e6ab4ac00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557e6ab4abb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557e6ab4aba0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557e6ab4ab50 <col:20> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557e6ab4abe8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557e6ab4abd0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557e6ab4ab80 <col:38> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab4ac98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557e6ab4ac50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557e6ab4ac20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557e6ab4acc8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557e6ab4acb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557e6ab4ac78 <col:66> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557e6ab4b010 <line:805:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab4ad48 <col:3> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab4aff8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab4afc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557e6ab4aee8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557e6ab4ae08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557e6ab4adc0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557e6ab4ada8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557e6ab4ad68 <col:20> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557e6ab4adf0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557e6ab4add8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557e6ab4ad88 <col:38> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x557e6ab4aec8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557e6ab4ae80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557e6ab4ae68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557e6ab4ae28 <col:56> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557e6ab4aeb0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557e6ab4ae98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557e6ab4ae48 <col:74> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab4af80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557e6ab4af38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557e6ab4af08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557e6ab4afb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557e6ab4af98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557e6ab4af60 <col:102> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557e6ab4b218 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab4b030 <col:3> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab4b200 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab4b1d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557e6ab4b0f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557e6ab4b0a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557e6ab4b090 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557e6ab4b050 <col:20> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557e6ab4b0d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557e6ab4b0c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557e6ab4b070 <col:38> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab4b188 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557e6ab4b140 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557e6ab4b110 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557e6ab4b1b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557e6ab4b1a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557e6ab4b168 <col:66> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x557e6ab4b500 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557e6ab4b238 <col:3> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557e6ab4b4e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557e6ab4b4b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557e6ab4b3d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557e6ab4b2f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557e6ab4b2b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557e6ab4b298 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557e6ab4b258 <col:20> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557e6ab4b2e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557e6ab4b2c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557e6ab4b278 <col:38> '_Bool' lvalue Var 0x557e6ab42ef0 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x557e6ab4b3b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557e6ab4b370 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557e6ab4b358 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557e6ab4b318 <col:56> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557e6ab4b3a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557e6ab4b388 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557e6ab4b338 <col:74> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557e6ab4b470 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557e6ab4b428 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557e6ab4b3f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557e6ab4b4a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557e6ab4b488 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557e6ab4b450 <col:102> '_Bool' lvalue Var 0x557e6ab43148 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x557e6ab4b558 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab4b540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab4b520 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557e6ab4b5b0 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557e6ab4b598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab4b578 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557e6ab4b668 <line:810:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557e6ab4b5d0 <col:3> 'int' lvalue Var 0x557e6ab42278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557e6ab4b648 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557e6ab4b630 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557e6ab4b5f0 <col:22> 'int' lvalue Var 0x557e6ab42278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557e6ab4b610 <col:41> 'int' 1
|   |-CallExpr 0x557e6ab4b6c0 <line:811:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557e6ab4b6a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557e6ab4b688 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557e6ab4b738 <line:812:3, col:36>
|     `-CallExpr 0x557e6ab4b718 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557e6ab4b700 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557e6ab4b6e0 <col:10> 'void *(void)' Function 0x557e6aae8958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557e6ab4b8d0 prev 0x557e6ab41fc0 <line:814:1, line:816:1> line:814:6 fence 'void ()'
| `-CompoundStmt 0x557e6ab4b970 <line:815:1, line:816:1>
|-FunctionDecl 0x557e6ab4b9a0 prev 0x557e6ab42080 <line:817:1, line:819:1> line:817:6 isync 'void ()'
| `-CompoundStmt 0x557e6ab4ba40 <line:818:1, line:819:1>
|-FunctionDecl 0x557e6ab4ba70 prev 0x557e6ab42140 <line:820:1, line:822:1> line:820:6 lwfence 'void ()'
| `-CompoundStmt 0x557e6ab4bb10 <line:821:1, line:822:1>
`-FunctionDecl 0x557e6ab4bb90 <line:823:1, line:849:1> line:823:5 main 'int ()'
  `-CompoundStmt 0x557e6ab4dbb0 <line:824:1, line:849:1>
    |-DeclStmt 0x557e6ab4bca8 <line:825:3, col:17>
    | `-VarDecl 0x557e6ab4bc40 <col:3, col:13> col:13 used t559 'pthread_t':'unsigned long'
    |-CallExpr 0x557e6ab4beb8 <line:826:3, col:53> 'int'
    | |-ImplicitCastExpr 0x557e6ab4bea0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557e6ab4bcc0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557e6ab29488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557e6ab4bd00 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557e6ab4bce0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557e6ab4bc40 't559' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557e6ab4bef8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557e6ab4bd78 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x557e6ab4bd50 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557e6ab4bd18 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x557e6ab4bf10 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557e6ab4bd98 <col:38> 'void *(void *)' Function 0x557e6ab43638 'P0' 'void *(void *)'
    | `-ParenExpr 0x557e6ab4be18 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x557e6ab4bdf0 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557e6ab4bdb8 <col:51> 'int' 0
    |-DeclStmt 0x557e6ab4bfa0 <line:827:3, col:17>
    | `-VarDecl 0x557e6ab4bf38 <col:3, col:13> col:13 used t560 'pthread_t':'unsigned long'
    |-CallExpr 0x557e6ab4c148 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x557e6ab4c130 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557e6ab4bfb8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557e6ab29488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557e6ab4bff8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557e6ab4bfd8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557e6ab4bf38 't560' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557e6ab4c188 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557e6ab4c070 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x557e6ab4c048 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557e6ab4c010 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x557e6ab4c1a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557e6ab4c090 <col:38> 'void *(void *)' Function 0x557e6ab43d28 'P1' 'void *(void *)'
    | `-ParenExpr 0x557e6ab4c110 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x557e6ab4c0e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557e6ab4c0b0 <col:51> 'int' 0
    |-DeclStmt 0x557e6ab4c230 <line:829:3, col:17>
    | `-VarDecl 0x557e6ab4c1c8 <col:3, col:13> col:13 used t561 'pthread_t':'unsigned long'
    |-CallExpr 0x557e6ab4c3d8 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x557e6ab4c3c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557e6ab4c248 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557e6ab29488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557e6ab4c288 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557e6ab4c268 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557e6ab4c1c8 't561' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557e6ab4c418 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557e6ab4c300 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x557e6ab4c2d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557e6ab4c2a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x557e6ab4c430 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557e6ab4c320 <col:38> 'void *(void *)' Function 0x557e6ab44390 'P2' 'void *(void *)'
    | `-ParenExpr 0x557e6ab4c3a0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x557e6ab4c378 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557e6ab4c340 <col:51> 'int' 0
    |-DeclStmt 0x557e6ab4c4c0 <line:831:3, col:17>
    | `-VarDecl 0x557e6ab4c458 <col:3, col:13> col:13 used t562 'pthread_t':'unsigned long'
    |-CallExpr 0x557e6ab4c668 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x557e6ab4c650 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557e6ab4c4d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557e6ab29488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557e6ab4c518 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557e6ab4c4f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557e6ab4c458 't562' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557e6ab4c6a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557e6ab4c590 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x557e6ab4c568 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557e6ab4c530 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x557e6ab4c6c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557e6ab4c5b0 <col:38> 'void *(void *)' Function 0x557e6ab47438 'P3' 'void *(void *)'
    | `-ParenExpr 0x557e6ab4c630 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x557e6ab4c608 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557e6ab4c5d0 <col:51> 'int' 0
    |-CallExpr 0x557e6ab4c710 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557e6ab4c6f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557e6ab4c6d8 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557e6ab4c7e0 <line:834:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x557e6ab4c730 <col:3> '_Bool' lvalue Var 0x557e6ab42790 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x557e6ab4c7c8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x557e6ab4c7a8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x557e6ab4c790 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x557e6ab4c750 <col:21> 'int' lvalue Var 0x557e6ab42278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x557e6ab4c770 <col:41> 'int' 4
    |-CallExpr 0x557e6ab4c838 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557e6ab4c820 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557e6ab4c800 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557e6ab4c8b0 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557e6ab4c898 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557e6ab4c858 <col:3> 'void (int)' Function 0x557e6aae8790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x557e6ab4c8f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557e6ab4c8d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557e6ab4c878 <col:21> '_Bool' lvalue Var 0x557e6ab42790 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x557e6ab4c940 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557e6ab4c928 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557e6ab4c908 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557e6ab4cc38 <line:838:3, col:103> 'int' '='
    | |-DeclRefExpr 0x557e6ab4c960 <col:3> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
    | `-ConditionalOperator 0x557e6ab4cc08 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x557e6ab4ca20 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x557e6ab4c9d8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x557e6ab4c9c0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x557e6ab4c980 <col:7> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x557e6ab4ca08 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x557e6ab4c9f0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x557e6ab4c9a0 <col:25> '_Bool' lvalue Var 0x557e6ab42d10 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x557e6ab4cbf0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x557e6ab4ca40 <col:42> 'int' lvalue Var 0x557e6ab432c0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x557e6ab4cbd0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x557e6ab4cba0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x557e6ab4cb00 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x557e6ab4cab8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x557e6ab4caa0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x557e6ab4ca60 <col:55> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x557e6ab4cae8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x557e6ab4cad0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x557e6ab4ca80 <col:73> '_Bool' lvalue Var 0x557e6ab42f68 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x557e6ab4cb60 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x557e6ab4cb20 <col:90> 'int' lvalue Var 0x557e6ab433b8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x557e6ab4cb78 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x557e6ab4cb40 <col:102> 'int' lvalue Var 0x557e6ab42b80 'z' 'int'
    |-BinaryOperator 0x557e6ab4ce40 <line:839:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557e6ab4cc58 <col:3> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x557e6ab4ce28 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557e6ab4cdf8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557e6ab4cd18 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557e6ab4ccd0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557e6ab4ccb8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557e6ab4cc78 <col:20> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557e6ab4cd00 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557e6ab4cce8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557e6ab4cc98 <col:38> '_Bool' lvalue Var 0x557e6ab42d10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557e6ab4cdb0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557e6ab4cd68 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557e6ab4cd38 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557e6ab4cde0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557e6ab4cdc8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557e6ab4cd90 <col:66> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x557e6ab4d128 <line:840:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557e6ab4ce60 <col:3> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x557e6ab4d110 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557e6ab4d0e0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557e6ab4d000 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557e6ab4cf20 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557e6ab4ced8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557e6ab4cec0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557e6ab4ce80 <col:20> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557e6ab4cf08 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557e6ab4cef0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557e6ab4cea0 <col:38> '_Bool' lvalue Var 0x557e6ab42d10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557e6ab4cfe0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557e6ab4cf98 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557e6ab4cf80 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557e6ab4cf40 <col:56> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557e6ab4cfc8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557e6ab4cfb0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557e6ab4cf60 <col:74> '_Bool' lvalue Var 0x557e6ab42f68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557e6ab4d098 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557e6ab4d050 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557e6ab4d020 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557e6ab4d0c8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557e6ab4d0b0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557e6ab4d078 <col:102> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x557e6ab4d330 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557e6ab4d148 <col:3> '_Bool' lvalue Var 0x557e6ab42d10 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557e6ab4d318 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557e6ab4d2e8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557e6ab4d208 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557e6ab4d1c0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557e6ab4d1a8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557e6ab4d168 <col:20> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557e6ab4d1f0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557e6ab4d1d8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557e6ab4d188 <col:38> '_Bool' lvalue Var 0x557e6ab42d10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557e6ab4d2a0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557e6ab4d258 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557e6ab4d228 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557e6ab4d2d0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557e6ab4d2b8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557e6ab4d280 <col:66> '_Bool' lvalue Var 0x557e6ab42d10 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x557e6ab4d618 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557e6ab4d350 <col:3> '_Bool' lvalue Var 0x557e6ab42f68 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557e6ab4d600 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557e6ab4d5d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557e6ab4d4f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557e6ab4d410 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557e6ab4d3c8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557e6ab4d3b0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557e6ab4d370 <col:20> '_Bool' lvalue Var 0x557e6ab43338 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557e6ab4d3f8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557e6ab4d3e0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557e6ab4d390 <col:38> '_Bool' lvalue Var 0x557e6ab42d10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557e6ab4d4d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557e6ab4d488 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557e6ab4d470 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557e6ab4d430 <col:56> '_Bool' lvalue Var 0x557e6ab43430 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557e6ab4d4b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557e6ab4d4a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557e6ab4d450 <col:74> '_Bool' lvalue Var 0x557e6ab42f68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557e6ab4d588 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557e6ab4d540 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557e6ab4d510 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557e6ab4d5b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557e6ab4d5a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557e6ab4d568 <col:102> '_Bool' lvalue Var 0x557e6ab42f68 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x557e6ab4d670 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557e6ab4d658 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557e6ab4d638 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557e6ab4d6c8 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557e6ab4d6b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557e6ab4d690 <col:3> 'void ()' Function 0x557e6aae8e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557e6ab4da30 <line:845:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x557e6ab4d6e8 <col:3> '_Bool' lvalue Var 0x557e6ab42808 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x557e6ab4da18 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x557e6ab4da00 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x557e6ab4d9e0 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x557e6ab4d9c0 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x557e6ab4d928 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x557e6ab4d890 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x557e6ab4d7f8 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x557e6ab4d760 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x557e6ab4d748 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x557e6ab4d708 <col:23> 'int' lvalue Var 0x557e6ab42908 'x' 'int'
    |         | | | | `-IntegerLiteral 0x557e6ab4d728 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x557e6ab4d7d8 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x557e6ab4d7c0 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x557e6ab4d780 <col:33> 'int' lvalue Var 0x557e6ab42a28 'y' 'int'
    |         | | |   `-IntegerLiteral 0x557e6ab4d7a0 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x557e6ab4d870 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x557e6ab4d858 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x557e6ab4d818 <col:43> 'int' lvalue Var 0x557e6ab42398 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x557e6ab4d838 <col:66> 'int' 0
    |         | `-BinaryOperator 0x557e6ab4d908 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x557e6ab4d8f0 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x557e6ab4d8b0 <col:71> 'int' lvalue Var 0x557e6ab424b8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x557e6ab4d8d0 <col:94> 'int' 1
    |         `-BinaryOperator 0x557e6ab4d9a0 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x557e6ab4d988 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x557e6ab4d948 <col:99> 'int' lvalue Var 0x557e6ab425d8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x557e6ab4d968 <col:122> 'int' 0
    |-CallExpr 0x557e6ab4da88 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557e6ab4da70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557e6ab4da50 <col:3> 'void ()' Function 0x557e6aae8f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557e6ab4db00 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557e6ab4dae8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557e6ab4daa8 <col:3> 'void (int)' Function 0x557e6aae8bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x557e6ab4db40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557e6ab4db28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557e6ab4dac8 <col:21> '_Bool' lvalue Var 0x557e6ab42808 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x557e6ab4db78 <line:848:3, col:10>
      `-IntegerLiteral 0x557e6ab4db58 <col:10> 'int' 0
