TranslationUnitDecl 0x5563ac844e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5563ac8456d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5563ac8453b0 '__int128'
|-TypedefDecl 0x5563ac845748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5563ac8453d0 'unsigned __int128'
|-TypedefDecl 0x5563ac845a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5563ac845820 'struct __NSConstantString_tag'
|   `-Record 0x5563ac8457a0 '__NSConstantString_tag'
|-TypedefDecl 0x5563ac845af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5563ac845ab0 'char *'
|   `-BuiltinType 0x5563ac844eb0 'char'
|-TypedefDecl 0x5563ac884650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5563ac845d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5563ac845bd0 'struct __va_list_tag'
|     `-Record 0x5563ac845b50 '__va_list_tag'
|-FunctionDecl 0x5563ac884790 <./split_6/mix017_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5563ac8846c0 <col:31> col:34 'int'
|-FunctionDecl 0x5563ac884958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5563ac884a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5563ac884bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5563ac884b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5563ac884df8 <col:40, col:99>
|   |-IfStmt 0x5563ac884dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5563ac884ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5563ac884c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5563ac884c70 <col:47> 'int' lvalue ParmVar 0x5563ac884b38 'expression' 'int'
|   | `-CompoundStmt 0x5563ac884db0 <col:59, col:88>
|   |   `-LabelStmt 0x5563ac884d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5563ac884d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5563ac884d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5563ac884cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5563ac884a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5563ac884de0 <col:89>
|   `-ReturnStmt 0x5563ac884de8 <col:91>
|-FunctionDecl 0x5563ac884e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5563ac884f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5563ac885280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5563ac884fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5563ac885038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5563ac8850b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5563ac885138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5563ac885340 <line:10:22>
|-FunctionDecl 0x5563ac8ab390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5563ac8853b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5563ac885430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5563ac8854b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5563ac885530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5563ac8ab450 <line:13:22>
|-FunctionDecl 0x5563ac8ab700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5563ac8ab4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5563ac8ab540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5563ac8ab5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5563ac8ab7b8 <line:15:22>
|-TypedefDecl 0x5563ac8ab828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5563ac844f70 'unsigned char'
|-TypedefDecl 0x5563ac8ab898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5563ac844f90 'unsigned short'
|-TypedefDecl 0x5563ac8ab908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5563ac844fb0 'unsigned int'
|-TypedefDecl 0x5563ac8ab978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8ab9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5563ac844ed0 'signed char'
|-TypedefDecl 0x5563ac8aba58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5563ac844f70 'unsigned char'
|-TypedefDecl 0x5563ac8abac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5563ac844ef0 'short'
|-TypedefDecl 0x5563ac8abb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5563ac844f90 'unsigned short'
|-TypedefDecl 0x5563ac8abba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5563ac844f10 'int'
|-TypedefDecl 0x5563ac8abc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5563ac844fb0 'unsigned int'
|-TypedefDecl 0x5563ac8abc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8abcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8abd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8abdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8abe48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8abeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5563ac844fb0 'unsigned int'
|-TypedefDecl 0x5563ac8abf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5563ac844fb0 'unsigned int'
|-TypedefDecl 0x5563ac8abf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8ac008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8ac078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5563ac844fb0 'unsigned int'
|-TypedefDecl 0x5563ac8ac0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8ac158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8ac1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8ac238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5563ac844f10 'int'
|-RecordDecl 0x5563ac8ac290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5563ac8ac408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5563ac8ac4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5563ac8ac460 'struct __fsid_t' sugar
|   `-RecordType 0x5563ac8ac310 '__fsid_t'
|     `-Record 0x5563ac8ac290 ''
|-TypedefDecl 0x5563ac8ac548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8ac5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8ac628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8ac698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5563ac844fb0 'unsigned int'
|-TypedefDecl 0x5563ac8ac708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8ac778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5563ac844fb0 'unsigned int'
|-TypedefDecl 0x5563ac8ac7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8ac858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5563ac844f10 'int'
|-TypedefDecl 0x5563ac8ac8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5563ac844f10 'int'
|-TypedefDecl 0x5563ac8ac938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5563ac844f10 'int'
|-TypedefDecl 0x5563ac8ac9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5563ac845630 'void *'
|   `-BuiltinType 0x5563ac844e70 'void'
|-TypedefDecl 0x5563ac8aca18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8aca88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8acaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8acb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8acbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8acc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8accb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8acd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8acd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8ace08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8ace78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8acf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5563ac8aced0 '__off64_t' sugar
|   |-Typedef 0x5563ac8ac1c8 '__off64_t'
|   `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8ad000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5563ac8acfc0 '__quad_t *'
|   `-TypedefType 0x5563ac8acf60 '__quad_t' sugar
|     |-Typedef 0x5563ac8abd68 '__quad_t'
|     `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8ad070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5563ac845ab0 'char *'
|   `-BuiltinType 0x5563ac844eb0 'char'
|-TypedefDecl 0x5563ac8ad0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8ad150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5563ac844fb0 'unsigned int'
|-FunctionDecl 0x5563ac8ad298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5563ac8ad1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5563ac8ae5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5563ac8ae5d8 <line:72:3, col:34>
|     `-CallExpr 0x5563ac8ae598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5563ac8ae580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5563ac8ae510 <col:10> '<builtin fn type>' Function 0x5563ac8ae380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5563ac8ae5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5563ac8ae530 <col:29> 'unsigned int' lvalue ParmVar 0x5563ac8ad1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5563ac8ae380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5563ac8ae420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5563ac8ae490 <col:10> Implicit
| `-ConstAttr 0x5563ac8ae4e8 <col:10> Implicit
|-FunctionDecl 0x5563ac8ae740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5563ac8ae638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5563ac8aea58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5563ac8aea48 <line:77:3, col:34>
|     `-CallExpr 0x5563ac8aea08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5563ac8ae9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5563ac8ae978 <col:10> '<builtin fn type>' Function 0x5563ac8ae7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5563ac8aea30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5563ac8ae998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5563ac8ae638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5563ac8ae7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5563ac8ae888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5563ac8ae8f8 <col:10> Implicit
| `-ConstAttr 0x5563ac8ae950 <col:10> Implicit
|-TypedefDecl 0x5563ac8aea88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-TypedefDecl 0x5563ac8aeb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5563ac8aeae0 '__time_t' sugar
|   |-Typedef 0x5563ac8ac708 '__time_t'
|   `-BuiltinType 0x5563ac844f30 'long'
|-RecordDecl 0x5563ac8aeb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5563ac8aec28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5563ac8aecb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5563ac8aed48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5563ac8aed10 '__pid_t' sugar
|   |-Typedef 0x5563ac8ac238 '__pid_t'
|   `-BuiltinType 0x5563ac844f10 'int'
|-RecordDecl 0x5563ac8aeda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5563ac8aee60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5563ac8aeeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5563ac8aef70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5563ac8aefd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-RecordDecl 0x5563ac8af030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5563ac8af2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5563ac8b03a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5563ac8af310 'struct cpu_set_t' sugar
|   `-RecordType 0x5563ac8af0b0 'cpu_set_t'
|     `-Record 0x5563ac8af030 ''
|-FunctionDecl 0x5563ac8b0678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5563ac8b0448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5563ac8b0550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5563ac8b0728 <line:107:19>
|-FunctionDecl 0x5563ac8b0900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5563ac8b0790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5563ac8b09a8 <col:69>
|-FunctionDecl 0x5563ac8b0b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5563ac8b0a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5563ac8b0bc8 <col:64>
|-FunctionDecl 0x5563ac8b0e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5563ac8b0c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5563ac8b0d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5563ac8b0f38 <line:113:22>
|-FunctionDecl 0x5563ac8b11b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5563ac8b0fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5563ac8b1098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5563ac8b1268 <col:88>
|-FunctionDecl 0x5563ac8b1588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5563ac8b12d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5563ac8b13b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5563ac8b1440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5563ac8b1640 <col:62>
|-FunctionDecl 0x5563ac8b17b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5563ac8b16a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5563ac8b1860 <col:63>
|-FunctionDecl 0x5563ac8b1988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5563ac8b1a28 <col:47>
|-FunctionDecl 0x5563ac8b1b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5563ac8b1a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5563ac8b1bd8 <col:69>
|-FunctionDecl 0x5563ac8b1ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5563ac8b1c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5563ac8b1d88 <col:69>
|-FunctionDecl 0x5563ac8b2048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5563ac8b1df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5563ac8b1f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5563ac8b20f8 <col:88>
|-TypedefDecl 0x5563ac8b2188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5563ac8b2150 '__clock_t' sugar
|   |-Typedef 0x5563ac8ac548 '__clock_t'
|   `-BuiltinType 0x5563ac844f30 'long'
|-TypedefDecl 0x5563ac8b2218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5563ac8b21e0 '__clockid_t' sugar
|   |-Typedef 0x5563ac8ac938 '__clockid_t'
|   `-BuiltinType 0x5563ac844f10 'int'
|-TypedefDecl 0x5563ac8b22a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5563ac8b2270 '__timer_t' sugar
|   |-Typedef 0x5563ac8ac9a8 '__timer_t'
|   `-PointerType 0x5563ac845630 'void *'
|     `-BuiltinType 0x5563ac844e70 'void'
|-RecordDecl 0x5563ac8b2300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5563ac8b23d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5563ac8b2440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5563ac8b24a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5563ac8b2510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5563ac8b2578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5563ac8b25e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5563ac8b2648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5563ac8b26b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5563ac8b2718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5563ac8b2780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5563ac8b27e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5563ac8b2838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5563ac8b2908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5563ac8b2978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5563ac8b2a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5563ac8b2bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5563ac8b2c90 <col:45>
|-FunctionDecl 0x5563ac8b2e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5563ac8b2d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5563ac8b2f18 <col:54>
|-FunctionDecl 0x5563ac8b3118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5563ac8b2f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5563ac8b2ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5563ac8b31c8 <line:157:22>
| `-ConstAttr 0x5563ac8b3220 <col:63>
|-FunctionDecl 0x5563ac8b4050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5563ac8b3318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5563ac8b40f8 <col:56>
|-FunctionDecl 0x5563ac8b44a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5563ac8b4168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5563ac8b41e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5563ac8b4260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5563ac8b4358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5563ac8b4560 <col:54>
|-RecordDecl 0x5563ac8b45b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5563ac8b4668 parent 0x5563ac844e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5563ac8b48c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5563ac8b4968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5563ac8b49d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5563ac8b4a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5563ac8b4b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5563ac8b4c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5563ac8b4bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5563ac8b4b80 'struct __locale_struct' sugar
|     `-RecordType 0x5563ac8b4640 'struct __locale_struct'
|       `-Record 0x5563ac8b45b8 '__locale_struct'
|-TypedefDecl 0x5563ac8b4cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5563ac8b4cc0 '__locale_t' sugar
|   |-Typedef 0x5563ac8b4c48 '__locale_t'
|   `-PointerType 0x5563ac8b4bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5563ac8b4b80 'struct __locale_struct' sugar
|       `-RecordType 0x5563ac8b4640 'struct __locale_struct'
|         `-Record 0x5563ac8b45b8 '__locale_struct'
|-FunctionDecl 0x5563ac8b6110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5563ac8b4d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5563ac8b4de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5563ac8b4e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5563ac8b4ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5563ac8b4f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5563ac8b61d8 <col:40>
|-FunctionDecl 0x5563ac8b63c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5563ac8b62a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5563ac8b6470 <col:66>
|-FunctionDecl 0x5563ac8b6580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5563ac8b64d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5563ac8b6628 <col:69>
|-FunctionDecl 0x5563ac8b6858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5563ac8b6690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5563ac8b6720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5563ac8b6908 <col:52>
|-FunctionDecl 0x5563ac8b6ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5563ac8b6970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5563ac8b6a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5563ac8b6b60 <col:55>
|-FunctionDecl 0x5563ac8b6cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5563ac8b6be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5563ac8b6da0 <col:62>
|-FunctionDecl 0x5563ac8b6f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5563ac8b6e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5563ac8b6fc0 <col:60>
|-FunctionDecl 0x5563ac8b72b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5563ac8b7118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5563ac8b7198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5563ac8b7368 <col:44>
|-FunctionDecl 0x5563ac8b7578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5563ac8b73d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5563ac8b7450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5563ac8b7628 <col:49>
|-VarDecl 0x5563ac8b7728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5563ac8b77a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5563ac8b7828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5563ac8b78f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5563ac8b7a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5563ac8b7ac0 <col:42>
|-VarDecl 0x5563ac8b7b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5563ac8b7bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5563ac8b7d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5563ac8b7c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5563ac8b7de0 <col:57>
|-FunctionDecl 0x5563ac8b7ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5563ac8b7e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5563ac8b7f98 <col:56>
|-FunctionDecl 0x5563ac8b80d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5563ac8b8018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5563ac8b8178 <col:59>
|-FunctionDecl 0x5563ac8b8280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5563ac8b81e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5563ac8b8328 <col:48>
| `-ConstAttr 0x5563ac8b8380 <col:89>
|-FunctionDecl 0x5563ac8b85e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5563ac8b8438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5563ac8b84c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5563ac8b8848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5563ac8b86d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5563ac8b8768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5563ac8b88f8 <col:88>
|-FunctionDecl 0x5563ac8b8a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5563ac8b8960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5563ac8b89f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5563ac8b8b40 <col:88>
|-FunctionDecl 0x5563ac8b8d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5563ac8b8ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5563ac8b8c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5563ac8b8e08 <line:208:22>
|-FunctionDecl 0x5563ac8b9178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5563ac8b8e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5563ac8b8ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5563ac8b8f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5563ac8b9010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5563ac8b9478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5563ac8b9278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5563ac8b9350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5563ac8b9528 <col:85>
|-FunctionDecl 0x5563ac8b9918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5563ac8b9590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5563ac8b96c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5563ac8b97d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5563ac8b99d0 <col:52>
|-FunctionDecl 0x5563ac8b9b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5563ac8b9a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5563ac8b9bf0 <col:61>
|-FunctionDecl 0x5563ac8ba0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5563ac8b9c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5563ac8b9cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5563ac8b9e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5563ac8b9ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5563ac8ba1b0 <col:62>
|-FunctionDecl 0x5563ac8ba3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5563ac8ba218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5563ac8ba2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5563ac8ba478 <line:221:22>
|-FunctionDecl 0x5563ac8ba578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5563ac8ba4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5563ac8ba620 <col:65>
|-TypedefDecl 0x5563ac8ba690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5563ac844fd0 'unsigned long'
|-RecordDecl 0x5563ac8ba6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5563ac8ba830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5563ac8ba898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5563ac8ba948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5563ac8ba8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5563ac8ba770 'union pthread_attr_t'
|     `-Record 0x5563ac8ba6e8 'pthread_attr_t'
|-RecordDecl 0x5563ac8ba9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5563ac8bab18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5563ac8bab90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5563ac8bac40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5563ac8babe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5563ac8baa20 'struct __pthread_internal_list'
|     `-Record 0x5563ac8ba9a0 '__pthread_internal_list'
|-RecordDecl 0x5563ac8bacb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5563ac8bad58 parent 0x5563ac844e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5563ac8bae30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5563ac8bae98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5563ac8baf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5563ac8baf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5563ac8bafd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5563ac8bb038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5563ac8bf110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5563ac8bf1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5563ac8bf2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5563ac8bf318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5563ac8bf4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5563ac8bf440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5563ac8bad30 'pthread_mutex_t'
|     `-Record 0x5563ac8bacb0 ''
|-RecordDecl 0x5563ac8bf510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5563ac8bf650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5563ac8bf6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5563ac8bf770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5563ac8bf710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5563ac8bf590 'pthread_mutexattr_t'
|     `-Record 0x5563ac8bf510 ''
|-RecordDecl 0x5563ac8bf7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5563ac8bf888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5563ac8bf950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5563ac8bf9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5563ac8bfa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5563ac8bfa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5563ac8bfaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5563ac8bfb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5563ac8bfbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5563ac8bfc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5563ac8bfce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_6/mix017_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_6/mix017_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5563ac8bfdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5563ac8bfe38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5563ac8bff70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5563ac8bff10 'union pthread_cond_t' sugar
|   `-RecordType 0x5563ac8bf860 'pthread_cond_t'
|     `-Record 0x5563ac8bf7e0 ''
|-RecordDecl 0x5563ac8bffe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5563ac8c1130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5563ac8c1198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5563ac8c1250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5563ac8c11f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5563ac8c0060 'pthread_condattr_t'
|     `-Record 0x5563ac8bffe0 ''
|-TypedefDecl 0x5563ac8c12d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5563ac844fb0 'unsigned int'
|-TypedefDecl 0x5563ac8c1348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5563ac844f10 'int'
|-RecordDecl 0x5563ac8c13a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5563ac8c1448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5563ac8c1510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5563ac8c1578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5563ac8c15e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5563ac8c1648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5563ac8c16b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5563ac8c1718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5563ac8c1780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5563ac8c17e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5563ac8c1850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5563ac8c18b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5563ac8c1920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5563ac8c19d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_6/mix017_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_6/mix017_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5563ac8c1a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5563ac8c1ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5563ac8c1c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5563ac8c1bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5563ac8c1420 'pthread_rwlock_t'
|     `-Record 0x5563ac8c13a0 ''
|-RecordDecl 0x5563ac8c1ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5563ac8c1de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5563ac8c1e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5563ac8c1f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5563ac8c1ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5563ac8c1d20 'pthread_rwlockattr_t'
|     `-Record 0x5563ac8c1ca0 ''
|-TypedefDecl 0x5563ac8c1f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5563ac844f14 'volatile int' volatile
|   `-BuiltinType 0x5563ac844f10 'int'
|-RecordDecl 0x5563ac8c1fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5563ac8c3140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5563ac8c31a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5563ac8c3260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5563ac8c3200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5563ac8c2060 'pthread_barrier_t'
|     `-Record 0x5563ac8c1fe0 ''
|-RecordDecl 0x5563ac8c32d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5563ac8c33d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5563ac8c3438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5563ac8c34f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5563ac8c3490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5563ac8c3350 'pthread_barrierattr_t'
|     `-Record 0x5563ac8c32d0 ''
|-TypedefDecl 0x5563ac8c3608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5563ac8c35a0 'long [8]' 8 
|   `-BuiltinType 0x5563ac844f30 'long'
|-EnumDecl 0x5563ac8c3660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5563ac8c3728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5563ac8c3778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5563ac8c37c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5563ac8c3898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5563ac8c38e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5563ac8c3938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5563ac8c3988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5563ac8c3a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5563ac8c39f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5563ac8c39d8 <col:26> 'int' EnumConstant 0x5563ac8c3898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5563ac8c3a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5563ac8c3a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5563ac8c3a60 <col:29> 'int' EnumConstant 0x5563ac8c38e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5563ac8c3b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5563ac8c3b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5563ac8c3ae8 <col:30> 'int' EnumConstant 0x5563ac8c3938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5563ac8c3ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5563ac8c3b90 <col:27> 'int'
|     `-DeclRefExpr 0x5563ac8c3b70 <col:27> 'int' EnumConstant 0x5563ac8c3a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5563ac8c3bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5563ac8c3cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5563ac8c3d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5563ac8c3d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5563ac8c3d18 <col:30> 'int' EnumConstant 0x5563ac8c3cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5563ac8c3da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5563ac8c3e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5563ac8c3e10 <col:29> 'int'
|     `-DeclRefExpr 0x5563ac8c3df0 <col:29> 'int' EnumConstant 0x5563ac8c3da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5563ac8c3e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5563ac8c3f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5563ac8c3f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5563ac8c3fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5563ac8c4038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5563ac8c4150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5563ac8c41a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5563ac8c41f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5563ac8c4278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5563ac8c4260 <col:31> 'int'
|     `-DeclRefExpr 0x5563ac8c4240 <col:31> 'int' EnumConstant 0x5563ac8c4150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5563ac8c42c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5563ac8c4398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5563ac8c43e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5563ac8c4438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5563ac8c4508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5563ac8c4558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5563ac8c45a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5563ac8c4678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5563ac8c46c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5563ac8c4718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5563ac8c4958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5563ac8c49c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5563ac8c4a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5563ac8c4b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5563ac8c4b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5563ac8c4c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5563ac8c4cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5563ac8c4d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5563ac8c4dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5563ac8c4e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5563ac8c5488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5563ac8c4f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5563ac8c5030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5563ac8c5270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5563ac8c52f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5563ac8c5548 <col:47>
| |-NonNullAttr 0x5563ac8c55a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5563ac8c55d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5563ac8c5700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5563ac8c5630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5563ac8c5958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5563ac8c57b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5563ac8c5838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5563ac8c5b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5563ac8c5a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5563ac8c5bd0 <col:60>
|-FunctionDecl 0x5563ac8c5d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5563ac8c5dc0 <col:54>
| `-ConstAttr 0x5563ac8c5e18 <col:95>
|-FunctionDecl 0x5563ac8c5fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5563ac8c5e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5563ac8c5ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5563ac8c6098 <line:394:19>
| `-ConstAttr 0x5563ac8c60f0 <col:60>
|-FunctionDecl 0x5563ac8c7b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5563ac8c79d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5563ac8c7bb0 <col:71>
| `-NonNullAttr 0x5563ac8c7c08 <col:112, col:126> 1
|-FunctionDecl 0x5563ac8c7d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5563ac8c7c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5563ac8c7db8 <line:397:22>
| `-NonNullAttr 0x5563ac8c7e10 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8c8038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5563ac8c7e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5563ac8c7ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5563ac8c80e8 <line:400:22>
| `-NonNullAttr 0x5563ac8c8140 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8c8348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8c8188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5563ac8c8208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5563ac8c83f8 <line:403:22>
| `-NonNullAttr 0x5563ac8c8450 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8c86a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5563ac8c8498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5563ac8c8540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5563ac8c8758 <line:406:22>
| `-NonNullAttr 0x5563ac8c87b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8c99e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5563ac8c87f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5563ac8c8870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5563ac8c9a98 <line:409:22>
| `-NonNullAttr 0x5563ac8c9af0 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8c9d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5563ac8c9b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5563ac8c9bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5563ac8c9dd8 <line:412:22>
| `-NonNullAttr 0x5563ac8c9e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8ca068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5563ac8c9e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5563ac8c9f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5563ac8ca118 <col:37>
| `-NonNullAttr 0x5563ac8ca170 <col:78, col:95> 1 2
|-FunctionDecl 0x5563ac8ca358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8ca1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5563ac8ca238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5563ac8ca408 <line:418:22>
| `-NonNullAttr 0x5563ac8ca460 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8ca5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8ca4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5563ac8ca528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5563ac8ca698 <line:420:22>
| `-NonNullAttr 0x5563ac8ca6f0 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8ca898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8ca738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5563ac8ca7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5563ac8ca948 <line:423:22>
| `-NonNullAttr 0x5563ac8ca9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8cab48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8caa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5563ac8caa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5563ac8cabf8 <line:426:22>
| `-NonNullAttr 0x5563ac8cac50 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8cadf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8cac98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5563ac8cad18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5563ac8caea8 <line:429:22>
| `-NonNullAttr 0x5563ac8caf00 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8cb088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8caf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5563ac8cafc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5563ac8cb138 <line:431:22>
| `-NonNullAttr 0x5563ac8cb190 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8cb3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5563ac8cb1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5563ac8cb258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5563ac8cb468 <line:434:22>
| |-NonNullAttr 0x5563ac8cb4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5563ac8cb4f8 <col:100> "" ""
|-FunctionDecl 0x5563ac8cb708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5563ac8cb548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5563ac8cb5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5563ac8cb7b8 <line:437:22>
| |-NonNullAttr 0x5563ac8cb810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5563ac8cb848 <col:97> "" ""
|-FunctionDecl 0x5563ac8cba48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5563ac8cb898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5563ac8cb910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5563ac8cbaf8 <line:440:22>
| `-NonNullAttr 0x5563ac8cbb50 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8cbcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5563ac8cbb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5563ac8cbc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5563ac8cbd80 <line:443:22>
| `-NonNullAttr 0x5563ac8cbdd8 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8cc0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5563ac8cbe28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5563ac8cbea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5563ac8cbf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5563ac8cc180 <line:447:22>
| `-NonNullAttr 0x5563ac8cc1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5563ac8cc488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5563ac8cc230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5563ac8cc2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5563ac8cc328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5563ac8cc540 <col:43>
| `-NonNullAttr 0x5563ac8cc598 <col:84, col:98> 1
|-FunctionDecl 0x5563ac8cc858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5563ac8cc5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5563ac8cc668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5563ac8cc6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5563ac8cc910 <line:452:22>
| `-NonNullAttr 0x5563ac8cc968 <col:63, col:77> 3
|-FunctionDecl 0x5563ac8ccc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5563ac8cc9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5563ac8cca60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5563ac8ccaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5563ac8ccd30 <line:456:22>
| `-NonNullAttr 0x5563ac8ccd88 <col:63, col:80> 2 3
|-FunctionDecl 0x5563ac8ccf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5563ac8ccdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5563ac8cce58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5563ac8cd028 <line:458:22>
|-FunctionDecl 0x5563ac8cd3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5563ac8cd0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5563ac8cd290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5563ac8cd4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5563ac8cd650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5563ac8cd530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5563ac8cd5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5563ac8cd838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5563ac8cd718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5563ac8cd798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5563ac8cd9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5563ac8cd8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5563ac8cdb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5563ac8cdbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5563ac8cdc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5563ac8cdd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5563ac8cddd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5563ac8cdfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_6/mix017_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5563ac8ce098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5563ac8ce150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5563ac8ce0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5563ac8cdc50 '__pthread_unwind_buf_t'
| |   `-Record 0x5563ac8cdbd0 ''
| `-AlignedAttr 0x5563ac8ce1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5563ac8ce220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5563ac8ce380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5563ac8ce3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5563ac8ce450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5563ac8ce4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5563ac8ce6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5563ac8ce5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5563ac8ce808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5563ac8ce778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5563ac8cea00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5563ac8ce8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5563ac8ceaa8 <line:487:22>
|-RecordDecl 0x5563ac8ceb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5563ac8cee18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5563ac8cec78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5563ac8cecf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5563ac8ceec8 <col:86>
| `-ReturnsTwiceAttr 0x5563ac8cef20 <col:12> Implicit
|-FunctionDecl 0x5563ac8cf248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5563ac8ceff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5563ac8cf100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5563ac8cf2f8 <line:493:22>
| `-NonNullAttr 0x5563ac8cf350 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8cf4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5563ac8cf398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5563ac8cf570 <line:495:22>
| `-NonNullAttr 0x5563ac8cf5c8 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8cf6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5563ac8cf618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5563ac8cf778 <line:497:22>
| `-NonNullAttr 0x5563ac8cf7d0 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8cf8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5563ac8cf818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5563ac8cf978 <line:499:22>
| `-NonNullAttr 0x5563ac8cf9d0 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8d0c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5563ac8d0a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5563ac8d0ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5563ac8d0cd8 <col:36>
| `-NonNullAttr 0x5563ac8d0d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5563ac8d0e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5563ac8d0d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5563ac8d0ed8 <line:504:22>
| `-NonNullAttr 0x5563ac8d0f30 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8d11c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8d0fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5563ac8d1060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5563ac8d1278 <line:508:22>
| `-NonNullAttr 0x5563ac8d12d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8d1598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8d1318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5563ac8d1398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5563ac8d1418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5563ac8d1650 <line:512:22>
| `-NonNullAttr 0x5563ac8d16a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5563ac8d17b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5563ac8d16f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5563ac8d1858 <line:514:22>
| `-NonNullAttr 0x5563ac8d18b0 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d1ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5563ac8d1960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5563ac8d1b80 <line:516:22>
| `-NonNullAttr 0x5563ac8d1bd8 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d1ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5563ac8d1c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5563ac8d1d88 <line:518:22>
| `-NonNullAttr 0x5563ac8d1de0 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d2008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8d1e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5563ac8d1ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5563ac8d20b8 <line:522:22>
| `-NonNullAttr 0x5563ac8d2110 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8d2318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8d2158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5563ac8d21d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5563ac8d23c8 <line:525:22>
| `-NonNullAttr 0x5563ac8d2420 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d25c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8d2468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5563ac8d24e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5563ac8d2678 <line:528:22>
| `-NonNullAttr 0x5563ac8d26d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8d2858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8d2718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5563ac8d2798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5563ac8d2908 <line:530:22>
| `-NonNullAttr 0x5563ac8d2960 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d2b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8d29a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5563ac8d2a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5563ac8d2bd0 <line:534:22>
| `-NonNullAttr 0x5563ac8d2c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8d2db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8d2c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5563ac8d2cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5563ac8d2e68 <line:537:22>
| `-NonNullAttr 0x5563ac8d2ec0 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d3068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8d2f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5563ac8d2f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5563ac8d3118 <line:541:22>
| `-NonNullAttr 0x5563ac8d3170 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8d32f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8d31b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5563ac8d3238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5563ac8d33a8 <line:544:22>
| `-NonNullAttr 0x5563ac8d3400 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d35e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5563ac8d3448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5563ac8d34c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5563ac8d3698 <line:547:22>
| `-NonNullAttr 0x5563ac8d36f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8d3878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8d3738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5563ac8d37b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5563ac8d3928 <line:550:22>
| `-NonNullAttr 0x5563ac8d3980 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d4cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5563ac8d4aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5563ac8d4bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5563ac8d4da8 <col:29>
| `-NonNullAttr 0x5563ac8d4e00 <col:70, col:84> 1
|-FunctionDecl 0x5563ac8d4f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5563ac8d4e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5563ac8d5020 <line:555:22>
| `-NonNullAttr 0x5563ac8d5078 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d5180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5563ac8d50c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5563ac8d5228 <line:557:22>
| `-NonNullAttr 0x5563ac8d5280 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8d5380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5563ac8d52c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5563ac8d5428 <line:559:19>
| `-NonNullAttr 0x5563ac8d5480 <col:49, col:63> 1
|-FunctionDecl 0x5563ac8d56b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5563ac8d54c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5563ac8d5558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5563ac8d5768 <col:39>
| `-NonNullAttr 0x5563ac8d57c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5563ac8d58c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5563ac8d5808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5563ac8d5968 <line:564:22>
| `-NonNullAttr 0x5563ac8d59c0 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8d5b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5563ac8d5a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5563ac8d5bd0 <line:566:22>
| `-NonNullAttr 0x5563ac8d5c28 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8d5de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5563ac8d5c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5563ac8d5d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5563ac8d5e98 <col:39>
| `-NonNullAttr 0x5563ac8d5ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5563ac8d5ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5563ac8d5f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5563ac8d6098 <line:571:22>
| `-NonNullAttr 0x5563ac8d60f0 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8d62d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5563ac8d61a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5563ac8d6380 <line:573:22>
| `-NonNullAttr 0x5563ac8d63d8 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d64e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5563ac8d6428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5563ac8d6588 <line:575:22>
| `-NonNullAttr 0x5563ac8d65e0 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d6808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8d6628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5563ac8d66a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5563ac8d68b8 <line:579:22>
| `-NonNullAttr 0x5563ac8d6910 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8d6b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8d6958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5563ac8d69d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5563ac8d6be8 <line:582:22>
| `-NonNullAttr 0x5563ac8d6c40 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d6de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8d6c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5563ac8d6d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5563ac8d6e98 <line:586:22>
| `-NonNullAttr 0x5563ac8d6ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8d7078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8d6f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5563ac8d6fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5563ac8d7128 <col:36>
| `-NonNullAttr 0x5563ac8d7180 <col:77, col:91> 1
|-FunctionDecl 0x5563ac8d74b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5563ac8d7260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5563ac8d7370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5563ac8d7568 <line:591:22>
| `-NonNullAttr 0x5563ac8d75c0 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d7738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5563ac8d7608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5563ac8d77e0 <line:593:22>
| `-NonNullAttr 0x5563ac8d7838 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d7940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5563ac8d7888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5563ac8d79e8 <line:595:22>
| `-NonNullAttr 0x5563ac8d7a40 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8d7b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5563ac8d7aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5563ac8d7c00 <line:597:22>
| `-NonNullAttr 0x5563ac8d7c58 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8d7e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5563ac8d7ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5563ac8d7d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5563ac8d7f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5563ac8d8268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5563ac8d7fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5563ac8d8030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5563ac8d80c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5563ac8d8320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5563ac8d8538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5563ac8d8400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5563ac8d85e0 <line:606:22>
| `-NonNullAttr 0x5563ac8d8638 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d8740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5563ac8d8688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5563ac8d87e8 <line:608:22>
| `-NonNullAttr 0x5563ac8d8840 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d8aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8d8888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5563ac8d8908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5563ac8d8b50 <line:612:22>
| `-NonNullAttr 0x5563ac8d8ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8d8db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8d8bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5563ac8d8c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5563ac8d8e68 <col:37>
| `-NonNullAttr 0x5563ac8d8ec0 <col:78, col:92> 1
|-FunctionDecl 0x5563ac8d90d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5563ac8d8f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5563ac8d8fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5563ac8d9188 <line:618:22>
| `-NonNullAttr 0x5563ac8d91e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8d93a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5563ac8d9228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5563ac8d92a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5563ac8d9458 <line:621:22>
| `-NonNullAttr 0x5563ac8d94b0 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d9758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5563ac8d9590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5563ac8d9610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5563ac8d9808 <line:623:22>
| `-NonNullAttr 0x5563ac8d9860 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d99d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5563ac8d98a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5563ac8d9ab0 <line:625:22>
| `-NonNullAttr 0x5563ac8d9b08 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8d9c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5563ac8d9b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5563ac8d9cb8 <line:627:22>
| `-NonNullAttr 0x5563ac8d9d10 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8d9e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5563ac8d9d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5563ac8d9eb8 <line:629:22>
| `-NonNullAttr 0x5563ac8d9f10 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8da010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5563ac8d9f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5563ac8da0b8 <line:631:22>
| `-NonNullAttr 0x5563ac8da110 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8da4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5563ac8da1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5563ac8da300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5563ac8da380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5563ac8da5a0 <line:635:22>
| `-NonNullAttr 0x5563ac8da5f8 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8da778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5563ac8da648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5563ac8da820 <line:637:22>
| `-NonNullAttr 0x5563ac8da878 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8da980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5563ac8da8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5563ac8daa28 <line:639:22>
| `-NonNullAttr 0x5563ac8daa80 <col:52, col:66> 1
|-FunctionDecl 0x5563ac8dbc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5563ac8dbb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5563ac8dbd30 <line:641:22>
| `-NonNullAttr 0x5563ac8dbd88 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8dbe90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5563ac8dbdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5563ac8dbf38 <line:643:22>
| `-NonNullAttr 0x5563ac8dbf90 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8dc1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5563ac8dbfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5563ac8dc058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5563ac8dc268 <line:647:22>
| `-NonNullAttr 0x5563ac8dc2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5563ac8dc4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5563ac8dc308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5563ac8dc388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5563ac8dc578 <line:650:22>
| `-NonNullAttr 0x5563ac8dc5d0 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8dc918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5563ac8dc6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5563ac8dc7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5563ac8dc9c8 <line:653:22>
| `-NonNullAttr 0x5563ac8dca20 <col:63, col:77> 1
|-FunctionDecl 0x5563ac8dcb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5563ac8dca68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5563ac8dcc30 <col:69>
|-FunctionDecl 0x5563ac8dcda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5563ac8dcc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5563ac8dce50 <col:72>
|-FunctionDecl 0x5563ac8dd088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5563ac8dceb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5563ac8dcf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5563ac8dd138 <col:44>
|-FunctionDecl 0x5563ac8dd358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5563ac8dd1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5563ac8dd218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5563ac8dd408 <line:660:22>
| `-NonNullAttr 0x5563ac8dd460 <col:63, col:77> 2
|-FunctionDecl 0x5563ac8dd8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5563ac8dd540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5563ac8dd650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5563ac8dd760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5563ac8dd960 <col:47>
|-FunctionDecl 0x5563ac8ddaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5563ac8dd9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5563ac8ddc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5563ac8ddbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5563ac8ddda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5563ac8ddd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5563ac8ddef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5563ac8dde60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5563ac8ddfc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5563ac8de080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5563ac8de140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5563ac8de1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5563ac8de278 prev 0x5563ac8de1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5563ac8de2e0 <col:24> 'int' 0
|-VarDecl 0x5563ac8de318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5563ac8de398 prev 0x5563ac8de318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5563ac8de400 <col:27> 'int' 0
|-VarDecl 0x5563ac8de438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5563ac8de4b8 prev 0x5563ac8de438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5563ac8de520 <col:27> 'int' 0
|-VarDecl 0x5563ac8de558 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5563ac8de5d8 prev 0x5563ac8de558 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5563ac8de640 <col:27> 'int' 0
|-VarDecl 0x5563ac8de678 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5563ac8de6f8 prev 0x5563ac8de678 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5563ac8de760 <col:27> 'int' 0
|-VarDecl 0x5563ac8de798 <line:682:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5563ac8de818 prev 0x5563ac8de798 <line:683:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5563ac8de880 <col:27> 'int' 0
|-VarDecl 0x5563ac8de8b8 <line:684:1, col:5> col:5 used a 'int'
|-VarDecl 0x5563ac8de938 prev 0x5563ac8de8b8 <line:685:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5563ac8de9a0 <col:9> 'int' 0
|-VarDecl 0x5563ac8de9d0 <line:686:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5563ac8dea48 <line:687:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5563ac8deb00 <line:688:1, col:5> col:5 used x 'int'
|-VarDecl 0x5563ac8deb80 prev 0x5563ac8deb00 <line:689:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5563ac8debe8 <col:9> 'int' 0
|-VarDecl 0x5563ac8dec20 <line:690:1, col:5> col:5 used y 'int'
|-VarDecl 0x5563ac8deca0 prev 0x5563ac8dec20 <line:691:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5563ac8ded08 <col:9> 'int' 0
|-VarDecl 0x5563ac8ded38 <line:692:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5563ac8dedb8 <line:693:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5563ac8dee30 <line:694:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5563ac8deea8 <line:695:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5563ac8def20 <line:696:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5563ac8def98 <line:697:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x5563ac8df010 <line:698:1, col:7> col:7 used y$r_buff0_thd4 '_Bool'
|-VarDecl 0x5563ac8df088 <line:699:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5563ac8df100 <line:700:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5563ac8df178 <line:701:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5563ac8df1f0 <line:702:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x5563ac8df268 <line:703:1, col:7> col:7 used y$r_buff1_thd4 '_Bool'
|-VarDecl 0x5563ac8df2e0 <line:704:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5563ac8df360 <line:705:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5563ac8df3e0 <line:706:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5563ac8df458 <line:707:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5563ac8df4d8 <line:708:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5563ac8df550 <line:709:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5563ac8df5d0 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x5563ac8df650 prev 0x5563ac8df5d0 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5563ac8df6b8 <col:9> 'int' 0
|-VarDecl 0x5563ac8df6e8 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5563ac8df760 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5563ac8df878 prev 0x5563ac8ddaf0 <line:714:1, line:728:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5563ac8df7e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5563ac8dfe58 <line:715:1, line:728:1>
|   |-CallExpr 0x5563ac8df988 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8df970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8df920 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8df9e8 <line:717:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5563ac8df9a8 <col:3> 'int' lvalue Var 0x5563ac8de938 'a' 'int'
|   | `-IntegerLiteral 0x5563ac8df9c8 <col:7> 'int' 1
|   |-CallExpr 0x5563ac8dfa40 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8dfa28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8dfa08 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8dfa98 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8dfa80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8dfa60 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8dfb28 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5563ac8dfab8 <col:3> 'int' lvalue Var 0x5563ac8de398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5563ac8dfb10 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8dfad8 <col:25> 'int' lvalue Var 0x5563ac8deb80 'x' 'int'
|   |-CallExpr 0x5563ac8dfb80 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8dfb68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8dfb48 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8dfbd8 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8dfbc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8dfba0 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5563ac8dfc30 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8dfc18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8dfbf8 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8dfc88 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8dfc70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8dfc50 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8dfd40 <line:725:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5563ac8dfca8 <col:3> 'int' lvalue Var 0x5563ac8de278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5563ac8dfd20 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5563ac8dfd08 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563ac8dfcc8 <col:22> 'int' lvalue Var 0x5563ac8de278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5563ac8dfce8 <col:41> 'int' 1
|   |-CallExpr 0x5563ac8dfd98 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8dfd80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8dfd60 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5563ac8dfe48 <line:727:3, col:36>
|     `-CallExpr 0x5563ac8dfe28 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5563ac8dfe10 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5563ac8dfdb8 <col:10> 'void *(void)' Function 0x5563ac884958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5563ac8dff78 prev 0x5563ac8ddc48 <line:729:1, line:756:1> line:729:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5563ac8dfee0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5563ac8e2e60 <line:730:1, line:756:1>
|   |-CallExpr 0x5563ac8e0058 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e0040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e0020 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e00b8 <line:732:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e0078 <col:3> 'int' lvalue Var 0x5563ac8deb80 'x' 'int'
|   | `-IntegerLiteral 0x5563ac8e0098 <col:7> 'int' 1
|   |-CallExpr 0x5563ac8e0110 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e00f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e00d8 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8e0168 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e0150 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e0130 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e0218 <line:735:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e0188 <col:3> '_Bool' lvalue Var 0x5563ac8df6e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e0200 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5563ac8e01e0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5563ac8e01c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5563ac8e01a8 <col:19> 'void *(void)' Function 0x5563ac884958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5563ac8e02c8 <line:736:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e0238 <col:3> '_Bool' lvalue Var 0x5563ac8df760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e02b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5563ac8e0290 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5563ac8e0278 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5563ac8e0258 <col:19> 'void *(void)' Function 0x5563ac884958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5563ac8e0340 <line:737:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e02e8 <col:3> '_Bool' lvalue Var 0x5563ac8ded38 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e0328 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e0308 <col:21> '_Bool' lvalue Var 0x5563ac8df760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5563ac8e03b8 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e0360 <col:3> 'int' lvalue Var 0x5563ac8dedb8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5563ac8e03a0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e0380 <col:15> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
|   |-BinaryOperator 0x5563ac8e07f0 <line:739:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e03d8 <col:3> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
|   | `-ConditionalOperator 0x5563ac8e07c0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5563ac8e05e8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5563ac8e0508 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5563ac8e0430 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5563ac8e0418 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5563ac8e03f8 <col:8> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5563ac8e04e8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5563ac8e0480 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5563ac8e0468 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5563ac8e0448 <col:27> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5563ac8e04d0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5563ac8e04b8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5563ac8e0498 <col:46> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5563ac8e05c8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5563ac8e0560 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5563ac8e0548 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5563ac8e0528 <col:65> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5563ac8e05b0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5563ac8e0598 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5563ac8e0578 <col:84> '_Bool' lvalue Var 0x5563ac8df178 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5563ac8e07a8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563ac8e0608 <col:101> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
|   |   `-ParenExpr 0x5563ac8e0788 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5563ac8e0758 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5563ac8e06c8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5563ac8e0680 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5563ac8e0668 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5563ac8e0628 <col:106> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5563ac8e06b0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5563ac8e0698 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5563ac8e0648 <col:124> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5563ac8e0728 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5563ac8e06e8 <col:141> 'int' lvalue Var 0x5563ac8df3e0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5563ac8e0740 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5563ac8e0708 <col:153> 'int' lvalue Var 0x5563ac8df4d8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5563ac8e0d10 <line:740:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e0810 <col:3> 'int' lvalue Var 0x5563ac8df3e0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5563ac8e0ce0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5563ac8e0cb0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5563ac8e0c98 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5563ac8e0830 <col:15> '_Bool' lvalue Var 0x5563ac8df760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5563ac8e0cc8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563ac8e0850 <col:31> 'int' lvalue Var 0x5563ac8df3e0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5563ac8e0c78 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5563ac8e0c48 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5563ac8e0a60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5563ac8e0980 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5563ac8e08a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5563ac8e0890 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5563ac8e0870 <col:45> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5563ac8e0960 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5563ac8e08f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5563ac8e08e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5563ac8e08c0 <col:64> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5563ac8e0948 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5563ac8e0930 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5563ac8e0910 <col:83> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5563ac8e0a40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5563ac8e09d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5563ac8e09c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5563ac8e09a0 <col:102> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5563ac8e0a28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5563ac8e0a10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5563ac8e09f0 <col:121> '_Bool' lvalue Var 0x5563ac8df178 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5563ac8e0c30 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5563ac8e0a80 <col:138> 'int' lvalue Var 0x5563ac8df3e0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5563ac8e0c10 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5563ac8e0be0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5563ac8e0b50 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5563ac8e0af8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5563ac8e0ae0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5563ac8e0aa0 <col:151> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5563ac8e0b38 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5563ac8e0b20 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5563ac8e0ac0 <col:169> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5563ac8e0bb0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5563ac8e0b70 <col:186> 'int' lvalue Var 0x5563ac8df3e0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5563ac8e0bc8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5563ac8e0b90 <col:198> 'int' lvalue Var 0x5563ac8df3e0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5563ac8e1220 <line:741:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e0d30 <col:3> 'int' lvalue Var 0x5563ac8df4d8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5563ac8e11f0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5563ac8e11c0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5563ac8e11a8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5563ac8e0d50 <col:15> '_Bool' lvalue Var 0x5563ac8df760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5563ac8e11d8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563ac8e0d70 <col:31> 'int' lvalue Var 0x5563ac8df4d8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5563ac8e1188 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5563ac8e1158 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5563ac8e0f80 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5563ac8e0ea0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5563ac8e0dc8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5563ac8e0db0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5563ac8e0d90 <col:45> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5563ac8e0e80 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5563ac8e0e18 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5563ac8e0e00 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5563ac8e0de0 <col:64> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5563ac8e0e68 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5563ac8e0e50 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5563ac8e0e30 <col:83> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5563ac8e0f60 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5563ac8e0ef8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5563ac8e0ee0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5563ac8e0ec0 <col:102> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5563ac8e0f48 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5563ac8e0f30 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5563ac8e0f10 <col:121> '_Bool' lvalue Var 0x5563ac8df178 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5563ac8e1140 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5563ac8e0fa0 <col:138> 'int' lvalue Var 0x5563ac8df4d8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5563ac8e1120 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5563ac8e10f0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5563ac8e1060 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5563ac8e1018 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5563ac8e1000 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5563ac8e0fc0 <col:151> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5563ac8e1048 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5563ac8e1030 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5563ac8e0fe0 <col:169> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5563ac8e10c0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5563ac8e1080 <col:186> 'int' lvalue Var 0x5563ac8df4d8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5563ac8e10d8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5563ac8e10a0 <col:198> 'int' lvalue Var 0x5563ac8df4d8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5563ac8e17c8 <line:742:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e1240 <col:3> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e17b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e1780 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5563ac8e1738 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5563ac8e1720 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5563ac8e1260 <col:20> '_Bool' lvalue Var 0x5563ac8df760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e1768 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5563ac8e1750 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5563ac8e1280 <col:36> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5563ac8e1700 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5563ac8e16d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5563ac8e1490 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5563ac8e13b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5563ac8e12d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5563ac8e12c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5563ac8e12a0 <col:55> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5563ac8e1390 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5563ac8e1328 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5563ac8e1310 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5563ac8e12f0 <col:74> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5563ac8e1378 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5563ac8e1360 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5563ac8e1340 <col:93> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5563ac8e1470 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5563ac8e1408 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5563ac8e13f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5563ac8e13d0 <col:112> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5563ac8e1458 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5563ac8e1440 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5563ac8e1420 <col:131> '_Bool' lvalue Var 0x5563ac8df178 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5563ac8e16b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5563ac8e16a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5563ac8e14b0 <col:148> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5563ac8e1680 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5563ac8e1650 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5563ac8e1570 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5563ac8e1528 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5563ac8e1510 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5563ac8e14d0 <col:166> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5563ac8e1558 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5563ac8e1540 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5563ac8e14f0 <col:184> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5563ac8e1608 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5563ac8e15c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5563ac8e1590 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5563ac8e1638 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5563ac8e1620 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5563ac8e15e8 <col:212> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5563ac8e1da8 <line:743:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e17e8 <col:3> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e1d90 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e1d60 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5563ac8e1d18 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5563ac8e1d00 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5563ac8e1808 <col:20> '_Bool' lvalue Var 0x5563ac8df760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e1d48 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5563ac8e1d30 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5563ac8e1828 <col:36> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5563ac8e1ce0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5563ac8e1cb0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5563ac8e1a38 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5563ac8e1958 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5563ac8e1880 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5563ac8e1868 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5563ac8e1848 <col:55> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5563ac8e1938 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5563ac8e18d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5563ac8e18b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5563ac8e1898 <col:74> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5563ac8e1920 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5563ac8e1908 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5563ac8e18e8 <col:93> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5563ac8e1a18 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5563ac8e19b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5563ac8e1998 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5563ac8e1978 <col:112> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5563ac8e1a00 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5563ac8e19e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5563ac8e19c8 <col:131> '_Bool' lvalue Var 0x5563ac8df178 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5563ac8e1c98 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5563ac8e1c80 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5563ac8e1a58 <col:148> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5563ac8e1c60 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5563ac8e1c30 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5563ac8e1b30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5563ac8e1ad0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5563ac8e1ab8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5563ac8e1a78 <col:166> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5563ac8e1b00 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5563ac8e1ae8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5563ac8e1a98 <col:184> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5563ac8e1c00 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5563ac8e1b80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5563ac8e1b50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5563ac8e1c18 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5563ac8e1bd8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5563ac8e1ba8 <col:219> 'int' 0
|   |-BinaryOperator 0x5563ac8e2350 <line:744:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e1dc8 <col:3> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e2338 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e2308 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5563ac8e22c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5563ac8e22a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5563ac8e1de8 <col:20> '_Bool' lvalue Var 0x5563ac8df760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e22f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5563ac8e22d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5563ac8e1e08 <col:36> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5563ac8e2288 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5563ac8e2258 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5563ac8e2018 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5563ac8e1f38 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5563ac8e1e60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5563ac8e1e48 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5563ac8e1e28 <col:55> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5563ac8e1f18 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5563ac8e1eb0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5563ac8e1e98 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5563ac8e1e78 <col:74> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5563ac8e1f00 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5563ac8e1ee8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5563ac8e1ec8 <col:93> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5563ac8e1ff8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5563ac8e1f90 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5563ac8e1f78 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5563ac8e1f58 <col:112> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5563ac8e1fe0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5563ac8e1fc8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5563ac8e1fa8 <col:131> '_Bool' lvalue Var 0x5563ac8df178 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5563ac8e2240 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5563ac8e2228 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5563ac8e2038 <col:148> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5563ac8e2208 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5563ac8e21d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5563ac8e20f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5563ac8e20b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5563ac8e2098 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5563ac8e2058 <col:166> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5563ac8e20e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5563ac8e20c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5563ac8e2078 <col:184> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5563ac8e2190 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5563ac8e2148 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5563ac8e2118 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5563ac8e21c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5563ac8e21a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5563ac8e2170 <col:212> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5563ac8e2918 <line:745:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e2370 <col:3> '_Bool' lvalue Var 0x5563ac8df178 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e2900 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e28d0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5563ac8e2888 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5563ac8e2870 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5563ac8e2390 <col:20> '_Bool' lvalue Var 0x5563ac8df760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e28b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5563ac8e28a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5563ac8e23b0 <col:36> '_Bool' lvalue Var 0x5563ac8df178 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5563ac8e2850 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5563ac8e2820 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5563ac8e25c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5563ac8e24e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5563ac8e2408 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5563ac8e23f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5563ac8e23d0 <col:55> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5563ac8e24c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5563ac8e2458 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5563ac8e2440 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5563ac8e2420 <col:74> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5563ac8e24a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5563ac8e2490 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5563ac8e2470 <col:93> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5563ac8e25a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5563ac8e2538 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5563ac8e2520 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5563ac8e2500 <col:112> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5563ac8e2588 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5563ac8e2570 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5563ac8e2550 <col:131> '_Bool' lvalue Var 0x5563ac8df178 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5563ac8e2808 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5563ac8e27f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5563ac8e25e0 <col:148> '_Bool' lvalue Var 0x5563ac8df178 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5563ac8e27d0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5563ac8e27a0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5563ac8e26a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5563ac8e2658 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5563ac8e2640 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5563ac8e2600 <col:166> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5563ac8e2688 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5563ac8e2670 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5563ac8e2620 <col:184> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5563ac8e2770 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5563ac8e26f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5563ac8e26c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5563ac8e2788 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5563ac8e2748 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5563ac8e2718 <col:219> 'int' 0
|   |-BinaryOperator 0x5563ac8e2990 <line:746:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e2938 <col:3> 'int' lvalue Var 0x5563ac8de4b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5563ac8e2978 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e2958 <col:25> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
|   |-BinaryOperator 0x5563ac8e2ac0 <line:747:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e29b0 <col:3> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
|   | `-ConditionalOperator 0x5563ac8e2a90 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5563ac8e2a48 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5563ac8e2a30 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5563ac8e29d0 <col:7> '_Bool' lvalue Var 0x5563ac8ded38 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5563ac8e2a60 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563ac8e29f0 <col:25> 'int' lvalue Var 0x5563ac8dedb8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5563ac8e2a78 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5563ac8e2a10 <col:37> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
|   |-BinaryOperator 0x5563ac8e2b68 <line:748:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e2ae0 <col:3> '_Bool' lvalue Var 0x5563ac8ded38 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5563ac8e2b40 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5563ac8e2b00 <col:28> 'int' 0
|   |-CallExpr 0x5563ac8e2bc0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e2ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e2b88 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8e2c18 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e2c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e2be0 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5563ac8e2c70 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e2c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e2c38 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8e2cc8 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e2cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e2c90 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e2d80 <line:753:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e2ce8 <col:3> 'int' lvalue Var 0x5563ac8de278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5563ac8e2d60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5563ac8e2d48 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563ac8e2d08 <col:22> 'int' lvalue Var 0x5563ac8de278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5563ac8e2d28 <col:41> 'int' 1
|   |-CallExpr 0x5563ac8e2dd8 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e2dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e2da0 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5563ac8e2e50 <line:755:3, col:36>
|     `-CallExpr 0x5563ac8e2e30 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5563ac8e2e18 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5563ac8e2df8 <col:10> 'void *(void)' Function 0x5563ac884958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5563ac8e2fe8 prev 0x5563ac8ddda0 <line:757:1, line:786:1> line:757:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5563ac8e2f50 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5563ac8e4828 <line:758:1, line:786:1>
|   |-CallExpr 0x5563ac8e30c8 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e30b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e3090 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e3140 <line:760:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e30e8 <col:3> 'int' lvalue Var 0x5563ac8df4d8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5563ac8e3128 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e3108 <col:15> 'int' lvalue Var 0x5563ac8df3e0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5563ac8e31a0 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e3160 <col:3> 'int' lvalue Var 0x5563ac8df3e0 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5563ac8e3180 <col:15> 'int' 1
|   |-BinaryOperator 0x5563ac8e3218 <line:762:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e31c0 <col:3> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e3200 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e31e0 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5563ac8e32b0 <line:763:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e3238 <col:3> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5563ac8e3288 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5563ac8e3258 <col:27> 'int' 1
|   |-CallExpr 0x5563ac8e3438 <line:764:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5563ac8e3420 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5563ac8e32d0 <col:3> 'void (int)' Function 0x5563ac884bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5563ac8e33d0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5563ac8e33b0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5563ac8e3390 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5563ac8e3348 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5563ac8e3330 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5563ac8e32f0 <col:23> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5563ac8e3378 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5563ac8e3360 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5563ac8e3310 <col:41> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5563ac8e34b8 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e3460 <col:3> '_Bool' lvalue Var 0x5563ac8df088 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e34a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e3480 <col:20> '_Bool' lvalue Var 0x5563ac8dee30 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5563ac8e3530 <line:766:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e34d8 <col:3> '_Bool' lvalue Var 0x5563ac8df100 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e3518 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e34f8 <col:20> '_Bool' lvalue Var 0x5563ac8deea8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5563ac8e35a8 <line:767:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e3550 <col:3> '_Bool' lvalue Var 0x5563ac8df178 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e3590 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e3570 <col:20> '_Bool' lvalue Var 0x5563ac8def20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5563ac8e3620 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e35c8 <col:3> '_Bool' lvalue Var 0x5563ac8df1f0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e3608 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e35e8 <col:20> '_Bool' lvalue Var 0x5563ac8def98 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5563ac8e3698 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e3640 <col:3> '_Bool' lvalue Var 0x5563ac8df268 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e3680 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e3660 <col:20> '_Bool' lvalue Var 0x5563ac8df010 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5563ac8e3730 <line:770:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e36b8 <col:3> '_Bool' lvalue Var 0x5563ac8def98 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x5563ac8e3708 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5563ac8e36d8 <col:27> 'int' 1
|   |-CallExpr 0x5563ac8e3788 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e3770 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e3750 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8e37e0 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e37c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e37a8 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e3858 <line:773:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e3800 <col:3> 'int' lvalue Var 0x5563ac8de5d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5563ac8e3840 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e3820 <col:25> 'int' lvalue Var 0x5563ac8df650 'z' 'int'
|   |-CallExpr 0x5563ac8e38b0 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e3898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e3878 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8e3908 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e38f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e38d0 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e3c00 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e3928 <col:3> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
|   | `-ConditionalOperator 0x5563ac8e3bd0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5563ac8e39e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5563ac8e39a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5563ac8e3988 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5563ac8e3948 <col:7> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5563ac8e39d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5563ac8e39b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5563ac8e3968 <col:25> '_Bool' lvalue Var 0x5563ac8def98 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5563ac8e3bb8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563ac8e3a08 <col:42> 'int' lvalue Var 0x5563ac8df3e0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5563ac8e3b98 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5563ac8e3b68 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5563ac8e3ac8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5563ac8e3a80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5563ac8e3a68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5563ac8e3a28 <col:55> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5563ac8e3ab0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5563ac8e3a98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5563ac8e3a48 <col:73> '_Bool' lvalue Var 0x5563ac8df1f0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5563ac8e3b28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5563ac8e3ae8 <col:90> 'int' lvalue Var 0x5563ac8df4d8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5563ac8e3b50 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5563ac8e3b08 <col:102> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
|   |-BinaryOperator 0x5563ac8e3e08 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e3c20 <col:3> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e3df0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e3dc0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5563ac8e3ce0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5563ac8e3c98 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5563ac8e3c80 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5563ac8e3c40 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5563ac8e3cc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5563ac8e3cb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5563ac8e3c60 <col:38> '_Bool' lvalue Var 0x5563ac8def98 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e3d78 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5563ac8e3d30 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5563ac8e3d00 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5563ac8e3da8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5563ac8e3d90 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5563ac8e3d58 <col:66> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5563ac8e40f0 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e3e28 <col:3> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e40d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e40a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5563ac8e3fc8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5563ac8e3ee8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5563ac8e3ea0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5563ac8e3e88 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5563ac8e3e48 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5563ac8e3ed0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5563ac8e3eb8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5563ac8e3e68 <col:38> '_Bool' lvalue Var 0x5563ac8def98 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5563ac8e3fa8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5563ac8e3f60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5563ac8e3f48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5563ac8e3f08 <col:56> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5563ac8e3f90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5563ac8e3f78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5563ac8e3f28 <col:74> '_Bool' lvalue Var 0x5563ac8df1f0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e4060 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5563ac8e4018 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5563ac8e3fe8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5563ac8e4090 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5563ac8e4078 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5563ac8e4040 <col:102> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5563ac8e42f8 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e4110 <col:3> '_Bool' lvalue Var 0x5563ac8def98 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e42e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e42b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5563ac8e41d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5563ac8e4188 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5563ac8e4170 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5563ac8e4130 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5563ac8e41b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5563ac8e41a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5563ac8e4150 <col:38> '_Bool' lvalue Var 0x5563ac8def98 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e4268 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5563ac8e4220 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5563ac8e41f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5563ac8e4298 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5563ac8e4280 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5563ac8e4248 <col:66> '_Bool' lvalue Var 0x5563ac8def98 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5563ac8e45e0 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e4318 <col:3> '_Bool' lvalue Var 0x5563ac8df1f0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e45c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e4598 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5563ac8e44b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5563ac8e43d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5563ac8e4390 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5563ac8e4378 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5563ac8e4338 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5563ac8e43c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5563ac8e43a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5563ac8e4358 <col:38> '_Bool' lvalue Var 0x5563ac8def98 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5563ac8e4498 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5563ac8e4450 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5563ac8e4438 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5563ac8e43f8 <col:56> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5563ac8e4480 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5563ac8e4468 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5563ac8e4418 <col:74> '_Bool' lvalue Var 0x5563ac8df1f0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e4550 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5563ac8e4508 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5563ac8e44d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5563ac8e4580 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5563ac8e4568 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5563ac8e4530 <col:102> '_Bool' lvalue Var 0x5563ac8df1f0 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5563ac8e4638 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e4620 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e4600 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8e4690 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e4678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e4658 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e4748 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e46b0 <col:3> 'int' lvalue Var 0x5563ac8de278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5563ac8e4728 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5563ac8e4710 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563ac8e46d0 <col:22> 'int' lvalue Var 0x5563ac8de278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5563ac8e46f0 <col:41> 'int' 1
|   |-CallExpr 0x5563ac8e47a0 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e4788 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e4768 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5563ac8e4818 <line:785:3, col:36>
|     `-CallExpr 0x5563ac8e47f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5563ac8e47e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5563ac8e47c0 <col:10> 'void *(void)' Function 0x5563ac884958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5563ac8e49c0 prev 0x5563ac8ddef8 <line:787:1, line:809:1> line:787:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5563ac8e4928 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5563ac8e5d40 <line:788:1, line:809:1>
|   |-CallExpr 0x5563ac8e4aa0 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e4a88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e4a68 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e4b00 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e4ac0 <col:3> 'int' lvalue Var 0x5563ac8df650 'z' 'int'
|   | `-IntegerLiteral 0x5563ac8e4ae0 <col:7> 'int' 1
|   |-CallExpr 0x5563ac8e4b78 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e4b60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e4b20 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8e4bd0 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e4bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e4b98 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e4c48 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e4bf0 <col:3> 'int' lvalue Var 0x5563ac8de6f8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5563ac8e4c30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e4c10 <col:25> 'int' lvalue Var 0x5563ac8df650 'z' 'int'
|   |-CallExpr 0x5563ac8e4ca0 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e4c88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e4c68 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8e4cf8 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e4ce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e4cc0 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e4d70 <line:796:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e4d18 <col:3> 'int' lvalue Var 0x5563ac8de818 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5563ac8e4d58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5563ac8e4d38 <col:25> 'int' lvalue Var 0x5563ac8de938 'a' 'int'
|   |-CallExpr 0x5563ac8e4dc8 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e4db0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e4d90 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8e4e20 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e4e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e4de8 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e5108 <line:799:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e4e40 <col:3> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
|   | `-ConditionalOperator 0x5563ac8e50d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5563ac8e4f00 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5563ac8e4eb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5563ac8e4ea0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5563ac8e4e60 <col:7> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5563ac8e4ee8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5563ac8e4ed0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5563ac8e4e80 <col:25> '_Bool' lvalue Var 0x5563ac8df010 'y$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5563ac8e50c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563ac8e4f20 <col:42> 'int' lvalue Var 0x5563ac8df3e0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5563ac8e50a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5563ac8e5070 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5563ac8e4fe0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5563ac8e4f98 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5563ac8e4f80 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5563ac8e4f40 <col:55> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5563ac8e4fc8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5563ac8e4fb0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5563ac8e4f60 <col:73> '_Bool' lvalue Var 0x5563ac8df268 'y$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5563ac8e5040 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5563ac8e5000 <col:90> 'int' lvalue Var 0x5563ac8df4d8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5563ac8e5058 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5563ac8e5020 <col:102> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
|   |-BinaryOperator 0x5563ac8e5310 <line:800:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e5128 <col:3> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e52f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e52c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5563ac8e51e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5563ac8e51a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5563ac8e5188 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5563ac8e5148 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5563ac8e51d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5563ac8e51b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5563ac8e5168 <col:38> '_Bool' lvalue Var 0x5563ac8df010 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e5280 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5563ac8e5238 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5563ac8e5208 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5563ac8e52b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5563ac8e5298 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5563ac8e5260 <col:66> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5563ac8e55f8 <line:801:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e5330 <col:3> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e55e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e55b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5563ac8e54d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5563ac8e53f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5563ac8e53a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5563ac8e5390 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5563ac8e5350 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5563ac8e53d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5563ac8e53c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5563ac8e5370 <col:38> '_Bool' lvalue Var 0x5563ac8df010 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5563ac8e54b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5563ac8e5468 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5563ac8e5450 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5563ac8e5410 <col:56> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5563ac8e5498 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5563ac8e5480 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5563ac8e5430 <col:74> '_Bool' lvalue Var 0x5563ac8df268 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e5568 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5563ac8e5520 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5563ac8e54f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5563ac8e5598 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5563ac8e5580 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5563ac8e5548 <col:102> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5563ac8e5800 <line:802:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e5618 <col:3> '_Bool' lvalue Var 0x5563ac8df010 'y$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e57e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e57b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5563ac8e56d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5563ac8e5690 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5563ac8e5678 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5563ac8e5638 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5563ac8e56c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5563ac8e56a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5563ac8e5658 <col:38> '_Bool' lvalue Var 0x5563ac8df010 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e5770 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5563ac8e5728 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5563ac8e56f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5563ac8e57a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5563ac8e5788 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5563ac8e5750 <col:66> '_Bool' lvalue Var 0x5563ac8df010 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5563ac8e5ae8 <line:803:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5563ac8e5820 <col:3> '_Bool' lvalue Var 0x5563ac8df268 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5563ac8e5ad0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5563ac8e5aa0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5563ac8e59c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5563ac8e58e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5563ac8e5898 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5563ac8e5880 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5563ac8e5840 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5563ac8e58c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5563ac8e58b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5563ac8e5860 <col:38> '_Bool' lvalue Var 0x5563ac8df010 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5563ac8e59a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5563ac8e5958 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5563ac8e5940 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5563ac8e5900 <col:56> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5563ac8e5988 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5563ac8e5970 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5563ac8e5920 <col:74> '_Bool' lvalue Var 0x5563ac8df268 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5563ac8e5a58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5563ac8e5a10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5563ac8e59e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5563ac8e5a88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5563ac8e5a70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5563ac8e5a38 <col:102> '_Bool' lvalue Var 0x5563ac8df268 'y$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5563ac8e5b40 <line:804:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e5b28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e5b08 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5563ac8e5ba8 <line:805:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e5b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e5b70 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5563ac8e5c60 <line:806:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5563ac8e5bc8 <col:3> 'int' lvalue Var 0x5563ac8de278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5563ac8e5c40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5563ac8e5c28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5563ac8e5be8 <col:22> 'int' lvalue Var 0x5563ac8de278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5563ac8e5c08 <col:41> 'int' 1
|   |-CallExpr 0x5563ac8e5cb8 <line:807:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5563ac8e5ca0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5563ac8e5c80 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5563ac8e5d30 <line:808:3, col:36>
|     `-CallExpr 0x5563ac8e5d10 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5563ac8e5cf8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5563ac8e5cd8 <col:10> 'void *(void)' Function 0x5563ac884958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5563ac8e5e10 prev 0x5563ac8ddfc0 <line:810:1, line:812:1> line:810:6 fence 'void ()'
| `-CompoundStmt 0x5563ac8e5eb0 <line:811:1, line:812:1>
|-FunctionDecl 0x5563ac8e5ee0 prev 0x5563ac8de080 <line:813:1, line:815:1> line:813:6 isync 'void ()'
| `-CompoundStmt 0x5563ac8e5f80 <line:814:1, line:815:1>
|-FunctionDecl 0x5563ac8e5fb0 prev 0x5563ac8de140 <line:816:1, line:818:1> line:816:6 lwfence 'void ()'
| `-CompoundStmt 0x5563ac8e6050 <line:817:1, line:818:1>
`-FunctionDecl 0x5563ac8e60b8 <line:819:1, line:845:1> line:819:5 main 'int ()'
  `-CompoundStmt 0x5563ac8e80c0 <line:820:1, line:845:1>
    |-DeclStmt 0x5563ac8e61d0 <line:821:3, col:17>
    | `-VarDecl 0x5563ac8e6168 <col:3, col:13> col:13 used t439 'pthread_t':'unsigned long'
    |-CallExpr 0x5563ac8e63d8 <line:822:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5563ac8e63c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5563ac8e61e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5563ac8c5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5563ac8e6228 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5563ac8e6208 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5563ac8e6168 't439' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5563ac8e6418 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5563ac8e62a0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5563ac8e6278 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5563ac8e6240 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5563ac8e6430 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5563ac8e62c0 <col:38> 'void *(void *)' Function 0x5563ac8df878 'P0' 'void *(void *)'
    | `-ParenExpr 0x5563ac8e6340 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5563ac8e6318 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5563ac8e62e0 <col:51> 'int' 0
    |-DeclStmt 0x5563ac8e64c0 <line:823:3, col:17>
    | `-VarDecl 0x5563ac8e6458 <col:3, col:13> col:13 used t440 'pthread_t':'unsigned long'
    |-CallExpr 0x5563ac8e6668 <line:824:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5563ac8e6650 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5563ac8e64d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5563ac8c5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5563ac8e6518 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5563ac8e64f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5563ac8e6458 't440' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5563ac8e66a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5563ac8e6590 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5563ac8e6568 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5563ac8e6530 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5563ac8e66c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5563ac8e65b0 <col:38> 'void *(void *)' Function 0x5563ac8dff78 'P1' 'void *(void *)'
    | `-ParenExpr 0x5563ac8e6630 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5563ac8e6608 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5563ac8e65d0 <col:51> 'int' 0
    |-DeclStmt 0x5563ac8e6750 <line:825:3, col:17>
    | `-VarDecl 0x5563ac8e66e8 <col:3, col:13> col:13 used t441 'pthread_t':'unsigned long'
    |-CallExpr 0x5563ac8e68f8 <line:826:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5563ac8e68e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5563ac8e6768 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5563ac8c5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5563ac8e67a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5563ac8e6788 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5563ac8e66e8 't441' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5563ac8e6938 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5563ac8e6820 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5563ac8e67f8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5563ac8e67c0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5563ac8e6950 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5563ac8e6840 <col:38> 'void *(void *)' Function 0x5563ac8e2fe8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5563ac8e68c0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5563ac8e6898 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5563ac8e6860 <col:51> 'int' 0
    |-DeclStmt 0x5563ac8e69e0 <line:827:3, col:17>
    | `-VarDecl 0x5563ac8e6978 <col:3, col:13> col:13 used t442 'pthread_t':'unsigned long'
    |-CallExpr 0x5563ac8e6b98 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5563ac8e6b80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5563ac8e69f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5563ac8c5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5563ac8e6a38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5563ac8e6a18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5563ac8e6978 't442' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5563ac8e6bd8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5563ac8e6ab0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5563ac8e6a88 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5563ac8e6a50 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5563ac8e6bf0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5563ac8e6ad0 <col:38> 'void *(void *)' Function 0x5563ac8e49c0 'P3' 'void *(void *)'
    | `-ParenExpr 0x5563ac8e6b50 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5563ac8e6b28 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5563ac8e6af0 <col:51> 'int' 0
    |-CallExpr 0x5563ac8e6c40 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5563ac8e6c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5563ac8e6c08 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5563ac8e6d10 <line:830:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5563ac8e6c60 <col:3> '_Bool' lvalue Var 0x5563ac8de9d0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5563ac8e6cf8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5563ac8e6cd8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5563ac8e6cc0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5563ac8e6c80 <col:21> 'int' lvalue Var 0x5563ac8de278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5563ac8e6ca0 <col:41> 'int' 4
    |-CallExpr 0x5563ac8e6d68 <line:831:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5563ac8e6d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5563ac8e6d30 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5563ac8e6de0 <line:832:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5563ac8e6dc8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5563ac8e6d88 <col:3> 'void (int)' Function 0x5563ac884790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5563ac8e6e20 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5563ac8e6e08 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5563ac8e6da8 <col:21> '_Bool' lvalue Var 0x5563ac8de9d0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5563ac8e6e70 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5563ac8e6e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5563ac8e6e38 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5563ac8e7158 <line:834:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5563ac8e6e90 <col:3> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
    | `-ConditionalOperator 0x5563ac8e7128 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5563ac8e6f50 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5563ac8e6f08 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5563ac8e6ef0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5563ac8e6eb0 <col:7> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5563ac8e6f38 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5563ac8e6f20 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5563ac8e6ed0 <col:25> '_Bool' lvalue Var 0x5563ac8dee30 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5563ac8e7110 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5563ac8e6f70 <col:42> 'int' lvalue Var 0x5563ac8df3e0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5563ac8e70f0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5563ac8e70c0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5563ac8e7030 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5563ac8e6fe8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5563ac8e6fd0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5563ac8e6f90 <col:55> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5563ac8e7018 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5563ac8e7000 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5563ac8e6fb0 <col:73> '_Bool' lvalue Var 0x5563ac8df088 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5563ac8e7090 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5563ac8e7050 <col:90> 'int' lvalue Var 0x5563ac8df4d8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5563ac8e70a8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5563ac8e7070 <col:102> 'int' lvalue Var 0x5563ac8deca0 'y' 'int'
    |-BinaryOperator 0x5563ac8e7360 <line:835:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5563ac8e7178 <col:3> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5563ac8e7348 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5563ac8e7318 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5563ac8e7238 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5563ac8e71f0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5563ac8e71d8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5563ac8e7198 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5563ac8e7220 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5563ac8e7208 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5563ac8e71b8 <col:38> '_Bool' lvalue Var 0x5563ac8dee30 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5563ac8e72d0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5563ac8e7288 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5563ac8e7258 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5563ac8e7300 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5563ac8e72e8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5563ac8e72b0 <col:66> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5563ac8e7648 <line:836:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5563ac8e7380 <col:3> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5563ac8e7630 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5563ac8e7600 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5563ac8e7520 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5563ac8e7440 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5563ac8e73f8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5563ac8e73e0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5563ac8e73a0 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5563ac8e7428 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5563ac8e7410 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5563ac8e73c0 <col:38> '_Bool' lvalue Var 0x5563ac8dee30 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5563ac8e7500 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5563ac8e74b8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5563ac8e74a0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5563ac8e7460 <col:56> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5563ac8e74e8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5563ac8e74d0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5563ac8e7480 <col:74> '_Bool' lvalue Var 0x5563ac8df088 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5563ac8e75b8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5563ac8e7570 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5563ac8e7540 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5563ac8e75e8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5563ac8e75d0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5563ac8e7598 <col:102> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5563ac8e7850 <line:837:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5563ac8e7668 <col:3> '_Bool' lvalue Var 0x5563ac8dee30 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5563ac8e7838 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5563ac8e7808 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5563ac8e7728 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5563ac8e76e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5563ac8e76c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5563ac8e7688 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5563ac8e7710 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5563ac8e76f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5563ac8e76a8 <col:38> '_Bool' lvalue Var 0x5563ac8dee30 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5563ac8e77c0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5563ac8e7778 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5563ac8e7748 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5563ac8e77f0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5563ac8e77d8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5563ac8e77a0 <col:66> '_Bool' lvalue Var 0x5563ac8dee30 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5563ac8e7b38 <line:838:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5563ac8e7870 <col:3> '_Bool' lvalue Var 0x5563ac8df088 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5563ac8e7b20 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5563ac8e7af0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5563ac8e7a10 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5563ac8e7930 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5563ac8e78e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5563ac8e78d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5563ac8e7890 <col:20> '_Bool' lvalue Var 0x5563ac8df458 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5563ac8e7918 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5563ac8e7900 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5563ac8e78b0 <col:38> '_Bool' lvalue Var 0x5563ac8dee30 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5563ac8e79f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5563ac8e79a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5563ac8e7990 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5563ac8e7950 <col:56> '_Bool' lvalue Var 0x5563ac8df550 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5563ac8e79d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5563ac8e79c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5563ac8e7970 <col:74> '_Bool' lvalue Var 0x5563ac8df088 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5563ac8e7aa8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5563ac8e7a60 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5563ac8e7a30 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5563ac8e7ad8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5563ac8e7ac0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5563ac8e7a88 <col:102> '_Bool' lvalue Var 0x5563ac8df088 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5563ac8e7ba8 <line:839:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5563ac8e7b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5563ac8e7b58 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5563ac8e7c00 <line:840:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5563ac8e7be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5563ac8e7bc8 <col:3> 'void ()' Function 0x5563ac884e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5563ac8e7f68 <line:841:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x5563ac8e7c20 <col:3> '_Bool' lvalue Var 0x5563ac8dea48 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5563ac8e7f50 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5563ac8e7f38 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5563ac8e7f18 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x5563ac8e7ef8 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x5563ac8e7e60 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x5563ac8e7dc8 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x5563ac8e7d30 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x5563ac8e7c98 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5563ac8e7c80 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5563ac8e7c40 <col:23> 'int' lvalue Var 0x5563ac8de398 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x5563ac8e7c60 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x5563ac8e7d10 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5563ac8e7cf8 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5563ac8e7cb8 <col:51> 'int' lvalue Var 0x5563ac8de4b8 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5563ac8e7cd8 <col:74> 'int' 0
    |         | | `-BinaryOperator 0x5563ac8e7da8 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5563ac8e7d90 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5563ac8e7d50 <col:79> 'int' lvalue Var 0x5563ac8de5d8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5563ac8e7d70 <col:102> 'int' 0
    |         | `-BinaryOperator 0x5563ac8e7e40 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5563ac8e7e28 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5563ac8e7de8 <col:107> 'int' lvalue Var 0x5563ac8de6f8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5563ac8e7e08 <col:130> 'int' 1
    |         `-BinaryOperator 0x5563ac8e7ed8 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x5563ac8e7ec0 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5563ac8e7e80 <col:135> 'int' lvalue Var 0x5563ac8de818 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5563ac8e7ea0 <col:158> 'int' 0
    |-CallExpr 0x5563ac8e7fc0 <line:842:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5563ac8e7fa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5563ac8e7f88 <col:3> 'void ()' Function 0x5563ac884f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5563ac8e8038 <line:843:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5563ac8e8020 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5563ac8e7fe0 <col:3> 'void (int)' Function 0x5563ac884bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5563ac8e8078 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5563ac8e8060 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5563ac8e8000 <col:21> '_Bool' lvalue Var 0x5563ac8dea48 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5563ac8e80b0 <line:844:3, col:10>
      `-IntegerLiteral 0x5563ac8e8090 <col:10> 'int' 0
